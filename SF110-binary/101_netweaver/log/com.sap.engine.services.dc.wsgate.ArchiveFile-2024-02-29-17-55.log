* EvoSuite 1.2.1-SNAPSHOT
* Going to generate test cases for class: com.sap.engine.services.dc.wsgate.ArchiveFile
* Starting Client-0
* Properties loaded from /home/ubuntu/UTestGen/Evaluation/getting_results/dataset/SF110/101_netweaver/evosuite-files/evosuite.properties
* Connecting to master process on port 17857
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
* Finished analyzing classpath
* Generating tests for class com.sap.engine.services.dc.wsgate.ArchiveFile
* Test criteria:
  - Branch Coverage
  - Line Coverage
  - Method-Output Coverage
  - Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 165
* Using seed 1709229334482
[Progress:>                             0%] [Cov:>                                  0%]* Starting evolution
* Initial Number of Goals in DynaMOSA = 50 / 165
[Progress:>                             0%] [Cov:=============================>     84%][Progress:>                             0%] [Cov:==============================>    86%][Progress:>                             1%] [Cov:==============================>    86%][Progress:>                             1%] [Cov:==============================>    86%][Progress:>                             1%] [Cov:==============================>    86%][Progress:>                             1%] [Cov:==============================>    86%][Progress:>                             1%] [Cov:==============================>    86%][Progress:>                             2%] [Cov:==============================>    86%][Progress:>                             2%] [Cov:==============================>    86%][Progress:>                             2%] [Cov:==============================>    86%][Progress:>                             2%] [Cov:==============================>    86%][Progress:>                             2%] [Cov:==============================>    86%][Progress:>                             2%] [Cov:==============================>    86%][Progress:>                             2%] [Cov:==============================>    86%][Progress:>                             2%] [Cov:==============================>    86%][Progress:>                             2%] [Cov:==============================>    86%][Progress:>                             3%] [Cov:==============================>    86%][Progress:>                             3%] [Cov:==============================>    86%][Progress:>                             3%] [Cov:==============================>    86%][Progress:>                             3%] [Cov:==============================>    86%][Progress:>                             3%] [Cov:==============================>    86%][Progress:>                             3%] [Cov:==============================>    86%][Progress:>                             3%] [Cov:==============================>    86%][Progress:>                             3%] [Cov:==============================>    86%][Progress:>                             3%] [Cov:==============================>    86%][Progress:>                             3%] [Cov:==============================>    86%][Progress:>                             3%] [Cov:==============================>    86%][Progress:>                             3%] [Cov:==============================>    86%][Progress:>                             3%] [Cov:==============================>    86%][Progress:>                             3%] [Cov:==============================>    86%][Progress:>                             3%] [Cov:==============================>    86%][Progress:=>                            4%] [Cov:==============================>    86%][Progress:=>                            4%] [Cov:==============================>    86%][Progress:=>                            4%] [Cov:==============================>    86%][Progress:=>                            4%] [Cov:==============================>    86%][Progress:=>                            4%] [Cov:==============================>    86%][Progress:=>                            4%] [Cov:==============================>    86%][Progress:=>                            4%] [Cov:==============================>    86%][Progress:=>                            4%] [Cov:==============================>    86%][Progress:=>                            4%] [Cov:==============================>    86%][Progress:=>                            4%] [Cov:==============================>    86%][Progress:=>                            4%] [Cov:==============================>    86%][Progress:=>                            4%] [Cov:==============================>    86%][Progress:=>                            4%] [Cov:==============================>    86%][Progress:=>                            5%] [Cov:==============================>    86%][Progress:=>                            5%] [Cov:==============================>    86%][Progress:=>                            5%] [Cov:==============================>    86%][Progress:=>                            5%] [Cov:==============================>    86%][Progress:=>                            5%] [Cov:==============================>    86%][Progress:=>                            5%] [Cov:==============================>    86%][Progress:=>                            5%] [Cov:==============================>    86%][Progress:=>                            5%] [Cov:==============================>    86%][Progress:=>                            5%] [Cov:==============================>    86%][Progress:=>                            5%] [Cov:==============================>    86%][Progress:=>                            5%] [Cov:==============================>    86%][Progress:=>                            5%] [Cov:==============================>    86%][Progress:=>                            5%] [Cov:==============================>    86%][Progress:=>                            5%] [Cov:==============================>    86%][Progress:=>                            6%] [Cov:==============================>    86%][Progress:=>                            6%] [Cov:==============================>    86%][Progress:=>                            6%] [Cov:==============================>    86%][Progress:=>                            6%] [Cov:==============================>    86%][Progress:=>                            6%] [Cov:==============================>    86%][Progress:=>                            6%] [Cov:==============================>    86%][Progress:=>                            6%] [Cov:==============================>    86%][Progress:=>                            6%] [Cov:==============================>    86%][Progress:=>                            6%] [Cov:==============================>    86%][Progress:=>                            6%] [Cov:==============================>    86%][Progress:=>                            6%] [Cov:==============================>    86%][Progress:=>                            6%] [Cov:==============================>    86%][Progress:=>                            6%] [Cov:==============================>    86%][Progress:=>                            6%] [Cov:==============================>    86%][Progress:==>                           7%] [Cov:==============================>    86%][Progress:==>                           7%] [Cov:==============================>    86%][Progress:==>                           7%] [Cov:==============================>    86%][Progress:==>                           7%] [Cov:==============================>    86%][Progress:==>                           7%] [Cov:==============================>    86%][Progress:==>                           7%] [Cov:==============================>    86%][Progress:==>                           7%] [Cov:==============================>    86%][Progress:==>                           7%] [Cov:==============================>    86%][Progress:==>                           7%] [Cov:==============================>    86%][Progress:==>                           7%] [Cov:==============================>    86%][Progress:==>                           7%] [Cov:==============================>    86%][Progress:==>                           7%] [Cov:==============================>    86%][Progress:==>                           7%] [Cov:==============================>    86%][Progress:==>                           8%] [Cov:==============================>    86%][Progress:==>                           8%] [Cov:==============================>    86%][Progress:==>                           8%] [Cov:==============================>    86%][Progress:==>                           8%] [Cov:==============================>    86%][Progress:==>                           8%] [Cov:==============================>    86%][Progress:==>                           8%] [Cov:==============================>    86%][Progress:==>                           8%] [Cov:==============================>    86%][Progress:==>                           8%] [Cov:==============================>    86%][Progress:==>                           8%] [Cov:==============================>    86%][Progress:==>                           8%] [Cov:==============================>    86%][Progress:==>                           8%] [Cov:==============================>    86%][Progress:==>                           8%] [Cov:==============================>    86%][Progress:==>                           8%] [Cov:==============================>    86%][Progress:==>                           8%] [Cov:==============================>    86%][Progress:==>                           8%] [Cov:==============================>    86%][Progress:==>                           8%] [Cov:==============================>    86%][Progress:==>                           8%] [Cov:==============================>    86%][Progress:==>                           9%] [Cov:==============================>    86%][Progress:==>                           9%] [Cov:==============================>    86%][Progress:==>                           9%] [Cov:==============================>    86%][Progress:==>                           9%] [Cov:==============================>    86%][Progress:==>                           9%] [Cov:==============================>    86%][Progress:==>                           9%] [Cov:==============================>    86%][Progress:==>                           9%] [Cov:==============================>    86%][Progress:==>                           9%] [Cov:==============================>    86%][Progress:==>                           9%] [Cov:==============================>    86%][Progress:==>                           9%] [Cov:==============================>    86%][Progress:==>                           9%] [Cov:==============================>    86%][Progress:==>                           9%] [Cov:==============================>    86%][Progress:==>                           9%] [Cov:==============================>    86%][Progress:==>                           9%] [Cov:==============================>    86%][Progress:==>                           9%] [Cov:==============================>    86%][Progress:==>                           9%] [Cov:==============================>    86%][Progress:===>                          10%] [Cov:==============================>    86%][Progress:===>                          10%] [Cov:==============================>    86%][Progress:===>                          10%] [Cov:==============================>    86%][Progress:===>                          10%] [Cov:==============================>    86%][Progress:===>                          10%] [Cov:==============================>    86%][Progress:===>                          10%] [Cov:==============================>    86%][Progress:===>                          10%] [Cov:==============================>    86%][Progress:===>                          10%] [Cov:==============================>    86%][Progress:===>                          10%] [Cov:==============================>    86%][Progress:===>                          10%] [Cov:==============================>    86%][Progress:===>                          10%] [Cov:==============================>    86%][Progress:===>                          10%] [Cov:==============================>    86%][Progress:===>                          11%] [Cov:==============================>    86%][Progress:===>                          11%] [Cov:==============================>    86%][Progress:===>                          11%] [Cov:==============================>    86%][Progress:===>                          11%] [Cov:==============================>    86%][Progress:===>                          11%] [Cov:==============================>    86%][Progress:===>                          11%] [Cov:==============================>    86%][Progress:===>                          11%] [Cov:==============================>    86%][Progress:===>                          11%] [Cov:==============================>    86%][Progress:===>                          11%] [Cov:==============================>    86%][Progress:===>                          11%] [Cov:==============================>    86%][Progress:===>                          11%] [Cov:==============================>    86%][Progress:===>                          11%] [Cov:==============================>    86%][Progress:===>                          11%] [Cov:==============================>    86%][Progress:===>                          11%] [Cov:==============================>    86%][Progress:===>                          11%] [Cov:==============================>    86%][Progress:===>                          11%] [Cov:==============================>    86%][Progress:===>                          11%] [Cov:==============================>    86%][Progress:===>                          12%] [Cov:==============================>    86%][Progress:===>                          12%] [Cov:==============================>    86%][Progress:===>                          12%] [Cov:==============================>    86%][Progress:===>                          12%] [Cov:==============================>    86%][Progress:===>                          12%] [Cov:==============================>    86%][Progress:===>                          12%] [Cov:==============================>    86%][Progress:===>                          12%] [Cov:==============================>    86%][Progress:===>                          12%] [Cov:==============================>    86%][Progress:===>                          12%] [Cov:==============================>    86%][Progress:===>                          12%] [Cov:==============================>    86%][Progress:===>                          12%] [Cov:==============================>    86%][Progress:===>                          12%] [Cov:==============================>    86%][Progress:===>                          12%] [Cov:==============================>    86%][Progress:===>                          12%] [Cov:==============================>    86%][Progress:===>                          12%] [Cov:==============================>    86%][Progress:===>                          12%] [Cov:==============================>    86%][Progress:===>                          13%] [Cov:==============================>    86%][Progress:===>                          13%] [Cov:==============================>    86%][Progress:===>                          13%] [Cov:==============================>    86%][Progress:===>                          13%] [Cov:==============================>    86%][Progress:===>                          13%] [Cov:==============================>    86%][Progress:===>                          13%] [Cov:==============================>    86%][Progress:===>                          13%] [Cov:==============================>    86%][Progress:===>                          13%] [Cov:==============================>    86%][Progress:===>                          13%] [Cov:==============================>    86%][Progress:===>                          13%] [Cov:==============================>    86%][Progress:===>                          13%] [Cov:==============================>    86%][Progress:===>                          13%] [Cov:==============================>    86%][Progress:===>                          13%] [Cov:==============================>    86%][Progress:===>                          13%] [Cov:==============================>    86%][Progress:===>                          13%] [Cov:==============================>    86%][Progress:====>                         14%] [Cov:==============================>    86%][Progress:====>                         14%] [Cov:==============================>    86%][Progress:====>                         14%] [Cov:==============================>    86%][Progress:====>                         14%] [Cov:==============================>    86%][Progress:====>                         14%] [Cov:==============================>    86%][Progress:====>                         14%] [Cov:==============================>    86%][Progress:====>                         14%] [Cov:==============================>    86%][Progress:====>                         14%] [Cov:==============================>    86%][Progress:====>                         14%] [Cov:==============================>    86%][Progress:====>                         14%] [Cov:==============================>    86%][Progress:====>                         14%] [Cov:==============================>    86%][Progress:====>                         14%] [Cov:==============================>    86%][Progress:====>                         15%] [Cov:==============================>    86%][Progress:====>                         15%] [Cov:==============================>    86%][Progress:====>                         15%] [Cov:==============================>    86%][Progress:====>                         15%] [Cov:==============================>    86%][Progress:====>                         15%] [Cov:==============================>    86%][Progress:====>                         15%] [Cov:==============================>    86%][Progress:====>                         15%] [Cov:==============================>    86%][Progress:====>                         15%] [Cov:==============================>    86%][Progress:====>                         15%] [Cov:==============================>    86%][Progress:====>                         15%] [Cov:==============================>    86%][Progress:====>                         15%] [Cov:==============================>    86%][Progress:====>                         15%] [Cov:==============================>    86%][Progress:====>                         16%] [Cov:==============================>    86%][Progress:====>                         16%] [Cov:==============================>    86%][Progress:====>                         16%] [Cov:==============================>    86%][Progress:====>                         16%] [Cov:==============================>    86%][Progress:====>                         16%] [Cov:==============================>    86%][Progress:====>                         16%] [Cov:==============================>    86%][Progress:====>                         16%] [Cov:==============================>    86%][Progress:====>                         16%] [Cov:==============================>    86%][Progress:====>                         16%] [Cov:==============================>    86%][Progress:====>                         16%] [Cov:==============================>    86%][Progress:====>                         16%] [Cov:==============================>    86%][Progress:====>                         16%] [Cov:==============================>    86%][Progress:====>                         16%] [Cov:==============================>    86%][Progress:=====>                        17%] [Cov:==============================>    86%][Progress:=====>                        17%] [Cov:==============================>    86%][Progress:=====>                        17%] [Cov:==============================>    86%][Progress:=====>                        17%] [Cov:==============================>    86%][Progress:=====>                        17%] [Cov:==============================>    86%][Progress:=====>                        17%] [Cov:==============================>    86%][Progress:=====>                        17%] [Cov:==============================>    86%][Progress:=====>                        17%] [Cov:==============================>    86%][Progress:=====>                        17%] [Cov:==============================>    86%][Progress:=====>                        17%] [Cov:==============================>    86%][Progress:=====>                        17%] [Cov:==============================>    86%][Progress:=====>                        17%] [Cov:==============================>    86%][Progress:=====>                        17%] [Cov:==============================>    86%][Progress:=====>                        17%] [Cov:==============================>    86%][Progress:=====>                        17%] [Cov:==============================>    86%][Progress:=====>                        18%] [Cov:==============================>    86%][Progress:=====>                        18%] [Cov:==============================>    86%][Progress:=====>                        18%] [Cov:==============================>    86%][Progress:=====>                        18%] [Cov:==============================>    86%][Progress:=====>                        18%] [Cov:==============================>    86%][Progress:=====>                        18%] [Cov:==============================>    86%][Progress:=====>                        18%] [Cov:==============================>    86%][Progress:=====>                        18%] [Cov:==============================>    86%][Progress:=====>                        18%] [Cov:==============================>    86%][Progress:=====>                        18%] [Cov:==============================>    86%][Progress:=====>                        18%] [Cov:==============================>    86%][Progress:=====>                        18%] [Cov:==============================>    86%][Progress:=====>                        18%] [Cov:==============================>    86%][Progress:=====>                        18%] [Cov:==============================>    86%][Progress:=====>                        18%] [Cov:==============================>    86%][Progress:=====>                        18%] [Cov:==============================>    86%][Progress:=====>                        18%] [Cov:==============================>    86%][Progress:=====>                        18%] [Cov:==============================>    86%][Progress:=====>                        19%] [Cov:==============================>    86%][Progress:=====>                        19%] [Cov:==============================>    86%][Progress:=====>                        19%] [Cov:==============================>    86%][Progress:=====>                        19%] [Cov:==============================>    86%][Progress:=====>                        19%] [Cov:==============================>    86%][Progress:=====>                        19%] [Cov:==============================>    86%][Progress:=====>                        19%] [Cov:==============================>    86%][Progress:=====>                        19%] [Cov:==============================>    86%][Progress:=====>                        19%] [Cov:==============================>    86%][Progress:=====>                        19%] [Cov:==============================>    86%][Progress:=====>                        19%] [Cov:==============================>    86%][Progress:=====>                        19%] [Cov:==============================>    86%][Progress:=====>                        19%] [Cov:==============================>    86%][Progress:=====>                        19%] [Cov:==============================>    86%][Progress:=====>                        19%] [Cov:==============================>    86%][Progress:=====>                        19%] [Cov:==============================>    86%][Progress:=====>                        19%] [Cov:==============================>    86%][Progress:======>                       20%] [Cov:==============================>    86%][Progress:======>                       20%] [Cov:==============================>    86%][Progress:======>                       20%] [Cov:==============================>    86%][Progress:======>                       20%] [Cov:==============================>    86%][Progress:======>                       20%] [Cov:==============================>    86%][Progress:======>                       20%] [Cov:==============================>    86%][Progress:======>                       20%] [Cov:==============================>    86%][Progress:======>                       20%] [Cov:==============================>    86%][Progress:======>                       20%] [Cov:==============================>    86%][Progress:======>                       20%] [Cov:==============================>    86%][Progress:======>                       20%] [Cov:==============================>    86%][Progress:======>                       20%] [Cov:==============================>    86%][Progress:======>                       20%] [Cov:==============================>    86%][Progress:======>                       20%] [Cov:==============================>    86%][Progress:======>                       21%] [Cov:==============================>    86%][Progress:======>                       21%] [Cov:==============================>    86%][Progress:======>                       21%] [Cov:==============================>    86%][Progress:======>                       21%] [Cov:==============================>    86%][Progress:======>                       21%] [Cov:==============================>    86%][Progress:======>                       21%] [Cov:==============================>    86%][Progress:======>                       21%] [Cov:==============================>    86%][Progress:======>                       21%] [Cov:==============================>    86%][Progress:======>                       21%] [Cov:==============================>    86%][Progress:======>                       21%] [Cov:==============================>    86%][Progress:======>                       21%] [Cov:==============================>    86%][Progress:======>                       21%] [Cov:==============================>    86%][Progress:======>                       21%] [Cov:==============================>    86%][Progress:======>                       21%] [Cov:==============================>    86%][Progress:======>                       22%] [Cov:==============================>    86%][Progress:======>                       22%] [Cov:==============================>    86%][Progress:======>                       22%] [Cov:==============================>    86%][Progress:======>                       22%] [Cov:==============================>    86%][Progress:======>                       22%] [Cov:==============================>    86%][Progress:======>                       22%] [Cov:==============================>    86%][Progress:======>                       22%] [Cov:==============================>    86%][Progress:======>                       22%] [Cov:==============================>    86%][Progress:======>                       22%] [Cov:==============================>    86%][Progress:======>                       22%] [Cov:==============================>    86%][Progress:======>                       22%] [Cov:==============================>    86%][Progress:======>                       22%] [Cov:==============================>    86%][Progress:======>                       22%] [Cov:==============================>    86%][Progress:======>                       22%] [Cov:==============================>    86%][Progress:======>                       22%] [Cov:==============================>    86%][Progress:======>                       22%] [Cov:==============================>    86%][Progress:======>                       22%] [Cov:==============================>    86%][Progress:======>                       22%] [Cov:==============================>    86%][Progress:======>                       22%] [Cov:==============================>    86%][Progress:======>                       23%] [Cov:==============================>    86%][Progress:======>                       23%] [Cov:==============================>    86%][Progress:======>                       23%] [Cov:==============================>    86%][Progress:======>                       23%] [Cov:==============================>    86%][Progress:======>                       23%] [Cov:==============================>    86%][Progress:======>                       23%] [Cov:==============================>    86%][Progress:======>                       23%] [Cov:==============================>    86%][Progress:======>                       23%] [Cov:==============================>    86%][Progress:======>                       23%] [Cov:==============================>    86%][Progress:======>                       23%] [Cov:==============================>    86%][Progress:======>                       23%] [Cov:==============================>    86%][Progress:======>                       23%] [Cov:==============================>    86%][Progress:======>                       23%] [Cov:==============================>    86%][Progress:======>                       23%] [Cov:==============================>    86%][Progress:======>                       23%] [Cov:==============================>    86%][Progress:======>                       23%] [Cov:==============================>    86%][Progress:======>                       23%] [Cov:==============================>    86%][Progress:======>                       23%] [Cov:==============================>    86%][Progress:======>                       23%] [Cov:==============================>    86%][Progress:======>                       23%] [Cov:==============================>    86%][Progress:======>                       23%] [Cov:==============================>    86%][Progress:======>                       23%] [Cov:==============================>    86%][Progress:======>                       23%] [Cov:==============================>    86%][Progress:======>                       23%] [Cov:==============================>    86%][Progress:======>                       23%] [Cov:==============================>    86%][Progress:=======>                      24%] [Cov:==============================>    86%][Progress:=======>                      24%] [Cov:==============================>    86%][Progress:=======>                      24%] [Cov:==============================>    86%][Progress:=======>                      24%] [Cov:==============================>    86%][Progress:=======>                      24%] [Cov:==============================>    86%][Progress:=======>                      24%] [Cov:==============================>    86%][Progress:=======>                      24%] [Cov:==============================>    86%][Progress:=======>                      24%] [Cov:==============================>    86%][Progress:=======>                      24%] [Cov:==============================>    86%][Progress:=======>                      24%] [Cov:==============================>    86%][Progress:=======>                      24%] [Cov:==============================>    86%][Progress:=======>                      24%] [Cov:==============================>    86%][Progress:=======>                      24%] [Cov:==============================>    86%][Progress:=======>                      24%] [Cov:==============================>    86%][Progress:=======>                      24%] [Cov:==============================>    86%][Progress:=======>                      24%] [Cov:==============================>    86%][Progress:=======>                      24%] [Cov:==============================>    86%][Progress:=======>                      24%] [Cov:==============================>    86%][Progress:=======>                      24%] [Cov:==============================>    86%][Progress:=======>                      24%] [Cov:==============================>    86%][Progress:=======>                      25%] [Cov:==============================>    86%][Progress:=======>                      25%] [Cov:==============================>    86%][Progress:=======>                      25%] [Cov:==============================>    86%][Progress:=======>                      25%] [Cov:==============================>    86%][Progress:=======>                      25%] [Cov:==============================>    86%][Progress:=======>                      25%] [Cov:==============================>    86%][Progress:=======>                      25%] [Cov:==============================>    86%][Progress:=======>                      25%] [Cov:==============================>    86%][Progress:=======>                      25%] [Cov:==============================>    86%][Progress:=======>                      25%] [Cov:==============================>    86%][Progress:=======>                      25%] [Cov:==============================>    86%][Progress:=======>                      25%] [Cov:==============================>    86%][Progress:=======>                      25%] [Cov:==============================>    86%][Progress:=======>                      25%] [Cov:==============================>    86%][Progress:=======>                      25%] [Cov:==============================>    86%][Progress:=======>                      25%] [Cov:==============================>    86%][Progress:=======>                      25%] [Cov:==============================>    86%][Progress:=======>                      26%] [Cov:==============================>    86%][Progress:=======>                      26%] [Cov:==============================>    86%][Progress:=======>                      26%] [Cov:==============================>    86%][Progress:=======>                      26%] [Cov:==============================>    86%][Progress:=======>                      26%] [Cov:==============================>    86%][Progress:=======>                      26%] [Cov:==============================>    86%][Progress:=======>                      26%] [Cov:==============================>    86%][Progress:=======>                      26%] [Cov:==============================>    86%][Progress:=======>                      26%] [Cov:==============================>    86%][Progress:=======>                      26%] [Cov:==============================>    86%][Progress:=======>                      26%] [Cov:==============================>    86%][Progress:=======>                      26%] [Cov:==============================>    86%][Progress:=======>                      26%] [Cov:==============================>    86%][Progress:=======>                      26%] [Cov:==============================>    86%][Progress:=======>                      26%] [Cov:==============================>    86%][Progress:=======>                      26%] [Cov:==============================>    86%][Progress:=======>                      26%] [Cov:==============================>    86%][Progress:=======>                      26%] [Cov:==============================>    86%][Progress:========>                     27%] [Cov:==============================>    86%][Progress:========>                     27%] [Cov:==============================>    86%][Progress:========>                     27%] [Cov:==============================>    86%][Progress:========>                     27%] [Cov:==============================>    86%][Progress:========>                     27%] [Cov:==============================>    86%][Progress:========>                     27%] [Cov:==============================>    86%][Progress:========>                     27%] [Cov:==============================>    86%][Progress:========>                     27%] [Cov:==============================>    86%][Progress:========>                     27%] [Cov:==============================>    86%][Progress:========>                     27%] [Cov:==============================>    86%][Progress:========>                     27%] [Cov:==============================>    86%][Progress:========>                     27%] [Cov:==============================>    86%][Progress:========>                     27%] [Cov:==============================>    86%][Progress:========>                     27%] [Cov:==============================>    86%][Progress:========>                     27%] [Cov:==============================>    86%][Progress:========>                     27%] [Cov:==============================>    86%][Progress:========>                     28%] [Cov:==============================>    86%][Progress:========>                     28%] [Cov:==============================>    86%][Progress:========>                     28%] [Cov:==============================>    86%][Progress:========>                     28%] [Cov:==============================>    86%][Progress:========>                     28%] [Cov:==============================>    86%][Progress:========>                     28%] [Cov:==============================>    86%][Progress:========>                     28%] [Cov:==============================>    86%][Progress:========>                     28%] [Cov:==============================>    86%][Progress:========>                     28%] [Cov:==============================>    86%][Progress:========>                     28%] [Cov:==============================>    86%][Progress:========>                     28%] [Cov:==============================>    86%][Progress:========>                     28%] [Cov:==============================>    86%][Progress:========>                     28%] [Cov:==============================>    86%][Progress:========>                     28%] [Cov:==============================>    86%][Progress:========>                     28%] [Cov:==============================>    86%][Progress:========>                     28%] [Cov:==============================>    86%][Progress:========>                     28%] [Cov:==============================>    86%][Progress:========>                     29%] [Cov:==============================>    86%][Progress:========>                     29%] [Cov:==============================>    86%][Progress:========>                     29%] [Cov:==============================>    86%][Progress:========>                     29%] [Cov:==============================>    86%][Progress:========>                     29%] [Cov:==============================>    86%][Progress:========>                     29%] [Cov:==============================>    86%][Progress:========>                     29%] [Cov:==============================>    86%][Progress:========>                     29%] [Cov:==============================>    86%][Progress:========>                     29%] [Cov:==============================>    86%][Progress:========>                     29%] [Cov:==============================>    86%][Progress:========>                     29%] [Cov:==============================>    86%][Progress:========>                     29%] [Cov:==============================>    86%][Progress:========>                     29%] [Cov:==============================>    86%][Progress:========>                     29%] [Cov:==============================>    86%][Progress:========>                     29%] [Cov:==============================>    86%][Progress:========>                     29%] [Cov:==============================>    86%][Progress:========>                     29%] [Cov:==============================>    86%][Progress:=========>                    30%] [Cov:==============================>    86%][Progress:=========>                    30%] [Cov:==============================>    86%][Progress:=========>                    30%] [Cov:==============================>    86%][Progress:=========>                    30%] [Cov:==============================>    86%][Progress:=========>                    30%] [Cov:==============================>    86%][Progress:=========>                    30%] [Cov:==============================>    86%][Progress:=========>                    30%] [Cov:==============================>    86%][Progress:=========>                    30%] [Cov:==============================>    86%][Progress:=========>                    30%] [Cov:==============================>    86%][Progress:=========>                    30%] [Cov:==============================>    86%][Progress:=========>                    30%] [Cov:==============================>    86%][Progress:=========>                    30%] [Cov:==============================>    86%][Progress:=========>                    30%] [Cov:==============================>    86%][Progress:=========>                    30%] [Cov:==============================>    86%][Progress:=========>                    30%] [Cov:==============================>    86%][Progress:=========>                    30%] [Cov:==============================>    86%][Progress:=========>                    30%] [Cov:==============================>    86%][Progress:=========>                    30%] [Cov:==============================>    86%][Progress:=========>                    31%] [Cov:==============================>    86%][Progress:=========>                    31%] [Cov:==============================>    86%][Progress:=========>                    31%] [Cov:==============================>    86%][Progress:=========>                    31%] [Cov:==============================>    86%][Progress:=========>                    31%] [Cov:==============================>    86%][Progress:=========>                    31%] [Cov:==============================>    86%][Progress:=========>                    31%] [Cov:==============================>    86%][Progress:=========>                    31%] [Cov:==============================>    86%][Progress:=========>                    31%] [Cov:==============================>    86%][Progress:=========>                    31%] [Cov:==============================>    86%][Progress:=========>                    31%] [Cov:==============================>    86%][Progress:=========>                    31%] [Cov:==============================>    86%][Progress:=========>                    31%] [Cov:==============================>    86%][Progress:=========>                    31%] [Cov:==============================>    86%][Progress:=========>                    31%] [Cov:==============================>    86%][Progress:=========>                    31%] [Cov:==============================>    86%][Progress:=========>                    31%] [Cov:==============================>    86%][Progress:=========>                    31%] [Cov:==============================>    86%][Progress:=========>                    32%] [Cov:==============================>    86%][Progress:=========>                    32%] [Cov:==============================>    86%][Progress:=========>                    32%] [Cov:==============================>    86%][Progress:=========>                    32%] [Cov:==============================>    86%][Progress:=========>                    32%] [Cov:==============================>    86%][Progress:=========>                    32%] [Cov:==============================>    86%][Progress:=========>                    32%] [Cov:==============================>    86%][Progress:=========>                    32%] [Cov:==============================>    86%][Progress:=========>                    32%] [Cov:==============================>    86%][Progress:=========>                    32%] [Cov:==============================>    86%][Progress:=========>                    32%] [Cov:==============================>    86%][Progress:=========>                    32%] [Cov:==============================>    86%][Progress:=========>                    32%] [Cov:==============================>    86%][Progress:=========>                    32%] [Cov:==============================>    86%][Progress:=========>                    32%] [Cov:==============================>    86%][Progress:=========>                    32%] [Cov:==============================>    86%][Progress:=========>                    32%] [Cov:==============================>    86%][Progress:=========>                    33%] [Cov:==============================>    86%][Progress:=========>                    33%] [Cov:==============================>    86%][Progress:=========>                    33%] [Cov:==============================>    86%][Progress:=========>                    33%] [Cov:==============================>    86%][Progress:=========>                    33%] [Cov:==============================>    86%][Progress:=========>                    33%] [Cov:==============================>    86%][Progress:=========>                    33%] [Cov:==============================>    86%][Progress:=========>                    33%] [Cov:==============================>    86%][Progress:=========>                    33%] [Cov:==============================>    86%][Progress:=========>                    33%] [Cov:==============================>    86%][Progress:=========>                    33%] [Cov:==============================>    86%][Progress:=========>                    33%] [Cov:==============================>    86%][Progress:=========>                    33%] [Cov:==============================>    86%][Progress:=========>                    33%] [Cov:==============================>    86%][Progress:=========>                    33%] [Cov:==============================>    86%][Progress:=========>                    33%] [Cov:==============================>    86%][Progress:=========>                    33%] [Cov:==============================>    86%][Progress:=========>                    33%] [Cov:==============================>    86%][Progress:=========>                    33%] [Cov:==============================>    86%][Progress:==========>                   34%] [Cov:==============================>    86%][Progress:==========>                   34%] [Cov:==============================>    86%][Progress:==========>                   34%] [Cov:==============================>    86%][Progress:==========>                   34%] [Cov:==============================>    86%][Progress:==========>                   34%] [Cov:==============================>    86%][Progress:==========>                   34%] [Cov:==============================>    86%][Progress:==========>                   34%] [Cov:==============================>    86%][Progress:==========>                   34%] [Cov:==============================>    86%][Progress:==========>                   34%] [Cov:==============================>    86%][Progress:==========>                   34%] [Cov:==============================>    86%][Progress:==========>                   34%] [Cov:==============================>    86%][Progress:==========>                   34%] [Cov:==============================>    86%][Progress:==========>                   34%] [Cov:==============================>    86%][Progress:==========>                   34%] [Cov:==============================>    86%][Progress:==========>                   34%] [Cov:==============================>    86%][Progress:==========>                   34%] [Cov:==============================>    86%][Progress:==========>                   34%] [Cov:==============================>    86%][Progress:==========>                   34%] [Cov:==============================>    86%][Progress:==========>                   34%] [Cov:==============================>    86%][Progress:==========>                   34%] [Cov:==============================>    86%][Progress:==========>                   35%] [Cov:==============================>    86%][Progress:==========>                   35%] [Cov:==============================>    86%][Progress:==========>                   35%] [Cov:==============================>    86%][Progress:==========>                   35%] [Cov:==============================>    86%][Progress:==========>                   35%] [Cov:==============================>    86%][Progress:==========>                   35%] [Cov:==============================>    86%][Progress:==========>                   35%] [Cov:==============================>    86%][Progress:==========>                   35%] [Cov:==============================>    86%][Progress:==========>                   35%] [Cov:==============================>    86%][Progress:==========>                   35%] [Cov:==============================>    86%][Progress:==========>                   35%] [Cov:==============================>    86%][Progress:==========>                   35%] [Cov:==============================>    86%][Progress:==========>                   35%] [Cov:==============================>    86%][Progress:==========>                   36%] [Cov:==============================>    86%][Progress:==========>                   36%] [Cov:==============================>    86%][Progress:==========>                   36%] [Cov:==============================>    86%][Progress:==========>                   36%] [Cov:==============================>    86%][Progress:==========>                   36%] [Cov:==============================>    86%][Progress:==========>                   36%] [Cov:==============================>    86%][Progress:==========>                   36%] [Cov:==============================>    86%][Progress:==========>                   36%] [Cov:==============================>    86%][Progress:==========>                   36%] [Cov:==============================>    86%][Progress:===========>                  37%] [Cov:==============================>    86%][Progress:===========>                  37%] [Cov:==============================>    86%][Progress:===========>                  37%] [Cov:==============================>    86%][Progress:===========>                  37%] [Cov:==============================>    86%][Progress:===========>                  37%] [Cov:==============================>    86%][Progress:===========>                  37%] [Cov:==============================>    86%][Progress:===========>                  37%] [Cov:==============================>    86%][Progress:===========>                  37%] [Cov:==============================>    86%][Progress:===========>                  37%] [Cov:==============================>    86%][Progress:===========>                  38%] [Cov:==============================>    86%][Progress:===========>                  38%] [Cov:==============================>    86%][Progress:===========>                  38%] [Cov:==============================>    86%][Progress:===========>                  38%] [Cov:==============================>    86%][Progress:===========>                  38%] [Cov:==============================>    86%][Progress:===========>                  38%] [Cov:==============================>    86%][Progress:===========>                  38%] [Cov:==============================>    86%][Progress:===========>                  38%] [Cov:==============================>    86%][Progress:===========>                  39%] [Cov:==============================>    86%][Progress:===========>                  39%] [Cov:==============================>    86%][Progress:===========>                  39%] [Cov:==============================>    86%][Progress:===========>                  39%] [Cov:==============================>    86%][Progress:===========>                  39%] [Cov:==============================>    86%][Progress:===========>                  39%] [Cov:==============================>    86%][Progress:===========>                  39%] [Cov:==============================>    86%][Progress:===========>                  39%] [Cov:==============================>    86%][Progress:===========>                  39%] [Cov:==============================>    86%][Progress:===========>                  39%] [Cov:==============================>    86%][Progress:============>                 40%] [Cov:==============================>    86%][Progress:============>                 40%] [Cov:==============================>    86%][Progress:============>                 40%] [Cov:==============================>    86%][Progress:============>                 40%] [Cov:==============================>    86%][Progress:============>                 40%] [Cov:==============================>    86%][Progress:============>                 40%] [Cov:==============================>    86%][Progress:============>                 40%] [Cov:==============================>    86%][Progress:============>                 41%] [Cov:==============================>    86%][Progress:============>                 41%] [Cov:==============================>    86%][Progress:============>                 41%] [Cov:==============================>    86%][Progress:============>                 41%] [Cov:==============================>    86%][Progress:============>                 41%] [Cov:==============================>    86%][Progress:============>                 41%] [Cov:==============================>    86%][Progress:============>                 41%] [Cov:==============================>    86%][Progress:============>                 41%] [Cov:==============================>    86%][Progress:============>                 41%] [Cov:==============================>    86%][Progress:============>                 42%] [Cov:==============================>    86%][Progress:============>                 42%] [Cov:==============================>    86%][Progress:============>                 42%] [Cov:==============================>    86%][Progress:============>                 42%] [Cov:==============================>    86%][Progress:============>                 42%] [Cov:==============================>    86%][Progress:============>                 42%] [Cov:==============================>    86%][Progress:============>                 42%] [Cov:==============================>    86%][Progress:============>                 42%] [Cov:==============================>    86%][Progress:============>                 43%] [Cov:==============================>    86%][Progress:============>                 43%] [Cov:==============================>    86%][Progress:============>                 43%] [Cov:==============================>    86%][Progress:============>                 43%] [Cov:==============================>    86%][Progress:============>                 43%] [Cov:==============================>    86%][Progress:============>                 43%] [Cov:==============================>    86%][Progress:============>                 43%] [Cov:==============================>    86%][Progress:============>                 43%] [Cov:==============================>    86%][Progress:============>                 43%] [Cov:==============================>    86%][Progress:============>                 43%] [Cov:==============================>    86%][Progress:============>                 43%] [Cov:==============================>    86%][Progress:=============>                44%] [Cov:==============================>    86%][Progress:=============>                44%] [Cov:==============================>    86%][Progress:=============>                44%] [Cov:==============================>    86%][Progress:=============>                44%] [Cov:==============================>    86%][Progress:=============>                44%] [Cov:==============================>    86%][Progress:=============>                44%] [Cov:==============================>    86%][Progress:=============>                44%] [Cov:==============================>    86%][Progress:=============>                44%] [Cov:==============================>    86%][Progress:=============>                44%] [Cov:==============================>    86%][Progress:=============>                44%] [Cov:==============================>    86%][Progress:=============>                45%] [Cov:==============================>    86%][Progress:=============>                45%] [Cov:==============================>    86%][Progress:=============>                45%] [Cov:==============================>    86%][Progress:=============>                45%] [Cov:==============================>    86%][Progress:=============>                45%] [Cov:==============================>    86%][Progress:=============>                45%] [Cov:==============================>    86%][Progress:=============>                45%] [Cov:==============================>    86%][Progress:=============>                45%] [Cov:==============================>    86%][Progress:=============>                45%] [Cov:==============================>    86%][Progress:=============>                46%] [Cov:==============================>    86%][Progress:=============>                46%] [Cov:==============================>    86%][Progress:=============>                46%] [Cov:==============================>    86%][Progress:=============>                46%] [Cov:==============================>    86%][Progress:=============>                46%] [Cov:==============================>    86%][Progress:=============>                46%] [Cov:==============================>    86%][Progress:=============>                46%] [Cov:==============================>    86%][Progress:=============>                46%] [Cov:==============================>    86%][Progress:==============>               47%] [Cov:==============================>    86%][Progress:==============>               47%] [Cov:==============================>    86%][Progress:==============>               47%] [Cov:==============================>    86%][Progress:==============>               47%] [Cov:==============================>    86%][Progress:==============>               47%] [Cov:==============================>    86%][Progress:==============>               47%] [Cov:==============================>    86%][Progress:==============>               47%] [Cov:==============================>    86%][Progress:==============>               48%] [Cov:==============================>    86%][Progress:==============>               48%] [Cov:==============================>    86%][Progress:==============>               48%] [Cov:==============================>    86%][Progress:==============>               48%] [Cov:==============================>    86%][Progress:==============>               48%] [Cov:==============================>    86%][Progress:==============>               48%] [Cov:==============================>    86%][Progress:==============>               48%] [Cov:==============================>    86%][Progress:==============>               48%] [Cov:==============================>    86%][Progress:==============>               49%] [Cov:==============================>    86%][Progress:==============>               49%] [Cov:==============================>    86%][Progress:==============>               49%] [Cov:==============================>    86%][Progress:==============>               49%] [Cov:==============================>    86%][Progress:==============>               49%] [Cov:==============================>    86%][Progress:==============>               49%] [Cov:==============================>    86%][Progress:===============>              50%] [Cov:==============================>    86%][Progress:===============>              50%] [Cov:==============================>    86%][Progress:===============>              50%] [Cov:==============================>    86%][Progress:===============>              50%] [Cov:==============================>    86%][Progress:===============>              50%] [Cov:==============================>    86%][Progress:===============>              50%] [Cov:==============================>    86%][Progress:===============>              50%] [Cov:==============================>    86%][Progress:===============>              50%] [Cov:==============================>    86%][Progress:===============>              51%] [Cov:==============================>    86%][Progress:===============>              51%] [Cov:==============================>    86%][Progress:===============>              51%] [Cov:==============================>    86%][Progress:===============>              51%] [Cov:==============================>    86%][Progress:===============>              51%] [Cov:==============================>    86%][Progress:===============>              51%] [Cov:==============================>    86%][Progress:===============>              51%] [Cov:==============================>    86%][Progress:===============>              51%] [Cov:==============================>    86%][Progress:===============>              52%] [Cov:==============================>    86%][Progress:===============>              52%] [Cov:==============================>    86%][Progress:===============>              52%] [Cov:==============================>    86%][Progress:===============>              52%] [Cov:==============================>    86%][Progress:===============>              52%] [Cov:==============================>    86%][Progress:===============>              52%] [Cov:==============================>    86%][Progress:===============>              52%] [Cov:==============================>    86%][Progress:===============>              52%] [Cov:==============================>    86%][Progress:===============>              52%] [Cov:==============================>    86%][Progress:===============>              52%] [Cov:==============================>    86%][Progress:===============>              52%] [Cov:==============================>    86%][Progress:===============>              52%] [Cov:==============================>    86%][Progress:===============>              52%] [Cov:==============================>    86%][Progress:===============>              52%] [Cov:==============================>    86%][Progress:===============>              52%] [Cov:==============================>    86%][Progress:===============>              52%] [Cov:==============================>    86%][Progress:===============>              53%] [Cov:==============================>    86%][Progress:===============>              53%] [Cov:==============================>    86%][Progress:===============>              53%] [Cov:==============================>    86%][Progress:===============>              53%] [Cov:==============================>    86%][Progress:===============>              53%] [Cov:==============================>    86%][Progress:===============>              53%] [Cov:==============================>    86%][Progress:===============>              53%] [Cov:==============================>    86%][Progress:===============>              53%] [Cov:==============================>    86%][Progress:===============>              53%] [Cov:==============================>    86%][Progress:===============>              53%] [Cov:==============================>    86%][Progress:===============>              53%] [Cov:==============================>    86%][Progress:===============>              53%] [Cov:==============================>    86%][Progress:===============>              53%] [Cov:==============================>    86%][Progress:===============>              53%] [Cov:==============================>    86%][Progress:===============>              53%] [Cov:==============================>    86%][Progress:===============>              53%] [Cov:==============================>    86%][Progress:===============>              53%] [Cov:==============================>    86%][Progress:================>             54%] [Cov:==============================>    86%][Progress:================>             54%] [Cov:==============================>    86%][Progress:================>             54%] [Cov:==============================>    86%][Progress:================>             54%] [Cov:==============================>    86%][Progress:================>             54%] [Cov:==============================>    86%][Progress:================>             54%] [Cov:==============================>    86%][Progress:================>             54%] [Cov:==============================>    86%][Progress:================>             54%] [Cov:==============================>    86%][Progress:================>             54%] [Cov:==============================>    86%][Progress:================>             54%] [Cov:==============================>    86%][Progress:================>             54%] [Cov:==============================>    86%][Progress:================>             54%] [Cov:==============================>    86%][Progress:================>             54%] [Cov:==============================>    86%][Progress:================>             54%] [Cov:==============================>    86%][Progress:================>             54%] [Cov:==============================>    86%][Progress:================>             54%] [Cov:==============================>    86%][Progress:================>             54%] [Cov:==============================>    86%][Progress:================>             54%] [Cov:==============================>    86%][Progress:================>             54%] [Cov:==============================>    86%][Progress:================>             54%] [Cov:==============================>    86%][Progress:================>             54%] [Cov:==============================>    86%][Progress:================>             55%] [Cov:==============================>    86%][Progress:================>             55%] [Cov:==============================>    86%][Progress:================>             55%] [Cov:==============================>    86%][Progress:================>             55%] [Cov:==============================>    86%][Progress:================>             55%] [Cov:==============================>    86%][Progress:================>             55%] [Cov:==============================>    86%][Progress:================>             55%] [Cov:==============================>    86%][Progress:================>             55%] [Cov:==============================>    86%][Progress:================>             55%] [Cov:==============================>    86%][Progress:================>             55%] [Cov:==============================>    86%][Progress:================>             55%] [Cov:==============================>    86%][Progress:================>             55%] [Cov:==============================>    86%][Progress:================>             55%] [Cov:==============================>    86%][Progress:================>             55%] [Cov:==============================>    86%][Progress:================>             55%] [Cov:==============================>    86%][Progress:================>             55%] [Cov:==============================>    86%][Progress:================>             55%] [Cov:==============================>    86%][Progress:================>             55%] [Cov:==============================>    86%][Progress:================>             55%] [Cov:==============================>    86%][Progress:================>             56%] [Cov:==============================>    86%][Progress:================>             56%] [Cov:==============================>    86%][Progress:================>             56%] [Cov:==============================>    86%][Progress:================>             56%] [Cov:==============================>    86%][Progress:================>             56%] [Cov:==============================>    86%][Progress:================>             56%] [Cov:==============================>    86%][Progress:================>             56%] [Cov:==============================>    86%][Progress:================>             56%] [Cov:==============================>    86%][Progress:================>             56%] [Cov:==============================>    86%][Progress:================>             56%] [Cov:==============================>    86%][Progress:================>             56%] [Cov:==============================>    86%][Progress:================>             56%] [Cov:==============================>    86%][Progress:================>             56%] [Cov:==============================>    86%][Progress:================>             56%] [Cov:==============================>    86%][Progress:================>             56%] [Cov:==============================>    86%][Progress:================>             56%] [Cov:==============================>    86%][Progress:================>             56%] [Cov:==============================>    86%][Progress:================>             56%] [Cov:==============================>    86%][Progress:================>             56%] [Cov:==============================>    86%][Progress:================>             56%] [Cov:==============================>    86%][Progress:================>             56%] [Cov:==============================>    86%][Progress:================>             56%] [Cov:==============================>    86%][Progress:=================>            57%] [Cov:==============================>    86%][Progress:=================>            57%] [Cov:==============================>    86%][Progress:=================>            57%] [Cov:==============================>    86%][Progress:=================>            57%] [Cov:==============================>    86%][Progress:=================>            57%] [Cov:==============================>    86%][Progress:=================>            57%] [Cov:==============================>    86%][Progress:=================>            57%] [Cov:==============================>    86%][Progress:=================>            57%] [Cov:==============================>    86%][Progress:=================>            57%] [Cov:==============================>    86%][Progress:=================>            57%] [Cov:==============================>    86%][Progress:=================>            57%] [Cov:==============================>    86%][Progress:=================>            57%] [Cov:==============================>    86%][Progress:=================>            57%] [Cov:==============================>    86%][Progress:=================>            57%] [Cov:==============================>    86%][Progress:=================>            57%] [Cov:==============================>    86%][Progress:=================>            57%] [Cov:==============================>    86%][Progress:=================>            57%] [Cov:==============================>    86%][Progress:=================>            58%] [Cov:==============================>    86%][Progress:=================>            58%] [Cov:==============================>    86%][Progress:=================>            58%] [Cov:==============================>    86%][Progress:=================>            58%] [Cov:==============================>    86%][Progress:=================>            58%] [Cov:==============================>    86%][Progress:=================>            58%] [Cov:==============================>    86%][Progress:=================>            58%] [Cov:==============================>    86%][Progress:=================>            58%] [Cov:==============================>    86%][Progress:=================>            58%] [Cov:==============================>    86%][Progress:=================>            58%] [Cov:==============================>    86%][Progress:=================>            58%] [Cov:==============================>    86%][Progress:=================>            58%] [Cov:==============================>    86%][Progress:=================>            58%] [Cov:==============================>    86%][Progress:=================>            58%] [Cov:==============================>    86%][Progress:=================>            58%] [Cov:==============================>    86%][Progress:=================>            58%] [Cov:==============================>    86%][Progress:=================>            58%] [Cov:==============================>    86%][Progress:=================>            59%] [Cov:==============================>    86%][Progress:=================>            59%] [Cov:==============================>    86%][Progress:=================>            59%] [Cov:==============================>    86%][Progress:=================>            59%] [Cov:==============================>    86%][Progress:=================>            59%] [Cov:==============================>    86%][Progress:=================>            59%] [Cov:==============================>    86%][Progress:=================>            59%] [Cov:==============================>    86%][Progress:=================>            59%] [Cov:==============================>    86%][Progress:=================>            59%] [Cov:==============================>    86%][Progress:=================>            59%] [Cov:==============================>    86%][Progress:=================>            59%] [Cov:==============================>    86%][Progress:=================>            59%] [Cov:==============================>    86%][Progress:=================>            59%] [Cov:==============================>    86%][Progress:=================>            59%] [Cov:==============================>    86%][Progress:=================>            59%] [Cov:==============================>    86%][Progress:=================>            59%] [Cov:==============================>    86%][Progress:=================>            59%] [Cov:==============================>    86%][Progress:=================>            59%] [Cov:==============================>    86%][Progress:=================>            59%] [Cov:==============================>    86%][Progress:=================>            59%] [Cov:==============================>    86%][Progress:==================>           60%] [Cov:==============================>    86%][Progress:==================>           60%] [Cov:==============================>    86%][Progress:==================>           60%] [Cov:==============================>    86%][Progress:==================>           60%] [Cov:==============================>    86%][Progress:==================>           60%] [Cov:==============================>    86%][Progress:==================>           60%] [Cov:==============================>    86%][Progress:==================>           60%] [Cov:==============================>    86%][Progress:==================>           60%] [Cov:==============================>    86%][Progress:==================>           60%] [Cov:==============================>    86%][Progress:==================>           60%] [Cov:==============================>    86%][Progress:==================>           60%] [Cov:==============================>    86%][Progress:==================>           60%] [Cov:==============================>    86%][Progress:==================>           60%] [Cov:==============================>    86%][Progress:==================>           60%] [Cov:==============================>    86%][Progress:==================>           60%] [Cov:==============================>    86%][Progress:==================>           60%] [Cov:==============================>    86%][Progress:==================>           60%] [Cov:==============================>    86%][Progress:==================>           60%] [Cov:==============================>    86%][Progress:==================>           60%] [Cov:==============================>    86%][Progress:==================>           61%] [Cov:==============================>    86%][Progress:==================>           61%] [Cov:==============================>    86%][Progress:==================>           61%] [Cov:==============================>    86%][Progress:==================>           61%] [Cov:==============================>    86%][Progress:==================>           61%] [Cov:==============================>    86%][Progress:==================>           61%] [Cov:==============================>    86%][Progress:==================>           61%] [Cov:==============================>    86%][Progress:==================>           61%] [Cov:==============================>    86%][Progress:==================>           61%] [Cov:==============================>    86%][Progress:==================>           61%] [Cov:==============================>    86%][Progress:==================>           61%] [Cov:==============================>    86%][Progress:==================>           61%] [Cov:==============================>    86%][Progress:==================>           61%] [Cov:==============================>    86%][Progress:==================>           61%] [Cov:==============================>    86%][Progress:==================>           61%] [Cov:==============================>    86%][Progress:==================>           61%] [Cov:==============================>    86%][Progress:==================>           62%] [Cov:==============================>    86%][Progress:==================>           62%] [Cov:==============================>    86%][Progress:==================>           62%] [Cov:==============================>    86%][Progress:==================>           62%] [Cov:==============================>    86%][Progress:==================>           62%] [Cov:==============================>    86%][Progress:==================>           62%] [Cov:==============================>    86%][Progress:==================>           62%] [Cov:==============================>    86%][Progress:==================>           62%] [Cov:==============================>    86%][Progress:==================>           62%] [Cov:==============================>    86%][Progress:==================>           62%] [Cov:==============================>    86%][Progress:==================>           62%] [Cov:==============================>    86%][Progress:==================>           62%] [Cov:==============================>    86%][Progress:==================>           62%] [Cov:==============================>    86%][Progress:==================>           62%] [Cov:==============================>    86%][Progress:==================>           62%] [Cov:==============================>    86%][Progress:==================>           63%] [Cov:==============================>    86%][Progress:==================>           63%] [Cov:==============================>    86%][Progress:==================>           63%] [Cov:==============================>    86%][Progress:==================>           63%] [Cov:==============================>    86%][Progress:==================>           63%] [Cov:==============================>    86%][Progress:==================>           63%] [Cov:==============================>    86%][Progress:==================>           63%] [Cov:==============================>    86%][Progress:==================>           63%] [Cov:==============================>    86%][Progress:==================>           63%] [Cov:==============================>    86%][Progress:==================>           63%] [Cov:==============================>    86%][Progress:==================>           63%] [Cov:==============================>    86%][Progress:==================>           63%] [Cov:==============================>    86%][Progress:==================>           63%] [Cov:==============================>    86%][Progress:==================>           63%] [Cov:==============================>    86%][Progress:==================>           63%] [Cov:==============================>    86%][Progress:==================>           63%] [Cov:==============================>    86%][Progress:==================>           63%] [Cov:==============================>    86%][Progress:==================>           63%] [Cov:==============================>    86%][Progress:==================>           63%] [Cov:==============================>    86%][Progress:===================>          64%] [Cov:==============================>    86%][Progress:===================>          64%] [Cov:==============================>    86%][Progress:===================>          64%] [Cov:==============================>    86%][Progress:===================>          64%] [Cov:==============================>    86%][Progress:===================>          64%] [Cov:==============================>    86%][Progress:===================>          64%] [Cov:==============================>    86%][Progress:===================>          64%] [Cov:==============================>    86%][Progress:===================>          64%] [Cov:==============================>    86%][Progress:===================>          64%] [Cov:==============================>    86%][Progress:===================>          64%] [Cov:==============================>    86%][Progress:===================>          64%] [Cov:==============================>    86%][Progress:===================>          64%] [Cov:==============================>    86%][Progress:===================>          64%] [Cov:==============================>    86%][Progress:===================>          64%] [Cov:==============================>    86%][Progress:===================>          64%] [Cov:==============================>    86%][Progress:===================>          64%] [Cov:==============================>    86%][Progress:===================>          64%] [Cov:==============================>    86%][Progress:===================>          64%] [Cov:==============================>    86%][Progress:===================>          64%] [Cov:==============================>    86%][Progress:===================>          64%] [Cov:==============================>    86%][Progress:===================>          65%] [Cov:==============================>    86%][Progress:===================>          65%] [Cov:==============================>    86%][Progress:===================>          65%] [Cov:==============================>    86%][Progress:===================>          65%] [Cov:==============================>    86%][Progress:===================>          65%] [Cov:==============================>    86%][Progress:===================>          65%] [Cov:==============================>    86%][Progress:===================>          65%] [Cov:==============================>    86%][Progress:===================>          65%] [Cov:==============================>    86%][Progress:===================>          65%] [Cov:==============================>    86%][Progress:===================>          65%] [Cov:==============================>    86%][Progress:===================>          65%] [Cov:==============================>    86%][Progress:===================>          65%] [Cov:==============================>    86%][Progress:===================>          65%] [Cov:==============================>    86%][Progress:===================>          65%] [Cov:==============================>    86%][Progress:===================>          65%] [Cov:==============================>    86%][Progress:===================>          65%] [Cov:==============================>    86%][Progress:===================>          65%] [Cov:==============================>    86%][Progress:===================>          65%] [Cov:==============================>    86%][Progress:===================>          66%] [Cov:==============================>    86%][Progress:===================>          66%] [Cov:==============================>    86%][Progress:===================>          66%] [Cov:==============================>    86%][Progress:===================>          66%] [Cov:==============================>    86%][Progress:===================>          66%] [Cov:==============================>    86%][Progress:===================>          66%] [Cov:==============================>    86%][Progress:===================>          66%] [Cov:==============================>    86%][Progress:===================>          66%] [Cov:==============================>    86%][Progress:===================>          66%] [Cov:==============================>    86%][Progress:===================>          66%] [Cov:==============================>    86%][Progress:===================>          66%] [Cov:==============================>    86%][Progress:===================>          66%] [Cov:==============================>    86%][Progress:===================>          66%] [Cov:==============================>    86%][Progress:===================>          66%] [Cov:==============================>    86%][Progress:===================>          66%] [Cov:==============================>    86%][Progress:===================>          66%] [Cov:==============================>    86%][Progress:====================>         67%] [Cov:==============================>    86%][Progress:====================>         67%] [Cov:==============================>    86%][Progress:====================>         67%] [Cov:==============================>    86%][Progress:====================>         67%] [Cov:==============================>    86%][Progress:====================>         67%] [Cov:==============================>    86%][Progress:====================>         67%] [Cov:==============================>    86%][Progress:====================>         67%] [Cov:==============================>    86%][Progress:====================>         67%] [Cov:==============================>    86%][Progress:====================>         67%] [Cov:==============================>    86%][Progress:====================>         67%] [Cov:==============================>    86%][Progress:====================>         67%] [Cov:==============================>    86%][Progress:====================>         67%] [Cov:==============================>    86%][Progress:====================>         67%] [Cov:==============================>    86%][Progress:====================>         67%] [Cov:==============================>    86%][Progress:====================>         67%] [Cov:==============================>    86%][Progress:====================>         67%] [Cov:==============================>    86%][Progress:====================>         68%] [Cov:==============================>    86%][Progress:====================>         68%] [Cov:==============================>    86%][Progress:====================>         68%] [Cov:==============================>    86%][Progress:====================>         68%] [Cov:==============================>    86%][Progress:====================>         68%] [Cov:==============================>    86%][Progress:====================>         68%] [Cov:==============================>    86%][Progress:====================>         68%] [Cov:==============================>    86%][Progress:====================>         68%] [Cov:==============================>    86%][Progress:====================>         68%] [Cov:==============================>    86%][Progress:====================>         68%] [Cov:==============================>    86%][Progress:====================>         68%] [Cov:==============================>    86%][Progress:====================>         68%] [Cov:==============================>    86%][Progress:====================>         68%] [Cov:==============================>    86%][Progress:====================>         68%] [Cov:==============================>    86%][Progress:====================>         68%] [Cov:==============================>    86%][Progress:====================>         68%] [Cov:==============================>    86%][Progress:====================>         68%] [Cov:==============================>    86%][Progress:====================>         68%] [Cov:==============================>    86%][Progress:====================>         69%] [Cov:==============================>    86%][Progress:====================>         69%] [Cov:==============================>    86%][Progress:====================>         69%] [Cov:==============================>    86%][Progress:====================>         69%] [Cov:==============================>    86%][Progress:====================>         69%] [Cov:==============================>    86%][Progress:====================>         69%] [Cov:==============================>    86%][Progress:====================>         69%] [Cov:==============================>    86%][Progress:====================>         69%] [Cov:==============================>    86%][Progress:====================>         69%] [Cov:==============================>    86%][Progress:====================>         69%] [Cov:==============================>    86%][Progress:=====================>        70%] [Cov:==============================>    86%][Progress:=====================>        70%] [Cov:==============================>    86%][Progress:=====================>        70%] [Cov:==============================>    86%][Progress:=====================>        70%] [Cov:==============================>    86%][Progress:=====================>        70%] [Cov:==============================>    86%][Progress:=====================>        70%] [Cov:==============================>    86%][Progress:=====================>        70%] [Cov:==============================>    86%][Progress:=====================>        70%] [Cov:==============================>    86%][Progress:=====================>        70%] [Cov:==============================>    86%][Progress:=====================>        70%] [Cov:==============================>    86%][Progress:=====================>        70%] [Cov:==============================>    86%][Progress:=====================>        71%] [Cov:==============================>    86%][Progress:=====================>        71%] [Cov:==============================>    86%][Progress:=====================>        71%] [Cov:==============================>    86%][Progress:=====================>        71%] [Cov:==============================>    86%][Progress:=====================>        71%] [Cov:==============================>    86%][Progress:=====================>        71%] [Cov:==============================>    86%][Progress:=====================>        71%] [Cov:==============================>    86%][Progress:=====================>        71%] [Cov:==============================>    86%][Progress:=====================>        71%] [Cov:==============================>    86%][Progress:=====================>        71%] [Cov:==============================>    86%][Progress:=====================>        71%] [Cov:==============================>    86%][Progress:=====================>        71%] [Cov:==============================>    86%][Progress:=====================>        71%] [Cov:==============================>    86%][Progress:=====================>        71%] [Cov:==============================>    86%][Progress:=====================>        71%] [Cov:==============================>    86%][Progress:=====================>        71%] [Cov:==============================>    86%][Progress:=====================>        71%] [Cov:==============================>    86%][Progress:=====================>        71%] [Cov:==============================>    86%][Progress:=====================>        71%] [Cov:==============================>    86%][Progress:=====================>        71%] [Cov:==============================>    86%][Progress:=====================>        72%] [Cov:==============================>    86%][Progress:=====================>        72%] [Cov:==============================>    86%][Progress:=====================>        72%] [Cov:==============================>    86%][Progress:=====================>        72%] [Cov:==============================>    86%][Progress:=====================>        72%] [Cov:==============================>    86%][Progress:=====================>        72%] [Cov:==============================>    86%][Progress:=====================>        72%] [Cov:==============================>    86%][Progress:=====================>        72%] [Cov:==============================>    86%][Progress:=====================>        72%] [Cov:==============================>    86%][Progress:=====================>        72%] [Cov:==============================>    86%][Progress:=====================>        72%] [Cov:==============================>    86%][Progress:=====================>        72%] [Cov:==============================>    86%][Progress:=====================>        73%] [Cov:==============================>    86%][Progress:=====================>        73%] [Cov:==============================>    86%][Progress:=====================>        73%] [Cov:==============================>    86%][Progress:=====================>        73%] [Cov:==============================>    86%][Progress:=====================>        73%] [Cov:==============================>    86%][Progress:=====================>        73%] [Cov:==============================>    86%][Progress:=====================>        73%] [Cov:==============================>    86%][Progress:=====================>        73%] [Cov:==============================>    86%][Progress:=====================>        73%] [Cov:==============================>    86%][Progress:=====================>        73%] [Cov:==============================>    86%][Progress:======================>       74%] [Cov:==============================>    86%][Progress:======================>       74%] [Cov:==============================>    86%][Progress:======================>       74%] [Cov:==============================>    86%][Progress:======================>       74%] [Cov:==============================>    86%][Progress:======================>       74%] [Cov:==============================>    86%][Progress:======================>       74%] [Cov:==============================>    86%][Progress:======================>       74%] [Cov:==============================>    86%][Progress:======================>       74%] [Cov:==============================>    86%][Progress:======================>       75%] [Cov:==============================>    86%][Progress:======================>       75%] [Cov:==============================>    86%][Progress:======================>       75%] [Cov:==============================>    86%][Progress:======================>       75%] [Cov:==============================>    86%][Progress:======================>       75%] [Cov:==============================>    86%][Progress:======================>       75%] [Cov:==============================>    86%][Progress:======================>       75%] [Cov:==============================>    86%][Progress:======================>       75%] [Cov:==============================>    86%][Progress:======================>       76%] [Cov:==============================>    86%][Progress:======================>       76%] [Cov:==============================>    86%][Progress:======================>       76%] [Cov:==============================>    86%][Progress:======================>       76%] [Cov:==============================>    86%][Progress:======================>       76%] [Cov:==============================>    86%][Progress:======================>       76%] [Cov:==============================>    86%][Progress:======================>       76%] [Cov:==============================>    86%][Progress:======================>       76%] [Cov:==============================>    86%][Progress:======================>       76%] [Cov:==============================>    86%][Progress:=======================>      77%] [Cov:==============================>    86%][Progress:=======================>      77%] [Cov:==============================>    86%][Progress:=======================>      77%] [Cov:==============================>    86%][Progress:=======================>      77%] [Cov:==============================>    86%][Progress:=======================>      77%] [Cov:==============================>    86%][Progress:=======================>      77%] [Cov:==============================>    86%][Progress:=======================>      77%] [Cov:==============================>    86%][Progress:=======================>      77%] [Cov:==============================>    86%][Progress:=======================>      77%] [Cov:==============================>    86%][Progress:=======================>      77%] [Cov:==============================>    86%][Progress:=======================>      77%] [Cov:==============================>    86%][Progress:=======================>      77%] [Cov:==============================>    86%][Progress:=======================>      77%] [Cov:==============================>    86%][Progress:=======================>      77%] [Cov:==============================>    86%][Progress:=======================>      78%] [Cov:==============================>    86%][Progress:=======================>      78%] [Cov:==============================>    86%][Progress:=======================>      78%] [Cov:==============================>    86%][Progress:=======================>      78%] [Cov:==============================>    86%][Progress:=======================>      78%] [Cov:==============================>    86%][Progress:=======================>      78%] [Cov:==============================>    86%][Progress:=======================>      78%] [Cov:==============================>    86%][Progress:=======================>      78%] [Cov:==============================>    86%][Progress:=======================>      79%] [Cov:==============================>    86%][Progress:=======================>      79%] [Cov:==============================>    86%][Progress:=======================>      79%] [Cov:==============================>    86%][Progress:=======================>      79%] [Cov:==============================>    86%][Progress:=======================>      79%] [Cov:==============================>    86%][Progress:=======================>      79%] [Cov:==============================>    86%][Progress:=======================>      79%] [Cov:==============================>    86%][Progress:=======================>      79%] [Cov:==============================>    86%][Progress:=======================>      79%] [Cov:==============================>    86%][Progress:=======================>      79%] [Cov:==============================>    86%][Progress:=======================>      79%] [Cov:==============================>    86%][Progress:========================>     80%] [Cov:==============================>    86%][Progress:========================>     80%] [Cov:==============================>    86%][Progress:========================>     80%] [Cov:==============================>    86%][Progress:========================>     80%] [Cov:==============================>    86%][Progress:========================>     80%] [Cov:==============================>    86%][Progress:========================>     80%] [Cov:==============================>    86%][Progress:========================>     80%] [Cov:==============================>    86%][Progress:========================>     80%] [Cov:==============================>    86%][Progress:========================>     80%] [Cov:==============================>    86%][Progress:========================>     80%] [Cov:==============================>    86%][Progress:========================>     80%] [Cov:==============================>    86%][Progress:========================>     80%] [Cov:==============================>    86%][Progress:========================>     80%] [Cov:==============================>    86%][Progress:========================>     80%] [Cov:==============================>    86%][Progress:========================>     80%] [Cov:==============================>    86%][Progress:========================>     80%] [Cov:==============================>    86%][Progress:========================>     80%] [Cov:==============================>    86%][Progress:========================>     81%] [Cov:==============================>    86%][Progress:========================>     81%] [Cov:==============================>    86%][Progress:========================>     81%] [Cov:==============================>    86%][Progress:========================>     81%] [Cov:==============================>    86%][Progress:========================>     81%] [Cov:==============================>    86%][Progress:========================>     81%] [Cov:==============================>    86%][Progress:========================>     81%] [Cov:==============================>    86%][Progress:========================>     81%] [Cov:==============================>    86%][Progress:========================>     81%] [Cov:==============================>    86%][Progress:========================>     81%] [Cov:==============================>    86%][Progress:========================>     81%] [Cov:==============================>    86%][Progress:========================>     81%] [Cov:==============================>    86%][Progress:========================>     81%] [Cov:==============================>    86%][Progress:========================>     81%] [Cov:==============================>    86%][Progress:========================>     81%] [Cov:==============================>    86%][Progress:========================>     81%] [Cov:==============================>    86%][Progress:========================>     81%] [Cov:==============================>    86%][Progress:========================>     82%] [Cov:==============================>    86%][Progress:========================>     82%] [Cov:==============================>    86%][Progress:========================>     82%] [Cov:==============================>    86%][Progress:========================>     82%] [Cov:==============================>    86%][Progress:========================>     82%] [Cov:==============================>    86%][Progress:========================>     82%] [Cov:==============================>    86%][Progress:========================>     82%] [Cov:==============================>    86%][Progress:========================>     82%] [Cov:==============================>    86%][Progress:========================>     82%] [Cov:==============================>    86%][Progress:========================>     82%] [Cov:==============================>    86%][Progress:========================>     82%] [Cov:==============================>    86%][Progress:========================>     82%] [Cov:==============================>    86%][Progress:========================>     82%] [Cov:==============================>    86%][Progress:========================>     82%] [Cov:==============================>    86%][Progress:========================>     82%] [Cov:==============================>    86%][Progress:========================>     82%] [Cov:==============================>    86%][Progress:========================>     82%] [Cov:==============================>    86%][Progress:========================>     83%] [Cov:==============================>    86%][Progress:========================>     83%] [Cov:==============================>    86%][Progress:========================>     83%] [Cov:==============================>    86%][Progress:========================>     83%] [Cov:==============================>    86%][Progress:========================>     83%] [Cov:==============================>    86%][Progress:========================>     83%] [Cov:==============================>    86%][Progress:========================>     83%] [Cov:==============================>    86%][Progress:========================>     83%] [Cov:==============================>    86%][Progress:========================>     83%] [Cov:==============================>    86%][Progress:========================>     83%] [Cov:==============================>    86%][Progress:========================>     83%] [Cov:==============================>    86%][Progress:========================>     83%] [Cov:==============================>    86%][Progress:========================>     83%] [Cov:==============================>    86%][Progress:========================>     83%] [Cov:==============================>    86%][Progress:========================>     83%] [Cov:==============================>    86%][Progress:========================>     83%] [Cov:==============================>    86%][Progress:========================>     83%] [Cov:==============================>    86%][Progress:========================>     83%] [Cov:==============================>    86%][Progress:=========================>    84%] [Cov:==============================>    86%][Progress:=========================>    84%] [Cov:==============================>    86%][Progress:=========================>    84%] [Cov:==============================>    86%][Progress:=========================>    84%] [Cov:==============================>    86%][Progress:=========================>    84%] [Cov:==============================>    86%][Progress:=========================>    84%] [Cov:==============================>    86%][Progress:=========================>    84%] [Cov:==============================>    86%][Progress:=========================>    84%] [Cov:==============================>    86%][Progress:=========================>    84%] [Cov:==============================>    86%][Progress:=========================>    84%] [Cov:==============================>    86%][Progress:=========================>    84%] [Cov:==============================>    86%][Progress:=========================>    84%] [Cov:==============================>    86%][Progress:=========================>    84%] [Cov:==============================>    86%][Progress:=========================>    84%] [Cov:==============================>    86%][Progress:=========================>    84%] [Cov:==============================>    86%][Progress:=========================>    84%] [Cov:==============================>    86%][Progress:=========================>    84%] [Cov:==============================>    86%][Progress:=========================>    84%] [Cov:==============================>    86%][Progress:=========================>    84%] [Cov:==============================>    86%][Progress:=========================>    84%] [Cov:==============================>    86%][Progress:=========================>    84%] [Cov:==============================>    86%][Progress:=========================>    85%] [Cov:==============================>    86%][Progress:=========================>    85%] [Cov:==============================>    86%][Progress:=========================>    85%] [Cov:==============================>    86%][Progress:=========================>    85%] [Cov:==============================>    86%][Progress:=========================>    85%] [Cov:==============================>    86%][Progress:=========================>    85%] [Cov:==============================>    86%][Progress:=========================>    85%] [Cov:==============================>    86%][Progress:=========================>    85%] [Cov:==============================>    86%][Progress:=========================>    85%] [Cov:==============================>    86%][Progress:=========================>    85%] [Cov:==============================>    86%][Progress:=========================>    85%] [Cov:==============================>    86%][Progress:=========================>    85%] [Cov:==============================>    86%][Progress:=========================>    85%] [Cov:==============================>    86%][Progress:=========================>    85%] [Cov:==============================>    86%][Progress:=========================>    85%] [Cov:==============================>    86%][Progress:=========================>    85%] [Cov:==============================>    86%][Progress:=========================>    85%] [Cov:==============================>    86%][Progress:=========================>    85%] [Cov:==============================>    86%][Progress:=========================>    85%] [Cov:==============================>    86%][Progress:=========================>    85%] [Cov:==============================>    86%][Progress:=========================>    85%] [Cov:==============================>    86%][Progress:=========================>    85%] [Cov:==============================>    86%][Progress:=========================>    85%] [Cov:==============================>    86%][Progress:=========================>    86%] [Cov:==============================>    86%][Progress:=========================>    86%] [Cov:==============================>    86%][Progress:=========================>    86%] [Cov:==============================>    86%][Progress:=========================>    86%] [Cov:==============================>    86%][Progress:=========================>    86%] [Cov:==============================>    86%][Progress:=========================>    86%] [Cov:==============================>    86%][Progress:=========================>    86%] [Cov:==============================>    86%][Progress:=========================>    86%] [Cov:==============================>    86%][Progress:=========================>    86%] [Cov:==============================>    86%][Progress:=========================>    86%] [Cov:==============================>    86%][Progress:=========================>    86%] [Cov:==============================>    86%][Progress:=========================>    86%] [Cov:==============================>    86%][Progress:=========================>    86%] [Cov:==============================>    86%][Progress:=========================>    86%] [Cov:==============================>    86%][Progress:=========================>    86%] [Cov:==============================>    86%][Progress:=========================>    86%] [Cov:==============================>    86%][Progress:=========================>    86%] [Cov:==============================>    86%][Progress:=========================>    86%] [Cov:==============================>    86%][Progress:=========================>    86%] [Cov:==============================>    86%][Progress:==========================>   87%] [Cov:==============================>    86%][Progress:==========================>   87%] [Cov:==============================>    86%][Progress:==========================>   87%] [Cov:==============================>    86%][Progress:==========================>   87%] [Cov:==============================>    86%][Progress:==========================>   87%] [Cov:==============================>    86%][Progress:==========================>   87%] [Cov:==============================>    86%][Progress:==========================>   87%] [Cov:==============================>    86%][Progress:==========================>   87%] [Cov:==============================>    86%][Progress:==========================>   87%] [Cov:==============================>    86%][Progress:==========================>   87%] [Cov:==============================>    86%][Progress:==========================>   87%] [Cov:==============================>    86%][Progress:==========================>   87%] [Cov:==============================>    86%][Progress:==========================>   87%] [Cov:==============================>    86%][Progress:==========================>   87%] [Cov:==============================>    86%][Progress:==========================>   87%] [Cov:==============================>    86%][Progress:==========================>   87%] [Cov:==============================>    86%][Progress:==========================>   87%] [Cov:==============================>    86%][Progress:==========================>   87%] [Cov:==============================>    86%][Progress:==========================>   87%] [Cov:==============================>    86%][Progress:==========================>   87%] [Cov:==============================>    86%][Progress:==========================>   87%] [Cov:==============================>    86%][Progress:==========================>   87%] [Cov:==============================>    86%][Progress:==========================>   87%] [Cov:==============================>    86%][Progress:==========================>   88%] [Cov:==============================>    86%][Progress:==========================>   88%] [Cov:==============================>    86%][Progress:==========================>   88%] [Cov:==============================>    86%][Progress:==========================>   88%] [Cov:==============================>    86%][Progress:==========================>   88%] [Cov:==============================>    86%][Progress:==========================>   88%] [Cov:==============================>    86%][Progress:==========================>   88%] [Cov:==============================>    86%][Progress:==========================>   88%] [Cov:==============================>    86%][Progress:==========================>   88%] [Cov:==============================>    86%][Progress:==========================>   88%] [Cov:==============================>    86%][Progress:==========================>   88%] [Cov:==============================>    86%][Progress:==========================>   88%] [Cov:==============================>    86%][Progress:==========================>   88%] [Cov:==============================>    86%][Progress:==========================>   88%] [Cov:==============================>    86%][Progress:==========================>   88%] [Cov:==============================>    86%][Progress:==========================>   88%] [Cov:==============================>    86%][Progress:==========================>   88%] [Cov:==============================>    86%][Progress:==========================>   88%] [Cov:==============================>    86%][Progress:==========================>   88%] [Cov:==============================>    86%][Progress:==========================>   89%] [Cov:==============================>    86%][Progress:==========================>   89%] [Cov:==============================>    86%][Progress:==========================>   89%] [Cov:==============================>    86%][Progress:==========================>   89%] [Cov:==============================>    86%][Progress:==========================>   89%] [Cov:==============================>    86%][Progress:==========================>   89%] [Cov:==============================>    86%][Progress:==========================>   89%] [Cov:==============================>    86%][Progress:==========================>   89%] [Cov:==============================>    86%][Progress:==========================>   89%] [Cov:==============================>    86%][Progress:==========================>   89%] [Cov:==============================>    86%][Progress:==========================>   89%] [Cov:==============================>    86%][Progress:==========================>   89%] [Cov:==============================>    86%][Progress:==========================>   89%] [Cov:==============================>    86%][Progress:===========================>  90%] [Cov:==============================>    86%][Progress:===========================>  90%] [Cov:==============================>    86%][Progress:===========================>  90%] [Cov:==============================>    86%][Progress:===========================>  90%] [Cov:==============================>    86%][Progress:===========================>  90%] [Cov:==============================>    86%][Progress:===========================>  90%] [Cov:==============================>    86%][Progress:===========================>  90%] [Cov:==============================>    86%][Progress:===========================>  90%] [Cov:==============================>    86%][Progress:===========================>  90%] [Cov:==============================>    86%][Progress:===========================>  90%] [Cov:==============================>    86%][Progress:===========================>  91%] [Cov:==============================>    86%][Progress:===========================>  91%] [Cov:==============================>    86%][Progress:===========================>  91%] [Cov:==============================>    86%][Progress:===========================>  91%] [Cov:==============================>    86%][Progress:===========================>  91%] [Cov:==============================>    86%][Progress:===========================>  91%] [Cov:==============================>    86%][Progress:===========================>  91%] [Cov:==============================>    86%][Progress:===========================>  91%] [Cov:==============================>    86%][Progress:===========================>  91%] [Cov:==============================>    86%][Progress:===========================>  91%] [Cov:==============================>    86%][Progress:===========================>  91%] [Cov:==============================>    86%][Progress:===========================>  92%] [Cov:==============================>    86%][Progress:===========================>  92%] [Cov:==============================>    86%][Progress:===========================>  92%] [Cov:==============================>    86%][Progress:===========================>  92%] [Cov:==============================>    86%][Progress:===========================>  92%] [Cov:==============================>    86%][Progress:===========================>  92%] [Cov:==============================>    86%][Progress:===========================>  92%] [Cov:==============================>    86%][Progress:===========================>  92%] [Cov:==============================>    86%][Progress:===========================>  92%] [Cov:==============================>    86%][Progress:===========================>  92%] [Cov:==============================>    86%][Progress:===========================>  92%] [Cov:==============================>    86%][Progress:===========================>  92%] [Cov:==============================>    86%][Progress:===========================>  93%] [Cov:==============================>    86%][Progress:===========================>  93%] [Cov:==============================>    86%][Progress:===========================>  93%] [Cov:==============================>    86%][Progress:===========================>  93%] [Cov:==============================>    86%][Progress:===========================>  93%] [Cov:==============================>    86%][Progress:===========================>  93%] [Cov:==============================>    86%][Progress:===========================>  93%] [Cov:==============================>    86%][Progress:===========================>  93%] [Cov:==============================>    86%][Progress:===========================>  93%] [Cov:==============================>    86%][Progress:===========================>  93%] [Cov:==============================>    86%][Progress:===========================>  93%] [Cov:==============================>    86%][Progress:===========================>  93%] [Cov:==============================>    86%][Progress:===========================>  93%] [Cov:==============================>    86%][Progress:===========================>  93%] [Cov:==============================>    86%][Progress:===========================>  93%] [Cov:==============================>    86%][Progress:===========================>  93%] [Cov:==============================>    86%][Progress:===========================>  93%] [Cov:==============================>    86%][Progress:============================> 94%] [Cov:==============================>    86%][Progress:============================> 94%] [Cov:==============================>    86%][Progress:============================> 94%] [Cov:==============================>    86%][Progress:============================> 94%] [Cov:==============================>    86%][Progress:============================> 94%] [Cov:==============================>    86%][Progress:============================> 94%] [Cov:==============================>    86%][Progress:============================> 94%] [Cov:==============================>    86%][Progress:============================> 94%] [Cov:==============================>    86%][Progress:============================> 94%] [Cov:==============================>    86%][Progress:============================> 94%] [Cov:==============================>    86%][Progress:============================> 94%] [Cov:==============================>    86%][Progress:============================> 94%] [Cov:==============================>    86%][Progress:============================> 94%] [Cov:==============================>    86%][Progress:============================> 94%] [Cov:==============================>    86%][Progress:============================> 94%] [Cov:==============================>    86%][Progress:============================> 95%] [Cov:==============================>    86%][Progress:============================> 95%] [Cov:==============================>    86%][Progress:============================> 95%] [Cov:==============================>    86%][Progress:============================> 95%] [Cov:==============================>    86%][Progress:============================> 95%] [Cov:==============================>    86%][Progress:============================> 95%] [Cov:==============================>    86%][Progress:============================> 95%] [Cov:==============================>    86%][Progress:============================> 95%] [Cov:==============================>    86%][Progress:============================> 95%] [Cov:==============================>    86%][Progress:============================> 95%] [Cov:==============================>    86%][Progress:============================> 95%] [Cov:==============================>    86%][Progress:============================> 95%] [Cov:==============================>    86%][Progress:============================> 95%] [Cov:==============================>    86%][Progress:============================> 95%] [Cov:==============================>    86%][Progress:============================> 95%] [Cov:==============================>    86%][Progress:============================> 95%] [Cov:==============================>    86%][Progress:============================> 95%] [Cov:==============================>    86%][Progress:============================> 95%] [Cov:==============================>    86%][Progress:============================> 95%] [Cov:==============================>    86%][Progress:============================> 96%] [Cov:==============================>    86%][Progress:============================> 96%] [Cov:==============================>    86%][Progress:============================> 96%] [Cov:==============================>    86%][Progress:============================> 96%] [Cov:==============================>    86%][Progress:============================> 96%] [Cov:==============================>    86%][Progress:============================> 96%] [Cov:==============================>    86%][Progress:============================> 96%] [Cov:==============================>    86%][Progress:============================> 96%] [Cov:==============================>    86%][Progress:============================> 96%] [Cov:==============================>    86%][Progress:============================> 96%] [Cov:==============================>    86%][Progress:============================> 96%] [Cov:==============================>    86%][Progress:============================> 96%] [Cov:==============================>    86%][Progress:============================> 96%] [Cov:==============================>    86%][Progress:============================> 96%] [Cov:==============================>    86%][Progress:============================> 96%] [Cov:==============================>    86%][Progress:============================> 96%] [Cov:==============================>    86%][Progress:============================> 96%] [Cov:==============================>    86%][Progress:============================> 96%] [Cov:==============================>    86%][Progress:=============================>97%] [Cov:==============================>    86%][Progress:=============================>97%] [Cov:==============================>    86%][Progress:=============================>97%] [Cov:==============================>    86%][Progress:=============================>97%] [Cov:==============================>    86%][Progress:=============================>97%] [Cov:==============================>    86%][Progress:=============================>97%] [Cov:==============================>    86%][Progress:=============================>97%] [Cov:==============================>    86%][Progress:=============================>97%] [Cov:==============================>    86%][Progress:=============================>97%] [Cov:==============================>    86%][Progress:=============================>97%] [Cov:==============================>    86%][Progress:=============================>97%] [Cov:==============================>    86%][Progress:=============================>97%] [Cov:==============================>    86%][Progress:=============================>97%] [Cov:==============================>    86%][Progress:=============================>97%] [Cov:==============================>    86%][Progress:=============================>97%] [Cov:==============================>    86%][Progress:=============================>97%] [Cov:==============================>    86%][Progress:=============================>97%] [Cov:==============================>    86%][Progress:=============================>97%] [Cov:==============================>    86%][Progress:=============================>98%] [Cov:==============================>    86%][Progress:=============================>98%] [Cov:==============================>    86%][Progress:=============================>98%] [Cov:==============================>    86%][Progress:=============================>98%] [Cov:==============================>    86%][Progress:=============================>98%] [Cov:==============================>    86%][Progress:=============================>98%] [Cov:==============================>    86%][Progress:=============================>98%] [Cov:==============================>    86%][Progress:=============================>98%] [Cov:==============================>    86%][Progress:=============================>98%] [Cov:==============================>    86%][Progress:=============================>98%] [Cov:==============================>    86%][Progress:=============================>98%] [Cov:==============================>    86%][Progress:=============================>98%] [Cov:==============================>    86%][Progress:=============================>98%] [Cov:==============================>    86%][Progress:=============================>98%] [Cov:==============================>    86%][Progress:=============================>98%] [Cov:==============================>    86%][Progress:=============================>98%] [Cov:==============================>    86%][Progress:=============================>98%] [Cov:==============================>    86%][Progress:=============================>99%] [Cov:==============================>    86%][Progress:=============================>99%] [Cov:==============================>    86%][Progress:=============================>99%] [Cov:==============================>    86%][Progress:=============================>99%] [Cov:==============================>    86%][Progress:=============================>99%] [Cov:==============================>    86%][Progress:=============================>99%] [Cov:==============================>    86%][Progress:=============================>99%] [Cov:==============================>    86%][Progress:=============================>99%] [Cov:==============================>    86%][Progress:=============================>99%] [Cov:==============================>    86%][Progress:=============================>99%] [Cov:==============================>    86%][Progress:=============================>99%] [Cov:==============================>    86%][Progress:=============================>99%] [Cov:==============================>    86%][Progress:=============================>99%] [Cov:==============================>    86%][Progress:=============================>99%] [Cov:==============================>    86%][Progress:=============================>99%] [Cov:==============================>    86%][Progress:=============================>99%] [Cov:==============================>    86%][Progress:=============================>99%] [Cov:==============================>    86%][Progress:==============================100%] [Cov:==============================>    86%][Progress:==============================100%] [Cov:==============================>    86%][Progress:==============================100%] [Cov:==============================>    86%][Progress:==============================100%] [Cov:==============================>    86%][Progress:==============================100%] [Cov:==============================>    86%][Progress:==============================100%] [Cov:==============================>    86%][Progress:==============================100%] [Cov:==============================>    86%][Progress:==============================100%] [Cov:==============================>    86%][Progress:==============================100%] [Cov:==============================>    86%][Progress:==============================100%] [Cov:==============================>    86%][Progress:==============================100%] [Cov:==============================>    86%][Progress:==============================100%] [Cov:==============================>    86%][Progress:==============================100%] [Cov:==============================>    86%][Progress:==============================100%] [Cov:==============================>    86%][Progress:==============================100%] [Cov:==============================>    86%][Progress:==============================100%] [Cov:==============================>    86%][Progress:==============================100%] [Cov:==============================>    86%][Progress:==============================100%] [Cov:==============================>    86%][Progress:==============================100%] [Cov:==============================>    86%][Progress:==============================100%] [Cov:==============================>    86%][Progress:==============================100%] [Cov:==============================>    86%][Progress:==============================100%] [Cov:==============================>    86%]
* Search finished after 101s and 1471 generations, 810107 statements, best individual has fitness: 21.0
* Generated before the refinement 20 tests with total length 58
statement is: com.sap.engine.services.dc.wsgate.ArchiveFile()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.sap.engine.services.dc.wsgate.ArchiveFile
statement code is: ArchiveFile archiveFile = new ArchiveFile()
statement is: com.sap.engine.services.dc.wsgate.ArchiveFile()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.sap.engine.services.dc.wsgate.ArchiveFile
statement code is: ArchiveFile archiveFile = new ArchiveFile()
statement is: equals(Ljava/lang/Object;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean equals = archiveFile.equals(arg0)
test data is: ArchiveFile archiveFile = new ArchiveFile();
ArchiveFile archiveFile = new ArchiveFile();
archiveFile.equals(archiveFile);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        ArchiveFile testArchive = new ArchiveFile("example.txt");
        assertTrue(testArchive.isEqualTo(new ArchiveFile("example.txt")));
    }
}
statement is: ArchiveFile testArchive = new ArchiveFile("example.txt"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: assertTrue(testArchive.isEqualTo(new ArchiveFile("example.txt"))), class spoon.support.reflect.code.CtInvocationImpl
invocation is: assertTrue(testArchive.isEqualTo(new ArchiveFile("example.txt"))) target is:  method is: assertTrue(<unknown>)
statement is: org.evosuite.testcase.statements.ArrayStatement@22536365 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [B
statement code is: byte[] byteArray = new byte[7]
statement is: com.sap.engine.services.dc.wsgate.ArchiveFile([BLjava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.sap.engine.services.dc.wsgate.ArchiveFile
statement code is: ArchiveFile archiveFile = new ArchiveFile(arg0, "")
statement is: setFileName(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: archiveFile.setFileName("")
test data is: byte[] byteArray = new byte[7];
ArchiveFile archiveFile = new ArchiveFile(byteArray, "");
archiveFile.setFileName("");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Improved test data
        byte[] byteArray = new byte[]{ 0x1, 0x2, 0x3, 0x4, 0x5, 0x6, 0x7 };
        String fileName = "example.txt";
        ArchiveFile archiveFile = new ArchiveFile(byteArray, fileName);
    }
}
statement is: // Improved test data
byte[] byteArray = new byte[]{ 0x1, 0x2, 0x3, 0x4, 0x5, 0x6, 0x7 }, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [] Ct is: byte[] byteArray = new byte[7] isAssignment: false Array: new byte[]{ 0x1, 0x2, 0x3, 0x4, 0x5, 0x6, 0x7 } Elements: [0x1, 0x2, 0x3, 0x4, 0x5, 0x6, 0x7]
lengths: [7] []
statement is: String fileName = "example.txt", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: ArchiveFile archiveFile = new ArchiveFile(byteArray, fileName), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase is: String string = "example.txt";
ArchiveFile archiveFile = new ArchiveFile((byte[]) string, "");

statement is: getTypeDesc()Lorg/apache/axis/description/TypeDesc; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.apache.axis.description.TypeDesc
statement code is: TypeDesc typeDesc = ArchiveFile.getTypeDesc()
test data is: ArchiveFile.getTypeDesc();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        ArchiveFile.getTypeDesc();
        the description;
        the archive;
        type = $missing$;
    }
}
statement is: ArchiveFile.getTypeDesc(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: ArchiveFile.getTypeDesc() target is: ArchiveFile method is: getTypeDesc()
Matched Method is: getTypeDesc()Lorg/apache/axis/description/TypeDesc;
statement is: the description, class spoon.support.reflect.code.CtLocalVariableImpl
statement is: the archive, class spoon.support.reflect.code.CtLocalVariableImpl
statement is: type = $missing$, class spoon.support.reflect.code.CtAssignmentImpl
TestCase is: ArchiveFile.getTypeDesc();

statement is: Class<Object> class = Object.class type is: class org.evosuite.testcase.statements.ClassPrimitiveStatement return type java.lang.Class<java.lang.Object>
statement code is: Class<Object> class = Object.class
statement is: getSerializer(Ljava/lang/String;Ljava/lang/Class;Ljavax/xml/namespace/QName;)Lorg/apache/axis/encoding/Serializer; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.apache.axis.encoding.ser.BeanSerializer
statement code is: BeanSerializer serializer = (BeanSerializer)ArchiveFile.getSerializer("", arg1, (QName) null)
test data is: Class<Object> class = Object.class;
ArchiveFile.getSerializer("", class, (QName) null);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        ArchiveFile.getSerializer("Hello World", $missing$, new QName("hello"));
    }
}
statement is: ArchiveFile.getSerializer("Hello World", $missing$, new QName("hello")), class spoon.support.reflect.code.CtInvocationImpl
invocation is: ArchiveFile.getSerializer("Hello World", $missing$, new QName("hello")) target is: ArchiveFile method is: getSerializer(java.lang.String,QName)
Matched Method is: getSerializer(Ljava/lang/String;Ljava/lang/Class;Ljavax/xml/namespace/QName;)Lorg/apache/axis/encoding/Serializer;
i 1 Parameters size() 1 Num of Method Parameters: 3
i 2 Parameters size() 1 Num of Method Parameters: 3
TestCase is: String string = "Hello World";
Class<Object> class = null;
QName qName = null;
ArchiveFile.getSerializer(string, class, qName);

statement is: org.evosuite.testcase.statements.ArrayStatement@62560c1a type is: class org.evosuite.testcase.statements.ArrayStatement return type class [B
statement code is: byte[] byteArray = new byte[7]
statement is: com.sap.engine.services.dc.wsgate.ArchiveFile([BLjava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.sap.engine.services.dc.wsgate.ArchiveFile
statement code is: ArchiveFile archiveFile = new ArchiveFile(arg0, "")
statement is: hashCode()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int hashCode = archiveFile.hashCode()
test data is: byte[] byteArray = new byte[7];
ArchiveFile archiveFile = new ArchiveFile(byteArray, "");
archiveFile.hashCode();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        byte[] byteArray = new byte[]{ 0x12, 0x34, 0x56, 0x78, 0x9a, 0xbc, 0xde };
        ArchiveFile archiveFile = new ArchiveFile(byteArray, "testfile.txt");
        archiveFile.hashCode();
    }
}
statement is: byte[] byteArray = new byte[]{ 0x12, 0x34, 0x56, 0x78, 0x9a, 0xbc, 0xde }, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [] Ct is: byte[] byteArray = new byte[7] isAssignment: false Array: new byte[]{ 0x12, 0x34, 0x56, 0x78, 0x9a, 0xbc, 0xde } Elements: [0x12, 0x34, 0x56, 0x78, 0x9a, 0xbc, 0xde]
lengths: [7] []
statement is: ArchiveFile archiveFile = new ArchiveFile(byteArray, "testfile.txt"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: archiveFile.hashCode(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: archiveFile.hashCode() target is: archiveFile method is: hashCode()
source statement: com.sap.engine.services.dc.wsgate.ArchiveFile([BLjava/lang/String;)V callee: VariableReference: Statement 1, type com.sap.engine.services.dc.wsgate.ArchiveFileindex is: 1
Matched Method is: hashCode()I
TestCase is: String string = "testfile.txt";
ArchiveFile archiveFile = new ArchiveFile((byte[]) string, "");
archiveFile.hashCode();

statement is: Class<Object> class = Object.class type is: class org.evosuite.testcase.statements.ClassPrimitiveStatement return type java.lang.Class<java.lang.Object>
statement code is: Class<Object> class = Object.class
statement is: getDeserializer(Ljava/lang/String;Ljava/lang/Class;Ljavax/xml/namespace/QName;)Lorg/apache/axis/encoding/Deserializer; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.apache.axis.encoding.ser.BeanDeserializer
statement code is: BeanDeserializer deserializer = (BeanDeserializer)ArchiveFile.getDeserializer("", arg1, (QName) null)
test data is: Class<Object> class = Object.class;
ArchiveFile.getDeserializer("", class, (QName) null);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        ArchiveFile.getDeserializer("a string value", $missing$, new QName("test name"));
    }
}
statement is: ArchiveFile.getDeserializer("a string value", $missing$, new QName("test name")), class spoon.support.reflect.code.CtInvocationImpl
invocation is: ArchiveFile.getDeserializer("a string value", $missing$, new QName("test name")) target is: ArchiveFile method is: getDeserializer(java.lang.String,QName)
Matched Method is: getDeserializer(Ljava/lang/String;Ljava/lang/Class;Ljavax/xml/namespace/QName;)Lorg/apache/axis/encoding/Deserializer;
i 1 Parameters size() 1 Num of Method Parameters: 3
i 2 Parameters size() 1 Num of Method Parameters: 3
TestCase is: String string = "a string value";
Class<Object> class = null;
QName qName = null;
ArchiveFile.getDeserializer(string, class, qName);

statement is: org.evosuite.testcase.statements.ArrayStatement@1dc12542 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [B
statement code is: byte[] byteArray = new byte[7]
statement is: com.sap.engine.services.dc.wsgate.ArchiveFile([BLjava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.sap.engine.services.dc.wsgate.ArchiveFile
statement code is: ArchiveFile archiveFile = new ArchiveFile(arg0, "")
statement is: equals(Ljava/lang/Object;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean equals = arg0.equals(arg0)
test data is: byte[] byteArray = new byte[7];
ArchiveFile archiveFile = new ArchiveFile(byteArray, "");
archiveFile.equals(archiveFile);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        byte[] byteArray = new byte[]{ 1, 2, 3, 4, 5, 6, 7, 8, 9, 0 };
        ArchiveFile archiveFile = new ArchiveFile(byteArray, "large_archive.txt");
        archiveFile.equals(new ArchiveFile(byteArray, "large_archive.txt"));
    }
}
statement is: byte[] byteArray = new byte[]{ 1, 2, 3, 4, 5, 6, 7, 8, 9, 0 }, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [] Ct is: byte[] byteArray = new byte[7] isAssignment: false Array: new byte[]{ 1, 2, 3, 4, 5, 6, 7, 8, 9, 0 } Elements: [1, 2, 3, 4, 5, 6, 7, 8, 9, 0]
lengths: [7] []
statement is: ArchiveFile archiveFile = new ArchiveFile(byteArray, "large_archive.txt"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: archiveFile.equals(new ArchiveFile(byteArray, "large_archive.txt")), class spoon.support.reflect.code.CtInvocationImpl
invocation is: archiveFile.equals(new ArchiveFile(byteArray, "large_archive.txt")) target is: archiveFile method is: equals(ArchiveFile)
source statement: com.sap.engine.services.dc.wsgate.ArchiveFile([BLjava/lang/String;)V callee: VariableReference: Statement 1, type com.sap.engine.services.dc.wsgate.ArchiveFileindex is: 1
Matched Method is: equals(Ljava/lang/Object;)Z
TestCase is: String string = "large_archive.txt";
ArchiveFile archiveFile = new ArchiveFile((byte[]) string, "");
String string = "large_archive.txt";
ArchiveFile archiveFile = new ArchiveFile((byte[]) string, "");
archiveFile.equals(archiveFile);

statement is: org.evosuite.testcase.statements.ArrayStatement@be897df2 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [B
statement code is: byte[] byteArray = new byte[7]
statement is: com.sap.engine.services.dc.wsgate.ArchiveFile([BLjava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.sap.engine.services.dc.wsgate.ArchiveFile
statement code is: ArchiveFile archiveFile = new ArchiveFile(arg0, "")
statement is: equals(Ljava/lang/Object;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean equals = archiveFile.equals((Object) null)
test data is: byte[] byteArray = new byte[7];
ArchiveFile archiveFile = new ArchiveFile(byteArray, "");
archiveFile.equals((Object) null);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        byte[] byteArray = new byte[7];
        Random random = new Random();
        for (int i = 0; i < byteArray.length; i++) {
            byteArray[i] = ((byte) (random.nextInt(256)));
        }
        String name = "example_file";
        ArchiveFile archiveFile = new ArchiveFile(byteArray, name);
        assertEquals(archiveFile, null);
    }
}
statement is: byte[] byteArray = new byte[7], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [7] Ct is: byte[] byteArray = new byte[7] isAssignment: false Array: new byte[7] Elements: []
lengths: [7] [7]
Their type are: class [B byte[]
statement is: Random random = new Random(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: for (int i = 0; i < byteArray.length; i++) {
    byteArray[i] = ((byte) (random.nextInt(256)));
}, class spoon.support.reflect.code.CtForImpl
statement is: String name = "example_file", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: ArchiveFile archiveFile = new ArchiveFile(byteArray, name), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: assertEquals(archiveFile, null), class spoon.support.reflect.code.CtInvocationImpl
invocation is: assertEquals(archiveFile, null) target is:  method is: assertEquals(<unknown>,<unknown>)
TestCase is: byte[] byteArray = new byte[7];
String string = "example_file";
ArchiveFile archiveFile = new ArchiveFile(byteArray, string);

statement is: org.evosuite.testcase.statements.ArrayStatement@2533290b type is: class org.evosuite.testcase.statements.ArrayStatement return type class [B
statement code is: byte[] byteArray = new byte[7]
statement is: com.sap.engine.services.dc.wsgate.ArchiveFile([BLjava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.sap.engine.services.dc.wsgate.ArchiveFile
statement code is: ArchiveFile archiveFile = new ArchiveFile(arg0, "")
statement is: com.sap.engine.services.dc.wsgate.ArchiveFile()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.sap.engine.services.dc.wsgate.ArchiveFile
statement code is: ArchiveFile archiveFile = new ArchiveFile()
statement is: equals(Ljava/lang/Object;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean equals = archiveFile.equals(arg0)
test data is: byte[] byteArray = new byte[7];
ArchiveFile archiveFile = new ArchiveFile(byteArray, "");
ArchiveFile archiveFile = new ArchiveFile();
archiveFile.equals(archiveFile);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        byte[] byteArray = new byte[]{ 0x48, 0x65, 0x6c, 0x6c, 0x6f, 0x2c, 0x20, 0x77, 0x6f, 0x72, 0x6c, 0x64 };
        ArchiveFile archiveFile = new ArchiveFile(byteArray, "Hello, world");
        archiveFile.equals(archiveFile);
    }
}
statement is: byte[] byteArray = new byte[]{ 0x48, 0x65, 0x6c, 0x6c, 0x6f, 0x2c, 0x20, 0x77, 0x6f, 0x72, 0x6c, 0x64 }, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [] Ct is: byte[] byteArray = new byte[7] isAssignment: false Array: new byte[]{ 0x48, 0x65, 0x6c, 0x6c, 0x6f, 0x2c, 0x20, 0x77, 0x6f, 0x72, 0x6c, 0x64 } Elements: [0x48, 0x65, 0x6c, 0x6c, 0x6f, 0x2c, 0x20, 0x77, 0x6f, 0x72, 0x6c, 0x64]
lengths: [7] []
statement is: ArchiveFile archiveFile = new ArchiveFile(byteArray, "Hello, world"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: archiveFile.equals(archiveFile), class spoon.support.reflect.code.CtInvocationImpl
invocation is: archiveFile.equals(archiveFile) target is: archiveFile method is: equals(ArchiveFile)
source statement: com.sap.engine.services.dc.wsgate.ArchiveFile([BLjava/lang/String;)V callee: VariableReference: Statement 1, type com.sap.engine.services.dc.wsgate.ArchiveFileindex is: 1
Matched Method is: equals(Ljava/lang/Object;)Z
TestCase is: String string = "Hello, world";
ArchiveFile archiveFile = new ArchiveFile((byte[]) string, "");
archiveFile.equals(archiveFile);

statement is: com.sap.engine.services.dc.wsgate.ArchiveFile()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.sap.engine.services.dc.wsgate.ArchiveFile
statement code is: ArchiveFile archiveFile = new ArchiveFile()
statement is: org.evosuite.testcase.statements.ArrayStatement@dc2c3803 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [B
statement code is: byte[] byteArray = new byte[2]
statement is: com.sap.engine.services.dc.wsgate.ArchiveFile([BLjava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.sap.engine.services.dc.wsgate.ArchiveFile
statement code is: ArchiveFile archiveFile = new ArchiveFile(arg0, "/l!zG?^P<7WE")
statement is: equals(Ljava/lang/Object;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean equals = archiveFile.equals(arg0)
test data is: ArchiveFile archiveFile = new ArchiveFile();
byte[] byteArray = new byte[2];
ArchiveFile archiveFile = new ArchiveFile(byteArray, "/l!zG?^P<7WE");
archiveFile.equals(archiveFile);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Create a small archive file with some dummy data
        byte[] archiveData = new byte[2];
        String filePath = "/l!zG?^P<7WE";
        ArchiveFile archiveFile1 = new ArchiveFile(archiveData, filePath);
        // Create another ArchiveFile object with the same data
        ArchiveFile archiveFile2 = new ArchiveFile(archiveData, filePath);
        assertTrue(archiveFile1.equals(archiveFile2));
    }
}
statement is: // Create a small archive file with some dummy data
byte[] archiveData = new byte[2], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [2] Ct is: byte[] byteArray = new byte[2] isAssignment: false Array: new byte[2] Elements: []
lengths: [2] [2]
Their type are: class [B byte[]
statement is: String filePath = "/l!zG?^P<7WE", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: ArchiveFile archiveFile1 = new ArchiveFile(archiveData, filePath), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: // Create another ArchiveFile object with the same data
ArchiveFile archiveFile2 = new ArchiveFile(archiveData, filePath), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: assertTrue(archiveFile1.equals(archiveFile2)), class spoon.support.reflect.code.CtInvocationImpl
invocation is: assertTrue(archiveFile1.equals(archiveFile2)) target is:  method is: assertTrue(<unknown>)
TestCase is: byte[] byteArray = new byte[2];
String string = "/l!zG?^P<7WE";
ArchiveFile archiveFile = new ArchiveFile(byteArray, string);
ArchiveFile archiveFile = new ArchiveFile(byteArray, string);

statement is: org.evosuite.testcase.statements.ArrayStatement@d746b6c5 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [B
statement code is: byte[] byteArray = new byte[7]
statement is: com.sap.engine.services.dc.wsgate.ArchiveFile([BLjava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.sap.engine.services.dc.wsgate.ArchiveFile
statement code is: ArchiveFile archiveFile = new ArchiveFile(arg0, "")
statement is: com.sap.engine.services.dc.wsgate.ArchiveFile([BLjava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.sap.engine.services.dc.wsgate.ArchiveFile
statement code is: ArchiveFile archiveFile = new ArchiveFile(arg0, "")
statement is: equals(Ljava/lang/Object;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean equals = archiveFile.equals(arg0)
test data is: byte[] byteArray = new byte[7];
ArchiveFile archiveFile = new ArchiveFile(byteArray, "");
ArchiveFile archiveFile = new ArchiveFile(byteArray, "");
archiveFile.equals(archiveFile);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        byte[] byteArray = new byte[]{ 1, 2, 3, 4, 5, 6, 7 };
        ArchiveFile archiveFile = new ArchiveFile(byteArray, "Test File");
        archiveFile.equals(archiveFile);
    }
}
statement is: byte[] byteArray = new byte[]{ 1, 2, 3, 4, 5, 6, 7 }, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [] Ct is: byte[] byteArray = new byte[7] isAssignment: false Array: new byte[]{ 1, 2, 3, 4, 5, 6, 7 } Elements: [1, 2, 3, 4, 5, 6, 7]
lengths: [7] []
statement is: ArchiveFile archiveFile = new ArchiveFile(byteArray, "Test File"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: archiveFile.equals(archiveFile), class spoon.support.reflect.code.CtInvocationImpl
invocation is: archiveFile.equals(archiveFile) target is: archiveFile method is: equals(ArchiveFile)
source statement: com.sap.engine.services.dc.wsgate.ArchiveFile([BLjava/lang/String;)V callee: VariableReference: Statement 1, type com.sap.engine.services.dc.wsgate.ArchiveFileindex is: 1
Matched Method is: equals(Ljava/lang/Object;)Z
TestCase is: String string = "Test File";
ArchiveFile archiveFile = new ArchiveFile((byte[]) string, "");
archiveFile.equals(archiveFile);

statement is: com.sap.engine.services.dc.wsgate.ArchiveFile([BLjava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.sap.engine.services.dc.wsgate.ArchiveFile
statement code is: ArchiveFile archiveFile = new ArchiveFile((byte[]) null, (String) null)
statement is: com.sap.engine.services.dc.wsgate.ArchiveFile([BLjava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.sap.engine.services.dc.wsgate.ArchiveFile
statement code is: ArchiveFile archiveFile = new ArchiveFile((byte[]) null, "fileName")
statement is: equals(Ljava/lang/Object;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean equals = archiveFile.equals(arg0)
test data is: ArchiveFile archiveFile = new ArchiveFile((byte[]) null, (String) null);
ArchiveFile archiveFile = new ArchiveFile((byte[]) null, "fileName");
archiveFile.equals(archiveFile);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        ArchiveFile archiveFile1 = new ArchiveFile(null, null);
        ArchiveFile archiveFile2 = new ArchiveFile(null, "fileName");
        archiveFile1.equals(archiveFile2);
    }
}
statement is: ArchiveFile archiveFile1 = new ArchiveFile(null, null), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: ArchiveFile archiveFile2 = new ArchiveFile(null, "fileName"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: archiveFile1.equals(archiveFile2), class spoon.support.reflect.code.CtInvocationImpl
invocation is: archiveFile1.equals(archiveFile2) target is: archiveFile1 method is: equals(ArchiveFile)
source statement: com.sap.engine.services.dc.wsgate.ArchiveFile([BLjava/lang/String;)V callee: VariableReference: Statement 0, type com.sap.engine.services.dc.wsgate.ArchiveFileindex is: 2
Matched Method is: equals(Ljava/lang/Object;)Z
TestCase is: ArchiveFile archiveFile = new ArchiveFile((byte[]) null, (String) null);
String string = "fileName";
ArchiveFile archiveFile = new ArchiveFile((byte[]) string, (String) null);
archiveFile.equals(archiveFile);

statement is: org.evosuite.testcase.statements.ArrayStatement@6cd924af type is: class org.evosuite.testcase.statements.ArrayStatement return type class [B
statement code is: byte[] byteArray = new byte[7]
statement is: com.sap.engine.services.dc.wsgate.ArchiveFile([BLjava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.sap.engine.services.dc.wsgate.ArchiveFile
statement code is: ArchiveFile archiveFile = new ArchiveFile(arg0, "")
statement is: com.sap.engine.services.dc.wsgate.ArchiveFile()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.sap.engine.services.dc.wsgate.ArchiveFile
statement code is: ArchiveFile archiveFile = new ArchiveFile()
statement is: setContent([B)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: archiveFile.setContent(arg0)
statement is: equals(Ljava/lang/Object;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean equals = archiveFile.equals(arg0)
test data is: byte[] byteArray = new byte[7];
ArchiveFile archiveFile = new ArchiveFile(byteArray, "");
ArchiveFile archiveFile = new ArchiveFile();
archiveFile.setContent(byteArray);
archiveFile.equals(archiveFile);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Test data for testing the equals() method of the ArchiveFile class
        archiveFile1 = new ArchiveFile("test1.txt", "Test file 1");
        archiveFile2 = new ArchiveFile("test1.txt", "Test file 1");
        assertTrue(archiveFile1.equals(archiveFile2));
        archiveFile3 = new ArchiveFile("test2.txt", "Test file 2");
        assertFalse(archiveFile1.equals(archiveFile3));
        archiveFile4 = new ArchiveFile();
        assertFalse(archiveFile1.equals(archiveFile4));
    }
}
statement is: // Test data for testing the equals() method of the ArchiveFile class
archiveFile1 = new ArchiveFile("test1.txt", "Test file 1"), class spoon.support.reflect.code.CtAssignmentImpl
statement is: archiveFile2 = new ArchiveFile("test1.txt", "Test file 1"), class spoon.support.reflect.code.CtAssignmentImpl
statement is: assertTrue(archiveFile1.equals(archiveFile2)), class spoon.support.reflect.code.CtInvocationImpl
invocation is: assertTrue(archiveFile1.equals(archiveFile2)) target is:  method is: assertTrue(<unknown>)
statement is: archiveFile3 = new ArchiveFile("test2.txt", "Test file 2"), class spoon.support.reflect.code.CtAssignmentImpl
statement is: assertFalse(archiveFile1.equals(archiveFile3)), class spoon.support.reflect.code.CtInvocationImpl
invocation is: assertFalse(archiveFile1.equals(archiveFile3)) target is:  method is: assertFalse(<unknown>)
statement is: archiveFile4 = new ArchiveFile(), class spoon.support.reflect.code.CtAssignmentImpl
statement is: assertFalse(archiveFile1.equals(archiveFile4)), class spoon.support.reflect.code.CtInvocationImpl
invocation is: assertFalse(archiveFile1.equals(archiveFile4)) target is:  method is: assertFalse(<unknown>)
statement is: com.sap.engine.services.dc.wsgate.ArchiveFile()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.sap.engine.services.dc.wsgate.ArchiveFile
statement code is: ArchiveFile archiveFile = new ArchiveFile()
statement is: hashCode()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int hashCode = archiveFile.hashCode()
test data is: ArchiveFile archiveFile = new ArchiveFile();
archiveFile.hashCode();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
    }

    private String name;

    private int size;

    private String hashCode;

    public  ArchiveFile(String name, int size) {
        this.name = name;
        this.size = size;
    }

    public void setHashCode(String hashCode) {
        this.hashCode = hashCode;
    }
}
statement is: this.name = name, class spoon.support.reflect.code.CtAssignmentImpl
statement is: this.size = size, class spoon.support.reflect.code.CtAssignmentImpl
statement is: this.hashCode = hashCode, class spoon.support.reflect.code.CtAssignmentImpl
statement is: org.evosuite.testcase.statements.ArrayStatement@69ccb389 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [B
statement code is: byte[] byteArray = new byte[7]
statement is: com.sap.engine.services.dc.wsgate.ArchiveFile([BLjava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.sap.engine.services.dc.wsgate.ArchiveFile
statement code is: ArchiveFile archiveFile = new ArchiveFile(arg0, "")
statement is: getFileName()Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.lang.String
statement code is: String fileName = archiveFile.getFileName()
test data is: byte[] byteArray = new byte[7];
ArchiveFile archiveFile = new ArchiveFile(byteArray, "");
archiveFile.getFileName();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        byte[] byteArray = new byte[]{ 0, 1, 2, 3, 4, 5, 6 };
        ArchiveFile archiveFile = new ArchiveFile(byteArray, "example.txt");
        archiveFile.getFileName();
    }
}
statement is: byte[] byteArray = new byte[]{ 0, 1, 2, 3, 4, 5, 6 }, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [] Ct is: byte[] byteArray = new byte[7] isAssignment: false Array: new byte[]{ 0, 1, 2, 3, 4, 5, 6 } Elements: [0, 1, 2, 3, 4, 5, 6]
lengths: [7] []
statement is: ArchiveFile archiveFile = new ArchiveFile(byteArray, "example.txt"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: archiveFile.getFileName(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: archiveFile.getFileName() target is: archiveFile method is: getFileName()
source statement: com.sap.engine.services.dc.wsgate.ArchiveFile([BLjava/lang/String;)V callee: VariableReference: Statement 1, type com.sap.engine.services.dc.wsgate.ArchiveFileindex is: 1
Matched Method is: getFileName()Ljava/lang/String;
TestCase is: String string = "example.txt";
ArchiveFile archiveFile = new ArchiveFile((byte[]) string, "");
archiveFile.getFileName();

statement is: com.sap.engine.services.dc.wsgate.ArchiveFile()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.sap.engine.services.dc.wsgate.ArchiveFile
statement code is: ArchiveFile archiveFile = new ArchiveFile()
statement is: getContent()[B type is: class org.evosuite.testcase.statements.MethodStatement return type class [B
statement code is: byte[] content = archiveFile.getContent()
test data is: ArchiveFile archiveFile = new ArchiveFile();
archiveFile.getContent();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        ArchiveFile archiveFile = new ArchiveFile();
        archiveFile.setContent("This is a sample content");
    }
}
statement is: ArchiveFile archiveFile = new ArchiveFile(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: archiveFile.setContent("This is a sample content"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: archiveFile.setContent("This is a sample content") target is: archiveFile method is: setContent(java.lang.String)
TestCase is: ArchiveFile archiveFile = new ArchiveFile();

statement is: org.evosuite.testcase.statements.ArrayStatement@6f41a243 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [B
statement code is: byte[] byteArray = new byte[0]
statement is: com.sap.engine.services.dc.wsgate.ArchiveFile([BLjava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.sap.engine.services.dc.wsgate.ArchiveFile
statement code is: ArchiveFile archiveFile = new ArchiveFile(arg0, "vEh20Svv[{Tk")
statement is: getContent()[B type is: class org.evosuite.testcase.statements.MethodStatement return type class [B
statement code is: byte[] content = archiveFile.getContent()
test data is: byte[] byteArray = new byte[0];
ArchiveFile archiveFile = new ArchiveFile(byteArray, "vEh20Svv[{Tk");
archiveFile.getContent();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Test data for testing the getContent() method of ArchiveFile class
        byte[] byteArray = new byte[]{ 0x1, 0x2, 0x3, 0x4 };
        ArchiveFile archiveFile = new ArchiveFile(byteArray, "vEh20Svv[{Tk");
        archiveFile.getContent();
        // Expected output: An array of bytes containing the contents of the archive file }}
    }
}
statement is: // Test data for testing the getContent() method of ArchiveFile class
byte[] byteArray = new byte[]{ 0x1, 0x2, 0x3, 0x4 }, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [] Ct is: byte[] byteArray = new byte[0] isAssignment: false Array: new byte[]{ 0x1, 0x2, 0x3, 0x4 } Elements: [0x1, 0x2, 0x3, 0x4]
lengths: [0] []
statement is: ArchiveFile archiveFile = new ArchiveFile(byteArray, "vEh20Svv[{Tk"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: archiveFile.getContent(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: archiveFile.getContent() target is: archiveFile method is: getContent()
source statement: com.sap.engine.services.dc.wsgate.ArchiveFile([BLjava/lang/String;)V callee: VariableReference: Statement 1, type com.sap.engine.services.dc.wsgate.ArchiveFileindex is: 1
Matched Method is: getContent()[B
statement is: // Expected output: An array of bytes containing the contents of the archive file }}, class spoon.support.reflect.code.CtCommentImpl
TestCase is: String string = "vEh20Svv[{Tk";
ArchiveFile archiveFile = new ArchiveFile((byte[]) string, "vEh20Svv[{Tk");
archiveFile.getContent();

statement is: org.evosuite.testcase.statements.ArrayStatement@ceeb855a type is: class org.evosuite.testcase.statements.ArrayStatement return type class [B
statement code is: byte[] byteArray = new byte[7]
statement is: com.sap.engine.services.dc.wsgate.ArchiveFile([BLjava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.sap.engine.services.dc.wsgate.ArchiveFile
statement code is: ArchiveFile archiveFile = new ArchiveFile(arg0, "(null)")
statement is: getContent()[B type is: class org.evosuite.testcase.statements.MethodStatement return type class [B
statement code is: byte[] content = archiveFile.getContent()
test data is: byte[] byteArray = new byte[7];
ArchiveFile archiveFile = new ArchiveFile(byteArray, "(null)");
archiveFile.getContent();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        byte[] byteArray = new byte[]{ 0x2a, 0x34, 0x12, 0x56, 0x78, 0x9a, 0xbc };
        ArchiveFile archiveFile = new ArchiveFile(byteArray, "archive.dat");
        archiveFile.getContent();
    }
}
statement is: byte[] byteArray = new byte[]{ 0x2a, 0x34, 0x12, 0x56, 0x78, 0x9a, 0xbc }, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [] Ct is: byte[] byteArray = new byte[7] isAssignment: false Array: new byte[]{ 0x2a, 0x34, 0x12, 0x56, 0x78, 0x9a, 0xbc } Elements: [0x2a, 0x34, 0x12, 0x56, 0x78, 0x9a, 0xbc]
lengths: [7] []
statement is: ArchiveFile archiveFile = new ArchiveFile(byteArray, "archive.dat"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: archiveFile.getContent(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: archiveFile.getContent() target is: archiveFile method is: getContent()
source statement: com.sap.engine.services.dc.wsgate.ArchiveFile([BLjava/lang/String;)V callee: VariableReference: Statement 1, type com.sap.engine.services.dc.wsgate.ArchiveFileindex is: 1
Matched Method is: getContent()[B
TestCase is: String string = "archive.dat";
ArchiveFile archiveFile = new ArchiveFile((byte[]) string, "(null)");
archiveFile.getContent();

statement is: org.evosuite.testcase.statements.ArrayStatement@f176f31a type is: class org.evosuite.testcase.statements.ArrayStatement return type class [B
statement code is: byte[] byteArray = new byte[7]
statement is: com.sap.engine.services.dc.wsgate.ArchiveFile([BLjava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.sap.engine.services.dc.wsgate.ArchiveFile
statement code is: ArchiveFile archiveFile = new ArchiveFile(arg0, "(null)")
statement is: getFileName()Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.lang.String
statement code is: String fileName = archiveFile.getFileName()
test data is: byte[] byteArray = new byte[7];
ArchiveFile archiveFile = new ArchiveFile(byteArray, "(null)");
archiveFile.getFileName();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        byte[] byteArray = new byte[]{ 10, 20, 30, 40, 50, 60, 70 };
        ArchiveFile archiveFile = new ArchiveFile(byteArray, "test.txt");
        archiveFile.getFileName();
    }
}
statement is: byte[] byteArray = new byte[]{ 10, 20, 30, 40, 50, 60, 70 }, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [] Ct is: byte[] byteArray = new byte[7] isAssignment: false Array: new byte[]{ 10, 20, 30, 40, 50, 60, 70 } Elements: [10, 20, 30, 40, 50, 60, 70]
lengths: [7] []
statement is: ArchiveFile archiveFile = new ArchiveFile(byteArray, "test.txt"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: archiveFile.getFileName(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: archiveFile.getFileName() target is: archiveFile method is: getFileName()
source statement: com.sap.engine.services.dc.wsgate.ArchiveFile([BLjava/lang/String;)V callee: VariableReference: Statement 1, type com.sap.engine.services.dc.wsgate.ArchiveFileindex is: 1
Matched Method is: getFileName()Ljava/lang/String;
TestCase is: String string = "test.txt";
ArchiveFile archiveFile = new ArchiveFile((byte[]) string, "(null)");
archiveFile.getFileName();

statement is: com.sap.engine.services.dc.wsgate.ArchiveFile([BLjava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.sap.engine.services.dc.wsgate.ArchiveFile
statement code is: ArchiveFile archiveFile = new ArchiveFile((byte[]) null, (String) null)
statement is: getFileName()Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.lang.String
statement code is: String fileName = archiveFile.getFileName()
test data is: ArchiveFile archiveFile = new ArchiveFile((byte[]) null, (String) null);
archiveFile.getFileName();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        ArchiveFile archiveFile = new ArchiveFile(new byte[]{ 0x1, 0x2, 0x3 }, "example.txt");
        archiveFile.getFileName();
    }
}
statement is: ArchiveFile archiveFile = new ArchiveFile(new byte[]{ 0x1, 0x2, 0x3 }, "example.txt"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: archiveFile.getFileName(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: archiveFile.getFileName() target is: archiveFile method is: getFileName()
source statement: com.sap.engine.services.dc.wsgate.ArchiveFile([BLjava/lang/String;)V callee: VariableReference: Statement 0, type com.sap.engine.services.dc.wsgate.ArchiveFileindex is: 1
Matched Method is: getFileName()Ljava/lang/String;
TestCase is: String string = "example.txt";
ArchiveFile archiveFile = new ArchiveFile((byte[]) string, (String) null);
((ArchiveFile) string).getFileName();

* test suite isTestSuite: 37
Test 0: 
ArchiveFile archiveFile = new ArchiveFile();
ArchiveFile archiveFile = new ArchiveFile();
archiveFile.equals(archiveFile);
Test 1: 
byte[] byteArray = new byte[7];
ArchiveFile archiveFile = new ArchiveFile(byteArray, "");
archiveFile.setFileName("");
Test 2: 
ArchiveFile.getTypeDesc();
Test 3: 
Class<Object> class = Object.class;
ArchiveFile.getSerializer("", class, (QName) null);
Test 4: 
byte[] byteArray = new byte[7];
ArchiveFile archiveFile = new ArchiveFile(byteArray, "");
archiveFile.hashCode();
Test 5: 
Class<Object> class = Object.class;
ArchiveFile.getDeserializer("", class, (QName) null);
Test 6: 
byte[] byteArray = new byte[7];
ArchiveFile archiveFile = new ArchiveFile(byteArray, "");
archiveFile.equals(archiveFile);
Test 7: 
byte[] byteArray = new byte[7];
ArchiveFile archiveFile = new ArchiveFile(byteArray, "");
archiveFile.equals((Object) null);
Test 8: 
byte[] byteArray = new byte[7];
ArchiveFile archiveFile = new ArchiveFile(byteArray, "");
ArchiveFile archiveFile = new ArchiveFile();
archiveFile.equals(archiveFile);
Test 9: 
ArchiveFile archiveFile = new ArchiveFile();
byte[] byteArray = new byte[2];
ArchiveFile archiveFile = new ArchiveFile(byteArray, "/l!zG?^P<7WE");
archiveFile.equals(archiveFile);
Test 10: 
byte[] byteArray = new byte[7];
ArchiveFile archiveFile = new ArchiveFile(byteArray, "");
ArchiveFile archiveFile = new ArchiveFile(byteArray, "");
archiveFile.equals(archiveFile);
Test 11: 
ArchiveFile archiveFile = new ArchiveFile((byte[]) null, (String) null);
ArchiveFile archiveFile = new ArchiveFile((byte[]) null, "fileName");
archiveFile.equals(archiveFile);
Test 12: 
byte[] byteArray = new byte[7];
ArchiveFile archiveFile = new ArchiveFile(byteArray, "");
ArchiveFile archiveFile = new ArchiveFile();
archiveFile.setContent(byteArray);
archiveFile.equals(archiveFile);
Test 13: 
ArchiveFile archiveFile = new ArchiveFile();
archiveFile.hashCode();
Test 14: 
byte[] byteArray = new byte[7];
ArchiveFile archiveFile = new ArchiveFile(byteArray, "");
archiveFile.getFileName();
Test 15: 
ArchiveFile archiveFile = new ArchiveFile();
archiveFile.getContent();
Test 16: 
byte[] byteArray = new byte[0];
ArchiveFile archiveFile = new ArchiveFile(byteArray, "vEh20Svv[{Tk");
archiveFile.getContent();
Test 17: 
byte[] byteArray = new byte[7];
ArchiveFile archiveFile = new ArchiveFile(byteArray, "(null)");
archiveFile.getContent();
Test 18: 
byte[] byteArray = new byte[7];
ArchiveFile archiveFile = new ArchiveFile(byteArray, "(null)");
archiveFile.getFileName();
Test 19: 
ArchiveFile archiveFile = new ArchiveFile((byte[]) null, (String) null);
archiveFile.getFileName();
Test 20: 
ArchiveFile archiveFile = new ArchiveFile((byte[]) "example.txt", "");

Test 21: 
ArchiveFile.getTypeDesc();

Test 22: 
ArchiveFile.getSerializer("Hello World", (Class) null, (QName) null);

Test 23: 
ArchiveFile archiveFile = new ArchiveFile((byte[]) "testfile.txt", "");
archiveFile.hashCode();

Test 24: 
ArchiveFile.getDeserializer("a string value", (Class) null, (QName) null);

Test 25: 
ArchiveFile archiveFile = new ArchiveFile((byte[]) "large_archive.txt", "");
String string = "large_archive.txt";
ArchiveFile archiveFile = new ArchiveFile((byte[]) string, "");
archiveFile.equals(archiveFile);

Test 26: 
byte[] byteArray = new byte[7];
ArchiveFile archiveFile = new ArchiveFile(byteArray, "example_file");

Test 27: 
ArchiveFile archiveFile = new ArchiveFile((byte[]) "Hello, world", "");
archiveFile.equals(archiveFile);

Test 28: 
byte[] byteArray = new byte[2];
ArchiveFile archiveFile = new ArchiveFile(byteArray, "/l!zG?^P<7WE");
ArchiveFile archiveFile = new ArchiveFile(byteArray, "/l!zG?^P<7WE");

Test 29: 
ArchiveFile archiveFile = new ArchiveFile((byte[]) "Test File", "");
archiveFile.equals(archiveFile);

Test 30: 
ArchiveFile archiveFile = new ArchiveFile((byte[]) null, (String) null);
ArchiveFile archiveFile = new ArchiveFile((byte[]) "fileName", (String) null);
archiveFile.equals(archiveFile);

Test 31: 
ArchiveFile archiveFile = new ArchiveFile((byte[]) "example.txt", "");
archiveFile.getFileName();

Test 32: 
ArchiveFile archiveFile = new ArchiveFile();

Test 33: 
ArchiveFile archiveFile = new ArchiveFile((byte[]) "vEh20Svv[{Tk", "vEh20Svv[{Tk");
archiveFile.getContent();

Test 34: 
ArchiveFile archiveFile = new ArchiveFile((byte[]) "archive.dat", "(null)");
archiveFile.getContent();

Test 35: 
ArchiveFile archiveFile = new ArchiveFile((byte[]) "test.txt", "(null)");
archiveFile.getFileName();

Test 36: 
String string = "example.txt";
ArchiveFile archiveFile = new ArchiveFile((byte[]) "example.txt", (String) null);
((ArchiveFile) string).getFileName();


* Generated after the refinement and before minimization 37 tests with total length 92
* test suite isTestSuite: 37
Test 0: 
ArchiveFile archiveFile = new ArchiveFile();
ArchiveFile archiveFile = new ArchiveFile();
archiveFile.equals(archiveFile);
Test 1: 
byte[] byteArray = new byte[7];
ArchiveFile archiveFile = new ArchiveFile(byteArray, "");
archiveFile.setFileName("");
Test 2: 
ArchiveFile.getTypeDesc();
Test 3: 
Class<Object> class = Object.class;
ArchiveFile.getSerializer("", class, (QName) null);
Test 4: 
byte[] byteArray = new byte[7];
ArchiveFile archiveFile = new ArchiveFile(byteArray, "");
archiveFile.hashCode();
Test 5: 
Class<Object> class = Object.class;
ArchiveFile.getDeserializer("", class, (QName) null);
Test 6: 
byte[] byteArray = new byte[7];
ArchiveFile archiveFile = new ArchiveFile(byteArray, "");
archiveFile.equals(archiveFile);
Test 7: 
byte[] byteArray = new byte[7];
ArchiveFile archiveFile = new ArchiveFile(byteArray, "");
archiveFile.equals((Object) null);
Test 8: 
byte[] byteArray = new byte[7];
ArchiveFile archiveFile = new ArchiveFile(byteArray, "");
ArchiveFile archiveFile = new ArchiveFile();
archiveFile.equals(archiveFile);
Test 9: 
ArchiveFile archiveFile = new ArchiveFile();
byte[] byteArray = new byte[2];
ArchiveFile archiveFile = new ArchiveFile(byteArray, "/l!zG?^P<7WE");
archiveFile.equals(archiveFile);
Test 10: 
byte[] byteArray = new byte[7];
ArchiveFile archiveFile = new ArchiveFile(byteArray, "");
ArchiveFile archiveFile = new ArchiveFile(byteArray, "");
archiveFile.equals(archiveFile);
Test 11: 
ArchiveFile archiveFile = new ArchiveFile((byte[]) null, (String) null);
ArchiveFile archiveFile = new ArchiveFile((byte[]) null, "fileName");
archiveFile.equals(archiveFile);
Test 12: 
byte[] byteArray = new byte[7];
ArchiveFile archiveFile = new ArchiveFile(byteArray, "");
ArchiveFile archiveFile = new ArchiveFile();
archiveFile.setContent(byteArray);
archiveFile.equals(archiveFile);
Test 13: 
ArchiveFile archiveFile = new ArchiveFile();
archiveFile.hashCode();
Test 14: 
byte[] byteArray = new byte[7];
ArchiveFile archiveFile = new ArchiveFile(byteArray, "");
archiveFile.getFileName();
Test 15: 
ArchiveFile archiveFile = new ArchiveFile();
archiveFile.getContent();
Test 16: 
byte[] byteArray = new byte[0];
ArchiveFile archiveFile = new ArchiveFile(byteArray, "vEh20Svv[{Tk");
archiveFile.getContent();
Test 17: 
byte[] byteArray = new byte[7];
ArchiveFile archiveFile = new ArchiveFile(byteArray, "(null)");
archiveFile.getContent();
Test 18: 
byte[] byteArray = new byte[7];
ArchiveFile archiveFile = new ArchiveFile(byteArray, "(null)");
archiveFile.getFileName();
Test 19: 
ArchiveFile archiveFile = new ArchiveFile((byte[]) null, (String) null);
archiveFile.getFileName();
Test 20: 
ArchiveFile archiveFile = new ArchiveFile((byte[]) "example.txt", "");

Test 21: 
ArchiveFile.getTypeDesc();

Test 22: 
ArchiveFile.getSerializer("Hello World", (Class) null, (QName) null);

Test 23: 
ArchiveFile archiveFile = new ArchiveFile((byte[]) "testfile.txt", "");
archiveFile.hashCode();

Test 24: 
ArchiveFile.getDeserializer("a string value", (Class) null, (QName) null);

Test 25: 
ArchiveFile archiveFile = new ArchiveFile((byte[]) "large_archive.txt", "");
String string = "large_archive.txt";
ArchiveFile archiveFile = new ArchiveFile((byte[]) string, "");
archiveFile.equals(archiveFile);

Test 26: 
byte[] byteArray = new byte[7];
ArchiveFile archiveFile = new ArchiveFile(byteArray, "example_file");

Test 27: 
ArchiveFile archiveFile = new ArchiveFile((byte[]) "Hello, world", "");
archiveFile.equals(archiveFile);

Test 28: 
byte[] byteArray = new byte[2];
ArchiveFile archiveFile = new ArchiveFile(byteArray, "/l!zG?^P<7WE");
ArchiveFile archiveFile = new ArchiveFile(byteArray, "/l!zG?^P<7WE");

Test 29: 
ArchiveFile archiveFile = new ArchiveFile((byte[]) "Test File", "");
archiveFile.equals(archiveFile);

Test 30: 
ArchiveFile archiveFile = new ArchiveFile((byte[]) null, (String) null);
ArchiveFile archiveFile = new ArchiveFile((byte[]) "fileName", (String) null);
archiveFile.equals(archiveFile);

Test 31: 
ArchiveFile archiveFile = new ArchiveFile((byte[]) "example.txt", "");
archiveFile.getFileName();

Test 32: 
ArchiveFile archiveFile = new ArchiveFile();

Test 33: 
ArchiveFile archiveFile = new ArchiveFile((byte[]) "vEh20Svv[{Tk", "vEh20Svv[{Tk");
archiveFile.getContent();

Test 34: 
ArchiveFile archiveFile = new ArchiveFile((byte[]) "archive.dat", "(null)");
archiveFile.getContent();

Test 35: 
ArchiveFile archiveFile = new ArchiveFile((byte[]) "test.txt", "(null)");
archiveFile.getFileName();

Test 36: 
String string = "example.txt";
ArchiveFile archiveFile = new ArchiveFile((byte[]) "example.txt", (String) null);
((ArchiveFile) string).getFileName();


* Minimizing test suite
* test suite isTestSuite: 20
Test 0: 
ArchiveFile archiveFile = new ArchiveFile();
archiveFile.getContent();
Test 1: 
byte[] byteArray = new byte[7];
ArchiveFile archiveFile = new ArchiveFile(byteArray, "");
archiveFile.setFileName("");
Test 2: 
ArchiveFile.getTypeDesc();
Test 3: 
ArchiveFile.getSerializer("Hello World", (Class) null, (QName) null);
Test 4: 
ArchiveFile archiveFile = new ArchiveFile((byte[]) null, (String) null);
archiveFile.getFileName();
Test 5: 
ArchiveFile.getDeserializer("a string value", (Class) null, (QName) null);
Test 6: 
ArchiveFile archiveFile = new ArchiveFile((byte[]) null, (String) null);
archiveFile.equals(archiveFile);
Test 7: 
byte[] byteArray = new byte[7];
ArchiveFile archiveFile = new ArchiveFile(byteArray, "");
archiveFile.equals((Object) null);
Test 8: 
ArchiveFile archiveFile = new ArchiveFile((byte[]) null, (String) null);
ArchiveFile archiveFile = new ArchiveFile((byte[]) null, "fileName");
archiveFile.equals(archiveFile);
Test 9: 
byte[] byteArray = new byte[7];
ArchiveFile archiveFile = new ArchiveFile(byteArray, "");
ArchiveFile archiveFile = new ArchiveFile();
archiveFile.equals(archiveFile);
Test 10: 
ArchiveFile archiveFile = new ArchiveFile();
byte[] byteArray = new byte[2];
ArchiveFile archiveFile = new ArchiveFile(byteArray, "/l!zG?^P<7WE");
archiveFile.equals(archiveFile);
Test 11: 
byte[] byteArray = new byte[7];
ArchiveFile archiveFile = new ArchiveFile(byteArray, "");
ArchiveFile archiveFile = new ArchiveFile(byteArray, "");
archiveFile.equals(archiveFile);
Test 12: 
ArchiveFile archiveFile = new ArchiveFile();
ArchiveFile archiveFile = new ArchiveFile();
archiveFile.equals(archiveFile);
Test 13: 
byte[] byteArray = new byte[7];
ArchiveFile archiveFile = new ArchiveFile(byteArray, "");
ArchiveFile archiveFile = new ArchiveFile();
archiveFile.setContent(byteArray);
archiveFile.equals(archiveFile);
Test 14: 
ArchiveFile archiveFile = new ArchiveFile();
archiveFile.hashCode();
Test 15: 
byte[] byteArray = new byte[7];
ArchiveFile archiveFile = new ArchiveFile(byteArray, "");
archiveFile.hashCode();
Test 16: 
byte[] byteArray = new byte[0];
ArchiveFile archiveFile = new ArchiveFile(byteArray, "vEh20Svv[{Tk");
archiveFile.getContent();
Test 17: 
byte[] byteArray = new byte[7];
ArchiveFile archiveFile = new ArchiveFile(byteArray, "(null)");
archiveFile.getContent();
Test 18: 
byte[] byteArray = new byte[7];
ArchiveFile archiveFile = new ArchiveFile(byteArray, "");
archiveFile.getFileName();
Test 19: 
byte[] byteArray = new byte[7];
ArchiveFile archiveFile = new ArchiveFile(byteArray, "(null)");
archiveFile.getFileName();

* Going to analyze the coverage criteria
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 85%
* Total number of goals: 47
* Number of covered goals: 40
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 95%
* Total number of goals: 44
* Number of covered goals: 42
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 69%
* Total number of goals: 16
* Number of covered goals: 11
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 11
* Number of covered goals: 11
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 85%
* Total number of goals: 47
* Number of covered goals: 40
* Generated 20 tests with total length 55
* Resulting test suite's coverage: 87% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 44%
* Compiling and checking tests
Going to execute: removeTestsThatDoNotCompile
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: ArchiveFile archiveFile = new ArchiveFile();
byte[] content = archiveFile.getContent();
assertNull(content);


** It was a parseable test case! 
refined test name is: testGetContentDefaultValuesReturnsNull
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: byte[] arg0 = new byte[7];
ArchiveFile archiveFile = new ArchiveFile(arg0, "");
archiveFile.setFileName("");
assertEquals("", archiveFile.getFileName());


** It was a parseable test case! 
refined test name is: testGetFileNameWithEmptyString
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: TypeDesc typeDesc = ArchiveFile.getTypeDesc();
assertFalse(typeDesc.hasAttributes());


** It was a parseable test case! 
refined test name is: testHasAttributesNoAttributes
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Serializer serializer = ArchiveFile.getSerializer("Hello World", (Class) null, (QName) null);
assertEquals("Axis SAX Mechanism", serializer.getMechanismType());


** It was a parseable test case! 
refined test name is: testSerializerForHelloWorld
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: ArchiveFile archiveFile = new ArchiveFile((byte[]) null, (String) null);
String fileName = archiveFile.getFileName();
assertNull(fileName);


** It was a parseable test case! 
refined test name is: testGetFileNameWithNullData
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Deserializer deserializer = ArchiveFile.getDeserializer("a string value", (Class) null, (QName) null);
assertFalse(deserializer.componentsReady());


** It was a parseable test case! 
refined test name is: testDeserializerComponentsReadyFalse
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: ArchiveFile arg0 = new ArchiveFile((byte[]) null, (String) null);
boolean equals = arg0.equals(arg0);
assertTrue(equals);


** It was a parseable test case! 
refined test name is: testEqualsMethodForValidArchiveFile
* Compiling Tests
refined test name is: testEqualsValidInstanceReturnsTrue
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: byte[] arg0 = new byte[7];
ArchiveFile archiveFile = new ArchiveFile(arg0, "");
boolean equals = archiveFile.equals((Object) null);
assertFalse(equals);


** It was a parseable test case! 
refined test name is: testEqualsNullObjectReturnsFalse
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: ArchiveFile archiveFile = new ArchiveFile((byte[]) null, (String) null);
ArchiveFile arg0 = new ArchiveFile((byte[]) null, "fileName");
boolean equals = archiveFile.equals(arg0);
assertFalse(arg0.equals((Object)archiveFile));
assertFalse(equals);


** It was a parseable test case! 
refined test name is: testEqualsSameFileNameReturnsTrue
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: ArchiveFile archiveFile = new ArchiveFile();
ArchiveFile arg0 = new ArchiveFile();
boolean equals = archiveFile.equals(arg0);
assertTrue(equals);


** It was a parseable test case! 
refined test name is: testArchiveFilesWithSameContentsAreEqual
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: ArchiveFile archiveFile = new ArchiveFile();
archiveFile.hashCode();

** It was a parseable test case! 
refined test name is: testHashCodeShouldReturnExpectedValue
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: byte[] arg0 = new byte[7];
ArchiveFile archiveFile = new ArchiveFile(arg0, "");
archiveFile.hashCode();

** It was a parseable test case! 
refined test name is: testHashCodeReturnsHashCodeBasedOnFileBytesOnly
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: byte[] arg0 = new byte[0];
ArchiveFile archiveFile = new ArchiveFile(arg0, "vEh20Svv[{Tk");
byte[] content = archiveFile.getContent();
assertSame(content, arg0);


** It was a parseable test case! 
refined test name is: testGetContentReturnsOriginalContent
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: byte[] arg0 = new byte[7];
ArchiveFile archiveFile = new ArchiveFile(arg0, "(null)");
byte[] content = archiveFile.getContent();
assertArrayEquals(new byte[] {(byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0, (byte)0}, content);


** It was a parseable test case! 
refined test name is: testGetContentWithNullFileNameShouldReturnZeroes
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: byte[] arg0 = new byte[7];
ArchiveFile archiveFile = new ArchiveFile(arg0, "");
String fileName = archiveFile.getFileName();
assertEquals("", fileName);


** It was a parseable test case! 
refined test name is: testGetFileNameWithEmptyString
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: byte[] arg0 = new byte[7];
ArchiveFile archiveFile = new ArchiveFile(arg0, "(null)");
String fileName = archiveFile.getFileName();
assertEquals("(null)", fileName);


** It was a parseable test case! 
refined test name is: testGetFileNameWithNullByteArray
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 18:00:03.046 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/tmp/EvoSuite_pathingJar8980276434142183503.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 18:00:03.068 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8980276434142183503.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 18:00:03.239 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/tmp/EvoSuite_pathingJar8980276434142183503.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 18:00:03.242 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8980276434142183503.jar
[MASTER] 18:00:03.407 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/tmp/EvoSuite_pathingJar8980276434142183503.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 18:00:03.409 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8980276434142183503.jar
[MASTER] 18:00:03.575 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/tmp/EvoSuite_pathingJar8980276434142183503.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 18:00:03.577 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8980276434142183503.jar
[MASTER] 18:00:03.739 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/tmp/EvoSuite_pathingJar8980276434142183503.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 18:00:03.743 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8980276434142183503.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 18:00:03.910 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/tmp/EvoSuite_pathingJar8980276434142183503.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 18:00:03.913 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8980276434142183503.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 18:00:04.073 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/tmp/EvoSuite_pathingJar8980276434142183503.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 18:00:04.076 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8980276434142183503.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 18:00:04.240 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/tmp/EvoSuite_pathingJar8980276434142183503.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 18:00:04.245 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8980276434142183503.jar
[MASTER] 18:00:04.445 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/tmp/EvoSuite_pathingJar8980276434142183503.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 18:00:04.448 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8980276434142183503.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 18:00:04.659 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/tmp/EvoSuite_pathingJar8980276434142183503.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 18:00:04.662 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8980276434142183503.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 18:00:05.196 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/tmp/EvoSuite_pathingJar8980276434142183503.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 18:00:05.200 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8980276434142183503.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 18:00:05.409 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/tmp/EvoSuite_pathingJar8980276434142183503.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 18:00:05.411 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8980276434142183503.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 18:00:05.574 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/tmp/EvoSuite_pathingJar8980276434142183503.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 18:00:05.577 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8980276434142183503.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 18:00:05.738 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/tmp/EvoSuite_pathingJar8980276434142183503.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 18:00:05.741 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8980276434142183503.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 18:00:05.941 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/tmp/EvoSuite_pathingJar8980276434142183503.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 18:00:05.943 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8980276434142183503.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 18:00:06.096 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/tmp/EvoSuite_pathingJar8980276434142183503.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 18:00:06.100 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8980276434142183503.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 6 called: 0 to improve: false
[MASTER] 18:00:06.389 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/tmp/EvoSuite_pathingJar8980276434142183503.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 18:00:06.391 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8980276434142183503.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 9 called: 0 to improve: false
[MASTER] 18:00:06.597 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/tmp/EvoSuite_pathingJar8980276434142183503.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 18:00:06.600 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8980276434142183503.jar
* Writing tests to file
* Writing JUnit test case 'ArchiveFile_ESTest' to evosuite-tests
** Write a test suite: 9 called: 0 to improve: false
* Done!

* Computation finished
