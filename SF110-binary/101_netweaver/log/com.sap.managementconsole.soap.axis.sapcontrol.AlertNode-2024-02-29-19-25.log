* EvoSuite 1.2.1-SNAPSHOT
* Going to generate test cases for class: com.sap.managementconsole.soap.axis.sapcontrol.AlertNode
* Starting Client-0
* Properties loaded from /home/ubuntu/UTestGen/Evaluation/getting_results/dataset/SF110/101_netweaver/evosuite-files/evosuite.properties
* Connecting to master process on port 18653
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
* Finished analyzing classpath
* Generating tests for class com.sap.managementconsole.soap.axis.sapcontrol.AlertNode
* Test criteria:
  - Branch Coverage
  - Line Coverage
  - Method-Output Coverage
  - Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 443
* Using seed 1709234742708
[Progress:>                             0%] [Cov:>                                  0%]* Starting evolution
* Initial Number of Goals in DynaMOSA = 128 / 443
[Progress:>                             0%] [Cov:=======================>           67%][Progress:>                             1%] [Cov:==========================>        76%][Progress:>                             1%] [Cov:===========================>       79%][Progress:>                             1%] [Cov:=============================>     83%][Progress:>                             1%] [Cov:=============================>     85%][Progress:>                             2%] [Cov:==============================>    87%][Progress:>                             2%] [Cov:==============================>    88%][Progress:>                             2%] [Cov:==============================>    88%][Progress:>                             2%] [Cov:==============================>    88%][Progress:>                             3%] [Cov:==============================>    88%][Progress:>                             3%] [Cov:===============================>   89%][Progress:>                             3%] [Cov:===============================>   89%][Progress:>                             3%] [Cov:===============================>   89%][Progress:>                             3%] [Cov:===============================>   90%][Progress:>                             3%] [Cov:===============================>   90%][Progress:>                             3%] [Cov:===============================>   90%][Progress:=>                            4%] [Cov:===============================>   90%][Progress:=>                            4%] [Cov:===============================>   90%][Progress:=>                            4%] [Cov:===============================>   90%][Progress:=>                            4%] [Cov:===============================>   90%][Progress:=>                            4%] [Cov:===============================>   90%][Progress:=>                            4%] [Cov:================================>  92%][Progress:=>                            4%] [Cov:================================>  92%][Progress:=>                            4%] [Cov:================================>  92%][Progress:=>                            4%] [Cov:================================>  92%][Progress:=>                            5%] [Cov:================================>  92%][Progress:=>                            5%] [Cov:================================>  92%][Progress:=>                            5%] [Cov:================================>  92%][Progress:=>                            5%] [Cov:================================>  92%][Progress:=>                            5%] [Cov:================================>  92%][Progress:=>                            5%] [Cov:================================>  92%][Progress:=>                            5%] [Cov:================================>  92%][Progress:=>                            5%] [Cov:================================>  92%][Progress:=>                            5%] [Cov:================================>  92%][Progress:=>                            5%] [Cov:================================>  92%][Progress:=>                            5%] [Cov:================================>  92%][Progress:=>                            5%] [Cov:================================>  92%][Progress:=>                            6%] [Cov:================================>  92%][Progress:=>                            6%] [Cov:================================>  92%][Progress:=>                            6%] [Cov:================================>  92%][Progress:=>                            6%] [Cov:================================>  92%][Progress:=>                            6%] [Cov:================================>  92%][Progress:=>                            6%] [Cov:================================>  92%][Progress:=>                            6%] [Cov:================================>  92%][Progress:=>                            6%] [Cov:================================>  92%][Progress:=>                            6%] [Cov:================================>  92%][Progress:=>                            6%] [Cov:================================>  92%][Progress:=>                            6%] [Cov:================================>  93%][Progress:==>                           7%] [Cov:================================>  93%][Progress:==>                           7%] [Cov:================================>  93%][Progress:==>                           7%] [Cov:================================>  93%][Progress:==>                           7%] [Cov:================================>  93%][Progress:==>                           7%] [Cov:================================>  93%][Progress:==>                           7%] [Cov:================================>  93%][Progress:==>                           7%] [Cov:================================>  94%][Progress:==>                           7%] [Cov:================================>  94%][Progress:==>                           7%] [Cov:================================>  94%][Progress:==>                           7%] [Cov:================================>  94%][Progress:==>                           7%] [Cov:================================>  94%][Progress:==>                           7%] [Cov:================================>  94%][Progress:==>                           8%] [Cov:================================>  94%][Progress:==>                           8%] [Cov:================================>  94%][Progress:==>                           8%] [Cov:================================>  94%][Progress:==>                           8%] [Cov:================================>  94%][Progress:==>                           8%] [Cov:================================>  94%][Progress:==>                           8%] [Cov:================================>  94%][Progress:==>                           8%] [Cov:================================>  94%][Progress:==>                           8%] [Cov:================================>  94%][Progress:==>                           8%] [Cov:================================>  94%][Progress:==>                           8%] [Cov:================================>  94%][Progress:==>                           8%] [Cov:================================>  94%][Progress:==>                           8%] [Cov:================================>  94%][Progress:==>                           9%] [Cov:================================>  94%][Progress:==>                           9%] [Cov:================================>  94%][Progress:==>                           9%] [Cov:================================>  94%][Progress:==>                           9%] [Cov:================================>  94%][Progress:==>                           9%] [Cov:================================>  94%][Progress:==>                           9%] [Cov:================================>  94%][Progress:==>                           9%] [Cov:================================>  94%][Progress:==>                           9%] [Cov:================================>  94%][Progress:==>                           9%] [Cov:================================>  94%][Progress:==>                           9%] [Cov:================================>  94%][Progress:==>                           9%] [Cov:================================>  94%][Progress:==>                           9%] [Cov:================================>  94%][Progress:===>                          10%] [Cov:================================>  94%][Progress:===>                          10%] [Cov:================================>  94%][Progress:===>                          10%] [Cov:================================>  94%][Progress:===>                          10%] [Cov:================================>  94%][Progress:===>                          10%] [Cov:================================>  94%][Progress:===>                          10%] [Cov:================================>  94%][Progress:===>                          10%] [Cov:================================>  94%][Progress:===>                          10%] [Cov:================================>  94%][Progress:===>                          10%] [Cov:================================>  94%][Progress:===>                          10%] [Cov:================================>  94%][Progress:===>                          10%] [Cov:================================>  94%][Progress:===>                          10%] [Cov:================================>  94%][Progress:===>                          10%] [Cov:================================>  94%][Progress:===>                          10%] [Cov:================================>  94%][Progress:===>                          10%] [Cov:================================>  94%][Progress:===>                          11%] [Cov:================================>  94%][Progress:===>                          11%] [Cov:================================>  94%][Progress:===>                          11%] [Cov:================================>  94%][Progress:===>                          11%] [Cov:================================>  94%][Progress:===>                          11%] [Cov:================================>  94%][Progress:===>                          11%] [Cov:================================>  94%][Progress:===>                          11%] [Cov:================================>  94%][Progress:===>                          11%] [Cov:================================>  94%][Progress:===>                          11%] [Cov:================================>  94%][Progress:===>                          11%] [Cov:================================>  94%][Progress:===>                          11%] [Cov:================================>  94%][Progress:===>                          11%] [Cov:================================>  94%][Progress:===>                          11%] [Cov:================================>  94%][Progress:===>                          11%] [Cov:================================>  94%][Progress:===>                          11%] [Cov:================================>  94%][Progress:===>                          11%] [Cov:================================>  94%][Progress:===>                          12%] [Cov:================================>  94%][Progress:===>                          12%] [Cov:================================>  94%][Progress:===>                          12%] [Cov:================================>  94%][Progress:===>                          12%] [Cov:================================>  94%][Progress:===>                          12%] [Cov:================================>  94%][Progress:===>                          12%] [Cov:================================>  94%][Progress:===>                          12%] [Cov:================================>  94%][Progress:===>                          12%] [Cov:================================>  94%][Progress:===>                          12%] [Cov:================================>  94%][Progress:===>                          12%] [Cov:================================>  94%][Progress:===>                          13%] [Cov:================================>  94%][Progress:===>                          13%] [Cov:================================>  94%][Progress:===>                          13%] [Cov:================================>  94%][Progress:===>                          13%] [Cov:================================>  94%][Progress:===>                          13%] [Cov:================================>  94%][Progress:===>                          13%] [Cov:================================>  94%][Progress:===>                          13%] [Cov:================================>  94%][Progress:===>                          13%] [Cov:================================>  94%][Progress:===>                          13%] [Cov:================================>  94%][Progress:===>                          13%] [Cov:================================>  94%][Progress:===>                          13%] [Cov:================================>  94%][Progress:===>                          13%] [Cov:================================>  94%][Progress:====>                         14%] [Cov:================================>  94%][Progress:====>                         14%] [Cov:================================>  94%][Progress:====>                         14%] [Cov:================================>  94%][Progress:====>                         14%] [Cov:================================>  94%][Progress:====>                         14%] [Cov:================================>  94%][Progress:====>                         14%] [Cov:================================>  94%][Progress:====>                         14%] [Cov:================================>  94%][Progress:====>                         14%] [Cov:================================>  94%][Progress:====>                         14%] [Cov:================================>  94%][Progress:====>                         14%] [Cov:================================>  94%][Progress:====>                         14%] [Cov:================================>  94%][Progress:====>                         14%] [Cov:================================>  94%][Progress:====>                         15%] [Cov:================================>  94%][Progress:====>                         15%] [Cov:================================>  94%][Progress:====>                         15%] [Cov:================================>  94%][Progress:====>                         15%] [Cov:================================>  94%][Progress:====>                         15%] [Cov:================================>  94%][Progress:====>                         15%] [Cov:================================>  94%][Progress:====>                         15%] [Cov:================================>  94%][Progress:====>                         15%] [Cov:================================>  94%][Progress:====>                         15%] [Cov:================================>  94%][Progress:====>                         15%] [Cov:================================>  94%][Progress:====>                         15%] [Cov:================================>  94%][Progress:====>                         15%] [Cov:================================>  94%][Progress:====>                         15%] [Cov:================================>  94%][Progress:====>                         16%] [Cov:================================>  94%][Progress:====>                         16%] [Cov:================================>  94%][Progress:====>                         16%] [Cov:================================>  94%][Progress:====>                         16%] [Cov:================================>  94%][Progress:====>                         16%] [Cov:================================>  94%][Progress:====>                         16%] [Cov:=================================> 95%][Progress:====>                         16%] [Cov:=================================> 95%][Progress:====>                         16%] [Cov:=================================> 95%][Progress:====>                         16%] [Cov:=================================> 95%][Progress:====>                         16%] [Cov:=================================> 95%][Progress:====>                         16%] [Cov:=================================> 95%][Progress:====>                         16%] [Cov:=================================> 95%][Progress:=====>                        17%] [Cov:=================================> 95%][Progress:=====>                        17%] [Cov:=================================> 95%][Progress:=====>                        17%] [Cov:=================================> 95%][Progress:=====>                        17%] [Cov:=================================> 95%][Progress:=====>                        17%] [Cov:=================================> 95%][Progress:=====>                        17%] [Cov:=================================> 95%][Progress:=====>                        17%] [Cov:=================================> 95%][Progress:=====>                        17%] [Cov:=================================> 95%][Progress:=====>                        17%] [Cov:=================================> 95%][Progress:=====>                        17%] [Cov:=================================> 95%][Progress:=====>                        17%] [Cov:=================================> 95%][Progress:=====>                        17%] [Cov:=================================> 95%][Progress:=====>                        18%] [Cov:=================================> 95%][Progress:=====>                        18%] [Cov:=================================> 95%][Progress:=====>                        18%] [Cov:=================================> 95%][Progress:=====>                        18%] [Cov:=================================> 95%][Progress:=====>                        18%] [Cov:=================================> 95%][Progress:=====>                        18%] [Cov:=================================> 95%][Progress:=====>                        18%] [Cov:=================================> 95%][Progress:=====>                        18%] [Cov:=================================> 95%][Progress:=====>                        18%] [Cov:=================================> 95%][Progress:=====>                        18%] [Cov:=================================> 95%][Progress:=====>                        18%] [Cov:=================================> 95%][Progress:=====>                        18%] [Cov:=================================> 95%][Progress:=====>                        18%] [Cov:=================================> 95%][Progress:=====>                        18%] [Cov:=================================> 95%][Progress:=====>                        18%] [Cov:=================================> 95%][Progress:=====>                        18%] [Cov:=================================> 95%][Progress:=====>                        19%] [Cov:=================================> 95%][Progress:=====>                        19%] [Cov:=================================> 95%][Progress:=====>                        19%] [Cov:=================================> 95%][Progress:=====>                        19%] [Cov:=================================> 95%][Progress:=====>                        19%] [Cov:=================================> 95%][Progress:=====>                        19%] [Cov:=================================> 95%][Progress:=====>                        19%] [Cov:=================================> 95%][Progress:=====>                        19%] [Cov:=================================> 95%][Progress:=====>                        19%] [Cov:=================================> 95%][Progress:=====>                        19%] [Cov:=================================> 95%][Progress:=====>                        19%] [Cov:=================================> 95%][Progress:=====>                        19%] [Cov:=================================> 95%][Progress:=====>                        19%] [Cov:=================================> 95%][Progress:=====>                        19%] [Cov:=================================> 95%][Progress:======>                       20%] [Cov:=================================> 95%][Progress:======>                       20%] [Cov:=================================> 95%][Progress:======>                       20%] [Cov:=================================> 95%][Progress:======>                       20%] [Cov:=================================> 95%][Progress:======>                       20%] [Cov:=================================> 95%][Progress:======>                       20%] [Cov:=================================> 95%][Progress:======>                       20%] [Cov:=================================> 95%][Progress:======>                       20%] [Cov:=================================> 95%][Progress:======>                       20%] [Cov:=================================> 95%][Progress:======>                       20%] [Cov:=================================> 95%][Progress:======>                       20%] [Cov:=================================> 95%][Progress:======>                       20%] [Cov:=================================> 95%][Progress:======>                       20%] [Cov:=================================> 95%][Progress:======>                       21%] [Cov:=================================> 95%][Progress:======>                       21%] [Cov:=================================> 95%][Progress:======>                       21%] [Cov:=================================> 95%][Progress:======>                       21%] [Cov:=================================> 95%][Progress:======>                       21%] [Cov:=================================> 95%][Progress:======>                       21%] [Cov:=================================> 95%][Progress:======>                       21%] [Cov:=================================> 95%][Progress:======>                       21%] [Cov:=================================> 95%][Progress:======>                       21%] [Cov:=================================> 95%][Progress:======>                       21%] [Cov:=================================> 95%][Progress:======>                       21%] [Cov:=================================> 95%][Progress:======>                       21%] [Cov:=================================> 95%][Progress:======>                       21%] [Cov:=================================> 95%][Progress:======>                       21%] [Cov:=================================> 95%][Progress:======>                       22%] [Cov:=================================> 95%][Progress:======>                       22%] [Cov:=================================> 95%][Progress:======>                       22%] [Cov:=================================> 95%][Progress:======>                       22%] [Cov:=================================> 95%][Progress:======>                       22%] [Cov:=================================> 95%][Progress:======>                       22%] [Cov:=================================> 95%][Progress:======>                       22%] [Cov:=================================> 95%][Progress:======>                       22%] [Cov:=================================> 95%][Progress:======>                       22%] [Cov:=================================> 95%][Progress:======>                       22%] [Cov:=================================> 95%][Progress:======>                       22%] [Cov:=================================> 95%][Progress:======>                       22%] [Cov:=================================> 95%][Progress:======>                       22%] [Cov:=================================> 95%][Progress:======>                       23%] [Cov:=================================> 95%][Progress:======>                       23%] [Cov:=================================> 95%][Progress:======>                       23%] [Cov:=================================> 95%][Progress:======>                       23%] [Cov:=================================> 95%][Progress:======>                       23%] [Cov:=================================> 95%][Progress:======>                       23%] [Cov:=================================> 95%][Progress:======>                       23%] [Cov:=================================> 95%][Progress:======>                       23%] [Cov:=================================> 95%][Progress:======>                       23%] [Cov:=================================> 95%][Progress:======>                       23%] [Cov:=================================> 95%][Progress:======>                       23%] [Cov:=================================> 95%][Progress:======>                       23%] [Cov:=================================> 95%][Progress:======>                       23%] [Cov:=================================> 95%][Progress:======>                       23%] [Cov:=================================> 95%][Progress:=======>                      24%] [Cov:=================================> 95%][Progress:=======>                      24%] [Cov:=================================> 95%][Progress:=======>                      24%] [Cov:=================================> 95%][Progress:=======>                      24%] [Cov:=================================> 95%][Progress:=======>                      24%] [Cov:=================================> 95%][Progress:=======>                      24%] [Cov:=================================> 95%][Progress:=======>                      24%] [Cov:=================================> 95%][Progress:=======>                      24%] [Cov:=================================> 95%][Progress:=======>                      24%] [Cov:=================================> 95%][Progress:=======>                      24%] [Cov:=================================> 95%][Progress:=======>                      24%] [Cov:=================================> 95%][Progress:=======>                      24%] [Cov:=================================> 95%][Progress:=======>                      24%] [Cov:=================================> 95%][Progress:=======>                      24%] [Cov:=================================> 95%][Progress:=======>                      24%] [Cov:=================================> 95%][Progress:=======>                      24%] [Cov:=================================> 95%][Progress:=======>                      25%] [Cov:=================================> 95%][Progress:=======>                      25%] [Cov:=================================> 95%][Progress:=======>                      25%] [Cov:=================================> 95%][Progress:=======>                      25%] [Cov:=================================> 95%][Progress:=======>                      25%] [Cov:=================================> 95%][Progress:=======>                      25%] [Cov:=================================> 95%][Progress:=======>                      25%] [Cov:=================================> 95%][Progress:=======>                      25%] [Cov:=================================> 95%][Progress:=======>                      25%] [Cov:=================================> 95%][Progress:=======>                      25%] [Cov:=================================> 95%][Progress:=======>                      25%] [Cov:=================================> 95%][Progress:=======>                      25%] [Cov:=================================> 95%][Progress:=======>                      26%] [Cov:=================================> 95%][Progress:=======>                      26%] [Cov:=================================> 95%][Progress:=======>                      26%] [Cov:=================================> 95%][Progress:=======>                      26%] [Cov:=================================> 95%][Progress:=======>                      26%] [Cov:=================================> 95%][Progress:=======>                      26%] [Cov:=================================> 95%][Progress:=======>                      26%] [Cov:=================================> 95%][Progress:=======>                      26%] [Cov:=================================> 95%][Progress:=======>                      26%] [Cov:=================================> 95%][Progress:=======>                      26%] [Cov:=================================> 95%][Progress:=======>                      26%] [Cov:=================================> 95%][Progress:=======>                      26%] [Cov:=================================> 95%][Progress:=======>                      26%] [Cov:=================================> 95%][Progress:=======>                      26%] [Cov:=================================> 95%][Progress:========>                     27%] [Cov:=================================> 95%][Progress:========>                     27%] [Cov:=================================> 95%][Progress:========>                     27%] [Cov:=================================> 95%][Progress:========>                     27%] [Cov:=================================> 95%][Progress:========>                     27%] [Cov:=================================> 95%][Progress:========>                     27%] [Cov:=================================> 95%][Progress:========>                     27%] [Cov:=================================> 95%][Progress:========>                     27%] [Cov:=================================> 95%][Progress:========>                     27%] [Cov:=================================> 95%][Progress:========>                     27%] [Cov:=================================> 95%][Progress:========>                     27%] [Cov:=================================> 95%][Progress:========>                     27%] [Cov:=================================> 95%][Progress:========>                     27%] [Cov:=================================> 95%][Progress:========>                     28%] [Cov:=================================> 95%][Progress:========>                     28%] [Cov:=================================> 95%][Progress:========>                     28%] [Cov:=================================> 95%][Progress:========>                     28%] [Cov:=================================> 95%][Progress:========>                     28%] [Cov:=================================> 95%][Progress:========>                     28%] [Cov:=================================> 95%][Progress:========>                     28%] [Cov:=================================> 95%][Progress:========>                     28%] [Cov:=================================> 95%][Progress:========>                     28%] [Cov:=================================> 95%][Progress:========>                     28%] [Cov:=================================> 95%][Progress:========>                     28%] [Cov:=================================> 95%][Progress:========>                     28%] [Cov:=================================> 95%][Progress:========>                     28%] [Cov:=================================> 95%][Progress:========>                     28%] [Cov:=================================> 95%][Progress:========>                     28%] [Cov:=================================> 95%][Progress:========>                     29%] [Cov:=================================> 95%][Progress:========>                     29%] [Cov:=================================> 95%][Progress:========>                     29%] [Cov:=================================> 95%][Progress:========>                     29%] [Cov:=================================> 95%][Progress:========>                     29%] [Cov:=================================> 95%][Progress:========>                     29%] [Cov:=================================> 95%][Progress:========>                     29%] [Cov:=================================> 95%][Progress:========>                     29%] [Cov:=================================> 95%][Progress:========>                     29%] [Cov:=================================> 95%][Progress:========>                     29%] [Cov:=================================> 95%][Progress:========>                     29%] [Cov:=================================> 95%][Progress:========>                     29%] [Cov:=================================> 95%][Progress:========>                     29%] [Cov:=================================> 95%][Progress:========>                     29%] [Cov:=================================> 95%][Progress:=========>                    30%] [Cov:=================================> 95%][Progress:=========>                    30%] [Cov:=================================> 95%][Progress:=========>                    30%] [Cov:=================================> 95%][Progress:=========>                    30%] [Cov:=================================> 95%][Progress:=========>                    30%] [Cov:=================================> 95%][Progress:=========>                    30%] [Cov:=================================> 95%][Progress:=========>                    30%] [Cov:=================================> 95%][Progress:=========>                    30%] [Cov:=================================> 95%][Progress:=========>                    30%] [Cov:=================================> 95%][Progress:=========>                    30%] [Cov:=================================> 95%][Progress:=========>                    30%] [Cov:=================================> 95%][Progress:=========>                    30%] [Cov:=================================> 95%][Progress:=========>                    31%] [Cov:=================================> 95%][Progress:=========>                    31%] [Cov:=================================> 95%][Progress:=========>                    31%] [Cov:=================================> 95%][Progress:=========>                    31%] [Cov:=================================> 95%][Progress:=========>                    31%] [Cov:=================================> 95%][Progress:=========>                    31%] [Cov:=================================> 95%][Progress:=========>                    31%] [Cov:=================================> 95%][Progress:=========>                    31%] [Cov:=================================> 95%][Progress:=========>                    31%] [Cov:=================================> 95%][Progress:=========>                    31%] [Cov:=================================> 95%][Progress:=========>                    31%] [Cov:=================================> 95%][Progress:=========>                    31%] [Cov:=================================> 95%][Progress:=========>                    31%] [Cov:=================================> 95%][Progress:=========>                    31%] [Cov:=================================> 95%][Progress:=========>                    32%] [Cov:=================================> 95%][Progress:=========>                    32%] [Cov:=================================> 95%][Progress:=========>                    32%] [Cov:=================================> 95%][Progress:=========>                    32%] [Cov:=================================> 95%][Progress:=========>                    32%] [Cov:=================================> 95%][Progress:=========>                    32%] [Cov:=================================> 95%][Progress:=========>                    32%] [Cov:=================================> 95%][Progress:=========>                    32%] [Cov:=================================> 95%][Progress:=========>                    32%] [Cov:=================================> 95%][Progress:=========>                    32%] [Cov:=================================> 95%][Progress:=========>                    32%] [Cov:=================================> 95%][Progress:=========>                    32%] [Cov:=================================> 95%][Progress:=========>                    32%] [Cov:=================================> 95%][Progress:=========>                    33%] [Cov:=================================> 95%][Progress:=========>                    33%] [Cov:=================================> 95%][Progress:=========>                    33%] [Cov:=================================> 95%][Progress:=========>                    33%] [Cov:=================================> 95%][Progress:=========>                    33%] [Cov:=================================> 95%][Progress:=========>                    33%] [Cov:=================================> 95%][Progress:=========>                    33%] [Cov:=================================> 95%][Progress:=========>                    33%] [Cov:=================================> 95%][Progress:=========>                    33%] [Cov:=================================> 95%][Progress:=========>                    33%] [Cov:=================================> 95%][Progress:=========>                    33%] [Cov:=================================> 95%][Progress:=========>                    33%] [Cov:=================================> 95%][Progress:=========>                    33%] [Cov:=================================> 95%][Progress:=========>                    33%] [Cov:=================================> 95%][Progress:==========>                   34%] [Cov:=================================> 95%][Progress:==========>                   34%] [Cov:=================================> 95%][Progress:==========>                   34%] [Cov:=================================> 95%][Progress:==========>                   34%] [Cov:=================================> 95%][Progress:==========>                   34%] [Cov:=================================> 95%][Progress:==========>                   34%] [Cov:=================================> 95%][Progress:==========>                   34%] [Cov:=================================> 95%][Progress:==========>                   34%] [Cov:=================================> 95%][Progress:==========>                   34%] [Cov:=================================> 95%][Progress:==========>                   34%] [Cov:=================================> 95%][Progress:==========>                   34%] [Cov:=================================> 95%][Progress:==========>                   34%] [Cov:=================================> 95%][Progress:==========>                   34%] [Cov:=================================> 95%][Progress:==========>                   34%] [Cov:=================================> 95%][Progress:==========>                   34%] [Cov:=================================> 95%][Progress:==========>                   34%] [Cov:=================================> 95%][Progress:==========>                   35%] [Cov:=================================> 95%][Progress:==========>                   35%] [Cov:=================================> 95%][Progress:==========>                   35%] [Cov:=================================> 95%][Progress:==========>                   35%] [Cov:=================================> 95%][Progress:==========>                   35%] [Cov:=================================> 95%][Progress:==========>                   35%] [Cov:=================================> 95%][Progress:==========>                   35%] [Cov:=================================> 95%][Progress:==========>                   35%] [Cov:=================================> 95%][Progress:==========>                   35%] [Cov:=================================> 95%][Progress:==========>                   35%] [Cov:=================================> 95%][Progress:==========>                   35%] [Cov:=================================> 95%][Progress:==========>                   35%] [Cov:=================================> 95%][Progress:==========>                   35%] [Cov:=================================> 95%][Progress:==========>                   35%] [Cov:=================================> 95%][Progress:==========>                   35%] [Cov:=================================> 95%][Progress:==========>                   35%] [Cov:=================================> 95%][Progress:==========>                   36%] [Cov:=================================> 95%][Progress:==========>                   36%] [Cov:=================================> 95%][Progress:==========>                   36%] [Cov:=================================> 95%][Progress:==========>                   36%] [Cov:=================================> 95%][Progress:==========>                   36%] [Cov:=================================> 95%][Progress:==========>                   36%] [Cov:=================================> 95%][Progress:==========>                   36%] [Cov:=================================> 95%][Progress:==========>                   36%] [Cov:=================================> 95%][Progress:==========>                   36%] [Cov:=================================> 95%][Progress:==========>                   36%] [Cov:=================================> 95%][Progress:==========>                   36%] [Cov:=================================> 95%][Progress:==========>                   36%] [Cov:=================================> 95%][Progress:==========>                   36%] [Cov:=================================> 95%][Progress:==========>                   36%] [Cov:=================================> 95%][Progress:==========>                   36%] [Cov:=================================> 95%][Progress:===========>                  37%] [Cov:=================================> 95%][Progress:===========>                  37%] [Cov:=================================> 95%][Progress:===========>                  37%] [Cov:=================================> 95%][Progress:===========>                  37%] [Cov:=================================> 95%][Progress:===========>                  37%] [Cov:=================================> 95%][Progress:===========>                  37%] [Cov:=================================> 95%][Progress:===========>                  37%] [Cov:=================================> 95%][Progress:===========>                  37%] [Cov:=================================> 95%][Progress:===========>                  37%] [Cov:=================================> 95%][Progress:===========>                  37%] [Cov:=================================> 95%][Progress:===========>                  37%] [Cov:=================================> 95%][Progress:===========>                  37%] [Cov:=================================> 95%][Progress:===========>                  37%] [Cov:=================================> 95%][Progress:===========>                  37%] [Cov:=================================> 95%][Progress:===========>                  38%] [Cov:=================================> 95%][Progress:===========>                  38%] [Cov:=================================> 95%][Progress:===========>                  38%] [Cov:=================================> 95%][Progress:===========>                  38%] [Cov:=================================> 95%][Progress:===========>                  38%] [Cov:=================================> 95%][Progress:===========>                  38%] [Cov:=================================> 95%][Progress:===========>                  38%] [Cov:=================================> 95%][Progress:===========>                  38%] [Cov:=================================> 95%][Progress:===========>                  38%] [Cov:=================================> 95%][Progress:===========>                  38%] [Cov:=================================> 95%][Progress:===========>                  38%] [Cov:=================================> 95%][Progress:===========>                  38%] [Cov:=================================> 95%][Progress:===========>                  38%] [Cov:=================================> 95%][Progress:===========>                  38%] [Cov:=================================> 95%][Progress:===========>                  38%] [Cov:=================================> 95%][Progress:===========>                  38%] [Cov:=================================> 95%][Progress:===========>                  38%] [Cov:=================================> 95%][Progress:===========>                  38%] [Cov:=================================> 95%][Progress:===========>                  38%] [Cov:=================================> 95%][Progress:===========>                  39%] [Cov:=================================> 95%][Progress:===========>                  39%] [Cov:=================================> 95%][Progress:===========>                  39%] [Cov:=================================> 95%][Progress:===========>                  39%] [Cov:=================================> 95%][Progress:===========>                  39%] [Cov:=================================> 95%][Progress:===========>                  39%] [Cov:=================================> 95%][Progress:===========>                  39%] [Cov:=================================> 95%][Progress:===========>                  39%] [Cov:=================================> 95%][Progress:===========>                  39%] [Cov:=================================> 95%][Progress:===========>                  39%] [Cov:=================================> 95%][Progress:===========>                  39%] [Cov:=================================> 95%][Progress:===========>                  39%] [Cov:=================================> 95%][Progress:===========>                  39%] [Cov:=================================> 95%][Progress:===========>                  39%] [Cov:=================================> 95%][Progress:===========>                  39%] [Cov:=================================> 95%][Progress:============>                 40%] [Cov:=================================> 95%][Progress:============>                 40%] [Cov:=================================> 95%][Progress:============>                 40%] [Cov:=================================> 95%][Progress:============>                 40%] [Cov:=================================> 95%][Progress:============>                 40%] [Cov:=================================> 95%][Progress:============>                 40%] [Cov:=================================> 95%][Progress:============>                 40%] [Cov:=================================> 95%][Progress:============>                 40%] [Cov:=================================> 95%][Progress:============>                 40%] [Cov:=================================> 95%][Progress:============>                 40%] [Cov:=================================> 95%][Progress:============>                 40%] [Cov:=================================> 95%][Progress:============>                 40%] [Cov:=================================> 95%][Progress:============>                 40%] [Cov:=================================> 95%][Progress:============>                 40%] [Cov:=================================> 95%][Progress:============>                 40%] [Cov:=================================> 95%][Progress:============>                 41%] [Cov:=================================> 95%][Progress:============>                 41%] [Cov:=================================> 95%][Progress:============>                 41%] [Cov:=================================> 95%][Progress:============>                 41%] [Cov:=================================> 95%][Progress:============>                 41%] [Cov:=================================> 95%][Progress:============>                 41%] [Cov:=================================> 95%][Progress:============>                 41%] [Cov:=================================> 95%][Progress:============>                 41%] [Cov:=================================> 95%][Progress:============>                 41%] [Cov:=================================> 95%][Progress:============>                 41%] [Cov:=================================> 95%][Progress:============>                 41%] [Cov:=================================> 95%][Progress:============>                 41%] [Cov:=================================> 95%][Progress:============>                 41%] [Cov:=================================> 95%][Progress:============>                 41%] [Cov:=================================> 95%][Progress:============>                 41%] [Cov:=================================> 95%][Progress:============>                 41%] [Cov:=================================> 95%][Progress:============>                 42%] [Cov:=================================> 95%][Progress:============>                 42%] [Cov:=================================> 95%][Progress:============>                 42%] [Cov:=================================> 95%][Progress:============>                 42%] [Cov:=================================> 95%][Progress:============>                 42%] [Cov:=================================> 95%][Progress:============>                 42%] [Cov:=================================> 95%][Progress:============>                 42%] [Cov:=================================> 95%][Progress:============>                 42%] [Cov:=================================> 95%][Progress:============>                 42%] [Cov:=================================> 95%][Progress:============>                 42%] [Cov:=================================> 95%][Progress:============>                 42%] [Cov:=================================> 95%][Progress:============>                 42%] [Cov:=================================> 95%][Progress:============>                 42%] [Cov:=================================> 95%][Progress:============>                 42%] [Cov:=================================> 95%][Progress:============>                 43%] [Cov:=================================> 95%][Progress:============>                 43%] [Cov:=================================> 95%][Progress:============>                 43%] [Cov:=================================> 95%][Progress:============>                 43%] [Cov:=================================> 95%][Progress:============>                 43%] [Cov:=================================> 95%][Progress:============>                 43%] [Cov:=================================> 95%][Progress:============>                 43%] [Cov:=================================> 95%][Progress:============>                 43%] [Cov:=================================> 95%][Progress:============>                 43%] [Cov:=================================> 95%][Progress:============>                 43%] [Cov:=================================> 95%][Progress:============>                 43%] [Cov:=================================> 95%][Progress:============>                 43%] [Cov:=================================> 95%][Progress:============>                 43%] [Cov:=================================> 95%][Progress:============>                 43%] [Cov:=================================> 95%][Progress:============>                 43%] [Cov:=================================> 95%][Progress:============>                 43%] [Cov:=================================> 95%][Progress:============>                 43%] [Cov:=================================> 95%][Progress:============>                 43%] [Cov:=================================> 95%][Progress:============>                 43%] [Cov:=================================> 95%][Progress:=============>                44%] [Cov:=================================> 95%][Progress:=============>                44%] [Cov:=================================> 95%][Progress:=============>                44%] [Cov:=================================> 95%][Progress:=============>                44%] [Cov:=================================> 95%][Progress:=============>                44%] [Cov:=================================> 95%][Progress:=============>                44%] [Cov:=================================> 95%][Progress:=============>                44%] [Cov:=================================> 95%][Progress:=============>                44%] [Cov:=================================> 95%][Progress:=============>                44%] [Cov:=================================> 95%][Progress:=============>                44%] [Cov:=================================> 95%][Progress:=============>                44%] [Cov:=================================> 95%][Progress:=============>                44%] [Cov:=================================> 95%][Progress:=============>                44%] [Cov:=================================> 95%][Progress:=============>                44%] [Cov:=================================> 95%][Progress:=============>                44%] [Cov:=================================> 95%][Progress:=============>                44%] [Cov:=================================> 95%][Progress:=============>                44%] [Cov:=================================> 95%][Progress:=============>                44%] [Cov:=================================> 95%][Progress:=============>                44%] [Cov:=================================> 95%][Progress:=============>                44%] [Cov:=================================> 95%][Progress:=============>                44%] [Cov:=================================> 95%][Progress:=============>                44%] [Cov:=================================> 95%][Progress:=============>                44%] [Cov:=================================> 95%][Progress:=============>                45%] [Cov:=================================> 95%][Progress:=============>                45%] [Cov:=================================> 95%][Progress:=============>                45%] [Cov:=================================> 95%][Progress:=============>                45%] [Cov:=================================> 95%][Progress:=============>                45%] [Cov:=================================> 95%][Progress:=============>                45%] [Cov:=================================> 95%][Progress:=============>                45%] [Cov:=================================> 95%][Progress:=============>                45%] [Cov:=================================> 95%][Progress:=============>                45%] [Cov:=================================> 95%][Progress:=============>                45%] [Cov:=================================> 95%][Progress:=============>                45%] [Cov:=================================> 95%][Progress:=============>                45%] [Cov:=================================> 95%][Progress:=============>                45%] [Cov:=================================> 95%][Progress:=============>                45%] [Cov:=================================> 95%][Progress:=============>                45%] [Cov:=================================> 95%][Progress:=============>                45%] [Cov:=================================> 95%][Progress:=============>                45%] [Cov:=================================> 95%][Progress:=============>                45%] [Cov:=================================> 95%][Progress:=============>                45%] [Cov:=================================> 95%][Progress:=============>                45%] [Cov:=================================> 95%][Progress:=============>                45%] [Cov:=================================> 95%][Progress:=============>                45%] [Cov:=================================> 95%][Progress:=============>                45%] [Cov:=================================> 95%][Progress:=============>                45%] [Cov:=================================> 95%][Progress:=============>                45%] [Cov:=================================> 95%][Progress:=============>                45%] [Cov:=================================> 95%][Progress:=============>                45%] [Cov:=================================> 95%][Progress:=============>                45%] [Cov:=================================> 95%][Progress:=============>                46%] [Cov:=================================> 95%][Progress:=============>                46%] [Cov:=================================> 95%][Progress:=============>                46%] [Cov:=================================> 95%][Progress:=============>                46%] [Cov:=================================> 95%][Progress:=============>                46%] [Cov:=================================> 95%][Progress:=============>                46%] [Cov:=================================> 95%][Progress:=============>                46%] [Cov:=================================> 95%][Progress:=============>                46%] [Cov:=================================> 95%][Progress:=============>                46%] [Cov:=================================> 95%][Progress:=============>                46%] [Cov:=================================> 95%][Progress:=============>                46%] [Cov:=================================> 95%][Progress:=============>                46%] [Cov:=================================> 95%][Progress:=============>                46%] [Cov:=================================> 95%][Progress:=============>                46%] [Cov:=================================> 95%][Progress:=============>                46%] [Cov:=================================> 95%][Progress:=============>                46%] [Cov:=================================> 95%][Progress:=============>                46%] [Cov:=================================> 95%][Progress:==============>               47%] [Cov:=================================> 95%][Progress:==============>               47%] [Cov:=================================> 95%][Progress:==============>               47%] [Cov:=================================> 95%][Progress:==============>               47%] [Cov:=================================> 95%][Progress:==============>               47%] [Cov:=================================> 95%][Progress:==============>               47%] [Cov:=================================> 95%][Progress:==============>               47%] [Cov:=================================> 95%][Progress:==============>               47%] [Cov:=================================> 95%][Progress:==============>               47%] [Cov:=================================> 95%][Progress:==============>               47%] [Cov:=================================> 95%][Progress:==============>               47%] [Cov:=================================> 95%][Progress:==============>               47%] [Cov:=================================> 95%][Progress:==============>               47%] [Cov:=================================> 95%][Progress:==============>               47%] [Cov:=================================> 95%][Progress:==============>               47%] [Cov:=================================> 95%][Progress:==============>               47%] [Cov:=================================> 95%][Progress:==============>               47%] [Cov:=================================> 95%][Progress:==============>               48%] [Cov:=================================> 95%][Progress:==============>               48%] [Cov:=================================> 95%][Progress:==============>               48%] [Cov:=================================> 95%][Progress:==============>               48%] [Cov:=================================> 95%][Progress:==============>               48%] [Cov:=================================> 95%][Progress:==============>               48%] [Cov:=================================> 95%][Progress:==============>               48%] [Cov:=================================> 95%][Progress:==============>               48%] [Cov:=================================> 95%][Progress:==============>               48%] [Cov:=================================> 95%][Progress:==============>               48%] [Cov:=================================> 95%][Progress:==============>               48%] [Cov:=================================> 95%][Progress:==============>               48%] [Cov:=================================> 95%][Progress:==============>               48%] [Cov:=================================> 95%][Progress:==============>               48%] [Cov:=================================> 95%][Progress:==============>               48%] [Cov:=================================> 95%][Progress:==============>               49%] [Cov:=================================> 95%][Progress:==============>               49%] [Cov:=================================> 95%][Progress:==============>               49%] [Cov:=================================> 95%][Progress:==============>               49%] [Cov:=================================> 95%][Progress:==============>               49%] [Cov:=================================> 95%][Progress:==============>               49%] [Cov:=================================> 95%][Progress:==============>               49%] [Cov:=================================> 95%][Progress:==============>               49%] [Cov:=================================> 95%][Progress:==============>               49%] [Cov:=================================> 95%][Progress:==============>               49%] [Cov:=================================> 95%][Progress:==============>               49%] [Cov:=================================> 95%][Progress:==============>               49%] [Cov:=================================> 95%][Progress:==============>               49%] [Cov:=================================> 95%][Progress:===============>              50%] [Cov:=================================> 95%][Progress:===============>              50%] [Cov:=================================> 95%][Progress:===============>              50%] [Cov:=================================> 95%][Progress:===============>              50%] [Cov:=================================> 95%][Progress:===============>              50%] [Cov:=================================> 95%][Progress:===============>              50%] [Cov:=================================> 95%][Progress:===============>              50%] [Cov:=================================> 95%][Progress:===============>              50%] [Cov:=================================> 95%][Progress:===============>              50%] [Cov:=================================> 95%][Progress:===============>              50%] [Cov:=================================> 95%][Progress:===============>              50%] [Cov:=================================> 95%][Progress:===============>              50%] [Cov:=================================> 95%][Progress:===============>              50%] [Cov:=================================> 95%][Progress:===============>              50%] [Cov:=================================> 95%][Progress:===============>              50%] [Cov:=================================> 95%][Progress:===============>              51%] [Cov:=================================> 95%][Progress:===============>              51%] [Cov:=================================> 95%][Progress:===============>              51%] [Cov:=================================> 95%][Progress:===============>              51%] [Cov:=================================> 95%][Progress:===============>              51%] [Cov:=================================> 95%][Progress:===============>              51%] [Cov:=================================> 95%][Progress:===============>              51%] [Cov:=================================> 95%][Progress:===============>              51%] [Cov:=================================> 95%][Progress:===============>              51%] [Cov:=================================> 95%][Progress:===============>              51%] [Cov:=================================> 95%][Progress:===============>              51%] [Cov:=================================> 95%][Progress:===============>              51%] [Cov:=================================> 95%][Progress:===============>              51%] [Cov:=================================> 95%][Progress:===============>              51%] [Cov:=================================> 95%][Progress:===============>              51%] [Cov:=================================> 95%][Progress:===============>              51%] [Cov:=================================> 95%][Progress:===============>              52%] [Cov:=================================> 95%][Progress:===============>              52%] [Cov:=================================> 95%][Progress:===============>              52%] [Cov:=================================> 95%][Progress:===============>              52%] [Cov:=================================> 95%][Progress:===============>              52%] [Cov:=================================> 95%][Progress:===============>              52%] [Cov:=================================> 95%][Progress:===============>              52%] [Cov:=================================> 95%][Progress:===============>              52%] [Cov:=================================> 95%][Progress:===============>              52%] [Cov:=================================> 95%][Progress:===============>              52%] [Cov:=================================> 95%][Progress:===============>              52%] [Cov:=================================> 95%][Progress:===============>              52%] [Cov:=================================> 95%][Progress:===============>              53%] [Cov:=================================> 95%][Progress:===============>              53%] [Cov:=================================> 95%][Progress:===============>              53%] [Cov:=================================> 95%][Progress:===============>              53%] [Cov:=================================> 95%][Progress:===============>              53%] [Cov:=================================> 95%][Progress:===============>              53%] [Cov:=================================> 95%][Progress:===============>              53%] [Cov:=================================> 95%][Progress:===============>              53%] [Cov:=================================> 95%][Progress:===============>              53%] [Cov:=================================> 95%][Progress:===============>              53%] [Cov:=================================> 95%][Progress:===============>              53%] [Cov:=================================> 95%][Progress:===============>              53%] [Cov:=================================> 95%][Progress:===============>              53%] [Cov:=================================> 95%][Progress:===============>              53%] [Cov:=================================> 95%][Progress:===============>              53%] [Cov:=================================> 95%][Progress:===============>              53%] [Cov:=================================> 95%][Progress:===============>              53%] [Cov:=================================> 95%][Progress:===============>              53%] [Cov:=================================> 95%][Progress:================>             54%] [Cov:=================================> 95%][Progress:================>             54%] [Cov:=================================> 95%][Progress:================>             54%] [Cov:=================================> 95%][Progress:================>             54%] [Cov:=================================> 95%][Progress:================>             54%] [Cov:=================================> 95%][Progress:================>             54%] [Cov:=================================> 95%][Progress:================>             54%] [Cov:=================================> 95%][Progress:================>             54%] [Cov:=================================> 95%][Progress:================>             54%] [Cov:=================================> 95%][Progress:================>             54%] [Cov:=================================> 95%][Progress:================>             54%] [Cov:=================================> 95%][Progress:================>             54%] [Cov:=================================> 95%][Progress:================>             54%] [Cov:=================================> 95%][Progress:================>             54%] [Cov:=================================> 95%][Progress:================>             54%] [Cov:=================================> 95%][Progress:================>             54%] [Cov:=================================> 95%][Progress:================>             54%] [Cov:=================================> 95%][Progress:================>             55%] [Cov:=================================> 95%][Progress:================>             55%] [Cov:=================================> 95%][Progress:================>             55%] [Cov:=================================> 95%][Progress:================>             55%] [Cov:=================================> 95%][Progress:================>             55%] [Cov:=================================> 95%][Progress:================>             55%] [Cov:=================================> 95%][Progress:================>             55%] [Cov:=================================> 95%][Progress:================>             55%] [Cov:=================================> 95%][Progress:================>             55%] [Cov:=================================> 95%][Progress:================>             55%] [Cov:=================================> 95%][Progress:================>             55%] [Cov:=================================> 95%][Progress:================>             55%] [Cov:=================================> 95%][Progress:================>             55%] [Cov:=================================> 95%][Progress:================>             55%] [Cov:=================================> 95%][Progress:================>             55%] [Cov:=================================> 95%][Progress:================>             55%] [Cov:=================================> 95%][Progress:================>             55%] [Cov:=================================> 95%][Progress:================>             56%] [Cov:=================================> 95%][Progress:================>             56%] [Cov:=================================> 95%][Progress:================>             56%] [Cov:=================================> 95%][Progress:================>             56%] [Cov:=================================> 95%][Progress:================>             56%] [Cov:=================================> 95%][Progress:================>             56%] [Cov:=================================> 95%][Progress:================>             56%] [Cov:=================================> 95%][Progress:================>             56%] [Cov:=================================> 95%][Progress:================>             56%] [Cov:=================================> 95%][Progress:================>             56%] [Cov:=================================> 95%][Progress:================>             56%] [Cov:=================================> 95%][Progress:================>             56%] [Cov:=================================> 95%][Progress:================>             56%] [Cov:=================================> 95%][Progress:================>             56%] [Cov:=================================> 95%][Progress:================>             56%] [Cov:=================================> 95%][Progress:=================>            57%] [Cov:=================================> 95%][Progress:=================>            57%] [Cov:=================================> 95%][Progress:=================>            57%] [Cov:=================================> 95%][Progress:=================>            57%] [Cov:=================================> 95%][Progress:=================>            57%] [Cov:=================================> 95%][Progress:=================>            57%] [Cov:=================================> 95%][Progress:=================>            57%] [Cov:=================================> 95%][Progress:=================>            57%] [Cov:=================================> 95%][Progress:=================>            57%] [Cov:=================================> 95%][Progress:=================>            57%] [Cov:=================================> 95%][Progress:=================>            57%] [Cov:=================================> 95%][Progress:=================>            57%] [Cov:=================================> 95%][Progress:=================>            57%] [Cov:=================================> 95%][Progress:=================>            57%] [Cov:=================================> 95%][Progress:=================>            57%] [Cov:=================================> 95%][Progress:=================>            58%] [Cov:=================================> 95%][Progress:=================>            58%] [Cov:=================================> 95%][Progress:=================>            58%] [Cov:=================================> 95%][Progress:=================>            58%] [Cov:=================================> 95%][Progress:=================>            58%] [Cov:=================================> 95%][Progress:=================>            58%] [Cov:=================================> 95%][Progress:=================>            58%] [Cov:=================================> 95%][Progress:=================>            58%] [Cov:=================================> 95%][Progress:=================>            58%] [Cov:=================================> 95%][Progress:=================>            58%] [Cov:=================================> 95%][Progress:=================>            58%] [Cov:=================================> 95%][Progress:=================>            58%] [Cov:=================================> 95%][Progress:=================>            58%] [Cov:=================================> 95%][Progress:=================>            58%] [Cov:=================================> 95%][Progress:=================>            58%] [Cov:=================================> 95%][Progress:=================>            58%] [Cov:=================================> 95%][Progress:=================>            58%] [Cov:=================================> 95%][Progress:=================>            59%] [Cov:=================================> 95%][Progress:=================>            59%] [Cov:=================================> 95%][Progress:=================>            59%] [Cov:=================================> 95%][Progress:=================>            59%] [Cov:=================================> 95%][Progress:=================>            59%] [Cov:=================================> 95%][Progress:=================>            59%] [Cov:=================================> 95%][Progress:=================>            59%] [Cov:=================================> 95%][Progress:=================>            59%] [Cov:=================================> 95%][Progress:=================>            59%] [Cov:=================================> 95%][Progress:=================>            59%] [Cov:=================================> 95%][Progress:=================>            59%] [Cov:=================================> 95%][Progress:=================>            59%] [Cov:=================================> 95%][Progress:=================>            59%] [Cov:=================================> 95%][Progress:=================>            59%] [Cov:=================================> 95%][Progress:=================>            59%] [Cov:=================================> 95%][Progress:=================>            59%] [Cov:=================================> 95%][Progress:=================>            59%] [Cov:=================================> 95%][Progress:=================>            59%] [Cov:=================================> 95%][Progress:=================>            59%] [Cov:=================================> 95%][Progress:=================>            59%] [Cov:=================================> 95%][Progress:=================>            59%] [Cov:=================================> 95%][Progress:==================>           60%] [Cov:=================================> 95%][Progress:==================>           60%] [Cov:=================================> 95%][Progress:==================>           60%] [Cov:=================================> 95%][Progress:==================>           60%] [Cov:=================================> 95%][Progress:==================>           60%] [Cov:=================================> 95%][Progress:==================>           60%] [Cov:=================================> 95%][Progress:==================>           60%] [Cov:=================================> 95%][Progress:==================>           60%] [Cov:=================================> 95%][Progress:==================>           60%] [Cov:=================================> 95%][Progress:==================>           60%] [Cov:=================================> 95%][Progress:==================>           60%] [Cov:=================================> 95%][Progress:==================>           60%] [Cov:=================================> 95%][Progress:==================>           60%] [Cov:=================================> 95%][Progress:==================>           60%] [Cov:=================================> 95%][Progress:==================>           60%] [Cov:=================================> 95%][Progress:==================>           60%] [Cov:=================================> 95%][Progress:==================>           60%] [Cov:=================================> 95%][Progress:==================>           60%] [Cov:=================================> 95%][Progress:==================>           60%] [Cov:=================================> 95%][Progress:==================>           60%] [Cov:=================================> 95%][Progress:==================>           61%] [Cov:=================================> 95%][Progress:==================>           61%] [Cov:=================================> 95%][Progress:==================>           61%] [Cov:=================================> 95%][Progress:==================>           61%] [Cov:=================================> 95%][Progress:==================>           61%] [Cov:=================================> 95%][Progress:==================>           61%] [Cov:=================================> 95%][Progress:==================>           61%] [Cov:=================================> 95%][Progress:==================>           61%] [Cov:=================================> 95%][Progress:==================>           61%] [Cov:=================================> 95%][Progress:==================>           61%] [Cov:=================================> 95%][Progress:==================>           61%] [Cov:=================================> 95%][Progress:==================>           61%] [Cov:=================================> 95%][Progress:==================>           61%] [Cov:=================================> 95%][Progress:==================>           61%] [Cov:=================================> 95%][Progress:==================>           61%] [Cov:=================================> 95%][Progress:==================>           61%] [Cov:=================================> 95%][Progress:==================>           61%] [Cov:=================================> 95%][Progress:==================>           61%] [Cov:=================================> 95%][Progress:==================>           61%] [Cov:=================================> 95%][Progress:==================>           62%] [Cov:=================================> 95%][Progress:==================>           62%] [Cov:=================================> 95%][Progress:==================>           62%] [Cov:=================================> 95%][Progress:==================>           62%] [Cov:=================================> 95%][Progress:==================>           62%] [Cov:=================================> 95%][Progress:==================>           62%] [Cov:=================================> 95%][Progress:==================>           62%] [Cov:=================================> 95%][Progress:==================>           62%] [Cov:=================================> 95%][Progress:==================>           62%] [Cov:=================================> 95%][Progress:==================>           62%] [Cov:=================================> 95%][Progress:==================>           62%] [Cov:=================================> 95%][Progress:==================>           62%] [Cov:=================================> 95%][Progress:==================>           62%] [Cov:=================================> 95%][Progress:==================>           62%] [Cov:=================================> 95%][Progress:==================>           62%] [Cov:=================================> 95%][Progress:==================>           62%] [Cov:=================================> 95%][Progress:==================>           62%] [Cov:=================================> 95%][Progress:==================>           62%] [Cov:=================================> 95%][Progress:==================>           62%] [Cov:=================================> 95%][Progress:==================>           63%] [Cov:=================================> 95%][Progress:==================>           63%] [Cov:=================================> 95%][Progress:==================>           63%] [Cov:=================================> 95%][Progress:==================>           63%] [Cov:=================================> 95%][Progress:==================>           63%] [Cov:=================================> 95%][Progress:==================>           63%] [Cov:=================================> 95%][Progress:==================>           63%] [Cov:=================================> 95%][Progress:==================>           63%] [Cov:=================================> 95%][Progress:==================>           63%] [Cov:=================================> 95%][Progress:==================>           63%] [Cov:=================================> 95%][Progress:==================>           63%] [Cov:=================================> 95%][Progress:==================>           63%] [Cov:=================================> 95%][Progress:==================>           63%] [Cov:=================================> 95%][Progress:==================>           63%] [Cov:=================================> 95%][Progress:==================>           63%] [Cov:=================================> 95%][Progress:==================>           63%] [Cov:=================================> 95%][Progress:==================>           63%] [Cov:=================================> 95%][Progress:===================>          64%] [Cov:=================================> 95%][Progress:===================>          64%] [Cov:=================================> 95%][Progress:===================>          64%] [Cov:=================================> 95%][Progress:===================>          64%] [Cov:=================================> 95%][Progress:===================>          64%] [Cov:=================================> 95%][Progress:===================>          64%] [Cov:=================================> 95%][Progress:===================>          64%] [Cov:=================================> 95%][Progress:===================>          64%] [Cov:=================================> 95%][Progress:===================>          64%] [Cov:=================================> 95%][Progress:===================>          64%] [Cov:=================================> 95%][Progress:===================>          64%] [Cov:=================================> 95%][Progress:===================>          64%] [Cov:=================================> 95%][Progress:===================>          64%] [Cov:=================================> 95%][Progress:===================>          64%] [Cov:=================================> 95%][Progress:===================>          65%] [Cov:=================================> 95%][Progress:===================>          65%] [Cov:=================================> 95%][Progress:===================>          65%] [Cov:=================================> 95%][Progress:===================>          65%] [Cov:=================================> 95%][Progress:===================>          65%] [Cov:=================================> 95%][Progress:===================>          65%] [Cov:=================================> 95%][Progress:===================>          65%] [Cov:=================================> 95%][Progress:===================>          65%] [Cov:=================================> 95%][Progress:===================>          65%] [Cov:=================================> 95%][Progress:===================>          65%] [Cov:=================================> 95%][Progress:===================>          65%] [Cov:=================================> 95%][Progress:===================>          65%] [Cov:=================================> 95%][Progress:===================>          65%] [Cov:=================================> 95%][Progress:===================>          65%] [Cov:=================================> 95%][Progress:===================>          65%] [Cov:=================================> 95%][Progress:===================>          65%] [Cov:=================================> 95%][Progress:===================>          66%] [Cov:=================================> 95%][Progress:===================>          66%] [Cov:=================================> 95%][Progress:===================>          66%] [Cov:=================================> 95%][Progress:===================>          66%] [Cov:=================================> 95%][Progress:===================>          66%] [Cov:=================================> 95%][Progress:===================>          66%] [Cov:=================================> 95%][Progress:===================>          66%] [Cov:=================================> 95%][Progress:===================>          66%] [Cov:=================================> 95%][Progress:===================>          66%] [Cov:=================================> 95%][Progress:===================>          66%] [Cov:=================================> 95%][Progress:===================>          66%] [Cov:=================================> 95%][Progress:===================>          66%] [Cov:=================================> 95%][Progress:===================>          66%] [Cov:=================================> 95%][Progress:===================>          66%] [Cov:=================================> 95%][Progress:===================>          66%] [Cov:=================================> 95%][Progress:===================>          66%] [Cov:=================================> 95%][Progress:===================>          66%] [Cov:=================================> 95%][Progress:===================>          66%] [Cov:=================================> 95%][Progress:====================>         67%] [Cov:=================================> 95%][Progress:====================>         67%] [Cov:=================================> 95%][Progress:====================>         67%] [Cov:=================================> 95%][Progress:====================>         67%] [Cov:=================================> 95%][Progress:====================>         67%] [Cov:=================================> 95%][Progress:====================>         67%] [Cov:=================================> 95%][Progress:====================>         67%] [Cov:=================================> 95%][Progress:====================>         67%] [Cov:=================================> 95%][Progress:====================>         67%] [Cov:=================================> 95%][Progress:====================>         67%] [Cov:=================================> 95%][Progress:====================>         67%] [Cov:=================================> 95%][Progress:====================>         67%] [Cov:=================================> 95%][Progress:====================>         67%] [Cov:=================================> 95%][Progress:====================>         67%] [Cov:=================================> 95%][Progress:====================>         67%] [Cov:=================================> 95%][Progress:====================>         67%] [Cov:=================================> 95%][Progress:====================>         67%] [Cov:=================================> 95%][Progress:====================>         67%] [Cov:=================================> 95%][Progress:====================>         67%] [Cov:=================================> 95%][Progress:====================>         67%] [Cov:=================================> 95%][Progress:====================>         68%] [Cov:=================================> 95%][Progress:====================>         68%] [Cov:=================================> 95%][Progress:====================>         68%] [Cov:=================================> 95%][Progress:====================>         68%] [Cov:=================================> 95%][Progress:====================>         68%] [Cov:=================================> 95%][Progress:====================>         68%] [Cov:=================================> 95%][Progress:====================>         68%] [Cov:=================================> 95%][Progress:====================>         68%] [Cov:=================================> 95%][Progress:====================>         68%] [Cov:=================================> 95%][Progress:====================>         68%] [Cov:=================================> 95%][Progress:====================>         68%] [Cov:=================================> 95%][Progress:====================>         68%] [Cov:=================================> 95%][Progress:====================>         68%] [Cov:=================================> 95%][Progress:====================>         68%] [Cov:=================================> 95%][Progress:====================>         68%] [Cov:=================================> 95%][Progress:====================>         68%] [Cov:=================================> 95%][Progress:====================>         69%] [Cov:=================================> 95%][Progress:====================>         69%] [Cov:=================================> 95%][Progress:====================>         69%] [Cov:=================================> 95%][Progress:====================>         69%] [Cov:=================================> 95%][Progress:====================>         69%] [Cov:=================================> 95%][Progress:====================>         69%] [Cov:=================================> 95%][Progress:====================>         69%] [Cov:=================================> 95%][Progress:====================>         69%] [Cov:=================================> 95%][Progress:====================>         69%] [Cov:=================================> 95%][Progress:====================>         69%] [Cov:=================================> 95%][Progress:====================>         69%] [Cov:=================================> 95%][Progress:====================>         69%] [Cov:=================================> 95%][Progress:====================>         69%] [Cov:=================================> 95%][Progress:====================>         69%] [Cov:=================================> 95%][Progress:====================>         69%] [Cov:=================================> 95%][Progress:====================>         69%] [Cov:=================================> 95%][Progress:====================>         69%] [Cov:=================================> 95%][Progress:====================>         69%] [Cov:=================================> 95%][Progress:=====================>        70%] [Cov:=================================> 95%][Progress:=====================>        70%] [Cov:=================================> 95%][Progress:=====================>        70%] [Cov:=================================> 95%][Progress:=====================>        70%] [Cov:=================================> 95%][Progress:=====================>        70%] [Cov:=================================> 95%][Progress:=====================>        70%] [Cov:=================================> 95%][Progress:=====================>        70%] [Cov:=================================> 95%][Progress:=====================>        70%] [Cov:=================================> 95%][Progress:=====================>        70%] [Cov:=================================> 95%][Progress:=====================>        70%] [Cov:=================================> 95%][Progress:=====================>        70%] [Cov:=================================> 95%][Progress:=====================>        70%] [Cov:=================================> 95%][Progress:=====================>        70%] [Cov:=================================> 95%][Progress:=====================>        70%] [Cov:=================================> 95%][Progress:=====================>        70%] [Cov:=================================> 95%][Progress:=====================>        70%] [Cov:=================================> 95%][Progress:=====================>        70%] [Cov:=================================> 95%][Progress:=====================>        71%] [Cov:=================================> 95%][Progress:=====================>        71%] [Cov:=================================> 95%][Progress:=====================>        71%] [Cov:=================================> 95%][Progress:=====================>        71%] [Cov:=================================> 95%][Progress:=====================>        71%] [Cov:=================================> 95%][Progress:=====================>        71%] [Cov:=================================> 95%][Progress:=====================>        71%] [Cov:=================================> 95%][Progress:=====================>        71%] [Cov:=================================> 95%][Progress:=====================>        71%] [Cov:=================================> 95%][Progress:=====================>        71%] [Cov:=================================> 95%][Progress:=====================>        71%] [Cov:=================================> 95%][Progress:=====================>        71%] [Cov:=================================> 95%][Progress:=====================>        71%] [Cov:=================================> 95%][Progress:=====================>        71%] [Cov:=================================> 95%][Progress:=====================>        71%] [Cov:=================================> 95%][Progress:=====================>        71%] [Cov:=================================> 95%][Progress:=====================>        71%] [Cov:=================================> 95%][Progress:=====================>        71%] [Cov:=================================> 95%][Progress:=====================>        71%] [Cov:=================================> 95%][Progress:=====================>        71%] [Cov:=================================> 95%][Progress:=====================>        72%] [Cov:=================================> 95%][Progress:=====================>        72%] [Cov:=================================> 95%][Progress:=====================>        72%] [Cov:=================================> 95%][Progress:=====================>        72%] [Cov:=================================> 95%][Progress:=====================>        72%] [Cov:=================================> 95%][Progress:=====================>        72%] [Cov:=================================> 95%][Progress:=====================>        72%] [Cov:=================================> 95%][Progress:=====================>        72%] [Cov:=================================> 95%][Progress:=====================>        72%] [Cov:=================================> 95%][Progress:=====================>        72%] [Cov:=================================> 95%][Progress:=====================>        72%] [Cov:=================================> 95%][Progress:=====================>        72%] [Cov:=================================> 95%][Progress:=====================>        72%] [Cov:=================================> 95%][Progress:=====================>        72%] [Cov:=================================> 95%][Progress:=====================>        72%] [Cov:=================================> 95%][Progress:=====================>        72%] [Cov:=================================> 95%][Progress:=====================>        72%] [Cov:=================================> 95%][Progress:=====================>        72%] [Cov:=================================> 95%][Progress:=====================>        72%] [Cov:=================================> 95%][Progress:=====================>        72%] [Cov:=================================> 95%][Progress:=====================>        73%] [Cov:=================================> 95%][Progress:=====================>        73%] [Cov:=================================> 95%][Progress:=====================>        73%] [Cov:=================================> 95%][Progress:=====================>        73%] [Cov:=================================> 95%][Progress:=====================>        73%] [Cov:=================================> 95%][Progress:=====================>        73%] [Cov:=================================> 95%][Progress:=====================>        73%] [Cov:=================================> 95%][Progress:=====================>        73%] [Cov:=================================> 95%][Progress:=====================>        73%] [Cov:=================================> 95%][Progress:=====================>        73%] [Cov:=================================> 95%][Progress:=====================>        73%] [Cov:=================================> 95%][Progress:=====================>        73%] [Cov:=================================> 95%][Progress:=====================>        73%] [Cov:=================================> 95%][Progress:=====================>        73%] [Cov:=================================> 95%][Progress:=====================>        73%] [Cov:=================================> 95%][Progress:=====================>        73%] [Cov:=================================> 95%][Progress:======================>       74%] [Cov:=================================> 95%][Progress:======================>       74%] [Cov:=================================> 95%][Progress:======================>       74%] [Cov:=================================> 95%][Progress:======================>       74%] [Cov:=================================> 95%][Progress:======================>       74%] [Cov:=================================> 95%][Progress:======================>       74%] [Cov:=================================> 95%][Progress:======================>       74%] [Cov:=================================> 95%][Progress:======================>       74%] [Cov:=================================> 95%][Progress:======================>       74%] [Cov:=================================> 95%][Progress:======================>       74%] [Cov:=================================> 95%][Progress:======================>       74%] [Cov:=================================> 95%][Progress:======================>       74%] [Cov:=================================> 95%][Progress:======================>       74%] [Cov:=================================> 95%][Progress:======================>       74%] [Cov:=================================> 95%][Progress:======================>       74%] [Cov:=================================> 95%][Progress:======================>       75%] [Cov:=================================> 95%][Progress:======================>       75%] [Cov:=================================> 95%][Progress:======================>       75%] [Cov:=================================> 95%][Progress:======================>       75%] [Cov:=================================> 95%][Progress:======================>       75%] [Cov:=================================> 95%][Progress:======================>       75%] [Cov:=================================> 95%][Progress:======================>       75%] [Cov:=================================> 95%][Progress:======================>       75%] [Cov:=================================> 95%][Progress:======================>       75%] [Cov:=================================> 95%][Progress:======================>       75%] [Cov:=================================> 95%][Progress:======================>       75%] [Cov:=================================> 95%][Progress:======================>       75%] [Cov:=================================> 95%][Progress:======================>       75%] [Cov:=================================> 95%][Progress:======================>       75%] [Cov:=================================> 95%][Progress:======================>       75%] [Cov:=================================> 95%][Progress:======================>       76%] [Cov:=================================> 95%][Progress:======================>       76%] [Cov:=================================> 95%][Progress:======================>       76%] [Cov:=================================> 95%][Progress:======================>       76%] [Cov:=================================> 95%][Progress:======================>       76%] [Cov:=================================> 95%][Progress:======================>       76%] [Cov:=================================> 95%][Progress:======================>       76%] [Cov:=================================> 95%][Progress:======================>       76%] [Cov:=================================> 95%][Progress:======================>       76%] [Cov:=================================> 95%][Progress:======================>       76%] [Cov:=================================> 95%][Progress:======================>       76%] [Cov:=================================> 95%][Progress:======================>       76%] [Cov:=================================> 95%][Progress:======================>       76%] [Cov:=================================> 95%][Progress:======================>       76%] [Cov:=================================> 95%][Progress:======================>       76%] [Cov:=================================> 95%][Progress:======================>       76%] [Cov:=================================> 95%][Progress:======================>       76%] [Cov:=================================> 95%][Progress:======================>       76%] [Cov:=================================> 95%][Progress:======================>       76%] [Cov:=================================> 95%][Progress:======================>       76%] [Cov:=================================> 95%][Progress:======================>       76%] [Cov:=================================> 95%][Progress:======================>       76%] [Cov:=================================> 95%][Progress:======================>       76%] [Cov:=================================> 95%][Progress:======================>       76%] [Cov:=================================> 95%][Progress:=======================>      77%] [Cov:=================================> 95%][Progress:=======================>      77%] [Cov:=================================> 95%][Progress:=======================>      77%] [Cov:=================================> 95%][Progress:=======================>      77%] [Cov:=================================> 95%][Progress:=======================>      77%] [Cov:=================================> 95%][Progress:=======================>      77%] [Cov:=================================> 95%][Progress:=======================>      77%] [Cov:=================================> 95%][Progress:=======================>      77%] [Cov:=================================> 95%][Progress:=======================>      77%] [Cov:=================================> 95%][Progress:=======================>      77%] [Cov:=================================> 95%][Progress:=======================>      77%] [Cov:=================================> 95%][Progress:=======================>      77%] [Cov:=================================> 95%][Progress:=======================>      77%] [Cov:=================================> 95%][Progress:=======================>      77%] [Cov:=================================> 95%][Progress:=======================>      77%] [Cov:=================================> 95%][Progress:=======================>      77%] [Cov:=================================> 95%][Progress:=======================>      77%] [Cov:=================================> 95%][Progress:=======================>      77%] [Cov:=================================> 95%][Progress:=======================>      77%] [Cov:=================================> 95%][Progress:=======================>      77%] [Cov:=================================> 95%][Progress:=======================>      77%] [Cov:=================================> 95%][Progress:=======================>      77%] [Cov:=================================> 95%][Progress:=======================>      77%] [Cov:=================================> 95%][Progress:=======================>      77%] [Cov:=================================> 95%][Progress:=======================>      77%] [Cov:=================================> 95%][Progress:=======================>      78%] [Cov:=================================> 95%][Progress:=======================>      78%] [Cov:=================================> 95%][Progress:=======================>      78%] [Cov:=================================> 95%][Progress:=======================>      78%] [Cov:=================================> 95%][Progress:=======================>      78%] [Cov:=================================> 95%][Progress:=======================>      78%] [Cov:=================================> 95%][Progress:=======================>      78%] [Cov:=================================> 95%][Progress:=======================>      78%] [Cov:=================================> 95%][Progress:=======================>      78%] [Cov:=================================> 95%][Progress:=======================>      78%] [Cov:=================================> 95%][Progress:=======================>      78%] [Cov:=================================> 95%][Progress:=======================>      78%] [Cov:=================================> 95%][Progress:=======================>      78%] [Cov:=================================> 95%][Progress:=======================>      78%] [Cov:=================================> 95%][Progress:=======================>      78%] [Cov:=================================> 95%][Progress:=======================>      78%] [Cov:=================================> 95%][Progress:=======================>      78%] [Cov:=================================> 95%][Progress:=======================>      79%] [Cov:=================================> 95%][Progress:=======================>      79%] [Cov:=================================> 95%][Progress:=======================>      79%] [Cov:=================================> 95%][Progress:=======================>      79%] [Cov:=================================> 95%][Progress:=======================>      79%] [Cov:=================================> 95%][Progress:=======================>      79%] [Cov:=================================> 95%][Progress:=======================>      79%] [Cov:=================================> 95%][Progress:=======================>      79%] [Cov:=================================> 95%][Progress:=======================>      79%] [Cov:=================================> 95%][Progress:=======================>      79%] [Cov:=================================> 95%][Progress:=======================>      79%] [Cov:=================================> 95%][Progress:=======================>      79%] [Cov:=================================> 95%][Progress:=======================>      79%] [Cov:=================================> 95%][Progress:=======================>      79%] [Cov:=================================> 95%][Progress:=======================>      79%] [Cov:=================================> 95%][Progress:=======================>      79%] [Cov:=================================> 95%][Progress:=======================>      79%] [Cov:=================================> 95%][Progress:=======================>      79%] [Cov:=================================> 95%][Progress:========================>     80%] [Cov:=================================> 95%][Progress:========================>     80%] [Cov:=================================> 95%][Progress:========================>     80%] [Cov:=================================> 95%][Progress:========================>     80%] [Cov:=================================> 95%][Progress:========================>     80%] [Cov:=================================> 95%][Progress:========================>     80%] [Cov:=================================> 95%][Progress:========================>     80%] [Cov:=================================> 95%][Progress:========================>     80%] [Cov:=================================> 95%][Progress:========================>     80%] [Cov:=================================> 95%][Progress:========================>     80%] [Cov:=================================> 95%][Progress:========================>     80%] [Cov:=================================> 95%][Progress:========================>     80%] [Cov:=================================> 95%][Progress:========================>     80%] [Cov:=================================> 95%][Progress:========================>     80%] [Cov:=================================> 95%][Progress:========================>     80%] [Cov:=================================> 95%][Progress:========================>     80%] [Cov:=================================> 95%][Progress:========================>     81%] [Cov:=================================> 95%][Progress:========================>     81%] [Cov:=================================> 95%][Progress:========================>     81%] [Cov:=================================> 95%][Progress:========================>     81%] [Cov:=================================> 95%][Progress:========================>     81%] [Cov:=================================> 95%][Progress:========================>     81%] [Cov:=================================> 95%][Progress:========================>     81%] [Cov:=================================> 95%][Progress:========================>     81%] [Cov:=================================> 95%][Progress:========================>     81%] [Cov:=================================> 95%][Progress:========================>     81%] [Cov:=================================> 95%][Progress:========================>     82%] [Cov:=================================> 95%][Progress:========================>     82%] [Cov:=================================> 95%][Progress:========================>     82%] [Cov:=================================> 95%][Progress:========================>     82%] [Cov:=================================> 95%][Progress:========================>     82%] [Cov:=================================> 95%][Progress:========================>     82%] [Cov:=================================> 95%][Progress:========================>     82%] [Cov:=================================> 95%][Progress:========================>     83%] [Cov:=================================> 95%][Progress:========================>     83%] [Cov:=================================> 95%][Progress:========================>     83%] [Cov:=================================> 95%][Progress:========================>     83%] [Cov:=================================> 95%][Progress:========================>     83%] [Cov:=================================> 95%][Progress:========================>     83%] [Cov:=================================> 95%][Progress:=========================>    84%] [Cov:=================================> 95%][Progress:=========================>    84%] [Cov:=================================> 95%][Progress:=========================>    84%] [Cov:=================================> 95%][Progress:=========================>    84%] [Cov:=================================> 95%][Progress:=========================>    84%] [Cov:=================================> 95%][Progress:=========================>    84%] [Cov:=================================> 95%][Progress:=========================>    84%] [Cov:=================================> 95%][Progress:=========================>    84%] [Cov:=================================> 95%][Progress:=========================>    84%] [Cov:=================================> 95%][Progress:=========================>    85%] [Cov:=================================> 95%][Progress:=========================>    85%] [Cov:=================================> 95%][Progress:=========================>    85%] [Cov:=================================> 95%][Progress:=========================>    85%] [Cov:=================================> 95%][Progress:=========================>    85%] [Cov:=================================> 95%][Progress:=========================>    85%] [Cov:=================================> 95%][Progress:=========================>    85%] [Cov:=================================> 95%][Progress:=========================>    86%] [Cov:=================================> 95%][Progress:=========================>    86%] [Cov:=================================> 95%][Progress:=========================>    86%] [Cov:=================================> 95%][Progress:=========================>    86%] [Cov:=================================> 95%][Progress:=========================>    86%] [Cov:=================================> 95%][Progress:=========================>    86%] [Cov:=================================> 95%][Progress:=========================>    86%] [Cov:=================================> 95%][Progress:=========================>    86%] [Cov:=================================> 95%][Progress:==========================>   87%] [Cov:=================================> 95%][Progress:==========================>   87%] [Cov:=================================> 95%][Progress:==========================>   87%] [Cov:=================================> 95%][Progress:==========================>   87%] [Cov:=================================> 95%][Progress:==========================>   87%] [Cov:=================================> 95%][Progress:==========================>   87%] [Cov:=================================> 95%][Progress:==========================>   87%] [Cov:=================================> 95%][Progress:==========================>   87%] [Cov:=================================> 95%][Progress:==========================>   87%] [Cov:=================================> 95%][Progress:==========================>   88%] [Cov:=================================> 95%][Progress:==========================>   88%] [Cov:=================================> 95%][Progress:==========================>   88%] [Cov:=================================> 95%][Progress:==========================>   88%] [Cov:=================================> 95%][Progress:==========================>   88%] [Cov:=================================> 95%][Progress:==========================>   88%] [Cov:=================================> 95%][Progress:==========================>   88%] [Cov:=================================> 95%][Progress:==========================>   89%] [Cov:=================================> 95%][Progress:==========================>   89%] [Cov:=================================> 95%][Progress:==========================>   89%] [Cov:=================================> 95%][Progress:==========================>   89%] [Cov:=================================> 95%][Progress:==========================>   89%] [Cov:=================================> 95%][Progress:==========================>   89%] [Cov:=================================> 95%][Progress:==========================>   89%] [Cov:=================================> 95%][Progress:==========================>   89%] [Cov:=================================> 95%][Progress:===========================>  90%] [Cov:=================================> 95%][Progress:===========================>  90%] [Cov:=================================> 95%][Progress:===========================>  90%] [Cov:=================================> 95%][Progress:===========================>  90%] [Cov:=================================> 95%][Progress:===========================>  90%] [Cov:=================================> 95%][Progress:===========================>  90%] [Cov:=================================> 95%][Progress:===========================>  91%] [Cov:=================================> 95%][Progress:===========================>  91%] [Cov:=================================> 95%][Progress:===========================>  91%] [Cov:=================================> 95%][Progress:===========================>  91%] [Cov:=================================> 95%][Progress:===========================>  91%] [Cov:=================================> 95%][Progress:===========================>  91%] [Cov:=================================> 95%][Progress:===========================>  91%] [Cov:=================================> 95%][Progress:===========================>  91%] [Cov:=================================> 95%][Progress:===========================>  92%] [Cov:=================================> 95%][Progress:===========================>  92%] [Cov:=================================> 95%][Progress:===========================>  92%] [Cov:=================================> 95%][Progress:===========================>  92%] [Cov:=================================> 95%][Progress:===========================>  92%] [Cov:=================================> 95%][Progress:===========================>  92%] [Cov:=================================> 95%][Progress:===========================>  92%] [Cov:=================================> 95%][Progress:===========================>  93%] [Cov:=================================> 95%][Progress:===========================>  93%] [Cov:=================================> 95%][Progress:===========================>  93%] [Cov:=================================> 95%][Progress:===========================>  93%] [Cov:=================================> 95%][Progress:===========================>  93%] [Cov:=================================> 95%][Progress:===========================>  93%] [Cov:=================================> 95%][Progress:===========================>  93%] [Cov:=================================> 95%][Progress:============================> 94%] [Cov:=================================> 95%][Progress:============================> 94%] [Cov:=================================> 95%][Progress:============================> 94%] [Cov:=================================> 95%][Progress:============================> 94%] [Cov:=================================> 95%][Progress:============================> 94%] [Cov:=================================> 95%][Progress:============================> 94%] [Cov:=================================> 95%][Progress:============================> 94%] [Cov:=================================> 95%][Progress:============================> 95%] [Cov:=================================> 95%][Progress:============================> 95%] [Cov:=================================> 95%][Progress:============================> 95%] [Cov:=================================> 95%][Progress:============================> 95%] [Cov:=================================> 95%][Progress:============================> 95%] [Cov:=================================> 95%][Progress:============================> 95%] [Cov:=================================> 95%][Progress:============================> 96%] [Cov:=================================> 95%][Progress:============================> 96%] [Cov:=================================> 95%][Progress:============================> 96%] [Cov:=================================> 95%][Progress:============================> 96%] [Cov:=================================> 95%][Progress:============================> 96%] [Cov:=================================> 95%][Progress:============================> 96%] [Cov:=================================> 95%][Progress:=============================>97%] [Cov:=================================> 95%][Progress:=============================>97%] [Cov:=================================> 95%][Progress:=============================>97%] [Cov:=================================> 95%][Progress:=============================>97%] [Cov:=================================> 95%][Progress:=============================>97%] [Cov:=================================> 95%][Progress:=============================>97%] [Cov:=================================> 95%][Progress:=============================>97%] [Cov:=================================> 95%][Progress:=============================>97%] [Cov:=================================> 95%][Progress:=============================>97%] [Cov:=================================> 95%][Progress:=============================>97%] [Cov:=================================> 95%][Progress:=============================>97%] [Cov:=================================> 95%][Progress:=============================>97%] [Cov:=================================> 95%][Progress:=============================>97%] [Cov:=================================> 95%][Progress:=============================>97%] [Cov:=================================> 95%][Progress:=============================>97%] [Cov:=================================> 95%][Progress:=============================>97%] [Cov:=================================> 95%][Progress:=============================>97%] [Cov:=================================> 95%][Progress:=============================>97%] [Cov:=================================> 95%][Progress:=============================>98%] [Cov:=================================> 95%][Progress:=============================>98%] [Cov:=================================> 95%][Progress:=============================>98%] [Cov:=================================> 95%][Progress:=============================>98%] [Cov:=================================> 95%][Progress:=============================>98%] [Cov:=================================> 95%][Progress:=============================>98%] [Cov:=================================> 95%][Progress:=============================>99%] [Cov:=================================> 95%][Progress:=============================>99%] [Cov:=================================> 95%][Progress:=============================>99%] [Cov:=================================> 95%][Progress:=============================>99%] [Cov:=================================> 95%][Progress:=============================>99%] [Cov:=================================> 95%][Progress:=============================>99%] [Cov:=================================> 95%][Progress:==============================100%] [Cov:=================================> 95%][Progress:==============================100%] [Cov:=================================> 95%][Progress:==============================100%] [Cov:=================================> 95%][Progress:==============================100%] [Cov:=================================> 95%][Progress:==============================100%] [Cov:=================================> 95%][Progress:==============================100%] [Cov:=================================> 95%][Progress:==============================100%] [Cov:=================================> 95%]
* Search finished after 104s and 1376 generations, 562790 statements, best individual has fitness: 17.0
* Generated before the refinement 68 tests with total length 249
statement is: com.sap.managementconsole.soap.axis.sapcontrol.AlertNode()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.sap.managementconsole.soap.axis.sapcontrol.AlertNode
statement code is: AlertNode alertNode = new AlertNode()
statement is: setAlDescription(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: alertNode.setAlDescription("A]HOods@aKxL7k=i")
statement is: com.sap.managementconsole.soap.axis.sapcontrol.AlertNode()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.sap.managementconsole.soap.axis.sapcontrol.AlertNode
statement code is: AlertNode alertNode = new AlertNode()
statement is: setAlDescription(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: alertNode.setAlDescription("A]HOods@aKxL7k=i")
statement is: equals(Ljava/lang/Object;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean equals = alertNode.equals(arg0)
test data is: AlertNode alertNode = new AlertNode();
alertNode.setAlDescription("A]HOods@aKxL7k=i");
AlertNode alertNode = new AlertNode();
alertNode.setAlDescription("A]HOods@aKxL7k=i");
alertNode.equals(alertNode);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        AlertNode alertNode = new AlertNode();
        alertNode.setAlDescription("AHOods@aKxL7k=i");
        alertNode.equals(alertNode);
        // Improved test data
        AlertNode alertNode1 = new AlertNode();
        alertNode1.setAlDescription("AHOods@aKxL7k=i");
        alertNode1.equals(alertNode1);
    }
}
statement is: AlertNode alertNode = new AlertNode(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: alertNode.setAlDescription("AHOods@aKxL7k=i"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: alertNode.setAlDescription("AHOods@aKxL7k=i") target is: alertNode method is: setAlDescription(java.lang.String)
source statement: com.sap.managementconsole.soap.axis.sapcontrol.AlertNode()V callee: VariableReference: Statement 0, type com.sap.managementconsole.soap.axis.sapcontrol.AlertNodeindex is: 0
Matched Method is: setAlDescription(Ljava/lang/String;)V
statement is: alertNode.equals(alertNode), class spoon.support.reflect.code.CtInvocationImpl
invocation is: alertNode.equals(alertNode) target is: alertNode method is: equals(AlertNode)
statement is: // Improved test data
AlertNode alertNode1 = new AlertNode(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: alertNode1.setAlDescription("AHOods@aKxL7k=i"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: alertNode1.setAlDescription("AHOods@aKxL7k=i") target is: alertNode1 method is: setAlDescription(java.lang.String)
source statement: com.sap.managementconsole.soap.axis.sapcontrol.AlertNode()V callee: VariableReference: Statement 0, type com.sap.managementconsole.soap.axis.sapcontrol.AlertNodeindex is: 3
Matched Method is: setAlDescription(Ljava/lang/String;)V
statement is: alertNode1.equals(alertNode1), class spoon.support.reflect.code.CtInvocationImpl
invocation is: alertNode1.equals(alertNode1) target is: alertNode1 method is: equals(AlertNode)
TestCase is: AlertNode alertNode = new AlertNode();
String string = "AHOods@aKxL7k=i";
alertNode.setAlDescription(string);
AlertNode alertNode = new AlertNode();
String string = "AHOods@aKxL7k=i";
alertNode.setAlDescription(string);

statement is: Class<AlertNode> class = AlertNode.class type is: class org.evosuite.testcase.statements.ClassPrimitiveStatement return type java.lang.Class<com.sap.managementconsole.soap.axis.sapcontrol.AlertNode>
statement code is: Class<AlertNode> class = AlertNode.class
statement is: javax.xml.namespace.QName(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class javax.xml.namespace.QName
statement code is: QName qName = new QName("SAPControl-GRAY", "<okUE&:u1>on", ",9D[P")
statement is: getDeserializer(Ljava/lang/String;Ljava/lang/Class;Ljavax/xml/namespace/QName;)Lorg/apache/axis/encoding/Deserializer; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.apache.axis.encoding.ser.BeanDeserializer
statement code is: BeanDeserializer deserializer = (BeanDeserializer)AlertNode.getDeserializer("SAPControl-RED", arg1, arg2)
test data is: Class<AlertNode> class = AlertNode.class;
QName qName = new QName("SAPControl-GRAY", "<okUE&:u1>on", ",9D[P");
AlertNode.getDeserializer("SAPControl-RED", class, qName);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        QName qName = new QName("SAPControl-GRAY", "<okUE&:u1>on", ",9D[P");
        AlertNode.getDeserializer("SAPControl-RED", $missing$, qName);
        // Improved test data
        String alertType = "SAPControl-GRAY";
        String alertDescription = "<okUE&:u1>on";
        Integer alertId = 987654321;
        AlertNode.getDeserializer(alertType.class, qName);
    }
}
statement is: QName qName = new QName("SAPControl-GRAY", "<okUE&:u1>on", ",9D[P"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: AlertNode.getDeserializer("SAPControl-RED", $missing$, qName), class spoon.support.reflect.code.CtInvocationImpl
invocation is: AlertNode.getDeserializer("SAPControl-RED", $missing$, qName) target is: AlertNode method is: getDeserializer(java.lang.String,QName)
Matched Method is: getDeserializer(Ljava/lang/String;Ljava/lang/Class;Ljavax/xml/namespace/QName;)Lorg/apache/axis/encoding/Deserializer;
i 2 Parameters size() 2 Num of Method Parameters: 3
statement is: // Improved test data
String alertType = "SAPControl-GRAY", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: String alertDescription = "<okUE&:u1>on", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: Integer alertId = 987654321, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: AlertNode.getDeserializer(alertType.class, qName), class spoon.support.reflect.code.CtInvocationImpl
invocation is: AlertNode.getDeserializer(alertType.class, qName) target is: AlertNode method is: getDeserializer(java.lang.Class,QName)
* this is vulnerable: String string = "SAPControl-GRAY"
* this is vulnerable: String string = "<okUE&:u1>on"
* this is vulnerable: int _int = 987654321
TestCase is: String string = "SAPControl-GRAY";
String string = "<okUE&:u1>on";
String string = ",9D[P";
QName qName = new QName(string, string, string);
String string = "SAPControl-RED";
QName qName = null;
AlertNode.getDeserializer(string, (Class) qName, qName);
String string = "SAPControl-GRAY";
String string = "<okUE&:u1>on";
int _int = 987654321;

statement is: com.sap.managementconsole.soap.axis.sapcontrol.AlertNode()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.sap.managementconsole.soap.axis.sapcontrol.AlertNode
statement code is: AlertNode alertNode = new AlertNode()
statement is: org.evosuite.testcase.statements.FieldStatement@241673e7 type is: class org.evosuite.testcase.statements.FieldStatement return type class com.sap.managementconsole.soap.axis.sapcontrol.STATECOLOR
statement code is: STATECOLOR sTATECOLOR = STATECOLOR.value4
statement is: setHighAlertValue(Lcom/sap/managementconsole/soap/axis/sapcontrol/STATECOLOR;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: alertNode.setHighAlertValue(arg0)
statement is: com.sap.managementconsole.soap.axis.sapcontrol.AlertNode()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.sap.managementconsole.soap.axis.sapcontrol.AlertNode
statement code is: AlertNode alertNode = new AlertNode()
statement is: equals(Ljava/lang/Object;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean equals = alertNode.equals(arg0)
test data is: AlertNode alertNode = new AlertNode();
STATECOLOR sTATECOLOR = STATECOLOR.value4;
alertNode.setHighAlertValue(sTATECOLOR);
AlertNode alertNode = new AlertNode();
alertNode.equals(alertNode);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        AlertNode alertNode1 = new AlertNode("value1", STATECOLOR.value1, 50);
        AlertNode alertNode2 = new AlertNode("value2", STATECOLOR.value2, 75);
        alertNode1.equals(alertNode2);
    }
}
statement is: AlertNode alertNode1 = new AlertNode("value1", STATECOLOR.value1, 50), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: AlertNode alertNode2 = new AlertNode("value2", STATECOLOR.value2, 75), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: alertNode1.equals(alertNode2), class spoon.support.reflect.code.CtInvocationImpl
invocation is: alertNode1.equals(alertNode2) target is: alertNode1 method is: equals(AlertNode)
statement is: com.sap.managementconsole.soap.axis.sapcontrol.AlertNode()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.sap.managementconsole.soap.axis.sapcontrol.AlertNode
statement code is: AlertNode alertNode = new AlertNode()
statement is: org.evosuite.testcase.statements.FieldStatement@241673e7 type is: class org.evosuite.testcase.statements.FieldStatement return type class com.sap.managementconsole.soap.axis.sapcontrol.STATECOLOR
statement code is: STATECOLOR sTATECOLOR = STATECOLOR.value4
statement is: setActualValue(Lcom/sap/managementconsole/soap/axis/sapcontrol/STATECOLOR;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: alertNode.setActualValue(arg0)
statement is: com.sap.managementconsole.soap.axis.sapcontrol.AlertNode()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.sap.managementconsole.soap.axis.sapcontrol.AlertNode
statement code is: AlertNode alertNode = new AlertNode()
statement is: equals(Ljava/lang/Object;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean equals = alertNode.equals(arg0)
test data is: AlertNode alertNode = new AlertNode();
STATECOLOR sTATECOLOR = STATECOLOR.value4;
alertNode.setActualValue(sTATECOLOR);
AlertNode alertNode = new AlertNode();
alertNode.equals(alertNode);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Improved test data for the above code snippet
        // AlertNode is a class that represents an alert message in the system.
        AlertNode expectedAlertNode = new AlertNode();
        expectedAlertNode.setActualValue(value4);
        // equals() method compares two AlertNodes based on their actual values.
        Assert.assertTrue(alertNode.equals(expectedAlertNode));
    }
}
statement is: // Improved test data for the above code snippet
// AlertNode is a class that represents an alert message in the system.
AlertNode expectedAlertNode = new AlertNode(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: expectedAlertNode.setActualValue(value4), class spoon.support.reflect.code.CtInvocationImpl
invocation is: expectedAlertNode.setActualValue(value4) target is: expectedAlertNode method is: setActualValue()
source statement: com.sap.managementconsole.soap.axis.sapcontrol.AlertNode()V callee: VariableReference: Statement 0, type com.sap.managementconsole.soap.axis.sapcontrol.AlertNodeindex is: 0
Matched Method is: setActualValue(Lcom/sap/managementconsole/soap/axis/sapcontrol/STATECOLOR;)V
i 0 Parameters size() 0 Num of Method Parameters: 1
statement is: // equals() method compares two AlertNodes based on their actual values.
Assert.assertTrue(alertNode.equals(expectedAlertNode)), class spoon.support.reflect.code.CtInvocationImpl
invocation is: // equals() method compares two AlertNodes based on their actual values.
Assert.assertTrue(alertNode.equals(expectedAlertNode)) target is: Assert method is: assertTrue()
TestCase is: AlertNode alertNode = new AlertNode();
STATECOLOR sTATECOLOR = null;
alertNode.setActualValue(sTATECOLOR);

statement is: com.sap.managementconsole.soap.axis.sapcontrol.AlertNode()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.sap.managementconsole.soap.axis.sapcontrol.AlertNode
statement code is: AlertNode alertNode = new AlertNode()
statement is: setAnalyseTool(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: alertNode.setAnalyseTool("SAPControl-DEVELOPER")
statement is: com.sap.managementconsole.soap.axis.sapcontrol.AlertNode()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.sap.managementconsole.soap.axis.sapcontrol.AlertNode
statement code is: AlertNode alertNode = new AlertNode()
statement is: equals(Ljava/lang/Object;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean equals = alertNode.equals(arg0)
test data is: AlertNode alertNode = new AlertNode();
alertNode.setAnalyseTool("SAPControl-DEVELOPER");
AlertNode alertNode = new AlertNode();
alertNode.equals(alertNode);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        AlertNode alertNode = new AlertNode();
        alertNode.setAnalyseTool("SAPControl-DEVELOPER");
        alertNode.setProcessName("PROCESS_A");
        alertNode.setProcessInstanceId(123456789);
        alertNode.setAlertCode("0001");
        alertNode.setAlertText("Test Alert: This is a test alert for the SAPControl-DEVELOPER analyse tool.");
        alertNode.setTimestamp(new Date());
        alertNode.setSeverityLevel(SEVERITY_LEVEL_INFO);
        AlertNode alertNode2 = new AlertNode();
        alertNode2.equals(alertNode);
    }
}
statement is: AlertNode alertNode = new AlertNode(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: alertNode.setAnalyseTool("SAPControl-DEVELOPER"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: alertNode.setAnalyseTool("SAPControl-DEVELOPER") target is: alertNode method is: setAnalyseTool(java.lang.String)
source statement: com.sap.managementconsole.soap.axis.sapcontrol.AlertNode()V callee: VariableReference: Statement 0, type com.sap.managementconsole.soap.axis.sapcontrol.AlertNodeindex is: 0
Matched Method is: setAnalyseTool(Ljava/lang/String;)V
statement is: alertNode.setProcessName("PROCESS_A"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: alertNode.setProcessName("PROCESS_A") target is: alertNode method is: setProcessName(java.lang.String)
statement is: alertNode.setProcessInstanceId(123456789), class spoon.support.reflect.code.CtInvocationImpl
invocation is: alertNode.setProcessInstanceId(123456789) target is: alertNode method is: setProcessInstanceId(int)
statement is: alertNode.setAlertCode("0001"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: alertNode.setAlertCode("0001") target is: alertNode method is: setAlertCode(java.lang.String)
statement is: alertNode.setAlertText("Test Alert: This is a test alert for the SAPControl-DEVELOPER analyse tool."), class spoon.support.reflect.code.CtInvocationImpl
invocation is: alertNode.setAlertText("Test Alert: This is a test alert for the SAPControl-DEVELOPER analyse tool.") target is: alertNode method is: setAlertText(java.lang.String)
statement is: alertNode.setTimestamp(new Date()), class spoon.support.reflect.code.CtInvocationImpl
invocation is: alertNode.setTimestamp(new Date()) target is: alertNode method is: setTimestamp(Date)
statement is: alertNode.setSeverityLevel(SEVERITY_LEVEL_INFO), class spoon.support.reflect.code.CtInvocationImpl
invocation is: alertNode.setSeverityLevel(SEVERITY_LEVEL_INFO) target is: alertNode method is: setSeverityLevel()
statement is: AlertNode alertNode2 = new AlertNode(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: alertNode2.equals(alertNode), class spoon.support.reflect.code.CtInvocationImpl
invocation is: alertNode2.equals(alertNode) target is: alertNode2 method is: equals(AlertNode)
TestCase is: AlertNode alertNode = new AlertNode();
String string = "SAPControl-DEVELOPER";
alertNode.setAnalyseTool(string);
AlertNode alertNode = new AlertNode();

statement is: org.evosuite.testcase.statements.FieldStatement@8b140761 type is: class org.evosuite.testcase.statements.FieldStatement return type class com.sap.managementconsole.soap.axis.sapcontrol.VISIBLELEVEL
statement code is: VISIBLELEVEL vISIBLELEVEL = VISIBLELEVEL.value2
statement is: com.sap.managementconsole.soap.axis.sapcontrol.AlertNode(Ljava/lang/String;ILcom/sap/managementconsole/soap/axis/sapcontrol/STATECOLOR;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lcom/sap/managementconsole/soap/axis/sapcontrol/VISIBLELEVEL;Lcom/sap/managementconsole/soap/axis/sapcontrol/STATECOLOR;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.sap.managementconsole.soap.axis.sapcontrol.AlertNode
statement code is: AlertNode alertNode = new AlertNode("I{[+GuCB", (-1647606196), (STATECOLOR) null, "I{[+GuCB", "I{[+GuCB", "I{[+GuCB", arg6, (STATECOLOR) null, "SAPControl-EXPERT", "SAPControl-DEVELOPER", "SAPControl-EXPERT")
statement is: com.sap.managementconsole.soap.axis.sapcontrol.AlertNode(Ljava/lang/String;ILcom/sap/managementconsole/soap/axis/sapcontrol/STATECOLOR;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lcom/sap/managementconsole/soap/axis/sapcontrol/VISIBLELEVEL;Lcom/sap/managementconsole/soap/axis/sapcontrol/STATECOLOR;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.sap.managementconsole.soap.axis.sapcontrol.AlertNode
statement code is: AlertNode alertNode = new AlertNode("I{[+GuCB", (-1647606196), (STATECOLOR) null, "SAPControl-DEVELOPER", "I{[+GuCB", "SAPControl-UNKNOWN", arg6, (STATECOLOR) null, "~[htdBk[SlOsLw![g.", "~[htdBk[SlOsLw![g.", "~[htdBk[SlOsLw![g.")
statement is: equals(Ljava/lang/Object;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean equals = alertNode.equals(arg0)
test data is: VISIBLELEVEL vISIBLELEVEL = VISIBLELEVEL.value2;
AlertNode alertNode = new AlertNode("I{[+GuCB", (-1647606196), (STATECOLOR) null, "I{[+GuCB", "I{[+GuCB", "I{[+GuCB", vISIBLELEVEL, (STATECOLOR) null, "SAPControl-EXPERT", "SAPControl-DEVELOPER", "SAPControl-EXPERT");
AlertNode alertNode = new AlertNode("I{[+GuCB", (-1647606196), (STATECOLOR) null, "SAPControl-DEVELOPER", "I{[+GuCB", "SAPControl-UNKNOWN", vISIBLELEVEL, (STATECOLOR) null, "~[htdBk[SlOsLw![g.", "~[htdBk[SlOsLw![g.", "~[htdBk[SlOsLw![g.");
alertNode.equals(alertNode);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        VISIBLELEVEL vISIBLELEVEL = VISIBLELEVEL.value2;
        AlertNode alertNode = new AlertNode("I{[+GuCB", -1647606196, ((STATECOLOR) (null)), "I{[+GuCB", "I{[+GuCB", "I{[+GuCB", vISIBLELEVEL, ((STATECOLOR) (null)), "SAPControl-EXPERT", "SAPControl-DEVELOPER", "SAPControl-EXPERT");
        AlertNode alertNode2 = new AlertNode("I{[+GuCB", -1647606196, ((STATECOLOR) (null)), "SAPControl-DEVELOPER", "I{[+GuCB", "SAPControl-UNKNOWN", vISIBLELEVEL, ((STATECOLOR) (null)), "~[htdBk[SlOsLw![g.", "~[htdBk[SlOsLw![g.", "~[htdBk[SlOsLw![g.");
        alertNode.equals(alertNode2);
    }
}
statement is: VISIBLELEVEL vISIBLELEVEL = VISIBLELEVEL.value2, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: VISIBLELEVEL.value2 is VISIBLELEVEL
CtField is: public static com.sap.managementconsole.soap.axis.sapcontrol.VISIBLELEVEL com.sap.managementconsole.soap.axis.sapcontrol.VISIBLELEVEL.value2 VISIBLELEVEL value2
statement is: AlertNode alertNode = new AlertNode("I{[+GuCB", -1647606196, ((STATECOLOR) (null)), "I{[+GuCB", "I{[+GuCB", "I{[+GuCB", vISIBLELEVEL, ((STATECOLOR) (null)), "SAPControl-EXPERT", "SAPControl-DEVELOPER", "SAPControl-EXPERT"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: AlertNode alertNode2 = new AlertNode("I{[+GuCB", -1647606196, ((STATECOLOR) (null)), "SAPControl-DEVELOPER", "I{[+GuCB", "SAPControl-UNKNOWN", vISIBLELEVEL, ((STATECOLOR) (null)), "~[htdBk[SlOsLw![g.", "~[htdBk[SlOsLw![g.", "~[htdBk[SlOsLw![g."), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: alertNode.equals(alertNode2), class spoon.support.reflect.code.CtInvocationImpl
invocation is: alertNode.equals(alertNode2) target is: alertNode method is: equals(AlertNode)
source statement: com.sap.managementconsole.soap.axis.sapcontrol.AlertNode(Ljava/lang/String;ILcom/sap/managementconsole/soap/axis/sapcontrol/STATECOLOR;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lcom/sap/managementconsole/soap/axis/sapcontrol/VISIBLELEVEL;Lcom/sap/managementconsole/soap/axis/sapcontrol/STATECOLOR;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V callee: VariableReference: Statement 1, type com.sap.managementconsole.soap.axis.sapcontrol.AlertNodeindex is: 16
Matched Method is: equals(Ljava/lang/Object;)Z
TestCase is: VISIBLELEVEL vISIBLELEVEL = VISIBLELEVEL.value2;
String string = "I{[+GuCB";
String string = "I{[+GuCB";
String string = "I{[+GuCB";
String string = "I{[+GuCB";
String string = "SAPControl-EXPERT";
String string = "SAPControl-DEVELOPER";
String string = "SAPControl-EXPERT";
AlertNode alertNode = new AlertNode(string, (int) string, (STATECOLOR) string, string, (String) vISIBLELEVEL, string, (VISIBLELEVEL) string, (STATECOLOR) string, "SAPControl-EXPERT", "SAPControl-DEVELOPER", "SAPControl-EXPERT");
String string = "I{[+GuCB";
String string = "SAPControl-DEVELOPER";
String string = "I{[+GuCB";
String string = "SAPControl-UNKNOWN";
String string = "~[htdBk[SlOsLw![g.";
String string = "~[htdBk[SlOsLw![g.";
String string = "~[htdBk[SlOsLw![g.";
AlertNode alertNode = new AlertNode(string, (int) string, (STATECOLOR) string, string, (String) vISIBLELEVEL, string, (VISIBLELEVEL) string, (STATECOLOR) string, "SAPControl-EXPERT", "SAPControl-DEVELOPER", "SAPControl-EXPERT");
string.equals(alertNode);

statement is: com.sap.managementconsole.soap.axis.sapcontrol.AlertNode()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.sap.managementconsole.soap.axis.sapcontrol.AlertNode
statement code is: AlertNode alertNode = new AlertNode()
statement is: setParent(I)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: alertNode.setParent(1552)
statement is: com.sap.managementconsole.soap.axis.sapcontrol.AlertNode()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.sap.managementconsole.soap.axis.sapcontrol.AlertNode
statement code is: AlertNode alertNode = new AlertNode()
statement is: equals(Ljava/lang/Object;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean equals = alertNode.equals(arg0)
test data is: AlertNode alertNode = new AlertNode();
alertNode.setParent(1552);
AlertNode alertNode = new AlertNode();
alertNode.equals(alertNode);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        alertNode.setParent(1001);// This sets the parent ID of the alert node to 1001, which is a more descriptive and representative value for the situation being tested.

        alertNode.equals(alertNode);// This compares the alert node with itself, which is an example of a self-comparison that can help ensure that the comparison method is working correctly. }}

    }
}
statement is: alertNode.setParent(1001)// This sets the parent ID of the alert node to 1001, which is a more descriptive and representative value for the situation being tested.
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: alertNode.setParent(1001)// This sets the parent ID of the alert node to 1001, which is a more descriptive and representative value for the situation being tested.
 target is: alertNode method is: setParent(int)
statement is: alertNode.equals(alertNode)// This compares the alert node with itself, which is an example of a self-comparison that can help ensure that the comparison method is working correctly. }}
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: alertNode.equals(alertNode)// This compares the alert node with itself, which is an example of a self-comparison that can help ensure that the comparison method is working correctly. }}
 target is: alertNode method is: equals()
statement is: com.sap.managementconsole.soap.axis.sapcontrol.AlertNode()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.sap.managementconsole.soap.axis.sapcontrol.AlertNode
statement code is: AlertNode alertNode = new AlertNode()
statement is: org.evosuite.testcase.statements.FieldStatement@8b140761 type is: class org.evosuite.testcase.statements.FieldStatement return type class com.sap.managementconsole.soap.axis.sapcontrol.VISIBLELEVEL
statement code is: VISIBLELEVEL vISIBLELEVEL = VISIBLELEVEL.value2
statement is: setVisibleLevel(Lcom/sap/managementconsole/soap/axis/sapcontrol/VISIBLELEVEL;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: alertNode.setVisibleLevel(arg0)
statement is: com.sap.managementconsole.soap.axis.sapcontrol.AlertNode()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.sap.managementconsole.soap.axis.sapcontrol.AlertNode
statement code is: AlertNode alertNode = new AlertNode()
statement is: equals(Ljava/lang/Object;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean equals = alertNode.equals(arg0)
test data is: AlertNode alertNode = new AlertNode();
VISIBLELEVEL vISIBLELEVEL = VISIBLELEVEL.value2;
alertNode.setVisibleLevel(vISIBLELEVEL);
AlertNode alertNode = new AlertNode();
alertNode.equals(alertNode);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        AlertNode alertNode = new AlertNode();
        alertNode.setVisibleLevel(value2);
        assertTrue(alertNode.isVisible());
        AlertNode alertNode2 = new AlertNode();
        alertNode2.setVisibleLevel(value1);
        assertFalse(alertNode2.isVisible());
        AlertNode alertNode3 = new AlertNode();
        alertNode3.setVisibleLevel(value3);
        assertTrue(alertNode3.isVisible());
    }
}
statement is: AlertNode alertNode = new AlertNode(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: alertNode.setVisibleLevel(value2), class spoon.support.reflect.code.CtInvocationImpl
invocation is: alertNode.setVisibleLevel(value2) target is: alertNode method is: setVisibleLevel()
source statement: com.sap.managementconsole.soap.axis.sapcontrol.AlertNode()V callee: VariableReference: Statement 0, type com.sap.managementconsole.soap.axis.sapcontrol.AlertNodeindex is: 0
Matched Method is: setVisibleLevel(Lcom/sap/managementconsole/soap/axis/sapcontrol/VISIBLELEVEL;)V
i 0 Parameters size() 0 Num of Method Parameters: 1
statement is: assertTrue(alertNode.isVisible()), class spoon.support.reflect.code.CtInvocationImpl
invocation is: assertTrue(alertNode.isVisible()) target is:  method is: assertTrue(<unknown>)
statement is: AlertNode alertNode2 = new AlertNode(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: alertNode2.setVisibleLevel(value1), class spoon.support.reflect.code.CtInvocationImpl
invocation is: alertNode2.setVisibleLevel(value1) target is: alertNode2 method is: setVisibleLevel()
source statement: com.sap.managementconsole.soap.axis.sapcontrol.AlertNode()V callee: VariableReference: Statement 0, type com.sap.managementconsole.soap.axis.sapcontrol.AlertNodeindex is: 3
Matched Method is: setVisibleLevel(Lcom/sap/managementconsole/soap/axis/sapcontrol/VISIBLELEVEL;)V
i 0 Parameters size() 0 Num of Method Parameters: 1
statement is: assertFalse(alertNode2.isVisible()), class spoon.support.reflect.code.CtInvocationImpl
invocation is: assertFalse(alertNode2.isVisible()) target is:  method is: assertFalse(<unknown>)
statement is: AlertNode alertNode3 = new AlertNode(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: alertNode3.setVisibleLevel(value3), class spoon.support.reflect.code.CtInvocationImpl
invocation is: alertNode3.setVisibleLevel(value3) target is: alertNode3 method is: setVisibleLevel()
source statement: com.sap.managementconsole.soap.axis.sapcontrol.AlertNode()V callee: VariableReference: Statement 0, type com.sap.managementconsole.soap.axis.sapcontrol.AlertNodeindex is: 6
Matched Method is: setVisibleLevel(Lcom/sap/managementconsole/soap/axis/sapcontrol/VISIBLELEVEL;)V
i 0 Parameters size() 0 Num of Method Parameters: 1
statement is: assertTrue(alertNode3.isVisible()), class spoon.support.reflect.code.CtInvocationImpl
invocation is: assertTrue(alertNode3.isVisible()) target is:  method is: assertTrue(<unknown>)
TestCase is: AlertNode alertNode = new AlertNode();
VISIBLELEVEL vISIBLELEVEL = null;
alertNode.setVisibleLevel(vISIBLELEVEL);
AlertNode alertNode = new AlertNode();
VISIBLELEVEL vISIBLELEVEL = null;
alertNode.setVisibleLevel(vISIBLELEVEL);
AlertNode alertNode = new AlertNode();
VISIBLELEVEL vISIBLELEVEL = null;
alertNode.setVisibleLevel(vISIBLELEVEL);

statement is: com.sap.managementconsole.soap.axis.sapcontrol.AlertNode()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.sap.managementconsole.soap.axis.sapcontrol.AlertNode
statement code is: AlertNode alertNode = new AlertNode()
statement is: setAlTime(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: alertNode.setAlTime("org.apache.axis.types.NegativeInteger")
statement is: com.sap.managementconsole.soap.axis.sapcontrol.AlertNode()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.sap.managementconsole.soap.axis.sapcontrol.AlertNode
statement code is: AlertNode alertNode = new AlertNode()
statement is: setAlTime(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: alertNode.setAlTime("org.apache.axis.types.NegativeInteger")
statement is: equals(Ljava/lang/Object;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean equals = alertNode.equals(arg0)
test data is: AlertNode alertNode = new AlertNode();
alertNode.setAlTime("org.apache.axis.types.NegativeInteger");
AlertNode alertNode = new AlertNode();
alertNode.setAlTime("org.apache.axis.types.NegativeInteger");
alertNode.equals(alertNode);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        AlertNode alertNode = new AlertNode();
        alertNode.setAlTime("-100");
        AlertNode alertNode2 = new AlertNode();
        alertNode2.setAlTime("-50");
        alertNode.equals(alertNode2);
    }
}
statement is: AlertNode alertNode = new AlertNode(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: alertNode.setAlTime("-100"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: alertNode.setAlTime("-100") target is: alertNode method is: setAlTime(java.lang.String)
source statement: com.sap.managementconsole.soap.axis.sapcontrol.AlertNode()V callee: VariableReference: Statement 0, type com.sap.managementconsole.soap.axis.sapcontrol.AlertNodeindex is: 0
Matched Method is: setAlTime(Ljava/lang/String;)V
statement is: AlertNode alertNode2 = new AlertNode(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: alertNode2.setAlTime("-50"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: alertNode2.setAlTime("-50") target is: alertNode2 method is: setAlTime(java.lang.String)
source statement: com.sap.managementconsole.soap.axis.sapcontrol.AlertNode()V callee: VariableReference: Statement 0, type com.sap.managementconsole.soap.axis.sapcontrol.AlertNodeindex is: 3
Matched Method is: setAlTime(Ljava/lang/String;)V
statement is: alertNode.equals(alertNode2), class spoon.support.reflect.code.CtInvocationImpl
invocation is: alertNode.equals(alertNode2) target is: alertNode method is: equals(AlertNode)
TestCase is: AlertNode alertNode = new AlertNode();
String string = "-100";
alertNode.setAlTime(string);
AlertNode alertNode = new AlertNode();
String string = "-50";
alertNode.setAlTime(string);

statement is: Class<Object> class = Object.class type is: class org.evosuite.testcase.statements.ClassPrimitiveStatement return type java.lang.Class<java.lang.Object>
statement code is: Class<Object> class = Object.class
statement is: javax.xml.namespace.QName(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class javax.xml.namespace.QName
statement code is: QName qName = new QName("")
statement is: getSerializer(Ljava/lang/String;Ljava/lang/Class;Ljavax/xml/namespace/QName;)Lorg/apache/axis/encoding/Serializer; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.apache.axis.encoding.ser.BeanSerializer
statement code is: BeanSerializer serializer = (BeanSerializer)AlertNode.getSerializer((String) null, arg1, arg2)
test data is: Class<Object> class = Object.class;
QName qName = new QName("");
AlertNode.getSerializer((String) null, class, qName);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        QName qName = new QName("http://www.example.com", "myElement");
        AlertNode.getSerializer(((String) (null)), $missing$, qName);
    }
}
statement is: QName qName = new QName("http://www.example.com", "myElement"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: AlertNode.getSerializer(((String) (null)), $missing$, qName), class spoon.support.reflect.code.CtInvocationImpl
invocation is: AlertNode.getSerializer(((String) (null)), $missing$, qName) target is: AlertNode method is: getSerializer(java.lang.String,QName)
Matched Method is: getSerializer(Ljava/lang/String;Ljava/lang/Class;Ljavax/xml/namespace/QName;)Lorg/apache/axis/encoding/Serializer;
i 0 Parameters size() 0 Num of Method Parameters: 3
i 1 Parameters size() 0 Num of Method Parameters: 3
i 2 Parameters size() 0 Num of Method Parameters: 3
TestCase is: String string = null;
Class<Object> class = null;
QName qName = null;
AlertNode.getSerializer(string, class, qName);

statement is: getTypeDesc()Lorg/apache/axis/description/TypeDesc; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.apache.axis.description.TypeDesc
statement code is: TypeDesc typeDesc = AlertNode.getTypeDesc()
test data is: AlertNode.getTypeDesc();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        String[] types = new String[]{ "string", "integer", "boolean" };
        int[] values = new int[]{ 100, 200, 300 };
        String[] descriptions = new String[]{ "This is a very long string.", "This is an integer with a large value.", "This is a boolean with a true value." };
        for (int i = 0; i < types.length; i++) {
            String type = types[i];
            int value = values[i];
            String description = descriptions[i];
            AlertNode node = new AlertNode(type, value);
            System.out.println((("Type: " + node.getType()) + ", Value: ") + node.getValue());
        }
    }
}
statement is: String[] types = new String[]{ "string", "integer", "boolean" }, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
statement is: int[] values = new int[]{ 100, 200, 300 }, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
statement is: String[] descriptions = new String[]{ "This is a very long string.", "This is an integer with a large value.", "This is a boolean with a true value." }, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
statement is: for (int i = 0; i < types.length; i++) {
    String type = types[i];
    int value = values[i];
    String description = descriptions[i];
    AlertNode node = new AlertNode(type, value);
    System.out.println((("Type: " + node.getType()) + ", Value: ") + node.getValue());
}, class spoon.support.reflect.code.CtForImpl
statement is: com.sap.managementconsole.soap.axis.sapcontrol.AlertNode()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.sap.managementconsole.soap.axis.sapcontrol.AlertNode
statement code is: AlertNode alertNode = new AlertNode()
statement is: setName(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: alertNode.setName("k(iK2+")
statement is: com.sap.managementconsole.soap.axis.sapcontrol.AlertNode()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.sap.managementconsole.soap.axis.sapcontrol.AlertNode
statement code is: AlertNode alertNode = new AlertNode()
statement is: equals(Ljava/lang/Object;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean equals = alertNode.equals(arg0)
test data is: AlertNode alertNode = new AlertNode();
alertNode.setName("k(iK2+");
AlertNode alertNode = new AlertNode();
alertNode.equals(alertNode);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        AlertNode alertNode1 = new AlertNode();
        alertNode1.setName("High");
        AlertNode alertNode2 = new AlertNode();
        alertNode2.equals(alertNode1);
    }
}
statement is: AlertNode alertNode1 = new AlertNode(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: alertNode1.setName("High"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: alertNode1.setName("High") target is: alertNode1 method is: setName(java.lang.String)
source statement: com.sap.managementconsole.soap.axis.sapcontrol.AlertNode()V callee: VariableReference: Statement 0, type com.sap.managementconsole.soap.axis.sapcontrol.AlertNodeindex is: 0
Matched Method is: setName(Ljava/lang/String;)V
statement is: AlertNode alertNode2 = new AlertNode(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: alertNode2.equals(alertNode1), class spoon.support.reflect.code.CtInvocationImpl
invocation is: alertNode2.equals(alertNode1) target is: alertNode2 method is: equals(AlertNode)
TestCase is: AlertNode alertNode = new AlertNode();
String string = "High";
alertNode.setName(string);
AlertNode alertNode = new AlertNode();

statement is: com.sap.managementconsole.soap.axis.sapcontrol.AlertNode()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.sap.managementconsole.soap.axis.sapcontrol.AlertNode
statement code is: AlertNode alertNode = new AlertNode()
statement is: equals(Ljava/lang/Object;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean equals = alertNode.equals((Object) null)
test data is: AlertNode alertNode = new AlertNode();
alertNode.equals((Object) null);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Improved test data
        AlertNode alertNode = new AlertNode();
        alertNode.equals("This is a string value");
    }
}
statement is: // Improved test data
AlertNode alertNode = new AlertNode(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: alertNode.equals("This is a string value"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: alertNode.equals("This is a string value") target is: alertNode method is: equals(java.lang.String)
source statement: com.sap.managementconsole.soap.axis.sapcontrol.AlertNode()V callee: VariableReference: Statement 0, type com.sap.managementconsole.soap.axis.sapcontrol.AlertNodeindex is: 0
Matched Method is: equals(Ljava/lang/Object;)Z
TestCase is: AlertNode alertNode = new AlertNode();
String string = "This is a string value";
alertNode.equals(string);

statement is: com.sap.managementconsole.soap.axis.sapcontrol.AlertNode()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.sap.managementconsole.soap.axis.sapcontrol.AlertNode
statement code is: AlertNode alertNode = new AlertNode()
statement is: equals(Ljava/lang/Object;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean equals = arg0.equals(arg0)
test data is: AlertNode alertNode = new AlertNode();
alertNode.equals(alertNode);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        AlertNode alertNode = new AlertNode("High Temperature Alert");
        alertNode.setId(123456789);
        alertNode.setName("Temperature Alert");
        alertNode.setDescription("The temperature is too high.");
    }
}
statement is: AlertNode alertNode = new AlertNode("High Temperature Alert"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: alertNode.setId(123456789), class spoon.support.reflect.code.CtInvocationImpl
invocation is: alertNode.setId(123456789) target is: alertNode method is: setId(int)
statement is: alertNode.setName("Temperature Alert"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: alertNode.setName("Temperature Alert") target is: alertNode method is: setName(java.lang.String)
statement is: alertNode.setDescription("The temperature is too high."), class spoon.support.reflect.code.CtInvocationImpl
invocation is: alertNode.setDescription("The temperature is too high.") target is: alertNode method is: setDescription(java.lang.String)
statement is: com.sap.managementconsole.soap.axis.sapcontrol.AlertNode()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.sap.managementconsole.soap.axis.sapcontrol.AlertNode
statement code is: AlertNode alertNode = new AlertNode()
statement is: setName(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: alertNode.setName("mV:/.GYDy]mjC/")
statement is: com.sap.managementconsole.soap.axis.sapcontrol.AlertNode()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.sap.managementconsole.soap.axis.sapcontrol.AlertNode
statement code is: AlertNode alertNode = new AlertNode()
statement is: equals(Ljava/lang/Object;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean equals = alertNode.equals(arg0)
test data is: AlertNode alertNode = new AlertNode();
alertNode.setName("mV:/.GYDy]mjC/");
AlertNode alertNode = new AlertNode();
alertNode.equals(alertNode);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        AlertNode alertNode = new AlertNode();
        alertNode.setName("Severe Weather Alert");
        AlertNode alertNode = new AlertNode();
        alertNode.equals(alertNode);
    }
}
statement is: AlertNode alertNode = new AlertNode(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: alertNode.setName("Severe Weather Alert"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: alertNode.setName("Severe Weather Alert") target is: alertNode method is: setName(java.lang.String)
source statement: com.sap.managementconsole.soap.axis.sapcontrol.AlertNode()V callee: VariableReference: Statement 0, type com.sap.managementconsole.soap.axis.sapcontrol.AlertNodeindex is: 0
Matched Method is: setName(Ljava/lang/String;)V
statement is: AlertNode alertNode = new AlertNode(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: alertNode.equals(alertNode), class spoon.support.reflect.code.CtInvocationImpl
invocation is: alertNode.equals(alertNode) target is: alertNode method is: equals(AlertNode)
source statement: com.sap.managementconsole.soap.axis.sapcontrol.AlertNode()V callee: VariableReference: Statement 0, type com.sap.managementconsole.soap.axis.sapcontrol.AlertNodeindex is: 3
Matched Method is: equals(Ljava/lang/Object;)Z
TestCase is: AlertNode alertNode = new AlertNode();
String string = "Severe Weather Alert";
alertNode.setName(string);
AlertNode alertNode = new AlertNode();
alertNode.equals(alertNode);

statement is: com.sap.managementconsole.soap.axis.sapcontrol.AlertNode()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.sap.managementconsole.soap.axis.sapcontrol.AlertNode
statement code is: AlertNode alertNode = new AlertNode()
statement is: com.sap.managementconsole.soap.axis.sapcontrol.AlertNode()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.sap.managementconsole.soap.axis.sapcontrol.AlertNode
statement code is: AlertNode alertNode = new AlertNode()
statement is: org.evosuite.testcase.statements.FieldStatement@241673b4 type is: class org.evosuite.testcase.statements.FieldStatement return type class com.sap.managementconsole.soap.axis.sapcontrol.STATECOLOR
statement code is: STATECOLOR sTATECOLOR = STATECOLOR.value3
statement is: setActualValue(Lcom/sap/managementconsole/soap/axis/sapcontrol/STATECOLOR;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: alertNode.setActualValue(arg0)
statement is: equals(Ljava/lang/Object;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean equals = alertNode.equals(arg0)
test data is: AlertNode alertNode = new AlertNode();
AlertNode alertNode = new AlertNode();
STATECOLOR sTATECOLOR = STATECOLOR.value3;
alertNode.setActualValue(sTATECOLOR);
alertNode.equals(alertNode);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        AlertNode alertNode = new AlertNode();
        alertNode.setActualValue(value3);
        alertNode.equals(alertNode);
    }
}
statement is: AlertNode alertNode = new AlertNode(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: alertNode.setActualValue(value3), class spoon.support.reflect.code.CtInvocationImpl
invocation is: alertNode.setActualValue(value3) target is: alertNode method is: setActualValue()
statement is: alertNode.equals(alertNode), class spoon.support.reflect.code.CtInvocationImpl
invocation is: alertNode.equals(alertNode) target is: alertNode method is: equals(AlertNode)
source statement: com.sap.managementconsole.soap.axis.sapcontrol.AlertNode()V callee: VariableReference: Statement 0, type com.sap.managementconsole.soap.axis.sapcontrol.AlertNodeindex is: 0
Matched Method is: equals(Ljava/lang/Object;)Z
TestCase is: AlertNode alertNode = new AlertNode();
alertNode.equals(alertNode);

statement is: com.sap.managementconsole.soap.axis.sapcontrol.AlertNode()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.sap.managementconsole.soap.axis.sapcontrol.AlertNode
statement code is: AlertNode alertNode = new AlertNode()
statement is: org.evosuite.testcase.statements.FieldStatement@241673e7 type is: class org.evosuite.testcase.statements.FieldStatement return type class com.sap.managementconsole.soap.axis.sapcontrol.STATECOLOR
statement code is: STATECOLOR sTATECOLOR = STATECOLOR.value4
statement is: setActualValue(Lcom/sap/managementconsole/soap/axis/sapcontrol/STATECOLOR;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: alertNode.setActualValue(arg0)
statement is: com.sap.managementconsole.soap.axis.sapcontrol.AlertNode()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.sap.managementconsole.soap.axis.sapcontrol.AlertNode
statement code is: AlertNode alertNode = new AlertNode()
statement is: setActualValue(Lcom/sap/managementconsole/soap/axis/sapcontrol/STATECOLOR;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: alertNode.setActualValue(arg0)
statement is: equals(Ljava/lang/Object;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean equals = alertNode.equals(arg0)
test data is: AlertNode alertNode = new AlertNode();
STATECOLOR sTATECOLOR = STATECOLOR.value4;
alertNode.setActualValue(sTATECOLOR);
AlertNode alertNode = new AlertNode();
alertNode.setActualValue(sTATECOLOR);
alertNode.equals(alertNode);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        AlertNode alertNode = new AlertNode();
        STATECOLOR sTATECOLOR = STATECOLOR.value4;
        alertNode.setActualValue(sTATECOLOR);
        // Improved test data: using more descriptive values for the actual value of the alert node
        AlertNode alertNode = new AlertNode();
        alertNode.setActualValue(yellow);
        alertNode.equals(alertNode);
    }
}
statement is: AlertNode alertNode = new AlertNode(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: STATECOLOR sTATECOLOR = STATECOLOR.value4, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: STATECOLOR.value4 is STATECOLOR
CtField is: public static com.sap.managementconsole.soap.axis.sapcontrol.STATECOLOR com.sap.managementconsole.soap.axis.sapcontrol.STATECOLOR.value4 STATECOLOR value4
statement is: alertNode.setActualValue(sTATECOLOR), class spoon.support.reflect.code.CtInvocationImpl
invocation is: alertNode.setActualValue(sTATECOLOR) target is: alertNode method is: setActualValue(STATECOLOR)
source statement: com.sap.managementconsole.soap.axis.sapcontrol.AlertNode()V callee: VariableReference: Statement 0, type com.sap.managementconsole.soap.axis.sapcontrol.AlertNodeindex is: 0
Matched Method is: setActualValue(Lcom/sap/managementconsole/soap/axis/sapcontrol/STATECOLOR;)V
statement is: // Improved test data: using more descriptive values for the actual value of the alert node
AlertNode alertNode = new AlertNode(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: alertNode.setActualValue(yellow), class spoon.support.reflect.code.CtInvocationImpl
invocation is: alertNode.setActualValue(yellow) target is: alertNode method is: setActualValue()
source statement: com.sap.managementconsole.soap.axis.sapcontrol.AlertNode()V callee: VariableReference: Statement 0, type com.sap.managementconsole.soap.axis.sapcontrol.AlertNodeindex is: 3
Matched Method is: setActualValue(Lcom/sap/managementconsole/soap/axis/sapcontrol/STATECOLOR;)V
i 0 Parameters size() 0 Num of Method Parameters: 1
statement is: alertNode.equals(alertNode), class spoon.support.reflect.code.CtInvocationImpl
invocation is: alertNode.equals(alertNode) target is: alertNode method is: equals(AlertNode)
source statement: com.sap.managementconsole.soap.axis.sapcontrol.AlertNode()V callee: VariableReference: Statement 0, type com.sap.managementconsole.soap.axis.sapcontrol.AlertNodeindex is: 3
Matched Method is: equals(Ljava/lang/Object;)Z
TestCase is: AlertNode alertNode = new AlertNode();
STATECOLOR sTATECOLOR = STATECOLOR.value4;
alertNode.setActualValue(sTATECOLOR);
AlertNode alertNode = new AlertNode();
STATECOLOR sTATECOLOR = null;
alertNode.setActualValue(sTATECOLOR);
alertNode.equals(alertNode);

statement is: com.sap.managementconsole.soap.axis.sapcontrol.AlertNode()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.sap.managementconsole.soap.axis.sapcontrol.AlertNode
statement code is: AlertNode alertNode = new AlertNode()
statement is: setDescription(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: alertNode.setDescription("type")
statement is: com.sap.managementconsole.soap.axis.sapcontrol.AlertNode()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.sap.managementconsole.soap.axis.sapcontrol.AlertNode
statement code is: AlertNode alertNode = new AlertNode()
statement is: equals(Ljava/lang/Object;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean equals = alertNode.equals(arg0)
test data is: AlertNode alertNode = new AlertNode();
alertNode.setDescription("type");
AlertNode alertNode = new AlertNode();
alertNode.equals(alertNode);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        AlertNode alertNode = new AlertNode();
        alertNode.setDescription("Severe Weather Warning");
        alertNode.setAlertCode("10-202-303");
        alertNode.setPriority(7);
        AlertNode alertNode2 = new AlertNode();
        alertNode2.setDescription("Strong Winds");
        alertNode2.setAlertCode("10-202-304");
        alertNode2.setPriority(6);
        boolean result = alertNode.equals(alertNode2);
    }
}
statement is: AlertNode alertNode = new AlertNode(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: alertNode.setDescription("Severe Weather Warning"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: alertNode.setDescription("Severe Weather Warning") target is: alertNode method is: setDescription(java.lang.String)
source statement: com.sap.managementconsole.soap.axis.sapcontrol.AlertNode()V callee: VariableReference: Statement 0, type com.sap.managementconsole.soap.axis.sapcontrol.AlertNodeindex is: 0
Matched Method is: setDescription(Ljava/lang/String;)V
statement is: alertNode.setAlertCode("10-202-303"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: alertNode.setAlertCode("10-202-303") target is: alertNode method is: setAlertCode(java.lang.String)
statement is: alertNode.setPriority(7), class spoon.support.reflect.code.CtInvocationImpl
invocation is: alertNode.setPriority(7) target is: alertNode method is: setPriority(int)
statement is: AlertNode alertNode2 = new AlertNode(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: alertNode2.setDescription("Strong Winds"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: alertNode2.setDescription("Strong Winds") target is: alertNode2 method is: setDescription(java.lang.String)
source statement: com.sap.managementconsole.soap.axis.sapcontrol.AlertNode()V callee: VariableReference: Statement 0, type com.sap.managementconsole.soap.axis.sapcontrol.AlertNodeindex is: 3
Matched Method is: setDescription(Ljava/lang/String;)V
statement is: alertNode2.setAlertCode("10-202-304"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: alertNode2.setAlertCode("10-202-304") target is: alertNode2 method is: setAlertCode(java.lang.String)
statement is: alertNode2.setPriority(6), class spoon.support.reflect.code.CtInvocationImpl
invocation is: alertNode2.setPriority(6) target is: alertNode2 method is: setPriority(int)
statement is: boolean result = alertNode.equals(alertNode2), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: alertNode.equals(alertNode2) target is: alertNode method is: equals(AlertNode)
TestCase is: AlertNode alertNode = new AlertNode();
String string = "Severe Weather Warning";
alertNode.setDescription(string);
AlertNode alertNode = new AlertNode();
String string = "Strong Winds";
alertNode.setDescription(string);

statement is: com.sap.managementconsole.soap.axis.sapcontrol.AlertNode()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.sap.managementconsole.soap.axis.sapcontrol.AlertNode
statement code is: AlertNode alertNode = new AlertNode()
statement is: setDescription(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: alertNode.setDescription("or#?+OW")
statement is: com.sap.managementconsole.soap.axis.sapcontrol.AlertNode()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.sap.managementconsole.soap.axis.sapcontrol.AlertNode
statement code is: AlertNode alertNode = new AlertNode()
statement is: setDescription(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: alertNode.setDescription("or#?+OW")
statement is: equals(Ljava/lang/Object;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean equals = alertNode.equals(arg0)
test data is: AlertNode alertNode = new AlertNode();
alertNode.setDescription("or#?+OW");
AlertNode alertNode = new AlertNode();
alertNode.setDescription("or#?+OW");
alertNode.equals(alertNode);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        AlertNode alertNode = new AlertNode();
        alertNode.setDescription("Insufficient Funds");// Changed the description to be more descriptive and representative of the situation being tested.

        AlertNode alertNode2 = new AlertNode();
        alertNode2.setDescription("Insufficient Funds");
        alertNode.equals(alertNode2);
    }
}
statement is: AlertNode alertNode = new AlertNode(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: alertNode.setDescription("Insufficient Funds")// Changed the description to be more descriptive and representative of the situation being tested.
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: alertNode.setDescription("Insufficient Funds")// Changed the description to be more descriptive and representative of the situation being tested.
 target is: alertNode method is: setDescription(java.lang.String)
source statement: com.sap.managementconsole.soap.axis.sapcontrol.AlertNode()V callee: VariableReference: Statement 0, type com.sap.managementconsole.soap.axis.sapcontrol.AlertNodeindex is: 0
Matched Method is: setDescription(Ljava/lang/String;)V
statement is: AlertNode alertNode2 = new AlertNode(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: alertNode2.setDescription("Insufficient Funds"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: alertNode2.setDescription("Insufficient Funds") target is: alertNode2 method is: setDescription(java.lang.String)
source statement: com.sap.managementconsole.soap.axis.sapcontrol.AlertNode()V callee: VariableReference: Statement 0, type com.sap.managementconsole.soap.axis.sapcontrol.AlertNodeindex is: 3
Matched Method is: setDescription(Ljava/lang/String;)V
statement is: alertNode.equals(alertNode2), class spoon.support.reflect.code.CtInvocationImpl
invocation is: alertNode.equals(alertNode2) target is: alertNode method is: equals(AlertNode)
source statement: com.sap.managementconsole.soap.axis.sapcontrol.AlertNode()V callee: VariableReference: Statement 0, type com.sap.managementconsole.soap.axis.sapcontrol.AlertNodeindex is: 3
Matched Method is: equals(Ljava/lang/Object;)Z
TestCase is: AlertNode alertNode = new AlertNode();
String string = "Insufficient Funds";
alertNode.setDescription(string);
AlertNode alertNode = new AlertNode();
String string = "Insufficient Funds";
alertNode.setDescription(string);
alertNode.equals(alertNode);

statement is: com.sap.managementconsole.soap.axis.sapcontrol.AlertNode()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.sap.managementconsole.soap.axis.sapcontrol.AlertNode
statement code is: AlertNode alertNode = new AlertNode()
statement is: com.sap.managementconsole.soap.axis.sapcontrol.AlertNode()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.sap.managementconsole.soap.axis.sapcontrol.AlertNode
statement code is: AlertNode alertNode = new AlertNode()
statement is: setTime(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: alertNode.setTime("m2JJul")
statement is: equals(Ljava/lang/Object;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean equals = alertNode.equals(arg0)
test data is: AlertNode alertNode = new AlertNode();
AlertNode alertNode = new AlertNode();
alertNode.setTime("m2JJul");
alertNode.equals(alertNode);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Improved test data
        AlertNode alertNode1 = new AlertNode();
        alertNode1.setTime("July 2nd, Monday");
        AlertNode alertNode2 = new AlertNode();
        alertNode2.setTime("July 3rd, Tuesday");
        assertTrue(alertNode1.equals(alertNode2));
    }
}
statement is: // Improved test data
AlertNode alertNode1 = new AlertNode(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: alertNode1.setTime("July 2nd, Monday"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: alertNode1.setTime("July 2nd, Monday") target is: alertNode1 method is: setTime(java.lang.String)
source statement: com.sap.managementconsole.soap.axis.sapcontrol.AlertNode()V callee: VariableReference: Statement 0, type com.sap.managementconsole.soap.axis.sapcontrol.AlertNodeindex is: 0
Matched Method is: setTime(Ljava/lang/String;)V
statement is: AlertNode alertNode2 = new AlertNode(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: alertNode2.setTime("July 3rd, Tuesday"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: alertNode2.setTime("July 3rd, Tuesday") target is: alertNode2 method is: setTime(java.lang.String)
source statement: com.sap.managementconsole.soap.axis.sapcontrol.AlertNode()V callee: VariableReference: Statement 0, type com.sap.managementconsole.soap.axis.sapcontrol.AlertNodeindex is: 3
Matched Method is: setTime(Ljava/lang/String;)V
statement is: assertTrue(alertNode1.equals(alertNode2)), class spoon.support.reflect.code.CtInvocationImpl
invocation is: assertTrue(alertNode1.equals(alertNode2)) target is:  method is: assertTrue(<unknown>)
TestCase is: AlertNode alertNode = new AlertNode();
String string = "July 2nd, Monday";
alertNode.setTime(string);
AlertNode alertNode = new AlertNode();
String string = "July 3rd, Tuesday";
alertNode.setTime(string);

statement is: com.sap.managementconsole.soap.axis.sapcontrol.AlertNode()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.sap.managementconsole.soap.axis.sapcontrol.AlertNode
statement code is: AlertNode alertNode = new AlertNode()
statement is: com.sap.managementconsole.soap.axis.sapcontrol.AlertNode()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.sap.managementconsole.soap.axis.sapcontrol.AlertNode
statement code is: AlertNode alertNode = new AlertNode()
statement is: setTime(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: alertNode.setTime("~7PTsjr/31")
statement is: equals(Ljava/lang/Object;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean equals = alertNode.equals(arg0)
test data is: AlertNode alertNode = new AlertNode();
AlertNode alertNode = new AlertNode();
alertNode.setTime("~7PTsjr/31");
alertNode.equals(alertNode);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        AlertNode alertNode1 = new AlertNode();
        alertNode1.setTime("2022-03-07T15:30:00Z");
        AlertNode alertNode2 = new AlertNode();
        alertNode2.setTime("2022-03-07T16:45:00Z");
        Assert.assertEquals(alertNode1, alertNode2);
    }
}
statement is: AlertNode alertNode1 = new AlertNode(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: alertNode1.setTime("2022-03-07T15:30:00Z"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: alertNode1.setTime("2022-03-07T15:30:00Z") target is: alertNode1 method is: setTime(java.lang.String)
statement is: AlertNode alertNode2 = new AlertNode(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: alertNode2.setTime("2022-03-07T16:45:00Z"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: alertNode2.setTime("2022-03-07T16:45:00Z") target is: alertNode2 method is: setTime(java.lang.String)
statement is: Assert.assertEquals(alertNode1, alertNode2), class spoon.support.reflect.code.CtInvocationImpl
invocation is: Assert.assertEquals(alertNode1, alertNode2) target is: Assert method is: assertEquals(AlertNode,AlertNode)
TestCase is: AlertNode alertNode = new AlertNode();
AlertNode alertNode = new AlertNode();

statement is: com.sap.managementconsole.soap.axis.sapcontrol.AlertNode()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.sap.managementconsole.soap.axis.sapcontrol.AlertNode
statement code is: AlertNode alertNode = new AlertNode()
statement is: com.sap.managementconsole.soap.axis.sapcontrol.AlertNode()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.sap.managementconsole.soap.axis.sapcontrol.AlertNode
statement code is: AlertNode alertNode = new AlertNode()
statement is: setTime(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: alertNode.setTime("m2JJul")
statement is: setTime(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: alertNode.setTime("m2JJul")
statement is: equals(Ljava/lang/Object;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean equals = alertNode.equals(arg0)
test data is: AlertNode alertNode = new AlertNode();
AlertNode alertNode = new AlertNode();
alertNode.setTime("m2JJul");
alertNode.setTime("m2JJul");
alertNode.equals(alertNode);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        AlertNode alertNode = new AlertNode();
        alertNode.setTime("2023-06-18 10:45:00");
        alertNode.setTime("2023-06-18 10:45:00");
        alertNode.equals(alertNode);
    }
}
statement is: AlertNode alertNode = new AlertNode(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: alertNode.setTime("2023-06-18 10:45:00"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: alertNode.setTime("2023-06-18 10:45:00") target is: alertNode method is: setTime(java.lang.String)
source statement: com.sap.managementconsole.soap.axis.sapcontrol.AlertNode()V callee: VariableReference: Statement 0, type com.sap.managementconsole.soap.axis.sapcontrol.AlertNodeindex is: 0
Matched Method is: setTime(Ljava/lang/String;)V
statement is: alertNode.setTime("2023-06-18 10:45:00"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: alertNode.setTime("2023-06-18 10:45:00") target is: alertNode method is: setTime(java.lang.String)
source statement: com.sap.managementconsole.soap.axis.sapcontrol.AlertNode()V callee: VariableReference: Statement 0, type com.sap.managementconsole.soap.axis.sapcontrol.AlertNodeindex is: 0
Matched Method is: setTime(Ljava/lang/String;)V
statement is: alertNode.equals(alertNode), class spoon.support.reflect.code.CtInvocationImpl
invocation is: alertNode.equals(alertNode) target is: alertNode method is: equals(AlertNode)
source statement: com.sap.managementconsole.soap.axis.sapcontrol.AlertNode()V callee: VariableReference: Statement 0, type com.sap.managementconsole.soap.axis.sapcontrol.AlertNodeindex is: 0
Matched Method is: equals(Ljava/lang/Object;)Z
TestCase is: AlertNode alertNode = new AlertNode();
String string = "2023-06-18 10:45:00";
alertNode.setTime(string);
String string = "2023-06-18 10:45:00";
alertNode.setTime(string);
alertNode.equals(alertNode);

statement is: com.sap.managementconsole.soap.axis.sapcontrol.AlertNode()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.sap.managementconsole.soap.axis.sapcontrol.AlertNode
statement code is: AlertNode alertNode = new AlertNode()
statement is: com.sap.managementconsole.soap.axis.sapcontrol.AlertNode()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.sap.managementconsole.soap.axis.sapcontrol.AlertNode
statement code is: AlertNode alertNode = new AlertNode()
statement is: setAnalyseTool(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: alertNode.setAnalyseTool("")
statement is: equals(Ljava/lang/Object;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean equals = alertNode.equals(arg0)
test data is: AlertNode alertNode = new AlertNode();
AlertNode alertNode = new AlertNode();
alertNode.setAnalyseTool("");
alertNode.equals(alertNode);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        AlertNode alertNode = new AlertNode();
        alertNode.setAnalyzeTool("SonarQube");
        alertNode.equals(alertNode);
        AlertNode alertNode1 = new AlertNode();
        alertNode1.setAnalyzeTool("SonarQube");
        alertNode1.equals(alertNode1);
    }
}
statement is: AlertNode alertNode = new AlertNode(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: alertNode.setAnalyzeTool("SonarQube"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: alertNode.setAnalyzeTool("SonarQube") target is: alertNode method is: setAnalyzeTool(java.lang.String)
statement is: alertNode.equals(alertNode), class spoon.support.reflect.code.CtInvocationImpl
invocation is: alertNode.equals(alertNode) target is: alertNode method is: equals(AlertNode)
source statement: com.sap.managementconsole.soap.axis.sapcontrol.AlertNode()V callee: VariableReference: Statement 0, type com.sap.managementconsole.soap.axis.sapcontrol.AlertNodeindex is: 0
Matched Method is: equals(Ljava/lang/Object;)Z
statement is: AlertNode alertNode1 = new AlertNode(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: alertNode1.setAnalyzeTool("SonarQube"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: alertNode1.setAnalyzeTool("SonarQube") target is: alertNode1 method is: setAnalyzeTool(java.lang.String)
statement is: alertNode1.equals(alertNode1), class spoon.support.reflect.code.CtInvocationImpl
invocation is: alertNode1.equals(alertNode1) target is: alertNode1 method is: equals(AlertNode)
source statement: com.sap.managementconsole.soap.axis.sapcontrol.AlertNode()V callee: VariableReference: Statement 0, type com.sap.managementconsole.soap.axis.sapcontrol.AlertNodeindex is: 2
Matched Method is: equals(Ljava/lang/Object;)Z
TestCase is: AlertNode alertNode = new AlertNode();
alertNode.equals(alertNode);
AlertNode alertNode = new AlertNode();
alertNode.equals(alertNode);

statement is: com.sap.managementconsole.soap.axis.sapcontrol.AlertNode()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.sap.managementconsole.soap.axis.sapcontrol.AlertNode
statement code is: AlertNode alertNode = new AlertNode()
statement is: com.sap.managementconsole.soap.axis.sapcontrol.AlertNode()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.sap.managementconsole.soap.axis.sapcontrol.AlertNode
statement code is: AlertNode alertNode = new AlertNode()
statement is: setAnalyseTool(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: alertNode.setAnalyseTool("")
statement is: setAnalyseTool(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: alertNode.setAnalyseTool("")
statement is: equals(Ljava/lang/Object;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean equals = alertNode.equals(arg0)
test data is: AlertNode alertNode = new AlertNode();
AlertNode alertNode = new AlertNode();
alertNode.setAnalyseTool("");
alertNode.setAnalyseTool("");
alertNode.equals(alertNode);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        AlertNode alertNode = new AlertNode();
        AlertNode alertNode = new AlertNode();
        alertNode.setAnalyseTool("tool1");
        alertNode.setAnalyseTool("tool2");
        alertNode.equals(alertNode);
    }
}
statement is: AlertNode alertNode = new AlertNode(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: AlertNode alertNode = new AlertNode(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: alertNode.setAnalyseTool("tool1"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: alertNode.setAnalyseTool("tool1") target is: alertNode method is: setAnalyseTool(java.lang.String)
source statement: com.sap.managementconsole.soap.axis.sapcontrol.AlertNode()V callee: VariableReference: Statement 0, type com.sap.managementconsole.soap.axis.sapcontrol.AlertNodeindex is: 1
Matched Method is: setAnalyseTool(Ljava/lang/String;)V
statement is: alertNode.setAnalyseTool("tool2"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: alertNode.setAnalyseTool("tool2") target is: alertNode method is: setAnalyseTool(java.lang.String)
source statement: com.sap.managementconsole.soap.axis.sapcontrol.AlertNode()V callee: VariableReference: Statement 0, type com.sap.managementconsole.soap.axis.sapcontrol.AlertNodeindex is: 1
Matched Method is: setAnalyseTool(Ljava/lang/String;)V
statement is: alertNode.equals(alertNode), class spoon.support.reflect.code.CtInvocationImpl
invocation is: alertNode.equals(alertNode) target is: alertNode method is: equals(AlertNode)
source statement: com.sap.managementconsole.soap.axis.sapcontrol.AlertNode()V callee: VariableReference: Statement 0, type com.sap.managementconsole.soap.axis.sapcontrol.AlertNodeindex is: 1
Matched Method is: equals(Ljava/lang/Object;)Z
TestCase is: AlertNode alertNode = new AlertNode();
AlertNode alertNode = new AlertNode();
String string = "tool1";
alertNode.setAnalyseTool(string);
String string = "tool2";
alertNode.setAnalyseTool(string);
alertNode.equals(alertNode);

statement is: com.sap.managementconsole.soap.axis.sapcontrol.AlertNode()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.sap.managementconsole.soap.axis.sapcontrol.AlertNode
statement code is: AlertNode alertNode = new AlertNode()
statement is: org.evosuite.testcase.statements.FieldStatement@8b140794 type is: class org.evosuite.testcase.statements.FieldStatement return type class com.sap.managementconsole.soap.axis.sapcontrol.VISIBLELEVEL
statement code is: VISIBLELEVEL vISIBLELEVEL = VISIBLELEVEL.value3
statement is: setVisibleLevel(Lcom/sap/managementconsole/soap/axis/sapcontrol/VISIBLELEVEL;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: alertNode.setVisibleLevel(arg0)
statement is: com.sap.managementconsole.soap.axis.sapcontrol.AlertNode()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.sap.managementconsole.soap.axis.sapcontrol.AlertNode
statement code is: AlertNode alertNode = new AlertNode()
statement is: equals(Ljava/lang/Object;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean equals = alertNode.equals(arg0)
test data is: AlertNode alertNode = new AlertNode();
VISIBLELEVEL vISIBLELEVEL = VISIBLELEVEL.value3;
alertNode.setVisibleLevel(vISIBLELEVEL);
AlertNode alertNode = new AlertNode();
alertNode.equals(alertNode);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        AlertNode alertNode = new AlertNode();
        alertNode.setVisibleLevel("value3");
        AlertNode alertNode = new AlertNode();
        alertNode.equals("alertNode.equals(alertNode)");
    }
}
statement is: AlertNode alertNode = new AlertNode(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: alertNode.setVisibleLevel("value3"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: alertNode.setVisibleLevel("value3") target is: alertNode method is: setVisibleLevel(java.lang.String)
source statement: com.sap.managementconsole.soap.axis.sapcontrol.AlertNode()V callee: VariableReference: Statement 0, type com.sap.managementconsole.soap.axis.sapcontrol.AlertNodeindex is: 0
Matched Method is: setVisibleLevel(Lcom/sap/managementconsole/soap/axis/sapcontrol/VISIBLELEVEL;)V
statement is: AlertNode alertNode = new AlertNode(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: alertNode.equals("alertNode.equals(alertNode)"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: alertNode.equals("alertNode.equals(alertNode)") target is: alertNode method is: equals(java.lang.String)
TestCase is: AlertNode alertNode = new AlertNode();
String string = "value3";
alertNode.setVisibleLevel((VISIBLELEVEL) string);
AlertNode alertNode = new AlertNode();

statement is: com.sap.managementconsole.soap.axis.sapcontrol.AlertNode()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.sap.managementconsole.soap.axis.sapcontrol.AlertNode
statement code is: AlertNode alertNode = new AlertNode()
statement is: org.evosuite.testcase.statements.FieldStatement@8b1407c7 type is: class org.evosuite.testcase.statements.FieldStatement return type class com.sap.managementconsole.soap.axis.sapcontrol.VISIBLELEVEL
statement code is: VISIBLELEVEL vISIBLELEVEL = VISIBLELEVEL.value4
statement is: setVisibleLevel(Lcom/sap/managementconsole/soap/axis/sapcontrol/VISIBLELEVEL;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: alertNode.setVisibleLevel(arg0)
statement is: com.sap.managementconsole.soap.axis.sapcontrol.AlertNode()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.sap.managementconsole.soap.axis.sapcontrol.AlertNode
statement code is: AlertNode alertNode = new AlertNode()
statement is: setVisibleLevel(Lcom/sap/managementconsole/soap/axis/sapcontrol/VISIBLELEVEL;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: alertNode.setVisibleLevel(arg0)
statement is: equals(Ljava/lang/Object;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean equals = alertNode.equals(arg0)
test data is: AlertNode alertNode = new AlertNode();
VISIBLELEVEL vISIBLELEVEL = VISIBLELEVEL.value4;
alertNode.setVisibleLevel(vISIBLELEVEL);
AlertNode alertNode = new AlertNode();
alertNode.setVisibleLevel(vISIBLELEVEL);
alertNode.equals(alertNode);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        AlertNode alertNode = new AlertNode();
        VISIBLELEVEL vISIBLELEVEL = VISIBLELEVEL.value4;
        alertNode.setVisibleLevel(vISIBLELEVEL);
        alertNode.equals(alertNode);
    }
}
statement is: AlertNode alertNode = new AlertNode(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: VISIBLELEVEL vISIBLELEVEL = VISIBLELEVEL.value4, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: VISIBLELEVEL.value4 is VISIBLELEVEL
CtField is: public static com.sap.managementconsole.soap.axis.sapcontrol.VISIBLELEVEL com.sap.managementconsole.soap.axis.sapcontrol.VISIBLELEVEL.value4 VISIBLELEVEL value4
statement is: alertNode.setVisibleLevel(vISIBLELEVEL), class spoon.support.reflect.code.CtInvocationImpl
invocation is: alertNode.setVisibleLevel(vISIBLELEVEL) target is: alertNode method is: setVisibleLevel(VISIBLELEVEL)
source statement: com.sap.managementconsole.soap.axis.sapcontrol.AlertNode()V callee: VariableReference: Statement 0, type com.sap.managementconsole.soap.axis.sapcontrol.AlertNodeindex is: 0
Matched Method is: setVisibleLevel(Lcom/sap/managementconsole/soap/axis/sapcontrol/VISIBLELEVEL;)V
statement is: alertNode.equals(alertNode), class spoon.support.reflect.code.CtInvocationImpl
invocation is: alertNode.equals(alertNode) target is: alertNode method is: equals(AlertNode)
TestCase is: AlertNode alertNode = new AlertNode();
VISIBLELEVEL vISIBLELEVEL = VISIBLELEVEL.value4;
alertNode.setVisibleLevel(vISIBLELEVEL);

statement is: com.sap.managementconsole.soap.axis.sapcontrol.AlertNode()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.sap.managementconsole.soap.axis.sapcontrol.AlertNode
statement code is: AlertNode alertNode = new AlertNode()
statement is: com.sap.managementconsole.soap.axis.sapcontrol.AlertNode()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.sap.managementconsole.soap.axis.sapcontrol.AlertNode
statement code is: AlertNode alertNode = new AlertNode()
statement is: org.evosuite.testcase.statements.FieldStatement@241673b4 type is: class org.evosuite.testcase.statements.FieldStatement return type class com.sap.managementconsole.soap.axis.sapcontrol.STATECOLOR
statement code is: STATECOLOR sTATECOLOR = STATECOLOR.value3
statement is: setHighAlertValue(Lcom/sap/managementconsole/soap/axis/sapcontrol/STATECOLOR;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: alertNode.setHighAlertValue(arg0)
statement is: equals(Ljava/lang/Object;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean equals = alertNode.equals(arg0)
test data is: AlertNode alertNode = new AlertNode();
AlertNode alertNode = new AlertNode();
STATECOLOR sTATECOLOR = STATECOLOR.value3;
alertNode.setHighAlertValue(sTATECOLOR);
alertNode.equals(alertNode);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        AlertNode alertNode1 = new AlertNode();
        alertNode1.setStateColor(value3);
        alertNode1.setHighAlertValue(true);
        AlertNode alertNode2 = new AlertNode();
        alertNode2.setStateColor(value3);
        alertNode2.setHighAlertValue(false);
    }
}
statement is: AlertNode alertNode1 = new AlertNode(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: alertNode1.setStateColor(value3), class spoon.support.reflect.code.CtInvocationImpl
invocation is: alertNode1.setStateColor(value3) target is: alertNode1 method is: setStateColor()
statement is: alertNode1.setHighAlertValue(true), class spoon.support.reflect.code.CtInvocationImpl
invocation is: alertNode1.setHighAlertValue(true) target is: alertNode1 method is: setHighAlertValue(boolean)
statement is: AlertNode alertNode2 = new AlertNode(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: alertNode2.setStateColor(value3), class spoon.support.reflect.code.CtInvocationImpl
invocation is: alertNode2.setStateColor(value3) target is: alertNode2 method is: setStateColor()
statement is: alertNode2.setHighAlertValue(false), class spoon.support.reflect.code.CtInvocationImpl
invocation is: alertNode2.setHighAlertValue(false) target is: alertNode2 method is: setHighAlertValue(boolean)
TestCase is: AlertNode alertNode = new AlertNode();
AlertNode alertNode = new AlertNode();

statement is: com.sap.managementconsole.soap.axis.sapcontrol.AlertNode()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.sap.managementconsole.soap.axis.sapcontrol.AlertNode
statement code is: AlertNode alertNode = new AlertNode()
statement is: org.evosuite.testcase.statements.FieldStatement@241673b4 type is: class org.evosuite.testcase.statements.FieldStatement return type class com.sap.managementconsole.soap.axis.sapcontrol.STATECOLOR
statement code is: STATECOLOR sTATECOLOR = STATECOLOR.value3
statement is: setHighAlertValue(Lcom/sap/managementconsole/soap/axis/sapcontrol/STATECOLOR;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: alertNode.setHighAlertValue(arg0)
statement is: com.sap.managementconsole.soap.axis.sapcontrol.AlertNode()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.sap.managementconsole.soap.axis.sapcontrol.AlertNode
statement code is: AlertNode alertNode = new AlertNode()
statement is: setHighAlertValue(Lcom/sap/managementconsole/soap/axis/sapcontrol/STATECOLOR;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: alertNode.setHighAlertValue(arg0)
statement is: equals(Ljava/lang/Object;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean equals = alertNode.equals(arg0)
test data is: AlertNode alertNode = new AlertNode();
STATECOLOR sTATECOLOR = STATECOLOR.value3;
alertNode.setHighAlertValue(sTATECOLOR);
AlertNode alertNode = new AlertNode();
alertNode.setHighAlertValue(sTATECOLOR);
alertNode.equals(alertNode);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        AlertNode alertNode1 = new AlertNode();
        alertNode1.setHighAlertValue("Red");
        AlertNode alertNode2 = new AlertNode();
        alertNode2.setHighAlertValue("Orange");
        assertFalse(alertNode1.equals(alertNode2));
    }
}
statement is: AlertNode alertNode1 = new AlertNode(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: alertNode1.setHighAlertValue("Red"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: alertNode1.setHighAlertValue("Red") target is: alertNode1 method is: setHighAlertValue(java.lang.String)
source statement: com.sap.managementconsole.soap.axis.sapcontrol.AlertNode()V callee: VariableReference: Statement 0, type com.sap.managementconsole.soap.axis.sapcontrol.AlertNodeindex is: 0
Matched Method is: setHighAlertValue(Lcom/sap/managementconsole/soap/axis/sapcontrol/STATECOLOR;)V
statement is: AlertNode alertNode2 = new AlertNode(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: alertNode2.setHighAlertValue("Orange"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: alertNode2.setHighAlertValue("Orange") target is: alertNode2 method is: setHighAlertValue(java.lang.String)
source statement: com.sap.managementconsole.soap.axis.sapcontrol.AlertNode()V callee: VariableReference: Statement 0, type com.sap.managementconsole.soap.axis.sapcontrol.AlertNodeindex is: 3
Matched Method is: setHighAlertValue(Lcom/sap/managementconsole/soap/axis/sapcontrol/STATECOLOR;)V
statement is: assertFalse(alertNode1.equals(alertNode2)), class spoon.support.reflect.code.CtInvocationImpl
invocation is: assertFalse(alertNode1.equals(alertNode2)) target is:  method is: assertFalse(<unknown>)
TestCase is: AlertNode alertNode = new AlertNode();
String string = "Red";
alertNode.setHighAlertValue((STATECOLOR) string);
AlertNode alertNode = new AlertNode();
String string = "Orange";
alertNode.setHighAlertValue((STATECOLOR) string);

statement is: com.sap.managementconsole.soap.axis.sapcontrol.AlertNode()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.sap.managementconsole.soap.axis.sapcontrol.AlertNode
statement code is: AlertNode alertNode = new AlertNode()
statement is: com.sap.managementconsole.soap.axis.sapcontrol.AlertNode()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.sap.managementconsole.soap.axis.sapcontrol.AlertNode
statement code is: AlertNode alertNode = new AlertNode()
statement is: setAlDescription(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: alertNode.setAlDescription("U{")
statement is: equals(Ljava/lang/Object;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean equals = alertNode.equals(arg0)
test data is: AlertNode alertNode = new AlertNode();
AlertNode alertNode = new AlertNode();
alertNode.setAlDescription("U{");
alertNode.equals(alertNode);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        AlertNode alertNode1 = new AlertNode();
        alertNode1.setAlDescription("URGENT-SYSTEM-MAINTENANCE");
        AlertNode alertNode2 = new AlertNode();
        alertNode2.setAlDescription("NORMAL");
        assertEquals(alertNode1, alertNode1);
        assertNotEquals(alertNode1, alertNode2);
    }
}
statement is: AlertNode alertNode1 = new AlertNode(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: alertNode1.setAlDescription("URGENT-SYSTEM-MAINTENANCE"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: alertNode1.setAlDescription("URGENT-SYSTEM-MAINTENANCE") target is: alertNode1 method is: setAlDescription(java.lang.String)
statement is: AlertNode alertNode2 = new AlertNode(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: alertNode2.setAlDescription("NORMAL"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: alertNode2.setAlDescription("NORMAL") target is: alertNode2 method is: setAlDescription(java.lang.String)
statement is: assertEquals(alertNode1, alertNode1), class spoon.support.reflect.code.CtInvocationImpl
invocation is: assertEquals(alertNode1, alertNode1) target is:  method is: assertEquals(<unknown>,<unknown>)
statement is: assertNotEquals(alertNode1, alertNode2), class spoon.support.reflect.code.CtInvocationImpl
invocation is: assertNotEquals(alertNode1, alertNode2) target is:  method is: assertNotEquals(<unknown>,<unknown>)
TestCase is: AlertNode alertNode = new AlertNode();
AlertNode alertNode = new AlertNode();

statement is: com.sap.managementconsole.soap.axis.sapcontrol.AlertNode()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.sap.managementconsole.soap.axis.sapcontrol.AlertNode
statement code is: AlertNode alertNode = new AlertNode()
statement is: com.sap.managementconsole.soap.axis.sapcontrol.AlertNode()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.sap.managementconsole.soap.axis.sapcontrol.AlertNode
statement code is: AlertNode alertNode = new AlertNode()
statement is: setAlDescription(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: alertNode.setAlDescription("SAPControl-RED")
statement is: equals(Ljava/lang/Object;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean equals = alertNode.equals(arg0)
test data is: AlertNode alertNode = new AlertNode();
AlertNode alertNode = new AlertNode();
alertNode.setAlDescription("SAPControl-RED");
alertNode.equals(alertNode);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        AlertNode alertNode = new AlertNode();
        AlertNode alertNode2 = new AlertNode();
        alertNode.setAlDescription("SAPControl-RED");
        alertNode2.setAlDescription("SAPControl-GREEN");
        assertTrue(alertNode.equals(alertNode2));
    }
}
statement is: AlertNode alertNode = new AlertNode(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: AlertNode alertNode2 = new AlertNode(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: alertNode.setAlDescription("SAPControl-RED"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: alertNode.setAlDescription("SAPControl-RED") target is: alertNode method is: setAlDescription(java.lang.String)
statement is: alertNode2.setAlDescription("SAPControl-GREEN"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: alertNode2.setAlDescription("SAPControl-GREEN") target is: alertNode2 method is: setAlDescription(java.lang.String)
statement is: assertTrue(alertNode.equals(alertNode2)), class spoon.support.reflect.code.CtInvocationImpl
invocation is: assertTrue(alertNode.equals(alertNode2)) target is:  method is: assertTrue(<unknown>)
TestCase is: AlertNode alertNode = new AlertNode();
AlertNode alertNode = new AlertNode();

statement is: com.sap.managementconsole.soap.axis.sapcontrol.AlertNode()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.sap.managementconsole.soap.axis.sapcontrol.AlertNode
statement code is: AlertNode alertNode = new AlertNode()
statement is: com.sap.managementconsole.soap.axis.sapcontrol.AlertNode()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.sap.managementconsole.soap.axis.sapcontrol.AlertNode
statement code is: AlertNode alertNode = new AlertNode()
statement is: setAlTime(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: alertNode.setAlTime("org.apache.axis.types.NegativeInteger")
statement is: equals(Ljava/lang/Object;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean equals = alertNode.equals(arg0)
test data is: AlertNode alertNode = new AlertNode();
AlertNode alertNode = new AlertNode();
alertNode.setAlTime("org.apache.axis.types.NegativeInteger");
alertNode.equals(alertNode);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        alertNode.setAlTime("10:00 AM");
        alertNode.equals(alertNode);
    }
}
statement is: alertNode.setAlTime("10:00 AM"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: alertNode.setAlTime("10:00 AM") target is: alertNode method is: setAlTime(java.lang.String)
statement is: alertNode.equals(alertNode), class spoon.support.reflect.code.CtInvocationImpl
invocation is: alertNode.equals(alertNode) target is: alertNode method is: equals()
statement is: com.sap.managementconsole.soap.axis.sapcontrol.AlertNode()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.sap.managementconsole.soap.axis.sapcontrol.AlertNode
statement code is: AlertNode alertNode = new AlertNode()
statement is: com.sap.managementconsole.soap.axis.sapcontrol.AlertNode()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.sap.managementconsole.soap.axis.sapcontrol.AlertNode
statement code is: AlertNode alertNode = new AlertNode()
statement is: setAlTime(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: alertNode.setAlTime("h]C=we#4*Y9mC6")
statement is: equals(Ljava/lang/Object;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean equals = alertNode.equals(arg0)
test data is: AlertNode alertNode = new AlertNode();
AlertNode alertNode = new AlertNode();
alertNode.setAlTime("h]C=we#4*Y9mC6");
alertNode.equals(alertNode);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Improved test data for the "setAlTime" method
        AlertNode alertNode = new AlertNode();
        alertNode.setAlTime("2023-03-15T13:45:30");// Date in the future

        assertEquals(true, alertNode.equals(alertNode));
        // Improved test data for the "equals" method
        AlertNode alertNode1 = new AlertNode();
        AlertNode alertNode2 = new AlertNode();
        alertNode1.setAlTime("2023-03-15T13:45:30");
        alertNode2.setAlTime("2023-03-15T13:45:30");
        assertEquals(true, alertNode1.equals(alertNode2));
    }
}
statement is: // Improved test data for the "setAlTime" method
AlertNode alertNode = new AlertNode(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: alertNode.setAlTime("2023-03-15T13:45:30")// Date in the future
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: alertNode.setAlTime("2023-03-15T13:45:30")// Date in the future
 target is: alertNode method is: setAlTime(java.lang.String)
statement is: assertEquals(true, alertNode.equals(alertNode)), class spoon.support.reflect.code.CtInvocationImpl
invocation is: assertEquals(true, alertNode.equals(alertNode)) target is:  method is: assertEquals(boolean,<unknown>)
statement is: // Improved test data for the "equals" method
AlertNode alertNode1 = new AlertNode(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: AlertNode alertNode2 = new AlertNode(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: alertNode1.setAlTime("2023-03-15T13:45:30"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: alertNode1.setAlTime("2023-03-15T13:45:30") target is: alertNode1 method is: setAlTime(java.lang.String)
statement is: alertNode2.setAlTime("2023-03-15T13:45:30"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: alertNode2.setAlTime("2023-03-15T13:45:30") target is: alertNode2 method is: setAlTime(java.lang.String)
statement is: assertEquals(true, alertNode1.equals(alertNode2)), class spoon.support.reflect.code.CtInvocationImpl
invocation is: assertEquals(true, alertNode1.equals(alertNode2)) target is:  method is: assertEquals(boolean,<unknown>)
TestCase is: AlertNode alertNode = new AlertNode();
AlertNode alertNode = new AlertNode();
AlertNode alertNode = new AlertNode();

statement is: com.sap.managementconsole.soap.axis.sapcontrol.AlertNode()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.sap.managementconsole.soap.axis.sapcontrol.AlertNode
statement code is: AlertNode alertNode = new AlertNode()
statement is: com.sap.managementconsole.soap.axis.sapcontrol.AlertNode()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.sap.managementconsole.soap.axis.sapcontrol.AlertNode
statement code is: AlertNode alertNode = new AlertNode()
statement is: setTid(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: alertNode.setTid("")
statement is: equals(Ljava/lang/Object;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean equals = alertNode.equals(arg0)
test data is: AlertNode alertNode = new AlertNode();
AlertNode alertNode = new AlertNode();
alertNode.setTid("");
alertNode.equals(alertNode);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        AlertNode alertNode1 = new AlertNode();
        AlertNode alertNode2 = new AlertNode();
        alertNode1.setTid("tid-001");
        alertNode2.setTid("tid-002");
        assertFalse(alertNode1.equals(alertNode2));
    }
}
statement is: AlertNode alertNode1 = new AlertNode(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: AlertNode alertNode2 = new AlertNode(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: alertNode1.setTid("tid-001"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: alertNode1.setTid("tid-001") target is: alertNode1 method is: setTid(java.lang.String)
statement is: alertNode2.setTid("tid-002"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: alertNode2.setTid("tid-002") target is: alertNode2 method is: setTid(java.lang.String)
statement is: assertFalse(alertNode1.equals(alertNode2)), class spoon.support.reflect.code.CtInvocationImpl
invocation is: assertFalse(alertNode1.equals(alertNode2)) target is:  method is: assertFalse(<unknown>)
TestCase is: AlertNode alertNode = new AlertNode();
AlertNode alertNode = new AlertNode();

statement is: com.sap.managementconsole.soap.axis.sapcontrol.AlertNode()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.sap.managementconsole.soap.axis.sapcontrol.AlertNode
statement code is: AlertNode alertNode = new AlertNode()
statement is: com.sap.managementconsole.soap.axis.sapcontrol.AlertNode()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.sap.managementconsole.soap.axis.sapcontrol.AlertNode
statement code is: AlertNode alertNode = new AlertNode()
statement is: setTid(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: alertNode.setTid("multiRef")
statement is: equals(Ljava/lang/Object;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean equals = alertNode.equals(arg0)
test data is: AlertNode alertNode = new AlertNode();
AlertNode alertNode = new AlertNode();
alertNode.setTid("multiRef");
alertNode.equals(alertNode);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Improved test data for the AlertNode class
        AlertNode alertNode1 = new AlertNode();
        alertNode1.setTid("multiRef");
        alertNode1.setName("Multi-Reference Node");
        alertNode1.setDescription("This is a node with multiple references.");
        AlertNode alertNode2 = new AlertNode();
        alertNode2.setTid("singleRef");
        alertNode2.setName("Single-Reference Node");
        alertNode2.setDescription("This is a node with a single reference.");
    }
}
statement is: // Improved test data for the AlertNode class
AlertNode alertNode1 = new AlertNode(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: alertNode1.setTid("multiRef"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: alertNode1.setTid("multiRef") target is: alertNode1 method is: setTid(java.lang.String)
statement is: alertNode1.setName("Multi-Reference Node"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: alertNode1.setName("Multi-Reference Node") target is: alertNode1 method is: setName(java.lang.String)
statement is: alertNode1.setDescription("This is a node with multiple references."), class spoon.support.reflect.code.CtInvocationImpl
invocation is: alertNode1.setDescription("This is a node with multiple references.") target is: alertNode1 method is: setDescription(java.lang.String)
statement is: AlertNode alertNode2 = new AlertNode(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: alertNode2.setTid("singleRef"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: alertNode2.setTid("singleRef") target is: alertNode2 method is: setTid(java.lang.String)
statement is: alertNode2.setName("Single-Reference Node"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: alertNode2.setName("Single-Reference Node") target is: alertNode2 method is: setName(java.lang.String)
statement is: alertNode2.setDescription("This is a node with a single reference."), class spoon.support.reflect.code.CtInvocationImpl
invocation is: alertNode2.setDescription("This is a node with a single reference.") target is: alertNode2 method is: setDescription(java.lang.String)
TestCase is: AlertNode alertNode = new AlertNode();
AlertNode alertNode = new AlertNode();

statement is: com.sap.managementconsole.soap.axis.sapcontrol.AlertNode()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.sap.managementconsole.soap.axis.sapcontrol.AlertNode
statement code is: AlertNode alertNode = new AlertNode()
statement is: com.sap.managementconsole.soap.axis.sapcontrol.AlertNode()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.sap.managementconsole.soap.axis.sapcontrol.AlertNode
statement code is: AlertNode alertNode = new AlertNode()
statement is: setTid(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: alertNode.setTid("")
statement is: setTid(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: alertNode.setTid("")
statement is: equals(Ljava/lang/Object;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean equals = alertNode.equals(arg0)
test data is: AlertNode alertNode = new AlertNode();
AlertNode alertNode = new AlertNode();
alertNode.setTid("");
alertNode.setTid("");
alertNode.equals(alertNode);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        AlertNode alertNode = new AlertNode();
        alertNode.setTid("1234567890");
        alertNode.setTid("abcdefghijklmnopqrstuvwxyz");
        alertNode.equals(alertNode);
    }
}
statement is: AlertNode alertNode = new AlertNode(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: alertNode.setTid("1234567890"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: alertNode.setTid("1234567890") target is: alertNode method is: setTid(java.lang.String)
source statement: com.sap.managementconsole.soap.axis.sapcontrol.AlertNode()V callee: VariableReference: Statement 0, type com.sap.managementconsole.soap.axis.sapcontrol.AlertNodeindex is: 0
Matched Method is: setTid(Ljava/lang/String;)V
statement is: alertNode.setTid("abcdefghijklmnopqrstuvwxyz"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: alertNode.setTid("abcdefghijklmnopqrstuvwxyz") target is: alertNode method is: setTid(java.lang.String)
source statement: com.sap.managementconsole.soap.axis.sapcontrol.AlertNode()V callee: VariableReference: Statement 0, type com.sap.managementconsole.soap.axis.sapcontrol.AlertNodeindex is: 0
Matched Method is: setTid(Ljava/lang/String;)V
statement is: alertNode.equals(alertNode), class spoon.support.reflect.code.CtInvocationImpl
invocation is: alertNode.equals(alertNode) target is: alertNode method is: equals(AlertNode)
TestCase is: AlertNode alertNode = new AlertNode();
String string = "1234567890";
alertNode.setTid(string);
String string = "abcdefghijklmnopqrstuvwxyz";
alertNode.setTid(string);

statement is: com.sap.managementconsole.soap.axis.sapcontrol.AlertNode()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.sap.managementconsole.soap.axis.sapcontrol.AlertNode
statement code is: AlertNode alertNode = new AlertNode()
statement is: setTime(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: alertNode.setTime("")
statement is: hashCode()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int hashCode = alertNode.hashCode()
test data is: AlertNode alertNode = new AlertNode();
alertNode.setTime("");
alertNode.hashCode();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        AlertNode alertNode = new AlertNode();
        alertNode.setTime("2024-02-29T15:03:26+05:30");
        alertNode.hashCode();
    }
}
statement is: AlertNode alertNode = new AlertNode(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: alertNode.setTime("2024-02-29T15:03:26+05:30"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: alertNode.setTime("2024-02-29T15:03:26+05:30") target is: alertNode method is: setTime(java.lang.String)
source statement: com.sap.managementconsole.soap.axis.sapcontrol.AlertNode()V callee: VariableReference: Statement 0, type com.sap.managementconsole.soap.axis.sapcontrol.AlertNodeindex is: 0
Matched Method is: setTime(Ljava/lang/String;)V
statement is: alertNode.hashCode(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: alertNode.hashCode() target is: alertNode method is: hashCode()
source statement: com.sap.managementconsole.soap.axis.sapcontrol.AlertNode()V callee: VariableReference: Statement 0, type com.sap.managementconsole.soap.axis.sapcontrol.AlertNodeindex is: 0
Matched Method is: hashCode()I
TestCase is: AlertNode alertNode = new AlertNode();
String string = "2024-02-29T15:03:26+05:30";
alertNode.setTime(string);
alertNode.hashCode();

statement is: com.sap.managementconsole.soap.axis.sapcontrol.AlertNode()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.sap.managementconsole.soap.axis.sapcontrol.AlertNode
statement code is: AlertNode alertNode = new AlertNode()
statement is: setAnalyseTool(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: alertNode.setAnalyseTool("")
statement is: hashCode()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int hashCode = alertNode.hashCode()
test data is: AlertNode alertNode = new AlertNode();
alertNode.setAnalyseTool("");
alertNode.hashCode();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        AlertNode alertNode = new AlertNode();
        alertNode.setAnalyzeTool("SonarQube");
        alertNode.hashCode();
        // The above line of code returns a hash code for the object.
        alertNode.getAnalyzeTool();
        // The above line of code returns the analyze tool name. }}
    }
}
statement is: AlertNode alertNode = new AlertNode(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: alertNode.setAnalyzeTool("SonarQube"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: alertNode.setAnalyzeTool("SonarQube") target is: alertNode method is: setAnalyzeTool(java.lang.String)
statement is: alertNode.hashCode(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: alertNode.hashCode() target is: alertNode method is: hashCode()
source statement: com.sap.managementconsole.soap.axis.sapcontrol.AlertNode()V callee: VariableReference: Statement 0, type com.sap.managementconsole.soap.axis.sapcontrol.AlertNodeindex is: 0
Matched Method is: hashCode()I
statement is: // The above line of code returns a hash code for the object.
alertNode.getAnalyzeTool(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: // The above line of code returns a hash code for the object.
alertNode.getAnalyzeTool() target is: alertNode method is: getAnalyzeTool()
statement is: // The above line of code returns the analyze tool name. }}, class spoon.support.reflect.code.CtCommentImpl
TestCase is: AlertNode alertNode = new AlertNode();
alertNode.hashCode();

statement is: org.evosuite.testcase.statements.FieldStatement@241673b4 type is: class org.evosuite.testcase.statements.FieldStatement return type class com.sap.managementconsole.soap.axis.sapcontrol.STATECOLOR
statement code is: STATECOLOR sTATECOLOR = STATECOLOR.value3
statement is: org.evosuite.testcase.statements.FieldStatement@8b1407c7 type is: class org.evosuite.testcase.statements.FieldStatement return type class com.sap.managementconsole.soap.axis.sapcontrol.VISIBLELEVEL
statement code is: VISIBLELEVEL vISIBLELEVEL = VISIBLELEVEL.value4
statement is: com.sap.managementconsole.soap.axis.sapcontrol.AlertNode(Ljava/lang/String;ILcom/sap/managementconsole/soap/axis/sapcontrol/STATECOLOR;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lcom/sap/managementconsole/soap/axis/sapcontrol/VISIBLELEVEL;Lcom/sap/managementconsole/soap/axis/sapcontrol/STATECOLOR;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.sap.managementconsole.soap.axis.sapcontrol.AlertNode
statement code is: AlertNode alertNode = new AlertNode("", (-1904), arg7, "SAPControl-GREEN", (String) null, "xH`;V61Szi", arg6, arg7, "", " does not have a constructor which takes one string parameter", "SAPControl-UNKNOWN")
statement is: hashCode()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int hashCode = alertNode.hashCode()
test data is: STATECOLOR sTATECOLOR = STATECOLOR.value3;
VISIBLELEVEL vISIBLELEVEL = VISIBLELEVEL.value4;
AlertNode alertNode = new AlertNode("", (-1904), sTATECOLOR, "SAPControl-GREEN", (String) null, "xH`;V61Szi", vISIBLELEVEL, sTATECOLOR, "", " does not have a constructor which takes one string parameter", "SAPControl-UNKNOWN");
alertNode.hashCode();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        STATECOLOR sTATECOLOR = STATECOLOR.value3;
        VISIBLELEVEL vISIBLELEVEL = VISIBLELEVEL.value4;
        AlertNode alertNode = new AlertNode("", -1904, sTATECOLOR, "SAPControl-GREEN", ((String) (null)), "xH`;V61Szi", vISIBLELEVEL, sTATECOLOR, "", " does not have a constructor which takes one string parameter", "SAPControl-UNKNOWN");
        alertNode.hashCode();
    }
}
statement is: STATECOLOR sTATECOLOR = STATECOLOR.value3, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: STATECOLOR.value3 is STATECOLOR
CtField is: public static com.sap.managementconsole.soap.axis.sapcontrol.STATECOLOR com.sap.managementconsole.soap.axis.sapcontrol.STATECOLOR.value3 STATECOLOR value3
statement is: VISIBLELEVEL vISIBLELEVEL = VISIBLELEVEL.value4, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: VISIBLELEVEL.value4 is VISIBLELEVEL
CtField is: public static com.sap.managementconsole.soap.axis.sapcontrol.STATECOLOR com.sap.managementconsole.soap.axis.sapcontrol.STATECOLOR.value3 STATECOLOR value3
CtField is: public static com.sap.managementconsole.soap.axis.sapcontrol.VISIBLELEVEL com.sap.managementconsole.soap.axis.sapcontrol.VISIBLELEVEL.value4 VISIBLELEVEL value4
statement is: AlertNode alertNode = new AlertNode("", -1904, sTATECOLOR, "SAPControl-GREEN", ((String) (null)), "xH`;V61Szi", vISIBLELEVEL, sTATECOLOR, "", " does not have a constructor which takes one string parameter", "SAPControl-UNKNOWN"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: alertNode.hashCode(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: alertNode.hashCode() target is: alertNode method is: hashCode()
source statement: com.sap.managementconsole.soap.axis.sapcontrol.AlertNode(Ljava/lang/String;ILcom/sap/managementconsole/soap/axis/sapcontrol/STATECOLOR;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lcom/sap/managementconsole/soap/axis/sapcontrol/VISIBLELEVEL;Lcom/sap/managementconsole/soap/axis/sapcontrol/STATECOLOR;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V callee: VariableReference: Statement 2, type com.sap.managementconsole.soap.axis.sapcontrol.AlertNodeindex is: 8
Matched Method is: hashCode()I
TestCase is: STATECOLOR sTATECOLOR = STATECOLOR.value3;
VISIBLELEVEL vISIBLELEVEL = VISIBLELEVEL.value4;
String string = "";
String string = "SAPControl-GREEN";
String string = "xH`;V61Szi";
String string = "";
String string = " does not have a constructor which takes one string parameter";
String string = "SAPControl-UNKNOWN";
AlertNode alertNode = new AlertNode(string, (int) sTATECOLOR, (STATECOLOR) string, string, (String) vISIBLELEVEL, (String) sTATECOLOR, (VISIBLELEVEL) string, (STATECOLOR) string, string, " does not have a constructor which takes one string parameter", "SAPControl-UNKNOWN");
string.hashCode();

statement is: com.sap.managementconsole.soap.axis.sapcontrol.AlertNode()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.sap.managementconsole.soap.axis.sapcontrol.AlertNode
statement code is: AlertNode alertNode = new AlertNode()
statement is: getDescription()Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.lang.String
statement code is: String description = alertNode.getDescription()
test data is: AlertNode alertNode = new AlertNode();
alertNode.getDescription();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Improved test data
        int id = 1;
        String description = "This is a test description";
        AlertNode alertNode = new AlertNode(id, description);
        assertEquals("This is a test description", alertNode.getDescription());
    }
}
statement is: // Improved test data
int id = 1, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: String description = "This is a test description", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: AlertNode alertNode = new AlertNode(id, description), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: assertEquals("This is a test description", alertNode.getDescription()), class spoon.support.reflect.code.CtInvocationImpl
invocation is: assertEquals("This is a test description", alertNode.getDescription()) target is:  method is: assertEquals(java.lang.String,<unknown>)
* this is vulnerable: int _int = 1
* this is vulnerable: String string = "This is a test description"
TestCase is: int _int = 1;
String string = "This is a test description";

statement is: com.sap.managementconsole.soap.axis.sapcontrol.AlertNode()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.sap.managementconsole.soap.axis.sapcontrol.AlertNode
statement code is: AlertNode alertNode = new AlertNode()
statement is: getParent()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int parent = alertNode.getParent()
test data is: AlertNode alertNode = new AlertNode();
alertNode.getParent();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        AlertNode alertNode = new AlertNode();
        alertNode.setParent(new Node());
    }
}
statement is: AlertNode alertNode = new AlertNode(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: alertNode.setParent(new Node()), class spoon.support.reflect.code.CtInvocationImpl
invocation is: alertNode.setParent(new Node()) target is: alertNode method is: setParent(Node)
TestCase is: AlertNode alertNode = new AlertNode();

statement is: com.sap.managementconsole.soap.axis.sapcontrol.AlertNode()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.sap.managementconsole.soap.axis.sapcontrol.AlertNode
statement code is: AlertNode alertNode = new AlertNode()
statement is: getHighAlertValue()Lcom/sap/managementconsole/soap/axis/sapcontrol/STATECOLOR; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.sap.managementconsole.soap.axis.sapcontrol.STATECOLOR
statement code is: STATECOLOR highAlertValue = alertNode.getHighAlertValue()
test data is: AlertNode alertNode = new AlertNode();
alertNode.getHighAlertValue();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Improved test data
        int highAlertValue = 10;
        String highAlertDescription = "High";
    }
}
statement is: // Improved test data
int highAlertValue = 10, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: String highAlertDescription = "High", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
* this is vulnerable: int _int = 10
* this is vulnerable: String string = "High"
TestCase is: int _int = 10;
String string = "High";

statement is: com.sap.managementconsole.soap.axis.sapcontrol.AlertNode()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.sap.managementconsole.soap.axis.sapcontrol.AlertNode
statement code is: AlertNode alertNode = new AlertNode()
statement is: getVisibleLevel()Lcom/sap/managementconsole/soap/axis/sapcontrol/VISIBLELEVEL; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.sap.managementconsole.soap.axis.sapcontrol.VISIBLELEVEL
statement code is: VISIBLELEVEL visibleLevel = alertNode.getVisibleLevel()
test data is: AlertNode alertNode = new AlertNode();
alertNode.getVisibleLevel();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Improved test data
        AlertNode alertNode = new AlertNode();
        alertNode.setVisibleLevel(2);// set the visible level to 2

        alertNode.getVisibleLevel();// get the visible level, which should be 2

        // Original test data
        AlertNode alertNode = new AlertNode();
        alertNode.getVisibleLevel();// get the visible level, which could be any value between 0 and 3 }}

    }
}
statement is: // Improved test data
AlertNode alertNode = new AlertNode(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: alertNode.setVisibleLevel(2)// set the visible level to 2
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: alertNode.setVisibleLevel(2)// set the visible level to 2
 target is: alertNode method is: setVisibleLevel(int)
statement is: alertNode.getVisibleLevel()// get the visible level, which should be 2
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: alertNode.getVisibleLevel()// get the visible level, which should be 2
 target is: alertNode method is: getVisibleLevel()
source statement: com.sap.managementconsole.soap.axis.sapcontrol.AlertNode()V callee: VariableReference: Statement 0, type com.sap.managementconsole.soap.axis.sapcontrol.AlertNodeindex is: 0
Matched Method is: getVisibleLevel()Lcom/sap/managementconsole/soap/axis/sapcontrol/VISIBLELEVEL;
statement is: // Original test data
AlertNode alertNode = new AlertNode(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: alertNode.getVisibleLevel()// get the visible level, which could be any value between 0 and 3 }}
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: alertNode.getVisibleLevel()// get the visible level, which could be any value between 0 and 3 }}
 target is: alertNode method is: getVisibleLevel()
source statement: com.sap.managementconsole.soap.axis.sapcontrol.AlertNode()V callee: VariableReference: Statement 0, type com.sap.managementconsole.soap.axis.sapcontrol.AlertNodeindex is: 2
Matched Method is: getVisibleLevel()Lcom/sap/managementconsole/soap/axis/sapcontrol/VISIBLELEVEL;
TestCase is: AlertNode alertNode = new AlertNode();
alertNode.getVisibleLevel();
AlertNode alertNode = new AlertNode();
alertNode.getVisibleLevel();

statement is: com.sap.managementconsole.soap.axis.sapcontrol.AlertNode()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.sap.managementconsole.soap.axis.sapcontrol.AlertNode
statement code is: AlertNode alertNode = new AlertNode()
statement is: getTid()Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.lang.String
statement code is: String tid = alertNode.getTid()
test data is: AlertNode alertNode = new AlertNode();
alertNode.getTid();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Improved test data
        int tid = 12345;// A unique ID for the alert node

        String name = "John Doe";// The name of the person associated with the alert

        alertNode.setTid(tid);
        alertNode.setName(name);
        // Additional test data for other properties
        int severity = 3;// The severity of the alert (1-5, with 5 being the highest)

        String description = "The system has experienced a critical failure.";// A brief description of the alert

        alertNode.setSeverity(severity);
        alertNode.setDescription(description);
    }
}
statement is: // Improved test data
int tid = 12345// A unique ID for the alert node
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: String name = "John Doe"// The name of the person associated with the alert
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: alertNode.setTid(tid), class spoon.support.reflect.code.CtInvocationImpl
invocation is: alertNode.setTid(tid) target is: alertNode method is: setTid(int)
statement is: alertNode.setName(name), class spoon.support.reflect.code.CtInvocationImpl
invocation is: alertNode.setName(name) target is: alertNode method is: setName(java.lang.String)
statement is: // Additional test data for other properties
int severity = 3// The severity of the alert (1-5, with 5 being the highest)
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: String description = "The system has experienced a critical failure."// A brief description of the alert
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: alertNode.setSeverity(severity), class spoon.support.reflect.code.CtInvocationImpl
invocation is: alertNode.setSeverity(severity) target is: alertNode method is: setSeverity(int)
statement is: alertNode.setDescription(description), class spoon.support.reflect.code.CtInvocationImpl
invocation is: alertNode.setDescription(description) target is: alertNode method is: setDescription(java.lang.String)
* this is vulnerable: int _int = 12345
* this is vulnerable: String string = "John Doe"
* this is vulnerable: int _int = 3
* this is vulnerable: String string = "The system has experienced a critical failure."
TestCase is: int _int = 12345;
String string = "John Doe";
int _int = 3;
String string = "The system has experienced a critical failure.";

statement is: com.sap.managementconsole.soap.axis.sapcontrol.AlertNode()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.sap.managementconsole.soap.axis.sapcontrol.AlertNode
statement code is: AlertNode alertNode = new AlertNode()
statement is: getName()Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.lang.String
statement code is: String name = alertNode.getName()
test data is: AlertNode alertNode = new AlertNode();
alertNode.getName();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        AlertNode alertNode = new AlertNode();
        alertNode.setName("John");
        alertNode.setAge(30);
        alertNode.setGender("Male");
        alertNode.setLocation("New York");
    }
}
statement is: AlertNode alertNode = new AlertNode(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: alertNode.setName("John"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: alertNode.setName("John") target is: alertNode method is: setName(java.lang.String)
statement is: alertNode.setAge(30), class spoon.support.reflect.code.CtInvocationImpl
invocation is: alertNode.setAge(30) target is: alertNode method is: setAge(int)
statement is: alertNode.setGender("Male"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: alertNode.setGender("Male") target is: alertNode method is: setGender(java.lang.String)
statement is: alertNode.setLocation("New York"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: alertNode.setLocation("New York") target is: alertNode method is: setLocation(java.lang.String)
TestCase is: AlertNode alertNode = new AlertNode();

statement is: org.evosuite.testcase.statements.FieldStatement@2416734e type is: class org.evosuite.testcase.statements.FieldStatement return type class com.sap.managementconsole.soap.axis.sapcontrol.STATECOLOR
statement code is: STATECOLOR sTATECOLOR = STATECOLOR.value1
statement is: org.evosuite.testcase.statements.FieldStatement@8b140794 type is: class org.evosuite.testcase.statements.FieldStatement return type class com.sap.managementconsole.soap.axis.sapcontrol.VISIBLELEVEL
statement code is: VISIBLELEVEL vISIBLELEVEL = VISIBLELEVEL.value3
statement is: com.sap.managementconsole.soap.axis.sapcontrol.AlertNode(Ljava/lang/String;ILcom/sap/managementconsole/soap/axis/sapcontrol/STATECOLOR;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lcom/sap/managementconsole/soap/axis/sapcontrol/VISIBLELEVEL;Lcom/sap/managementconsole/soap/axis/sapcontrol/STATECOLOR;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.sap.managementconsole.soap.axis.sapcontrol.AlertNode
statement code is: AlertNode alertNode = new AlertNode("`J.}{\"", (-1), arg7, "HGYhtO]{z?oR", "T*&0Vwowc-dW6]", "alDescription", arg6, arg7, "", "F@YLZz_B#Q\"Fyp", "ptR")
statement is: getAlDescription()Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.lang.String
statement code is: String alDescription = alertNode.getAlDescription()
test data is: STATECOLOR sTATECOLOR = STATECOLOR.value1;
VISIBLELEVEL vISIBLELEVEL = VISIBLELEVEL.value3;
AlertNode alertNode = new AlertNode("`J.}{\"", (-1), sTATECOLOR, "HGYhtO]{z?oR", "T*&0Vwowc-dW6]", "alDescription", vISIBLELEVEL, sTATECOLOR, "", "F@YLZz_B#Q\"Fyp", "ptR");
alertNode.getAlDescription();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        STATECOLOR sTATECOLOR = STATECOLOR.value2;
        VISIBLELEVEL vISIBLELEVEL = VISIBLELEVEL.value4;
        AlertNode alertNode = new AlertNode("A", 5, sTATECOLOR, "Red", "Description", vISIBLELEVEL, sTATECOLOR, "", "F@YLZz_B#Q\"Fyp", "ptR");
        alertNode.getAlDescription();
    }
}
statement is: STATECOLOR sTATECOLOR = STATECOLOR.value2, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: STATECOLOR.value2 is STATECOLOR
CtField is: public static com.sap.managementconsole.soap.axis.sapcontrol.STATECOLOR com.sap.managementconsole.soap.axis.sapcontrol.STATECOLOR.value1 STATECOLOR value1
statement is: VISIBLELEVEL vISIBLELEVEL = VISIBLELEVEL.value4, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: VISIBLELEVEL.value4 is VISIBLELEVEL
CtField is: public static com.sap.managementconsole.soap.axis.sapcontrol.STATECOLOR com.sap.managementconsole.soap.axis.sapcontrol.STATECOLOR.value1 STATECOLOR value1
CtField is: public static com.sap.managementconsole.soap.axis.sapcontrol.VISIBLELEVEL com.sap.managementconsole.soap.axis.sapcontrol.VISIBLELEVEL.value3 VISIBLELEVEL value3
statement is: AlertNode alertNode = new AlertNode("A", 5, sTATECOLOR, "Red", "Description", vISIBLELEVEL, sTATECOLOR, "", "F@YLZz_B#Q\"Fyp", "ptR"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: alertNode.getAlDescription(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: alertNode.getAlDescription() target is: alertNode method is: getAlDescription()
TestCase is: STATECOLOR sTATECOLOR = STATECOLOR.value1;
VISIBLELEVEL vISIBLELEVEL = VISIBLELEVEL.value3;

statement is: com.sap.managementconsole.soap.axis.sapcontrol.AlertNode()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.sap.managementconsole.soap.axis.sapcontrol.AlertNode
statement code is: AlertNode alertNode = new AlertNode()
statement is: getActualValue()Lcom/sap/managementconsole/soap/axis/sapcontrol/STATECOLOR; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.sap.managementconsole.soap.axis.sapcontrol.STATECOLOR
statement code is: STATECOLOR actualValue = alertNode.getActualValue()
test data is: AlertNode alertNode = new AlertNode();
alertNode.getActualValue();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Improved test data:
        AlertNode alertNode = new AlertNode();
        alertNode.setActualValue(10);// set a more descriptive value for actualValue }}

    }
}
statement is: // Improved test data:
AlertNode alertNode = new AlertNode(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: alertNode.setActualValue(10)// set a more descriptive value for actualValue }}
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: alertNode.setActualValue(10)// set a more descriptive value for actualValue }}
 target is: alertNode method is: setActualValue(int)
TestCase is: AlertNode alertNode = new AlertNode();

statement is: com.sap.managementconsole.soap.axis.sapcontrol.AlertNode()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.sap.managementconsole.soap.axis.sapcontrol.AlertNode
statement code is: AlertNode alertNode = new AlertNode()
statement is: getAlTime()Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.lang.String
statement code is: String alTime = alertNode.getAlTime()
test data is: AlertNode alertNode = new AlertNode();
alertNode.getAlTime();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Improved test data
        AlertNode alertNode = new AlertNode("Critical", 15, "Emergency");
        assertEquals(alertNode.getAlTime(), 10);
    }
}
statement is: // Improved test data
AlertNode alertNode = new AlertNode("Critical", 15, "Emergency"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: assertEquals(alertNode.getAlTime(), 10), class spoon.support.reflect.code.CtInvocationImpl
invocation is: assertEquals(alertNode.getAlTime(), 10) target is:  method is: assertEquals(<unknown>,int)
statement is: org.evosuite.testcase.statements.FieldStatement@241673e7 type is: class org.evosuite.testcase.statements.FieldStatement return type class com.sap.managementconsole.soap.axis.sapcontrol.STATECOLOR
statement code is: STATECOLOR sTATECOLOR = STATECOLOR.value4
statement is: com.sap.managementconsole.soap.axis.sapcontrol.VISIBLELEVEL(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.sap.managementconsole.soap.axis.sapcontrol.VISIBLELEVEL
statement code is: VISIBLELEVEL vISIBLELEVEL = new VISIBLELEVEL("SAPControl-YELLOW")
statement is: com.sap.managementconsole.soap.axis.sapcontrol.AlertNode(Ljava/lang/String;ILcom/sap/managementconsole/soap/axis/sapcontrol/STATECOLOR;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lcom/sap/managementconsole/soap/axis/sapcontrol/VISIBLELEVEL;Lcom/sap/managementconsole/soap/axis/sapcontrol/STATECOLOR;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.sap.managementconsole.soap.axis.sapcontrol.AlertNode
statement code is: AlertNode alertNode = new AlertNode("", (-2198), arg7, "Mk#AdT.%@n", "", "SAPControl-RED", arg6, arg7, "SAPControl-DEVELOPER", "SAPControl-GREEN", "9>e;_3n-'Q2")
statement is: getTime()Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.lang.String
statement code is: String time = alertNode.getTime()
test data is: STATECOLOR sTATECOLOR = STATECOLOR.value4;
VISIBLELEVEL vISIBLELEVEL = new VISIBLELEVEL("SAPControl-YELLOW");
AlertNode alertNode = new AlertNode("", (-2198), sTATECOLOR, "Mk#AdT.%@n", "", "SAPControl-RED", vISIBLELEVEL, sTATECOLOR, "SAPControl-DEVELOPER", "SAPControl-GREEN", "9>e;_3n-'Q2");
alertNode.getTime();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        STATECOLOR sTATECOLOR = STATECOLOR.value1;// Changed to a more appropriate state color for testing, such as value1 or value2

        VISIBLELEVEL vISIBLELEVEL = new VISIBLELEVEL("VisibleLevel-YELLOW");
        AlertNode alertNode = new AlertNode("", 0, sTATECOLOR, "This is a test message", "", "VisibleLevel-RED", vISIBLELEVEL, sTATECOLOR, "VisibleLevel-DEVELOPER", "VisibleLevel-GREEN", "This is a test comment");
        alertNode.getTime();
    }
}
statement is: STATECOLOR sTATECOLOR = STATECOLOR.value1// Changed to a more appropriate state color for testing, such as value1 or value2
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: STATECOLOR.value1 is STATECOLOR
CtField is: public static com.sap.managementconsole.soap.axis.sapcontrol.STATECOLOR com.sap.managementconsole.soap.axis.sapcontrol.STATECOLOR.value4 STATECOLOR value4
statement is: VISIBLELEVEL vISIBLELEVEL = new VISIBLELEVEL("VisibleLevel-YELLOW"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: AlertNode alertNode = new AlertNode("", 0, sTATECOLOR, "This is a test message", "", "VisibleLevel-RED", vISIBLELEVEL, sTATECOLOR, "VisibleLevel-DEVELOPER", "VisibleLevel-GREEN", "This is a test comment"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: alertNode.getTime(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: alertNode.getTime() target is: alertNode method is: getTime()
source statement: com.sap.managementconsole.soap.axis.sapcontrol.AlertNode(Ljava/lang/String;ILcom/sap/managementconsole/soap/axis/sapcontrol/STATECOLOR;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lcom/sap/managementconsole/soap/axis/sapcontrol/VISIBLELEVEL;Lcom/sap/managementconsole/soap/axis/sapcontrol/STATECOLOR;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V callee: VariableReference: Statement 2, type com.sap.managementconsole.soap.axis.sapcontrol.AlertNodeindex is: 11
Matched Method is: getTime()Ljava/lang/String;
TestCase is: STATECOLOR sTATECOLOR = STATECOLOR.value4;
String string = "VisibleLevel-YELLOW";
VISIBLELEVEL vISIBLELEVEL = new VISIBLELEVEL(string);
String string = "";
int _int = 0;
String string = "This is a test message";
String string = "";
String string = "VisibleLevel-RED";
String string = "VisibleLevel-DEVELOPER";
String string = "VisibleLevel-GREEN";
String string = "This is a test comment";
AlertNode alertNode = new AlertNode(string, _int, sTATECOLOR, string, string, string, vISIBLELEVEL, sTATECOLOR, string, string, string);
((AlertNode) vISIBLELEVEL).getTime();

statement is: org.evosuite.testcase.statements.FieldStatement@241673e7 type is: class org.evosuite.testcase.statements.FieldStatement return type class com.sap.managementconsole.soap.axis.sapcontrol.STATECOLOR
statement code is: STATECOLOR sTATECOLOR = STATECOLOR.value4
statement is: fromString(Ljava/lang/String;)Lcom/sap/managementconsole/soap/axis/sapcontrol/VISIBLELEVEL; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.sap.managementconsole.soap.axis.sapcontrol.VISIBLELEVEL
statement code is: VISIBLELEVEL fromString = VISIBLELEVEL.fromString("SAPControl-YELLOW")
statement is: com.sap.managementconsole.soap.axis.sapcontrol.AlertNode(Ljava/lang/String;ILcom/sap/managementconsole/soap/axis/sapcontrol/STATECOLOR;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lcom/sap/managementconsole/soap/axis/sapcontrol/VISIBLELEVEL;Lcom/sap/managementconsole/soap/axis/sapcontrol/STATECOLOR;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.sap.managementconsole.soap.axis.sapcontrol.AlertNode
statement code is: AlertNode alertNode = new AlertNode("zg^6!'16qMs]`", (-3668), arg7, "SAPControl-YELLOW", "SAPControl-YELLOW", "SAPControl-GRAY", arg6, arg7, "SAPControl-UNKNOWN", "SAPControl-DEVELOPER", "SAPControl-YELLOW")
statement is: getAnalyseTool()Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.lang.String
statement code is: String analyseTool = alertNode.getAnalyseTool()
test data is: STATECOLOR sTATECOLOR = STATECOLOR.value4;
VISIBLELEVEL fromString = VISIBLELEVEL.fromString("SAPControl-YELLOW");
AlertNode alertNode = new AlertNode("zg^6!'16qMs]`", (-3668), sTATECOLOR, "SAPControl-YELLOW", "SAPControl-YELLOW", "SAPControl-GRAY", fromString, sTATECOLOR, "SAPControl-UNKNOWN", "SAPControl-DEVELOPER", "SAPControl-YELLOW");
alertNode.getAnalyseTool();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        STATECOLOR sTATECOLOR = STATECOLOR.value4;
        VISIBLELEVEL fromString = VISIBLELEVEL.fromString("SAPControl-YELLOW");
        AlertNode alertNode = new AlertNode("zg^6!'16qMs]`", -3668, sTATECOLOR, "SAPControl-YELLOW", "SAPControl-YELLOW", "SAPControl-GRAY", fromString, sTATECOLOR, "SAPControl-UNKNOWN", "SAPControl-DEVELOPER", "SAPControl-YELLOW");
        alertNode.getAnalyseTool();
    }
}
statement is: STATECOLOR sTATECOLOR = STATECOLOR.value4, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: STATECOLOR.value4 is STATECOLOR
CtField is: public static com.sap.managementconsole.soap.axis.sapcontrol.STATECOLOR com.sap.managementconsole.soap.axis.sapcontrol.STATECOLOR.value4 STATECOLOR value4
statement is: VISIBLELEVEL fromString = VISIBLELEVEL.fromString("SAPControl-YELLOW"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: VISIBLELEVEL.fromString("SAPControl-YELLOW") target is: VISIBLELEVEL method is: fromString(java.lang.String)
Matched Method is: fromString(Ljava/lang/String;)Lcom/sap/managementconsole/soap/axis/sapcontrol/VISIBLELEVEL;
statement is: AlertNode alertNode = new AlertNode("zg^6!'16qMs]`", -3668, sTATECOLOR, "SAPControl-YELLOW", "SAPControl-YELLOW", "SAPControl-GRAY", fromString, sTATECOLOR, "SAPControl-UNKNOWN", "SAPControl-DEVELOPER", "SAPControl-YELLOW"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: alertNode.getAnalyseTool(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: alertNode.getAnalyseTool() target is: alertNode method is: getAnalyseTool()
source statement: com.sap.managementconsole.soap.axis.sapcontrol.AlertNode(Ljava/lang/String;ILcom/sap/managementconsole/soap/axis/sapcontrol/STATECOLOR;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lcom/sap/managementconsole/soap/axis/sapcontrol/VISIBLELEVEL;Lcom/sap/managementconsole/soap/axis/sapcontrol/STATECOLOR;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V callee: VariableReference: Statement 2, type com.sap.managementconsole.soap.axis.sapcontrol.AlertNodeindex is: 10
Matched Method is: getAnalyseTool()Ljava/lang/String;
TestCase is: STATECOLOR sTATECOLOR = STATECOLOR.value4;
String string = "SAPControl-YELLOW";
VISIBLELEVEL fromString = VISIBLELEVEL.fromString(string);
String string = "zg^6!'16qMs]`";
String string = "SAPControl-YELLOW";
String string = "SAPControl-YELLOW";
String string = "SAPControl-GRAY";
String string = "SAPControl-UNKNOWN";
String string = "SAPControl-DEVELOPER";
String string = "SAPControl-YELLOW";
AlertNode alertNode = new AlertNode(string, (int) sTATECOLOR, (STATECOLOR) string, string, string, (String) fromString, (VISIBLELEVEL) sTATECOLOR, (STATECOLOR) string, string, string, "SAPControl-YELLOW");
((AlertNode) fromString).getAnalyseTool();

statement is: com.sap.managementconsole.soap.axis.sapcontrol.AlertNode()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.sap.managementconsole.soap.axis.sapcontrol.AlertNode
statement code is: AlertNode alertNode = new AlertNode()
statement is: org.evosuite.testcase.statements.FieldStatement@24167381 type is: class org.evosuite.testcase.statements.FieldStatement return type class com.sap.managementconsole.soap.axis.sapcontrol.STATECOLOR
statement code is: STATECOLOR sTATECOLOR = STATECOLOR.value2
statement is: setActualValue(Lcom/sap/managementconsole/soap/axis/sapcontrol/STATECOLOR;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: alertNode.setActualValue(arg0)
statement is: getActualValue()Lcom/sap/managementconsole/soap/axis/sapcontrol/STATECOLOR; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.sap.managementconsole.soap.axis.sapcontrol.STATECOLOR
statement code is: STATECOLOR actualValue = alertNode.getActualValue()
test data is: AlertNode alertNode = new AlertNode();
STATECOLOR sTATECOLOR = STATECOLOR.value2;
alertNode.setActualValue(sTATECOLOR);
alertNode.getActualValue();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        AlertNode alertNode = new AlertNode();
        STATECOLOR sTATECOLOR = STATECOLOR.value2;
        alertNode.setActualValue(sTATECOLOR);
        alertNode.getActualValue();
        // Improved test data
        StateColor stateColor = StateColor.Red;
        alertNode.setActualValue(stateColor);
        alertNode.getActualValue();
    }
}
statement is: AlertNode alertNode = new AlertNode(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: STATECOLOR sTATECOLOR = STATECOLOR.value2, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: STATECOLOR.value2 is STATECOLOR
CtField is: public static com.sap.managementconsole.soap.axis.sapcontrol.STATECOLOR com.sap.managementconsole.soap.axis.sapcontrol.STATECOLOR.value2 STATECOLOR value2
statement is: alertNode.setActualValue(sTATECOLOR), class spoon.support.reflect.code.CtInvocationImpl
invocation is: alertNode.setActualValue(sTATECOLOR) target is: alertNode method is: setActualValue(STATECOLOR)
source statement: com.sap.managementconsole.soap.axis.sapcontrol.AlertNode()V callee: VariableReference: Statement 0, type com.sap.managementconsole.soap.axis.sapcontrol.AlertNodeindex is: 0
Matched Method is: setActualValue(Lcom/sap/managementconsole/soap/axis/sapcontrol/STATECOLOR;)V
statement is: alertNode.getActualValue(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: alertNode.getActualValue() target is: alertNode method is: getActualValue()
source statement: com.sap.managementconsole.soap.axis.sapcontrol.AlertNode()V callee: VariableReference: Statement 0, type com.sap.managementconsole.soap.axis.sapcontrol.AlertNodeindex is: 0
Matched Method is: getActualValue()Lcom/sap/managementconsole/soap/axis/sapcontrol/STATECOLOR;
statement is: // Improved test data
StateColor stateColor = StateColor.Red, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: StateColor.Red is StateColor
CtField is: public static com.sap.managementconsole.soap.axis.sapcontrol.STATECOLOR com.sap.managementconsole.soap.axis.sapcontrol.STATECOLOR.value2 STATECOLOR value2
statement is: alertNode.setActualValue(stateColor), class spoon.support.reflect.code.CtInvocationImpl
invocation is: alertNode.setActualValue(stateColor) target is: alertNode method is: setActualValue(StateColor)
source statement: com.sap.managementconsole.soap.axis.sapcontrol.AlertNode()V callee: VariableReference: Statement 0, type com.sap.managementconsole.soap.axis.sapcontrol.AlertNodeindex is: 0
Matched Method is: setActualValue(Lcom/sap/managementconsole/soap/axis/sapcontrol/STATECOLOR;)V
i 0 Parameters size() 0 Num of Method Parameters: 1
statement is: alertNode.getActualValue(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: alertNode.getActualValue() target is: alertNode method is: getActualValue()
source statement: com.sap.managementconsole.soap.axis.sapcontrol.AlertNode()V callee: VariableReference: Statement 0, type com.sap.managementconsole.soap.axis.sapcontrol.AlertNodeindex is: 0
Matched Method is: getActualValue()Lcom/sap/managementconsole/soap/axis/sapcontrol/STATECOLOR;
TestCase is: AlertNode alertNode = new AlertNode();
STATECOLOR sTATECOLOR = STATECOLOR.value2;
alertNode.setActualValue(sTATECOLOR);
alertNode.getActualValue();
STATECOLOR sTATECOLOR = null;
alertNode.setActualValue(sTATECOLOR);
alertNode.getActualValue();

statement is: com.sap.managementconsole.soap.axis.sapcontrol.AlertNode()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.sap.managementconsole.soap.axis.sapcontrol.AlertNode
statement code is: AlertNode alertNode = new AlertNode()
statement is: setAlDescription(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: alertNode.setAlDescription("g'og+x+PTqzU]ou")
statement is: getAlDescription()Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.lang.String
statement code is: String alDescription = alertNode.getAlDescription()
test data is: AlertNode alertNode = new AlertNode();
alertNode.setAlDescription("g'og+x+PTqzU]ou");
alertNode.getAlDescription();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        AlertNode alertNode = new AlertNode();
        alertNode.setAlDescription("This is a description of an alert.");
        alertNode.getAlDescription();
    }
}
statement is: AlertNode alertNode = new AlertNode(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: alertNode.setAlDescription("This is a description of an alert."), class spoon.support.reflect.code.CtInvocationImpl
invocation is: alertNode.setAlDescription("This is a description of an alert.") target is: alertNode method is: setAlDescription(java.lang.String)
source statement: com.sap.managementconsole.soap.axis.sapcontrol.AlertNode()V callee: VariableReference: Statement 0, type com.sap.managementconsole.soap.axis.sapcontrol.AlertNodeindex is: 0
Matched Method is: setAlDescription(Ljava/lang/String;)V
statement is: alertNode.getAlDescription(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: alertNode.getAlDescription() target is: alertNode method is: getAlDescription()
source statement: com.sap.managementconsole.soap.axis.sapcontrol.AlertNode()V callee: VariableReference: Statement 0, type com.sap.managementconsole.soap.axis.sapcontrol.AlertNodeindex is: 0
Matched Method is: getAlDescription()Ljava/lang/String;
TestCase is: AlertNode alertNode = new AlertNode();
String string = "This is a description of an alert.";
alertNode.setAlDescription(string);
alertNode.getAlDescription();

statement is: com.sap.managementconsole.soap.axis.sapcontrol.AlertNode()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.sap.managementconsole.soap.axis.sapcontrol.AlertNode
statement code is: AlertNode alertNode = new AlertNode()
statement is: getAlDescription()Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.lang.String
statement code is: String alDescription = alertNode.getAlDescription()
test data is: AlertNode alertNode = new AlertNode();
alertNode.getAlDescription();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        AlertNode alertNode = new AlertNode();
        alertNode.setAlDescription("This is a test description for an alert");
    }
}
statement is: AlertNode alertNode = new AlertNode(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: alertNode.setAlDescription("This is a test description for an alert"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: alertNode.setAlDescription("This is a test description for an alert") target is: alertNode method is: setAlDescription(java.lang.String)
TestCase is: AlertNode alertNode = new AlertNode();

statement is: com.sap.managementconsole.soap.axis.sapcontrol.AlertNode()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.sap.managementconsole.soap.axis.sapcontrol.AlertNode
statement code is: AlertNode alertNode = new AlertNode()
statement is: setAlTime(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: alertNode.setAlTime("")
statement is: getAlTime()Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.lang.String
statement code is: String alTime = alertNode.getAlTime()
test data is: AlertNode alertNode = new AlertNode();
alertNode.setAlTime("");
alertNode.getAlTime();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        AlertNode alertNode = new AlertNode();
        alertNode.setAlTime("2023-04-18T16:25:00Z");
        alertNode.getAlTime();
    }
}
statement is: AlertNode alertNode = new AlertNode(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: alertNode.setAlTime("2023-04-18T16:25:00Z"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: alertNode.setAlTime("2023-04-18T16:25:00Z") target is: alertNode method is: setAlTime(java.lang.String)
source statement: com.sap.managementconsole.soap.axis.sapcontrol.AlertNode()V callee: VariableReference: Statement 0, type com.sap.managementconsole.soap.axis.sapcontrol.AlertNodeindex is: 0
Matched Method is: setAlTime(Ljava/lang/String;)V
statement is: alertNode.getAlTime(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: alertNode.getAlTime() target is: alertNode method is: getAlTime()
source statement: com.sap.managementconsole.soap.axis.sapcontrol.AlertNode()V callee: VariableReference: Statement 0, type com.sap.managementconsole.soap.axis.sapcontrol.AlertNodeindex is: 0
Matched Method is: getAlTime()Ljava/lang/String;
TestCase is: AlertNode alertNode = new AlertNode();
String string = "2023-04-18T16:25:00Z";
alertNode.setAlTime(string);
alertNode.getAlTime();

statement is: com.sap.managementconsole.soap.axis.sapcontrol.AlertNode()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.sap.managementconsole.soap.axis.sapcontrol.AlertNode
statement code is: AlertNode alertNode = new AlertNode()
statement is: setAlTime(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: alertNode.setAlTime("actualValue")
statement is: getAlTime()Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.lang.String
statement code is: String alTime = alertNode.getAlTime()
test data is: AlertNode alertNode = new AlertNode();
alertNode.setAlTime("actualValue");
alertNode.getAlTime();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        AlertNode alertNode = new AlertNode();
        alertNode.setAlTime("2023-04-18T16:00:00Z");
        alertNode.getAlTime();
    }
}
statement is: AlertNode alertNode = new AlertNode(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: alertNode.setAlTime("2023-04-18T16:00:00Z"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: alertNode.setAlTime("2023-04-18T16:00:00Z") target is: alertNode method is: setAlTime(java.lang.String)
source statement: com.sap.managementconsole.soap.axis.sapcontrol.AlertNode()V callee: VariableReference: Statement 0, type com.sap.managementconsole.soap.axis.sapcontrol.AlertNodeindex is: 0
Matched Method is: setAlTime(Ljava/lang/String;)V
statement is: alertNode.getAlTime(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: alertNode.getAlTime() target is: alertNode method is: getAlTime()
source statement: com.sap.managementconsole.soap.axis.sapcontrol.AlertNode()V callee: VariableReference: Statement 0, type com.sap.managementconsole.soap.axis.sapcontrol.AlertNodeindex is: 0
Matched Method is: getAlTime()Ljava/lang/String;
TestCase is: AlertNode alertNode = new AlertNode();
String string = "2023-04-18T16:00:00Z";
alertNode.setAlTime(string);
alertNode.getAlTime();

statement is: com.sap.managementconsole.soap.axis.sapcontrol.AlertNode()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.sap.managementconsole.soap.axis.sapcontrol.AlertNode
statement code is: AlertNode alertNode = new AlertNode()
statement is: setAnalyseTool(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: alertNode.setAnalyseTool("")
statement is: getAnalyseTool()Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.lang.String
statement code is: String analyseTool = alertNode.getAnalyseTool()
test data is: AlertNode alertNode = new AlertNode();
alertNode.setAnalyseTool("");
alertNode.getAnalyseTool();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        AlertNode alertNode = new AlertNode();
        alertNode.setAnalyzeTool("Linter");
        alertNode.getAnalyzeTool();
    }
}
statement is: AlertNode alertNode = new AlertNode(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: alertNode.setAnalyzeTool("Linter"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: alertNode.setAnalyzeTool("Linter") target is: alertNode method is: setAnalyzeTool(java.lang.String)
statement is: alertNode.getAnalyzeTool(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: alertNode.getAnalyzeTool() target is: alertNode method is: getAnalyzeTool()
TestCase is: AlertNode alertNode = new AlertNode();

statement is: com.sap.managementconsole.soap.axis.sapcontrol.AlertNode()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.sap.managementconsole.soap.axis.sapcontrol.AlertNode
statement code is: AlertNode alertNode = new AlertNode()
statement is: getAnalyseTool()Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.lang.String
statement code is: String analyseTool = alertNode.getAnalyseTool()
test data is: AlertNode alertNode = new AlertNode();
alertNode.getAnalyseTool();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Improved test data
        int numOfAlerts = 10;
        String[] alertTypes = new String[]{ "Low", "Medium", "High" };
        double[] alertScores = new double[]{ 0.5, 0.75, 0.9 };
        alertNode.setNumOfAlerts(numOfAlerts);
        alertNode.setAlertTypes(alertTypes);
        alertNode.setAlertScores(alertScores);
    }
}
statement is: // Improved test data
int numOfAlerts = 10, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: String[] alertTypes = new String[]{ "Low", "Medium", "High" }, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
statement is: double[] alertScores = new double[]{ 0.5, 0.75, 0.9 }, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
statement is: alertNode.setNumOfAlerts(numOfAlerts), class spoon.support.reflect.code.CtInvocationImpl
invocation is: alertNode.setNumOfAlerts(numOfAlerts) target is: alertNode method is: setNumOfAlerts(int)
statement is: alertNode.setAlertTypes(alertTypes), class spoon.support.reflect.code.CtInvocationImpl
invocation is: alertNode.setAlertTypes(alertTypes) target is: alertNode method is: setAlertTypes(java.lang.String[])
statement is: alertNode.setAlertScores(alertScores), class spoon.support.reflect.code.CtInvocationImpl
invocation is: alertNode.setAlertScores(alertScores) target is: alertNode method is: setAlertScores(double[])
* this is vulnerable: int _int = 10
TestCase is: int _int = 10;

statement is: com.sap.managementconsole.soap.axis.sapcontrol.AlertNode()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.sap.managementconsole.soap.axis.sapcontrol.AlertNode
statement code is: AlertNode alertNode = new AlertNode()
statement is: setDescription(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: alertNode.setDescription("")
statement is: getDescription()Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.lang.String
statement code is: String description = alertNode.getDescription()
test data is: AlertNode alertNode = new AlertNode();
alertNode.setDescription("");
alertNode.getDescription();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        AlertNode alertNode = new AlertNode();
        alertNode.setDescription("The system is experiencing high CPU usage.");
        alertNode.getDescription();// Output: "The system is experiencing high CPU usage." }}

    }
}
statement is: AlertNode alertNode = new AlertNode(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: alertNode.setDescription("The system is experiencing high CPU usage."), class spoon.support.reflect.code.CtInvocationImpl
invocation is: alertNode.setDescription("The system is experiencing high CPU usage.") target is: alertNode method is: setDescription(java.lang.String)
source statement: com.sap.managementconsole.soap.axis.sapcontrol.AlertNode()V callee: VariableReference: Statement 0, type com.sap.managementconsole.soap.axis.sapcontrol.AlertNodeindex is: 0
Matched Method is: setDescription(Ljava/lang/String;)V
statement is: alertNode.getDescription()// Output: "The system is experiencing high CPU usage." }}
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: alertNode.getDescription()// Output: "The system is experiencing high CPU usage." }}
 target is: alertNode method is: getDescription()
source statement: com.sap.managementconsole.soap.axis.sapcontrol.AlertNode()V callee: VariableReference: Statement 0, type com.sap.managementconsole.soap.axis.sapcontrol.AlertNodeindex is: 0
Matched Method is: getDescription()Ljava/lang/String;
TestCase is: AlertNode alertNode = new AlertNode();
String string = "The system is experiencing high CPU usage.";
alertNode.setDescription(string);
alertNode.getDescription();

statement is: org.evosuite.testcase.statements.FieldStatement@241673b4 type is: class org.evosuite.testcase.statements.FieldStatement return type class com.sap.managementconsole.soap.axis.sapcontrol.STATECOLOR
statement code is: STATECOLOR sTATECOLOR = STATECOLOR.value3
statement is: com.sap.managementconsole.soap.axis.sapcontrol.VISIBLELEVEL(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.sap.managementconsole.soap.axis.sapcontrol.VISIBLELEVEL
statement code is: VISIBLELEVEL vISIBLELEVEL = new VISIBLELEVEL("SAPControl-RED")
statement is: com.sap.managementconsole.soap.axis.sapcontrol.AlertNode(Ljava/lang/String;ILcom/sap/managementconsole/soap/axis/sapcontrol/STATECOLOR;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lcom/sap/managementconsole/soap/axis/sapcontrol/VISIBLELEVEL;Lcom/sap/managementconsole/soap/axis/sapcontrol/STATECOLOR;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.sap.managementconsole.soap.axis.sapcontrol.AlertNode
statement code is: AlertNode alertNode = new AlertNode((String) null, (-1314), arg7, "SAPControl-GRAY", "SAPControl-RED", "", arg6, arg7, "0Eqso92'", "0Eqso92'", "SAPControl-YELLOW")
statement is: getDescription()Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.lang.String
statement code is: String description = alertNode.getDescription()
test data is: STATECOLOR sTATECOLOR = STATECOLOR.value3;
VISIBLELEVEL vISIBLELEVEL = new VISIBLELEVEL("SAPControl-RED");
AlertNode alertNode = new AlertNode((String) null, (-1314), sTATECOLOR, "SAPControl-GRAY", "SAPControl-RED", "", vISIBLELEVEL, sTATECOLOR, "0Eqso92'", "0Eqso92'", "SAPControl-YELLOW");
alertNode.getDescription();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        STATECOLOR sTATECOLOR = STATECOLOR.value1;
        VISIBLELEVEL vISIBLELEVEL = new VISIBLELEVEL("SAPControl-GREEN");
        AlertNode alertNode = new AlertNode(((String) (null)), 0, sTATECOLOR, "SAPControl-RED", "SAPControl-GRAY", "", vISIBLELEVEL, sTATECOLOR, "0Eqso92'", "0Eqso92'", "SAPControl-YELLOW");
        alertNode.getDescription();
    }
}
statement is: STATECOLOR sTATECOLOR = STATECOLOR.value1, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: STATECOLOR.value1 is STATECOLOR
CtField is: public static com.sap.managementconsole.soap.axis.sapcontrol.STATECOLOR com.sap.managementconsole.soap.axis.sapcontrol.STATECOLOR.value3 STATECOLOR value3
statement is: VISIBLELEVEL vISIBLELEVEL = new VISIBLELEVEL("SAPControl-GREEN"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: AlertNode alertNode = new AlertNode(((String) (null)), 0, sTATECOLOR, "SAPControl-RED", "SAPControl-GRAY", "", vISIBLELEVEL, sTATECOLOR, "0Eqso92'", "0Eqso92'", "SAPControl-YELLOW"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: alertNode.getDescription(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: alertNode.getDescription() target is: alertNode method is: getDescription()
source statement: com.sap.managementconsole.soap.axis.sapcontrol.AlertNode(Ljava/lang/String;ILcom/sap/managementconsole/soap/axis/sapcontrol/STATECOLOR;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lcom/sap/managementconsole/soap/axis/sapcontrol/VISIBLELEVEL;Lcom/sap/managementconsole/soap/axis/sapcontrol/STATECOLOR;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V callee: VariableReference: Statement 2, type com.sap.managementconsole.soap.axis.sapcontrol.AlertNodeindex is: 10
Matched Method is: getDescription()Ljava/lang/String;
TestCase is: STATECOLOR sTATECOLOR = STATECOLOR.value3;
String string = "SAPControl-GREEN";
VISIBLELEVEL vISIBLELEVEL = new VISIBLELEVEL(string);
int _int = 0;
String string = "SAPControl-RED";
String string = "SAPControl-GRAY";
String string = "";
String string = "0Eqso92'";
String string = "0Eqso92'";
String string = "SAPControl-YELLOW";
AlertNode alertNode = new AlertNode((String) _int, (int) sTATECOLOR, (STATECOLOR) string, string, string, (String) vISIBLELEVEL, (VISIBLELEVEL) sTATECOLOR, (STATECOLOR) string, string, string, "SAPControl-YELLOW");
((AlertNode) vISIBLELEVEL).getDescription();

statement is: org.evosuite.testcase.statements.FieldStatement@2416734e type is: class org.evosuite.testcase.statements.FieldStatement return type class com.sap.managementconsole.soap.axis.sapcontrol.STATECOLOR
statement code is: STATECOLOR sTATECOLOR = STATECOLOR.value1
statement is: fromString(Ljava/lang/String;)Lcom/sap/managementconsole/soap/axis/sapcontrol/VISIBLELEVEL; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.sap.managementconsole.soap.axis.sapcontrol.VISIBLELEVEL
statement code is: VISIBLELEVEL fromString = VISIBLELEVEL.fromString("")
statement is: com.sap.managementconsole.soap.axis.sapcontrol.AlertNode(Ljava/lang/String;ILcom/sap/managementconsole/soap/axis/sapcontrol/STATECOLOR;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lcom/sap/managementconsole/soap/axis/sapcontrol/VISIBLELEVEL;Lcom/sap/managementconsole/soap/axis/sapcontrol/STATECOLOR;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.sap.managementconsole.soap.axis.sapcontrol.AlertNode
statement code is: AlertNode alertNode = new AlertNode("", 10000, arg7, "", "6drB:$ )nFm]p", "o46", arg6, arg7, "element", "o46", "")
statement is: getHighAlertValue()Lcom/sap/managementconsole/soap/axis/sapcontrol/STATECOLOR; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.sap.managementconsole.soap.axis.sapcontrol.STATECOLOR
statement code is: STATECOLOR highAlertValue = alertNode.getHighAlertValue()
test data is: STATECOLOR sTATECOLOR = STATECOLOR.value1;
VISIBLELEVEL fromString = VISIBLELEVEL.fromString("");
AlertNode alertNode = new AlertNode("", 10000, sTATECOLOR, "", "6drB:$ )nFm]p", "o46", fromString, sTATECOLOR, "element", "o46", "");
alertNode.getHighAlertValue();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        STATECOLOR sTATECOLOR = STATECOLOR.value2;
        VISIBLELEVEL fromString = VISIBLELEVEL.fromString("visible");
        AlertNode alertNode = new AlertNode("my_alert", 10000, sTATECOLOR, "my_message", "6drB:$ )nFm]p", "o46", fromString, sTATECOLOR, "element", "o46", "my_id");
        alertNode.getHighAlertValue();
    }
}
statement is: STATECOLOR sTATECOLOR = STATECOLOR.value2, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: STATECOLOR.value2 is STATECOLOR
CtField is: public static com.sap.managementconsole.soap.axis.sapcontrol.STATECOLOR com.sap.managementconsole.soap.axis.sapcontrol.STATECOLOR.value1 STATECOLOR value1
statement is: VISIBLELEVEL fromString = VISIBLELEVEL.fromString("visible"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: VISIBLELEVEL.fromString("visible") target is: VISIBLELEVEL method is: fromString(java.lang.String)
Matched Method is: fromString(Ljava/lang/String;)Lcom/sap/managementconsole/soap/axis/sapcontrol/VISIBLELEVEL;
statement is: AlertNode alertNode = new AlertNode("my_alert", 10000, sTATECOLOR, "my_message", "6drB:$ )nFm]p", "o46", fromString, sTATECOLOR, "element", "o46", "my_id"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: alertNode.getHighAlertValue(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: alertNode.getHighAlertValue() target is: alertNode method is: getHighAlertValue()
source statement: com.sap.managementconsole.soap.axis.sapcontrol.AlertNode(Ljava/lang/String;ILcom/sap/managementconsole/soap/axis/sapcontrol/STATECOLOR;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lcom/sap/managementconsole/soap/axis/sapcontrol/VISIBLELEVEL;Lcom/sap/managementconsole/soap/axis/sapcontrol/STATECOLOR;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V callee: VariableReference: Statement 2, type com.sap.managementconsole.soap.axis.sapcontrol.AlertNodeindex is: 11
Matched Method is: getHighAlertValue()Lcom/sap/managementconsole/soap/axis/sapcontrol/STATECOLOR;
TestCase is: STATECOLOR sTATECOLOR = STATECOLOR.value1;
String string = "visible";
VISIBLELEVEL fromString = VISIBLELEVEL.fromString(string);
String string = "my_alert";
int _int = 10000;
String string = "my_message";
String string = "6drB:$ )nFm]p";
String string = "o46";
String string = "element";
String string = "o46";
String string = "my_id";
AlertNode alertNode = new AlertNode(string, _int, sTATECOLOR, string, string, string, fromString, sTATECOLOR, string, string, string);
((AlertNode) fromString).getHighAlertValue();

statement is: com.sap.managementconsole.soap.axis.sapcontrol.AlertNode()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.sap.managementconsole.soap.axis.sapcontrol.AlertNode
statement code is: AlertNode alertNode = new AlertNode()
statement is: setName(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: alertNode.setName("")
statement is: getName()Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.lang.String
statement code is: String name = alertNode.getName()
test data is: AlertNode alertNode = new AlertNode();
alertNode.setName("");
alertNode.getName();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        AlertNode alertNode = new AlertNode();
        alertNode.setName("Earthquake Warning!");
        alertNode.getName();
    }
}
statement is: AlertNode alertNode = new AlertNode(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: alertNode.setName("Earthquake Warning!"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: alertNode.setName("Earthquake Warning!") target is: alertNode method is: setName(java.lang.String)
source statement: com.sap.managementconsole.soap.axis.sapcontrol.AlertNode()V callee: VariableReference: Statement 0, type com.sap.managementconsole.soap.axis.sapcontrol.AlertNodeindex is: 0
Matched Method is: setName(Ljava/lang/String;)V
statement is: alertNode.getName(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: alertNode.getName() target is: alertNode method is: getName()
source statement: com.sap.managementconsole.soap.axis.sapcontrol.AlertNode()V callee: VariableReference: Statement 0, type com.sap.managementconsole.soap.axis.sapcontrol.AlertNodeindex is: 0
Matched Method is: getName()Ljava/lang/String;
TestCase is: AlertNode alertNode = new AlertNode();
String string = "Earthquake Warning!";
alertNode.setName(string);
alertNode.getName();

statement is: com.sap.managementconsole.soap.axis.sapcontrol.AlertNode()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.sap.managementconsole.soap.axis.sapcontrol.AlertNode
statement code is: AlertNode alertNode = new AlertNode()
statement is: setName(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: alertNode.setName(")\"Z'rZ1|ml ")
statement is: getName()Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.lang.String
statement code is: String name = alertNode.getName()
test data is: AlertNode alertNode = new AlertNode();
alertNode.setName(")\"Z'rZ1|ml ");
alertNode.getName();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        AlertNode alertNode = new AlertNode();
        alertNode.setName("Dangerous Animal Sighting");
        alertNode.getName();
    }
}
statement is: AlertNode alertNode = new AlertNode(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: alertNode.setName("Dangerous Animal Sighting"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: alertNode.setName("Dangerous Animal Sighting") target is: alertNode method is: setName(java.lang.String)
source statement: com.sap.managementconsole.soap.axis.sapcontrol.AlertNode()V callee: VariableReference: Statement 0, type com.sap.managementconsole.soap.axis.sapcontrol.AlertNodeindex is: 0
Matched Method is: setName(Ljava/lang/String;)V
statement is: alertNode.getName(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: alertNode.getName() target is: alertNode method is: getName()
source statement: com.sap.managementconsole.soap.axis.sapcontrol.AlertNode()V callee: VariableReference: Statement 0, type com.sap.managementconsole.soap.axis.sapcontrol.AlertNodeindex is: 0
Matched Method is: getName()Ljava/lang/String;
TestCase is: AlertNode alertNode = new AlertNode();
String string = "Dangerous Animal Sighting";
alertNode.setName(string);
alertNode.getName();

statement is: org.evosuite.testcase.statements.FieldStatement@24167381 type is: class org.evosuite.testcase.statements.FieldStatement return type class com.sap.managementconsole.soap.axis.sapcontrol.STATECOLOR
statement code is: STATECOLOR sTATECOLOR = STATECOLOR.value2
statement is: com.sap.managementconsole.soap.axis.sapcontrol.VISIBLELEVEL(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.sap.managementconsole.soap.axis.sapcontrol.VISIBLELEVEL
statement code is: VISIBLELEVEL vISIBLELEVEL = new VISIBLELEVEL("SAPControl-RED")
statement is: com.sap.managementconsole.soap.axis.sapcontrol.AlertNode(Ljava/lang/String;ILcom/sap/managementconsole/soap/axis/sapcontrol/STATECOLOR;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lcom/sap/managementconsole/soap/axis/sapcontrol/VISIBLELEVEL;Lcom/sap/managementconsole/soap/axis/sapcontrol/STATECOLOR;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.sap.managementconsole.soap.axis.sapcontrol.AlertNode
statement code is: AlertNode alertNode = new AlertNode("%N#%[V&n+E-ABgD-1`I", 0, arg7, "~3tb3v9wrg", "%N#%[V&n+E-ABgD-1`I", "", arg6, arg7, "", "SAPControl-RED", "AlDescription")
statement is: setParent(I)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: alertNode.setParent((-1148))
statement is: getParent()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int parent = alertNode.getParent()
test data is: STATECOLOR sTATECOLOR = STATECOLOR.value2;
VISIBLELEVEL vISIBLELEVEL = new VISIBLELEVEL("SAPControl-RED");
AlertNode alertNode = new AlertNode("%N#%[V&n+E-ABgD-1`I", 0, sTATECOLOR, "~3tb3v9wrg", "%N#%[V&n+E-ABgD-1`I", "", vISIBLELEVEL, sTATECOLOR, "", "SAPControl-RED", "AlDescription");
alertNode.setParent((-1148));
alertNode.getParent();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        STATECOLOR sTATECOLOR = STATECOLOR.value2;
        VISIBLELEVEL vISIBLELEVEL = new VISIBLELEVEL("SAPControl-RED");
        AlertNode alertNode = new AlertNode("~3tb3v9wrg", 0, sTATECOLOR, "~3tb3v9wrg", "%N#%[V&n+E-ABgD-1`I", "", vISIBLELEVEL, sTATECOLOR, "", "SAPControl-RED", "AlDescription");
        alertNode.setParent(1234);
        alertNode.getParent();
    }
}
statement is: STATECOLOR sTATECOLOR = STATECOLOR.value2, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: STATECOLOR.value2 is STATECOLOR
CtField is: public static com.sap.managementconsole.soap.axis.sapcontrol.STATECOLOR com.sap.managementconsole.soap.axis.sapcontrol.STATECOLOR.value2 STATECOLOR value2
statement is: VISIBLELEVEL vISIBLELEVEL = new VISIBLELEVEL("SAPControl-RED"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: AlertNode alertNode = new AlertNode("~3tb3v9wrg", 0, sTATECOLOR, "~3tb3v9wrg", "%N#%[V&n+E-ABgD-1`I", "", vISIBLELEVEL, sTATECOLOR, "", "SAPControl-RED", "AlDescription"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: alertNode.setParent(1234), class spoon.support.reflect.code.CtInvocationImpl
invocation is: alertNode.setParent(1234) target is: alertNode method is: setParent(int)
source statement: com.sap.managementconsole.soap.axis.sapcontrol.AlertNode(Ljava/lang/String;ILcom/sap/managementconsole/soap/axis/sapcontrol/STATECOLOR;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lcom/sap/managementconsole/soap/axis/sapcontrol/VISIBLELEVEL;Lcom/sap/managementconsole/soap/axis/sapcontrol/STATECOLOR;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V callee: VariableReference: Statement 2, type com.sap.managementconsole.soap.axis.sapcontrol.AlertNodeindex is: 11
Matched Method is: setParent(I)V
statement is: alertNode.getParent(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: alertNode.getParent() target is: alertNode method is: getParent()
source statement: com.sap.managementconsole.soap.axis.sapcontrol.AlertNode(Ljava/lang/String;ILcom/sap/managementconsole/soap/axis/sapcontrol/STATECOLOR;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lcom/sap/managementconsole/soap/axis/sapcontrol/VISIBLELEVEL;Lcom/sap/managementconsole/soap/axis/sapcontrol/STATECOLOR;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V callee: VariableReference: Statement 2, type com.sap.managementconsole.soap.axis.sapcontrol.AlertNodeindex is: 11
Matched Method is: getParent()I
TestCase is: STATECOLOR sTATECOLOR = STATECOLOR.value2;
String string = "SAPControl-RED";
VISIBLELEVEL vISIBLELEVEL = new VISIBLELEVEL(string);
String string = "~3tb3v9wrg";
int _int = 0;
String string = "~3tb3v9wrg";
String string = "%N#%[V&n+E-ABgD-1`I";
String string = "";
String string = "";
String string = "SAPControl-RED";
String string = "AlDescription";
AlertNode alertNode = new AlertNode(string, _int, sTATECOLOR, string, string, string, vISIBLELEVEL, sTATECOLOR, string, string, string);
int _int = 1234;
((AlertNode) vISIBLELEVEL).setParent(_int);
((AlertNode) vISIBLELEVEL).getParent();

statement is: org.evosuite.testcase.statements.FieldStatement@241673e7 type is: class org.evosuite.testcase.statements.FieldStatement return type class com.sap.managementconsole.soap.axis.sapcontrol.STATECOLOR
statement code is: STATECOLOR sTATECOLOR = STATECOLOR.value4
statement is: org.evosuite.testcase.statements.FieldStatement@8b140794 type is: class org.evosuite.testcase.statements.FieldStatement return type class com.sap.managementconsole.soap.axis.sapcontrol.VISIBLELEVEL
statement code is: VISIBLELEVEL vISIBLELEVEL = VISIBLELEVEL.value3
statement is: com.sap.managementconsole.soap.axis.sapcontrol.AlertNode(Ljava/lang/String;ILcom/sap/managementconsole/soap/axis/sapcontrol/STATECOLOR;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lcom/sap/managementconsole/soap/axis/sapcontrol/VISIBLELEVEL;Lcom/sap/managementconsole/soap/axis/sapcontrol/STATECOLOR;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.sap.managementconsole.soap.axis.sapcontrol.AlertNode
statement code is: AlertNode alertNode = new AlertNode("SAPControl-RED", 1, arg7, "SAPControl-RED", ")<)xv=`", "}iQ_z;ntV", arg6, arg7, "SAPControl-RED", "SAPControl-YELLOW", "SAPControl-GRAY")
statement is: getParent()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int parent = alertNode.getParent()
test data is: STATECOLOR sTATECOLOR = STATECOLOR.value4;
VISIBLELEVEL vISIBLELEVEL = VISIBLELEVEL.value3;
AlertNode alertNode = new AlertNode("SAPControl-RED", 1, sTATECOLOR, "SAPControl-RED", ")<)xv=`", "}iQ_z;ntV", vISIBLELEVEL, sTATECOLOR, "SAPControl-RED", "SAPControl-YELLOW", "SAPControl-GRAY");
alertNode.getParent();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        STATECOLOR sTATECOLOR = STATECOLOR.value4;
        VISIBLELEVEL vISIBLELEVEL = VISIBLELEVEL.value3;
        AlertNode alertNode = new AlertNode("SAPControl-RED", 1, sTATECOLOR, "SAPControl-RED", ")<)xv=`", "}iQ_z;ntV", vISIBLELEVEL, sTATECOLOR, "SAPControl-RED", "SAPControl-YELLOW", "SAPControl-GRAY");
        alertNode.getParent();
    }
}
statement is: STATECOLOR sTATECOLOR = STATECOLOR.value4, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: STATECOLOR.value4 is STATECOLOR
CtField is: public static com.sap.managementconsole.soap.axis.sapcontrol.STATECOLOR com.sap.managementconsole.soap.axis.sapcontrol.STATECOLOR.value4 STATECOLOR value4
statement is: VISIBLELEVEL vISIBLELEVEL = VISIBLELEVEL.value3, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: VISIBLELEVEL.value3 is VISIBLELEVEL
CtField is: public static com.sap.managementconsole.soap.axis.sapcontrol.STATECOLOR com.sap.managementconsole.soap.axis.sapcontrol.STATECOLOR.value4 STATECOLOR value4
CtField is: public static com.sap.managementconsole.soap.axis.sapcontrol.VISIBLELEVEL com.sap.managementconsole.soap.axis.sapcontrol.VISIBLELEVEL.value3 VISIBLELEVEL value3
statement is: AlertNode alertNode = new AlertNode("SAPControl-RED", 1, sTATECOLOR, "SAPControl-RED", ")<)xv=`", "}iQ_z;ntV", vISIBLELEVEL, sTATECOLOR, "SAPControl-RED", "SAPControl-YELLOW", "SAPControl-GRAY"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: alertNode.getParent(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: alertNode.getParent() target is: alertNode method is: getParent()
source statement: com.sap.managementconsole.soap.axis.sapcontrol.AlertNode(Ljava/lang/String;ILcom/sap/managementconsole/soap/axis/sapcontrol/STATECOLOR;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lcom/sap/managementconsole/soap/axis/sapcontrol/VISIBLELEVEL;Lcom/sap/managementconsole/soap/axis/sapcontrol/STATECOLOR;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V callee: VariableReference: Statement 2, type com.sap.managementconsole.soap.axis.sapcontrol.AlertNodeindex is: 10
Matched Method is: getParent()I
TestCase is: STATECOLOR sTATECOLOR = STATECOLOR.value4;
VISIBLELEVEL vISIBLELEVEL = VISIBLELEVEL.value3;
String string = "SAPControl-RED";
int _int = 1;
String string = "SAPControl-RED";
String string = ")<)xv=`";
String string = "}iQ_z;ntV";
String string = "SAPControl-RED";
String string = "SAPControl-YELLOW";
String string = "SAPControl-GRAY";
AlertNode alertNode = new AlertNode(string, _int, sTATECOLOR, string, string, string, vISIBLELEVEL, sTATECOLOR, string, string, string);
((AlertNode) string).getParent();

statement is: com.sap.managementconsole.soap.axis.sapcontrol.AlertNode()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.sap.managementconsole.soap.axis.sapcontrol.AlertNode
statement code is: AlertNode alertNode = new AlertNode()
statement is: setTid(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: alertNode.setTid("")
statement is: getTid()Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.lang.String
statement code is: String tid = alertNode.getTid()
test data is: AlertNode alertNode = new AlertNode();
alertNode.setTid("");
alertNode.getTid();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        AlertNode alertNode = new AlertNode();
        alertNode.setTid("A1B2C3D4E5F6G7H8I9J0K");
        alertNode.getTid();
    }
}
statement is: AlertNode alertNode = new AlertNode(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: alertNode.setTid("A1B2C3D4E5F6G7H8I9J0K"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: alertNode.setTid("A1B2C3D4E5F6G7H8I9J0K") target is: alertNode method is: setTid(java.lang.String)
source statement: com.sap.managementconsole.soap.axis.sapcontrol.AlertNode()V callee: VariableReference: Statement 0, type com.sap.managementconsole.soap.axis.sapcontrol.AlertNodeindex is: 0
Matched Method is: setTid(Ljava/lang/String;)V
statement is: alertNode.getTid(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: alertNode.getTid() target is: alertNode method is: getTid()
source statement: com.sap.managementconsole.soap.axis.sapcontrol.AlertNode()V callee: VariableReference: Statement 0, type com.sap.managementconsole.soap.axis.sapcontrol.AlertNodeindex is: 0
Matched Method is: getTid()Ljava/lang/String;
TestCase is: AlertNode alertNode = new AlertNode();
String string = "A1B2C3D4E5F6G7H8I9J0K";
alertNode.setTid(string);
alertNode.getTid();

statement is: org.evosuite.testcase.statements.FieldStatement@241673b4 type is: class org.evosuite.testcase.statements.FieldStatement return type class com.sap.managementconsole.soap.axis.sapcontrol.STATECOLOR
statement code is: STATECOLOR sTATECOLOR = STATECOLOR.value3
statement is: org.evosuite.testcase.statements.FieldStatement@8b1407c7 type is: class org.evosuite.testcase.statements.FieldStatement return type class com.sap.managementconsole.soap.axis.sapcontrol.VISIBLELEVEL
statement code is: VISIBLELEVEL vISIBLELEVEL = VISIBLELEVEL.value4
statement is: com.sap.managementconsole.soap.axis.sapcontrol.AlertNode(Ljava/lang/String;ILcom/sap/managementconsole/soap/axis/sapcontrol/STATECOLOR;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lcom/sap/managementconsole/soap/axis/sapcontrol/VISIBLELEVEL;Lcom/sap/managementconsole/soap/axis/sapcontrol/STATECOLOR;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.sap.managementconsole.soap.axis.sapcontrol.AlertNode
statement code is: AlertNode alertNode = new AlertNode("", (-1904), arg7, "SAPControl-GREEN", (String) null, "xH`;V61Szi", arg6, arg7, "", " does not have a constructor which takes one string parameter", "SAPControl-UNKNOWN")
statement is: getTid()Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.lang.String
statement code is: String tid = alertNode.getTid()
test data is: STATECOLOR sTATECOLOR = STATECOLOR.value3;
VISIBLELEVEL vISIBLELEVEL = VISIBLELEVEL.value4;
AlertNode alertNode = new AlertNode("", (-1904), sTATECOLOR, "SAPControl-GREEN", (String) null, "xH`;V61Szi", vISIBLELEVEL, sTATECOLOR, "", " does not have a constructor which takes one string parameter", "SAPControl-UNKNOWN");
alertNode.getTid();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        STATECOLOR sTATECOLOR = STATECOLOR.value3;
        VISIBLELEVEL vISIBLELEVEL = VISIBLELEVEL.value4;
        AlertNode alertNode = new AlertNode("", -2000, sTATECOLOR, "SAPControl-GREEN", "randomString", "randomString", vISIBLELEVEL, sTATECOLOR, "", " does not have a constructor which takes one string parameter", "SAPControl-UNKNOWN");
        alertNode.getTid();
    }
}
statement is: STATECOLOR sTATECOLOR = STATECOLOR.value3, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: STATECOLOR.value3 is STATECOLOR
CtField is: public static com.sap.managementconsole.soap.axis.sapcontrol.STATECOLOR com.sap.managementconsole.soap.axis.sapcontrol.STATECOLOR.value3 STATECOLOR value3
statement is: VISIBLELEVEL vISIBLELEVEL = VISIBLELEVEL.value4, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: VISIBLELEVEL.value4 is VISIBLELEVEL
CtField is: public static com.sap.managementconsole.soap.axis.sapcontrol.STATECOLOR com.sap.managementconsole.soap.axis.sapcontrol.STATECOLOR.value3 STATECOLOR value3
CtField is: public static com.sap.managementconsole.soap.axis.sapcontrol.VISIBLELEVEL com.sap.managementconsole.soap.axis.sapcontrol.VISIBLELEVEL.value4 VISIBLELEVEL value4
statement is: AlertNode alertNode = new AlertNode("", -2000, sTATECOLOR, "SAPControl-GREEN", "randomString", "randomString", vISIBLELEVEL, sTATECOLOR, "", " does not have a constructor which takes one string parameter", "SAPControl-UNKNOWN"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: alertNode.getTid(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: alertNode.getTid() target is: alertNode method is: getTid()
source statement: com.sap.managementconsole.soap.axis.sapcontrol.AlertNode(Ljava/lang/String;ILcom/sap/managementconsole/soap/axis/sapcontrol/STATECOLOR;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lcom/sap/managementconsole/soap/axis/sapcontrol/VISIBLELEVEL;Lcom/sap/managementconsole/soap/axis/sapcontrol/STATECOLOR;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V callee: VariableReference: Statement 2, type com.sap.managementconsole.soap.axis.sapcontrol.AlertNodeindex is: 9
Matched Method is: getTid()Ljava/lang/String;
TestCase is: STATECOLOR sTATECOLOR = STATECOLOR.value3;
VISIBLELEVEL vISIBLELEVEL = VISIBLELEVEL.value4;
String string = "";
String string = "SAPControl-GREEN";
String string = "randomString";
String string = "randomString";
String string = "";
String string = " does not have a constructor which takes one string parameter";
String string = "SAPControl-UNKNOWN";
AlertNode alertNode = new AlertNode(string, (int) sTATECOLOR, (STATECOLOR) string, string, string, (String) vISIBLELEVEL, (VISIBLELEVEL) sTATECOLOR, (STATECOLOR) string, string, string, "SAPControl-UNKNOWN");
((AlertNode) string).getTid();

statement is: com.sap.managementconsole.soap.axis.sapcontrol.AlertNode()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.sap.managementconsole.soap.axis.sapcontrol.AlertNode
statement code is: AlertNode alertNode = new AlertNode()
statement is: setTime(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: alertNode.setTime("g'og+x+PTqzU]ou")
statement is: getTime()Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.lang.String
statement code is: String time = alertNode.getTime()
test data is: AlertNode alertNode = new AlertNode();
alertNode.setTime("g'og+x+PTqzU]ou");
alertNode.getTime();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        AlertNode alertNode = new AlertNode();
        alertNode.setTime("2023-02-28T14:59:59+05:30");
        alertNode.getTime();
    }
}
statement is: AlertNode alertNode = new AlertNode(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: alertNode.setTime("2023-02-28T14:59:59+05:30"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: alertNode.setTime("2023-02-28T14:59:59+05:30") target is: alertNode method is: setTime(java.lang.String)
source statement: com.sap.managementconsole.soap.axis.sapcontrol.AlertNode()V callee: VariableReference: Statement 0, type com.sap.managementconsole.soap.axis.sapcontrol.AlertNodeindex is: 0
Matched Method is: setTime(Ljava/lang/String;)V
statement is: alertNode.getTime(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: alertNode.getTime() target is: alertNode method is: getTime()
source statement: com.sap.managementconsole.soap.axis.sapcontrol.AlertNode()V callee: VariableReference: Statement 0, type com.sap.managementconsole.soap.axis.sapcontrol.AlertNodeindex is: 0
Matched Method is: getTime()Ljava/lang/String;
TestCase is: AlertNode alertNode = new AlertNode();
String string = "2023-02-28T14:59:59+05:30";
alertNode.setTime(string);
alertNode.getTime();

statement is: com.sap.managementconsole.soap.axis.sapcontrol.AlertNode()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.sap.managementconsole.soap.axis.sapcontrol.AlertNode
statement code is: AlertNode alertNode = new AlertNode()
statement is: getTime()Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.lang.String
statement code is: String time = alertNode.getTime()
test data is: AlertNode alertNode = new AlertNode();
alertNode.getTime();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        AlertNode alertNode = new AlertNode();
        alertNode.setTime(LocalDateTime.of(2022, 3, 21, 14, 30));
    }
}
statement is: AlertNode alertNode = new AlertNode(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: alertNode.setTime(LocalDateTime.of(2022, 3, 21, 14, 30)), class spoon.support.reflect.code.CtInvocationImpl
invocation is: alertNode.setTime(LocalDateTime.of(2022, 3, 21, 14, 30)) target is: alertNode method is: setTime()
TestCase is: AlertNode alertNode = new AlertNode();

statement is: org.evosuite.testcase.statements.FieldStatement@241673e7 type is: class org.evosuite.testcase.statements.FieldStatement return type class com.sap.managementconsole.soap.axis.sapcontrol.STATECOLOR
statement code is: STATECOLOR sTATECOLOR = STATECOLOR.value4
statement is: org.evosuite.testcase.statements.FieldStatement@8b140794 type is: class org.evosuite.testcase.statements.FieldStatement return type class com.sap.managementconsole.soap.axis.sapcontrol.VISIBLELEVEL
statement code is: VISIBLELEVEL vISIBLELEVEL = VISIBLELEVEL.value3
statement is: com.sap.managementconsole.soap.axis.sapcontrol.AlertNode(Ljava/lang/String;ILcom/sap/managementconsole/soap/axis/sapcontrol/STATECOLOR;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lcom/sap/managementconsole/soap/axis/sapcontrol/VISIBLELEVEL;Lcom/sap/managementconsole/soap/axis/sapcontrol/STATECOLOR;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.sap.managementconsole.soap.axis.sapcontrol.AlertNode
statement code is: AlertNode alertNode = new AlertNode("SAPControl-RED", 1, arg7, "SAPControl-RED", ")<)xv=`", "}iQ_z;ntV", arg6, arg7, "SAPControl-RED", "SAPControl-YELLOW", "SAPControl-GRAY")
statement is: getVisibleLevel()Lcom/sap/managementconsole/soap/axis/sapcontrol/VISIBLELEVEL; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.sap.managementconsole.soap.axis.sapcontrol.VISIBLELEVEL
statement code is: VISIBLELEVEL visibleLevel = alertNode.getVisibleLevel()
test data is: STATECOLOR sTATECOLOR = STATECOLOR.value4;
VISIBLELEVEL vISIBLELEVEL = VISIBLELEVEL.value3;
AlertNode alertNode = new AlertNode("SAPControl-RED", 1, sTATECOLOR, "SAPControl-RED", ")<)xv=`", "}iQ_z;ntV", vISIBLELEVEL, sTATECOLOR, "SAPControl-RED", "SAPControl-YELLOW", "SAPControl-GRAY");
alertNode.getVisibleLevel();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        STATECOLOR sTATECOLOR = STATECOLOR.RED;
        VISIBLELEVEL vISIBLELEVEL = VISIBLELEVEL.value3;
        AlertNode alertNode = new AlertNode("SAPControl-RED", 1, sTATECOLOR, "SAPControl-RED", ")<)xv=`", "}iQ_z;ntV", vISIBLELEVEL, sTATECOLOR, "SAPControl-RED", "SAPControl-YELLOW", "SAPControl-GRAY");
        alertNode.getVisibleLevel();
    }
}
statement is: STATECOLOR sTATECOLOR = STATECOLOR.RED, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: STATECOLOR.RED is STATECOLOR
CtField is: public static com.sap.managementconsole.soap.axis.sapcontrol.STATECOLOR com.sap.managementconsole.soap.axis.sapcontrol.STATECOLOR.value4 STATECOLOR value4
statement is: VISIBLELEVEL vISIBLELEVEL = VISIBLELEVEL.value3, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: VISIBLELEVEL.value3 is VISIBLELEVEL
CtField is: public static com.sap.managementconsole.soap.axis.sapcontrol.STATECOLOR com.sap.managementconsole.soap.axis.sapcontrol.STATECOLOR.value4 STATECOLOR value4
CtField is: public static com.sap.managementconsole.soap.axis.sapcontrol.VISIBLELEVEL com.sap.managementconsole.soap.axis.sapcontrol.VISIBLELEVEL.value3 VISIBLELEVEL value3
statement is: AlertNode alertNode = new AlertNode("SAPControl-RED", 1, sTATECOLOR, "SAPControl-RED", ")<)xv=`", "}iQ_z;ntV", vISIBLELEVEL, sTATECOLOR, "SAPControl-RED", "SAPControl-YELLOW", "SAPControl-GRAY"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: alertNode.getVisibleLevel(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: alertNode.getVisibleLevel() target is: alertNode method is: getVisibleLevel()
source statement: com.sap.managementconsole.soap.axis.sapcontrol.AlertNode(Ljava/lang/String;ILcom/sap/managementconsole/soap/axis/sapcontrol/STATECOLOR;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lcom/sap/managementconsole/soap/axis/sapcontrol/VISIBLELEVEL;Lcom/sap/managementconsole/soap/axis/sapcontrol/STATECOLOR;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V callee: VariableReference: Statement 2, type com.sap.managementconsole.soap.axis.sapcontrol.AlertNodeindex is: 10
Matched Method is: getVisibleLevel()Lcom/sap/managementconsole/soap/axis/sapcontrol/VISIBLELEVEL;
TestCase is: STATECOLOR sTATECOLOR = STATECOLOR.value4;
VISIBLELEVEL vISIBLELEVEL = VISIBLELEVEL.value3;
String string = "SAPControl-RED";
int _int = 1;
String string = "SAPControl-RED";
String string = ")<)xv=`";
String string = "}iQ_z;ntV";
String string = "SAPControl-RED";
String string = "SAPControl-YELLOW";
String string = "SAPControl-GRAY";
AlertNode alertNode = new AlertNode(string, _int, sTATECOLOR, string, string, string, vISIBLELEVEL, sTATECOLOR, string, string, string);
((AlertNode) string).getVisibleLevel();

* test suite isTestSuite: 130
Test 0: 
AlertNode alertNode = new AlertNode();
alertNode.setAlDescription("A]HOods@aKxL7k=i");
AlertNode alertNode = new AlertNode();
alertNode.setAlDescription("A]HOods@aKxL7k=i");
alertNode.equals(alertNode);
Test 1: 
Class<AlertNode> class = AlertNode.class;
QName qName = new QName("SAPControl-GRAY", "<okUE&:u1>on", ",9D[P");
AlertNode.getDeserializer("SAPControl-RED", class, qName);
Test 2: 
AlertNode alertNode = new AlertNode();
STATECOLOR sTATECOLOR = STATECOLOR.value4;
alertNode.setHighAlertValue(sTATECOLOR);
AlertNode alertNode = new AlertNode();
alertNode.equals(alertNode);
Test 3: 
AlertNode alertNode = new AlertNode();
STATECOLOR sTATECOLOR = STATECOLOR.value4;
alertNode.setActualValue(sTATECOLOR);
AlertNode alertNode = new AlertNode();
alertNode.equals(alertNode);
Test 4: 
AlertNode alertNode = new AlertNode();
alertNode.setAnalyseTool("SAPControl-DEVELOPER");
AlertNode alertNode = new AlertNode();
alertNode.equals(alertNode);
Test 5: 
VISIBLELEVEL vISIBLELEVEL = VISIBLELEVEL.value2;
AlertNode alertNode = new AlertNode("I{[+GuCB", (-1647606196), (STATECOLOR) null, "I{[+GuCB", "I{[+GuCB", "I{[+GuCB", vISIBLELEVEL, (STATECOLOR) null, "SAPControl-EXPERT", "SAPControl-DEVELOPER", "SAPControl-EXPERT");
AlertNode alertNode = new AlertNode("I{[+GuCB", (-1647606196), (STATECOLOR) null, "SAPControl-DEVELOPER", "I{[+GuCB", "SAPControl-UNKNOWN", vISIBLELEVEL, (STATECOLOR) null, "~[htdBk[SlOsLw![g.", "~[htdBk[SlOsLw![g.", "~[htdBk[SlOsLw![g.");
alertNode.equals(alertNode);
Test 6: 
AlertNode alertNode = new AlertNode();
alertNode.setParent(1552);
AlertNode alertNode = new AlertNode();
alertNode.equals(alertNode);
Test 7: 
AlertNode alertNode = new AlertNode();
VISIBLELEVEL vISIBLELEVEL = VISIBLELEVEL.value2;
alertNode.setVisibleLevel(vISIBLELEVEL);
AlertNode alertNode = new AlertNode();
alertNode.equals(alertNode);
Test 8: 
AlertNode alertNode = new AlertNode();
alertNode.setAlTime("org.apache.axis.types.NegativeInteger");
AlertNode alertNode = new AlertNode();
alertNode.setAlTime("org.apache.axis.types.NegativeInteger");
alertNode.equals(alertNode);
Test 9: 
Class<Object> class = Object.class;
QName qName = new QName("");
AlertNode.getSerializer((String) null, class, qName);
Test 10: 
AlertNode.getTypeDesc();
Test 11: 
AlertNode alertNode = new AlertNode();
alertNode.setName("k(iK2+");
AlertNode alertNode = new AlertNode();
alertNode.equals(alertNode);
Test 12: 
AlertNode alertNode = new AlertNode();
alertNode.equals((Object) null);
Test 13: 
AlertNode alertNode = new AlertNode();
alertNode.equals(alertNode);
Test 14: 
AlertNode alertNode = new AlertNode();
alertNode.setName("mV:/.GYDy]mjC/");
AlertNode alertNode = new AlertNode();
alertNode.equals(alertNode);
Test 15: 
AlertNode alertNode = new AlertNode();
AlertNode alertNode = new AlertNode();
STATECOLOR sTATECOLOR = STATECOLOR.value3;
alertNode.setActualValue(sTATECOLOR);
alertNode.equals(alertNode);
Test 16: 
AlertNode alertNode = new AlertNode();
STATECOLOR sTATECOLOR = STATECOLOR.value4;
alertNode.setActualValue(sTATECOLOR);
AlertNode alertNode = new AlertNode();
alertNode.setActualValue(sTATECOLOR);
alertNode.equals(alertNode);
Test 17: 
AlertNode alertNode = new AlertNode();
alertNode.setDescription("type");
AlertNode alertNode = new AlertNode();
alertNode.equals(alertNode);
Test 18: 
AlertNode alertNode = new AlertNode();
alertNode.setDescription("or#?+OW");
AlertNode alertNode = new AlertNode();
alertNode.setDescription("or#?+OW");
alertNode.equals(alertNode);
Test 19: 
AlertNode alertNode = new AlertNode();
AlertNode alertNode = new AlertNode();
alertNode.setTime("m2JJul");
alertNode.equals(alertNode);
Test 20: 
AlertNode alertNode = new AlertNode();
AlertNode alertNode = new AlertNode();
alertNode.setTime("~7PTsjr/31");
alertNode.equals(alertNode);
Test 21: 
AlertNode alertNode = new AlertNode();
AlertNode alertNode = new AlertNode();
alertNode.setTime("m2JJul");
alertNode.setTime("m2JJul");
alertNode.equals(alertNode);
Test 22: 
AlertNode alertNode = new AlertNode();
AlertNode alertNode = new AlertNode();
alertNode.setAnalyseTool("");
alertNode.equals(alertNode);
Test 23: 
AlertNode alertNode = new AlertNode();
AlertNode alertNode = new AlertNode();
alertNode.setAnalyseTool("");
alertNode.setAnalyseTool("");
alertNode.equals(alertNode);
Test 24: 
AlertNode alertNode = new AlertNode();
VISIBLELEVEL vISIBLELEVEL = VISIBLELEVEL.value3;
alertNode.setVisibleLevel(vISIBLELEVEL);
AlertNode alertNode = new AlertNode();
alertNode.equals(alertNode);
Test 25: 
AlertNode alertNode = new AlertNode();
VISIBLELEVEL vISIBLELEVEL = VISIBLELEVEL.value4;
alertNode.setVisibleLevel(vISIBLELEVEL);
AlertNode alertNode = new AlertNode();
alertNode.setVisibleLevel(vISIBLELEVEL);
alertNode.equals(alertNode);
Test 26: 
AlertNode alertNode = new AlertNode();
AlertNode alertNode = new AlertNode();
STATECOLOR sTATECOLOR = STATECOLOR.value3;
alertNode.setHighAlertValue(sTATECOLOR);
alertNode.equals(alertNode);
Test 27: 
AlertNode alertNode = new AlertNode();
STATECOLOR sTATECOLOR = STATECOLOR.value3;
alertNode.setHighAlertValue(sTATECOLOR);
AlertNode alertNode = new AlertNode();
alertNode.setHighAlertValue(sTATECOLOR);
alertNode.equals(alertNode);
Test 28: 
AlertNode alertNode = new AlertNode();
AlertNode alertNode = new AlertNode();
alertNode.setAlDescription("U{");
alertNode.equals(alertNode);
Test 29: 
AlertNode alertNode = new AlertNode();
AlertNode alertNode = new AlertNode();
alertNode.setAlDescription("SAPControl-RED");
alertNode.equals(alertNode);
Test 30: 
AlertNode alertNode = new AlertNode();
AlertNode alertNode = new AlertNode();
alertNode.setAlTime("org.apache.axis.types.NegativeInteger");
alertNode.equals(alertNode);
Test 31: 
AlertNode alertNode = new AlertNode();
AlertNode alertNode = new AlertNode();
alertNode.setAlTime("h]C=we#4*Y9mC6");
alertNode.equals(alertNode);
Test 32: 
AlertNode alertNode = new AlertNode();
AlertNode alertNode = new AlertNode();
alertNode.setTid("");
alertNode.equals(alertNode);
Test 33: 
AlertNode alertNode = new AlertNode();
AlertNode alertNode = new AlertNode();
alertNode.setTid("multiRef");
alertNode.equals(alertNode);
Test 34: 
AlertNode alertNode = new AlertNode();
AlertNode alertNode = new AlertNode();
alertNode.setTid("");
alertNode.setTid("");
alertNode.equals(alertNode);
Test 35: 
AlertNode alertNode = new AlertNode();
alertNode.setTime("");
alertNode.hashCode();
Test 36: 
AlertNode alertNode = new AlertNode();
alertNode.setAnalyseTool("");
alertNode.hashCode();
Test 37: 
STATECOLOR sTATECOLOR = STATECOLOR.value3;
VISIBLELEVEL vISIBLELEVEL = VISIBLELEVEL.value4;
AlertNode alertNode = new AlertNode("", (-1904), sTATECOLOR, "SAPControl-GREEN", (String) null, "xH`;V61Szi", vISIBLELEVEL, sTATECOLOR, "", " does not have a constructor which takes one string parameter", "SAPControl-UNKNOWN");
alertNode.hashCode();
Test 38: 
AlertNode alertNode = new AlertNode();
alertNode.getDescription();
Test 39: 
AlertNode alertNode = new AlertNode();
alertNode.getParent();
Test 40: 
AlertNode alertNode = new AlertNode();
alertNode.getHighAlertValue();
Test 41: 
AlertNode alertNode = new AlertNode();
alertNode.getVisibleLevel();
Test 42: 
AlertNode alertNode = new AlertNode();
alertNode.getTid();
Test 43: 
AlertNode alertNode = new AlertNode();
alertNode.getName();
Test 44: 
STATECOLOR sTATECOLOR = STATECOLOR.value1;
VISIBLELEVEL vISIBLELEVEL = VISIBLELEVEL.value3;
AlertNode alertNode = new AlertNode("`J.}{\"", (-1), sTATECOLOR, "HGYhtO]{z?oR", "T*&0Vwowc-dW6]", "alDescription", vISIBLELEVEL, sTATECOLOR, "", "F@YLZz_B#Q\"Fyp", "ptR");
alertNode.getAlDescription();
Test 45: 
AlertNode alertNode = new AlertNode();
alertNode.getActualValue();
Test 46: 
AlertNode alertNode = new AlertNode();
alertNode.getAlTime();
Test 47: 
STATECOLOR sTATECOLOR = STATECOLOR.value4;
VISIBLELEVEL vISIBLELEVEL = new VISIBLELEVEL("SAPControl-YELLOW");
AlertNode alertNode = new AlertNode("", (-2198), sTATECOLOR, "Mk#AdT.%@n", "", "SAPControl-RED", vISIBLELEVEL, sTATECOLOR, "SAPControl-DEVELOPER", "SAPControl-GREEN", "9>e;_3n-'Q2");
alertNode.getTime();
Test 48: 
STATECOLOR sTATECOLOR = STATECOLOR.value4;
VISIBLELEVEL fromString = VISIBLELEVEL.fromString("SAPControl-YELLOW");
AlertNode alertNode = new AlertNode("zg^6!'16qMs]`", (-3668), sTATECOLOR, "SAPControl-YELLOW", "SAPControl-YELLOW", "SAPControl-GRAY", fromString, sTATECOLOR, "SAPControl-UNKNOWN", "SAPControl-DEVELOPER", "SAPControl-YELLOW");
alertNode.getAnalyseTool();
Test 49: 
AlertNode alertNode = new AlertNode();
STATECOLOR sTATECOLOR = STATECOLOR.value2;
alertNode.setActualValue(sTATECOLOR);
alertNode.getActualValue();
Test 50: 
AlertNode alertNode = new AlertNode();
alertNode.setAlDescription("g'og+x+PTqzU]ou");
alertNode.getAlDescription();
Test 51: 
AlertNode alertNode = new AlertNode();
alertNode.getAlDescription();
Test 52: 
AlertNode alertNode = new AlertNode();
alertNode.setAlTime("");
alertNode.getAlTime();
Test 53: 
AlertNode alertNode = new AlertNode();
alertNode.setAlTime("actualValue");
alertNode.getAlTime();
Test 54: 
AlertNode alertNode = new AlertNode();
alertNode.setAnalyseTool("");
alertNode.getAnalyseTool();
Test 55: 
AlertNode alertNode = new AlertNode();
alertNode.getAnalyseTool();
Test 56: 
AlertNode alertNode = new AlertNode();
alertNode.setDescription("");
alertNode.getDescription();
Test 57: 
STATECOLOR sTATECOLOR = STATECOLOR.value3;
VISIBLELEVEL vISIBLELEVEL = new VISIBLELEVEL("SAPControl-RED");
AlertNode alertNode = new AlertNode((String) null, (-1314), sTATECOLOR, "SAPControl-GRAY", "SAPControl-RED", "", vISIBLELEVEL, sTATECOLOR, "0Eqso92'", "0Eqso92'", "SAPControl-YELLOW");
alertNode.getDescription();
Test 58: 
STATECOLOR sTATECOLOR = STATECOLOR.value1;
VISIBLELEVEL fromString = VISIBLELEVEL.fromString("");
AlertNode alertNode = new AlertNode("", 10000, sTATECOLOR, "", "6drB:$ )nFm]p", "o46", fromString, sTATECOLOR, "element", "o46", "");
alertNode.getHighAlertValue();
Test 59: 
AlertNode alertNode = new AlertNode();
alertNode.setName("");
alertNode.getName();
Test 60: 
AlertNode alertNode = new AlertNode();
alertNode.setName(")\"Z'rZ1|ml ");
alertNode.getName();
Test 61: 
STATECOLOR sTATECOLOR = STATECOLOR.value2;
VISIBLELEVEL vISIBLELEVEL = new VISIBLELEVEL("SAPControl-RED");
AlertNode alertNode = new AlertNode("%N#%[V&n+E-ABgD-1`I", 0, sTATECOLOR, "~3tb3v9wrg", "%N#%[V&n+E-ABgD-1`I", "", vISIBLELEVEL, sTATECOLOR, "", "SAPControl-RED", "AlDescription");
alertNode.setParent((-1148));
alertNode.getParent();
Test 62: 
STATECOLOR sTATECOLOR = STATECOLOR.value4;
VISIBLELEVEL vISIBLELEVEL = VISIBLELEVEL.value3;
AlertNode alertNode = new AlertNode("SAPControl-RED", 1, sTATECOLOR, "SAPControl-RED", ")<)xv=`", "}iQ_z;ntV", vISIBLELEVEL, sTATECOLOR, "SAPControl-RED", "SAPControl-YELLOW", "SAPControl-GRAY");
alertNode.getParent();
Test 63: 
AlertNode alertNode = new AlertNode();
alertNode.setTid("");
alertNode.getTid();
Test 64: 
STATECOLOR sTATECOLOR = STATECOLOR.value3;
VISIBLELEVEL vISIBLELEVEL = VISIBLELEVEL.value4;
AlertNode alertNode = new AlertNode("", (-1904), sTATECOLOR, "SAPControl-GREEN", (String) null, "xH`;V61Szi", vISIBLELEVEL, sTATECOLOR, "", " does not have a constructor which takes one string parameter", "SAPControl-UNKNOWN");
alertNode.getTid();
Test 65: 
AlertNode alertNode = new AlertNode();
alertNode.setTime("g'og+x+PTqzU]ou");
alertNode.getTime();
Test 66: 
AlertNode alertNode = new AlertNode();
alertNode.getTime();
Test 67: 
STATECOLOR sTATECOLOR = STATECOLOR.value4;
VISIBLELEVEL vISIBLELEVEL = VISIBLELEVEL.value3;
AlertNode alertNode = new AlertNode("SAPControl-RED", 1, sTATECOLOR, "SAPControl-RED", ")<)xv=`", "}iQ_z;ntV", vISIBLELEVEL, sTATECOLOR, "SAPControl-RED", "SAPControl-YELLOW", "SAPControl-GRAY");
alertNode.getVisibleLevel();
Test 68: 
AlertNode alertNode = new AlertNode();
alertNode.setAlDescription("AHOods@aKxL7k=i");
AlertNode alertNode = new AlertNode();
alertNode.setAlDescription("AHOods@aKxL7k=i");

Test 69: 
QName qName = new QName("SAPControl-GRAY", "<okUE&:u1>on", ",9D[P");
AlertNode.getDeserializer("SAPControl-RED", (Class) qName, (QName) null);

Test 70: 
AlertNode alertNode = new AlertNode();
alertNode.setActualValue((STATECOLOR) null);

Test 71: 
AlertNode alertNode = new AlertNode();
alertNode.setAnalyseTool("SAPControl-DEVELOPER");
AlertNode alertNode = new AlertNode();

Test 72: 
VISIBLELEVEL vISIBLELEVEL = VISIBLELEVEL.value2;
String string = "I{[+GuCB";
AlertNode alertNode = new AlertNode("I{[+GuCB", (int) "I{[+GuCB", (STATECOLOR) "I{[+GuCB", "I{[+GuCB", (String) vISIBLELEVEL, "SAPControl-EXPERT", (VISIBLELEVEL) "SAPControl-DEVELOPER", (STATECOLOR) "SAPControl-EXPERT", "SAPControl-EXPERT", "SAPControl-DEVELOPER", "SAPControl-EXPERT");
String string = "I{[+GuCB";
String string = "SAPControl-DEVELOPER";
String string = "I{[+GuCB";
String string = "SAPControl-UNKNOWN";
String string = "~[htdBk[SlOsLw![g.";
String string = "~[htdBk[SlOsLw![g.";
String string = "~[htdBk[SlOsLw![g.";
AlertNode alertNode = new AlertNode(string, (int) string, (STATECOLOR) string, string, (String) vISIBLELEVEL, string, (VISIBLELEVEL) string, (STATECOLOR) string, "SAPControl-EXPERT", "SAPControl-DEVELOPER", "SAPControl-EXPERT");
string.equals(alertNode);

Test 73: 
AlertNode alertNode = new AlertNode();
alertNode.setVisibleLevel((VISIBLELEVEL) null);
AlertNode alertNode = new AlertNode();
alertNode.setVisibleLevel((VISIBLELEVEL) null);
AlertNode alertNode = new AlertNode();
alertNode.setVisibleLevel((VISIBLELEVEL) null);

Test 74: 
AlertNode alertNode = new AlertNode();
alertNode.setAlTime("-100");
AlertNode alertNode = new AlertNode();
alertNode.setAlTime("-50");

Test 75: 
AlertNode.getSerializer((String) null, (Class) null, (QName) null);

Test 76: 
AlertNode alertNode = new AlertNode();
alertNode.setName("High");
AlertNode alertNode = new AlertNode();

Test 77: 
AlertNode alertNode = new AlertNode();
alertNode.equals("This is a string value");

Test 78: 
AlertNode alertNode = new AlertNode();
alertNode.setName("Severe Weather Alert");
AlertNode alertNode = new AlertNode();
alertNode.equals(alertNode);

Test 79: 
AlertNode alertNode = new AlertNode();
alertNode.equals(alertNode);

Test 80: 
AlertNode alertNode = new AlertNode();
STATECOLOR sTATECOLOR = STATECOLOR.value4;
alertNode.setActualValue(sTATECOLOR);
AlertNode alertNode = new AlertNode();
alertNode.setActualValue((STATECOLOR) null);
alertNode.equals(alertNode);

Test 81: 
AlertNode alertNode = new AlertNode();
alertNode.setDescription("Severe Weather Warning");
AlertNode alertNode = new AlertNode();
alertNode.setDescription("Strong Winds");

Test 82: 
AlertNode alertNode = new AlertNode();
alertNode.setDescription("Insufficient Funds");
AlertNode alertNode = new AlertNode();
alertNode.setDescription("Insufficient Funds");
alertNode.equals(alertNode);

Test 83: 
AlertNode alertNode = new AlertNode();
alertNode.setTime("July 2nd, Monday");
AlertNode alertNode = new AlertNode();
alertNode.setTime("July 3rd, Tuesday");

Test 84: 
AlertNode alertNode = new AlertNode();
AlertNode alertNode = new AlertNode();

Test 85: 
AlertNode alertNode = new AlertNode();
alertNode.setTime("2023-06-18 10:45:00");
alertNode.setTime("2023-06-18 10:45:00");
alertNode.equals(alertNode);

Test 86: 
AlertNode alertNode = new AlertNode();
alertNode.equals(alertNode);
AlertNode alertNode = new AlertNode();
alertNode.equals(alertNode);

Test 87: 
AlertNode alertNode = new AlertNode();
AlertNode alertNode = new AlertNode();
alertNode.setAnalyseTool("tool1");
alertNode.setAnalyseTool("tool2");
alertNode.equals(alertNode);

Test 88: 
AlertNode alertNode = new AlertNode();
alertNode.setVisibleLevel((VISIBLELEVEL) "value3");
AlertNode alertNode = new AlertNode();

Test 89: 
AlertNode alertNode = new AlertNode();
VISIBLELEVEL vISIBLELEVEL = VISIBLELEVEL.value4;
alertNode.setVisibleLevel(vISIBLELEVEL);

Test 90: 
AlertNode alertNode = new AlertNode();
AlertNode alertNode = new AlertNode();

Test 91: 
AlertNode alertNode = new AlertNode();
alertNode.setHighAlertValue((STATECOLOR) "Red");
AlertNode alertNode = new AlertNode();
String string = "Orange";
alertNode.setHighAlertValue((STATECOLOR) string);

Test 92: 
AlertNode alertNode = new AlertNode();
AlertNode alertNode = new AlertNode();

Test 93: 
AlertNode alertNode = new AlertNode();
AlertNode alertNode = new AlertNode();

Test 94: 
AlertNode alertNode = new AlertNode();
AlertNode alertNode = new AlertNode();
AlertNode alertNode = new AlertNode();

Test 95: 
AlertNode alertNode = new AlertNode();
AlertNode alertNode = new AlertNode();

Test 96: 
AlertNode alertNode = new AlertNode();
AlertNode alertNode = new AlertNode();

Test 97: 
AlertNode alertNode = new AlertNode();
alertNode.setTid("1234567890");
alertNode.setTid("abcdefghijklmnopqrstuvwxyz");

Test 98: 
AlertNode alertNode = new AlertNode();
alertNode.setTime("2024-02-29T15:03:26+05:30");
alertNode.hashCode();

Test 99: 
AlertNode alertNode = new AlertNode();
alertNode.hashCode();

Test 100: 
STATECOLOR sTATECOLOR = STATECOLOR.value3;
VISIBLELEVEL vISIBLELEVEL = VISIBLELEVEL.value4;
String string = "";
AlertNode alertNode = new AlertNode("", (int) sTATECOLOR, (STATECOLOR) "SAPControl-GREEN", "xH`;V61Szi", (String) vISIBLELEVEL, (String) sTATECOLOR, (VISIBLELEVEL) "", (STATECOLOR) " does not have a constructor which takes one string parameter", "SAPControl-UNKNOWN", " does not have a constructor which takes one string parameter", "SAPControl-UNKNOWN");
string.hashCode();

Test 101: 

Test 102: 
AlertNode alertNode = new AlertNode();

Test 103: 

Test 104: 
AlertNode alertNode = new AlertNode();
alertNode.getVisibleLevel();
AlertNode alertNode = new AlertNode();
alertNode.getVisibleLevel();

Test 105: 

Test 106: 
AlertNode alertNode = new AlertNode();

Test 107: 
STATECOLOR sTATECOLOR = STATECOLOR.value1;
VISIBLELEVEL vISIBLELEVEL = VISIBLELEVEL.value3;

Test 108: 
AlertNode alertNode = new AlertNode();

Test 109: 
STATECOLOR sTATECOLOR = STATECOLOR.value4;
VISIBLELEVEL vISIBLELEVEL = new VISIBLELEVEL("VisibleLevel-YELLOW");
AlertNode alertNode = new AlertNode("", 0, sTATECOLOR, "This is a test message", "", "VisibleLevel-RED", vISIBLELEVEL, sTATECOLOR, "VisibleLevel-DEVELOPER", "VisibleLevel-GREEN", "This is a test comment");
((AlertNode) vISIBLELEVEL).getTime();

Test 110: 
STATECOLOR sTATECOLOR = STATECOLOR.value4;
VISIBLELEVEL fromString = VISIBLELEVEL.fromString("SAPControl-YELLOW");
AlertNode alertNode = new AlertNode("zg^6!'16qMs]`", (int) sTATECOLOR, (STATECOLOR) "SAPControl-YELLOW", "SAPControl-YELLOW", "SAPControl-GRAY", (String) fromString, (VISIBLELEVEL) sTATECOLOR, (STATECOLOR) "SAPControl-UNKNOWN", "SAPControl-DEVELOPER", "SAPControl-YELLOW", "SAPControl-YELLOW");
((AlertNode) fromString).getAnalyseTool();

Test 111: 
AlertNode alertNode = new AlertNode();
STATECOLOR sTATECOLOR = STATECOLOR.value2;
alertNode.setActualValue(sTATECOLOR);
alertNode.getActualValue();
alertNode.setActualValue((STATECOLOR) null);
alertNode.getActualValue();

Test 112: 
AlertNode alertNode = new AlertNode();
alertNode.setAlDescription("This is a description of an alert.");
alertNode.getAlDescription();

Test 113: 
AlertNode alertNode = new AlertNode();

Test 114: 
AlertNode alertNode = new AlertNode();
alertNode.setAlTime("2023-04-18T16:25:00Z");
alertNode.getAlTime();

Test 115: 
AlertNode alertNode = new AlertNode();
alertNode.setAlTime("2023-04-18T16:00:00Z");
alertNode.getAlTime();

Test 116: 
AlertNode alertNode = new AlertNode();

Test 117: 

Test 118: 
AlertNode alertNode = new AlertNode();
alertNode.setDescription("The system is experiencing high CPU usage.");
alertNode.getDescription();

Test 119: 
STATECOLOR sTATECOLOR = STATECOLOR.value3;
VISIBLELEVEL vISIBLELEVEL = new VISIBLELEVEL("SAPControl-GREEN");
AlertNode alertNode = new AlertNode((String) 0, (int) sTATECOLOR, (STATECOLOR) "SAPControl-RED", "SAPControl-GRAY", "", (String) vISIBLELEVEL, (VISIBLELEVEL) sTATECOLOR, (STATECOLOR) "0Eqso92'", "0Eqso92'", "SAPControl-YELLOW", "SAPControl-YELLOW");
((AlertNode) vISIBLELEVEL).getDescription();

Test 120: 
STATECOLOR sTATECOLOR = STATECOLOR.value1;
VISIBLELEVEL fromString = VISIBLELEVEL.fromString("visible");
String string = "my_alert";
int _int = 10000;
String string = "my_message";
String string = "6drB:$ )nFm]p";
String string = "o46";
String string = "element";
String string = "o46";
String string = "my_id";
AlertNode alertNode = new AlertNode(string, _int, sTATECOLOR, string, string, string, fromString, sTATECOLOR, string, string, string);
((AlertNode) fromString).getHighAlertValue();

Test 121: 
AlertNode alertNode = new AlertNode();
alertNode.setName("Earthquake Warning!");
alertNode.getName();

Test 122: 
AlertNode alertNode = new AlertNode();
alertNode.setName("Dangerous Animal Sighting");
alertNode.getName();

Test 123: 
STATECOLOR sTATECOLOR = STATECOLOR.value2;
VISIBLELEVEL vISIBLELEVEL = new VISIBLELEVEL("SAPControl-RED");
AlertNode alertNode = new AlertNode("~3tb3v9wrg", 0, sTATECOLOR, "~3tb3v9wrg", "%N#%[V&n+E-ABgD-1`I", "", vISIBLELEVEL, sTATECOLOR, "", "SAPControl-RED", "AlDescription");
((AlertNode) vISIBLELEVEL).setParent(1234);
((AlertNode) vISIBLELEVEL).getParent();

Test 124: 
STATECOLOR sTATECOLOR = STATECOLOR.value4;
VISIBLELEVEL vISIBLELEVEL = VISIBLELEVEL.value3;
AlertNode alertNode = new AlertNode("SAPControl-RED", 1, sTATECOLOR, "SAPControl-RED", ")<)xv=`", "}iQ_z;ntV", vISIBLELEVEL, sTATECOLOR, "SAPControl-RED", "SAPControl-YELLOW", "SAPControl-GRAY");
((AlertNode)"SAPControl-RED").getParent();

Test 125: 
AlertNode alertNode = new AlertNode();
alertNode.setTid("A1B2C3D4E5F6G7H8I9J0K");
alertNode.getTid();

Test 126: 
STATECOLOR sTATECOLOR = STATECOLOR.value3;
VISIBLELEVEL vISIBLELEVEL = VISIBLELEVEL.value4;
String string = "";
AlertNode alertNode = new AlertNode("", (int) sTATECOLOR, (STATECOLOR) "SAPControl-GREEN", "randomString", "randomString", (String) vISIBLELEVEL, (VISIBLELEVEL) sTATECOLOR, (STATECOLOR) "", " does not have a constructor which takes one string parameter", "SAPControl-UNKNOWN", "SAPControl-UNKNOWN");
((AlertNode) string).getTid();

Test 127: 
AlertNode alertNode = new AlertNode();
alertNode.setTime("2023-02-28T14:59:59+05:30");
alertNode.getTime();

Test 128: 
AlertNode alertNode = new AlertNode();

Test 129: 
STATECOLOR sTATECOLOR = STATECOLOR.value4;
VISIBLELEVEL vISIBLELEVEL = VISIBLELEVEL.value3;
AlertNode alertNode = new AlertNode("SAPControl-RED", 1, sTATECOLOR, "SAPControl-RED", ")<)xv=`", "}iQ_z;ntV", vISIBLELEVEL, sTATECOLOR, "SAPControl-RED", "SAPControl-YELLOW", "SAPControl-GRAY");
((AlertNode)"SAPControl-RED").getVisibleLevel();


* Generated after the refinement and before minimization 130 tests with total length 449
* test suite isTestSuite: 130
Test 0: 
AlertNode alertNode = new AlertNode();
alertNode.setAlDescription("A]HOods@aKxL7k=i");
AlertNode alertNode = new AlertNode();
alertNode.setAlDescription("A]HOods@aKxL7k=i");
alertNode.equals(alertNode);
Test 1: 
Class<AlertNode> class = AlertNode.class;
QName qName = new QName("SAPControl-GRAY", "<okUE&:u1>on", ",9D[P");
AlertNode.getDeserializer("SAPControl-RED", class, qName);
Test 2: 
AlertNode alertNode = new AlertNode();
STATECOLOR sTATECOLOR = STATECOLOR.value4;
alertNode.setHighAlertValue(sTATECOLOR);
AlertNode alertNode = new AlertNode();
alertNode.equals(alertNode);
Test 3: 
AlertNode alertNode = new AlertNode();
STATECOLOR sTATECOLOR = STATECOLOR.value4;
alertNode.setActualValue(sTATECOLOR);
AlertNode alertNode = new AlertNode();
alertNode.equals(alertNode);
Test 4: 
AlertNode alertNode = new AlertNode();
alertNode.setAnalyseTool("SAPControl-DEVELOPER");
AlertNode alertNode = new AlertNode();
alertNode.equals(alertNode);
Test 5: 
VISIBLELEVEL vISIBLELEVEL = VISIBLELEVEL.value2;
AlertNode alertNode = new AlertNode("I{[+GuCB", (-1647606196), (STATECOLOR) null, "I{[+GuCB", "I{[+GuCB", "I{[+GuCB", vISIBLELEVEL, (STATECOLOR) null, "SAPControl-EXPERT", "SAPControl-DEVELOPER", "SAPControl-EXPERT");
AlertNode alertNode = new AlertNode("I{[+GuCB", (-1647606196), (STATECOLOR) null, "SAPControl-DEVELOPER", "I{[+GuCB", "SAPControl-UNKNOWN", vISIBLELEVEL, (STATECOLOR) null, "~[htdBk[SlOsLw![g.", "~[htdBk[SlOsLw![g.", "~[htdBk[SlOsLw![g.");
alertNode.equals(alertNode);
Test 6: 
AlertNode alertNode = new AlertNode();
alertNode.setParent(1552);
AlertNode alertNode = new AlertNode();
alertNode.equals(alertNode);
Test 7: 
AlertNode alertNode = new AlertNode();
VISIBLELEVEL vISIBLELEVEL = VISIBLELEVEL.value2;
alertNode.setVisibleLevel(vISIBLELEVEL);
AlertNode alertNode = new AlertNode();
alertNode.equals(alertNode);
Test 8: 
AlertNode alertNode = new AlertNode();
alertNode.setAlTime("org.apache.axis.types.NegativeInteger");
AlertNode alertNode = new AlertNode();
alertNode.setAlTime("org.apache.axis.types.NegativeInteger");
alertNode.equals(alertNode);
Test 9: 
Class<Object> class = Object.class;
QName qName = new QName("");
AlertNode.getSerializer((String) null, class, qName);
Test 10: 
AlertNode.getTypeDesc();
Test 11: 
AlertNode alertNode = new AlertNode();
alertNode.setName("k(iK2+");
AlertNode alertNode = new AlertNode();
alertNode.equals(alertNode);
Test 12: 
AlertNode alertNode = new AlertNode();
alertNode.equals((Object) null);
Test 13: 
AlertNode alertNode = new AlertNode();
alertNode.equals(alertNode);
Test 14: 
AlertNode alertNode = new AlertNode();
alertNode.setName("mV:/.GYDy]mjC/");
AlertNode alertNode = new AlertNode();
alertNode.equals(alertNode);
Test 15: 
AlertNode alertNode = new AlertNode();
AlertNode alertNode = new AlertNode();
STATECOLOR sTATECOLOR = STATECOLOR.value3;
alertNode.setActualValue(sTATECOLOR);
alertNode.equals(alertNode);
Test 16: 
AlertNode alertNode = new AlertNode();
STATECOLOR sTATECOLOR = STATECOLOR.value4;
alertNode.setActualValue(sTATECOLOR);
AlertNode alertNode = new AlertNode();
alertNode.setActualValue(sTATECOLOR);
alertNode.equals(alertNode);
Test 17: 
AlertNode alertNode = new AlertNode();
alertNode.setDescription("type");
AlertNode alertNode = new AlertNode();
alertNode.equals(alertNode);
Test 18: 
AlertNode alertNode = new AlertNode();
alertNode.setDescription("or#?+OW");
AlertNode alertNode = new AlertNode();
alertNode.setDescription("or#?+OW");
alertNode.equals(alertNode);
Test 19: 
AlertNode alertNode = new AlertNode();
AlertNode alertNode = new AlertNode();
alertNode.setTime("m2JJul");
alertNode.equals(alertNode);
Test 20: 
AlertNode alertNode = new AlertNode();
AlertNode alertNode = new AlertNode();
alertNode.setTime("~7PTsjr/31");
alertNode.equals(alertNode);
Test 21: 
AlertNode alertNode = new AlertNode();
AlertNode alertNode = new AlertNode();
alertNode.setTime("m2JJul");
alertNode.setTime("m2JJul");
alertNode.equals(alertNode);
Test 22: 
AlertNode alertNode = new AlertNode();
AlertNode alertNode = new AlertNode();
alertNode.setAnalyseTool("");
alertNode.equals(alertNode);
Test 23: 
AlertNode alertNode = new AlertNode();
AlertNode alertNode = new AlertNode();
alertNode.setAnalyseTool("");
alertNode.setAnalyseTool("");
alertNode.equals(alertNode);
Test 24: 
AlertNode alertNode = new AlertNode();
VISIBLELEVEL vISIBLELEVEL = VISIBLELEVEL.value3;
alertNode.setVisibleLevel(vISIBLELEVEL);
AlertNode alertNode = new AlertNode();
alertNode.equals(alertNode);
Test 25: 
AlertNode alertNode = new AlertNode();
VISIBLELEVEL vISIBLELEVEL = VISIBLELEVEL.value4;
alertNode.setVisibleLevel(vISIBLELEVEL);
AlertNode alertNode = new AlertNode();
alertNode.setVisibleLevel(vISIBLELEVEL);
alertNode.equals(alertNode);
Test 26: 
AlertNode alertNode = new AlertNode();
AlertNode alertNode = new AlertNode();
STATECOLOR sTATECOLOR = STATECOLOR.value3;
alertNode.setHighAlertValue(sTATECOLOR);
alertNode.equals(alertNode);
Test 27: 
AlertNode alertNode = new AlertNode();
STATECOLOR sTATECOLOR = STATECOLOR.value3;
alertNode.setHighAlertValue(sTATECOLOR);
AlertNode alertNode = new AlertNode();
alertNode.setHighAlertValue(sTATECOLOR);
alertNode.equals(alertNode);
Test 28: 
AlertNode alertNode = new AlertNode();
AlertNode alertNode = new AlertNode();
alertNode.setAlDescription("U{");
alertNode.equals(alertNode);
Test 29: 
AlertNode alertNode = new AlertNode();
AlertNode alertNode = new AlertNode();
alertNode.setAlDescription("SAPControl-RED");
alertNode.equals(alertNode);
Test 30: 
AlertNode alertNode = new AlertNode();
AlertNode alertNode = new AlertNode();
alertNode.setAlTime("org.apache.axis.types.NegativeInteger");
alertNode.equals(alertNode);
Test 31: 
AlertNode alertNode = new AlertNode();
AlertNode alertNode = new AlertNode();
alertNode.setAlTime("h]C=we#4*Y9mC6");
alertNode.equals(alertNode);
Test 32: 
AlertNode alertNode = new AlertNode();
AlertNode alertNode = new AlertNode();
alertNode.setTid("");
alertNode.equals(alertNode);
Test 33: 
AlertNode alertNode = new AlertNode();
AlertNode alertNode = new AlertNode();
alertNode.setTid("multiRef");
alertNode.equals(alertNode);
Test 34: 
AlertNode alertNode = new AlertNode();
AlertNode alertNode = new AlertNode();
alertNode.setTid("");
alertNode.setTid("");
alertNode.equals(alertNode);
Test 35: 
AlertNode alertNode = new AlertNode();
alertNode.setTime("");
alertNode.hashCode();
Test 36: 
AlertNode alertNode = new AlertNode();
alertNode.setAnalyseTool("");
alertNode.hashCode();
Test 37: 
STATECOLOR sTATECOLOR = STATECOLOR.value3;
VISIBLELEVEL vISIBLELEVEL = VISIBLELEVEL.value4;
AlertNode alertNode = new AlertNode("", (-1904), sTATECOLOR, "SAPControl-GREEN", (String) null, "xH`;V61Szi", vISIBLELEVEL, sTATECOLOR, "", " does not have a constructor which takes one string parameter", "SAPControl-UNKNOWN");
alertNode.hashCode();
Test 38: 
AlertNode alertNode = new AlertNode();
alertNode.getDescription();
Test 39: 
AlertNode alertNode = new AlertNode();
alertNode.getParent();
Test 40: 
AlertNode alertNode = new AlertNode();
alertNode.getHighAlertValue();
Test 41: 
AlertNode alertNode = new AlertNode();
alertNode.getVisibleLevel();
Test 42: 
AlertNode alertNode = new AlertNode();
alertNode.getTid();
Test 43: 
AlertNode alertNode = new AlertNode();
alertNode.getName();
Test 44: 
STATECOLOR sTATECOLOR = STATECOLOR.value1;
VISIBLELEVEL vISIBLELEVEL = VISIBLELEVEL.value3;
AlertNode alertNode = new AlertNode("`J.}{\"", (-1), sTATECOLOR, "HGYhtO]{z?oR", "T*&0Vwowc-dW6]", "alDescription", vISIBLELEVEL, sTATECOLOR, "", "F@YLZz_B#Q\"Fyp", "ptR");
alertNode.getAlDescription();
Test 45: 
AlertNode alertNode = new AlertNode();
alertNode.getActualValue();
Test 46: 
AlertNode alertNode = new AlertNode();
alertNode.getAlTime();
Test 47: 
STATECOLOR sTATECOLOR = STATECOLOR.value4;
VISIBLELEVEL vISIBLELEVEL = new VISIBLELEVEL("SAPControl-YELLOW");
AlertNode alertNode = new AlertNode("", (-2198), sTATECOLOR, "Mk#AdT.%@n", "", "SAPControl-RED", vISIBLELEVEL, sTATECOLOR, "SAPControl-DEVELOPER", "SAPControl-GREEN", "9>e;_3n-'Q2");
alertNode.getTime();
Test 48: 
STATECOLOR sTATECOLOR = STATECOLOR.value4;
VISIBLELEVEL fromString = VISIBLELEVEL.fromString("SAPControl-YELLOW");
AlertNode alertNode = new AlertNode("zg^6!'16qMs]`", (-3668), sTATECOLOR, "SAPControl-YELLOW", "SAPControl-YELLOW", "SAPControl-GRAY", fromString, sTATECOLOR, "SAPControl-UNKNOWN", "SAPControl-DEVELOPER", "SAPControl-YELLOW");
alertNode.getAnalyseTool();
Test 49: 
AlertNode alertNode = new AlertNode();
STATECOLOR sTATECOLOR = STATECOLOR.value2;
alertNode.setActualValue(sTATECOLOR);
alertNode.getActualValue();
Test 50: 
AlertNode alertNode = new AlertNode();
alertNode.setAlDescription("g'og+x+PTqzU]ou");
alertNode.getAlDescription();
Test 51: 
AlertNode alertNode = new AlertNode();
alertNode.getAlDescription();
Test 52: 
AlertNode alertNode = new AlertNode();
alertNode.setAlTime("");
alertNode.getAlTime();
Test 53: 
AlertNode alertNode = new AlertNode();
alertNode.setAlTime("actualValue");
alertNode.getAlTime();
Test 54: 
AlertNode alertNode = new AlertNode();
alertNode.setAnalyseTool("");
alertNode.getAnalyseTool();
Test 55: 
AlertNode alertNode = new AlertNode();
alertNode.getAnalyseTool();
Test 56: 
AlertNode alertNode = new AlertNode();
alertNode.setDescription("");
alertNode.getDescription();
Test 57: 
STATECOLOR sTATECOLOR = STATECOLOR.value3;
VISIBLELEVEL vISIBLELEVEL = new VISIBLELEVEL("SAPControl-RED");
AlertNode alertNode = new AlertNode((String) null, (-1314), sTATECOLOR, "SAPControl-GRAY", "SAPControl-RED", "", vISIBLELEVEL, sTATECOLOR, "0Eqso92'", "0Eqso92'", "SAPControl-YELLOW");
alertNode.getDescription();
Test 58: 
STATECOLOR sTATECOLOR = STATECOLOR.value1;
VISIBLELEVEL fromString = VISIBLELEVEL.fromString("");
AlertNode alertNode = new AlertNode("", 10000, sTATECOLOR, "", "6drB:$ )nFm]p", "o46", fromString, sTATECOLOR, "element", "o46", "");
alertNode.getHighAlertValue();
Test 59: 
AlertNode alertNode = new AlertNode();
alertNode.setName("");
alertNode.getName();
Test 60: 
AlertNode alertNode = new AlertNode();
alertNode.setName(")\"Z'rZ1|ml ");
alertNode.getName();
Test 61: 
STATECOLOR sTATECOLOR = STATECOLOR.value2;
VISIBLELEVEL vISIBLELEVEL = new VISIBLELEVEL("SAPControl-RED");
AlertNode alertNode = new AlertNode("%N#%[V&n+E-ABgD-1`I", 0, sTATECOLOR, "~3tb3v9wrg", "%N#%[V&n+E-ABgD-1`I", "", vISIBLELEVEL, sTATECOLOR, "", "SAPControl-RED", "AlDescription");
alertNode.setParent((-1148));
alertNode.getParent();
Test 62: 
STATECOLOR sTATECOLOR = STATECOLOR.value4;
VISIBLELEVEL vISIBLELEVEL = VISIBLELEVEL.value3;
AlertNode alertNode = new AlertNode("SAPControl-RED", 1, sTATECOLOR, "SAPControl-RED", ")<)xv=`", "}iQ_z;ntV", vISIBLELEVEL, sTATECOLOR, "SAPControl-RED", "SAPControl-YELLOW", "SAPControl-GRAY");
alertNode.getParent();
Test 63: 
AlertNode alertNode = new AlertNode();
alertNode.setTid("");
alertNode.getTid();
Test 64: 
STATECOLOR sTATECOLOR = STATECOLOR.value3;
VISIBLELEVEL vISIBLELEVEL = VISIBLELEVEL.value4;
AlertNode alertNode = new AlertNode("", (-1904), sTATECOLOR, "SAPControl-GREEN", (String) null, "xH`;V61Szi", vISIBLELEVEL, sTATECOLOR, "", " does not have a constructor which takes one string parameter", "SAPControl-UNKNOWN");
alertNode.getTid();
Test 65: 
AlertNode alertNode = new AlertNode();
alertNode.setTime("g'og+x+PTqzU]ou");
alertNode.getTime();
Test 66: 
AlertNode alertNode = new AlertNode();
alertNode.getTime();
Test 67: 
STATECOLOR sTATECOLOR = STATECOLOR.value4;
VISIBLELEVEL vISIBLELEVEL = VISIBLELEVEL.value3;
AlertNode alertNode = new AlertNode("SAPControl-RED", 1, sTATECOLOR, "SAPControl-RED", ")<)xv=`", "}iQ_z;ntV", vISIBLELEVEL, sTATECOLOR, "SAPControl-RED", "SAPControl-YELLOW", "SAPControl-GRAY");
alertNode.getVisibleLevel();
Test 68: 
AlertNode alertNode = new AlertNode();
alertNode.setAlDescription("AHOods@aKxL7k=i");
AlertNode alertNode = new AlertNode();
alertNode.setAlDescription("AHOods@aKxL7k=i");

Test 69: 
QName qName = new QName("SAPControl-GRAY", "<okUE&:u1>on", ",9D[P");
AlertNode.getDeserializer("SAPControl-RED", (Class) qName, (QName) null);

Test 70: 
AlertNode alertNode = new AlertNode();
alertNode.setActualValue((STATECOLOR) null);

Test 71: 
AlertNode alertNode = new AlertNode();
alertNode.setAnalyseTool("SAPControl-DEVELOPER");
AlertNode alertNode = new AlertNode();

Test 72: 
VISIBLELEVEL vISIBLELEVEL = VISIBLELEVEL.value2;
String string = "I{[+GuCB";
AlertNode alertNode = new AlertNode("I{[+GuCB", (int) "I{[+GuCB", (STATECOLOR) "I{[+GuCB", "I{[+GuCB", (String) vISIBLELEVEL, "SAPControl-EXPERT", (VISIBLELEVEL) "SAPControl-DEVELOPER", (STATECOLOR) "SAPControl-EXPERT", "SAPControl-EXPERT", "SAPControl-DEVELOPER", "SAPControl-EXPERT");
String string = "I{[+GuCB";
String string = "SAPControl-DEVELOPER";
String string = "I{[+GuCB";
String string = "SAPControl-UNKNOWN";
String string = "~[htdBk[SlOsLw![g.";
String string = "~[htdBk[SlOsLw![g.";
String string = "~[htdBk[SlOsLw![g.";
AlertNode alertNode = new AlertNode(string, (int) string, (STATECOLOR) string, string, (String) vISIBLELEVEL, string, (VISIBLELEVEL) string, (STATECOLOR) string, "SAPControl-EXPERT", "SAPControl-DEVELOPER", "SAPControl-EXPERT");
string.equals(alertNode);

Test 73: 
AlertNode alertNode = new AlertNode();
alertNode.setVisibleLevel((VISIBLELEVEL) null);
AlertNode alertNode = new AlertNode();
alertNode.setVisibleLevel((VISIBLELEVEL) null);
AlertNode alertNode = new AlertNode();
alertNode.setVisibleLevel((VISIBLELEVEL) null);

Test 74: 
AlertNode alertNode = new AlertNode();
alertNode.setAlTime("-100");
AlertNode alertNode = new AlertNode();
alertNode.setAlTime("-50");

Test 75: 
AlertNode.getSerializer((String) null, (Class) null, (QName) null);

Test 76: 
AlertNode alertNode = new AlertNode();
alertNode.setName("High");
AlertNode alertNode = new AlertNode();

Test 77: 
AlertNode alertNode = new AlertNode();
alertNode.equals("This is a string value");

Test 78: 
AlertNode alertNode = new AlertNode();
alertNode.setName("Severe Weather Alert");
AlertNode alertNode = new AlertNode();
alertNode.equals(alertNode);

Test 79: 
AlertNode alertNode = new AlertNode();
alertNode.equals(alertNode);

Test 80: 
AlertNode alertNode = new AlertNode();
STATECOLOR sTATECOLOR = STATECOLOR.value4;
alertNode.setActualValue(sTATECOLOR);
AlertNode alertNode = new AlertNode();
alertNode.setActualValue((STATECOLOR) null);
alertNode.equals(alertNode);

Test 81: 
AlertNode alertNode = new AlertNode();
alertNode.setDescription("Severe Weather Warning");
AlertNode alertNode = new AlertNode();
alertNode.setDescription("Strong Winds");

Test 82: 
AlertNode alertNode = new AlertNode();
alertNode.setDescription("Insufficient Funds");
AlertNode alertNode = new AlertNode();
alertNode.setDescription("Insufficient Funds");
alertNode.equals(alertNode);

Test 83: 
AlertNode alertNode = new AlertNode();
alertNode.setTime("July 2nd, Monday");
AlertNode alertNode = new AlertNode();
alertNode.setTime("July 3rd, Tuesday");

Test 84: 
AlertNode alertNode = new AlertNode();
AlertNode alertNode = new AlertNode();

Test 85: 
AlertNode alertNode = new AlertNode();
alertNode.setTime("2023-06-18 10:45:00");
alertNode.setTime("2023-06-18 10:45:00");
alertNode.equals(alertNode);

Test 86: 
AlertNode alertNode = new AlertNode();
alertNode.equals(alertNode);
AlertNode alertNode = new AlertNode();
alertNode.equals(alertNode);

Test 87: 
AlertNode alertNode = new AlertNode();
AlertNode alertNode = new AlertNode();
alertNode.setAnalyseTool("tool1");
alertNode.setAnalyseTool("tool2");
alertNode.equals(alertNode);

Test 88: 
AlertNode alertNode = new AlertNode();
alertNode.setVisibleLevel((VISIBLELEVEL) "value3");
AlertNode alertNode = new AlertNode();

Test 89: 
AlertNode alertNode = new AlertNode();
VISIBLELEVEL vISIBLELEVEL = VISIBLELEVEL.value4;
alertNode.setVisibleLevel(vISIBLELEVEL);

Test 90: 
AlertNode alertNode = new AlertNode();
AlertNode alertNode = new AlertNode();

Test 91: 
AlertNode alertNode = new AlertNode();
alertNode.setHighAlertValue((STATECOLOR) "Red");
AlertNode alertNode = new AlertNode();
String string = "Orange";
alertNode.setHighAlertValue((STATECOLOR) string);

Test 92: 
AlertNode alertNode = new AlertNode();
AlertNode alertNode = new AlertNode();

Test 93: 
AlertNode alertNode = new AlertNode();
AlertNode alertNode = new AlertNode();

Test 94: 
AlertNode alertNode = new AlertNode();
AlertNode alertNode = new AlertNode();
AlertNode alertNode = new AlertNode();

Test 95: 
AlertNode alertNode = new AlertNode();
AlertNode alertNode = new AlertNode();

Test 96: 
AlertNode alertNode = new AlertNode();
AlertNode alertNode = new AlertNode();

Test 97: 
AlertNode alertNode = new AlertNode();
alertNode.setTid("1234567890");
alertNode.setTid("abcdefghijklmnopqrstuvwxyz");

Test 98: 
AlertNode alertNode = new AlertNode();
alertNode.setTime("2024-02-29T15:03:26+05:30");
alertNode.hashCode();

Test 99: 
AlertNode alertNode = new AlertNode();
alertNode.hashCode();

Test 100: 
STATECOLOR sTATECOLOR = STATECOLOR.value3;
VISIBLELEVEL vISIBLELEVEL = VISIBLELEVEL.value4;
String string = "";
AlertNode alertNode = new AlertNode("", (int) sTATECOLOR, (STATECOLOR) "SAPControl-GREEN", "xH`;V61Szi", (String) vISIBLELEVEL, (String) sTATECOLOR, (VISIBLELEVEL) "", (STATECOLOR) " does not have a constructor which takes one string parameter", "SAPControl-UNKNOWN", " does not have a constructor which takes one string parameter", "SAPControl-UNKNOWN");
string.hashCode();

Test 101: 

Test 102: 
AlertNode alertNode = new AlertNode();

Test 103: 

Test 104: 
AlertNode alertNode = new AlertNode();
alertNode.getVisibleLevel();
AlertNode alertNode = new AlertNode();
alertNode.getVisibleLevel();

Test 105: 

Test 106: 
AlertNode alertNode = new AlertNode();

Test 107: 
STATECOLOR sTATECOLOR = STATECOLOR.value1;
VISIBLELEVEL vISIBLELEVEL = VISIBLELEVEL.value3;

Test 108: 
AlertNode alertNode = new AlertNode();

Test 109: 
STATECOLOR sTATECOLOR = STATECOLOR.value4;
VISIBLELEVEL vISIBLELEVEL = new VISIBLELEVEL("VisibleLevel-YELLOW");
AlertNode alertNode = new AlertNode("", 0, sTATECOLOR, "This is a test message", "", "VisibleLevel-RED", vISIBLELEVEL, sTATECOLOR, "VisibleLevel-DEVELOPER", "VisibleLevel-GREEN", "This is a test comment");
((AlertNode) vISIBLELEVEL).getTime();

Test 110: 
STATECOLOR sTATECOLOR = STATECOLOR.value4;
VISIBLELEVEL fromString = VISIBLELEVEL.fromString("SAPControl-YELLOW");
AlertNode alertNode = new AlertNode("zg^6!'16qMs]`", (int) sTATECOLOR, (STATECOLOR) "SAPControl-YELLOW", "SAPControl-YELLOW", "SAPControl-GRAY", (String) fromString, (VISIBLELEVEL) sTATECOLOR, (STATECOLOR) "SAPControl-UNKNOWN", "SAPControl-DEVELOPER", "SAPControl-YELLOW", "SAPControl-YELLOW");
((AlertNode) fromString).getAnalyseTool();

Test 111: 
AlertNode alertNode = new AlertNode();
STATECOLOR sTATECOLOR = STATECOLOR.value2;
alertNode.setActualValue(sTATECOLOR);
alertNode.getActualValue();
alertNode.setActualValue((STATECOLOR) null);
alertNode.getActualValue();

Test 112: 
AlertNode alertNode = new AlertNode();
alertNode.setAlDescription("This is a description of an alert.");
alertNode.getAlDescription();

Test 113: 
AlertNode alertNode = new AlertNode();

Test 114: 
AlertNode alertNode = new AlertNode();
alertNode.setAlTime("2023-04-18T16:25:00Z");
alertNode.getAlTime();

Test 115: 
AlertNode alertNode = new AlertNode();
alertNode.setAlTime("2023-04-18T16:00:00Z");
alertNode.getAlTime();

Test 116: 
AlertNode alertNode = new AlertNode();

Test 117: 

Test 118: 
AlertNode alertNode = new AlertNode();
alertNode.setDescription("The system is experiencing high CPU usage.");
alertNode.getDescription();

Test 119: 
STATECOLOR sTATECOLOR = STATECOLOR.value3;
VISIBLELEVEL vISIBLELEVEL = new VISIBLELEVEL("SAPControl-GREEN");
AlertNode alertNode = new AlertNode((String) 0, (int) sTATECOLOR, (STATECOLOR) "SAPControl-RED", "SAPControl-GRAY", "", (String) vISIBLELEVEL, (VISIBLELEVEL) sTATECOLOR, (STATECOLOR) "0Eqso92'", "0Eqso92'", "SAPControl-YELLOW", "SAPControl-YELLOW");
((AlertNode) vISIBLELEVEL).getDescription();

Test 120: 
STATECOLOR sTATECOLOR = STATECOLOR.value1;
VISIBLELEVEL fromString = VISIBLELEVEL.fromString("visible");
String string = "my_alert";
int _int = 10000;
String string = "my_message";
String string = "6drB:$ )nFm]p";
String string = "o46";
String string = "element";
String string = "o46";
String string = "my_id";
AlertNode alertNode = new AlertNode(string, _int, sTATECOLOR, string, string, string, fromString, sTATECOLOR, string, string, string);
((AlertNode) fromString).getHighAlertValue();

Test 121: 
AlertNode alertNode = new AlertNode();
alertNode.setName("Earthquake Warning!");
alertNode.getName();

Test 122: 
AlertNode alertNode = new AlertNode();
alertNode.setName("Dangerous Animal Sighting");
alertNode.getName();

Test 123: 
STATECOLOR sTATECOLOR = STATECOLOR.value2;
VISIBLELEVEL vISIBLELEVEL = new VISIBLELEVEL("SAPControl-RED");
AlertNode alertNode = new AlertNode("~3tb3v9wrg", 0, sTATECOLOR, "~3tb3v9wrg", "%N#%[V&n+E-ABgD-1`I", "", vISIBLELEVEL, sTATECOLOR, "", "SAPControl-RED", "AlDescription");
((AlertNode) vISIBLELEVEL).setParent(1234);
((AlertNode) vISIBLELEVEL).getParent();

Test 124: 
STATECOLOR sTATECOLOR = STATECOLOR.value4;
VISIBLELEVEL vISIBLELEVEL = VISIBLELEVEL.value3;
AlertNode alertNode = new AlertNode("SAPControl-RED", 1, sTATECOLOR, "SAPControl-RED", ")<)xv=`", "}iQ_z;ntV", vISIBLELEVEL, sTATECOLOR, "SAPControl-RED", "SAPControl-YELLOW", "SAPControl-GRAY");
((AlertNode)"SAPControl-RED").getParent();

Test 125: 
AlertNode alertNode = new AlertNode();
alertNode.setTid("A1B2C3D4E5F6G7H8I9J0K");
alertNode.getTid();

Test 126: 
STATECOLOR sTATECOLOR = STATECOLOR.value3;
VISIBLELEVEL vISIBLELEVEL = VISIBLELEVEL.value4;
String string = "";
AlertNode alertNode = new AlertNode("", (int) sTATECOLOR, (STATECOLOR) "SAPControl-GREEN", "randomString", "randomString", (String) vISIBLELEVEL, (VISIBLELEVEL) sTATECOLOR, (STATECOLOR) "", " does not have a constructor which takes one string parameter", "SAPControl-UNKNOWN", "SAPControl-UNKNOWN");
((AlertNode) string).getTid();

Test 127: 
AlertNode alertNode = new AlertNode();
alertNode.setTime("2023-02-28T14:59:59+05:30");
alertNode.getTime();

Test 128: 
AlertNode alertNode = new AlertNode();

Test 129: 
STATECOLOR sTATECOLOR = STATECOLOR.value4;
VISIBLELEVEL vISIBLELEVEL = VISIBLELEVEL.value3;
AlertNode alertNode = new AlertNode("SAPControl-RED", 1, sTATECOLOR, "SAPControl-RED", ")<)xv=`", "}iQ_z;ntV", vISIBLELEVEL, sTATECOLOR, "SAPControl-RED", "SAPControl-YELLOW", "SAPControl-GRAY");
((AlertNode)"SAPControl-RED").getVisibleLevel();


* Minimizing test suite
* test suite isTestSuite: 67
Test 0: 
Class<AlertNode> class = AlertNode.class;
QName qName = new QName("SAPControl-GRAY", "<okUE&:u1>on", ",9D[P");
AlertNode.getDeserializer("SAPControl-RED", class, qName);
Test 1: 
AlertNode alertNode = new AlertNode();
STATECOLOR sTATECOLOR = STATECOLOR.value3;
alertNode.setHighAlertValue(sTATECOLOR);
AlertNode alertNode = new AlertNode();
alertNode.setHighAlertValue(sTATECOLOR);
alertNode.equals(alertNode);
Test 2: 
AlertNode alertNode = new AlertNode();
alertNode.setTime("2024-02-29T15:03:26+05:30");
alertNode.hashCode();
Test 3: 
AlertNode alertNode = new AlertNode();
STATECOLOR sTATECOLOR = STATECOLOR.value4;
alertNode.setActualValue(sTATECOLOR);
AlertNode alertNode = new AlertNode();
alertNode.equals(alertNode);
Test 4: 
AlertNode alertNode = new AlertNode();
alertNode.setAnalyseTool("SAPControl-DEVELOPER");
AlertNode alertNode = new AlertNode();
alertNode.equals(alertNode);
Test 5: 
AlertNode alertNode = new AlertNode();
alertNode.setAlDescription("This is a description of an alert.");
alertNode.getAlDescription();
Test 6: 
AlertNode alertNode = new AlertNode();
alertNode.setDescription("The system is experiencing high CPU usage.");
alertNode.getDescription();
Test 7: 
STATECOLOR sTATECOLOR = STATECOLOR.value4;
VISIBLELEVEL vISIBLELEVEL = VISIBLELEVEL.value3;
AlertNode alertNode = new AlertNode("SAPControl-RED", 1, sTATECOLOR, "SAPControl-RED", ")<)xv=`", "}iQ_z;ntV", vISIBLELEVEL, sTATECOLOR, "SAPControl-RED", "SAPControl-YELLOW", "SAPControl-GRAY");
alertNode.getParent();
Test 8: 
AlertNode alertNode = new AlertNode();
alertNode.setParent(1552);
AlertNode alertNode = new AlertNode();
alertNode.equals(alertNode);
Test 9: 
AlertNode alertNode = new AlertNode();
VISIBLELEVEL vISIBLELEVEL = VISIBLELEVEL.value4;
alertNode.setVisibleLevel(vISIBLELEVEL);
AlertNode alertNode = new AlertNode();
alertNode.setVisibleLevel(vISIBLELEVEL);
alertNode.equals(alertNode);
Test 10: 
AlertNode alertNode = new AlertNode();
alertNode.setAlTime("2023-04-18T16:00:00Z");
alertNode.getAlTime();
Test 11: 
AlertNode alertNode = new AlertNode();
alertNode.setTid("A1B2C3D4E5F6G7H8I9J0K");
alertNode.getTid();
Test 12: 
AlertNode.getSerializer((String) null, (Class) null, (QName) null);
Test 13: 
AlertNode.getTypeDesc();
Test 14: 
AlertNode alertNode = new AlertNode();
alertNode.equals(alertNode);
Test 15: 
AlertNode alertNode = new AlertNode();
alertNode.equals("This is a string value");
Test 16: 
AlertNode alertNode = new AlertNode();
alertNode.setName("Severe Weather Alert");
AlertNode alertNode = new AlertNode();
alertNode.equals(alertNode);
Test 17: 
AlertNode alertNode = new AlertNode();
alertNode.setName("k(iK2+");
AlertNode alertNode = new AlertNode();
alertNode.equals(alertNode);
Test 18: 
VISIBLELEVEL vISIBLELEVEL = VISIBLELEVEL.value2;
AlertNode alertNode = new AlertNode("I{[+GuCB", (-1647606196), (STATECOLOR) null, "I{[+GuCB", "I{[+GuCB", "I{[+GuCB", vISIBLELEVEL, (STATECOLOR) null, "SAPControl-EXPERT", "SAPControl-DEVELOPER", "SAPControl-EXPERT");
AlertNode alertNode = new AlertNode("I{[+GuCB", (-1647606196), (STATECOLOR) null, "SAPControl-DEVELOPER", "I{[+GuCB", "SAPControl-UNKNOWN", vISIBLELEVEL, (STATECOLOR) null, "~[htdBk[SlOsLw![g.", "~[htdBk[SlOsLw![g.", "~[htdBk[SlOsLw![g.");
alertNode.equals(alertNode);
Test 19: 
AlertNode alertNode = new AlertNode();
AlertNode alertNode = new AlertNode();
STATECOLOR sTATECOLOR = STATECOLOR.value3;
alertNode.setActualValue(sTATECOLOR);
alertNode.equals(alertNode);
Test 20: 
AlertNode alertNode = new AlertNode();
STATECOLOR sTATECOLOR = STATECOLOR.value4;
alertNode.setActualValue(sTATECOLOR);
AlertNode alertNode = new AlertNode();
alertNode.setActualValue(sTATECOLOR);
alertNode.equals(alertNode);
Test 21: 
AlertNode alertNode = new AlertNode();
alertNode.setDescription("type");
AlertNode alertNode = new AlertNode();
alertNode.equals(alertNode);
Test 22: 
AlertNode alertNode = new AlertNode();
alertNode.setDescription("or#?+OW");
AlertNode alertNode = new AlertNode();
alertNode.setDescription("or#?+OW");
alertNode.equals(alertNode);
Test 23: 
AlertNode alertNode = new AlertNode();
AlertNode alertNode = new AlertNode();
alertNode.setTime("m2JJul");
alertNode.equals(alertNode);
Test 24: 
AlertNode alertNode = new AlertNode();
AlertNode alertNode = new AlertNode();
alertNode.setTime("~7PTsjr/31");
alertNode.equals(alertNode);
Test 25: 
AlertNode alertNode = new AlertNode();
AlertNode alertNode = new AlertNode();
alertNode.setTime("m2JJul");
alertNode.setTime("m2JJul");
alertNode.equals(alertNode);
Test 26: 
AlertNode alertNode = new AlertNode();
AlertNode alertNode = new AlertNode();
alertNode.setAnalyseTool("tool1");
alertNode.equals(alertNode);
Test 27: 
AlertNode alertNode = new AlertNode();
AlertNode alertNode = new AlertNode();
alertNode.setAnalyseTool("");
alertNode.setAnalyseTool("");
alertNode.equals(alertNode);
Test 28: 
AlertNode alertNode = new AlertNode();
VISIBLELEVEL vISIBLELEVEL = VISIBLELEVEL.value2;
alertNode.setVisibleLevel(vISIBLELEVEL);
AlertNode alertNode = new AlertNode();
alertNode.equals(alertNode);
Test 29: 
AlertNode alertNode = new AlertNode();
VISIBLELEVEL vISIBLELEVEL = VISIBLELEVEL.value3;
alertNode.setVisibleLevel(vISIBLELEVEL);
AlertNode alertNode = new AlertNode();
alertNode.equals(alertNode);
Test 30: 
AlertNode alertNode = new AlertNode();
AlertNode alertNode = new AlertNode();
STATECOLOR sTATECOLOR = STATECOLOR.value3;
alertNode.setHighAlertValue(sTATECOLOR);
alertNode.equals(alertNode);
Test 31: 
AlertNode alertNode = new AlertNode();
STATECOLOR sTATECOLOR = STATECOLOR.value4;
alertNode.setHighAlertValue(sTATECOLOR);
AlertNode alertNode = new AlertNode();
alertNode.equals(alertNode);
Test 32: 
AlertNode alertNode = new AlertNode();
AlertNode alertNode = new AlertNode();
alertNode.setAlDescription("SAPControl-RED");
alertNode.equals(alertNode);
Test 33: 
AlertNode alertNode = new AlertNode();
AlertNode alertNode = new AlertNode();
alertNode.setAlDescription("U{");
alertNode.equals(alertNode);
Test 34: 
AlertNode alertNode = new AlertNode();
alertNode.setAlDescription("A]HOods@aKxL7k=i");
AlertNode alertNode = new AlertNode();
alertNode.setAlDescription("A]HOods@aKxL7k=i");
alertNode.equals(alertNode);
Test 35: 
AlertNode alertNode = new AlertNode();
AlertNode alertNode = new AlertNode();
alertNode.setAlTime("org.apache.axis.types.NegativeInteger");
alertNode.equals(alertNode);
Test 36: 
AlertNode alertNode = new AlertNode();
AlertNode alertNode = new AlertNode();
alertNode.setAlTime("h]C=we#4*Y9mC6");
alertNode.equals(alertNode);
Test 37: 
AlertNode alertNode = new AlertNode();
alertNode.setAlTime("org.apache.axis.types.NegativeInteger");
AlertNode alertNode = new AlertNode();
alertNode.setAlTime("org.apache.axis.types.NegativeInteger");
alertNode.equals(alertNode);
Test 38: 
AlertNode alertNode = new AlertNode();
AlertNode alertNode = new AlertNode();
alertNode.setTid("");
alertNode.equals(alertNode);
Test 39: 
AlertNode alertNode = new AlertNode();
AlertNode alertNode = new AlertNode();
alertNode.setTid("multiRef");
alertNode.equals(alertNode);
Test 40: 
AlertNode alertNode = new AlertNode();
AlertNode alertNode = new AlertNode();
alertNode.setTid("");
alertNode.setTid("");
alertNode.equals(alertNode);
Test 41: 
STATECOLOR sTATECOLOR = STATECOLOR.value3;
VISIBLELEVEL vISIBLELEVEL = VISIBLELEVEL.value4;
AlertNode alertNode = new AlertNode("", (-1904), sTATECOLOR, "SAPControl-GREEN", (String) null, "xH`;V61Szi", vISIBLELEVEL, sTATECOLOR, "", " does not have a constructor which takes one string parameter", "SAPControl-UNKNOWN");
alertNode.hashCode();
Test 42: 
AlertNode alertNode = new AlertNode();
alertNode.getDescription();
Test 43: 
AlertNode alertNode = new AlertNode();
alertNode.getParent();
Test 44: 
AlertNode alertNode = new AlertNode();
alertNode.getHighAlertValue();
Test 45: 
AlertNode alertNode = new AlertNode();
alertNode.getVisibleLevel();
Test 46: 
AlertNode alertNode = new AlertNode();
alertNode.getTid();
Test 47: 
AlertNode alertNode = new AlertNode();
alertNode.getName();
Test 48: 
AlertNode alertNode = new AlertNode();
alertNode.getAlDescription();
Test 49: 
AlertNode alertNode = new AlertNode();
alertNode.getActualValue();
Test 50: 
AlertNode alertNode = new AlertNode();
alertNode.getAlTime();
Test 51: 
AlertNode alertNode = new AlertNode();
alertNode.getTime();
Test 52: 
AlertNode alertNode = new AlertNode();
alertNode.getAnalyseTool();
Test 53: 
AlertNode alertNode = new AlertNode();
STATECOLOR sTATECOLOR = STATECOLOR.value2;
alertNode.setActualValue(sTATECOLOR);
alertNode.getActualValue();
Test 54: 
STATECOLOR sTATECOLOR = STATECOLOR.value1;
VISIBLELEVEL vISIBLELEVEL = VISIBLELEVEL.value3;
AlertNode alertNode = new AlertNode("`J.}{\"", (-1), sTATECOLOR, "HGYhtO]{z?oR", "T*&0Vwowc-dW6]", "alDescription", vISIBLELEVEL, sTATECOLOR, "", "F@YLZz_B#Q\"Fyp", "ptR");
alertNode.getAlDescription();
Test 55: 
AlertNode alertNode = new AlertNode();
alertNode.setAlTime("");
alertNode.getAlTime();
Test 56: 
AlertNode alertNode = new AlertNode();
alertNode.setAnalyseTool("");
alertNode.getAnalyseTool();
Test 57: 
STATECOLOR sTATECOLOR = STATECOLOR.value4;
VISIBLELEVEL fromString = VISIBLELEVEL.fromString("SAPControl-YELLOW");
AlertNode alertNode = new AlertNode("zg^6!'16qMs]`", (-3668), sTATECOLOR, "SAPControl-YELLOW", "SAPControl-YELLOW", "SAPControl-GRAY", fromString, sTATECOLOR, "SAPControl-UNKNOWN", "SAPControl-DEVELOPER", "SAPControl-YELLOW");
alertNode.getAnalyseTool();
Test 58: 
AlertNode alertNode = new AlertNode();
alertNode.setDescription("");
alertNode.getDescription();
Test 59: 
STATECOLOR sTATECOLOR = STATECOLOR.value1;
VISIBLELEVEL fromString = VISIBLELEVEL.fromString("");
AlertNode alertNode = new AlertNode("", 10000, sTATECOLOR, "", "6drB:$ )nFm]p", "o46", fromString, sTATECOLOR, "element", "o46", "");
alertNode.getHighAlertValue();
Test 60: 
AlertNode alertNode = new AlertNode();
alertNode.setName("");
alertNode.getName();
Test 61: 
AlertNode alertNode = new AlertNode();
alertNode.setName(")\"Z'rZ1|ml ");
alertNode.getName();
Test 62: 
STATECOLOR sTATECOLOR = STATECOLOR.value2;
VISIBLELEVEL vISIBLELEVEL = new VISIBLELEVEL("SAPControl-RED");
AlertNode alertNode = new AlertNode("%N#%[V&n+E-ABgD-1`I", 0, sTATECOLOR, "~3tb3v9wrg", "%N#%[V&n+E-ABgD-1`I", "", vISIBLELEVEL, sTATECOLOR, "", "SAPControl-RED", "AlDescription");
alertNode.setParent((-1148));
alertNode.getParent();
Test 63: 
AlertNode alertNode = new AlertNode();
alertNode.setTid("");
alertNode.getTid();
Test 64: 
STATECOLOR sTATECOLOR = STATECOLOR.value4;
VISIBLELEVEL vISIBLELEVEL = new VISIBLELEVEL("SAPControl-YELLOW");
AlertNode alertNode = new AlertNode("", (-2198), sTATECOLOR, "Mk#AdT.%@n", "", "SAPControl-RED", vISIBLELEVEL, sTATECOLOR, "SAPControl-DEVELOPER", "SAPControl-GREEN", "9>e;_3n-'Q2");
alertNode.getTime();
Test 65: 
AlertNode alertNode = new AlertNode();
alertNode.setTime("2023-02-28T14:59:59+05:30");
alertNode.getTime();
Test 66: 
STATECOLOR sTATECOLOR = STATECOLOR.value4;
VISIBLELEVEL vISIBLELEVEL = VISIBLELEVEL.value3;
AlertNode alertNode = new AlertNode("SAPControl-RED", 1, sTATECOLOR, "SAPControl-RED", ")<)xv=`", "}iQ_z;ntV", vISIBLELEVEL, sTATECOLOR, "SAPControl-RED", "SAPControl-YELLOW", "SAPControl-GRAY");
alertNode.getVisibleLevel();

* Going to analyze the coverage criteria
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 96%
* Total number of goals: 141
* Number of covered goals: 136
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 98%
* Total number of goals: 92
* Number of covered goals: 90
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 88%
* Total number of goals: 40
* Number of covered goals: 35
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 29
* Number of covered goals: 29
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 96%
* Total number of goals: 141
* Number of covered goals: 136
* Generated 67 tests with total length 242
* Resulting test suite's coverage: 96% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 58%
* Compiling and checking tests
Going to execute: removeTestsThatDoNotCompile
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Class<AlertNode> arg1 = AlertNode.class;
QName arg2 = new QName("SAPControl-GRAY", "<okUE&:u1>on", ",9D[P");
Deserializer deserializer = AlertNode.getDeserializer("SAPControl-RED", arg1, arg2);
assertFalse(deserializer.componentsReady());


** It was a parseable test case! 
refined test name is: testDeserializerComponentsReady
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: AlertNode alertNode = new AlertNode();
alertNode.setTime("2024-02-29T15:03:26+05:30");
alertNode.hashCode();
assertEquals(0, alertNode.getParent());


** It was a parseable test case! 
refined test name is: testHashCodeAndGetParentReturnsNull
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: AlertNode arg0 = new AlertNode();
arg0.setAnalyseTool("SAPControl-DEVELOPER");
AlertNode alertNode = new AlertNode();
boolean equals = alertNode.equals(arg0);
assertEquals(0, alertNode.getParent());
assertFalse(equals);


** It was a parseable test case! 
refined test name is: testAlertNodeEqualsWithDifferentValues
* Compiling Tests
refined test name is: testEqualsDifferentParentReturnsFalse
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: AlertNode alertNode = new AlertNode();
alertNode.setAlDescription("This is a description of an alert.");
String alDescription = alertNode.getAlDescription();
assertEquals("This is a description of an alert.", alDescription);


** It was a parseable test case! 
refined test name is: testGetAlDescription
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: AlertNode alertNode = new AlertNode();
alertNode.setDescription("The system is experiencing high CPU usage.");
String description = alertNode.getDescription();
assertEquals("The system is experiencing high CPU usage.", description);


** It was a parseable test case! 
refined test name is: testGetDescriptionreturnsSetValue
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: STATECOLOR arg7 = STATECOLOR.value4;
VISIBLELEVEL arg6 = VISIBLELEVEL.value3;
AlertNode alertNode = new AlertNode("SAPControl-RED", 1, arg7, "SAPControl-RED", ")<)xv=`", "}iQ_z;ntV", arg6, arg7, "SAPControl-RED", "SAPControl-YELLOW", "SAPControl-GRAY");
int parent = alertNode.getParent();
assertEquals("SAPControl-RED", alertNode.getDescription());
assertEquals("SAPControl-RED", alertNode.getName());
assertEquals("SAPControl-RED", alertNode.getAlDescription());
assertEquals("}iQ_z;ntV", alertNode.getAnalyseTool());
assertEquals("SAPControl-GRAY", alertNode.getTid());
assertEquals(1, parent);
assertEquals(")<)xv=`", alertNode.getTime());
assertEquals("SAPControl-YELLOW", alertNode.getAlTime());


** It was a parseable test case! 
refined test name is: testCreateAlertNodeProperties
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: AlertNode alertNode = new AlertNode();
alertNode.setParent(1552);
AlertNode arg0 = new AlertNode();
boolean equals = alertNode.equals(arg0);
assertEquals(1552, alertNode.getParent());
assertFalse(equals);


** It was a parseable test case! 
refined test name is: testEqualsMethodForAlertNode
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: AlertNode alertNode = new AlertNode();
alertNode.setAlTime("2023-04-18T16:00:00Z");
String alTime = alertNode.getAlTime();
assertEquals("2023-04-18T16:00:00Z", alTime);


** It was a parseable test case! 
refined test name is: testGetAlTimeReturnsCorrectValue
* Compiling Tests
refined test name is: testGetAlTime
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: AlertNode alertNode = new AlertNode();
alertNode.setTid("A1B2C3D4E5F6G7H8I9J0K");
String tid = alertNode.getTid();
assertEquals("A1B2C3D4E5F6G7H8I9J0K", tid);


** It was a parseable test case! 
refined test name is: testGetTidSetsAndGetsTid
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Serializer serializer = AlertNode.getSerializer((String) null, (Class) null, (QName) null);
assertEquals("Axis SAX Mechanism", serializer.getMechanismType());


** It was a parseable test case! 
refined test name is: testGetSerializerWithNullParameters
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: TypeDesc typeDesc = AlertNode.getTypeDesc();
assertFalse(typeDesc.hasAttributes());


** It was a parseable test case! 
refined test name is: testNoAttributesOnAlertNodeTypeDesc
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: AlertNode arg0 = new AlertNode();
boolean equals = arg0.equals(arg0);
assertTrue(equals);


** It was a parseable test case! 
refined test name is: testEqualsSelf
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: AlertNode alertNode = new AlertNode();
boolean equals = alertNode.equals("This is a string value");
assertFalse(equals);


** It was a parseable test case! 
refined test name is: testEqualsWithDifferentValuesReturnsFalse
* Compiling Tests
refined test name is: testEqualsWithDifferentValuesReturnsFalse
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: AlertNode alertNode = new AlertNode();
alertNode.setName("Severe Weather Alert");
AlertNode arg0 = new AlertNode();
boolean equals = alertNode.equals(arg0);
assertFalse(equals);
assertFalse(arg0.equals((Object)alertNode));


** It was a parseable test case! 
refined test name is: testEqualsMethod
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: AlertNode arg0 = new AlertNode();
arg0.setName("k(iK2+");
AlertNode alertNode = new AlertNode();
boolean equals = alertNode.equals(arg0);
assertFalse(equals);
assertFalse(arg0.equals((Object)alertNode));


** It was a parseable test case! 
refined test name is: testEqualswithDifferentNames
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: VISIBLELEVEL arg6 = VISIBLELEVEL.value2;
AlertNode alertNode = new AlertNode("I{[+GuCB", (-1647606196), (STATECOLOR) null, "I{[+GuCB", "I{[+GuCB", "I{[+GuCB", arg6, (STATECOLOR) null, "SAPControl-EXPERT", "SAPControl-DEVELOPER", "SAPControl-EXPERT");
AlertNode arg0 = new AlertNode("I{[+GuCB", (-1647606196), (STATECOLOR) null, "SAPControl-DEVELOPER", "I{[+GuCB", "SAPControl-UNKNOWN", arg6, (STATECOLOR) null, "~[htdBk[SlOsLw![g.", "~[htdBk[SlOsLw![g.", "~[htdBk[SlOsLw![g.");
boolean equals = alertNode.equals(arg0);
assertEquals("SAPControl-DEVELOPER", arg0.getDescription());
assertFalse(equals);
assertEquals("SAPControl-DEVELOPER", alertNode.getAlTime());
assertEquals("I{[+GuCB", arg0.getTime());
assertEquals((-1647606196), arg0.getParent());
assertEquals("SAPControl-UNKNOWN", arg0.getAnalyseTool());
assertEquals("SAPControl-EXPERT", alertNode.getAlDescription());
assertEquals("I{[+GuCB", arg0.getName());
assertEquals("SAPControl-EXPERT", alertNode.getTid());


** It was a parseable test case! 
refined test name is: testEqualswithDifferentDescriptions
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: AlertNode arg0 = new AlertNode();
arg0.setDescription("type");
AlertNode alertNode = new AlertNode();
boolean equals = alertNode.equals(arg0);
assertEquals(0, alertNode.getParent());
assertFalse(equals);
assertFalse(arg0.equals((Object)alertNode));


** It was a parseable test case! 
refined test name is: testEqualityOfAlertNodesWithDifferentDescriptions
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: AlertNode alertNode = new AlertNode();
alertNode.setDescription("or#?+OW");
AlertNode arg0 = new AlertNode();
assertFalse(arg0.equals((Object)alertNode));

arg0.setDescription("or#?+OW");
boolean equals = alertNode.equals(arg0);
assertTrue(arg0.equals((Object)alertNode));
assertTrue(equals);


** It was a parseable test case! 
refined test name is: testEqualswithSameDescription
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: AlertNode alertNode = new AlertNode();
AlertNode arg0 = new AlertNode();
assertTrue(arg0.equals((Object)alertNode));

alertNode.setTime("m2JJul");
boolean equals = alertNode.equals(arg0);
assertFalse(arg0.equals((Object)alertNode));
assertFalse(equals);


** It was a parseable test case! 
refined test name is: testEqualsAlertNodesWithValidTime
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: AlertNode alertNode = new AlertNode();
AlertNode arg0 = new AlertNode();
assertTrue(arg0.equals((Object)alertNode));

arg0.setTime("~7PTsjr/31");
boolean equals = alertNode.equals(arg0);
assertFalse(equals);


** It was a parseable test case! 
refined test name is: testEqualsSameValuesReturnsTrue
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: AlertNode alertNode = new AlertNode();
AlertNode arg0 = new AlertNode();
arg0.setTime("m2JJul");
assertFalse(arg0.equals((Object)alertNode));

alertNode.setTime("m2JJul");
boolean equals = alertNode.equals(arg0);
assertTrue(arg0.equals((Object)alertNode));
assertTrue(equals);


** It was a parseable test case! 
refined test name is: testEqualsWithSameTime
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: AlertNode alertNode = new AlertNode();
AlertNode arg0 = new AlertNode();
assertTrue(arg0.equals((Object)alertNode));

alertNode.setAnalyseTool("tool1");
boolean equals = alertNode.equals(arg0);
assertFalse(equals);


** It was a parseable test case! 
refined test name is: testEqualsWithDifferentAnalyzeTools
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: AlertNode alertNode = new AlertNode();
AlertNode arg0 = new AlertNode();
arg0.setAnalyseTool("");
assertFalse(arg0.equals((Object)alertNode));

alertNode.setAnalyseTool("");
boolean equals = alertNode.equals(arg0);
assertTrue(arg0.equals((Object)alertNode));
assertTrue(equals);


** It was a parseable test case! 
refined test name is: testEqualsWithDifferentValuesForAnalyzeTool
* Compiling Tests
refined test name is: testEqualsWithDifferentAnalyzeTools
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: AlertNode arg0 = new AlertNode();
AlertNode alertNode = new AlertNode();
assertTrue(alertNode.equals((Object)arg0));

alertNode.setAlDescription("SAPControl-RED");
boolean equals = alertNode.equals(arg0);
assertFalse(equals);


** It was a parseable test case! 
refined test name is: testEqualsWithEmptyObjects
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: AlertNode alertNode = new AlertNode();
AlertNode arg0 = new AlertNode();
assertTrue(arg0.equals((Object)alertNode));

arg0.setAlDescription("U{");
boolean equals = alertNode.equals(arg0);
assertFalse(equals);


** It was a parseable test case! 
refined test name is: testEqualsWithSameDescription
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: AlertNode arg0 = new AlertNode();
arg0.setAlDescription("A]HOods@aKxL7k=i");
AlertNode alertNode = new AlertNode();
assertFalse(alertNode.equals((Object)arg0));

alertNode.setAlDescription("A]HOods@aKxL7k=i");
boolean equals = alertNode.equals(arg0);
assertTrue(alertNode.equals((Object)arg0));
assertTrue(equals);


** It was a parseable test case! 
refined test name is: testEqualsWhenNodesHaveSameDescription
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: AlertNode arg0 = new AlertNode();
AlertNode alertNode = new AlertNode();
assertTrue(alertNode.equals((Object)arg0));

alertNode.setAlTime("org.apache.axis.types.NegativeInteger");
boolean equals = alertNode.equals(arg0);
assertFalse(equals);


** It was a parseable test case! 
refined test name is: testEqualsEqualAlertNodesReturnsTrue
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: AlertNode alertNode = new AlertNode();
AlertNode arg0 = new AlertNode();
assertTrue(arg0.equals((Object)alertNode));

arg0.setAlTime("h]C=we#4*Y9mC6");
boolean equals = alertNode.equals(arg0);
assertFalse(equals);


** It was a parseable test case! 
refined test name is: testAlertNodeEquals
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: AlertNode arg0 = new AlertNode();
arg0.setAlTime("org.apache.axis.types.NegativeInteger");
AlertNode alertNode = new AlertNode();
assertFalse(alertNode.equals((Object)arg0));

alertNode.setAlTime("org.apache.axis.types.NegativeInteger");
boolean equals = alertNode.equals(arg0);
assertTrue(alertNode.equals((Object)arg0));
assertTrue(equals);


** It was a parseable test case! 
refined test name is: testEqualsSameValues
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: AlertNode arg0 = new AlertNode();
AlertNode alertNode = new AlertNode();
assertTrue(alertNode.equals((Object)arg0));

alertNode.setTid("");
boolean equals = alertNode.equals(arg0);
assertFalse(equals);


** It was a parseable test case! 
refined test name is: testEqualsMethod
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: AlertNode alertNode = new AlertNode();
AlertNode arg0 = new AlertNode();
assertTrue(arg0.equals((Object)alertNode));

arg0.setTid("multiRef");
boolean equals = alertNode.equals(arg0);
assertFalse(equals);


** It was a parseable test case! 
refined test name is: testEqualsWithSameInstance
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: AlertNode arg0 = new AlertNode();
AlertNode alertNode = new AlertNode();
alertNode.setTid("");
assertFalse(alertNode.equals((Object)arg0));

arg0.setTid("");
boolean equals = alertNode.equals(arg0);
assertTrue(alertNode.equals((Object)arg0));
assertTrue(equals);


** It was a parseable test case! 
refined test name is: testEqualsSameTid
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: STATECOLOR arg7 = STATECOLOR.value3;
VISIBLELEVEL arg6 = VISIBLELEVEL.value4;
AlertNode alertNode = new AlertNode("", (-1904), arg7, "SAPControl-GREEN", (String) null, "xH`;V61Szi", arg6, arg7, "", " does not have a constructor which takes one string parameter", "SAPControl-UNKNOWN");
alertNode.hashCode();
assertEquals("", alertNode.getAlDescription());
assertEquals("", alertNode.getName());
assertEquals((-1904), alertNode.getParent());
assertEquals("SAPControl-UNKNOWN", alertNode.getTid());
assertEquals("xH`;V61Szi", alertNode.getAnalyseTool());
assertEquals("SAPControl-GREEN", alertNode.getDescription());
assertEquals(" does not have a constructor which takes one string parameter", alertNode.getAlTime());


** It was a parseable test case! 
refined test name is: testAlertNodeConstructorWithOneStringParameter
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: AlertNode alertNode = new AlertNode();
String description = alertNode.getDescription();
assertNull(description);


** It was a parseable test case! 
refined test name is: testGetDescriptionReturnsNullForNewAlertNode
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: AlertNode alertNode = new AlertNode();
int parent = alertNode.getParent();
assertEquals(0, parent);


** It was a parseable test case! 
refined test name is: testGetParentReturnsRootNode
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: AlertNode alertNode = new AlertNode();
STATECOLOR highAlertValue = alertNode.getHighAlertValue();
assertNull(highAlertValue);


** It was a parseable test case! 
refined test name is: testGetHighAlertValueReturnsNull
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: AlertNode alertNode = new AlertNode();
VISIBLELEVEL visibleLevel = alertNode.getVisibleLevel();
assertNull(visibleLevel);


** It was a parseable test case! 
refined test name is: testGetVisibleLevelnullWhenNoVisibleLevelSet
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: AlertNode alertNode = new AlertNode();
String tid = alertNode.getTid();
assertNull(tid);


** It was a parseable test case! 
refined test name is: testGetTidReturnsNullWhenNoTidIsSet
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: AlertNode alertNode = new AlertNode();
String name = alertNode.getName();
assertNull(name);


** It was a parseable test case! 
refined test name is: testGetNameWithNoAlertReturnsNull
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: AlertNode alertNode = new AlertNode();
String alDescription = alertNode.getAlDescription();
assertNull(alDescription);


** It was a parseable test case! 
refined test name is: testGetAlDescriptionShouldReturnNull
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: AlertNode alertNode = new AlertNode();
STATECOLOR actualValue = alertNode.getActualValue();
assertNull(actualValue);


** It was a parseable test case! 
refined test name is: testGetActualValueReturnsNullWhenNoData
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: AlertNode alertNode = new AlertNode();
String alTime = alertNode.getAlTime();
assertNull(alTime);


** It was a parseable test case! 
refined test name is: testGetAlTimeReturnsNullWhenAlertIsNull
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: AlertNode alertNode = new AlertNode();
String time = alertNode.getTime();
assertNull(time);


** It was a parseable test case! 
refined test name is: testGetTimeReturnsNullWhenNoDataAvailableYet
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: AlertNode alertNode = new AlertNode();
String analyseTool = alertNode.getAnalyseTool();
assertNull(analyseTool);


** It was a parseable test case! 
refined test name is: testGetAnalyseToolReturnsNullWhenAlertIsNotPresent
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: AlertNode alertNode = new AlertNode();
STATECOLOR arg0 = STATECOLOR.value2;
alertNode.setActualValue(arg0);
STATECOLOR actualValue = alertNode.getActualValue();
assertEquals("SAPControl-GREEN", actualValue.getValue());


** It was a parseable test case! 
refined test name is: testAlertNodeGetActualValue
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: STATECOLOR arg7 = STATECOLOR.value1;
VISIBLELEVEL arg6 = VISIBLELEVEL.value3;
AlertNode alertNode = new AlertNode("`J.}{\"", (-1), arg7, "HGYhtO]{z?oR", "T*&0Vwowc-dW6]", "alDescription", arg6, arg7, "", "F@YLZz_B#Q\"Fyp", "ptR");
String alDescription = alertNode.getAlDescription();
assertEquals("alDescription", alertNode.getAnalyseTool());
assertEquals("HGYhtO]{z?oR", alertNode.getDescription());
assertEquals("ptR", alertNode.getTid());
assertEquals("", alDescription);
assertEquals("`J.}{\"", alertNode.getName());
assertEquals((-1), alertNode.getParent());
assertEquals("F@YLZz_B#Q\"Fyp", alertNode.getAlTime());
assertEquals("T*&0Vwowc-dW6]", alertNode.getTime());


** It was a parseable test case! 
refined test name is: testCreateAndInitializeAlertNode
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: AlertNode alertNode = new AlertNode();
alertNode.setAlTime("");
String alTime = alertNode.getAlTime();
assertEquals("", alTime);


** It was a parseable test case! 
refined test name is: testSetAlTime
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: AlertNode alertNode = new AlertNode();
alertNode.setAnalyseTool("");
String analyseTool = alertNode.getAnalyseTool();
assertEquals("", analyseTool);


** It was a parseable test case! 
refined test name is: testSetAnalyseTool
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: STATECOLOR arg7 = STATECOLOR.value4;
VISIBLELEVEL arg6 = VISIBLELEVEL.fromString("SAPControl-YELLOW");
AlertNode alertNode = new AlertNode("zg^6!'16qMs]`", (-3668), arg7, "SAPControl-YELLOW", "SAPControl-YELLOW", "SAPControl-GRAY", arg6, arg7, "SAPControl-UNKNOWN", "SAPControl-DEVELOPER", "SAPControl-YELLOW");
alertNode.getAnalyseTool();

** It was a parseable test case! 
refined test name is: testGetAnalyzeToolShouldReturnYellow
* Compiling Tests
refined test name is: testGetAnalyzeToolreturnsCorrectValue
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: AlertNode alertNode = new AlertNode();
alertNode.setDescription("");
String description = alertNode.getDescription();
assertEquals("", description);


** It was a parseable test case! 
refined test name is: testDefaultDescriptionIsEmptyString
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: STATECOLOR sTATECOLOR = STATECOLOR.value1;
try { 
  VISIBLELEVEL.fromString("");
  fail("Expecting exception: IllegalArgumentException");

} catch(IllegalArgumentException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.sap.managementconsole.soap.axis.sapcontrol.VISIBLELEVEL", e);
}


** It was a parseable test case! 
refined test name is: testFromStringEmptyThrowsIllegalArgumentException
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: AlertNode alertNode = new AlertNode();
alertNode.setName("");
String name = alertNode.getName();
assertEquals("", name);


** It was a parseable test case! 
refined test name is: testGetDefaultNameReturnsEmptyString
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: AlertNode alertNode = new AlertNode();
alertNode.setName(")\"Z'rZ1|ml ");
String name = alertNode.getName();
assertEquals(")\"Z'rZ1|ml ", name);


** It was a parseable test case! 
refined test name is: testSetAndGetName
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: STATECOLOR arg7 = STATECOLOR.value2;
VISIBLELEVEL arg6 = new VISIBLELEVEL("SAPControl-RED");
AlertNode alertNode = new AlertNode("%N#%[V&n+E-ABgD-1`I", 0, arg7, "~3tb3v9wrg", "%N#%[V&n+E-ABgD-1`I", "", arg6, arg7, "", "SAPControl-RED", "AlDescription");
alertNode.setParent((-1148));
int parent = alertNode.getParent();
assertEquals((-1148), parent);


** It was a parseable test case! 
refined test name is: testSetNegativeParent
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: AlertNode alertNode = new AlertNode();
alertNode.setTid("");
String tid = alertNode.getTid();
assertEquals("", tid);


** It was a parseable test case! 
refined test name is: testSetTidToEmptyString
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: STATECOLOR arg7 = STATECOLOR.value4;
VISIBLELEVEL arg6 = new VISIBLELEVEL("SAPControl-YELLOW");
AlertNode alertNode = new AlertNode("", (-2198), arg7, "Mk#AdT.%@n", "", "SAPControl-RED", arg6, arg7, "SAPControl-DEVELOPER", "SAPControl-GREEN", "9>e;_3n-'Q2");
String time = alertNode.getTime();
assertEquals("SAPControl-GREEN", alertNode.getAlTime());
assertEquals("", time);
assertEquals("SAPControl-RED", alertNode.getAnalyseTool());
assertEquals("SAPControl-DEVELOPER", alertNode.getAlDescription());
assertEquals("9>e;_3n-'Q2", alertNode.getTid());
assertEquals((-2198), alertNode.getParent());
assertEquals("", alertNode.getName());
assertEquals("Mk#AdT.%@n", alertNode.getDescription());


** It was a parseable test case! 
refined test name is: testGetTimeFromAlertNode
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: AlertNode alertNode = new AlertNode();
alertNode.setTime("2023-02-28T14:59:59+05:30");
String time = alertNode.getTime();
assertEquals("2023-02-28T14:59:59+05:30", time);


** It was a parseable test case! 
refined test name is: testSetAndGetTime
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: STATECOLOR arg7 = STATECOLOR.value4;
VISIBLELEVEL arg6 = VISIBLELEVEL.value3;
AlertNode alertNode = new AlertNode("SAPControl-RED", 1, arg7, "SAPControl-RED", ")<)xv=`", "}iQ_z;ntV", arg6, arg7, "SAPControl-RED", "SAPControl-YELLOW", "SAPControl-GRAY");
alertNode.getVisibleLevel();
assertEquals("SAPControl-YELLOW", alertNode.getAlTime());
assertEquals("SAPControl-RED", alertNode.getAlDescription());
assertEquals("SAPControl-RED", alertNode.getName());
assertEquals(")<)xv=`", alertNode.getTime());
assertEquals(1, alertNode.getParent());
assertEquals("SAPControl-RED", alertNode.getDescription());
assertEquals("}iQ_z;ntV", alertNode.getAnalyseTool());
assertEquals("SAPControl-GRAY", alertNode.getTid());


** It was a parseable test case! 
refined test name is: testGettersAndSetters
* Compiling Tests
refined test name is: testAlertNodeGettersAndSetters
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 19:39:30.242 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/tmp/EvoSuite_pathingJar4728128269035725661.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 19:39:30.272 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar4728128269035725661.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 19:39:30.454 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/tmp/EvoSuite_pathingJar4728128269035725661.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 19:39:30.456 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar4728128269035725661.jar
[MASTER] 19:39:30.623 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/tmp/EvoSuite_pathingJar4728128269035725661.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 19:39:30.626 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar4728128269035725661.jar
[MASTER] 19:39:30.790 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/tmp/EvoSuite_pathingJar4728128269035725661.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 19:39:30.793 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar4728128269035725661.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 19:39:30.960 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/tmp/EvoSuite_pathingJar4728128269035725661.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 19:39:30.962 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar4728128269035725661.jar
[MASTER] 19:39:31.126 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/tmp/EvoSuite_pathingJar4728128269035725661.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 19:39:31.128 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar4728128269035725661.jar
[MASTER] 19:39:31.281 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/tmp/EvoSuite_pathingJar4728128269035725661.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 19:39:31.284 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar4728128269035725661.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 19:39:31.450 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/tmp/EvoSuite_pathingJar4728128269035725661.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 19:39:31.453 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar4728128269035725661.jar
[MASTER] 19:39:31.612 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/tmp/EvoSuite_pathingJar4728128269035725661.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 19:39:31.615 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar4728128269035725661.jar
[MASTER] 19:39:31.800 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/tmp/EvoSuite_pathingJar4728128269035725661.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 19:39:31.802 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar4728128269035725661.jar
[MASTER] 19:39:31.958 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/tmp/EvoSuite_pathingJar4728128269035725661.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 19:39:31.960 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar4728128269035725661.jar
[MASTER] 19:39:32.103 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/tmp/EvoSuite_pathingJar4728128269035725661.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 19:39:32.105 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar4728128269035725661.jar
[MASTER] 19:39:32.239 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/tmp/EvoSuite_pathingJar4728128269035725661.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 19:39:32.243 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar4728128269035725661.jar
[MASTER] 19:39:32.454 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/tmp/EvoSuite_pathingJar4728128269035725661.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 19:39:32.458 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar4728128269035725661.jar
[MASTER] 19:39:32.622 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/tmp/EvoSuite_pathingJar4728128269035725661.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 19:39:32.624 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar4728128269035725661.jar
[MASTER] 19:39:32.788 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/tmp/EvoSuite_pathingJar4728128269035725661.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 19:39:32.791 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar4728128269035725661.jar
[MASTER] 19:39:32.951 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/tmp/EvoSuite_pathingJar4728128269035725661.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 19:39:32.953 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar4728128269035725661.jar
[MASTER] 19:39:33.108 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/tmp/EvoSuite_pathingJar4728128269035725661.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 19:39:33.110 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar4728128269035725661.jar
[MASTER] 19:39:33.267 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/tmp/EvoSuite_pathingJar4728128269035725661.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 19:39:33.270 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar4728128269035725661.jar
[MASTER] 19:39:33.423 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/tmp/EvoSuite_pathingJar4728128269035725661.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 19:39:33.427 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar4728128269035725661.jar
[MASTER] 19:39:33.586 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/tmp/EvoSuite_pathingJar4728128269035725661.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 19:39:33.589 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar4728128269035725661.jar
[MASTER] 19:39:33.747 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/tmp/EvoSuite_pathingJar4728128269035725661.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 19:39:33.750 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar4728128269035725661.jar
[MASTER] 19:39:33.958 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/tmp/EvoSuite_pathingJar4728128269035725661.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 19:39:33.960 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar4728128269035725661.jar
[MASTER] 19:39:34.132 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/tmp/EvoSuite_pathingJar4728128269035725661.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 19:39:34.134 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar4728128269035725661.jar
[MASTER] 19:39:34.295 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/tmp/EvoSuite_pathingJar4728128269035725661.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 19:39:34.297 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar4728128269035725661.jar
[MASTER] 19:39:34.447 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/tmp/EvoSuite_pathingJar4728128269035725661.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 19:39:34.449 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar4728128269035725661.jar
[MASTER] 19:39:34.606 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/tmp/EvoSuite_pathingJar4728128269035725661.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 19:39:34.608 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar4728128269035725661.jar
[MASTER] 19:39:34.759 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/tmp/EvoSuite_pathingJar4728128269035725661.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 19:39:34.762 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar4728128269035725661.jar
[MASTER] 19:39:34.963 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/tmp/EvoSuite_pathingJar4728128269035725661.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 19:39:34.966 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar4728128269035725661.jar
[MASTER] 19:39:35.139 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/tmp/EvoSuite_pathingJar4728128269035725661.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 19:39:35.142 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar4728128269035725661.jar
[MASTER] 19:39:35.313 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/tmp/EvoSuite_pathingJar4728128269035725661.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 19:39:35.316 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar4728128269035725661.jar
[MASTER] 19:39:35.526 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/tmp/EvoSuite_pathingJar4728128269035725661.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 19:39:35.530 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar4728128269035725661.jar
[MASTER] 19:39:35.663 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/tmp/EvoSuite_pathingJar4728128269035725661.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 19:39:35.665 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar4728128269035725661.jar
[MASTER] 19:39:35.790 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/tmp/EvoSuite_pathingJar4728128269035725661.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 19:39:35.792 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar4728128269035725661.jar
[MASTER] 19:39:35.922 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/tmp/EvoSuite_pathingJar4728128269035725661.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 19:39:35.925 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar4728128269035725661.jar
[MASTER] 19:39:36.134 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/tmp/EvoSuite_pathingJar4728128269035725661.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 19:39:36.137 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar4728128269035725661.jar
[MASTER] 19:39:36.335 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/tmp/EvoSuite_pathingJar4728128269035725661.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 19:39:36.338 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar4728128269035725661.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 19:39:36.527 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/tmp/EvoSuite_pathingJar4728128269035725661.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 19:39:36.530 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar4728128269035725661.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 19:39:36.692 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/tmp/EvoSuite_pathingJar4728128269035725661.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 19:39:36.695 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar4728128269035725661.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 19:39:36.865 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/tmp/EvoSuite_pathingJar4728128269035725661.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 19:39:36.870 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar4728128269035725661.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 19:39:37.033 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/tmp/EvoSuite_pathingJar4728128269035725661.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 19:39:37.036 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar4728128269035725661.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 19:39:37.198 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/tmp/EvoSuite_pathingJar4728128269035725661.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 19:39:37.200 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar4728128269035725661.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 19:39:37.424 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/tmp/EvoSuite_pathingJar4728128269035725661.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 19:39:37.429 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar4728128269035725661.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 19:39:37.655 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/tmp/EvoSuite_pathingJar4728128269035725661.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 19:39:37.658 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar4728128269035725661.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 19:39:37.857 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/tmp/EvoSuite_pathingJar4728128269035725661.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 19:39:37.860 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar4728128269035725661.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 19:39:38.069 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/tmp/EvoSuite_pathingJar4728128269035725661.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 19:39:38.072 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar4728128269035725661.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 19:39:38.259 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/tmp/EvoSuite_pathingJar4728128269035725661.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 19:39:38.263 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar4728128269035725661.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 19:39:38.491 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/tmp/EvoSuite_pathingJar4728128269035725661.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 19:39:38.494 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar4728128269035725661.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 19:39:38.700 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/tmp/EvoSuite_pathingJar4728128269035725661.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 19:39:38.703 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar4728128269035725661.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 19:39:38.895 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/tmp/EvoSuite_pathingJar4728128269035725661.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 19:39:38.898 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar4728128269035725661.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 19:39:39.093 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/tmp/EvoSuite_pathingJar4728128269035725661.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 19:39:39.095 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar4728128269035725661.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 19:39:39.833 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/tmp/EvoSuite_pathingJar4728128269035725661.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 19:39:39.838 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar4728128269035725661.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 19:39:40.060 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/tmp/EvoSuite_pathingJar4728128269035725661.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 19:39:40.063 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar4728128269035725661.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 19:39:40.264 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/tmp/EvoSuite_pathingJar4728128269035725661.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 19:39:40.267 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar4728128269035725661.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 19:39:40.454 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/tmp/EvoSuite_pathingJar4728128269035725661.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 19:39:40.457 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar4728128269035725661.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 19:39:40.667 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/tmp/EvoSuite_pathingJar4728128269035725661.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 19:39:40.670 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar4728128269035725661.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 19:39:40.846 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/tmp/EvoSuite_pathingJar4728128269035725661.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 19:39:40.849 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar4728128269035725661.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 19:39:40.997 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/tmp/EvoSuite_pathingJar4728128269035725661.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 19:39:40.999 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar4728128269035725661.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 2 called: 0 to improve: false
** Write a test suite: 7 called: 1 to improve: false
** Write a test suite: 12 called: 2 to improve: false
** Write a test suite: 22 called: 3 to improve: false
** Write a test suite: 48 called: 4 to improve: false
** Write a test suite: 57 called: 5 to improve: false
[MASTER] 19:39:41.472 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/tmp/EvoSuite_pathingJar4728128269035725661.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 19:39:41.476 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar4728128269035725661.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
** Write a test suite: 9 called: 1 to improve: false
** Write a test suite: 35 called: 2 to improve: false
** Write a test suite: 45 called: 3 to improve: false
** Write a test suite: 50 called: 4 to improve: false
** Write a test suite: 55 called: 5 to improve: false
[MASTER] 19:39:41.973 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/tmp/EvoSuite_pathingJar4728128269035725661.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 19:39:41.976 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar4728128269035725661.jar
* Writing tests to file
* Writing JUnit test case 'AlertNode_ESTest' to evosuite-tests
** Write a test suite: 0 called: 0 to improve: false
** Write a test suite: 9 called: 1 to improve: false
** Write a test suite: 35 called: 2 to improve: false
** Write a test suite: 45 called: 3 to improve: false
** Write a test suite: 50 called: 4 to improve: false
** Write a test suite: 55 called: 5 to improve: false
* Done!

* Computation finished
