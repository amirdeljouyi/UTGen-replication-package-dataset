* EvoSuite 1.2.1-SNAPSHOT
* Going to generate test cases for class: com.sap.engine.services.dc.wsgate.DeployWSServiceLocator
* Starting Client-0
* Properties loaded from /home/ubuntu/UTestGen/Evaluation/getting_results/dataset/SF110/101_netweaver/evosuite-files/evosuite.properties
* Connecting to master process on port 14024
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 18:33:59.481 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 18:33:59.482 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 18:33:59.483 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
[MASTER] 18:33:59.488 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 18:33:59.490 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 18:33:59.491 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
* Finished analyzing classpath
* Generating tests for class com.sap.engine.services.dc.wsgate.DeployWSServiceLocator
* Test criteria:
  - Branch Coverage
  - Line Coverage
  - Method-Output Coverage
  - Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 137
* Using seed 1709231635961
[Progress:>                             0%] [Cov:>                                  0%]* Starting evolution
* Initial Number of Goals in DynaMOSA = 76 / 137
[Progress:>                             0%] [Cov:========>                          25%][Progress:>                             1%] [Cov:=================>                 51%][Progress:>                             1%] [Cov:===================>               56%][Progress:>                             2%] [Cov:====================>              58%][Progress:>                             2%] [Cov:=====================>             61%][Progress:>                             3%] [Cov:======================>            64%][Progress:>                             3%] [Cov:======================>            64%][Progress:>                             3%] [Cov:=======================>           66%][Progress:>                             3%] [Cov:========================>          69%][Progress:=>                            4%] [Cov:=========================>         72%][Progress:=>                            4%] [Cov:==========================>        75%][Progress:=>                            4%] [Cov:==========================>        75%][Progress:=>                            4%] [Cov:==========================>        75%][Progress:=>                            5%] [Cov:==========================>        75%][Progress:=>                            5%] [Cov:==========================>        75%][Progress:=>                            5%] [Cov:==========================>        75%][Progress:=>                            6%] [Cov:==========================>        75%][Progress:=>                            6%] [Cov:==========================>        75%][Progress:=>                            6%] [Cov:==========================>        75%][Progress:==>                           7%] [Cov:==========================>        75%][Progress:==>                           7%] [Cov:==========================>        77%][Progress:==>                           7%] [Cov:==========================>        77%][Progress:==>                           8%] [Cov:==========================>        77%][Progress:==>                           9%] [Cov:==========================>        77%][Progress:==>                           9%] [Cov:==========================>        77%][Progress:==>                           9%] [Cov:==========================>        77%][Progress:==>                           9%] [Cov:==========================>        77%][Progress:==>                           9%] [Cov:==========================>        77%][Progress:==>                           9%] [Cov:==========================>        77%][Progress:===>                          10%] [Cov:==========================>        77%][Progress:===>                          10%] [Cov:==========================>        77%][Progress:===>                          10%] [Cov:==========================>        77%][Progress:===>                          10%] [Cov:==========================>        77%][Progress:===>                          10%] [Cov:==========================>        77%][Progress:===>                          11%] [Cov:==========================>        77%][Progress:===>                          11%] [Cov:==========================>        77%][Progress:===>                          11%] [Cov:==========================>        77%][Progress:===>                          11%] [Cov:==========================>        77%][Progress:===>                          12%] [Cov:==========================>        77%][Progress:===>                          12%] [Cov:==========================>        77%][Progress:===>                          12%] [Cov:==========================>        77%][Progress:===>                          12%] [Cov:==========================>        77%][Progress:===>                          13%] [Cov:==========================>        77%][Progress:===>                          13%] [Cov:==========================>        77%][Progress:===>                          13%] [Cov:==========================>        77%][Progress:===>                          13%] [Cov:==========================>        77%][Progress:=====>                        18%] [Cov:==========================>        77%][Progress:=====>                        19%] [Cov:==========================>        77%][Progress:=====>                        19%] [Cov:==========================>        77%][Progress:=====>                        19%] [Cov:==========================>        77%][Progress:=====>                        19%] [Cov:==========================>        77%][Progress:=====>                        19%] [Cov:==========================>        77%][Progress:======>                       20%] [Cov:==========================>        77%][Progress:======>                       20%] [Cov:==========================>        77%][Progress:======>                       20%] [Cov:==========================>        77%][Progress:======>                       20%] [Cov:==========================>        77%][Progress:======>                       20%] [Cov:==========================>        77%][Progress:======>                       21%] [Cov:==========================>        77%][Progress:======>                       21%] [Cov:==========================>        77%][Progress:======>                       21%] [Cov:==========================>        77%][Progress:======>                       21%] [Cov:==========================>        77%][Progress:======>                       22%] [Cov:==========================>        77%][Progress:======>                       22%] [Cov:==========================>        77%][Progress:======>                       22%] [Cov:==========================>        77%][Progress:======>                       22%] [Cov:===========================>       78%][Progress:======>                       23%] [Cov:===========================>       78%][Progress:======>                       23%] [Cov:===========================>       78%][Progress:======>                       23%] [Cov:===========================>       78%][Progress:======>                       23%] [Cov:===========================>       78%][Progress:======>                       23%] [Cov:===========================>       78%][Progress:=======>                      24%] [Cov:===========================>       78%][Progress:=======>                      24%] [Cov:===========================>       78%][Progress:=======>                      24%] [Cov:===========================>       78%][Progress:=======>                      24%] [Cov:===========================>       78%][Progress:=======>                      24%] [Cov:===========================>       78%][Progress:=======>                      25%] [Cov:===========================>       78%][Progress:=======>                      25%] [Cov:===========================>       78%][Progress:=======>                      25%] [Cov:===========================>       78%][Progress:=======>                      25%] [Cov:===========================>       78%][Progress:=======>                      25%] [Cov:===========================>       78%][Progress:=======>                      26%] [Cov:===========================>       78%][Progress:=======>                      26%] [Cov:===========================>       78%][Progress:=======>                      26%] [Cov:===========================>       78%][Progress:=======>                      26%] [Cov:===========================>       78%][Progress:=======>                      26%] [Cov:===========================>       78%][Progress:========>                     27%] [Cov:===========================>       78%][Progress:========>                     27%] [Cov:===========================>       78%][Progress:========>                     27%] [Cov:===========================>       78%][Progress:========>                     27%] [Cov:===========================>       78%][Progress:========>                     28%] [Cov:===========================>       78%][Progress:========>                     28%] [Cov:===========================>       78%][Progress:========>                     28%] [Cov:===========================>       78%][Progress:========>                     28%] [Cov:===========================>       78%][Progress:========>                     28%] [Cov:===========================>       78%][Progress:========>                     28%] [Cov:===========================>       78%][Progress:========>                     29%] [Cov:===========================>       78%][Progress:========>                     29%] [Cov:===========================>       78%][Progress:========>                     29%] [Cov:===========================>       78%][Progress:========>                     29%] [Cov:============================>      80%][Progress:========>                     29%] [Cov:============================>      80%][Progress:========>                     29%] [Cov:============================>      80%][Progress:=========>                    30%] [Cov:============================>      80%][Progress:=========>                    30%] [Cov:============================>      80%][Progress:=========>                    30%] [Cov:============================>      80%][Progress:=========>                    30%] [Cov:============================>      80%][Progress:=========>                    30%] [Cov:============================>      80%][Progress:=========>                    31%] [Cov:============================>      80%][Progress:=========>                    31%] [Cov:============================>      80%][Progress:=========>                    31%] [Cov:============================>      80%][Progress:=========>                    31%] [Cov:============================>      80%][Progress:=========>                    31%] [Cov:============================>      80%][Progress:=========>                    32%] [Cov:============================>      80%][Progress:=========>                    32%] [Cov:============================>      80%][Progress:=========>                    32%] [Cov:============================>      80%][Progress:=========>                    32%] [Cov:============================>      80%][Progress:=========>                    32%] [Cov:============================>      80%][Progress:=========>                    33%] [Cov:============================>      80%][Progress:=========>                    33%] [Cov:============================>      80%][Progress:=========>                    33%] [Cov:============================>      80%][Progress:=========>                    33%] [Cov:============================>      80%][Progress:==========>                   34%] [Cov:============================>      80%][Progress:==========>                   34%] [Cov:============================>      80%][Progress:==========>                   34%] [Cov:============================>      80%][Progress:==========>                   34%] [Cov:============================>      80%][Progress:==========>                   35%] [Cov:============================>      80%][Progress:==========>                   35%] [Cov:============================>      80%][Progress:==========>                   35%] [Cov:============================>      80%][Progress:==========>                   35%] [Cov:============================>      80%][Progress:==========>                   35%] [Cov:============================>      80%][Progress:==========>                   36%] [Cov:============================>      80%][Progress:==========>                   36%] [Cov:============================>      80%][Progress:==========>                   36%] [Cov:============================>      80%][Progress:==========>                   36%] [Cov:============================>      80%][Progress:==========>                   36%] [Cov:============================>      80%][Progress:===========>                  37%] [Cov:============================>      80%][Progress:===========>                  37%] [Cov:============================>      80%][Progress:===========>                  37%] [Cov:============================>      80%][Progress:===========>                  37%] [Cov:============================>      80%][Progress:===========>                  37%] [Cov:============================>      80%][Progress:===========>                  38%] [Cov:============================>      80%][Progress:===========>                  38%] [Cov:============================>      80%][Progress:===========>                  38%] [Cov:============================>      80%][Progress:===========>                  38%] [Cov:============================>      80%][Progress:===========>                  38%] [Cov:============================>      80%][Progress:===========>                  39%] [Cov:============================>      80%][Progress:===========>                  39%] [Cov:============================>      80%][Progress:===========>                  39%] [Cov:============================>      80%][Progress:=============>                44%] [Cov:============================>      80%][Progress:=============>                44%] [Cov:============================>      80%][Progress:=============>                44%] [Cov:============================>      80%][Progress:=============>                45%] [Cov:============================>      80%][Progress:=============>                45%] [Cov:============================>      80%][Progress:=============>                45%] [Cov:============================>      80%][Progress:=============>                45%] [Cov:============================>      80%][Progress:=============>                45%] [Cov:============================>      80%][Progress:=============>                46%] [Cov:============================>      80%][Progress:=============>                46%] [Cov:============================>      80%][Progress:=============>                46%] [Cov:============================>      80%][Progress:=============>                46%] [Cov:============================>      80%][Progress:=============>                46%] [Cov:============================>      80%][Progress:==============>               47%] [Cov:============================>      80%][Progress:==============>               47%] [Cov:============================>      80%][Progress:==============>               47%] [Cov:============================>      80%][Progress:==============>               47%] [Cov:============================>      80%][Progress:==============>               48%] [Cov:============================>      80%][Progress:==============>               48%] [Cov:============================>      80%][Progress:==============>               48%] [Cov:============================>      80%][Progress:==============>               48%] [Cov:============================>      80%][Progress:==============>               48%] [Cov:============================>      80%][Progress:==============>               49%] [Cov:============================>      80%][Progress:==============>               49%] [Cov:============================>      80%][Progress:==============>               49%] [Cov:============================>      80%][Progress:==============>               49%] [Cov:============================>      80%][Progress:==============>               49%] [Cov:============================>      80%][Progress:===============>              50%] [Cov:============================>      80%][Progress:===============>              50%] [Cov:============================>      80%][Progress:===============>              50%] [Cov:============================>      80%][Progress:===============>              50%] [Cov:============================>      80%][Progress:===============>              50%] [Cov:============================>      80%][Progress:===============>              51%] [Cov:============================>      80%][Progress:===============>              51%] [Cov:============================>      80%][Progress:===============>              51%] [Cov:============================>      80%][Progress:===============>              51%] [Cov:============================>      80%][Progress:===============>              51%] [Cov:============================>      80%][Progress:===============>              51%] [Cov:============================>      80%][Progress:===============>              52%] [Cov:============================>      80%][Progress:===============>              52%] [Cov:============================>      80%][Progress:===============>              52%] [Cov:============================>      80%][Progress:===============>              52%] [Cov:============================>      80%][Progress:===============>              53%] [Cov:============================>      80%][Progress:===============>              53%] [Cov:============================>      80%][Progress:===============>              53%] [Cov:============================>      80%][Progress:===============>              53%] [Cov:============================>      80%][Progress:===============>              53%] [Cov:============================>      80%][Progress:================>             54%] [Cov:============================>      80%][Progress:================>             54%] [Cov:============================>      80%][Progress:================>             54%] [Cov:============================>      80%][Progress:================>             54%] [Cov:============================>      80%][Progress:================>             54%] [Cov:============================>      80%][Progress:================>             55%] [Cov:============================>      80%][Progress:================>             55%] [Cov:============================>      80%][Progress:================>             55%] [Cov:============================>      80%][Progress:================>             55%] [Cov:============================>      80%][Progress:================>             55%] [Cov:============================>      80%][Progress:================>             55%] [Cov:============================>      80%][Progress:================>             56%] [Cov:============================>      80%][Progress:================>             56%] [Cov:============================>      80%][Progress:================>             56%] [Cov:============================>      80%][Progress:================>             56%] [Cov:============================>      80%][Progress:=================>            57%] [Cov:============================>      80%][Progress:=================>            57%] [Cov:============================>      80%][Progress:=================>            57%] [Cov:============================>      80%][Progress:=================>            57%] [Cov:============================>      80%][Progress:=================>            58%] [Cov:============================>      80%][Progress:=================>            58%] [Cov:============================>      80%][Progress:=================>            58%] [Cov:============================>      80%][Progress:=================>            58%] [Cov:============================>      80%][Progress:=================>            59%] [Cov:============================>      80%][Progress:=================>            59%] [Cov:============================>      80%][Progress:=================>            59%] [Cov:============================>      80%][Progress:=================>            59%] [Cov:============================>      80%][Progress:==================>           60%] [Cov:============================>      80%][Progress:==================>           60%] [Cov:============================>      80%][Progress:==================>           60%] [Cov:============================>      80%][Progress:==================>           60%] [Cov:============================>      80%][Progress:==================>           60%] [Cov:============================>      80%][Progress:==================>           60%] [Cov:============================>      80%][Progress:==================>           61%] [Cov:============================>      80%][Progress:==================>           61%] [Cov:============================>      80%][Progress:==================>           61%] [Cov:============================>      80%][Progress:==================>           61%] [Cov:============================>      80%][Progress:==================>           62%] [Cov:============================>      80%][Progress:==================>           62%] [Cov:============================>      80%][Progress:==================>           62%] [Cov:============================>      80%][Progress:==================>           62%] [Cov:============================>      80%][Progress:==================>           62%] [Cov:============================>      80%][Progress:==================>           63%] [Cov:============================>      80%][Progress:==================>           63%] [Cov:============================>      80%][Progress:==================>           63%] [Cov:============================>      80%][Progress:==================>           63%] [Cov:============================>      80%][Progress:==================>           63%] [Cov:============================>      80%][Progress:===================>          64%] [Cov:============================>      80%][Progress:===================>          64%] [Cov:============================>      80%][Progress:===================>          64%] [Cov:============================>      80%][Progress:===================>          64%] [Cov:============================>      80%][Progress:===================>          64%] [Cov:============================>      80%][Progress:===================>          65%] [Cov:============================>      80%][Progress:===================>          65%] [Cov:============================>      80%][Progress:===================>          65%] [Cov:============================>      80%][Progress:===================>          65%] [Cov:============================>      80%][Progress:===================>          65%] [Cov:============================>      80%][Progress:===================>          65%] [Cov:============================>      80%][Progress:===================>          66%] [Cov:============================>      80%][Progress:===================>          66%] [Cov:============================>      80%][Progress:===================>          66%] [Cov:============================>      80%][Progress:===================>          66%] [Cov:============================>      80%][Progress:===================>          66%] [Cov:============================>      80%][Progress:====================>         67%] [Cov:============================>      80%][Progress:====================>         67%] [Cov:============================>      80%][Progress:====================>         67%] [Cov:============================>      80%][Progress:====================>         67%] [Cov:============================>      80%][Progress:====================>         67%] [Cov:============================>      80%][Progress:====================>         68%] [Cov:============================>      80%][Progress:====================>         68%] [Cov:============================>      80%][Progress:====================>         68%] [Cov:============================>      80%][Progress:====================>         68%] [Cov:============================>      80%][Progress:====================>         68%] [Cov:============================>      80%][Progress:====================>         69%] [Cov:============================>      80%][Progress:====================>         69%] [Cov:============================>      80%][Progress:====================>         69%] [Cov:============================>      80%][Progress:====================>         69%] [Cov:============================>      80%][Progress:====================>         69%] [Cov:============================>      80%][Progress:====================>         69%] [Cov:============================>      80%][Progress:====================>         69%] [Cov:============================>      80%][Progress:=====================>        70%] [Cov:============================>      80%][Progress:=====================>        70%] [Cov:============================>      80%][Progress:=====================>        70%] [Cov:============================>      80%][Progress:=====================>        70%] [Cov:============================>      80%][Progress:=====================>        70%] [Cov:============================>      80%][Progress:=====================>        70%] [Cov:============================>      80%][Progress:=====================>        71%] [Cov:============================>      80%][Progress:=====================>        71%] [Cov:============================>      80%][Progress:=====================>        71%] [Cov:============================>      80%][Progress:=====================>        71%] [Cov:============================>      80%][Progress:=====================>        71%] [Cov:============================>      80%][Progress:=====================>        72%] [Cov:============================>      80%][Progress:=====================>        72%] [Cov:============================>      80%][Progress:=====================>        72%] [Cov:============================>      80%][Progress:=====================>        72%] [Cov:============================>      80%][Progress:=====================>        72%] [Cov:============================>      80%][Progress:=====================>        73%] [Cov:============================>      80%][Progress:=====================>        73%] [Cov:============================>      80%][Progress:=====================>        73%] [Cov:============================>      80%][Progress:=====================>        73%] [Cov:============================>      80%][Progress:======================>       74%] [Cov:============================>      80%][Progress:======================>       74%] [Cov:============================>      80%][Progress:======================>       74%] [Cov:============================>      80%][Progress:======================>       74%] [Cov:============================>      80%][Progress:======================>       75%] [Cov:============================>      80%][Progress:======================>       75%] [Cov:============================>      80%][Progress:======================>       75%] [Cov:============================>      80%][Progress:======================>       75%] [Cov:============================>      80%][Progress:======================>       76%] [Cov:============================>      80%][Progress:======================>       76%] [Cov:============================>      80%][Progress:======================>       76%] [Cov:============================>      80%][Progress:======================>       76%] [Cov:============================>      80%][Progress:=======================>      77%] [Cov:============================>      80%][Progress:=======================>      77%] [Cov:============================>      80%][Progress:=======================>      77%] [Cov:============================>      80%][Progress:=======================>      77%] [Cov:============================>      80%][Progress:=======================>      78%] [Cov:============================>      80%][Progress:=======================>      78%] [Cov:============================>      80%][Progress:=======================>      78%] [Cov:============================>      80%][Progress:=======================>      79%] [Cov:============================>      80%][Progress:=======================>      79%] [Cov:============================>      80%][Progress:=======================>      79%] [Cov:============================>      80%][Progress:=======================>      79%] [Cov:============================>      80%][Progress:=======================>      79%] [Cov:============================>      80%][Progress:========================>     80%] [Cov:============================>      80%][Progress:========================>     80%] [Cov:============================>      80%][Progress:========================>     80%] [Cov:============================>      80%][Progress:========================>     80%] [Cov:============================>      80%][Progress:========================>     80%] [Cov:============================>      80%][Progress:========================>     81%] [Cov:============================>      80%][Progress:========================>     81%] [Cov:============================>      80%][Progress:========================>     81%] [Cov:============================>      80%][Progress:========================>     81%] [Cov:============================>      80%][Progress:========================>     81%] [Cov:============================>      80%][Progress:========================>     81%] [Cov:============================>      80%][Progress:========================>     82%] [Cov:============================>      80%][Progress:========================>     82%] [Cov:============================>      80%][Progress:========================>     82%] [Cov:============================>      80%][Progress:========================>     82%] [Cov:============================>      80%][Progress:========================>     82%] [Cov:============================>      80%][Progress:========================>     83%] [Cov:============================>      80%][Progress:========================>     83%] [Cov:============================>      80%][Progress:========================>     83%] [Cov:============================>      80%][Progress:========================>     83%] [Cov:============================>      80%][Progress:========================>     83%] [Cov:============================>      80%][Progress:=========================>    84%] [Cov:============================>      80%][Progress:=========================>    84%] [Cov:============================>      80%][Progress:=========================>    84%] [Cov:============================>      80%][Progress:=========================>    84%] [Cov:============================>      80%][Progress:=========================>    84%] [Cov:============================>      80%][Progress:=========================>    85%] [Cov:============================>      80%][Progress:=========================>    85%] [Cov:============================>      80%][Progress:=========================>    85%] [Cov:============================>      80%][Progress:=========================>    85%] [Cov:============================>      80%][Progress:=========================>    85%] [Cov:============================>      80%][Progress:=========================>    85%] [Cov:============================>      80%][Progress:=========================>    86%] [Cov:============================>      80%][Progress:=========================>    86%] [Cov:============================>      80%][Progress:=========================>    86%] [Cov:============================>      80%][Progress:=========================>    86%] [Cov:============================>      80%][Progress:=========================>    86%] [Cov:============================>      80%][Progress:==========================>   87%] [Cov:============================>      80%][Progress:==========================>   87%] [Cov:============================>      80%][Progress:==========================>   87%] [Cov:============================>      80%][Progress:==========================>   87%] [Cov:============================>      80%][Progress:==========================>   87%] [Cov:============================>      80%][Progress:==========================>   88%] [Cov:============================>      80%][Progress:==========================>   88%] [Cov:============================>      80%][Progress:==========================>   88%] [Cov:============================>      80%][Progress:===========================>  93%] [Cov:============================>      80%][Progress:===========================>  93%] [Cov:============================>      80%][Progress:===========================>  93%] [Cov:============================>      80%][Progress:============================> 94%] [Cov:============================>      80%][Progress:============================> 94%] [Cov:============================>      80%][Progress:============================> 94%] [Cov:============================>      80%][Progress:============================> 94%] [Cov:============================>      80%][Progress:============================> 94%] [Cov:============================>      80%][Progress:============================> 95%] [Cov:============================>      80%][Progress:============================> 95%] [Cov:============================>      80%][Progress:============================> 95%] [Cov:============================>      80%][Progress:============================> 95%] [Cov:============================>      80%][Progress:============================> 95%] [Cov:============================>      80%][Progress:============================> 96%] [Cov:============================>      80%][Progress:============================> 96%] [Cov:============================>      80%][Progress:============================> 96%] [Cov:============================>      80%][Progress:============================> 96%] [Cov:============================>      80%][Progress:============================> 96%] [Cov:============================>      80%][Progress:=============================>97%] [Cov:============================>      80%][Progress:=============================>97%] [Cov:============================>      80%][Progress:=============================>97%] [Cov:============================>      80%][Progress:=============================>97%] [Cov:============================>      80%][Progress:=============================>97%] [Cov:============================>      80%][Progress:=============================>97%] [Cov:============================>      80%][Progress:=============================>98%] [Cov:============================>      80%][Progress:=============================>98%] [Cov:============================>      80%][Progress:=============================>98%] [Cov:============================>      80%][Progress:=============================>98%] [Cov:============================>      80%][Progress:=============================>98%] [Cov:============================>      80%][Progress:=============================>98%] [Cov:============================>      80%][Progress:=============================>99%] [Cov:============================>      80%][Progress:=============================>99%] [Cov:============================>      80%][Progress:=============================>99%] [Cov:============================>      80%][Progress:=============================>99%] [Cov:============================>      80%][Progress:=============================>99%] [Cov:============================>      80%][Progress:==============================100%] [Cov:============================>      80%][Progress:==============================100%] [Cov:============================>      80%][Progress:==============================100%] [Cov:============================>      80%][Progress:==============================100%] [Cov:============================>      80%][Progress:==============================100%] [Cov:============================>      80%][Progress:==============================100%] [Cov:============================>      80%]
* Search finished after 102s and 403 generations, 73212 statements, best individual has fitness: 24.0
* Generated before the refinement 18 tests with total length 60
statement is: org.apache.axis.deployment.wsdd.WSDDDeployment()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.apache.axis.deployment.wsdd.WSDDDeployment
statement code is: WSDDDeployment wSDDDeployment = new WSDDDeployment()
statement is: com.sap.engine.services.dc.wsgate.DeployWSServiceLocator(Lorg/apache/axis/EngineConfiguration;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.sap.engine.services.dc.wsgate.DeployWSServiceLocator
statement code is: DeployWSServiceLocator deployWSServiceLocator = new DeployWSServiceLocator(arg0)
statement is: getDeployWSPort()Lcom/sap/engine/services/dc/wsgate/DeployWSPortType; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.sap.engine.services.dc.wsgate.DeployWSPortTypeBindingStub
statement code is: DeployWSPortTypeBindingStub deployWSPort = (DeployWSPortTypeBindingStub)deployWSServiceLocator.getDeployWSPort()
test data is: WSDDDeployment wSDDDeployment = new WSDDDeployment();
DeployWSServiceLocator deployWSServiceLocator = new DeployWSServiceLocator(wSDDDeployment);
deployWSServiceLocator.getDeployWSPort();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        WSDDDeployment wSDDDeployment = new WSDDDeployment("https://example.com", "my_username", "my_password");
        DeployWSServiceLocator deployWSServiceLocator = new DeployWSServiceLocator(wSDDDeployment);
        deployWSServiceLocator.getDeployWSPort();
    }
}
statement is: WSDDDeployment wSDDDeployment = new WSDDDeployment("https://example.com", "my_username", "my_password"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: DeployWSServiceLocator deployWSServiceLocator = new DeployWSServiceLocator(wSDDDeployment), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: com.sap.engine.services.dc.wsgate.DeployWSServiceLocator(Lorg/apache/axis/EngineConfiguration;)V
statement is: deployWSServiceLocator.getDeployWSPort(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: deployWSServiceLocator.getDeployWSPort() target is: deployWSServiceLocator method is: getDeployWSPort()
statement is: com.sap.engine.services.dc.wsgate.DeployWSServiceLocator()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.sap.engine.services.dc.wsgate.DeployWSServiceLocator
statement code is: DeployWSServiceLocator deployWSServiceLocator = new DeployWSServiceLocator()
test data is: DeployWSServiceLocator deployWSServiceLocator = new DeployWSServiceLocator();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        DeployWSServiceLocator deployWSServiceLocator = new DeployWSServiceLocator();
        // Update the test data to be more descriptive and representative of the situation being tested
        deployWSServiceLocator.setEndpointAddress("https://example.com/deploy");
        deployWSServiceLocator.setUsername("user123");
        deployWSServiceLocator.setPassword("password123");
    }
}
statement is: DeployWSServiceLocator deployWSServiceLocator = new DeployWSServiceLocator(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: // Update the test data to be more descriptive and representative of the situation being tested
deployWSServiceLocator.setEndpointAddress("https://example.com/deploy"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: // Update the test data to be more descriptive and representative of the situation being tested
deployWSServiceLocator.setEndpointAddress("https://example.com/deploy") target is: deployWSServiceLocator method is: setEndpointAddress(java.lang.String)
statement is: deployWSServiceLocator.setUsername("user123"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: deployWSServiceLocator.setUsername("user123") target is: deployWSServiceLocator method is: setUsername(java.lang.String)
statement is: deployWSServiceLocator.setPassword("password123"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: deployWSServiceLocator.setPassword("password123") target is: deployWSServiceLocator method is: setPassword(java.lang.String)
TestCase is: DeployWSServiceLocator deployWSServiceLocator = new DeployWSServiceLocator();

statement is: org.apache.axis.soap.SOAP11Constants()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.apache.axis.soap.SOAP11Constants
statement code is: SOAP11Constants sOAP11Constants = new SOAP11Constants()
statement is: getBodyQName()Ljavax/xml/namespace/QName; type is: class org.evosuite.testcase.statements.MethodStatement return type class javax.xml.namespace.QName
statement code is: QName bodyQName = sOAP11Constants.getBodyQName()
statement is: com.sap.engine.services.dc.wsgate.DeployWSServiceLocator(Ljava/lang/String;Ljavax/xml/namespace/QName;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.sap.engine.services.dc.wsgate.DeployWSServiceLocator
statement code is: DeployWSServiceLocator deployWSServiceLocator = new DeployWSServiceLocator("null", arg1)
test data is: SOAP11Constants sOAP11Constants = new SOAP11Constants();
QName bodyQName = sOAP11Constants.getBodyQName();
DeployWSServiceLocator deployWSServiceLocator = new DeployWSServiceLocator("null", bodyQName);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        SOAP11Constants sOAP11Constants = new SOAP11Constants();
        QName bodyQName = sOAP11Constants.getBodyQName();
        DeployWSServiceLocator deployWSServiceLocator = new DeployWSServiceLocator("null", bodyQName);
        // Improved test data:
        SOAP11Constants sOAP11Constants = new SOAP11Constants();
        QName bodyQName = sOAP11Constants.getBodyQName();
        DeployWSServiceLocator deployWSServiceLocator = new DeployWSServiceLocator("http://example.com/test", bodyQName);
    }
}
statement is: SOAP11Constants sOAP11Constants = new SOAP11Constants(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: QName bodyQName = sOAP11Constants.getBodyQName(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: sOAP11Constants.getBodyQName() target is: sOAP11Constants method is: getBodyQName()
source statement: org.apache.axis.soap.SOAP11Constants()V callee: VariableReference: Statement 0, type org.apache.axis.soap.SOAP11Constantsindex is: 0
Matched Method is: getBodyQName()Ljavax/xml/namespace/QName;
statement is: DeployWSServiceLocator deployWSServiceLocator = new DeployWSServiceLocator("null", bodyQName), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: // Improved test data:
SOAP11Constants sOAP11Constants = new SOAP11Constants(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: QName bodyQName = sOAP11Constants.getBodyQName(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: sOAP11Constants.getBodyQName() target is: sOAP11Constants method is: getBodyQName()
source statement: org.apache.axis.soap.SOAP11Constants()V callee: VariableReference: Statement 0, type org.apache.axis.soap.SOAP11Constantsindex is: 4
Matched Method is: getBodyQName()Ljavax/xml/namespace/QName;
statement is: DeployWSServiceLocator deployWSServiceLocator = new DeployWSServiceLocator("http://example.com/test", bodyQName), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase is: SOAP11Constants sOAP11Constants = new SOAP11Constants();
QName bodyQName = sOAP11Constants.getBodyQName();
String string = "null";
DeployWSServiceLocator deployWSServiceLocator = new DeployWSServiceLocator(string, bodyQName);
SOAP11Constants sOAP11Constants = new SOAP11Constants();
QName bodyQName = sOAP11Constants.getBodyQName();
String string = "http://example.com/test";
DeployWSServiceLocator deployWSServiceLocator = new DeployWSServiceLocator(string, bodyQName);

statement is: org.apache.axis.deployment.wsdd.WSDDDeployment()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.apache.axis.deployment.wsdd.WSDDDeployment
statement code is: WSDDDeployment wSDDDeployment = new WSDDDeployment()
statement is: com.sap.engine.services.dc.wsgate.DeployWSServiceLocator(Lorg/apache/axis/EngineConfiguration;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.sap.engine.services.dc.wsgate.DeployWSServiceLocator
statement code is: DeployWSServiceLocator deployWSServiceLocator = new DeployWSServiceLocator(arg0)
statement is: getServiceName()Ljavax/xml/namespace/QName; type is: class org.evosuite.testcase.statements.MethodStatement return type class javax.xml.namespace.QName
statement code is: QName serviceName = deployWSServiceLocator.getServiceName()
test data is: WSDDDeployment wSDDDeployment = new WSDDDeployment();
DeployWSServiceLocator deployWSServiceLocator = new DeployWSServiceLocator(wSDDDeployment);
deployWSServiceLocator.getServiceName();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        WSDDDeployment wSDDDeployment = new WSDDDeployment("My Service", "https://example.com/service");
        DeployWSServiceLocator deployWSServiceLocator = new DeployWSServiceLocator(wSDDDeployment);
        deployWSServiceLocator.getServiceName();
    }
}
statement is: WSDDDeployment wSDDDeployment = new WSDDDeployment("My Service", "https://example.com/service"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: DeployWSServiceLocator deployWSServiceLocator = new DeployWSServiceLocator(wSDDDeployment), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: com.sap.engine.services.dc.wsgate.DeployWSServiceLocator(Lorg/apache/axis/EngineConfiguration;)V
statement is: deployWSServiceLocator.getServiceName(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: deployWSServiceLocator.getServiceName() target is: deployWSServiceLocator method is: getServiceName()
statement is: org.apache.axis.deployment.wsdd.WSDDDeployment()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.apache.axis.deployment.wsdd.WSDDDeployment
statement code is: WSDDDeployment wSDDDeployment = new WSDDDeployment()
statement is: com.sap.engine.services.dc.wsgate.DeployWSServiceLocator(Lorg/apache/axis/EngineConfiguration;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.sap.engine.services.dc.wsgate.DeployWSServiceLocator
statement code is: DeployWSServiceLocator deployWSServiceLocator = new DeployWSServiceLocator(arg0)
statement is: getDeployWSPortAddress()Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.lang.String
statement code is: String deployWSPortAddress = deployWSServiceLocator.getDeployWSPortAddress()
test data is: WSDDDeployment wSDDDeployment = new WSDDDeployment();
DeployWSServiceLocator deployWSServiceLocator = new DeployWSServiceLocator(wSDDDeployment);
deployWSServiceLocator.getDeployWSPortAddress();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        WSDDDeployment wSDDDeployment = new WSDDDeployment();
        DeployWSServiceLocator deployWSServiceLocator = new DeployWSServiceLocator(wSDDDeployment);
        deployWSServiceLocator.getDeployWSPortAddress("http://localhost:8080/wsdd");
    }
}
statement is: WSDDDeployment wSDDDeployment = new WSDDDeployment(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: DeployWSServiceLocator deployWSServiceLocator = new DeployWSServiceLocator(wSDDDeployment), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: deployWSServiceLocator.getDeployWSPortAddress("http://localhost:8080/wsdd"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: deployWSServiceLocator.getDeployWSPortAddress("http://localhost:8080/wsdd") target is: deployWSServiceLocator method is: getDeployWSPortAddress(java.lang.String)
TestCase is: WSDDDeployment wSDDDeployment = new WSDDDeployment();
DeployWSServiceLocator deployWSServiceLocator = new DeployWSServiceLocator(wSDDDeployment);

statement is: org.apache.axis.deployment.wsdd.WSDDDeployment()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.apache.axis.deployment.wsdd.WSDDDeployment
statement code is: WSDDDeployment wSDDDeployment = new WSDDDeployment()
statement is: com.sap.engine.services.dc.wsgate.DeployWSServiceLocator(Lorg/apache/axis/EngineConfiguration;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.sap.engine.services.dc.wsgate.DeployWSServiceLocator
statement code is: DeployWSServiceLocator deployWSServiceLocator = new DeployWSServiceLocator(arg0)
statement is: setDeployWSPortWSDDServiceName(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: deployWSServiceLocator.setDeployWSPortWSDDServiceName("faultFlow")
test data is: WSDDDeployment wSDDDeployment = new WSDDDeployment();
DeployWSServiceLocator deployWSServiceLocator = new DeployWSServiceLocator(wSDDDeployment);
deployWSServiceLocator.setDeployWSPortWSDDServiceName("faultFlow");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        WSDDDeployment wSDDDeployment = new WSDDDeployment();
        DeployWSServiceLocator deployWSServiceLocator = new DeployWSServiceLocator(wSDDDeployment);
        deployWSServiceLocator.setDeployWSPortWSDDServiceName("faultFlow");
        // Changed the primitive values and Strings to more descriptive examples
        int serviceId = 1234;
        String serviceName = "My Fault Flow Service";
        deployWSServiceLocator.setServiceId(serviceId);
        deployWSServiceLocator.setServiceName(serviceName);
    }
}
statement is: WSDDDeployment wSDDDeployment = new WSDDDeployment(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: DeployWSServiceLocator deployWSServiceLocator = new DeployWSServiceLocator(wSDDDeployment), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: deployWSServiceLocator.setDeployWSPortWSDDServiceName("faultFlow"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: deployWSServiceLocator.setDeployWSPortWSDDServiceName("faultFlow") target is: deployWSServiceLocator method is: setDeployWSPortWSDDServiceName(java.lang.String)
source statement: com.sap.engine.services.dc.wsgate.DeployWSServiceLocator(Lorg/apache/axis/EngineConfiguration;)V callee: VariableReference: Statement 1, type com.sap.engine.services.dc.wsgate.DeployWSServiceLocatorindex is: 1
Matched Method is: setDeployWSPortWSDDServiceName(Ljava/lang/String;)V
statement is: // Changed the primitive values and Strings to more descriptive examples
int serviceId = 1234, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: String serviceName = "My Fault Flow Service", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: deployWSServiceLocator.setServiceId(serviceId), class spoon.support.reflect.code.CtInvocationImpl
invocation is: deployWSServiceLocator.setServiceId(serviceId) target is: deployWSServiceLocator method is: setServiceId(int)
statement is: deployWSServiceLocator.setServiceName(serviceName), class spoon.support.reflect.code.CtInvocationImpl
invocation is: deployWSServiceLocator.setServiceName(serviceName) target is: deployWSServiceLocator method is: setServiceName(java.lang.String)
* this is vulnerable: int _int = 1234
* this is vulnerable: String string = "My Fault Flow Service"
TestCase is: WSDDDeployment wSDDDeployment = new WSDDDeployment();
DeployWSServiceLocator deployWSServiceLocator = new DeployWSServiceLocator(wSDDDeployment);
String string = "faultFlow";
deployWSServiceLocator.setDeployWSPortWSDDServiceName(string);
int _int = 1234;
String string = "My Fault Flow Service";

statement is: org.apache.axis.deployment.wsdd.WSDDDeployment()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.apache.axis.deployment.wsdd.WSDDDeployment
statement code is: WSDDDeployment wSDDDeployment = new WSDDDeployment()
statement is: com.sap.engine.services.dc.wsgate.DeployWSServiceLocator(Lorg/apache/axis/EngineConfiguration;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.sap.engine.services.dc.wsgate.DeployWSServiceLocator
statement code is: DeployWSServiceLocator deployWSServiceLocator = new DeployWSServiceLocator(arg0)
statement is: setEndpointAddress(Ljavax/xml/namespace/QName;Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: deployWSServiceLocator.setEndpointAddress(wSDDDeployment.QNAME_JAXRPC_HANDLERINFO, "undeployment")
test data is: WSDDDeployment wSDDDeployment = new WSDDDeployment();
DeployWSServiceLocator deployWSServiceLocator = new DeployWSServiceLocator(wSDDDeployment);
deployWSServiceLocator.setEndpointAddress(wSDDDeployment.QNAME_JAXRPC_HANDLERINFO, "undeployment");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        WSDDDeployment wSDDDeployment = new WSDDDeployment();
        DeployWSServiceLocator deployWSServiceLocator = new DeployWSServiceLocator(wSDDDeployment);
        deployWSServiceLocator.setEndpointAddress(wSDDDeployment.QNAME_JAXRPC_HANDLERINFO, "myService");
    }
}
statement is: WSDDDeployment wSDDDeployment = new WSDDDeployment(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: DeployWSServiceLocator deployWSServiceLocator = new DeployWSServiceLocator(wSDDDeployment), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: deployWSServiceLocator.setEndpointAddress(wSDDDeployment.QNAME_JAXRPC_HANDLERINFO, "myService"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: deployWSServiceLocator.setEndpointAddress(wSDDDeployment.QNAME_JAXRPC_HANDLERINFO, "myService") target is: deployWSServiceLocator method is: setEndpointAddress(java.lang.String)
source statement: com.sap.engine.services.dc.wsgate.DeployWSServiceLocator(Lorg/apache/axis/EngineConfiguration;)V callee: VariableReference: Statement 1, type com.sap.engine.services.dc.wsgate.DeployWSServiceLocatorindex is: 1
Matched Method is: setEndpointAddress(Ljavax/xml/namespace/QName;Ljava/lang/String;)V
i 1 Parameters size() 1 Num of Method Parameters: 2
TestCase is: WSDDDeployment wSDDDeployment = new WSDDDeployment();
DeployWSServiceLocator deployWSServiceLocator = new DeployWSServiceLocator(wSDDDeployment);
String string = "myService";
String string = null;
deployWSServiceLocator.setEndpointAddress((QName) string, string);

statement is: org.apache.axis.deployment.wsdd.WSDDDeployment()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.apache.axis.deployment.wsdd.WSDDDeployment
statement code is: WSDDDeployment wSDDDeployment = new WSDDDeployment()
statement is: com.sap.engine.services.dc.wsgate.DeployWSServiceLocator(Lorg/apache/axis/EngineConfiguration;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.sap.engine.services.dc.wsgate.DeployWSServiceLocator
statement code is: DeployWSServiceLocator deployWSServiceLocator = new DeployWSServiceLocator(arg0)
statement is: Class<DeployWSPortTypeBindingStub> class = DeployWSPortTypeBindingStub.class type is: class org.evosuite.testcase.statements.ClassPrimitiveStatement return type java.lang.Class<com.sap.engine.services.dc.wsgate.DeployWSPortTypeBindingStub>
statement code is: Class<DeployWSPortTypeBindingStub> class = DeployWSPortTypeBindingStub.class
statement is: getPort(Ljavax/xml/namespace/QName;Ljava/lang/Class;)Ljava/rmi/Remote; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.sap.engine.services.dc.wsgate.DeployWSPortTypeBindingStub
statement code is: DeployWSPortTypeBindingStub port = (DeployWSPortTypeBindingStub)deployWSServiceLocator.getPort((QName) null, arg1)
test data is: WSDDDeployment wSDDDeployment = new WSDDDeployment();
DeployWSServiceLocator deployWSServiceLocator = new DeployWSServiceLocator(wSDDDeployment);
Class<DeployWSPortTypeBindingStub> class = DeployWSPortTypeBindingStub.class;
deployWSServiceLocator.getPort((QName) null, class);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        WSDDDeployment wSDDDeployment = new WSDDDeployment("my-service", "1.0");
        DeployWSServiceLocator deployWSServiceLocator = new DeployWSServiceLocator(wSDDDeployment);
        Class<DeployWSPortTypeBindingStub> $missing$ = DeployWSPortTypeBindingStub.class;
        deployWSServiceLocator.getPort(((QName) (null)), $missing$);
        // Improved test data
        WSDDDeployment wSDDDeployment = new WSDDDeployment("my-service", "1.0");
        wSDDDeployment.setDescription("This service is used for testing purposes.");
        DeployWSServiceLocator deployWSServiceLocator = new DeployWSServiceLocator(wSDDDeployment);
        Class<DeployWSPortTypeBindingStub> $missing$ = DeployWSPortTypeBindingStub.class;
        deployWSServiceLocator.getPort(((QName) (null)), $missing$);
    }
}
statement is: WSDDDeployment wSDDDeployment = new WSDDDeployment("my-service", "1.0"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: DeployWSServiceLocator deployWSServiceLocator = new DeployWSServiceLocator(wSDDDeployment), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: com.sap.engine.services.dc.wsgate.DeployWSServiceLocator(Lorg/apache/axis/EngineConfiguration;)V
statement is: Class<DeployWSPortTypeBindingStub> $missing$ = DeployWSPortTypeBindingStub.class, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: DeployWSPortTypeBindingStub.class is DeployWSPortTypeBindingStub
statement is: deployWSServiceLocator.getPort(((QName) (null)), $missing$), class spoon.support.reflect.code.CtInvocationImpl
invocation is: deployWSServiceLocator.getPort(((QName) (null)), $missing$) target is: deployWSServiceLocator method is: getPort(QName,java.lang.Class)
statement is: // Improved test data
WSDDDeployment wSDDDeployment = new WSDDDeployment("my-service", "1.0"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: wSDDDeployment.setDescription("This service is used for testing purposes."), class spoon.support.reflect.code.CtInvocationImpl
invocation is: wSDDDeployment.setDescription("This service is used for testing purposes.") target is: wSDDDeployment method is: setDescription(java.lang.String)
statement is: DeployWSServiceLocator deployWSServiceLocator = new DeployWSServiceLocator(wSDDDeployment), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: com.sap.engine.services.dc.wsgate.DeployWSServiceLocator(Lorg/apache/axis/EngineConfiguration;)V
statement is: Class<DeployWSPortTypeBindingStub> $missing$ = DeployWSPortTypeBindingStub.class, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: DeployWSPortTypeBindingStub.class is DeployWSPortTypeBindingStub
statement is: deployWSServiceLocator.getPort(((QName) (null)), $missing$), class spoon.support.reflect.code.CtInvocationImpl
invocation is: deployWSServiceLocator.getPort(((QName) (null)), $missing$) target is: deployWSServiceLocator method is: getPort(QName,java.lang.Class)
statement is: org.apache.axis.deployment.wsdd.WSDDDeployment()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.apache.axis.deployment.wsdd.WSDDDeployment
statement code is: WSDDDeployment wSDDDeployment = new WSDDDeployment()
statement is: com.sap.engine.services.dc.wsgate.DeployWSServiceLocator(Lorg/apache/axis/EngineConfiguration;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.sap.engine.services.dc.wsgate.DeployWSServiceLocator
statement code is: DeployWSServiceLocator deployWSServiceLocator = new DeployWSServiceLocator(arg0)
statement is: getPorts()Ljava/util/Iterator; type is: class org.evosuite.testcase.statements.MethodStatement return type java.util.Iterator<E>
statement code is: Iterator ports = deployWSServiceLocator.getPorts()
statement is: getPorts()Ljava/util/Iterator; type is: class org.evosuite.testcase.statements.MethodStatement return type java.util.Iterator<E>
statement code is: Iterator ports = deployWSServiceLocator.getPorts()
test data is: WSDDDeployment wSDDDeployment = new WSDDDeployment();
DeployWSServiceLocator deployWSServiceLocator = new DeployWSServiceLocator(wSDDDeployment);
deployWSServiceLocator.getPorts();
deployWSServiceLocator.getPorts();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        WSDDDeployment wSDDDeployment = new WSDDDeployment("MyDeployment", "http://localhost:8080/wsdl");
        DeployWSServiceLocator deployWSServiceLocator = new DeployWSServiceLocator(wSDDDeployment);
        deployWSServiceLocator.getPorts();
        deployWSServiceLocator.getPorts();
    }
}
statement is: WSDDDeployment wSDDDeployment = new WSDDDeployment("MyDeployment", "http://localhost:8080/wsdl"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: DeployWSServiceLocator deployWSServiceLocator = new DeployWSServiceLocator(wSDDDeployment), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: com.sap.engine.services.dc.wsgate.DeployWSServiceLocator(Lorg/apache/axis/EngineConfiguration;)V
statement is: deployWSServiceLocator.getPorts(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: deployWSServiceLocator.getPorts() target is: deployWSServiceLocator method is: getPorts()
statement is: deployWSServiceLocator.getPorts(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: deployWSServiceLocator.getPorts() target is: deployWSServiceLocator method is: getPorts()
statement is: org.apache.axis.deployment.wsdd.WSDDDeployment()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.apache.axis.deployment.wsdd.WSDDDeployment
statement code is: WSDDDeployment wSDDDeployment = new WSDDDeployment()
statement is: com.sap.engine.services.dc.wsgate.DeployWSServiceLocator(Lorg/apache/axis/EngineConfiguration;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.sap.engine.services.dc.wsgate.DeployWSServiceLocator
statement code is: DeployWSServiceLocator deployWSServiceLocator = new DeployWSServiceLocator(arg0)
statement is: setEndpointAddress(Ljava/lang/String;Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: deployWSServiceLocator.setEndpointAddress("DeployWSPort", "org.apache.axis.encoding.ser.ArraySerializerFactory")
test data is: WSDDDeployment wSDDDeployment = new WSDDDeployment();
DeployWSServiceLocator deployWSServiceLocator = new DeployWSServiceLocator(wSDDDeployment);
deployWSServiceLocator.setEndpointAddress("DeployWSPort", "org.apache.axis.encoding.ser.ArraySerializerFactory");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        WSDDDeployment wSDDDeployment = new WSDDDeployment();
        DeployWSServiceLocator deployWSServiceLocator = new DeployWSServiceLocator(wSDDDeployment);
        deployWSServiceLocator.setEndpointAddress("DeployWSPort", "org.apache.axis.encoding.ser.ArraySerializerFactory");
        // Improved test data
        wSDDDeployment.setName("TestDeployment");
        deployWSServiceLocator.setEndpointAddress("https://www.example.com/DeployWSPort", "org.apache.axis.encoding.ser.ArraySerializerFactory");
    }
}
statement is: WSDDDeployment wSDDDeployment = new WSDDDeployment(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: DeployWSServiceLocator deployWSServiceLocator = new DeployWSServiceLocator(wSDDDeployment), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: deployWSServiceLocator.setEndpointAddress("DeployWSPort", "org.apache.axis.encoding.ser.ArraySerializerFactory"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: deployWSServiceLocator.setEndpointAddress("DeployWSPort", "org.apache.axis.encoding.ser.ArraySerializerFactory") target is: deployWSServiceLocator method is: setEndpointAddress(java.lang.String,java.lang.String)
source statement: com.sap.engine.services.dc.wsgate.DeployWSServiceLocator(Lorg/apache/axis/EngineConfiguration;)V callee: VariableReference: Statement 1, type com.sap.engine.services.dc.wsgate.DeployWSServiceLocatorindex is: 1
Matched Method is: setEndpointAddress(Ljava/lang/String;Ljava/lang/String;)V
statement is: // Improved test data
wSDDDeployment.setName("TestDeployment"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: // Improved test data
wSDDDeployment.setName("TestDeployment") target is: wSDDDeployment method is: setName(java.lang.String)
statement is: deployWSServiceLocator.setEndpointAddress("https://www.example.com/DeployWSPort", "org.apache.axis.encoding.ser.ArraySerializerFactory"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: deployWSServiceLocator.setEndpointAddress("https://www.example.com/DeployWSPort", "org.apache.axis.encoding.ser.ArraySerializerFactory") target is: deployWSServiceLocator method is: setEndpointAddress(java.lang.String,java.lang.String)
source statement: com.sap.engine.services.dc.wsgate.DeployWSServiceLocator(Lorg/apache/axis/EngineConfiguration;)V callee: VariableReference: Statement 1, type com.sap.engine.services.dc.wsgate.DeployWSServiceLocatorindex is: 1
Matched Method is: setEndpointAddress(Ljava/lang/String;Ljava/lang/String;)V
TestCase is: WSDDDeployment wSDDDeployment = new WSDDDeployment();
DeployWSServiceLocator deployWSServiceLocator = new DeployWSServiceLocator(wSDDDeployment);
String string = "DeployWSPort";
String string = "org.apache.axis.encoding.ser.ArraySerializerFactory";
deployWSServiceLocator.setEndpointAddress(string, string);
String string = "https://www.example.com/DeployWSPort";
String string = "org.apache.axis.encoding.ser.ArraySerializerFactory";
deployWSServiceLocator.setEndpointAddress(string, string);

statement is: org.apache.axis.deployment.wsdd.WSDDDeployment()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.apache.axis.deployment.wsdd.WSDDDeployment
statement code is: WSDDDeployment wSDDDeployment = new WSDDDeployment()
statement is: com.sap.engine.services.dc.wsgate.DeployWSServiceLocator(Lorg/apache/axis/EngineConfiguration;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.sap.engine.services.dc.wsgate.DeployWSServiceLocator
statement code is: DeployWSServiceLocator deployWSServiceLocator = new DeployWSServiceLocator(arg0)
statement is: getDeployWSPortWSDDServiceName()Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.lang.String
statement code is: String deployWSPortWSDDServiceName = deployWSServiceLocator.getDeployWSPortWSDDServiceName()
test data is: WSDDDeployment wSDDDeployment = new WSDDDeployment();
DeployWSServiceLocator deployWSServiceLocator = new DeployWSServiceLocator(wSDDDeployment);
deployWSServiceLocator.getDeployWSPortWSDDServiceName();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        WSDDDeployment wSDDDeployment = new WSDDDeployment("MyDeployment", "MyEnvironment");
        DeployWSServiceLocator deployWSServiceLocator = new DeployWSServiceLocator(wSDDDeployment);
        deployWSServiceLocator.getDeployWSPortWSDDServiceName();
    }
}
statement is: WSDDDeployment wSDDDeployment = new WSDDDeployment("MyDeployment", "MyEnvironment"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: DeployWSServiceLocator deployWSServiceLocator = new DeployWSServiceLocator(wSDDDeployment), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: com.sap.engine.services.dc.wsgate.DeployWSServiceLocator(Lorg/apache/axis/EngineConfiguration;)V
statement is: deployWSServiceLocator.getDeployWSPortWSDDServiceName(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: deployWSServiceLocator.getDeployWSPortWSDDServiceName() target is: deployWSServiceLocator method is: getDeployWSPortWSDDServiceName()
statement is: org.apache.axis.deployment.wsdd.WSDDDeployment()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.apache.axis.deployment.wsdd.WSDDDeployment
statement code is: WSDDDeployment wSDDDeployment = new WSDDDeployment()
statement is: com.sap.engine.services.dc.wsgate.DeployWSServiceLocator(Lorg/apache/axis/EngineConfiguration;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.sap.engine.services.dc.wsgate.DeployWSServiceLocator
statement code is: DeployWSServiceLocator deployWSServiceLocator = new DeployWSServiceLocator(arg0)
statement is: getDeployWSPort(Ljava/net/URL;)Lcom/sap/engine/services/dc/wsgate/DeployWSPortType; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.sap.engine.services.dc.wsgate.DeployWSPortTypeBindingStub
statement code is: DeployWSPortTypeBindingStub deployWSPort = (DeployWSPortTypeBindingStub)deployWSServiceLocator.getDeployWSPort((URL) null)
test data is: WSDDDeployment wSDDDeployment = new WSDDDeployment();
DeployWSServiceLocator deployWSServiceLocator = new DeployWSServiceLocator(wSDDDeployment);
deployWSServiceLocator.getDeployWSPort((URL) null);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        WSDDDeployment wSDDDeployment = new WSDDDeployment();
        wSDDDeployment.setServerUrl("https://example.com");
        DeployWSServiceLocator deployWSServiceLocator = new DeployWSServiceLocator(wSDDDeployment);
        deployWSServiceLocator.getDeployWSPort(((URL) (null)));
    }
}
statement is: WSDDDeployment wSDDDeployment = new WSDDDeployment(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: wSDDDeployment.setServerUrl("https://example.com"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: wSDDDeployment.setServerUrl("https://example.com") target is: wSDDDeployment method is: setServerUrl(java.lang.String)
statement is: DeployWSServiceLocator deployWSServiceLocator = new DeployWSServiceLocator(wSDDDeployment), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: deployWSServiceLocator.getDeployWSPort(((URL) (null))), class spoon.support.reflect.code.CtInvocationImpl
invocation is: deployWSServiceLocator.getDeployWSPort(((URL) (null))) target is: deployWSServiceLocator method is: getDeployWSPort(URL)
source statement: com.sap.engine.services.dc.wsgate.DeployWSServiceLocator(Lorg/apache/axis/EngineConfiguration;)V callee: VariableReference: Statement 1, type com.sap.engine.services.dc.wsgate.DeployWSServiceLocatorindex is: 1
Matched Method is: getDeployWSPort(Ljava/net/URL;)Lcom/sap/engine/services/dc/wsgate/DeployWSPortType;
i 0 Parameters size() 0 Num of Method Parameters: 1
TestCase is: WSDDDeployment wSDDDeployment = new WSDDDeployment();
DeployWSServiceLocator deployWSServiceLocator = new DeployWSServiceLocator(wSDDDeployment);
URL uRL = null;
deployWSServiceLocator.getDeployWSPort(uRL);

statement is: org.apache.axis.deployment.wsdd.WSDDDeployment()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.apache.axis.deployment.wsdd.WSDDDeployment
statement code is: WSDDDeployment wSDDDeployment = new WSDDDeployment()
statement is: com.sap.engine.services.dc.wsgate.DeployWSServiceLocator(Lorg/apache/axis/EngineConfiguration;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.sap.engine.services.dc.wsgate.DeployWSServiceLocator
statement code is: DeployWSServiceLocator deployWSServiceLocator = new DeployWSServiceLocator(arg0)
statement is: Class<DeployWSPortTypeBindingStub> class = DeployWSPortTypeBindingStub.class type is: class org.evosuite.testcase.statements.ClassPrimitiveStatement return type java.lang.Class<com.sap.engine.services.dc.wsgate.DeployWSPortTypeBindingStub>
statement code is: Class<DeployWSPortTypeBindingStub> class = DeployWSPortTypeBindingStub.class
statement is: getPort(Ljava/lang/Class;)Ljava/rmi/Remote; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.sap.engine.services.dc.wsgate.DeployWSPortTypeBindingStub
statement code is: DeployWSPortTypeBindingStub port = (DeployWSPortTypeBindingStub)deployWSServiceLocator.getPort(arg0)
test data is: WSDDDeployment wSDDDeployment = new WSDDDeployment();
DeployWSServiceLocator deployWSServiceLocator = new DeployWSServiceLocator(wSDDDeployment);
Class<DeployWSPortTypeBindingStub> class = DeployWSPortTypeBindingStub.class;
deployWSServiceLocator.getPort(class);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        WSDDDeployment wSDDDeployment = new WSDDDeployment();
        DeployWSServiceLocator deployWSServiceLocator = new DeployWSServiceLocator(wSDDDeployment);
        Class<DeployWSPortTypeBindingStub> $missing$ = DeployWSPortTypeBindingStub.class;
    }
}
statement is: WSDDDeployment wSDDDeployment = new WSDDDeployment(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: DeployWSServiceLocator deployWSServiceLocator = new DeployWSServiceLocator(wSDDDeployment), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Class<DeployWSPortTypeBindingStub> $missing$ = DeployWSPortTypeBindingStub.class, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: DeployWSPortTypeBindingStub.class is DeployWSPortTypeBindingStub
TestCase is: WSDDDeployment wSDDDeployment = new WSDDDeployment();
DeployWSServiceLocator deployWSServiceLocator = new DeployWSServiceLocator(wSDDDeployment);

statement is: org.apache.axis.deployment.wsdd.WSDDDeployment()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.apache.axis.deployment.wsdd.WSDDDeployment
statement code is: WSDDDeployment wSDDDeployment = new WSDDDeployment()
statement is: com.sap.engine.services.dc.wsgate.DeployWSServiceLocator(Lorg/apache/axis/EngineConfiguration;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.sap.engine.services.dc.wsgate.DeployWSServiceLocator
statement code is: DeployWSServiceLocator deployWSServiceLocator = new DeployWSServiceLocator(arg0)
statement is: Class<Object> class = Object.class type is: class org.evosuite.testcase.statements.ClassPrimitiveStatement return type java.lang.Class<java.lang.Object>
statement code is: Class<Object> class = Object.class
statement is: getPort(Ljava/lang/Class;)Ljava/rmi/Remote; type is: class org.evosuite.testcase.statements.MethodStatement return type interface java.rmi.Remote
statement code is: Remote port = deployWSServiceLocator.getPort(arg0)
test data is: WSDDDeployment wSDDDeployment = new WSDDDeployment();
DeployWSServiceLocator deployWSServiceLocator = new DeployWSServiceLocator(wSDDDeployment);
Class<Object> class = Object.class;
deployWSServiceLocator.getPort(class);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        WSDDDeployment wSDDDeployment = new WSDDDeployment();
        DeployWSServiceLocator deployWSServiceLocator = new DeployWSServiceLocator(wSDDDeployment);
        Class<Object> $missing$ = Object.class;
        deployWSServiceLocator.getPort();
    }
}
statement is: WSDDDeployment wSDDDeployment = new WSDDDeployment(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: DeployWSServiceLocator deployWSServiceLocator = new DeployWSServiceLocator(wSDDDeployment), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Class<Object> $missing$ = Object.class, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: Object.class is Object
statement is: deployWSServiceLocator.getPort(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: deployWSServiceLocator.getPort() target is: deployWSServiceLocator method is: getPort()
TestCase is: WSDDDeployment wSDDDeployment = new WSDDDeployment();
DeployWSServiceLocator deployWSServiceLocator = new DeployWSServiceLocator(wSDDDeployment);

statement is: org.apache.axis.configuration.BasicClientConfig()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.apache.axis.configuration.BasicClientConfig
statement code is: BasicClientConfig basicClientConfig = new BasicClientConfig()
statement is: com.sap.engine.services.dc.wsgate.DeployWSServiceLocator(Lorg/apache/axis/EngineConfiguration;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.sap.engine.services.dc.wsgate.DeployWSServiceLocator
statement code is: DeployWSServiceLocator deployWSServiceLocator = new DeployWSServiceLocator(arg0)
statement is: setEndpointAddress(Ljava/lang/String;Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: deployWSServiceLocator.setEndpointAddress("bHv\ne<rrgp Cyvl", "bHv\ne<rrgp Cyvl")
test data is: BasicClientConfig basicClientConfig = new BasicClientConfig();
DeployWSServiceLocator deployWSServiceLocator = new DeployWSServiceLocator(basicClientConfig);
deployWSServiceLocator.setEndpointAddress("bHv\ne<rrgp Cyvl", "bHv\ne<rrgp Cyvl");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        BasicClientConfig basicClientConfig = new BasicClientConfig();
        DeployWSServiceLocator deployWSServiceLocator = new DeployWSServiceLocator(basicClientConfig);
        deployWSServiceLocator.setEndpointAddress("https://www.example.com", "https://www.example2.com");
    }
}
statement is: BasicClientConfig basicClientConfig = new BasicClientConfig(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: DeployWSServiceLocator deployWSServiceLocator = new DeployWSServiceLocator(basicClientConfig), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: deployWSServiceLocator.setEndpointAddress("https://www.example.com", "https://www.example2.com"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: deployWSServiceLocator.setEndpointAddress("https://www.example.com", "https://www.example2.com") target is: deployWSServiceLocator method is: setEndpointAddress(java.lang.String,java.lang.String)
source statement: com.sap.engine.services.dc.wsgate.DeployWSServiceLocator(Lorg/apache/axis/EngineConfiguration;)V callee: VariableReference: Statement 1, type com.sap.engine.services.dc.wsgate.DeployWSServiceLocatorindex is: 1
Matched Method is: setEndpointAddress(Ljava/lang/String;Ljava/lang/String;)V
TestCase is: BasicClientConfig basicClientConfig = new BasicClientConfig();
DeployWSServiceLocator deployWSServiceLocator = new DeployWSServiceLocator(basicClientConfig);
String string = "https://www.example.com";
String string = "https://www.example2.com";
deployWSServiceLocator.setEndpointAddress(string, string);

statement is: org.apache.axis.deployment.wsdd.WSDDDeployment()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.apache.axis.deployment.wsdd.WSDDDeployment
statement code is: WSDDDeployment wSDDDeployment = new WSDDDeployment()
statement is: com.sap.engine.services.dc.wsgate.DeployWSServiceLocator(Lorg/apache/axis/EngineConfiguration;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.sap.engine.services.dc.wsgate.DeployWSServiceLocator
statement code is: DeployWSServiceLocator deployWSServiceLocator = new DeployWSServiceLocator(arg0)
statement is: setDeployWSPortEndpointAddress(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: deployWSServiceLocator.setDeployWSPortEndpointAddress("SR\"O}* ?dgf(N*(^5")
statement is: getDeployWSPort()Lcom/sap/engine/services/dc/wsgate/DeployWSPortType; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.sap.engine.services.dc.wsgate.DeployWSPortTypeBindingStub
statement code is: DeployWSPortTypeBindingStub deployWSPort = (DeployWSPortTypeBindingStub)deployWSServiceLocator.getDeployWSPort()
test data is: WSDDDeployment wSDDDeployment = new WSDDDeployment();
DeployWSServiceLocator deployWSServiceLocator = new DeployWSServiceLocator(wSDDDeployment);
deployWSServiceLocator.setDeployWSPortEndpointAddress("SR\"O}* ?dgf(N*(^5");
deployWSServiceLocator.getDeployWSPort();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        WSDDDeployment wSDDDeployment = new WSDDDeployment();
        DeployWSServiceLocator deployWSServiceLocator = new DeployWSServiceLocator(wSDDDeployment);
        deployWSServiceLocator.setDeployWSPortEndpointAddress("https://my-webservice.com/api/v1");
        deployWSServiceLocator.getDeployWSPort();
    }
}
statement is: WSDDDeployment wSDDDeployment = new WSDDDeployment(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: DeployWSServiceLocator deployWSServiceLocator = new DeployWSServiceLocator(wSDDDeployment), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: deployWSServiceLocator.setDeployWSPortEndpointAddress("https://my-webservice.com/api/v1"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: deployWSServiceLocator.setDeployWSPortEndpointAddress("https://my-webservice.com/api/v1") target is: deployWSServiceLocator method is: setDeployWSPortEndpointAddress(java.lang.String)
source statement: com.sap.engine.services.dc.wsgate.DeployWSServiceLocator(Lorg/apache/axis/EngineConfiguration;)V callee: VariableReference: Statement 1, type com.sap.engine.services.dc.wsgate.DeployWSServiceLocatorindex is: 1
Matched Method is: setDeployWSPortEndpointAddress(Ljava/lang/String;)V
statement is: deployWSServiceLocator.getDeployWSPort(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: deployWSServiceLocator.getDeployWSPort() target is: deployWSServiceLocator method is: getDeployWSPort()
source statement: com.sap.engine.services.dc.wsgate.DeployWSServiceLocator(Lorg/apache/axis/EngineConfiguration;)V callee: VariableReference: Statement 1, type com.sap.engine.services.dc.wsgate.DeployWSServiceLocatorindex is: 1
Matched Method is: getDeployWSPort()Lcom/sap/engine/services/dc/wsgate/DeployWSPortType;
TestCase is: WSDDDeployment wSDDDeployment = new WSDDDeployment();
DeployWSServiceLocator deployWSServiceLocator = new DeployWSServiceLocator(wSDDDeployment);
String string = "https://my-webservice.com/api/v1";
deployWSServiceLocator.setDeployWSPortEndpointAddress(string);
deployWSServiceLocator.getDeployWSPort();

statement is: org.apache.axis.deployment.wsdd.WSDDDeployment()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.apache.axis.deployment.wsdd.WSDDDeployment
statement code is: WSDDDeployment wSDDDeployment = new WSDDDeployment()
statement is: com.sap.engine.services.dc.wsgate.DeployWSServiceLocator(Lorg/apache/axis/EngineConfiguration;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.sap.engine.services.dc.wsgate.DeployWSServiceLocator
statement code is: DeployWSServiceLocator deployWSServiceLocator = new DeployWSServiceLocator(arg0)
statement is: setDeployWSPortEndpointAddress(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: deployWSServiceLocator.setDeployWSPortEndpointAddress("operation")
statement is: Class<DeployWSPortTypeBindingStub> class = DeployWSPortTypeBindingStub.class type is: class org.evosuite.testcase.statements.ClassPrimitiveStatement return type java.lang.Class<com.sap.engine.services.dc.wsgate.DeployWSPortTypeBindingStub>
statement code is: Class<DeployWSPortTypeBindingStub> class = DeployWSPortTypeBindingStub.class
statement is: getPort(Ljavax/xml/namespace/QName;Ljava/lang/Class;)Ljava/rmi/Remote; type is: class org.evosuite.testcase.statements.MethodStatement return type interface java.rmi.Remote
statement code is: Remote port = deployWSServiceLocator.getPort(wSDDDeployment.QNAME_FAULT, arg1)
test data is: WSDDDeployment wSDDDeployment = new WSDDDeployment();
DeployWSServiceLocator deployWSServiceLocator = new DeployWSServiceLocator(wSDDDeployment);
deployWSServiceLocator.setDeployWSPortEndpointAddress("operation");
Class<DeployWSPortTypeBindingStub> class = DeployWSPortTypeBindingStub.class;
deployWSServiceLocator.getPort(wSDDDeployment.QNAME_FAULT, class);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        WSDDDeployment wSDDDeployment = new WSDDDeployment();
        DeployWSServiceLocator deployWSServiceLocator = new DeployWSServiceLocator(wSDDDeployment);
        deployWSServiceLocator.setDeployWSPortEndpointAddress("https://example.com/service/deploy");
        Class<DeployWSPortTypeBindingStub> $missing$ = DeployWSPortTypeBindingStub.class;
        deployWSServiceLocator.getPort(QNAME_FAULT.class);
    }
}
statement is: WSDDDeployment wSDDDeployment = new WSDDDeployment(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: DeployWSServiceLocator deployWSServiceLocator = new DeployWSServiceLocator(wSDDDeployment), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: deployWSServiceLocator.setDeployWSPortEndpointAddress("https://example.com/service/deploy"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: deployWSServiceLocator.setDeployWSPortEndpointAddress("https://example.com/service/deploy") target is: deployWSServiceLocator method is: setDeployWSPortEndpointAddress(java.lang.String)
source statement: com.sap.engine.services.dc.wsgate.DeployWSServiceLocator(Lorg/apache/axis/EngineConfiguration;)V callee: VariableReference: Statement 1, type com.sap.engine.services.dc.wsgate.DeployWSServiceLocatorindex is: 1
Matched Method is: setDeployWSPortEndpointAddress(Ljava/lang/String;)V
statement is: Class<DeployWSPortTypeBindingStub> $missing$ = DeployWSPortTypeBindingStub.class, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: DeployWSPortTypeBindingStub.class is DeployWSPortTypeBindingStub
statement is: deployWSServiceLocator.getPort(QNAME_FAULT.class), class spoon.support.reflect.code.CtInvocationImpl
invocation is: deployWSServiceLocator.getPort(QNAME_FAULT.class) target is: deployWSServiceLocator method is: getPort(java.lang.Class)
TestCase is: WSDDDeployment wSDDDeployment = new WSDDDeployment();
DeployWSServiceLocator deployWSServiceLocator = new DeployWSServiceLocator(wSDDDeployment);
String string = "https://example.com/service/deploy";
deployWSServiceLocator.setDeployWSPortEndpointAddress(string);

statement is: org.apache.axis.deployment.wsdd.WSDDDeployment()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.apache.axis.deployment.wsdd.WSDDDeployment
statement code is: WSDDDeployment wSDDDeployment = new WSDDDeployment()
statement is: com.sap.engine.services.dc.wsgate.DeployWSServiceLocator(Lorg/apache/axis/EngineConfiguration;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.sap.engine.services.dc.wsgate.DeployWSServiceLocator
statement code is: DeployWSServiceLocator deployWSServiceLocator = new DeployWSServiceLocator(arg0)
statement is: Class<DeployWSPortTypeBindingStub> class = DeployWSPortTypeBindingStub.class type is: class org.evosuite.testcase.statements.ClassPrimitiveStatement return type java.lang.Class<com.sap.engine.services.dc.wsgate.DeployWSPortTypeBindingStub>
statement code is: Class<DeployWSPortTypeBindingStub> class = DeployWSPortTypeBindingStub.class
statement is: getPort(Ljavax/xml/namespace/QName;Ljava/lang/Class;)Ljava/rmi/Remote; type is: class org.evosuite.testcase.statements.MethodStatement return type class com.sap.engine.services.dc.wsgate.DeployWSPortTypeBindingStub
statement code is: DeployWSPortTypeBindingStub port = (DeployWSPortTypeBindingStub)deployWSServiceLocator.getPort(wSDDDeployment.QNAME_ARRAYMAPPING, arg1)
test data is: WSDDDeployment wSDDDeployment = new WSDDDeployment();
DeployWSServiceLocator deployWSServiceLocator = new DeployWSServiceLocator(wSDDDeployment);
Class<DeployWSPortTypeBindingStub> class = DeployWSPortTypeBindingStub.class;
deployWSServiceLocator.getPort(wSDDDeployment.QNAME_ARRAYMAPPING, class);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        WSDDDeployment wSDDDeployment = new WSDDDeployment();
        DeployWSServiceLocator deployWSServiceLocator = new DeployWSServiceLocator(wSDDDeployment);
        Class<DeployWSPortTypeBindingStub> $missing$ = DeployWSPortTypeBindingStub.class;
        deployWSServiceLocator.getPort(QNAME_ARRAYMAPPING.class);
    }
}
statement is: WSDDDeployment wSDDDeployment = new WSDDDeployment(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: DeployWSServiceLocator deployWSServiceLocator = new DeployWSServiceLocator(wSDDDeployment), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Class<DeployWSPortTypeBindingStub> $missing$ = DeployWSPortTypeBindingStub.class, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: DeployWSPortTypeBindingStub.class is DeployWSPortTypeBindingStub
statement is: deployWSServiceLocator.getPort(QNAME_ARRAYMAPPING.class), class spoon.support.reflect.code.CtInvocationImpl
invocation is: deployWSServiceLocator.getPort(QNAME_ARRAYMAPPING.class) target is: deployWSServiceLocator method is: getPort(java.lang.Class)
TestCase is: WSDDDeployment wSDDDeployment = new WSDDDeployment();
DeployWSServiceLocator deployWSServiceLocator = new DeployWSServiceLocator(wSDDDeployment);

* test suite isTestSuite: 31
Test 0: 
WSDDDeployment wSDDDeployment = new WSDDDeployment();
DeployWSServiceLocator deployWSServiceLocator = new DeployWSServiceLocator(wSDDDeployment);
deployWSServiceLocator.getDeployWSPort();
Test 1: 
DeployWSServiceLocator deployWSServiceLocator = null;
try {
  deployWSServiceLocator = new DeployWSServiceLocator();
  fail("Expecting exception: LinkageError");

} catch(LinkageError e) {
   //
   // loader constraint violation: when resolving method \"org.apache.commons.discovery.resource.classes.DiscoverClasses.findResourceClasses(Lorg/apache/commons/discovery/ResourceNameIterator;)Lorg/apache/commons/discovery/ResourceClassIterator;\" the class loader (instance of org/evosuite/instrumentation/InstrumentingClassLoader) of the current class, org/apache/axis/AxisProperties, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/apache/commons/discovery/resource/classes/ResourceClassDiscoverImpl, have different Class objects for the type org/apache/commons/discovery/ResourceNameIterator used in the signature
   //
   verifyException("org.apache.axis.AxisProperties", e);
}

Test 2: 
SOAP11Constants sOAP11Constants = new SOAP11Constants();
QName bodyQName = sOAP11Constants.getBodyQName();
DeployWSServiceLocator deployWSServiceLocator = null;
try {
  deployWSServiceLocator = new DeployWSServiceLocator("null", bodyQName);
  fail("Expecting exception: LinkageError");

} catch(LinkageError e) {
   //
   // loader constraint violation: when resolving method \"org.apache.commons.discovery.resource.classes.DiscoverClasses.findResourceClasses(Lorg/apache/commons/discovery/ResourceNameIterator;)Lorg/apache/commons/discovery/ResourceClassIterator;\" the class loader (instance of org/evosuite/instrumentation/InstrumentingClassLoader) of the current class, org/apache/axis/AxisProperties, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/apache/commons/discovery/resource/classes/ResourceClassDiscoverImpl, have different Class objects for the type org/apache/commons/discovery/ResourceNameIterator used in the signature
   //
   verifyException("org.apache.axis.AxisProperties", e);
}

Test 3: 
WSDDDeployment wSDDDeployment = new WSDDDeployment();
DeployWSServiceLocator deployWSServiceLocator = new DeployWSServiceLocator(wSDDDeployment);
deployWSServiceLocator.getServiceName();
Test 4: 
WSDDDeployment wSDDDeployment = new WSDDDeployment();
DeployWSServiceLocator deployWSServiceLocator = new DeployWSServiceLocator(wSDDDeployment);
deployWSServiceLocator.getDeployWSPortAddress();
Test 5: 
WSDDDeployment wSDDDeployment = new WSDDDeployment();
DeployWSServiceLocator deployWSServiceLocator = new DeployWSServiceLocator(wSDDDeployment);
deployWSServiceLocator.setDeployWSPortWSDDServiceName("faultFlow");
Test 6: 
WSDDDeployment wSDDDeployment = new WSDDDeployment();
DeployWSServiceLocator deployWSServiceLocator = new DeployWSServiceLocator(wSDDDeployment);
try { 
  deployWSServiceLocator.setEndpointAddress(wSDDDeployment.QNAME_JAXRPC_HANDLERINFO, "undeployment");
  fail("Expecting exception: ServiceException");

} catch(ServiceException e) {
   //
   //  Cannot set Endpoint Address for Unknown PorthandlerInfo
   //
   verifyException("com.sap.engine.services.dc.wsgate.DeployWSServiceLocator", e);
}

Test 7: 
WSDDDeployment wSDDDeployment = new WSDDDeployment();
DeployWSServiceLocator deployWSServiceLocator = new DeployWSServiceLocator(wSDDDeployment);
Class<DeployWSPortTypeBindingStub> class = DeployWSPortTypeBindingStub.class;
deployWSServiceLocator.getPort((QName) null, class);
Test 8: 
WSDDDeployment wSDDDeployment = new WSDDDeployment();
DeployWSServiceLocator deployWSServiceLocator = new DeployWSServiceLocator(wSDDDeployment);
deployWSServiceLocator.getPorts();
deployWSServiceLocator.getPorts();
Test 9: 
WSDDDeployment wSDDDeployment = new WSDDDeployment();
DeployWSServiceLocator deployWSServiceLocator = new DeployWSServiceLocator(wSDDDeployment);
deployWSServiceLocator.setEndpointAddress("DeployWSPort", "org.apache.axis.encoding.ser.ArraySerializerFactory");
Test 10: 
WSDDDeployment wSDDDeployment = new WSDDDeployment();
DeployWSServiceLocator deployWSServiceLocator = new DeployWSServiceLocator(wSDDDeployment);
deployWSServiceLocator.getDeployWSPortWSDDServiceName();
Test 11: 
WSDDDeployment wSDDDeployment = new WSDDDeployment();
DeployWSServiceLocator deployWSServiceLocator = new DeployWSServiceLocator(wSDDDeployment);
deployWSServiceLocator.getDeployWSPort((URL) null);
Test 12: 
WSDDDeployment wSDDDeployment = new WSDDDeployment();
DeployWSServiceLocator deployWSServiceLocator = new DeployWSServiceLocator(wSDDDeployment);
Class<DeployWSPortTypeBindingStub> class = DeployWSPortTypeBindingStub.class;
deployWSServiceLocator.getPort(class);
Test 13: 
WSDDDeployment wSDDDeployment = new WSDDDeployment();
DeployWSServiceLocator deployWSServiceLocator = new DeployWSServiceLocator(wSDDDeployment);
Class<Object> class = Object.class;
try { 
  deployWSServiceLocator.getPort(class);
  fail("Expecting exception: ServiceException");

} catch(ServiceException e) {
   //
   // There is no stub implementation for the interface:  java.lang.Object
   //
   verifyException("com.sap.engine.services.dc.wsgate.DeployWSServiceLocator", e);
}

Test 14: 
BasicClientConfig basicClientConfig = new BasicClientConfig();
DeployWSServiceLocator deployWSServiceLocator = new DeployWSServiceLocator(basicClientConfig);
try { 
  deployWSServiceLocator.setEndpointAddress("bHv\ne<rrgp Cyvl", "bHv\ne<rrgp Cyvl");
  fail("Expecting exception: ServiceException");

} catch(ServiceException e) {
   //
   //  Cannot set Endpoint Address for Unknown PortbHv
   // e<rrgp Cyvl
   //
   verifyException("com.sap.engine.services.dc.wsgate.DeployWSServiceLocator", e);
}

Test 15: 
WSDDDeployment wSDDDeployment = new WSDDDeployment();
DeployWSServiceLocator deployWSServiceLocator = new DeployWSServiceLocator(wSDDDeployment);
deployWSServiceLocator.setDeployWSPortEndpointAddress("SR\"O}* ?dgf(N*(^5");
try { 
  deployWSServiceLocator.getDeployWSPort();
  fail("Expecting exception: ServiceException");

} catch(ServiceException e) {
   //
   // java.net.MalformedURLException: no protocol: SR\"O}* ?dgf(N*(^5
   //
   verifyException("com.sap.engine.services.dc.wsgate.DeployWSServiceLocator", e);
}

Test 16: 
WSDDDeployment wSDDDeployment = new WSDDDeployment();
DeployWSServiceLocator deployWSServiceLocator = new DeployWSServiceLocator(wSDDDeployment);
deployWSServiceLocator.setDeployWSPortEndpointAddress("operation");
Class<DeployWSPortTypeBindingStub> class = DeployWSPortTypeBindingStub.class;
try { 
  deployWSServiceLocator.getPort(wSDDDeployment.QNAME_FAULT, class);
  fail("Expecting exception: ServiceException");

} catch(ServiceException e) {
   //
   // java.net.MalformedURLException: no protocol: operation
   //
   verifyException("com.sap.engine.services.dc.wsgate.DeployWSServiceLocator", e);
}

Test 17: 
WSDDDeployment wSDDDeployment = new WSDDDeployment();
DeployWSServiceLocator deployWSServiceLocator = new DeployWSServiceLocator(wSDDDeployment);
Class<DeployWSPortTypeBindingStub> class = DeployWSPortTypeBindingStub.class;
deployWSServiceLocator.getPort(wSDDDeployment.QNAME_ARRAYMAPPING, class);
Test 18: 
DeployWSServiceLocator deployWSServiceLocator = new DeployWSServiceLocator();

Test 19: 
SOAP11Constants sOAP11Constants = new SOAP11Constants();
QName bodyQName = sOAP11Constants.getBodyQName();
DeployWSServiceLocator deployWSServiceLocator = new DeployWSServiceLocator("null", bodyQName);
SOAP11Constants sOAP11Constants = new SOAP11Constants();
QName bodyQName = sOAP11Constants.getBodyQName();
String string = "http://example.com/test";
DeployWSServiceLocator deployWSServiceLocator = new DeployWSServiceLocator(string, bodyQName);

Test 20: 
WSDDDeployment wSDDDeployment = new WSDDDeployment();
DeployWSServiceLocator deployWSServiceLocator = new DeployWSServiceLocator(wSDDDeployment);

Test 21: 
WSDDDeployment wSDDDeployment = new WSDDDeployment();
DeployWSServiceLocator deployWSServiceLocator = new DeployWSServiceLocator(wSDDDeployment);
deployWSServiceLocator.setDeployWSPortWSDDServiceName("faultFlow");

Test 22: 
WSDDDeployment wSDDDeployment = new WSDDDeployment();
DeployWSServiceLocator deployWSServiceLocator = new DeployWSServiceLocator(wSDDDeployment);
deployWSServiceLocator.setEndpointAddress((QName) "myService", (String) null);

Test 23: 
WSDDDeployment wSDDDeployment = new WSDDDeployment();
DeployWSServiceLocator deployWSServiceLocator = new DeployWSServiceLocator(wSDDDeployment);
deployWSServiceLocator.setEndpointAddress("DeployWSPort", "org.apache.axis.encoding.ser.ArraySerializerFactory");
deployWSServiceLocator.setEndpointAddress("https://www.example.com/DeployWSPort", "org.apache.axis.encoding.ser.ArraySerializerFactory");

Test 24: 
WSDDDeployment wSDDDeployment = new WSDDDeployment();
DeployWSServiceLocator deployWSServiceLocator = new DeployWSServiceLocator(wSDDDeployment);
deployWSServiceLocator.getDeployWSPort((URL) null);

Test 25: 
WSDDDeployment wSDDDeployment = new WSDDDeployment();
DeployWSServiceLocator deployWSServiceLocator = new DeployWSServiceLocator(wSDDDeployment);

Test 26: 
WSDDDeployment wSDDDeployment = new WSDDDeployment();
DeployWSServiceLocator deployWSServiceLocator = new DeployWSServiceLocator(wSDDDeployment);

Test 27: 
BasicClientConfig basicClientConfig = new BasicClientConfig();
DeployWSServiceLocator deployWSServiceLocator = new DeployWSServiceLocator(basicClientConfig);
deployWSServiceLocator.setEndpointAddress("https://www.example.com", "https://www.example2.com");

Test 28: 
WSDDDeployment wSDDDeployment = new WSDDDeployment();
DeployWSServiceLocator deployWSServiceLocator = new DeployWSServiceLocator(wSDDDeployment);
deployWSServiceLocator.setDeployWSPortEndpointAddress("https://my-webservice.com/api/v1");
deployWSServiceLocator.getDeployWSPort();

Test 29: 
WSDDDeployment wSDDDeployment = new WSDDDeployment();
DeployWSServiceLocator deployWSServiceLocator = new DeployWSServiceLocator(wSDDDeployment);
deployWSServiceLocator.setDeployWSPortEndpointAddress("https://example.com/service/deploy");

Test 30: 
WSDDDeployment wSDDDeployment = new WSDDDeployment();
DeployWSServiceLocator deployWSServiceLocator = new DeployWSServiceLocator(wSDDDeployment);


* Generated after the refinement and before minimization 31 tests with total length 99
* test suite isTestSuite: 31
Test 0: 
WSDDDeployment wSDDDeployment = new WSDDDeployment();
DeployWSServiceLocator deployWSServiceLocator = new DeployWSServiceLocator(wSDDDeployment);
deployWSServiceLocator.getDeployWSPort();
Test 1: 
DeployWSServiceLocator deployWSServiceLocator = null;
try {
  deployWSServiceLocator = new DeployWSServiceLocator();
  fail("Expecting exception: LinkageError");

} catch(LinkageError e) {
   //
   // loader constraint violation: when resolving method \"org.apache.commons.discovery.resource.classes.DiscoverClasses.findResourceClasses(Lorg/apache/commons/discovery/ResourceNameIterator;)Lorg/apache/commons/discovery/ResourceClassIterator;\" the class loader (instance of org/evosuite/instrumentation/InstrumentingClassLoader) of the current class, org/apache/axis/AxisProperties, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/apache/commons/discovery/resource/classes/ResourceClassDiscoverImpl, have different Class objects for the type org/apache/commons/discovery/ResourceNameIterator used in the signature
   //
   verifyException("org.apache.axis.AxisProperties", e);
}

Test 2: 
SOAP11Constants sOAP11Constants = new SOAP11Constants();
QName bodyQName = sOAP11Constants.getBodyQName();
DeployWSServiceLocator deployWSServiceLocator = null;
try {
  deployWSServiceLocator = new DeployWSServiceLocator("null", bodyQName);
  fail("Expecting exception: LinkageError");

} catch(LinkageError e) {
   //
   // loader constraint violation: when resolving method \"org.apache.commons.discovery.resource.classes.DiscoverClasses.findResourceClasses(Lorg/apache/commons/discovery/ResourceNameIterator;)Lorg/apache/commons/discovery/ResourceClassIterator;\" the class loader (instance of org/evosuite/instrumentation/InstrumentingClassLoader) of the current class, org/apache/axis/AxisProperties, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/apache/commons/discovery/resource/classes/ResourceClassDiscoverImpl, have different Class objects for the type org/apache/commons/discovery/ResourceNameIterator used in the signature
   //
   verifyException("org.apache.axis.AxisProperties", e);
}

Test 3: 
WSDDDeployment wSDDDeployment = new WSDDDeployment();
DeployWSServiceLocator deployWSServiceLocator = new DeployWSServiceLocator(wSDDDeployment);
deployWSServiceLocator.getServiceName();
Test 4: 
WSDDDeployment wSDDDeployment = new WSDDDeployment();
DeployWSServiceLocator deployWSServiceLocator = new DeployWSServiceLocator(wSDDDeployment);
deployWSServiceLocator.getDeployWSPortAddress();
Test 5: 
WSDDDeployment wSDDDeployment = new WSDDDeployment();
DeployWSServiceLocator deployWSServiceLocator = new DeployWSServiceLocator(wSDDDeployment);
deployWSServiceLocator.setDeployWSPortWSDDServiceName("faultFlow");
Test 6: 
WSDDDeployment wSDDDeployment = new WSDDDeployment();
DeployWSServiceLocator deployWSServiceLocator = new DeployWSServiceLocator(wSDDDeployment);
try { 
  deployWSServiceLocator.setEndpointAddress(wSDDDeployment.QNAME_JAXRPC_HANDLERINFO, "undeployment");
  fail("Expecting exception: ServiceException");

} catch(ServiceException e) {
   //
   //  Cannot set Endpoint Address for Unknown PorthandlerInfo
   //
   verifyException("com.sap.engine.services.dc.wsgate.DeployWSServiceLocator", e);
}

Test 7: 
WSDDDeployment wSDDDeployment = new WSDDDeployment();
DeployWSServiceLocator deployWSServiceLocator = new DeployWSServiceLocator(wSDDDeployment);
Class<DeployWSPortTypeBindingStub> class = DeployWSPortTypeBindingStub.class;
deployWSServiceLocator.getPort((QName) null, class);
Test 8: 
WSDDDeployment wSDDDeployment = new WSDDDeployment();
DeployWSServiceLocator deployWSServiceLocator = new DeployWSServiceLocator(wSDDDeployment);
deployWSServiceLocator.getPorts();
deployWSServiceLocator.getPorts();
Test 9: 
WSDDDeployment wSDDDeployment = new WSDDDeployment();
DeployWSServiceLocator deployWSServiceLocator = new DeployWSServiceLocator(wSDDDeployment);
deployWSServiceLocator.setEndpointAddress("DeployWSPort", "org.apache.axis.encoding.ser.ArraySerializerFactory");
Test 10: 
WSDDDeployment wSDDDeployment = new WSDDDeployment();
DeployWSServiceLocator deployWSServiceLocator = new DeployWSServiceLocator(wSDDDeployment);
deployWSServiceLocator.getDeployWSPortWSDDServiceName();
Test 11: 
WSDDDeployment wSDDDeployment = new WSDDDeployment();
DeployWSServiceLocator deployWSServiceLocator = new DeployWSServiceLocator(wSDDDeployment);
deployWSServiceLocator.getDeployWSPort((URL) null);
Test 12: 
WSDDDeployment wSDDDeployment = new WSDDDeployment();
DeployWSServiceLocator deployWSServiceLocator = new DeployWSServiceLocator(wSDDDeployment);
Class<DeployWSPortTypeBindingStub> class = DeployWSPortTypeBindingStub.class;
deployWSServiceLocator.getPort(class);
Test 13: 
WSDDDeployment wSDDDeployment = new WSDDDeployment();
DeployWSServiceLocator deployWSServiceLocator = new DeployWSServiceLocator(wSDDDeployment);
Class<Object> class = Object.class;
try { 
  deployWSServiceLocator.getPort(class);
  fail("Expecting exception: ServiceException");

} catch(ServiceException e) {
   //
   // There is no stub implementation for the interface:  java.lang.Object
   //
   verifyException("com.sap.engine.services.dc.wsgate.DeployWSServiceLocator", e);
}

Test 14: 
BasicClientConfig basicClientConfig = new BasicClientConfig();
DeployWSServiceLocator deployWSServiceLocator = new DeployWSServiceLocator(basicClientConfig);
try { 
  deployWSServiceLocator.setEndpointAddress("bHv\ne<rrgp Cyvl", "bHv\ne<rrgp Cyvl");
  fail("Expecting exception: ServiceException");

} catch(ServiceException e) {
   //
   //  Cannot set Endpoint Address for Unknown PortbHv
   // e<rrgp Cyvl
   //
   verifyException("com.sap.engine.services.dc.wsgate.DeployWSServiceLocator", e);
}

Test 15: 
WSDDDeployment wSDDDeployment = new WSDDDeployment();
DeployWSServiceLocator deployWSServiceLocator = new DeployWSServiceLocator(wSDDDeployment);
deployWSServiceLocator.setDeployWSPortEndpointAddress("SR\"O}* ?dgf(N*(^5");
try { 
  deployWSServiceLocator.getDeployWSPort();
  fail("Expecting exception: ServiceException");

} catch(ServiceException e) {
   //
   // java.net.MalformedURLException: no protocol: SR\"O}* ?dgf(N*(^5
   //
   verifyException("com.sap.engine.services.dc.wsgate.DeployWSServiceLocator", e);
}

Test 16: 
WSDDDeployment wSDDDeployment = new WSDDDeployment();
DeployWSServiceLocator deployWSServiceLocator = new DeployWSServiceLocator(wSDDDeployment);
deployWSServiceLocator.setDeployWSPortEndpointAddress("operation");
Class<DeployWSPortTypeBindingStub> class = DeployWSPortTypeBindingStub.class;
try { 
  deployWSServiceLocator.getPort(wSDDDeployment.QNAME_FAULT, class);
  fail("Expecting exception: ServiceException");

} catch(ServiceException e) {
   //
   // java.net.MalformedURLException: no protocol: operation
   //
   verifyException("com.sap.engine.services.dc.wsgate.DeployWSServiceLocator", e);
}

Test 17: 
WSDDDeployment wSDDDeployment = new WSDDDeployment();
DeployWSServiceLocator deployWSServiceLocator = new DeployWSServiceLocator(wSDDDeployment);
Class<DeployWSPortTypeBindingStub> class = DeployWSPortTypeBindingStub.class;
deployWSServiceLocator.getPort(wSDDDeployment.QNAME_ARRAYMAPPING, class);
Test 18: 
DeployWSServiceLocator deployWSServiceLocator = new DeployWSServiceLocator();

Test 19: 
SOAP11Constants sOAP11Constants = new SOAP11Constants();
QName bodyQName = sOAP11Constants.getBodyQName();
DeployWSServiceLocator deployWSServiceLocator = new DeployWSServiceLocator("null", bodyQName);
SOAP11Constants sOAP11Constants = new SOAP11Constants();
QName bodyQName = sOAP11Constants.getBodyQName();
String string = "http://example.com/test";
DeployWSServiceLocator deployWSServiceLocator = new DeployWSServiceLocator(string, bodyQName);

Test 20: 
WSDDDeployment wSDDDeployment = new WSDDDeployment();
DeployWSServiceLocator deployWSServiceLocator = new DeployWSServiceLocator(wSDDDeployment);

Test 21: 
WSDDDeployment wSDDDeployment = new WSDDDeployment();
DeployWSServiceLocator deployWSServiceLocator = new DeployWSServiceLocator(wSDDDeployment);
deployWSServiceLocator.setDeployWSPortWSDDServiceName("faultFlow");

Test 22: 
WSDDDeployment wSDDDeployment = new WSDDDeployment();
DeployWSServiceLocator deployWSServiceLocator = new DeployWSServiceLocator(wSDDDeployment);
deployWSServiceLocator.setEndpointAddress((QName) "myService", (String) null);

Test 23: 
WSDDDeployment wSDDDeployment = new WSDDDeployment();
DeployWSServiceLocator deployWSServiceLocator = new DeployWSServiceLocator(wSDDDeployment);
deployWSServiceLocator.setEndpointAddress("DeployWSPort", "org.apache.axis.encoding.ser.ArraySerializerFactory");
deployWSServiceLocator.setEndpointAddress("https://www.example.com/DeployWSPort", "org.apache.axis.encoding.ser.ArraySerializerFactory");

Test 24: 
WSDDDeployment wSDDDeployment = new WSDDDeployment();
DeployWSServiceLocator deployWSServiceLocator = new DeployWSServiceLocator(wSDDDeployment);
deployWSServiceLocator.getDeployWSPort((URL) null);

Test 25: 
WSDDDeployment wSDDDeployment = new WSDDDeployment();
DeployWSServiceLocator deployWSServiceLocator = new DeployWSServiceLocator(wSDDDeployment);

Test 26: 
WSDDDeployment wSDDDeployment = new WSDDDeployment();
DeployWSServiceLocator deployWSServiceLocator = new DeployWSServiceLocator(wSDDDeployment);

Test 27: 
BasicClientConfig basicClientConfig = new BasicClientConfig();
DeployWSServiceLocator deployWSServiceLocator = new DeployWSServiceLocator(basicClientConfig);
deployWSServiceLocator.setEndpointAddress("https://www.example.com", "https://www.example2.com");

Test 28: 
WSDDDeployment wSDDDeployment = new WSDDDeployment();
DeployWSServiceLocator deployWSServiceLocator = new DeployWSServiceLocator(wSDDDeployment);
deployWSServiceLocator.setDeployWSPortEndpointAddress("https://my-webservice.com/api/v1");
deployWSServiceLocator.getDeployWSPort();

Test 29: 
WSDDDeployment wSDDDeployment = new WSDDDeployment();
DeployWSServiceLocator deployWSServiceLocator = new DeployWSServiceLocator(wSDDDeployment);
deployWSServiceLocator.setDeployWSPortEndpointAddress("https://example.com/service/deploy");

Test 30: 
WSDDDeployment wSDDDeployment = new WSDDDeployment();
DeployWSServiceLocator deployWSServiceLocator = new DeployWSServiceLocator(wSDDDeployment);


* Minimizing test suite
* test suite isTestSuite: 18
Test 0: 
WSDDDeployment wSDDDeployment = new WSDDDeployment();
DeployWSServiceLocator deployWSServiceLocator = new DeployWSServiceLocator(wSDDDeployment);
deployWSServiceLocator.getDeployWSPort((URL) null);
Test 1: 
DeployWSServiceLocator deployWSServiceLocator = null;
try {
  deployWSServiceLocator = new DeployWSServiceLocator();
  fail("Expecting exception: LinkageError");

} catch(LinkageError e) {
   //
   // loader constraint violation: when resolving method \"org.apache.commons.discovery.resource.classes.DiscoverClasses.findResourceClasses(Lorg/apache/commons/discovery/ResourceNameIterator;)Lorg/apache/commons/discovery/ResourceClassIterator;\" the class loader (instance of org/evosuite/instrumentation/InstrumentingClassLoader) of the current class, org/apache/axis/AxisProperties, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/apache/commons/discovery/resource/classes/ResourceClassDiscoverImpl, have different Class objects for the type org/apache/commons/discovery/ResourceNameIterator used in the signature
   //
   verifyException("org.apache.axis.AxisProperties", e);
}

Test 2: 
SOAP11Constants sOAP11Constants = new SOAP11Constants();
QName bodyQName = sOAP11Constants.getBodyQName();
DeployWSServiceLocator deployWSServiceLocator = null;
try {
  deployWSServiceLocator = new DeployWSServiceLocator("null", bodyQName);
  fail("Expecting exception: LinkageError");

} catch(LinkageError e) {
   //
   // loader constraint violation: when resolving method \"org.apache.commons.discovery.resource.classes.DiscoverClasses.findResourceClasses(Lorg/apache/commons/discovery/ResourceNameIterator;)Lorg/apache/commons/discovery/ResourceClassIterator;\" the class loader (instance of org/evosuite/instrumentation/InstrumentingClassLoader) of the current class, org/apache/axis/AxisProperties, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/apache/commons/discovery/resource/classes/ResourceClassDiscoverImpl, have different Class objects for the type org/apache/commons/discovery/ResourceNameIterator used in the signature
   //
   verifyException("org.apache.axis.AxisProperties", e);
}

Test 3: 
WSDDDeployment wSDDDeployment = new WSDDDeployment();
DeployWSServiceLocator deployWSServiceLocator = new DeployWSServiceLocator(wSDDDeployment);
deployWSServiceLocator.getServiceName();
Test 4: 
WSDDDeployment wSDDDeployment = new WSDDDeployment();
DeployWSServiceLocator deployWSServiceLocator = new DeployWSServiceLocator(wSDDDeployment);
deployWSServiceLocator.getDeployWSPortAddress();
Test 5: 
WSDDDeployment wSDDDeployment = new WSDDDeployment();
DeployWSServiceLocator deployWSServiceLocator = new DeployWSServiceLocator(wSDDDeployment);
deployWSServiceLocator.setDeployWSPortWSDDServiceName("faultFlow");
Test 6: 
WSDDDeployment wSDDDeployment = new WSDDDeployment();
DeployWSServiceLocator deployWSServiceLocator = new DeployWSServiceLocator(wSDDDeployment);
try { 
  deployWSServiceLocator.setEndpointAddress(wSDDDeployment.QNAME_JAXRPC_HANDLERINFO, "undeployment");
  fail("Expecting exception: ServiceException");

} catch(ServiceException e) {
   //
   //  Cannot set Endpoint Address for Unknown PorthandlerInfo
   //
   verifyException("com.sap.engine.services.dc.wsgate.DeployWSServiceLocator", e);
}

Test 7: 
WSDDDeployment wSDDDeployment = new WSDDDeployment();
DeployWSServiceLocator deployWSServiceLocator = new DeployWSServiceLocator(wSDDDeployment);
deployWSServiceLocator.getDeployWSPort();
Test 8: 
WSDDDeployment wSDDDeployment = new WSDDDeployment();
DeployWSServiceLocator deployWSServiceLocator = new DeployWSServiceLocator(wSDDDeployment);
Class<Object> class = Object.class;
try { 
  deployWSServiceLocator.getPort(class);
  fail("Expecting exception: ServiceException");

} catch(ServiceException e) {
   //
   // There is no stub implementation for the interface:  java.lang.Object
   //
   verifyException("com.sap.engine.services.dc.wsgate.DeployWSServiceLocator", e);
}

Test 9: 
WSDDDeployment wSDDDeployment = new WSDDDeployment();
DeployWSServiceLocator deployWSServiceLocator = new DeployWSServiceLocator(wSDDDeployment);
Class<DeployWSPortTypeBindingStub> class = DeployWSPortTypeBindingStub.class;
deployWSServiceLocator.getPort((QName) null, class);
Test 10: 
WSDDDeployment wSDDDeployment = new WSDDDeployment();
DeployWSServiceLocator deployWSServiceLocator = new DeployWSServiceLocator(wSDDDeployment);
Class<DeployWSPortTypeBindingStub> class = DeployWSPortTypeBindingStub.class;
deployWSServiceLocator.getPort(wSDDDeployment.QNAME_ARRAYMAPPING, class);
Test 11: 
WSDDDeployment wSDDDeployment = new WSDDDeployment();
DeployWSServiceLocator deployWSServiceLocator = new DeployWSServiceLocator(wSDDDeployment);
deployWSServiceLocator.getPorts();
deployWSServiceLocator.getPorts();
Test 12: 
WSDDDeployment wSDDDeployment = new WSDDDeployment();
DeployWSServiceLocator deployWSServiceLocator = new DeployWSServiceLocator(wSDDDeployment);
deployWSServiceLocator.setEndpointAddress("DeployWSPort", "org.apache.axis.encoding.ser.ArraySerializerFactory");
Test 13: 
WSDDDeployment wSDDDeployment = new WSDDDeployment();
DeployWSServiceLocator deployWSServiceLocator = new DeployWSServiceLocator(wSDDDeployment);
deployWSServiceLocator.getDeployWSPortWSDDServiceName();
Test 14: 
WSDDDeployment wSDDDeployment = new WSDDDeployment();
DeployWSServiceLocator deployWSServiceLocator = new DeployWSServiceLocator(wSDDDeployment);
Class<DeployWSPortTypeBindingStub> class = DeployWSPortTypeBindingStub.class;
deployWSServiceLocator.getPort(class);
Test 15: 
BasicClientConfig basicClientConfig = new BasicClientConfig();
DeployWSServiceLocator deployWSServiceLocator = new DeployWSServiceLocator(basicClientConfig);
try { 
  deployWSServiceLocator.setEndpointAddress("bHv\ne<rrgp Cyvl", "bHv\ne<rrgp Cyvl");
  fail("Expecting exception: ServiceException");

} catch(ServiceException e) {
   //
   //  Cannot set Endpoint Address for Unknown PortbHv
   // e<rrgp Cyvl
   //
   verifyException("com.sap.engine.services.dc.wsgate.DeployWSServiceLocator", e);
}

Test 16: 
WSDDDeployment wSDDDeployment = new WSDDDeployment();
DeployWSServiceLocator deployWSServiceLocator = new DeployWSServiceLocator(wSDDDeployment);
deployWSServiceLocator.setDeployWSPortEndpointAddress("SR\"O}* ?dgf(N*(^5");
try { 
  deployWSServiceLocator.getDeployWSPort();
  fail("Expecting exception: ServiceException");

} catch(ServiceException e) {
   //
   // java.net.MalformedURLException: no protocol: SR\"O}* ?dgf(N*(^5
   //
   verifyException("com.sap.engine.services.dc.wsgate.DeployWSServiceLocator", e);
}

Test 17: 
WSDDDeployment wSDDDeployment = new WSDDDeployment();
DeployWSServiceLocator deployWSServiceLocator = new DeployWSServiceLocator(wSDDDeployment);
deployWSServiceLocator.setDeployWSPortEndpointAddress("operation");
Class<DeployWSPortTypeBindingStub> class = DeployWSPortTypeBindingStub.class;
try { 
  deployWSServiceLocator.getPort(wSDDDeployment.QNAME_FAULT, class);
  fail("Expecting exception: ServiceException");

} catch(ServiceException e) {
   //
   // java.net.MalformedURLException: no protocol: operation
   //
   verifyException("com.sap.engine.services.dc.wsgate.DeployWSServiceLocator", e);
}


* Going to analyze the coverage criteria
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 91%
* Total number of goals: 23
* Number of covered goals: 21
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 86%
* Total number of goals: 58
* Number of covered goals: 50
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 44%
* Total number of goals: 18
* Number of covered goals: 8
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 15
* Number of covered goals: 15
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 83%
* Total number of goals: 23
* Number of covered goals: 19
* Generated 18 tests with total length 60
* Resulting test suite's coverage: 81% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 32%
* Compiling and checking tests
Going to execute: removeTestsThatDoNotCompile
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: WSDDDeployment arg0 = new WSDDDeployment();
DeployWSServiceLocator deployWSServiceLocator = new DeployWSServiceLocator(arg0);
deployWSServiceLocator.getDeployWSPort((URL) null);
assertEquals("http://10.66.212.71:50000/DeployWSService/DeployWS", deployWSServiceLocator.getDeployWSPortAddress());
assertEquals("DeployWSPort", deployWSServiceLocator.getDeployWSPortWSDDServiceName());


** It was a parseable test case! 
refined test name is: testGetDeployWSPortAddressAndPortWSDDServiceName
* Compiling Tests
refined test name is: testGetDeployWSPortAddressAndPortWSDDServiceName
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: DeployWSServiceLocator deployWSServiceLocator = null;
try {
  deployWSServiceLocator = new DeployWSServiceLocator();
  fail("Expecting exception: LinkageError");

} catch(LinkageError e) {
   //
   // loader constraint violation: when resolving method \"org.apache.commons.discovery.resource.classes.DiscoverClasses.findResourceClasses(Lorg/apache/commons/discovery/ResourceNameIterator;)Lorg/apache/commons/discovery/ResourceClassIterator;\" the class loader (instance of org/evosuite/instrumentation/InstrumentingClassLoader) of the current class, org/apache/axis/AxisProperties, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/apache/commons/discovery/resource/classes/ResourceClassDiscoverImpl, have different Class objects for the type org/apache/commons/discovery/ResourceNameIterator used in the signature
   //
   verifyException("org.apache.axis.AxisProperties", e);
}


** It was a parseable test case! 
refined test name is: testCreateDeployWSServiceLocatorNoLinkageError
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: SOAP11Constants sOAP11Constants = new SOAP11Constants();
QName arg1 = sOAP11Constants.getBodyQName();
DeployWSServiceLocator deployWSServiceLocator = null;
try {
  deployWSServiceLocator = new DeployWSServiceLocator("null", arg1);
  fail("Expecting exception: LinkageError");

} catch(LinkageError e) {
   //
   // loader constraint violation: when resolving method \"org.apache.commons.discovery.resource.classes.DiscoverClasses.findResourceClasses(Lorg/apache/commons/discovery/ResourceNameIterator;)Lorg/apache/commons/discovery/ResourceClassIterator;\" the class loader (instance of org/evosuite/instrumentation/InstrumentingClassLoader) of the current class, org/apache/axis/AxisProperties, and the class loader (instance of sun/misc/Launcher$AppClassLoader) for the method's defining class, org/apache/commons/discovery/resource/classes/ResourceClassDiscoverImpl, have different Class objects for the type org/apache/commons/discovery/ResourceNameIterator used in the signature
   //
   verifyException("org.apache.axis.AxisProperties", e);
}


** It was a parseable test case! 
refined test name is: testFindResourceClassesThrowsLinkageError
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: WSDDDeployment arg0 = new WSDDDeployment();
DeployWSServiceLocator deployWSServiceLocator = new DeployWSServiceLocator(arg0);
deployWSServiceLocator.getServiceName();
assertEquals("http://10.66.212.71:50000/DeployWSService/DeployWS", deployWSServiceLocator.getDeployWSPortAddress());
assertEquals("DeployWSPort", deployWSServiceLocator.getDeployWSPortWSDDServiceName());


** It was a parseable test case! 
refined test name is: testDeployWSServiceLocator
* Compiling Tests
refined test name is: testGetServiceNameAndPortAddress
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: WSDDDeployment arg0 = new WSDDDeployment();
DeployWSServiceLocator deployWSServiceLocator = new DeployWSServiceLocator(arg0);
String deployWSPortAddress = deployWSServiceLocator.getDeployWSPortAddress();
assertEquals("http://10.66.212.71:50000/DeployWSService/DeployWS", deployWSPortAddress);
assertEquals("DeployWSPort", deployWSServiceLocator.getDeployWSPortWSDDServiceName());


** It was a parseable test case! 
refined test name is: testDeployWSServiceCorrectness
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: WSDDDeployment arg0 = new WSDDDeployment();
DeployWSServiceLocator deployWSServiceLocator = new DeployWSServiceLocator(arg0);
assertEquals("DeployWSPort", deployWSServiceLocator.getDeployWSPortWSDDServiceName());

deployWSServiceLocator.setDeployWSPortWSDDServiceName("faultFlow");
assertEquals("http://10.66.212.71:50000/DeployWSService/DeployWS", deployWSServiceLocator.getDeployWSPortAddress());


** It was a parseable test case! 
refined test name is: testDeployWSServiceLocatorMethods
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: WSDDDeployment arg0 = new WSDDDeployment();
DeployWSServiceLocator deployWSServiceLocator = new DeployWSServiceLocator(arg0);
try { 
  deployWSServiceLocator.setEndpointAddress(arg0.QNAME_JAXRPC_HANDLERINFO, "undeployment");
  fail("Expecting exception: ServiceException");

} catch(ServiceException e) {
   //
   //  Cannot set Endpoint Address for Unknown PorthandlerInfo
   //
   verifyException("com.sap.engine.services.dc.wsgate.DeployWSServiceLocator", e);
}


** It was a parseable test case! 
refined test name is: testSetEndpointAddressForUnknownPorthandlerInfo
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: WSDDDeployment arg0 = new WSDDDeployment();
DeployWSServiceLocator deployWSServiceLocator = new DeployWSServiceLocator(arg0);
assertEquals("http://10.66.212.71:50000/DeployWSService/DeployWS", deployWSServiceLocator.getDeployWSPortAddress());

deployWSServiceLocator.getDeployWSPort();
assertEquals("DeployWSPort", deployWSServiceLocator.getDeployWSPortWSDDServiceName());


** It was a parseable test case! 
refined test name is: testGetDeployWSPortAddressAndName
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: WSDDDeployment arg0 = new WSDDDeployment();
DeployWSServiceLocator deployWSServiceLocator = new DeployWSServiceLocator(arg0);
Class<DeployWSPortTypeBindingStub> arg1 = DeployWSPortTypeBindingStub.class;
deployWSServiceLocator.getPort((QName) null, arg1);
assertEquals("DeployWSPort", deployWSServiceLocator.getDeployWSPortWSDDServiceName());


** It was a parseable test case! 
refined test name is: testGetPortValidClassesReturnsCorrectValue
* Compiling Tests
refined test name is: testGetDeployWSPortWSDDServiceName
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: WSDDDeployment arg0 = new WSDDDeployment();
DeployWSServiceLocator deployWSServiceLocator = new DeployWSServiceLocator(arg0);
Class<DeployWSPortTypeBindingStub> arg1 = DeployWSPortTypeBindingStub.class;
deployWSServiceLocator.getPort(arg0.QNAME_ARRAYMAPPING, arg1);
assertEquals("DeployWSPort", deployWSServiceLocator.getDeployWSPortWSDDServiceName());


** It was a parseable test case! 
refined test name is: testGetDeployWSPortWSDDServiceName
* Compiling Tests
refined test name is: testGetPortWithQNAMEArrayMapping
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: WSDDDeployment arg0 = new WSDDDeployment();
DeployWSServiceLocator deployWSServiceLocator = new DeployWSServiceLocator(arg0);
deployWSServiceLocator.getPorts();
deployWSServiceLocator.getPorts();
assertEquals("DeployWSPort", deployWSServiceLocator.getDeployWSPortWSDDServiceName());


** It was a parseable test case! 
refined test name is: testGetPortsReturnsExpectedPortName
* Compiling Tests
refined test name is: testGetPortsReturnsExpectedPortName
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: WSDDDeployment arg0 = new WSDDDeployment();
DeployWSServiceLocator deployWSServiceLocator = new DeployWSServiceLocator(arg0);
deployWSServiceLocator.setEndpointAddress("DeployWSPort", "org.apache.axis.encoding.ser.ArraySerializerFactory");
assertEquals("org.apache.axis.encoding.ser.ArraySerializerFactory", deployWSServiceLocator.getDeployWSPortAddress());


** It was a parseable test case! 
refined test name is: testSetEndpointAddress
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: WSDDDeployment arg0 = new WSDDDeployment();
DeployWSServiceLocator deployWSServiceLocator = new DeployWSServiceLocator(arg0);
String deployWSPortWSDDServiceName = deployWSServiceLocator.getDeployWSPortWSDDServiceName();
assertEquals("DeployWSPort", deployWSPortWSDDServiceName);


** It was a parseable test case! 
refined test name is: testGetDeployWSPortWSDDServiceName
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: BasicClientConfig arg0 = new BasicClientConfig();
DeployWSServiceLocator deployWSServiceLocator = new DeployWSServiceLocator(arg0);
try { 
  deployWSServiceLocator.setEndpointAddress("bHv\ne<rrgp Cyvl", "bHv\ne<rrgp Cyvl");
  fail("Expecting exception: ServiceException");

} catch(ServiceException e) {
   //
   //  Cannot set Endpoint Address for Unknown PortbHv
   // e<rrgp Cyvl
   //
   verifyException("com.sap.engine.services.dc.wsgate.DeployWSServiceLocator", e);
}


** It was a parseable test case! 
refined test name is: testInvalidEndpointAddressThrowsServiceException
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: WSDDDeployment arg0 = new WSDDDeployment();
DeployWSServiceLocator deployWSServiceLocator = new DeployWSServiceLocator(arg0);
deployWSServiceLocator.setDeployWSPortEndpointAddress("SR\"O}* ?dgf(N*(^5");
try { 
  deployWSServiceLocator.getDeployWSPort();
  fail("Expecting exception: ServiceException");

} catch(ServiceException e) {
   //
   // java.net.MalformedURLException: no protocol: SR\"O}* ?dgf(N*(^5
   //
   verifyException("com.sap.engine.services.dc.wsgate.DeployWSServiceLocator", e);
}


** It was a parseable test case! 
refined test name is: testGetDeployWSPortInvalidEndpointAddress
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: WSDDDeployment arg0 = new WSDDDeployment();
DeployWSServiceLocator deployWSServiceLocator = new DeployWSServiceLocator(arg0);
deployWSServiceLocator.setDeployWSPortEndpointAddress("operation");
Class<DeployWSPortTypeBindingStub> arg1 = DeployWSPortTypeBindingStub.class;
try { 
  deployWSServiceLocator.getPort(arg0.QNAME_FAULT, arg1);
  fail("Expecting exception: ServiceException");

} catch(ServiceException e) {
   //
   // java.net.MalformedURLException: no protocol: operation
   //
   verifyException("com.sap.engine.services.dc.wsgate.DeployWSServiceLocator", e);
}


** It was a parseable test case! 
refined test name is: testDeployWSServiceLocatorMalformedURLException
* Compiling Tests
refined test name is: testDeployWSServiceLocatorMalformedURLException
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 18:39:28.875 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar8112009358147747817.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 18:39:28.905 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8112009358147747817.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 18:39:29.146 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar8112009358147747817.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 18:39:29.150 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8112009358147747817.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 18:39:29.362 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar8112009358147747817.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 18:39:29.364 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8112009358147747817.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 18:39:29.532 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar8112009358147747817.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 18:39:29.537 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8112009358147747817.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 18:39:29.762 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar8112009358147747817.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 18:39:29.765 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8112009358147747817.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 18:39:30.002 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar8112009358147747817.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 18:39:30.006 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8112009358147747817.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 18:39:30.248 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar8112009358147747817.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 18:39:30.252 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8112009358147747817.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 18:39:30.494 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar8112009358147747817.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 18:39:30.497 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8112009358147747817.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 18:39:30.717 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar8112009358147747817.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 18:39:30.720 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8112009358147747817.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 18:39:30.933 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar8112009358147747817.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 18:39:30.936 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8112009358147747817.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 18:39:31.114 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar8112009358147747817.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 18:39:31.117 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8112009358147747817.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 18:39:31.275 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar8112009358147747817.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 18:39:31.277 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8112009358147747817.jar
[MASTER] 18:39:31.424 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar8112009358147747817.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 18:39:31.427 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8112009358147747817.jar
[MASTER] 18:39:31.580 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar8112009358147747817.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 18:39:31.582 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8112009358147747817.jar
[MASTER] 18:39:31.822 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar8112009358147747817.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 18:39:31.831 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8112009358147747817.jar
[MASTER] 18:39:32.036 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar8112009358147747817.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 18:39:32.039 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8112009358147747817.jar
** Write a test suite: 0 called: 0 to improve: false
** Write a test suite: 3 called: 1 to improve: false
** Write a test suite: 8 called: 2 to improve: false
** Write a test suite: 9 called: 3 to improve: false
** Write a test suite: 10 called: 4 to improve: false
** Write a test suite: 15 called: 5 to improve: false
[MASTER] 18:39:32.589 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar8112009358147747817.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 18:39:32.592 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8112009358147747817.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
** Write a test suite: 5 called: 1 to improve: false
** Write a test suite: 6 called: 2 to improve: false
** Write a test suite: 7 called: 3 to improve: false
** Write a test suite: 12 called: 4 to improve: false
** Write a test suite: 15 called: 5 to improve: false
[MASTER] 18:39:33.174 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar8112009358147747817.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 18:39:33.179 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8112009358147747817.jar
* Writing tests to file
* Writing JUnit test case 'DeployWSServiceLocator_ESTest' to evosuite-tests
** Write a test suite: 0 called: 0 to improve: false
** Write a test suite: 5 called: 1 to improve: false
** Write a test suite: 6 called: 2 to improve: false
** Write a test suite: 7 called: 3 to improve: false
** Write a test suite: 12 called: 4 to improve: false
** Write a test suite: 15 called: 5 to improve: false
* Done!

* Computation finished
