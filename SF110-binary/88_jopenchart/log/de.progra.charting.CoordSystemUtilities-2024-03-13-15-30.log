* EvoSuite 1.0.0-SNAPSHOT
* Going to generate test cases for class: de.progra.charting.CoordSystemUtilities
* Starting Client-0
* Properties loaded from /home/roham/Results-Utestgen/dataset/SF110-new-res/88_jopenchart/evosuite-files/evosuite.properties
* Connecting to master process on port 11250
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 15:31:00.438 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 15:31:00.439 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 15:31:00.440 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
[MASTER] 15:31:00.959 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 15:31:00.960 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 15:31:00.972 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 15:31:02.944 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.ZoneId
[MASTER] 15:31:03.036 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.Temporal
[MASTER] 15:31:03.036 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAccessor
[MASTER] 15:31:03.036 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalField
[MASTER] 15:31:03.037 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalUnit
[MASTER] 15:31:03.037 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAmount
[MASTER] 15:31:03.038 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.Clock
[MASTER] 15:31:03.039 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalQuery
[MASTER] 15:31:03.039 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAdjuster
[MASTER] 15:31:03.058 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.Chronology
[MASTER] 15:31:03.068 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.Era
* Finished analyzing classpath
* Generating tests for class de.progra.charting.CoordSystemUtilities
* Test criteria:
  - Branch Coverage
  - Line Coverage
  - Method-Output Coverage
  - Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 450
* Using seed 1710343857694
* Starting evolution
[Progress:>                             0%] [Cov:>                                  0%]* Initial Number of Goals in DynaMOSA = 188 / 450
[Progress:>                             0%] [Cov:==========>                        29%][Progress:>                             1%] [Cov:============>                      35%][Progress:>                             1%] [Cov:=============>                     38%][Progress:>                             1%] [Cov:===============>                   43%][Progress:>                             1%] [Cov:================>                  47%][Progress:>                             1%] [Cov:================>                  47%][Progress:>                             2%] [Cov:================>                  47%][Progress:>                             2%] [Cov:================>                  47%][Progress:>                             2%] [Cov:================>                  47%][Progress:>                             2%] [Cov:================>                  48%][Progress:>                             2%] [Cov:================>                  48%][Progress:>                             2%] [Cov:================>                  48%][Progress:>                             2%] [Cov:================>                  48%][Progress:>                             2%] [Cov:=================>                 49%][Progress:>                             3%] [Cov:=================>                 49%][Progress:>                             3%] [Cov:=================>                 49%][Progress:>                             3%] [Cov:=================>                 49%][Progress:>                             3%] [Cov:==================>                53%][Progress:>                             3%] [Cov:==================>                53%][Progress:>                             3%] [Cov:==================>                54%][MASTER] 15:31:11.128 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.ChronoLocalDate
[Progress:>                             3%] [Cov:==================>                54%][Progress:>                             3%] [Cov:==================>                54%][Progress:=>                            4%] [Cov:==================>                54%][Progress:=>                            4%] [Cov:==================>                54%][Progress:=>                            4%] [Cov:==================>                54%][Progress:=>                            4%] [Cov:==================>                54%][Progress:=>                            4%] [Cov:==================>                54%][Progress:=>                            4%] [Cov:==================>                54%][Progress:=>                            4%] [Cov:==================>                54%][Progress:=>                            4%] [Cov:===================>               55%][Progress:=>                            4%] [Cov:===================>               55%][Progress:=>                            5%] [Cov:===================>               55%][Progress:=>                            5%] [Cov:===================>               55%][Progress:=>                            5%] [Cov:===================>               55%][Progress:=>                            5%] [Cov:===================>               55%][Progress:=>                            5%] [Cov:===================>               55%][Progress:=>                            5%] [Cov:===================>               55%][Progress:=>                            5%] [Cov:===================>               55%][Progress:=>                            5%] [Cov:===================>               55%][Progress:=>                            5%] [Cov:===================>               55%][Progress:=>                            5%] [Cov:===================>               55%][Progress:=>                            5%] [Cov:===================>               56%][Progress:=>                            6%] [Cov:===================>               56%][Progress:=>                            6%] [Cov:===================>               57%][Progress:=>                            6%] [Cov:===================>               57%][Progress:=>                            6%] [Cov:===================>               57%][Progress:=>                            6%] [Cov:===================>               57%][Progress:=>                            6%] [Cov:===================>               57%][Progress:=>                            6%] [Cov:===================>               57%][Progress:=>                            6%] [Cov:===================>               57%][Progress:=>                            6%] [Cov:===================>               57%][Progress:=>                            6%] [Cov:===================>               57%][Progress:=>                            6%] [Cov:====================>              58%][Progress:=>                            6%] [Cov:====================>              58%][Progress:=>                            6%] [Cov:====================>              58%][Progress:=>                            6%] [Cov:====================>              58%][Progress:=>                            6%] [Cov:====================>              58%][Progress:==>                           7%] [Cov:====================>              58%][Progress:==>                           7%] [Cov:====================>              58%][Progress:==>                           7%] [Cov:====================>              58%][Progress:==>                           7%] [Cov:====================>              58%][Progress:==>                           7%] [Cov:====================>              58%][Progress:==>                           7%] [Cov:====================>              58%][Progress:==>                           7%] [Cov:====================>              59%][Progress:==>                           7%] [Cov:====================>              59%][Progress:==>                           7%] [Cov:====================>              59%][Progress:==>                           7%] [Cov:====================>              59%][Progress:==>                           7%] [Cov:====================>              59%][Progress:==>                           7%] [Cov:====================>              59%][Progress:==>                           8%] [Cov:====================>              59%][Progress:==>                           8%] [Cov:====================>              59%][Progress:==>                           8%] [Cov:=====================>             60%][Progress:==>                           8%] [Cov:=====================>             60%][Progress:==>                           8%] [Cov:=====================>             60%][Progress:==>                           8%] [Cov:=====================>             60%][Progress:==>                           8%] [Cov:=====================>             60%][Progress:==>                           8%] [Cov:=====================>             60%][Progress:==>                           8%] [Cov:=====================>             60%][Progress:==>                           8%] [Cov:=====================>             60%][Progress:==>                           8%] [Cov:=====================>             60%][Progress:==>                           8%] [Cov:=====================>             60%][Progress:==>                           8%] [Cov:=====================>             60%][Progress:==>                           8%] [Cov:=====================>             60%][Progress:==>                           9%] [Cov:=====================>             60%][Progress:==>                           9%] [Cov:=====================>             60%][Progress:==>                           9%] [Cov:=====================>             60%][Progress:==>                           9%] [Cov:=====================>             61%][Progress:==>                           9%] [Cov:=====================>             61%][Progress:==>                           9%] [Cov:=====================>             61%][Progress:==>                           9%] [Cov:=====================>             61%][Progress:==>                           9%] [Cov:=====================>             62%][Progress:==>                           9%] [Cov:=====================>             62%][Progress:==>                           9%] [Cov:=====================>             62%][Progress:==>                           9%] [Cov:=====================>             62%][Progress:==>                           9%] [Cov:=====================>             62%][Progress:==>                           9%] [Cov:=====================>             62%][Progress:==>                           9%] [Cov:=====================>             62%][Progress:==>                           9%] [Cov:=====================>             62%][Progress:==>                           9%] [Cov:=====================>             62%][Progress:===>                          10%] [Cov:=====================>             62%][Progress:===>                          10%] [Cov:=====================>             62%][Progress:===>                          10%] [Cov:=====================>             62%][Progress:===>                          10%] [Cov:=====================>             62%][Progress:===>                          10%] [Cov:=====================>             62%][Progress:===>                          10%] [Cov:=====================>             62%][Progress:===>                          10%] [Cov:=====================>             62%][Progress:===>                          10%] [Cov:=====================>             62%][Progress:===>                          10%] [Cov:=====================>             62%][Progress:===>                          10%] [Cov:=====================>             62%][Progress:===>                          10%] [Cov:=====================>             62%][Progress:===>                          10%] [Cov:=====================>             62%][Progress:===>                          10%] [Cov:=====================>             62%][Progress:===>                          10%] [Cov:=====================>             62%][Progress:===>                          11%] [Cov:=====================>             62%][Progress:===>                          11%] [Cov:=====================>             62%][Progress:===>                          11%] [Cov:=====================>             62%][Progress:===>                          11%] [Cov:=====================>             62%][Progress:===>                          11%] [Cov:=====================>             62%][Progress:===>                          11%] [Cov:=====================>             62%][Progress:===>                          11%] [Cov:=====================>             62%][Progress:===>                          11%] [Cov:=====================>             62%][Progress:===>                          11%] [Cov:=====================>             62%][Progress:===>                          11%] [Cov:=====================>             62%][Progress:===>                          11%] [Cov:=====================>             62%][Progress:===>                          11%] [Cov:=====================>             62%][Progress:===>                          11%] [Cov:=====================>             62%][Progress:===>                          11%] [Cov:=====================>             62%][Progress:===>                          11%] [Cov:=====================>             62%][Progress:===>                          12%] [Cov:=====================>             62%][Progress:===>                          12%] [Cov:=====================>             62%][Progress:===>                          12%] [Cov:=====================>             62%][Progress:===>                          12%] [Cov:=====================>             62%][Progress:===>                          12%] [Cov:=====================>             62%][Progress:===>                          12%] [Cov:=====================>             62%][Progress:===>                          12%] [Cov:=====================>             62%][Progress:===>                          12%] [Cov:=====================>             62%][Progress:===>                          12%] [Cov:=====================>             62%][Progress:===>                          12%] [Cov:=====================>             62%][Progress:===>                          12%] [Cov:=====================>             62%][Progress:===>                          12%] [Cov:=====================>             62%][Progress:===>                          12%] [Cov:=====================>             62%][Progress:===>                          12%] [Cov:=====================>             62%][Progress:===>                          12%] [Cov:=====================>             62%][Progress:===>                          12%] [Cov:=====================>             62%][Progress:===>                          13%] [Cov:=====================>             62%][Progress:===>                          13%] [Cov:=====================>             62%][Progress:===>                          13%] [Cov:======================>            63%][Progress:===>                          13%] [Cov:======================>            63%][Progress:===>                          13%] [Cov:======================>            63%][Progress:===>                          13%] [Cov:======================>            63%][Progress:===>                          13%] [Cov:======================>            63%][Progress:===>                          13%] [Cov:======================>            63%][Progress:===>                          13%] [Cov:======================>            63%][Progress:===>                          13%] [Cov:======================>            63%][Progress:===>                          13%] [Cov:======================>            63%][Progress:===>                          13%] [Cov:======================>            64%][Progress:===>                          13%] [Cov:======================>            64%][Progress:===>                          13%] [Cov:======================>            64%][Progress:====>                         14%] [Cov:======================>            64%][Progress:====>                         14%] [Cov:======================>            64%][Progress:====>                         14%] [Cov:======================>            64%][Progress:====>                         14%] [Cov:======================>            64%][Progress:====>                         14%] [Cov:======================>            64%][Progress:====>                         14%] [Cov:======================>            64%][Progress:====>                         14%] [Cov:======================>            64%][Progress:====>                         14%] [Cov:======================>            65%][Progress:====>                         14%] [Cov:======================>            65%][Progress:====>                         14%] [Cov:======================>            65%][Progress:====>                         14%] [Cov:======================>            65%][Progress:====>                         14%] [Cov:======================>            65%][Progress:====>                         15%] [Cov:======================>            65%][Progress:====>                         15%] [Cov:======================>            65%][Progress:====>                         15%] [Cov:======================>            65%][Progress:====>                         15%] [Cov:======================>            65%][Progress:====>                         15%] [Cov:======================>            65%][Progress:====>                         15%] [Cov:======================>            65%][Progress:====>                         15%] [Cov:======================>            65%][Progress:====>                         15%] [Cov:======================>            65%][Progress:====>                         15%] [Cov:======================>            65%][Progress:====>                         15%] [Cov:======================>            65%][Progress:====>                         15%] [Cov:======================>            65%][Progress:====>                         15%] [Cov:======================>            65%][Progress:====>                         15%] [Cov:======================>            65%][Progress:====>                         15%] [Cov:======================>            65%][Progress:====>                         15%] [Cov:======================>            65%][Progress:====>                         15%] [Cov:======================>            65%][Progress:====>                         16%] [Cov:======================>            65%][Progress:====>                         16%] [Cov:=======================>           68%][Progress:====>                         16%] [Cov:=========================>         73%][Progress:====>                         16%] [Cov:=========================>         73%][Progress:====>                         16%] [Cov:==========================>        76%][Progress:====>                         16%] [Cov:==========================>        77%][Progress:====>                         16%] [Cov:==========================>        77%][Progress:====>                         16%] [Cov:==========================>        77%][Progress:====>                         16%] [Cov:==========================>        77%][Progress:====>                         16%] [Cov:==========================>        77%][Progress:====>                         16%] [Cov:==========================>        77%][Progress:====>                         16%] [Cov:==========================>        77%][Progress:====>                         16%] [Cov:==========================>        77%][Progress:====>                         16%] [Cov:==========================>        77%][Progress:=====>                        17%] [Cov:==========================>        77%][Progress:=====>                        17%] [Cov:==========================>        77%][Progress:=====>                        17%] [Cov:==========================>        77%][Progress:=====>                        17%] [Cov:==========================>        77%][Progress:=====>                        17%] [Cov:==========================>        77%][Progress:=====>                        17%] [Cov:==========================>        77%][Progress:=====>                        17%] [Cov:==========================>        77%][Progress:=====>                        17%] [Cov:===========================>       78%][Progress:=====>                        17%] [Cov:===========================>       78%][Progress:=====>                        17%] [Cov:===========================>       78%][Progress:=====>                        17%] [Cov:===========================>       78%][Progress:=====>                        17%] [Cov:===========================>       79%][Progress:=====>                        17%] [Cov:===========================>       79%][Progress:=====>                        17%] [Cov:===========================>       79%][Progress:=====>                        17%] [Cov:===========================>       79%][Progress:=====>                        17%] [Cov:===========================>       79%][Progress:=====>                        17%] [Cov:===========================>       79%][Progress:=====>                        17%] [Cov:===========================>       79%][Progress:=====>                        18%] [Cov:===========================>       79%][Progress:=====>                        18%] [Cov:===========================>       79%][Progress:=====>                        18%] [Cov:===========================>       79%][Progress:=====>                        18%] [Cov:===========================>       79%][Progress:=====>                        18%] [Cov:===========================>       79%][Progress:=====>                        18%] [Cov:===========================>       79%][Progress:=====>                        18%] [Cov:============================>      80%][Progress:=====>                        18%] [Cov:============================>      80%][Progress:=====>                        18%] [Cov:============================>      80%][Progress:=====>                        18%] [Cov:============================>      80%][Progress:=====>                        19%] [Cov:============================>      80%][Progress:=====>                        19%] [Cov:============================>      80%][Progress:=====>                        19%] [Cov:============================>      80%][Progress:=====>                        19%] [Cov:============================>      80%][Progress:=====>                        19%] [Cov:============================>      80%][Progress:=====>                        19%] [Cov:============================>      80%][Progress:=====>                        19%] [Cov:============================>      80%][Progress:=====>                        19%] [Cov:============================>      80%][Progress:=====>                        19%] [Cov:============================>      80%][Progress:======>                       20%] [Cov:============================>      80%][Progress:======>                       20%] [Cov:============================>      80%][Progress:======>                       20%] [Cov:============================>      80%][Progress:======>                       20%] [Cov:============================>      80%][Progress:======>                       20%] [Cov:============================>      80%][Progress:======>                       20%] [Cov:============================>      80%][Progress:======>                       20%] [Cov:============================>      80%][Progress:======>                       20%] [Cov:============================>      80%][Progress:======>                       21%] [Cov:============================>      80%][Progress:======>                       21%] [Cov:============================>      80%][Progress:======>                       21%] [Cov:============================>      80%][Progress:======>                       21%] [Cov:============================>      80%][Progress:======>                       21%] [Cov:============================>      80%][Progress:======>                       21%] [Cov:============================>      80%][Progress:======>                       21%] [Cov:============================>      80%][Progress:======>                       21%] [Cov:============================>      80%][Progress:======>                       21%] [Cov:============================>      80%][Progress:======>                       21%] [Cov:============================>      80%][Progress:======>                       21%] [Cov:============================>      80%][Progress:======>                       21%] [Cov:============================>      81%][Progress:======>                       21%] [Cov:============================>      81%][Progress:======>                       22%] [Cov:============================>      81%][Progress:======>                       22%] [Cov:============================>      81%][Progress:======>                       22%] [Cov:============================>      81%][Progress:======>                       22%] [Cov:============================>      81%][Progress:======>                       22%] [Cov:============================>      81%][Progress:======>                       22%] [Cov:============================>      81%][Progress:======>                       23%] [Cov:============================>      81%][Progress:======>                       23%] [Cov:============================>      81%][Progress:======>                       23%] [Cov:============================>      81%][Progress:======>                       23%] [Cov:============================>      81%][Progress:======>                       23%] [Cov:============================>      81%][Progress:======>                       23%] [Cov:============================>      81%][Progress:======>                       23%] [Cov:============================>      81%][Progress:======>                       23%] [Cov:============================>      81%][Progress:======>                       23%] [Cov:============================>      81%][Progress:======>                       23%] [Cov:============================>      81%][Progress:======>                       23%] [Cov:============================>      81%][Progress:======>                       23%] [Cov:============================>      81%][Progress:=======>                      24%] [Cov:============================>      81%][Progress:=======>                      24%] [Cov:============================>      81%][Progress:=======>                      24%] [Cov:============================>      81%][Progress:=======>                      24%] [Cov:============================>      81%][Progress:=======>                      24%] [Cov:============================>      81%][Progress:=======>                      24%] [Cov:============================>      81%][Progress:=======>                      24%] [Cov:============================>      81%][Progress:=======>                      24%] [Cov:============================>      81%][Progress:=======>                      24%] [Cov:============================>      81%][Progress:=======>                      24%] [Cov:============================>      81%][Progress:=======>                      24%] [Cov:============================>      81%][Progress:=======>                      24%] [Cov:============================>      81%][Progress:=======>                      24%] [Cov:============================>      81%][Progress:=======>                      24%] [Cov:============================>      81%][Progress:=======>                      24%] [Cov:============================>      81%][Progress:=======>                      24%] [Cov:============================>      81%][Progress:=======>                      24%] [Cov:============================>      81%][Progress:=======>                      25%] [Cov:============================>      81%][Progress:=======>                      25%] [Cov:============================>      81%][Progress:=======>                      25%] [Cov:============================>      81%][Progress:=======>                      25%] [Cov:============================>      81%][Progress:=======>                      25%] [Cov:============================>      81%][Progress:=======>                      25%] [Cov:============================>      81%][Progress:=======>                      25%] [Cov:============================>      81%][Progress:=======>                      25%] [Cov:============================>      81%][Progress:=======>                      25%] [Cov:============================>      81%][Progress:=======>                      25%] [Cov:============================>      81%][Progress:=======>                      25%] [Cov:============================>      81%][Progress:=======>                      25%] [Cov:============================>      81%][Progress:=======>                      25%] [Cov:============================>      81%][Progress:=======>                      25%] [Cov:============================>      82%][Progress:=======>                      26%] [Cov:============================>      82%][Progress:=======>                      26%] [Cov:============================>      82%][Progress:=======>                      26%] [Cov:============================>      82%][Progress:=======>                      26%] [Cov:============================>      82%][Progress:=======>                      26%] [Cov:============================>      82%][Progress:=======>                      26%] [Cov:============================>      82%][Progress:=======>                      26%] [Cov:============================>      82%][Progress:=======>                      26%] [Cov:============================>      82%][Progress:=======>                      26%] [Cov:============================>      82%][Progress:========>                     27%] [Cov:============================>      82%][Progress:========>                     27%] [Cov:============================>      82%][Progress:========>                     27%] [Cov:============================>      82%][Progress:========>                     28%] [Cov:============================>      82%][Progress:========>                     28%] [Cov:============================>      82%][Progress:========>                     28%] [Cov:============================>      82%][Progress:========>                     28%] [Cov:============================>      82%][Progress:========>                     28%] [Cov:============================>      82%][Progress:========>                     28%] [Cov:============================>      82%][Progress:========>                     28%] [Cov:============================>      82%][Progress:========>                     28%] [Cov:============================>      82%][Progress:========>                     29%] [Cov:============================>      82%][Progress:========>                     29%] [Cov:============================>      82%][Progress:========>                     29%] [Cov:============================>      82%][Progress:========>                     29%] [Cov:============================>      82%][Progress:========>                     29%] [Cov:============================>      82%][Progress:========>                     29%] [Cov:============================>      82%][Progress:========>                     29%] [Cov:============================>      82%][Progress:========>                     29%] [Cov:============================>      82%][Progress:========>                     29%] [Cov:============================>      82%][Progress:========>                     29%] [Cov:============================>      82%][Progress:========>                     29%] [Cov:============================>      82%][Progress:========>                     29%] [Cov:============================>      82%][Progress:========>                     29%] [Cov:============================>      82%][Progress:=========>                    30%] [Cov:============================>      82%][Progress:=========>                    30%] [Cov:============================>      82%][Progress:=========>                    30%] [Cov:============================>      82%][Progress:=========>                    30%] [Cov:============================>      82%][Progress:=========>                    30%] [Cov:============================>      82%][Progress:=========>                    30%] [Cov:============================>      82%][Progress:=========>                    30%] [Cov:============================>      82%][Progress:=========>                    30%] [Cov:============================>      82%][Progress:=========>                    30%] [Cov:============================>      82%][Progress:=========>                    30%] [Cov:============================>      82%][Progress:=========>                    30%] [Cov:============================>      82%][Progress:=========>                    30%] [Cov:============================>      82%][Progress:=========>                    30%] [Cov:============================>      82%][Progress:=========>                    30%] [Cov:============================>      82%][Progress:=========>                    30%] [Cov:============================>      82%][Progress:=========>                    31%] [Cov:============================>      82%][Progress:=========>                    31%] [Cov:============================>      82%][Progress:=========>                    31%] [Cov:============================>      82%][Progress:=========>                    32%] [Cov:============================>      82%][Progress:=========>                    33%] [Cov:============================>      82%][Progress:=========>                    33%] [Cov:============================>      82%][Progress:==========>                   34%] [Cov:============================>      82%][Progress:==========>                   34%] [Cov:============================>      82%][Progress:==========>                   34%] [Cov:============================>      82%][Progress:==========>                   34%] [Cov:============================>      82%][Progress:==========>                   34%] [Cov:============================>      82%][Progress:==========>                   34%] [Cov:============================>      82%][Progress:==========>                   34%] [Cov:============================>      82%][Progress:==========>                   34%] [Cov:============================>      82%][Progress:==========>                   34%] [Cov:============================>      82%][Progress:==========>                   34%] [Cov:============================>      82%][Progress:==========>                   34%] [Cov:============================>      82%][Progress:==========>                   34%] [Cov:============================>      82%][Progress:==========>                   35%] [Cov:============================>      82%][Progress:==========>                   35%] [Cov:============================>      82%][Progress:==========>                   35%] [Cov:============================>      82%][Progress:==========>                   35%] [Cov:============================>      82%][Progress:==========>                   35%] [Cov:============================>      82%][Progress:==========>                   35%] [Cov:============================>      82%][Progress:==========>                   35%] [Cov:============================>      82%][Progress:==========>                   35%] [Cov:============================>      82%][Progress:==========>                   35%] [Cov:============================>      82%][Progress:==========>                   36%] [Cov:============================>      82%][Progress:==========>                   36%] [Cov:============================>      82%][Progress:==========>                   36%] [Cov:============================>      82%][Progress:==========>                   36%] [Cov:============================>      82%][Progress:==========>                   36%] [Cov:============================>      82%][Progress:==========>                   36%] [Cov:============================>      82%][Progress:==========>                   36%] [Cov:============================>      82%][Progress:==========>                   36%] [Cov:============================>      82%][Progress:==========>                   36%] [Cov:============================>      82%][Progress:==========>                   36%] [Cov:============================>      82%][Progress:==========>                   36%] [Cov:============================>      82%][Progress:==========>                   36%] [Cov:============================>      82%][Progress:==========>                   36%] [Cov:============================>      82%][Progress:===========>                  37%] [Cov:============================>      82%][Progress:===========>                  37%] [Cov:============================>      82%][Progress:===========>                  37%] [Cov:============================>      82%][Progress:===========>                  37%] [Cov:============================>      82%][Progress:===========>                  37%] [Cov:============================>      82%][Progress:===========>                  37%] [Cov:============================>      82%][Progress:===========>                  37%] [Cov:============================>      82%][Progress:===========>                  37%] [Cov:============================>      82%][Progress:===========>                  37%] [Cov:============================>      82%][Progress:===========>                  37%] [Cov:============================>      82%][Progress:===========>                  37%] [Cov:============================>      82%][Progress:===========>                  37%] [Cov:============================>      82%][Progress:===========>                  38%] [Cov:============================>      82%][Progress:===========>                  38%] [Cov:============================>      82%][Progress:===========>                  38%] [Cov:============================>      82%][Progress:===========>                  38%] [Cov:============================>      82%][Progress:===========>                  38%] [Cov:============================>      82%][Progress:===========>                  38%] [Cov:============================>      82%][Progress:===========>                  38%] [Cov:============================>      82%][Progress:===========>                  38%] [Cov:============================>      82%][Progress:===========>                  38%] [Cov:============================>      82%][Progress:===========>                  38%] [Cov:============================>      82%][Progress:===========>                  38%] [Cov:============================>      82%][Progress:===========>                  38%] [Cov:============================>      82%][Progress:===========>                  39%] [Cov:============================>      82%][Progress:===========>                  39%] [Cov:============================>      82%][Progress:===========>                  39%] [Cov:============================>      82%][Progress:===========>                  39%] [Cov:============================>      82%][Progress:===========>                  39%] [Cov:============================>      82%][Progress:===========>                  39%] [Cov:============================>      82%][Progress:===========>                  39%] [Cov:============================>      82%][Progress:===========>                  39%] [Cov:============================>      82%][Progress:===========>                  39%] [Cov:============================>      82%][Progress:===========>                  39%] [Cov:============================>      82%][Progress:===========>                  39%] [Cov:============================>      82%][Progress:===========>                  39%] [Cov:============================>      82%][Progress:===========>                  39%] [Cov:============================>      82%][Progress:===========>                  39%] [Cov:============================>      82%][Progress:===========>                  39%] [Cov:============================>      82%][Progress:============>                 40%] [Cov:============================>      82%][Progress:============>                 40%] [Cov:============================>      82%][Progress:============>                 40%] [Cov:============================>      82%][Progress:============>                 40%] [Cov:============================>      82%][Progress:============>                 40%] [Cov:============================>      82%][Progress:============>                 40%] [Cov:============================>      82%][Progress:============>                 40%] [Cov:============================>      82%][Progress:============>                 40%] [Cov:============================>      82%][Progress:============>                 40%] [Cov:============================>      82%][MASTER] 15:32:24.784 [logback-1] WARN  TestCluster - Failed to check cache for java.util.Enumeration<E> : Type points to itself
[Progress:============>                 40%] [Cov:============================>      82%][Progress:============>                 40%] [Cov:============================>      82%][Progress:============>                 40%] [Cov:============================>      82%][Progress:============>                 40%] [Cov:============================>      82%][Progress:============>                 40%] [Cov:============================>      82%][Progress:============>                 40%] [Cov:============================>      82%][Progress:============>                 40%] [Cov:============================>      82%][Progress:============>                 40%] [Cov:============================>      82%][Progress:============>                 40%] [Cov:============================>      82%][Progress:============>                 40%] [Cov:============================>      82%][Progress:============>                 40%] [Cov:============================>      82%][Progress:============>                 40%] [Cov:============================>      82%][Progress:============>                 41%] [Cov:============================>      82%][Progress:============>                 41%] [Cov:============================>      82%][Progress:============>                 41%] [Cov:============================>      82%][Progress:============>                 41%] [Cov:============================>      82%][Progress:============>                 41%] [Cov:============================>      82%][Progress:============>                 41%] [Cov:============================>      82%][Progress:============>                 41%] [Cov:============================>      82%][Progress:============>                 41%] [Cov:============================>      82%][Progress:============>                 41%] [Cov:============================>      82%][Progress:============>                 41%] [Cov:============================>      82%][Progress:============>                 41%] [Cov:============================>      82%][Progress:============>                 41%] [Cov:============================>      82%][Progress:============>                 41%] [Cov:============================>      82%][Progress:============>                 41%] [Cov:============================>      82%][Progress:============>                 41%] [Cov:============================>      82%][Progress:============>                 41%] [Cov:============================>      82%][Progress:============>                 41%] [Cov:============================>      82%][Progress:============>                 42%] [Cov:============================>      82%][Progress:============>                 42%] [Cov:============================>      82%][Progress:============>                 42%] [Cov:============================>      82%][Progress:============>                 42%] [Cov:============================>      82%][Progress:============>                 42%] [Cov:============================>      82%][Progress:============>                 42%] [Cov:============================>      82%][Progress:============>                 42%] [Cov:============================>      82%][Progress:============>                 42%] [Cov:============================>      82%][Progress:============>                 42%] [Cov:============================>      82%][Progress:============>                 42%] [Cov:============================>      82%][Progress:============>                 42%] [Cov:============================>      82%][Progress:============>                 42%] [Cov:============================>      82%][Progress:============>                 42%] [Cov:============================>      82%][Progress:============>                 42%] [Cov:============================>      82%][Progress:============>                 42%] [Cov:============================>      82%][Progress:============>                 42%] [Cov:============================>      82%][Progress:============>                 43%] [Cov:============================>      82%][Progress:============>                 43%] [Cov:============================>      82%][Progress:============>                 43%] [Cov:============================>      82%][Progress:============>                 43%] [Cov:============================>      82%][Progress:============>                 43%] [Cov:============================>      82%][Progress:============>                 43%] [Cov:============================>      82%][Progress:============>                 43%] [Cov:============================>      82%][Progress:============>                 43%] [Cov:============================>      82%][Progress:============>                 43%] [Cov:============================>      82%][Progress:============>                 43%] [Cov:============================>      82%][Progress:============>                 43%] [Cov:============================>      82%][Progress:============>                 43%] [Cov:============================>      82%][Progress:============>                 43%] [Cov:============================>      82%][Progress:============>                 43%] [Cov:============================>      82%][Progress:============>                 43%] [Cov:============================>      82%][Progress:============>                 43%] [Cov:============================>      82%][Progress:============>                 43%] [Cov:============================>      82%][Progress:============>                 43%] [Cov:============================>      82%][Progress:=============>                44%] [Cov:============================>      82%][Progress:=============>                44%] [Cov:============================>      82%][Progress:=============>                44%] [Cov:============================>      82%][Progress:=============>                44%] [Cov:============================>      82%][Progress:=============>                44%] [Cov:============================>      82%][Progress:=============>                44%] [Cov:============================>      82%][Progress:=============>                44%] [Cov:============================>      82%][Progress:=============>                44%] [Cov:============================>      82%][Progress:=============>                44%] [Cov:============================>      82%][Progress:=============>                44%] [Cov:============================>      82%][Progress:=============>                44%] [Cov:============================>      82%][Progress:=============>                44%] [Cov:============================>      82%][Progress:=============>                44%] [Cov:============================>      82%][Progress:=============>                44%] [Cov:============================>      82%][Progress:=============>                44%] [Cov:============================>      82%][Progress:=============>                44%] [Cov:============================>      82%][Progress:=============>                44%] [Cov:============================>      82%][Progress:=============>                44%] [Cov:============================>      82%][Progress:=============>                45%] [Cov:============================>      82%][Progress:=============>                45%] [Cov:============================>      82%][Progress:=============>                45%] [Cov:============================>      82%][Progress:=============>                45%] [Cov:============================>      82%][Progress:=============>                45%] [Cov:============================>      82%][Progress:=============>                45%] [Cov:============================>      82%][Progress:=============>                45%] [Cov:============================>      82%][Progress:=============>                45%] [Cov:============================>      82%][Progress:=============>                45%] [Cov:============================>      82%][Progress:=============>                45%] [Cov:============================>      82%][Progress:=============>                45%] [Cov:============================>      82%][Progress:=============>                46%] [Cov:============================>      82%][Progress:=============>                46%] [Cov:============================>      82%][Progress:=============>                46%] [Cov:============================>      82%][Progress:=============>                46%] [Cov:============================>      82%][Progress:=============>                46%] [Cov:============================>      82%][Progress:=============>                46%] [Cov:============================>      82%][Progress:=============>                46%] [Cov:============================>      82%][Progress:=============>                46%] [Cov:============================>      82%][Progress:=============>                46%] [Cov:============================>      82%][Progress:=============>                46%] [Cov:============================>      82%][Progress:=============>                46%] [Cov:============================>      82%][Progress:=============>                46%] [Cov:============================>      82%][Progress:=============>                46%] [Cov:============================>      82%][Progress:=============>                46%] [Cov:============================>      82%][Progress:=============>                46%] [Cov:============================>      82%][Progress:=============>                46%] [Cov:============================>      82%][Progress:=============>                46%] [Cov:============================>      82%][Progress:==============>               47%] [Cov:============================>      82%][Progress:==============>               47%] [Cov:============================>      82%][Progress:==============>               47%] [Cov:============================>      82%][Progress:==============>               47%] [Cov:============================>      82%][Progress:==============>               47%] [Cov:============================>      82%][Progress:==============>               47%] [Cov:============================>      82%][Progress:==============>               47%] [Cov:============================>      82%][Progress:==============>               47%] [Cov:============================>      82%][Progress:==============>               47%] [Cov:============================>      82%][Progress:==============>               47%] [Cov:============================>      82%][Progress:==============>               47%] [Cov:============================>      82%][Progress:==============>               47%] [Cov:============================>      82%][Progress:==============>               47%] [Cov:============================>      82%][Progress:==============>               47%] [Cov:============================>      82%][Progress:==============>               47%] [Cov:============================>      82%][Progress:==============>               47%] [Cov:============================>      82%][Progress:==============>               47%] [Cov:============================>      82%][Progress:==============>               47%] [Cov:============================>      82%][Progress:==============>               47%] [Cov:============================>      82%][Progress:==============>               47%] [Cov:============================>      82%][Progress:==============>               47%] [Cov:============================>      82%][Progress:==============>               47%] [Cov:============================>      82%][Progress:==============>               47%] [Cov:============================>      82%][Progress:==============>               48%] [Cov:============================>      82%][Progress:==============>               48%] [Cov:============================>      82%][Progress:==============>               48%] [Cov:============================>      82%][Progress:==============>               48%] [Cov:============================>      82%][Progress:==============>               48%] [Cov:============================>      82%][Progress:==============>               48%] [Cov:============================>      82%][Progress:==============>               48%] [Cov:============================>      82%][Progress:==============>               48%] [Cov:============================>      82%][Progress:==============>               48%] [Cov:============================>      82%][Progress:==============>               48%] [Cov:============================>      82%][Progress:==============>               48%] [Cov:============================>      82%][Progress:==============>               48%] [Cov:============================>      82%][Progress:==============>               48%] [Cov:============================>      82%][Progress:==============>               48%] [Cov:============================>      82%][Progress:==============>               49%] [Cov:============================>      82%][Progress:==============>               49%] [Cov:============================>      82%][Progress:==============>               49%] [Cov:============================>      82%][Progress:==============>               49%] [Cov:============================>      82%][Progress:==============>               49%] [Cov:============================>      82%][Progress:==============>               49%] [Cov:============================>      82%][Progress:==============>               49%] [Cov:============================>      82%][Progress:==============>               49%] [Cov:============================>      82%][Progress:==============>               49%] [Cov:============================>      82%][Progress:==============>               49%] [Cov:============================>      82%][Progress:==============>               49%] [Cov:============================>      82%][Progress:==============>               49%] [Cov:============================>      82%][Progress:==============>               49%] [Cov:============================>      82%][Progress:==============>               49%] [Cov:============================>      82%][Progress:==============>               49%] [Cov:============================>      82%][Progress:==============>               49%] [Cov:============================>      82%][Progress:===============>              50%] [Cov:============================>      82%][Progress:===============>              50%] [Cov:============================>      82%][Progress:===============>              50%] [Cov:============================>      82%][Progress:===============>              50%] [Cov:============================>      82%][Progress:===============>              51%] [Cov:============================>      82%][Progress:===============>              51%] [Cov:============================>      82%][Progress:===============>              51%] [Cov:============================>      82%][Progress:===============>              51%] [Cov:============================>      82%][Progress:===============>              51%] [Cov:============================>      82%][Progress:===============>              51%] [Cov:============================>      82%][Progress:===============>              51%] [Cov:============================>      82%][Progress:===============>              51%] [Cov:============================>      82%][Progress:===============>              52%] [Cov:============================>      82%][Progress:===============>              52%] [Cov:============================>      82%][Progress:===============>              52%] [Cov:============================>      82%][Progress:===============>              52%] [Cov:============================>      82%][Progress:===============>              52%] [Cov:============================>      82%][Progress:===============>              52%] [Cov:============================>      82%][Progress:===============>              52%] [Cov:============================>      82%][Progress:===============>              52%] [Cov:============================>      82%][Progress:===============>              52%] [Cov:============================>      82%][Progress:===============>              52%] [Cov:============================>      82%][Progress:===============>              52%] [Cov:============================>      82%][Progress:===============>              52%] [Cov:============================>      82%][Progress:===============>              52%] [Cov:============================>      82%][Progress:===============>              52%] [Cov:============================>      82%][Progress:===============>              53%] [Cov:============================>      82%][Progress:===============>              53%] [Cov:============================>      82%][Progress:===============>              53%] [Cov:============================>      82%][Progress:===============>              53%] [Cov:============================>      82%][Progress:===============>              53%] [Cov:============================>      82%][Progress:===============>              53%] [Cov:============================>      82%][Progress:===============>              53%] [Cov:============================>      82%][Progress:===============>              53%] [Cov:============================>      82%][Progress:===============>              53%] [Cov:============================>      82%][Progress:===============>              53%] [Cov:============================>      82%][Progress:===============>              53%] [Cov:============================>      82%][Progress:===============>              53%] [Cov:============================>      82%][Progress:===============>              53%] [Cov:============================>      82%][Progress:===============>              53%] [Cov:============================>      82%][Progress:===============>              53%] [Cov:============================>      82%][Progress:===============>              53%] [Cov:============================>      82%][Progress:===============>              53%] [Cov:============================>      82%][Progress:================>             54%] [Cov:============================>      82%][Progress:================>             54%] [Cov:============================>      82%][Progress:================>             54%] [Cov:============================>      82%][Progress:================>             54%] [Cov:============================>      82%][Progress:================>             54%] [Cov:============================>      82%][Progress:================>             54%] [Cov:============================>      82%][Progress:================>             54%] [Cov:============================>      82%][Progress:================>             54%] [Cov:============================>      82%][Progress:================>             54%] [Cov:============================>      82%][Progress:================>             54%] [Cov:============================>      82%][Progress:================>             54%] [Cov:============================>      82%][Progress:================>             54%] [Cov:============================>      82%][Progress:================>             54%] [Cov:============================>      82%][Progress:================>             54%] [Cov:============================>      82%][Progress:================>             54%] [Cov:============================>      82%][Progress:================>             54%] [Cov:============================>      82%][Progress:================>             54%] [Cov:============================>      82%][Progress:================>             54%] [Cov:============================>      82%][Progress:================>             54%] [Cov:============================>      82%][Progress:================>             54%] [Cov:============================>      82%][MASTER] 15:32:53.900 [logback-1] WARN  TestCluster - Failed to check cache for java.lang.Comparable<T> : Type points to itself
[Progress:================>             54%] [Cov:============================>      82%][Progress:================>             55%] [Cov:============================>      82%][Progress:================>             55%] [Cov:============================>      82%][Progress:================>             55%] [Cov:============================>      82%][Progress:================>             55%] [Cov:============================>      82%][Progress:================>             55%] [Cov:============================>      82%][Progress:================>             55%] [Cov:============================>      82%][Progress:================>             55%] [Cov:============================>      82%][Progress:================>             55%] [Cov:============================>      82%][Progress:================>             56%] [Cov:============================>      82%][Progress:================>             56%] [Cov:============================>      82%][Progress:================>             56%] [Cov:============================>      82%][Progress:================>             56%] [Cov:============================>      82%][Progress:================>             56%] [Cov:============================>      82%][Progress:================>             56%] [Cov:============================>      82%][Progress:================>             56%] [Cov:============================>      82%][Progress:================>             56%] [Cov:============================>      82%][Progress:================>             56%] [Cov:============================>      82%][Progress:================>             56%] [Cov:============================>      82%][Progress:=================>            57%] [Cov:============================>      82%][Progress:=================>            57%] [Cov:============================>      82%][Progress:=================>            57%] [Cov:============================>      82%][Progress:=================>            57%] [Cov:============================>      82%][Progress:=================>            57%] [Cov:============================>      82%][Progress:=================>            57%] [Cov:============================>      82%][Progress:=================>            57%] [Cov:============================>      82%][Progress:=================>            57%] [Cov:============================>      82%][Progress:=================>            57%] [Cov:============================>      82%][Progress:=================>            57%] [Cov:============================>      82%][Progress:=================>            57%] [Cov:============================>      82%][Progress:=================>            57%] [Cov:============================>      82%][Progress:=================>            57%] [Cov:============================>      82%][Progress:=================>            57%] [Cov:============================>      82%][Progress:=================>            57%] [Cov:============================>      82%][Progress:=================>            58%] [Cov:============================>      82%][Progress:=================>            58%] [Cov:============================>      82%][Progress:=================>            58%] [Cov:============================>      82%][Progress:=================>            58%] [Cov:============================>      82%][Progress:=================>            58%] [Cov:============================>      82%][Progress:=================>            58%] [Cov:============================>      82%][Progress:=================>            58%] [Cov:============================>      82%][Progress:=================>            58%] [Cov:============================>      82%][Progress:=================>            58%] [Cov:============================>      82%][Progress:=================>            58%] [Cov:============================>      82%][Progress:=================>            58%] [Cov:============================>      82%][Progress:=================>            58%] [Cov:============================>      82%][Progress:=================>            58%] [Cov:============================>      82%][Progress:=================>            58%] [Cov:============================>      82%][Progress:=================>            59%] [Cov:============================>      82%][Progress:=================>            59%] [Cov:============================>      82%][Progress:=================>            59%] [Cov:============================>      82%][Progress:=================>            59%] [Cov:============================>      82%][Progress:=================>            59%] [Cov:============================>      82%][Progress:=================>            59%] [Cov:============================>      82%][Progress:=================>            59%] [Cov:============================>      82%][Progress:=================>            59%] [Cov:============================>      82%][Progress:=================>            59%] [Cov:============================>      82%][Progress:=================>            59%] [Cov:============================>      82%][Progress:=================>            59%] [Cov:============================>      82%][Progress:=================>            59%] [Cov:============================>      82%][Progress:=================>            59%] [Cov:============================>      82%][Progress:=================>            59%] [Cov:============================>      82%][Progress:=================>            59%] [Cov:============================>      82%][Progress:=================>            59%] [Cov:============================>      82%][Progress:=================>            59%] [Cov:============================>      82%][Progress:=================>            59%] [Cov:============================>      82%][Progress:=================>            59%] [Cov:============================>      82%][Progress:=================>            59%] [Cov:============================>      82%][Progress:==================>           60%] [Cov:============================>      82%][Progress:==================>           60%] [Cov:============================>      82%][Progress:==================>           60%] [Cov:============================>      82%][Progress:==================>           60%] [Cov:============================>      82%][Progress:==================>           60%] [Cov:============================>      82%][Progress:==================>           60%] [Cov:============================>      82%][Progress:==================>           60%] [Cov:============================>      82%][Progress:==================>           60%] [Cov:============================>      82%][Progress:==================>           60%] [Cov:============================>      82%][Progress:==================>           60%] [Cov:============================>      82%][Progress:==================>           60%] [Cov:============================>      82%][Progress:==================>           60%] [Cov:============================>      82%][Progress:==================>           60%] [Cov:============================>      82%][Progress:==================>           60%] [Cov:============================>      82%][Progress:==================>           60%] [Cov:============================>      82%][Progress:==================>           60%] [Cov:============================>      82%][Progress:==================>           60%] [Cov:============================>      82%][Progress:==================>           60%] [Cov:============================>      82%][Progress:==================>           60%] [Cov:============================>      82%][Progress:==================>           60%] [Cov:============================>      82%][Progress:==================>           61%] [Cov:============================>      82%][Progress:==================>           61%] [Cov:============================>      82%][Progress:==================>           61%] [Cov:============================>      82%][Progress:==================>           61%] [Cov:============================>      82%][Progress:==================>           61%] [Cov:============================>      82%][Progress:==================>           61%] [Cov:============================>      82%][Progress:==================>           61%] [Cov:============================>      82%][Progress:==================>           61%] [Cov:============================>      82%][Progress:==================>           61%] [Cov:============================>      82%][Progress:==================>           61%] [Cov:============================>      82%][Progress:==================>           61%] [Cov:============================>      82%][Progress:==================>           61%] [Cov:============================>      82%][Progress:==================>           61%] [Cov:============================>      82%][Progress:==================>           61%] [Cov:============================>      82%][Progress:==================>           61%] [Cov:============================>      82%][Progress:==================>           61%] [Cov:============================>      82%][Progress:==================>           63%] [Cov:============================>      82%][Progress:==================>           63%] [Cov:============================>      82%][Progress:==================>           63%] [Cov:============================>      82%][Progress:==================>           63%] [Cov:============================>      82%][Progress:===================>          64%] [Cov:============================>      82%][Progress:===================>          64%] [Cov:============================>      82%][Progress:===================>          64%] [Cov:============================>      82%][Progress:===================>          64%] [Cov:============================>      82%][Progress:===================>          64%] [Cov:============================>      82%][Progress:===================>          64%] [Cov:============================>      82%][Progress:===================>          64%] [Cov:============================>      82%][Progress:===================>          64%] [Cov:============================>      82%][Progress:===================>          64%] [Cov:============================>      82%][Progress:===================>          64%] [Cov:============================>      82%][Progress:===================>          64%] [Cov:============================>      82%][Progress:===================>          64%] [Cov:============================>      82%][Progress:===================>          65%] [Cov:============================>      82%][Progress:===================>          65%] [Cov:============================>      82%][Progress:===================>          65%] [Cov:============================>      82%][Progress:===================>          65%] [Cov:============================>      82%][Progress:===================>          65%] [Cov:============================>      82%][Progress:===================>          65%] [Cov:============================>      82%][Progress:===================>          65%] [Cov:============================>      82%][Progress:===================>          65%] [Cov:============================>      82%][Progress:===================>          65%] [Cov:============================>      82%][Progress:===================>          65%] [Cov:============================>      82%][Progress:===================>          65%] [Cov:============================>      82%][Progress:===================>          65%] [Cov:============================>      82%][Progress:===================>          65%] [Cov:============================>      82%][Progress:===================>          65%] [Cov:============================>      82%][Progress:===================>          65%] [Cov:============================>      82%][Progress:===================>          65%] [Cov:============================>      82%][Progress:===================>          66%] [Cov:============================>      82%][Progress:===================>          66%] [Cov:============================>      82%][Progress:===================>          66%] [Cov:============================>      82%][Progress:===================>          66%] [Cov:============================>      82%][Progress:===================>          66%] [Cov:============================>      82%][Progress:===================>          66%] [Cov:============================>      82%][Progress:===================>          66%] [Cov:============================>      82%][Progress:===================>          66%] [Cov:============================>      82%][Progress:===================>          66%] [Cov:============================>      82%][Progress:===================>          66%] [Cov:============================>      82%][Progress:===================>          66%] [Cov:============================>      82%][Progress:===================>          66%] [Cov:============================>      82%][Progress:===================>          66%] [Cov:============================>      82%][Progress:===================>          66%] [Cov:============================>      82%][Progress:===================>          66%] [Cov:============================>      82%][Progress:====================>         67%] [Cov:============================>      82%][Progress:====================>         67%] [Cov:============================>      82%][Progress:====================>         67%] [Cov:============================>      82%][Progress:====================>         67%] [Cov:============================>      82%][Progress:====================>         67%] [Cov:============================>      82%][Progress:====================>         67%] [Cov:============================>      82%][Progress:====================>         67%] [Cov:============================>      82%][Progress:====================>         67%] [Cov:============================>      82%][Progress:====================>         67%] [Cov:============================>      82%][Progress:====================>         67%] [Cov:============================>      82%][Progress:====================>         67%] [Cov:============================>      82%][Progress:====================>         67%] [Cov:============================>      82%][Progress:====================>         67%] [Cov:============================>      82%][Progress:====================>         67%] [Cov:============================>      82%][Progress:====================>         67%] [Cov:============================>      82%][Progress:====================>         67%] [Cov:============================>      82%][Progress:====================>         67%] [Cov:============================>      82%][Progress:====================>         67%] [Cov:============================>      82%][Progress:====================>         67%] [Cov:============================>      82%][Progress:====================>         67%] [Cov:============================>      82%][Progress:====================>         68%] [Cov:============================>      82%][Progress:====================>         68%] [Cov:============================>      82%][Progress:====================>         68%] [Cov:============================>      82%][Progress:====================>         68%] [Cov:============================>      82%][Progress:====================>         68%] [Cov:============================>      82%][Progress:====================>         68%] [Cov:============================>      82%][Progress:====================>         68%] [Cov:============================>      82%][Progress:====================>         68%] [Cov:============================>      82%][Progress:====================>         68%] [Cov:============================>      82%][Progress:====================>         68%] [Cov:============================>      82%][Progress:====================>         68%] [Cov:============================>      82%][Progress:====================>         68%] [Cov:============================>      82%][Progress:====================>         68%] [Cov:============================>      82%][Progress:====================>         68%] [Cov:============================>      82%][Progress:====================>         68%] [Cov:============================>      82%][Progress:====================>         68%] [Cov:============================>      82%][Progress:====================>         68%] [Cov:============================>      82%][Progress:====================>         68%] [Cov:============================>      82%][Progress:====================>         68%] [Cov:============================>      82%][Progress:====================>         68%] [Cov:============================>      82%][Progress:====================>         68%] [Cov:============================>      82%][Progress:====================>         68%] [Cov:============================>      82%][Progress:====================>         68%] [Cov:============================>      82%][Progress:====================>         68%] [Cov:============================>      82%][Progress:====================>         69%] [Cov:============================>      82%][Progress:====================>         69%] [Cov:============================>      82%][Progress:====================>         69%] [Cov:============================>      82%][Progress:====================>         69%] [Cov:============================>      82%][Progress:====================>         69%] [Cov:============================>      82%][Progress:====================>         69%] [Cov:============================>      82%][Progress:====================>         69%] [Cov:============================>      82%][Progress:====================>         69%] [Cov:============================>      82%][Progress:====================>         69%] [Cov:============================>      82%][Progress:====================>         69%] [Cov:============================>      82%][Progress:====================>         69%] [Cov:============================>      82%][Progress:====================>         69%] [Cov:============================>      82%][Progress:====================>         69%] [Cov:============================>      82%][Progress:====================>         69%] [Cov:============================>      82%][Progress:====================>         69%] [Cov:============================>      82%][Progress:====================>         69%] [Cov:============================>      82%][Progress:====================>         69%] [Cov:============================>      82%][Progress:====================>         69%] [Cov:============================>      82%][Progress:====================>         69%] [Cov:============================>      82%][Progress:====================>         69%] [Cov:============================>      82%][Progress:====================>         69%] [Cov:============================>      82%][Progress:=====================>        70%] [Cov:============================>      82%][Progress:=====================>        70%] [Cov:============================>      82%][Progress:=====================>        70%] [Cov:============================>      82%][Progress:=====================>        70%] [Cov:============================>      82%][Progress:=====================>        70%] [Cov:============================>      82%][Progress:=====================>        70%] [Cov:============================>      82%][Progress:=====================>        70%] [Cov:============================>      82%][Progress:=====================>        70%] [Cov:============================>      82%][Progress:=====================>        70%] [Cov:============================>      82%][Progress:=====================>        70%] [Cov:============================>      82%][Progress:=====================>        70%] [Cov:============================>      82%][Progress:=====================>        70%] [Cov:============================>      82%][Progress:=====================>        70%] [Cov:============================>      82%][Progress:=====================>        70%] [Cov:============================>      82%][Progress:=====================>        70%] [Cov:============================>      82%][Progress:=====================>        70%] [Cov:============================>      82%][Progress:=====================>        70%] [Cov:============================>      82%][Progress:=====================>        70%] [Cov:============================>      82%][Progress:=====================>        70%] [Cov:============================>      82%][Progress:=====================>        70%] [Cov:============================>      82%][Progress:=====================>        70%] [Cov:============================>      82%][Progress:=====================>        70%] [Cov:============================>      82%][Progress:=====================>        70%] [Cov:============================>      82%][Progress:=====================>        71%] [Cov:============================>      82%][Progress:=====================>        71%] [Cov:============================>      82%][Progress:=====================>        71%] [Cov:============================>      82%][Progress:=====================>        71%] [Cov:============================>      82%][Progress:=====================>        71%] [Cov:============================>      82%][Progress:=====================>        71%] [Cov:============================>      82%][Progress:=====================>        71%] [Cov:============================>      82%][Progress:=====================>        71%] [Cov:============================>      82%][Progress:=====================>        71%] [Cov:============================>      82%][Progress:=====================>        71%] [Cov:============================>      82%][Progress:=====================>        71%] [Cov:============================>      82%][Progress:=====================>        71%] [Cov:============================>      82%][Progress:=====================>        71%] [Cov:============================>      82%][Progress:=====================>        71%] [Cov:============================>      82%][Progress:=====================>        71%] [Cov:============================>      82%][Progress:=====================>        72%] [Cov:============================>      82%][Progress:=====================>        72%] [Cov:============================>      82%][Progress:=====================>        72%] [Cov:============================>      82%][Progress:=====================>        72%] [Cov:============================>      82%][Progress:=====================>        72%] [Cov:============================>      82%][Progress:=====================>        72%] [Cov:============================>      82%][Progress:=====================>        72%] [Cov:============================>      82%][Progress:=====================>        72%] [Cov:============================>      82%][Progress:=====================>        72%] [Cov:============================>      82%][Progress:=====================>        72%] [Cov:============================>      82%][Progress:=====================>        72%] [Cov:============================>      82%][Progress:=====================>        72%] [Cov:============================>      82%][Progress:=====================>        72%] [Cov:============================>      82%][Progress:=====================>        72%] [Cov:============================>      82%][Progress:=====================>        72%] [Cov:============================>      82%][Progress:=====================>        72%] [Cov:============================>      82%][Progress:=====================>        72%] [Cov:============================>      82%][Progress:=====================>        72%] [Cov:============================>      82%][Progress:=====================>        72%] [Cov:============================>      82%][Progress:=====================>        72%] [Cov:============================>      82%][Progress:=====================>        73%] [Cov:============================>      82%][Progress:=====================>        73%] [Cov:============================>      82%][Progress:=====================>        73%] [Cov:============================>      82%][Progress:=====================>        73%] [Cov:============================>      82%][Progress:=====================>        73%] [Cov:============================>      82%][Progress:======================>       74%] [Cov:============================>      82%][Progress:======================>       74%] [Cov:============================>      82%][Progress:======================>       74%] [Cov:============================>      82%][Progress:======================>       74%] [Cov:============================>      82%][Progress:======================>       74%] [Cov:============================>      82%][Progress:======================>       74%] [Cov:============================>      82%][Progress:======================>       74%] [Cov:============================>      82%][Progress:======================>       74%] [Cov:============================>      82%][Progress:======================>       74%] [Cov:============================>      82%][Progress:======================>       74%] [Cov:============================>      82%][Progress:======================>       74%] [Cov:============================>      82%][Progress:======================>       74%] [Cov:============================>      82%][Progress:======================>       74%] [Cov:============================>      82%][Progress:======================>       74%] [Cov:============================>      82%][Progress:======================>       74%] [Cov:============================>      82%][Progress:======================>       74%] [Cov:============================>      82%][Progress:======================>       74%] [Cov:============================>      82%][Progress:======================>       74%] [Cov:============================>      82%][Progress:======================>       74%] [Cov:============================>      82%][Progress:======================>       74%] [Cov:============================>      82%][Progress:======================>       74%] [Cov:============================>      82%][Progress:======================>       75%] [Cov:============================>      82%][Progress:======================>       75%] [Cov:============================>      82%][Progress:======================>       75%] [Cov:============================>      82%][Progress:======================>       75%] [Cov:============================>      82%][Progress:======================>       75%] [Cov:============================>      82%][Progress:======================>       75%] [Cov:============================>      82%][Progress:======================>       75%] [Cov:============================>      82%][Progress:======================>       75%] [Cov:============================>      82%][Progress:======================>       75%] [Cov:============================>      82%][Progress:======================>       75%] [Cov:============================>      82%][Progress:======================>       75%] [Cov:============================>      82%][Progress:======================>       75%] [Cov:============================>      82%][Progress:======================>       75%] [Cov:============================>      82%][Progress:======================>       75%] [Cov:============================>      82%][Progress:======================>       75%] [Cov:============================>      82%][Progress:======================>       75%] [Cov:============================>      82%][Progress:======================>       75%] [Cov:============================>      82%][Progress:======================>       75%] [Cov:============================>      82%][Progress:======================>       75%] [Cov:============================>      82%][Progress:======================>       76%] [Cov:============================>      82%][Progress:======================>       76%] [Cov:============================>      82%][Progress:======================>       76%] [Cov:============================>      82%][Progress:======================>       76%] [Cov:============================>      82%][Progress:======================>       76%] [Cov:============================>      82%][Progress:======================>       76%] [Cov:============================>      82%][Progress:======================>       76%] [Cov:============================>      82%][Progress:======================>       76%] [Cov:============================>      82%][Progress:======================>       76%] [Cov:============================>      82%][Progress:======================>       76%] [Cov:============================>      82%][Progress:=======================>      77%] [Cov:============================>      82%][Progress:=======================>      77%] [Cov:============================>      82%][Progress:=======================>      77%] [Cov:============================>      82%][Progress:=======================>      77%] [Cov:============================>      82%][Progress:=======================>      77%] [Cov:============================>      82%][Progress:=======================>      77%] [Cov:============================>      82%][Progress:=======================>      77%] [Cov:============================>      82%][Progress:=======================>      77%] [Cov:============================>      82%][Progress:=======================>      77%] [Cov:============================>      82%][Progress:=======================>      77%] [Cov:============================>      82%][Progress:=======================>      77%] [Cov:============================>      82%][Progress:=======================>      77%] [Cov:============================>      82%][Progress:=======================>      77%] [Cov:============================>      82%][Progress:=======================>      77%] [Cov:============================>      82%][Progress:=======================>      77%] [Cov:============================>      82%][Progress:=======================>      77%] [Cov:============================>      82%][Progress:=======================>      77%] [Cov:============================>      82%][Progress:=======================>      77%] [Cov:============================>      82%][Progress:=======================>      77%] [Cov:============================>      82%][Progress:=======================>      77%] [Cov:============================>      82%][Progress:=======================>      78%] [Cov:============================>      82%][Progress:=======================>      78%] [Cov:============================>      82%][Progress:=======================>      78%] [Cov:============================>      82%][Progress:=======================>      78%] [Cov:============================>      82%][Progress:=======================>      78%] [Cov:============================>      82%][Progress:=======================>      78%] [Cov:============================>      82%][Progress:=======================>      78%] [Cov:============================>      82%][Progress:=======================>      78%] [Cov:============================>      82%][Progress:=======================>      78%] [Cov:============================>      82%][Progress:=======================>      78%] [Cov:============================>      82%][Progress:=======================>      78%] [Cov:============================>      82%][Progress:=======================>      78%] [Cov:============================>      82%][Progress:=======================>      78%] [Cov:============================>      82%][Progress:=======================>      78%] [Cov:============================>      82%][Progress:=======================>      78%] [Cov:============================>      82%][Progress:=======================>      78%] [Cov:============================>      82%][Progress:=======================>      78%] [Cov:============================>      82%][Progress:=======================>      78%] [Cov:============================>      82%][Progress:=======================>      78%] [Cov:============================>      82%][Progress:=======================>      78%] [Cov:============================>      82%][Progress:=======================>      78%] [Cov:============================>      82%][Progress:=======================>      79%] [Cov:============================>      82%][Progress:=======================>      79%] [Cov:============================>      82%][Progress:=======================>      79%] [Cov:============================>      82%][Progress:=======================>      79%] [Cov:============================>      82%][Progress:=======================>      79%] [Cov:============================>      82%][Progress:=======================>      79%] [Cov:============================>      82%][Progress:=======================>      79%] [Cov:============================>      82%][Progress:=======================>      79%] [Cov:============================>      82%][Progress:=======================>      79%] [Cov:============================>      82%][Progress:=======================>      79%] [Cov:============================>      82%][Progress:=======================>      79%] [Cov:============================>      82%][Progress:=======================>      79%] [Cov:============================>      82%][Progress:=======================>      79%] [Cov:============================>      82%][Progress:=======================>      79%] [Cov:============================>      82%][Progress:=======================>      79%] [Cov:============================>      82%][Progress:=======================>      79%] [Cov:============================>      82%][Progress:=======================>      79%] [Cov:============================>      82%][Progress:=======================>      79%] [Cov:============================>      82%][Progress:=======================>      79%] [Cov:============================>      82%][Progress:=======================>      79%] [Cov:============================>      82%][Progress:=======================>      79%] [Cov:============================>      82%][Progress:=======================>      79%] [Cov:============================>      82%][Progress:=======================>      79%] [Cov:============================>      82%][Progress:========================>     80%] [Cov:============================>      82%][Progress:========================>     80%] [Cov:============================>      82%][Progress:========================>     80%] [Cov:============================>      82%][Progress:========================>     80%] [Cov:============================>      82%][Progress:========================>     80%] [Cov:============================>      82%][Progress:========================>     80%] [Cov:============================>      82%][Progress:========================>     80%] [Cov:============================>      82%][Progress:========================>     80%] [Cov:============================>      82%][Progress:========================>     80%] [Cov:============================>      82%][Progress:========================>     80%] [Cov:============================>      82%][Progress:========================>     80%] [Cov:============================>      82%][Progress:========================>     80%] [Cov:============================>      82%][Progress:========================>     80%] [Cov:============================>      82%][Progress:========================>     80%] [Cov:============================>      82%][Progress:========================>     80%] [Cov:============================>      82%][Progress:========================>     80%] [Cov:============================>      82%][Progress:========================>     80%] [Cov:============================>      82%][Progress:========================>     80%] [Cov:============================>      82%][Progress:========================>     80%] [Cov:============================>      82%][Progress:========================>     80%] [Cov:============================>      82%][Progress:========================>     80%] [Cov:============================>      82%][Progress:========================>     80%] [Cov:============================>      82%][Progress:========================>     80%] [Cov:============================>      82%][Progress:========================>     80%] [Cov:============================>      82%][Progress:========================>     80%] [Cov:============================>      82%][Progress:========================>     80%] [Cov:============================>      82%][Progress:========================>     80%] [Cov:============================>      82%][Progress:========================>     81%] [Cov:============================>      82%][Progress:========================>     81%] [Cov:============================>      82%][Progress:========================>     81%] [Cov:============================>      82%][Progress:========================>     81%] [Cov:============================>      82%][Progress:========================>     81%] [Cov:============================>      82%][Progress:========================>     81%] [Cov:============================>      82%][Progress:========================>     81%] [Cov:============================>      82%][Progress:========================>     81%] [Cov:============================>      82%][Progress:========================>     81%] [Cov:============================>      82%][Progress:========================>     81%] [Cov:============================>      82%][Progress:========================>     81%] [Cov:============================>      82%][Progress:========================>     81%] [Cov:============================>      82%][Progress:========================>     81%] [Cov:============================>      82%][Progress:========================>     81%] [Cov:============================>      82%][Progress:========================>     81%] [Cov:============================>      82%][Progress:========================>     81%] [Cov:============================>      82%][Progress:========================>     81%] [Cov:============================>      82%][Progress:========================>     81%] [Cov:============================>      82%][Progress:========================>     81%] [Cov:============================>      82%][Progress:========================>     81%] [Cov:============================>      82%][Progress:========================>     81%] [Cov:============================>      82%][Progress:========================>     82%] [Cov:============================>      82%][Progress:========================>     82%] [Cov:============================>      82%][Progress:========================>     82%] [Cov:============================>      82%][Progress:========================>     82%] [Cov:============================>      82%][Progress:========================>     82%] [Cov:============================>      82%][Progress:========================>     82%] [Cov:============================>      82%][Progress:========================>     82%] [Cov:============================>      82%][Progress:========================>     82%] [Cov:============================>      82%][Progress:========================>     82%] [Cov:============================>      82%][Progress:========================>     82%] [Cov:============================>      82%][Progress:========================>     82%] [Cov:============================>      82%][Progress:========================>     82%] [Cov:============================>      82%][Progress:========================>     82%] [Cov:============================>      82%][Progress:========================>     82%] [Cov:============================>      82%][Progress:========================>     82%] [Cov:============================>      82%][Progress:========================>     82%] [Cov:============================>      82%][Progress:========================>     82%] [Cov:============================>      82%][Progress:========================>     83%] [Cov:============================>      82%][Progress:========================>     83%] [Cov:============================>      82%][Progress:========================>     83%] [Cov:============================>      82%][Progress:========================>     83%] [Cov:============================>      82%][Progress:========================>     83%] [Cov:============================>      82%][Progress:========================>     83%] [Cov:============================>      82%][Progress:========================>     83%] [Cov:============================>      82%][Progress:========================>     83%] [Cov:============================>      82%][Progress:========================>     83%] [Cov:============================>      82%][Progress:========================>     83%] [Cov:============================>      82%][Progress:========================>     83%] [Cov:============================>      82%][Progress:========================>     83%] [Cov:============================>      82%][Progress:========================>     83%] [Cov:============================>      82%][Progress:========================>     83%] [Cov:============================>      82%][Progress:========================>     83%] [Cov:============================>      82%][Progress:========================>     83%] [Cov:============================>      82%][Progress:========================>     83%] [Cov:============================>      82%][Progress:========================>     83%] [Cov:============================>      82%][Progress:========================>     83%] [Cov:============================>      82%][Progress:========================>     83%] [Cov:============================>      82%][Progress:=========================>    84%] [Cov:============================>      82%][Progress:=========================>    84%] [Cov:============================>      82%][Progress:=========================>    84%] [Cov:============================>      82%][Progress:=========================>    84%] [Cov:============================>      82%][Progress:=========================>    84%] [Cov:============================>      82%][Progress:=========================>    84%] [Cov:============================>      82%][Progress:=========================>    84%] [Cov:============================>      82%][Progress:=========================>    84%] [Cov:============================>      82%][Progress:=========================>    84%] [Cov:============================>      82%][Progress:=========================>    84%] [Cov:============================>      82%][Progress:=========================>    84%] [Cov:============================>      82%][Progress:=========================>    84%] [Cov:============================>      82%][Progress:=========================>    84%] [Cov:============================>      82%][Progress:=========================>    84%] [Cov:============================>      82%][Progress:=========================>    84%] [Cov:============================>      82%][Progress:=========================>    84%] [Cov:============================>      82%][Progress:=========================>    84%] [Cov:============================>      82%][Progress:=========================>    84%] [Cov:============================>      82%][Progress:=========================>    84%] [Cov:============================>      82%][Progress:=========================>    85%] [Cov:============================>      82%][Progress:=========================>    85%] [Cov:============================>      82%][Progress:=========================>    85%] [Cov:============================>      82%][Progress:=========================>    85%] [Cov:============================>      82%][Progress:=========================>    85%] [Cov:============================>      82%][Progress:=========================>    85%] [Cov:============================>      82%][Progress:=========================>    85%] [Cov:============================>      82%][Progress:=========================>    85%] [Cov:============================>      82%][Progress:=========================>    85%] [Cov:============================>      82%][Progress:=========================>    85%] [Cov:============================>      82%][Progress:=========================>    85%] [Cov:============================>      82%][Progress:=========================>    85%] [Cov:============================>      82%][Progress:=========================>    85%] [Cov:============================>      82%][Progress:=========================>    85%] [Cov:============================>      82%][Progress:=========================>    85%] [Cov:============================>      82%][Progress:=========================>    85%] [Cov:============================>      82%][Progress:=========================>    85%] [Cov:============================>      82%][Progress:=========================>    85%] [Cov:============================>      82%][Progress:=========================>    85%] [Cov:============================>      82%][Progress:=========================>    85%] [Cov:============================>      82%][Progress:=========================>    86%] [Cov:============================>      82%][Progress:=========================>    86%] [Cov:============================>      82%][Progress:=========================>    86%] [Cov:============================>      82%][Progress:=========================>    86%] [Cov:============================>      82%][Progress:=========================>    86%] [Cov:============================>      82%][Progress:=========================>    86%] [Cov:============================>      82%][Progress:=========================>    86%] [Cov:============================>      82%][Progress:=========================>    86%] [Cov:============================>      82%][Progress:=========================>    86%] [Cov:============================>      82%][Progress:=========================>    86%] [Cov:============================>      82%][Progress:=========================>    86%] [Cov:============================>      82%][Progress:=========================>    86%] [Cov:============================>      82%][Progress:=========================>    86%] [Cov:============================>      82%][Progress:=========================>    86%] [Cov:============================>      82%][Progress:=========================>    86%] [Cov:============================>      82%][Progress:=========================>    86%] [Cov:============================>      82%][Progress:=========================>    86%] [Cov:============================>      82%][Progress:=========================>    86%] [Cov:============================>      82%][Progress:=========================>    86%] [Cov:============================>      82%][Progress:==========================>   87%] [Cov:============================>      82%][Progress:==========================>   87%] [Cov:============================>      82%][Progress:==========================>   87%] [Cov:============================>      82%][Progress:==========================>   87%] [Cov:============================>      82%][Progress:==========================>   87%] [Cov:============================>      82%][Progress:==========================>   87%] [Cov:============================>      82%][Progress:==========================>   87%] [Cov:============================>      82%][Progress:==========================>   87%] [Cov:============================>      82%][Progress:==========================>   87%] [Cov:============================>      82%][Progress:==========================>   87%] [Cov:============================>      82%][Progress:==========================>   87%] [Cov:============================>      82%][Progress:==========================>   87%] [Cov:============================>      82%][Progress:==========================>   87%] [Cov:============================>      82%][Progress:==========================>   87%] [Cov:============================>      82%][Progress:==========================>   87%] [Cov:============================>      82%][Progress:==========================>   87%] [Cov:============================>      82%][Progress:==========================>   87%] [Cov:============================>      82%][Progress:==========================>   87%] [Cov:============================>      82%][Progress:==========================>   87%] [Cov:============================>      82%][Progress:==========================>   87%] [Cov:============================>      82%][Progress:==========================>   88%] [Cov:============================>      82%][Progress:==========================>   88%] [Cov:============================>      82%][Progress:==========================>   88%] [Cov:============================>      82%][Progress:==========================>   88%] [Cov:============================>      82%][Progress:==========================>   88%] [Cov:============================>      82%][Progress:==========================>   88%] [Cov:============================>      82%][Progress:==========================>   88%] [Cov:============================>      82%][Progress:==========================>   88%] [Cov:============================>      82%][Progress:==========================>   88%] [Cov:============================>      82%][Progress:==========================>   88%] [Cov:============================>      82%][Progress:==========================>   88%] [Cov:============================>      82%][Progress:==========================>   88%] [Cov:============================>      82%][Progress:==========================>   88%] [Cov:============================>      82%][Progress:==========================>   88%] [Cov:============================>      82%][Progress:==========================>   89%] [Cov:============================>      82%][Progress:==========================>   89%] [Cov:============================>      82%][Progress:==========================>   89%] [Cov:============================>      82%][Progress:==========================>   89%] [Cov:============================>      82%][Progress:==========================>   89%] [Cov:============================>      82%][Progress:==========================>   89%] [Cov:============================>      82%][Progress:==========================>   89%] [Cov:============================>      82%][Progress:==========================>   89%] [Cov:============================>      82%][Progress:==========================>   89%] [Cov:============================>      82%][Progress:==========================>   89%] [Cov:============================>      82%][Progress:==========================>   89%] [Cov:============================>      82%][Progress:==========================>   89%] [Cov:============================>      82%][Progress:==========================>   89%] [Cov:============================>      82%][Progress:==========================>   89%] [Cov:============================>      82%][Progress:==========================>   89%] [Cov:============================>      82%][Progress:==========================>   89%] [Cov:============================>      82%][Progress:==========================>   89%] [Cov:============================>      82%][Progress:==========================>   89%] [Cov:============================>      82%][Progress:==========================>   89%] [Cov:============================>      82%][Progress:==========================>   89%] [Cov:============================>      82%][Progress:==========================>   89%] [Cov:============================>      82%][Progress:==========================>   89%] [Cov:============================>      82%][Progress:===========================>  90%] [Cov:============================>      82%][Progress:===========================>  90%] [Cov:============================>      82%][Progress:===========================>  90%] [Cov:============================>      82%][Progress:===========================>  90%] [Cov:============================>      82%][Progress:===========================>  90%] [Cov:============================>      82%][Progress:===========================>  90%] [Cov:============================>      82%][Progress:===========================>  90%] [Cov:============================>      82%][Progress:===========================>  90%] [Cov:============================>      82%][Progress:===========================>  90%] [Cov:============================>      82%][Progress:===========================>  90%] [Cov:============================>      82%][Progress:===========================>  90%] [Cov:============================>      82%][Progress:===========================>  90%] [Cov:============================>      82%][Progress:===========================>  90%] [Cov:============================>      82%][Progress:===========================>  90%] [Cov:============================>      82%][Progress:===========================>  90%] [Cov:============================>      82%][Progress:===========================>  90%] [Cov:============================>      82%][Progress:===========================>  90%] [Cov:============================>      82%][Progress:===========================>  90%] [Cov:============================>      82%][Progress:===========================>  90%] [Cov:============================>      82%][Progress:===========================>  90%] [Cov:============================>      82%][Progress:===========================>  90%] [Cov:============================>      82%][Progress:===========================>  90%] [Cov:============================>      82%][Progress:===========================>  90%] [Cov:============================>      82%][Progress:===========================>  90%] [Cov:============================>      82%][Progress:===========================>  90%] [Cov:============================>      82%][Progress:===========================>  90%] [Cov:============================>      82%][Progress:===========================>  90%] [Cov:============================>      82%][Progress:===========================>  90%] [Cov:============================>      82%][Progress:===========================>  91%] [Cov:============================>      82%][Progress:===========================>  91%] [Cov:============================>      82%][Progress:===========================>  91%] [Cov:============================>      82%][Progress:===========================>  91%] [Cov:============================>      82%][Progress:===========================>  91%] [Cov:============================>      82%][Progress:===========================>  91%] [Cov:============================>      82%][Progress:===========================>  91%] [Cov:============================>      82%][Progress:===========================>  91%] [Cov:============================>      82%][Progress:===========================>  91%] [Cov:============================>      82%][Progress:===========================>  91%] [Cov:============================>      82%][Progress:===========================>  91%] [Cov:============================>      82%][Progress:===========================>  91%] [Cov:============================>      82%][Progress:===========================>  91%] [Cov:============================>      82%][Progress:===========================>  91%] [Cov:============================>      82%][Progress:===========================>  91%] [Cov:============================>      82%][Progress:===========================>  91%] [Cov:============================>      82%][Progress:===========================>  91%] [Cov:============================>      82%][Progress:===========================>  91%] [Cov:============================>      82%][Progress:===========================>  91%] [Cov:============================>      82%][Progress:===========================>  91%] [Cov:============================>      82%][Progress:===========================>  92%] [Cov:============================>      82%][Progress:===========================>  92%] [Cov:============================>      82%][Progress:===========================>  92%] [Cov:============================>      82%][Progress:===========================>  92%] [Cov:============================>      82%][Progress:===========================>  92%] [Cov:============================>      82%][Progress:===========================>  92%] [Cov:============================>      82%][Progress:===========================>  92%] [Cov:============================>      82%][Progress:===========================>  92%] [Cov:============================>      82%][Progress:===========================>  92%] [Cov:============================>      82%][Progress:===========================>  92%] [Cov:============================>      82%][Progress:===========================>  92%] [Cov:============================>      82%][Progress:===========================>  92%] [Cov:============================>      82%][Progress:===========================>  92%] [Cov:============================>      82%][Progress:===========================>  92%] [Cov:============================>      82%][Progress:===========================>  92%] [Cov:============================>      82%][Progress:===========================>  92%] [Cov:============================>      82%][Progress:===========================>  92%] [Cov:============================>      82%][Progress:===========================>  92%] [Cov:============================>      82%][Progress:===========================>  92%] [Cov:============================>      82%][Progress:===========================>  92%] [Cov:============================>      82%][Progress:===========================>  92%] [Cov:============================>      82%][Progress:===========================>  92%] [Cov:============================>      82%][Progress:===========================>  93%] [Cov:============================>      82%][Progress:===========================>  93%] [Cov:============================>      82%][Progress:===========================>  93%] [Cov:============================>      82%][Progress:===========================>  93%] [Cov:============================>      82%][Progress:===========================>  93%] [Cov:============================>      82%][Progress:===========================>  93%] [Cov:============================>      82%][Progress:===========================>  93%] [Cov:============================>      82%][Progress:===========================>  93%] [Cov:============================>      82%][Progress:===========================>  93%] [Cov:============================>      82%][Progress:===========================>  93%] [Cov:============================>      82%][Progress:===========================>  93%] [Cov:============================>      82%][Progress:===========================>  93%] [Cov:============================>      82%][Progress:===========================>  93%] [Cov:============================>      82%][Progress:===========================>  93%] [Cov:============================>      82%][Progress:===========================>  93%] [Cov:============================>      82%][Progress:===========================>  93%] [Cov:============================>      82%][Progress:===========================>  93%] [Cov:============================>      82%][Progress:============================> 94%] [Cov:============================>      82%][Progress:============================> 94%] [Cov:============================>      82%][Progress:============================> 94%] [Cov:============================>      82%][Progress:============================> 94%] [Cov:============================>      82%][Progress:============================> 94%] [Cov:============================>      82%][Progress:============================> 94%] [Cov:============================>      82%][Progress:============================> 94%] [Cov:============================>      82%][Progress:============================> 94%] [Cov:============================>      82%][Progress:============================> 94%] [Cov:============================>      82%][Progress:============================> 94%] [Cov:============================>      82%][Progress:============================> 94%] [Cov:============================>      82%][Progress:============================> 94%] [Cov:============================>      82%][Progress:============================> 94%] [Cov:============================>      82%][Progress:============================> 94%] [Cov:============================>      82%][Progress:============================> 94%] [Cov:============================>      82%][Progress:============================> 94%] [Cov:============================>      82%][Progress:============================> 94%] [Cov:============================>      82%][Progress:============================> 94%] [Cov:============================>      82%][Progress:============================> 94%] [Cov:============================>      82%][Progress:============================> 94%] [Cov:============================>      82%][Progress:============================> 95%] [Cov:============================>      82%][Progress:============================> 95%] [Cov:============================>      82%][Progress:============================> 95%] [Cov:============================>      82%][Progress:============================> 95%] [Cov:============================>      82%][Progress:============================> 95%] [Cov:============================>      82%][Progress:============================> 95%] [Cov:============================>      82%][Progress:============================> 95%] [Cov:============================>      82%][Progress:============================> 95%] [Cov:============================>      82%][Progress:============================> 95%] [Cov:============================>      82%][Progress:============================> 95%] [Cov:============================>      82%][Progress:============================> 95%] [Cov:============================>      82%][Progress:============================> 95%] [Cov:============================>      82%][Progress:============================> 95%] [Cov:============================>      82%][Progress:============================> 96%] [Cov:============================>      82%][Progress:============================> 96%] [Cov:============================>      82%][Progress:============================> 96%] [Cov:============================>      82%][Progress:============================> 96%] [Cov:============================>      82%][Progress:============================> 96%] [Cov:============================>      82%][Progress:============================> 96%] [Cov:============================>      82%][Progress:============================> 96%] [Cov:============================>      82%][Progress:============================> 96%] [Cov:============================>      82%][Progress:============================> 96%] [Cov:============================>      82%][Progress:============================> 96%] [Cov:============================>      82%][Progress:============================> 96%] [Cov:============================>      82%][Progress:============================> 96%] [Cov:============================>      82%][Progress:============================> 96%] [Cov:============================>      82%][Progress:============================> 96%] [Cov:============================>      82%][Progress:=============================>97%] [Cov:============================>      82%][Progress:=============================>97%] [Cov:============================>      82%][Progress:=============================>97%] [Cov:============================>      82%][Progress:=============================>97%] [Cov:============================>      82%][Progress:=============================>97%] [Cov:============================>      82%][Progress:=============================>97%] [Cov:============================>      82%][Progress:=============================>97%] [Cov:============================>      82%][Progress:=============================>97%] [Cov:============================>      82%][Progress:=============================>97%] [Cov:============================>      82%][Progress:=============================>97%] [Cov:============================>      82%][Progress:=============================>97%] [Cov:============================>      82%][Progress:=============================>97%] [Cov:============================>      82%][Progress:=============================>97%] [Cov:============================>      82%][Progress:=============================>97%] [Cov:============================>      82%][Progress:=============================>97%] [Cov:============================>      82%][Progress:=============================>98%] [Cov:============================>      82%][Progress:=============================>98%] [Cov:============================>      82%][Progress:=============================>99%] [Cov:============================>      82%][Progress:=============================>99%] [Cov:============================>      82%][Progress:=============================>99%] [Cov:============================>      82%][Progress:==============================100%] [Cov:============================>      82%][Progress:==============================100%] [Cov:============================>      82%][Progress:==============================100%] [Cov:============================>      82%][Progress:==============================100%] [Cov:============================>      82%][Progress:==============================100%] [Cov:============================>      82%][Progress:==============================100%] [Cov:============================>      82%][Progress:==============================100%] [Cov:============================>      82%][Progress:==============================100%] [Cov:============================>      82%][Progress:==============================100%] [Cov:============================>      82%]
* Search finished after 202s and 1422 generations, 717562 statements, best individual has fitness: 53.0
* Generated before the refinement 39 tests with total length 382
statement is: de.progra.charting.model.EditableChartDataModel()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.progra.charting.model.EditableChartDataModel
statement code is: EditableChartDataModel editableChartDataModel = new EditableChartDataModel()
statement is: de.progra.charting.CoordSystem(Lde/progra/charting/model/ChartDataModel;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.progra.charting.CoordSystem
statement code is: CoordSystem coordSystem = new CoordSystem(arg0)
statement is: org.evosuite.testcase.statements.FieldStatement@74033373 type is: class org.evosuite.testcase.statements.FieldStatement return type class de.progra.charting.CoordSystemUtilities
statement code is: CoordSystemUtilities coordSystemUtilities = coordSystem.c
statement is: computeRightMargin()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int computeRightMargin = coordSystemUtilities.computeRightMargin()
test data is: EditableChartDataModel editableChartDataModel = new EditableChartDataModel();
CoordSystem coordSystem = new CoordSystem(editableChartDataModel);
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
coordSystemUtilities.computeRightMargin();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        EditableChartDataModel editableChartDataModel = new EditableChartDataModel();
        editableChartDataModel.setTitle("Stock Price");
        editableChartDataModel.setXAxisLabel("Date");
        editableChartDataModel.setYAxisLabel("Price (USD)");
        editableChartDataModel.addSeries(new ChartDataSerie("Apple Inc.", new double[]{ 10, 20, 30, 40, 50 }));
        editableChartDataModel.addSeries(new ChartDataSerie("Google Inc.", new double[]{ 60, 70, 80, 90, 100 }));
        CoordSystem coordSystem = new CoordSystem(editableChartDataModel);
        coordSystem.setXAxisLabel("Date");
        coordSystem.setYAxisLabel("Price (USD)");
        coordSystem.computeRightMargin();
    }
}
statement is: EditableChartDataModel editableChartDataModel = new EditableChartDataModel(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: editableChartDataModel.setTitle("Stock Price"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: editableChartDataModel.setTitle("Stock Price") target is: editableChartDataModel method is: setTitle(java.lang.String)
statement is: editableChartDataModel.setXAxisLabel("Date"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: editableChartDataModel.setXAxisLabel("Date") target is: editableChartDataModel method is: setXAxisLabel(java.lang.String)
statement is: editableChartDataModel.setYAxisLabel("Price (USD)"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: editableChartDataModel.setYAxisLabel("Price (USD)") target is: editableChartDataModel method is: setYAxisLabel(java.lang.String)
statement is: editableChartDataModel.addSeries(new ChartDataSerie("Apple Inc.", new double[]{ 10, 20, 30, 40, 50 })), class spoon.support.reflect.code.CtInvocationImpl
invocation is: editableChartDataModel.addSeries(new ChartDataSerie("Apple Inc.", new double[]{ 10, 20, 30, 40, 50 })) target is: editableChartDataModel method is: addSeries(ChartDataSerie)
statement is: editableChartDataModel.addSeries(new ChartDataSerie("Google Inc.", new double[]{ 60, 70, 80, 90, 100 })), class spoon.support.reflect.code.CtInvocationImpl
invocation is: editableChartDataModel.addSeries(new ChartDataSerie("Google Inc.", new double[]{ 60, 70, 80, 90, 100 })) target is: editableChartDataModel method is: addSeries(ChartDataSerie)
statement is: CoordSystem coordSystem = new CoordSystem(editableChartDataModel), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: coordSystem.setXAxisLabel("Date"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: coordSystem.setXAxisLabel("Date") target is: coordSystem method is: setXAxisLabel(java.lang.String)
statement is: coordSystem.setYAxisLabel("Price (USD)"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: coordSystem.setYAxisLabel("Price (USD)") target is: coordSystem method is: setYAxisLabel(java.lang.String)
statement is: coordSystem.computeRightMargin(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: coordSystem.computeRightMargin() target is: coordSystem method is: computeRightMargin()
TestCase is: EditableChartDataModel editableChartDataModel = new EditableChartDataModel();
CoordSystem coordSystem = new CoordSystem(editableChartDataModel);

statement is: de.progra.charting.model.ObjectChartDataModel()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.progra.charting.model.ObjectChartDataModel
statement code is: ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel()
statement is: de.progra.charting.CoordSystem(Lde/progra/charting/model/ChartDataModel;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.progra.charting.CoordSystem
statement code is: CoordSystem coordSystem = new CoordSystem(arg0)
statement is: org.evosuite.testcase.statements.FieldStatement@409931b type is: class org.evosuite.testcase.statements.FieldStatement return type class de.progra.charting.CoordSystemUtilities
statement code is: CoordSystemUtilities coordSystemUtilities = coordSystem.c
statement is: computeTopMargin()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int computeTopMargin = coordSystemUtilities.computeTopMargin()
test data is: ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel();
CoordSystem coordSystem = new CoordSystem(objectChartDataModel);
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
coordSystemUtilities.computeTopMargin();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel();
        objectChartDataModel.setTitle("Sample Object Chart");
        objectChartDataModel.setDescription("A sample object chart for demonstration purposes.");
        objectChartDataModel.setXAxisLabel("X Axis");
        objectChartDataModel.setYAxisLabel("Y Axis");
        objectChartDataModel.setZAxisLabel("Z Axis");
        CoordSystem coordSystem = new CoordSystem(objectChartDataModel);
        coordSystem.setWidth(1024);
        coordSystem.setHeight(768);
        coordSystem.setTopMargin(50);
        coordSystem.setBottomMargin(100);
        coordSystem.setLeftMargin(150);
        coordSystem.setRightMargin(200);
        CoordSystemUtilities coordSystemUtilities = coordSystem.c;
        coordSystemUtilities.computeTopMargin();
    }
}
statement is: ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: objectChartDataModel.setTitle("Sample Object Chart"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: objectChartDataModel.setTitle("Sample Object Chart") target is: objectChartDataModel method is: setTitle(java.lang.String)
statement is: objectChartDataModel.setDescription("A sample object chart for demonstration purposes."), class spoon.support.reflect.code.CtInvocationImpl
invocation is: objectChartDataModel.setDescription("A sample object chart for demonstration purposes.") target is: objectChartDataModel method is: setDescription(java.lang.String)
statement is: objectChartDataModel.setXAxisLabel("X Axis"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: objectChartDataModel.setXAxisLabel("X Axis") target is: objectChartDataModel method is: setXAxisLabel(java.lang.String)
statement is: objectChartDataModel.setYAxisLabel("Y Axis"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: objectChartDataModel.setYAxisLabel("Y Axis") target is: objectChartDataModel method is: setYAxisLabel(java.lang.String)
statement is: objectChartDataModel.setZAxisLabel("Z Axis"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: objectChartDataModel.setZAxisLabel("Z Axis") target is: objectChartDataModel method is: setZAxisLabel(java.lang.String)
statement is: CoordSystem coordSystem = new CoordSystem(objectChartDataModel), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: coordSystem.setWidth(1024), class spoon.support.reflect.code.CtInvocationImpl
invocation is: coordSystem.setWidth(1024) target is: coordSystem method is: setWidth(int)
statement is: coordSystem.setHeight(768), class spoon.support.reflect.code.CtInvocationImpl
invocation is: coordSystem.setHeight(768) target is: coordSystem method is: setHeight(int)
statement is: coordSystem.setTopMargin(50), class spoon.support.reflect.code.CtInvocationImpl
invocation is: coordSystem.setTopMargin(50) target is: coordSystem method is: setTopMargin(int)
statement is: coordSystem.setBottomMargin(100), class spoon.support.reflect.code.CtInvocationImpl
invocation is: coordSystem.setBottomMargin(100) target is: coordSystem method is: setBottomMargin(int)
statement is: coordSystem.setLeftMargin(150), class spoon.support.reflect.code.CtInvocationImpl
invocation is: coordSystem.setLeftMargin(150) target is: coordSystem method is: setLeftMargin(int)
statement is: coordSystem.setRightMargin(200), class spoon.support.reflect.code.CtInvocationImpl
invocation is: coordSystem.setRightMargin(200) target is: coordSystem method is: setRightMargin(int)
statement is: CoordSystemUtilities coordSystemUtilities = coordSystem.c, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: coordSystem.c is coordSystem
CtField is: protected de.progra.charting.CoordSystemUtilities de.progra.charting.CoordSystem.c CoordSystemUtilities c
statement is: coordSystemUtilities.computeTopMargin(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: coordSystemUtilities.computeTopMargin() target is: coordSystemUtilities method is: computeTopMargin()
TestCase is: ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel();
CoordSystem coordSystem = new CoordSystem(objectChartDataModel);

statement is: org.evosuite.testcase.statements.ArrayStatement@9d8191fc type is: class org.evosuite.testcase.statements.ArrayStatement return type class [[D
statement code is: double[][] doubleArray = new double[4][5]
statement is: org.evosuite.testcase.statements.ArrayStatement@e25d5305 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [Ljava.lang.String;
statement code is: String[] stringArray = new String[7]
statement is: org.evosuite.testcase.statements.ArrayStatement@9ff13edc type is: class org.evosuite.testcase.statements.ArrayStatement return type class [D
statement code is: double[] doubleArray = new double[3]
statement is: org.evosuite.testcase.statements.AssignmentStatement@4ef6af9d type is: class org.evosuite.testcase.statements.AssignmentStatement return type double
statement code is: doubleArray[0] = 2.4
statement is: org.evosuite.testcase.statements.AssignmentStatement@75254e5f type is: class org.evosuite.testcase.statements.AssignmentStatement return type double
statement code is: doubleArray[1] = 3568.50611820713
statement is: org.evosuite.testcase.statements.AssignmentStatement@23d4ccc8 type is: class org.evosuite.testcase.statements.AssignmentStatement return type double
statement code is: doubleArray[2] = 3291.858831452
statement is: de.progra.charting.model.EditableChartDataModel([[D[D[Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.progra.charting.model.EditableChartDataModel
statement code is: EditableChartDataModel editableChartDataModel = new EditableChartDataModel(arg0, arg1, arg2)
statement is: de.progra.charting.CoordSystem(Lde/progra/charting/model/ChartDataModel;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.progra.charting.CoordSystem
statement code is: CoordSystem coordSystem = new CoordSystem(arg0)
statement is: org.evosuite.testcase.statements.FieldStatement@6e71f1f6 type is: class org.evosuite.testcase.statements.FieldStatement return type class de.progra.charting.CoordSystemUtilities
statement code is: CoordSystemUtilities coordSystemUtilities = coordSystem.c
statement is: computeLeftMargin()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int computeLeftMargin = coordSystemUtilities.computeLeftMargin()
test data is: double[][] doubleArray = new double[4][5];
String[] stringArray = new String[7];
double[] doubleArray = new double[3];
doubleArray[0] = 2.4;
doubleArray[1] = 3568.50611820713;
doubleArray[2] = 3291.858831452;
EditableChartDataModel editableChartDataModel = new EditableChartDataModel(doubleArray, doubleArray, stringArray);
CoordSystem coordSystem = new CoordSystem(editableChartDataModel);
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
coordSystemUtilities.computeLeftMargin();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        double[][] doubleArray = new double[][]{ new double[]{ 1, 2, 3 }, new double[]{ 4, 5, 6 }, new double[]{ 7, 8, 9 } };
        String[] stringArray = new String[]{ "a", "b", "c" };
        double[] doubleArray = new double[]{ 0.1, 0.2, 0.3 };
        editableChartDataModel = new EditableChartDataModel(doubleArray, doubleArray, stringArray);
        coordSystem = new CoordSystem(editableChartDataModel);
        coordSystemUtilities = coordSystem.c;
        coordSystemUtilities.computeLeftMargin();
    }
}
statement is: double[][] doubleArray = new double[][]{ new double[]{ 1, 2, 3 }, new double[]{ 4, 5, 6 }, new double[]{ 7, 8, 9 } }, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [] Ct is: double[][] doubleArray = new double[4][5] isAssignment: false Array: new double[][]{ new double[]{ 1, 2, 3 }, new double[]{ 4, 5, 6 }, new double[]{ 7, 8, 9 } } Elements: [new double[]{ 1, 2, 3 }, new double[]{ 4, 5, 6 }, new double[]{ 7, 8, 9 }]
lengths: [4, 5] []
Dimension: [] Ct is: String[] stringArray = new String[7] isAssignment: false Array: new double[][]{ new double[]{ 1, 2, 3 }, new double[]{ 4, 5, 6 }, new double[]{ 7, 8, 9 } } Elements: [new double[]{ 1, 2, 3 }, new double[]{ 4, 5, 6 }, new double[]{ 7, 8, 9 }]
lengths: [7] []
Dimension: [] Ct is: double[] doubleArray = new double[3] isAssignment: false Array: new double[][]{ new double[]{ 1, 2, 3 }, new double[]{ 4, 5, 6 }, new double[]{ 7, 8, 9 } } Elements: [new double[]{ 1, 2, 3 }, new double[]{ 4, 5, 6 }, new double[]{ 7, 8, 9 }]
lengths: [3] []
statement is: String[] stringArray = new String[]{ "a", "b", "c" }, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [] Ct is: double[][] doubleArray = new double[4][5] isAssignment: false Array: new String[]{ "a", "b", "c" } Elements: ["a", "b", "c"]
lengths: [4, 5] []
Dimension: [] Ct is: String[] stringArray = new String[7] isAssignment: false Array: new String[]{ "a", "b", "c" } Elements: ["a", "b", "c"]
lengths: [7] []
Dimension: [] Ct is: double[] doubleArray = new double[3] isAssignment: false Array: new String[]{ "a", "b", "c" } Elements: ["a", "b", "c"]
lengths: [3] []
statement is: double[] doubleArray = new double[]{ 0.1, 0.2, 0.3 }, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [] Ct is: double[][] doubleArray = new double[4][5] isAssignment: false Array: new double[]{ 0.1, 0.2, 0.3 } Elements: [0.1, 0.2, 0.3]
lengths: [4, 5] []
Dimension: [] Ct is: String[] stringArray = new String[7] isAssignment: false Array: new double[]{ 0.1, 0.2, 0.3 } Elements: [0.1, 0.2, 0.3]
lengths: [7] []
Dimension: [] Ct is: double[] doubleArray = new double[3] isAssignment: false Array: new double[]{ 0.1, 0.2, 0.3 } Elements: [0.1, 0.2, 0.3]
lengths: [3] []
statement is: editableChartDataModel = new EditableChartDataModel(doubleArray, doubleArray, stringArray), class spoon.support.reflect.code.CtAssignmentImpl
statement is: coordSystem = new CoordSystem(editableChartDataModel), class spoon.support.reflect.code.CtAssignmentImpl
statement is: coordSystemUtilities = coordSystem.c, class spoon.support.reflect.code.CtAssignmentImpl
statement is: coordSystemUtilities.computeLeftMargin(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: coordSystemUtilities.computeLeftMargin() target is: coordSystemUtilities method is: computeLeftMargin()
statement is: de.progra.charting.model.ObjectChartDataModel()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.progra.charting.model.ObjectChartDataModel
statement code is: ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel()
statement is: de.progra.charting.CoordSystem(Lde/progra/charting/model/ChartDataModel;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.progra.charting.CoordSystem
statement code is: CoordSystem coordSystem = new CoordSystem(arg0)
statement is: org.evosuite.testcase.statements.FieldStatement@4304f900 type is: class org.evosuite.testcase.statements.FieldStatement return type class de.progra.charting.CoordSystemUtilities
statement code is: CoordSystemUtilities coordSystemUtilities = coordSystem.c
statement is: computeLeftMargin()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int computeLeftMargin = coordSystemUtilities.computeLeftMargin()
test data is: ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel();
CoordSystem coordSystem = new CoordSystem(objectChartDataModel);
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
coordSystemUtilities.computeLeftMargin();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel(10, 5, "Hello World!");
        CoordSystem coordSystem = new CoordSystem(objectChartDataModel);
        CoordSystemUtilities coordSystemUtilities = coordSystem.c;
        coordSystemUtilities.computeLeftMargin();
    }
}
statement is: ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel(10, 5, "Hello World!"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: CoordSystem coordSystem = new CoordSystem(objectChartDataModel), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: de.progra.charting.CoordSystem(Lde/progra/charting/model/ChartDataModel;)V
statement is: CoordSystemUtilities coordSystemUtilities = coordSystem.c, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: coordSystem.c is coordSystem
CtField is: protected de.progra.charting.CoordSystemUtilities de.progra.charting.CoordSystem.c CoordSystemUtilities c
statement is: coordSystemUtilities.computeLeftMargin(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: coordSystemUtilities.computeLeftMargin() target is: coordSystemUtilities method is: computeLeftMargin()
statement is: de.progra.charting.model.EditableChartDataModel()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.progra.charting.model.EditableChartDataModel
statement code is: EditableChartDataModel editableChartDataModel = new EditableChartDataModel()
statement is: setManualScale(Z)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: editableChartDataModel.setManualScale(true)
statement is: de.progra.charting.CoordSystem(Lde/progra/charting/model/ChartDataModel;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.progra.charting.CoordSystem
statement code is: CoordSystem coordSystem = new CoordSystem(arg0)
statement is: org.evosuite.testcase.statements.FieldStatement@755b54da type is: class org.evosuite.testcase.statements.FieldStatement return type class de.progra.charting.CoordSystemUtilities
statement code is: CoordSystemUtilities coordSystemUtilities = coordSystem.c
statement is: computeLeftMargin()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int computeLeftMargin = coordSystemUtilities.computeLeftMargin()
test data is: EditableChartDataModel editableChartDataModel = new EditableChartDataModel();
editableChartDataModel.setManualScale(true);
CoordSystem coordSystem = new CoordSystem(editableChartDataModel);
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
coordSystemUtilities.computeLeftMargin();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        EditableChartDataModel editableChartDataModel = new EditableChartDataModel();
        editableChartDataModel.setManualScale(true);// This line sets the manual scale to true, indicating that the chart should be displayed in a customized manner.

        CoordSystem coordSystem = new CoordSystem(editableChartDataModel);// This line creates a new instance of the CoordSystem class and initializes it with the provided EditableChartDataModel object.

        CoordSystemUtilities coordSystemUtilities = coordSystem.c;// This line retrieves an instance of the CoordSystemUtilities class from the CoordSystem object, which provides various utility methods for working with coordinate systems.

        coordSystemUtilities.computeLeftMargin();// This line invokes the computeLeftMargin() method on the CoordSystemUtilities object, which computes the left margin of the chart based on the provided EditableChartDataModel object. }}

    }
}
statement is: EditableChartDataModel editableChartDataModel = new EditableChartDataModel(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: editableChartDataModel.setManualScale(true)// This line sets the manual scale to true, indicating that the chart should be displayed in a customized manner.
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: editableChartDataModel.setManualScale(true)// This line sets the manual scale to true, indicating that the chart should be displayed in a customized manner.
 target is: editableChartDataModel method is: setManualScale(boolean)
source statement: de.progra.charting.model.EditableChartDataModel()V callee: VariableReference: Statement 0, type de.progra.charting.model.EditableChartDataModelindex is: 0
Matched Method is: setManualScale(Z)V
statement is: CoordSystem coordSystem = new CoordSystem(editableChartDataModel)// This line creates a new instance of the CoordSystem class and initializes it with the provided EditableChartDataModel object.
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: CoordSystemUtilities coordSystemUtilities = coordSystem.c// This line retrieves an instance of the CoordSystemUtilities class from the CoordSystem object, which provides various utility methods for working with coordinate systems.
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: coordSystem.c is coordSystem
CtField is: protected de.progra.charting.CoordSystemUtilities de.progra.charting.CoordSystem.c CoordSystemUtilities c
statement is: coordSystemUtilities.computeLeftMargin()// This line invokes the computeLeftMargin() method on the CoordSystemUtilities object, which computes the left margin of the chart based on the provided EditableChartDataModel object. }}
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: coordSystemUtilities.computeLeftMargin()// This line invokes the computeLeftMargin() method on the CoordSystemUtilities object, which computes the left margin of the chart based on the provided EditableChartDataModel object. }}
 target is: coordSystemUtilities method is: computeLeftMargin()
TestCase is: EditableChartDataModel editableChartDataModel = new EditableChartDataModel();
boolean _boolean = true;
editableChartDataModel.setManualScale(_boolean);
CoordSystem coordSystem = new CoordSystem(editableChartDataModel);

statement is: org.evosuite.testcase.statements.ArrayStatement@477f6cf type is: class org.evosuite.testcase.statements.ArrayStatement return type class [[D
statement code is: double[][] doubleArray = new double[4][5]
statement is: org.evosuite.testcase.statements.ArrayStatement@b48a23a5 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [Ljava.lang.String;
statement code is: String[] stringArray = new String[5]
statement is: de.progra.charting.model.ObjectChartDataModel([[D[Ljava/lang/Object;[Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.progra.charting.model.ObjectChartDataModel
statement code is: ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel(arg1, arg1, arg2)
statement is: de.progra.charting.CoordSystem(Lde/progra/charting/model/ChartDataModel;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.progra.charting.CoordSystem
statement code is: CoordSystem coordSystem = new CoordSystem(arg0)
statement is: org.evosuite.testcase.statements.ArrayStatement@6dce274a type is: class org.evosuite.testcase.statements.ArrayStatement return type class [D
statement code is: double[] doubleArray = new double[9]
statement is: org.evosuite.testcase.statements.AssignmentStatement@aba34201 type is: class org.evosuite.testcase.statements.AssignmentStatement return type double
statement code is: doubleArray[0] = (double) 20
statement is: org.evosuite.testcase.statements.AssignmentStatement@71846c43 type is: class org.evosuite.testcase.statements.AssignmentStatement return type double
statement code is: doubleArray[6] = (-1.0)
statement is: de.progra.charting.model.EditableChartDataModel([[D[D[Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.progra.charting.model.EditableChartDataModel
statement code is: EditableChartDataModel editableChartDataModel = new EditableChartDataModel(arg0, arg1, arg2)
statement is: de.progra.charting.model.DefaultChartDataModelConstraints(Lde/progra/charting/model/AbstractChartDataModel;IZ)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.progra.charting.model.DefaultChartDataModelConstraints
statement code is: DefaultChartDataModelConstraints defaultChartDataModelConstraints = new DefaultChartDataModelConstraints(arg0, 1, true)
statement is: de.progra.charting.CoordSystemUtilities(Lde/progra/charting/CoordSystem;Lde/progra/charting/model/ChartDataModelConstraints;Lde/progra/charting/model/ChartDataModelConstraints;Lde/progra/charting/model/ChartDataModel;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.progra.charting.CoordSystemUtilities
statement code is: CoordSystemUtilities coordSystemUtilities = new CoordSystemUtilities(arg0, arg2, arg2, arg3)
statement is: computeLeftMargin()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int computeLeftMargin = coordSystemUtilities.computeLeftMargin()
test data is: double[][] doubleArray = new double[4][5];
String[] stringArray = new String[5];
ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel(doubleArray, doubleArray, stringArray);
CoordSystem coordSystem = new CoordSystem(objectChartDataModel);
double[] doubleArray = new double[9];
doubleArray[0] = (double) 20;
doubleArray[6] = (-1.0);
EditableChartDataModel editableChartDataModel = new EditableChartDataModel(doubleArray, doubleArray, stringArray);
DefaultChartDataModelConstraints defaultChartDataModelConstraints = new DefaultChartDataModelConstraints(editableChartDataModel, 1, true);
CoordSystemUtilities coordSystemUtilities = new CoordSystemUtilities(coordSystem, defaultChartDataModelConstraints, defaultChartDataModelConstraints, objectChartDataModel);
coordSystemUtilities.computeLeftMargin();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        double[][] doubleArray = new double[4][5];
        doubleArray[0][0] = 20;
        doubleArray[0][6] = -1.0;
        String[] stringArray = new String[5];
        stringArray[0] = "Hello";
        stringArray[1] = "World!";
        ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel(doubleArray, doubleArray, stringArray);
        CoordSystem coordSystem = new CoordSystem(objectChartDataModel);
        DefaultChartDataModelConstraints defaultChartDataModelConstraints = new DefaultChartDataModelConstraints(objectChartDataModel, 1, true);
        CoordSystemUtilities coordSystemUtilities = new CoordSystemUtilities(coordSystem, defaultChartDataModelConstraints, defaultChartDataModelConstraints, objectChartDataModel);
        coordSystemUtilities.computeLeftMargin();
    }
}
statement is: double[][] doubleArray = new double[4][5], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [4, 5] Ct is: double[][] doubleArray = new double[4][5] isAssignment: false Array: new double[4][5] Elements: []
lengths: [4, 5] [4, 5]
Their type are: class [[D double[][]
statement is: doubleArray[0][0] = 20, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : doubleArray[0][0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl double Assignment:20 Ct is: doubleArray[0][0] = 20
target : doubleArray[0] class spoon.support.reflect.code.CtLiteralImpl
statement is: doubleArray[0][6] = -1.0, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : doubleArray[0][6] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl double Assignment:-1.0 Ct is: doubleArray[0][6] = -1.0
target : doubleArray[0] class spoon.support.reflect.code.CtLiteralImpl
statement is: String[] stringArray = new String[5], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [5] Ct is: double[][] doubleArray = new double[4][5] isAssignment: false Array: new String[5] Elements: []
lengths: [4, 5] [5]
Dimension: [5] Ct is: String[] stringArray = new String[5] isAssignment: false Array: new String[5] Elements: []
lengths: [5] [5]
Their type are: class [Ljava.lang.String; String[]
statement is: stringArray[0] = "Hello", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"Hello" Ct is: stringArray[0] = "Hello"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[1] = "World!", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[1] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"World!" Ct is: stringArray[1] = "World!"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel(doubleArray, doubleArray, stringArray), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: CoordSystem coordSystem = new CoordSystem(objectChartDataModel), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: DefaultChartDataModelConstraints defaultChartDataModelConstraints = new DefaultChartDataModelConstraints(objectChartDataModel, 1, true), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: CoordSystemUtilities coordSystemUtilities = new CoordSystemUtilities(coordSystem, defaultChartDataModelConstraints, defaultChartDataModelConstraints, objectChartDataModel), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: coordSystemUtilities.computeLeftMargin(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: coordSystemUtilities.computeLeftMargin() target is: coordSystemUtilities method is: computeLeftMargin()
source statement: de.progra.charting.CoordSystemUtilities(Lde/progra/charting/CoordSystem;Lde/progra/charting/model/ChartDataModelConstraints;Lde/progra/charting/model/ChartDataModelConstraints;Lde/progra/charting/model/ChartDataModel;)V callee: VariableReference: Statement 9, type de.progra.charting.CoordSystemUtilitiesindex is: 7
Matched Method is: computeLeftMargin()I
TestCase Could not be added: computeLeftMargin()I
TestCase is: double[][] doubleArray = new double[4][5];
String[] stringArray = new String[5];
ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel(doubleArray, doubleArray, stringArray);
CoordSystem coordSystem = new CoordSystem(objectChartDataModel);
int _int = 1;
boolean _boolean = true;
DefaultChartDataModelConstraints defaultChartDataModelConstraints = new DefaultChartDataModelConstraints(objectChartDataModel, _int, _boolean);
CoordSystemUtilities coordSystemUtilities = new CoordSystemUtilities(coordSystem, defaultChartDataModelConstraints, defaultChartDataModelConstraints, objectChartDataModel);

statement is: org.evosuite.testcase.statements.ArrayStatement@dbd966cc type is: class org.evosuite.testcase.statements.ArrayStatement return type class [[Ljava.lang.Number;
statement code is: Number[][] numberArray = new Number[1][3]
statement is: org.evosuite.testcase.statements.ArrayStatement@cb09808d type is: class org.evosuite.testcase.statements.ArrayStatement return type class [Ljava.lang.Number;
statement code is: Number[] numberArray = new Number[2]
statement is: org.evosuite.testcase.statements.FieldStatement@e99a2837 type is: class org.evosuite.testcase.statements.FieldStatement return type class java.lang.Integer
statement code is: Integer integer = JLayeredPane.PALETTE_LAYER
statement is: org.evosuite.testcase.statements.AssignmentStatement@d198cc85 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.Number
statement code is: numberArray[0] = (Number) integer
statement is: org.evosuite.testcase.statements.AssignmentStatement@d75d5469 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.Number
statement code is: numberArray[1] = (Number) integer
statement is: org.evosuite.testcase.statements.AssignmentStatement@e3165881 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class [Ljava.lang.Number;
statement code is: numberArray[0] = numberArray
statement is: org.evosuite.testcase.statements.ArrayStatement@c9dd0244 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [D
statement code is: double[] doubleArray = new double[3]
statement is: org.evosuite.testcase.statements.ArrayStatement@b1295064 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [Ljava.lang.String;
statement code is: String[] stringArray = new String[8]
statement is: de.progra.charting.model.DefaultChartDataModel([[Ljava/lang/Number;[D[Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.progra.charting.model.DefaultChartDataModel
statement code is: DefaultChartDataModel defaultChartDataModel = new DefaultChartDataModel(arg0, arg1, arg2)
statement is: de.progra.charting.CoordSystem(Lde/progra/charting/model/ChartDataModel;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.progra.charting.CoordSystem
statement code is: CoordSystem coordSystem = new CoordSystem(arg0)
statement is: org.evosuite.testcase.statements.FieldStatement@24e15063 type is: class org.evosuite.testcase.statements.FieldStatement return type class de.progra.charting.CoordSystemUtilities
statement code is: CoordSystemUtilities coordSystemUtilities = coordSystem.c
statement is: computeBottomMargin()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int computeBottomMargin = coordSystemUtilities.computeBottomMargin()
test data is: Number[][] numberArray = new Number[1][3];
Number[] numberArray = new Number[2];
Integer integer = JLayeredPane.PALETTE_LAYER;
numberArray[0] = (Number) integer;
numberArray[1] = (Number) integer;
numberArray[0] = numberArray;
double[] doubleArray = new double[3];
String[] stringArray = new String[8];
DefaultChartDataModel defaultChartDataModel = new DefaultChartDataModel(numberArray, doubleArray, stringArray);
CoordSystem coordSystem = new CoordSystem(defaultChartDataModel);
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
coordSystemUtilities.computeBottomMargin();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Number[][] numberArray = new Number[1][3];
        numberArray[0][0] = 5;// Changed from Integer to Number

        numberArray[0][1] = 7;// Changed from Integer to Number

        numberArray[0][2] = 9;// Changed from Integer to Number

        double[] doubleArray = new double[3];
        doubleArray[0] = 5.1;// Changed from Double to double

        doubleArray[1] = 7.4;// Changed from Double to double

        doubleArray[2] = 9.8;// Changed from Double to double

        String[] stringArray = new String[8];
        stringArray[0] = "Apple";// Changed from String to string

        stringArray[1] = "Banana";// Changed from String to string

        stringArray[2] = "Cherry";// Changed from String to string

        stringArray[3] = "Durian";// Changed from String to string

        stringArray[4] = "Elderberry";// Changed from String to string

        stringArray[5] = "Fig";// Changed from String to string

        stringArray[6] = "Grapefruit";// Changed from String to string

        stringArray[7] = "Jackfruit";// Changed from String to string

        DefaultChartDataModel defaultChartDataModel = new DefaultChartDataModel(numberArray, doubleArray, stringArray);
        CoordSystem coordSystem = new CoordSystem(defaultChartDataModel);
        CoordSystemUtilities coordSystemUtilities = coordSystem.c;
        coordSystemUtilities.computeBottomMargin();
    }
}
statement is: Number[][] numberArray = new Number[1][3], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [1, 3] Ct is: Number[][] numberArray = new Number[1][3] isAssignment: false Array: new Number[1][3] Elements: []
lengths: [1, 3] [1, 3]
Their type are: class [[Ljava.lang.Number; Number[][]
statement is: numberArray[0][0] = 5// Changed from Integer to Number
, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : numberArray[0][0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl Number Assignment:5 Ct is: numberArray[0][0] = 5// Changed from Integer to Number

target : numberArray[0] class spoon.support.reflect.code.CtLiteralImpl
statement is: numberArray[0][1] = 7// Changed from Integer to Number
, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : numberArray[0][1] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl Number Assignment:7 Ct is: numberArray[0][1] = 7// Changed from Integer to Number

target : numberArray[0] class spoon.support.reflect.code.CtLiteralImpl
statement is: numberArray[0][2] = 9// Changed from Integer to Number
, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : numberArray[0][2] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl Number Assignment:9 Ct is: numberArray[0][2] = 9// Changed from Integer to Number

target : numberArray[0] class spoon.support.reflect.code.CtLiteralImpl
statement is: double[] doubleArray = new double[3], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [3] Ct is: Number[][] numberArray = new Number[1][3] isAssignment: false Array: new double[3] Elements: []
lengths: [1, 3] [3]
Dimension: [3] Ct is: Number[] numberArray = new Number[2] isAssignment: false Array: new double[3] Elements: []
lengths: [2] [3]
Their type are: class [Ljava.lang.Number; double[]
Dimension: [3] Ct is: double[] doubleArray = new double[3] isAssignment: false Array: new double[3] Elements: []
lengths: [3] [3]
Their type are: class [D double[]
statement is: doubleArray[0] = 5.1// Changed from Double to double
, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : doubleArray[0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl double Assignment:5.1 Ct is: doubleArray[0] = 5.1// Changed from Double to double

target : doubleArray class spoon.support.reflect.code.CtLiteralImpl
statement is: doubleArray[1] = 7.4// Changed from Double to double
, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : doubleArray[1] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl double Assignment:7.4 Ct is: doubleArray[1] = 7.4// Changed from Double to double

target : doubleArray class spoon.support.reflect.code.CtLiteralImpl
statement is: doubleArray[2] = 9.8// Changed from Double to double
, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : doubleArray[2] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl double Assignment:9.8 Ct is: doubleArray[2] = 9.8// Changed from Double to double

target : doubleArray class spoon.support.reflect.code.CtLiteralImpl
statement is: String[] stringArray = new String[8], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [8] Ct is: Number[][] numberArray = new Number[1][3] isAssignment: false Array: new String[8] Elements: []
lengths: [1, 3] [8]
Dimension: [8] Ct is: Number[] numberArray = new Number[2] isAssignment: false Array: new String[8] Elements: []
lengths: [2] [8]
Their type are: class [Ljava.lang.Number; String[]
Dimension: [8] Ct is: double[] doubleArray = new double[3] isAssignment: false Array: new String[8] Elements: []
lengths: [3] [8]
Their type are: class [D String[]
Dimension: [8] Ct is: String[] stringArray = new String[8] isAssignment: false Array: new String[8] Elements: []
lengths: [8] [8]
Their type are: class [Ljava.lang.String; String[]
statement is: stringArray[0] = "Apple"// Changed from String to string
, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"Apple" Ct is: stringArray[0] = "Apple"// Changed from String to string

target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[1] = "Banana"// Changed from String to string
, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[1] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"Banana" Ct is: stringArray[1] = "Banana"// Changed from String to string

target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[2] = "Cherry"// Changed from String to string
, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[2] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"Cherry" Ct is: stringArray[2] = "Cherry"// Changed from String to string

target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[3] = "Durian"// Changed from String to string
, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[3] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"Durian" Ct is: stringArray[3] = "Durian"// Changed from String to string

target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[4] = "Elderberry"// Changed from String to string
, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[4] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"Elderberry" Ct is: stringArray[4] = "Elderberry"// Changed from String to string

target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[5] = "Fig"// Changed from String to string
, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[5] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"Fig" Ct is: stringArray[5] = "Fig"// Changed from String to string

target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[6] = "Grapefruit"// Changed from String to string
, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[6] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"Grapefruit" Ct is: stringArray[6] = "Grapefruit"// Changed from String to string

target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[7] = "Jackfruit"// Changed from String to string
, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[7] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"Jackfruit" Ct is: stringArray[7] = "Jackfruit"// Changed from String to string

target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: DefaultChartDataModel defaultChartDataModel = new DefaultChartDataModel(numberArray, doubleArray, stringArray), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: CoordSystem coordSystem = new CoordSystem(defaultChartDataModel), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: CoordSystemUtilities coordSystemUtilities = coordSystem.c, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: coordSystem.c is coordSystem
CtField is: public static final java.lang.Integer javax.swing.JLayeredPane.PALETTE_LAYER Integer PALETTE_LAYER
CtField is: protected de.progra.charting.CoordSystemUtilities de.progra.charting.CoordSystem.c CoordSystemUtilities c
statement is: coordSystemUtilities.computeBottomMargin(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: coordSystemUtilities.computeBottomMargin() target is: coordSystemUtilities method is: computeBottomMargin()
TestCase is: Number[][] numberArray = new Number[1][3];
double[] doubleArray = new double[3];
String[] stringArray = new String[8];
DefaultChartDataModel defaultChartDataModel = new DefaultChartDataModel(numberArray, doubleArray, stringArray);
CoordSystem coordSystem = new CoordSystem(defaultChartDataModel);

statement is: org.evosuite.testcase.statements.ArrayStatement@b6e66f39 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [[D
statement code is: double[][] doubleArray = new double[6][5]
statement is: org.evosuite.testcase.statements.ArrayStatement@db0bb590 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [Ljava.lang.String;
statement code is: String[] stringArray = new String[8]
statement is: de.progra.charting.model.ObjectChartDataModel([[D[Ljava/lang/Object;[Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.progra.charting.model.ObjectChartDataModel
statement code is: ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel(arg0, arg2, arg2)
statement is: de.progra.charting.model.StackedChartDataModelConstraints(Lde/progra/charting/model/AbstractChartDataModel;IZ)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.progra.charting.model.StackedChartDataModelConstraints
statement code is: StackedChartDataModelConstraints stackedChartDataModelConstraints = new StackedChartDataModelConstraints(arg0, 1282, true)
statement is: javax.swing.JSpinner()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class javax.swing.JSpinner
statement code is: JSpinner jSpinner = new JSpinner()
statement is: javax.swing.JSpinner$NumberEditor(Ljavax/swing/JSpinner;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class javax.swing.JSpinner$NumberEditor
statement code is: JSpinner.NumberEditor jSpinner_NumberEditor = new JSpinner.NumberEditor(arg0)
statement is: getFormat()Ljava/text/DecimalFormat; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.text.DecimalFormat
statement code is: DecimalFormat format = jSpinner_NumberEditor.getFormat()
statement is: de.progra.charting.CoordSystem(Lde/progra/charting/model/ChartDataModel;Ljava/text/DecimalFormat;ZZZ)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.progra.charting.CoordSystem
statement code is: CoordSystem coordSystem = new CoordSystem(arg0, arg1, true, true, true)
statement is: de.progra.charting.CoordSystemUtilities(Lde/progra/charting/CoordSystem;Lde/progra/charting/model/ChartDataModelConstraints;Lde/progra/charting/model/ChartDataModelConstraints;Lde/progra/charting/model/ChartDataModel;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.progra.charting.CoordSystemUtilities
statement code is: CoordSystemUtilities coordSystemUtilities = new CoordSystemUtilities(arg0, arg2, arg2, arg3)
statement is: computeBottomMargin()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int computeBottomMargin = coordSystemUtilities.computeBottomMargin()
test data is: double[][] doubleArray = new double[6][5];
String[] stringArray = new String[8];
ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel(doubleArray, stringArray, stringArray);
StackedChartDataModelConstraints stackedChartDataModelConstraints = new StackedChartDataModelConstraints(objectChartDataModel, 1282, true);
JSpinner jSpinner = new JSpinner();
JSpinner.NumberEditor jSpinner_NumberEditor = new JSpinner.NumberEditor(jSpinner);
DecimalFormat format = jSpinner_NumberEditor.getFormat();
CoordSystem coordSystem = new CoordSystem(objectChartDataModel, format, true, true, true);
CoordSystemUtilities coordSystemUtilities = new CoordSystemUtilities(coordSystem, stackedChartDataModelConstraints, stackedChartDataModelConstraints, objectChartDataModel);
coordSystemUtilities.computeBottomMargin();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        double[][] doubleArray = new double[6][5];
        // Replace the primitive values with more descriptive examples
        doubleArray[0][0] = 123.456;
        doubleArray[0][1] = -789.012;
        doubleArray[0][2] = 3.14159;
        doubleArray[0][3] = -0.5;
        doubleArray[0][4] = 2.71828;
        stringArray[0] = "apple";
        stringArray[1] = "banana";
        stringArray[2] = "cherry";
        stringArray[3] = "date";
        stringArray[4] = "elderberry";
        stringArray[5] = "fig";
        stringArray[6] = "grapefruit";
        stringArray[7] = "honeydew";
        stringArray[8] = "ice cream";
        objectChartDataModel = new ObjectChartDataModel(doubleArray, stringArray, stringArray);
        // Replace the primitive values with more descriptive examples
        stackedChartDataModelConstraints = new StackedChartDataModelConstraints(objectChartDataModel, 1282, true);
        jSpinner = new JSpinner();
        jSpinner_NumberEditor = new JSpinner.NumberEditor(jSpinner);
        format = jSpinner_NumberEditor.getFormat();
        coordSystem = new CoordSystem(objectChartDataModel, format, true, true, true);
        coordSystemUtilities = new CoordSystemUtilities(coordSystem, stackedChartDataModelConstraints, stackedChartDataModelConstraints, objectChartDataModel);
        coordSystemUtilities.computeBottomMargin();
    }
}
statement is: double[][] doubleArray = new double[6][5], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [6, 5] Ct is: double[][] doubleArray = new double[6][5] isAssignment: false Array: new double[6][5] Elements: []
lengths: [6, 5] [6, 5]
Their type are: class [[D double[][]
statement is: // Replace the primitive values with more descriptive examples
doubleArray[0][0] = 123.456, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : doubleArray[0][0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl double Assignment:123.456 Ct is: // Replace the primitive values with more descriptive examples
doubleArray[0][0] = 123.456
target : doubleArray[0] class spoon.support.reflect.code.CtLiteralImpl
statement is: doubleArray[0][1] = -789.012, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : doubleArray[0][1] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl double Assignment:-789.012 Ct is: doubleArray[0][1] = -789.012
target : doubleArray[0] class spoon.support.reflect.code.CtLiteralImpl
statement is: doubleArray[0][2] = 3.14159, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : doubleArray[0][2] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl double Assignment:3.14159 Ct is: doubleArray[0][2] = 3.14159
target : doubleArray[0] class spoon.support.reflect.code.CtLiteralImpl
statement is: doubleArray[0][3] = -0.5, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : doubleArray[0][3] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl double Assignment:-0.5 Ct is: doubleArray[0][3] = -0.5
target : doubleArray[0] class spoon.support.reflect.code.CtLiteralImpl
statement is: doubleArray[0][4] = 2.71828, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : doubleArray[0][4] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl double Assignment:2.71828 Ct is: doubleArray[0][4] = 2.71828
target : doubleArray[0] class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[0] = "apple", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl null Assignment:"apple" Ct is: stringArray[0] = "apple"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[1] = "banana", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[1] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl null Assignment:"banana" Ct is: stringArray[1] = "banana"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[2] = "cherry", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[2] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl null Assignment:"cherry" Ct is: stringArray[2] = "cherry"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[3] = "date", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[3] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl null Assignment:"date" Ct is: stringArray[3] = "date"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[4] = "elderberry", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[4] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl null Assignment:"elderberry" Ct is: stringArray[4] = "elderberry"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[5] = "fig", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[5] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl null Assignment:"fig" Ct is: stringArray[5] = "fig"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[6] = "grapefruit", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[6] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl null Assignment:"grapefruit" Ct is: stringArray[6] = "grapefruit"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[7] = "honeydew", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[7] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl null Assignment:"honeydew" Ct is: stringArray[7] = "honeydew"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[8] = "ice cream", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[8] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl null Assignment:"ice cream" Ct is: stringArray[8] = "ice cream"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: objectChartDataModel = new ObjectChartDataModel(doubleArray, stringArray, stringArray), class spoon.support.reflect.code.CtAssignmentImpl
statement is: // Replace the primitive values with more descriptive examples
stackedChartDataModelConstraints = new StackedChartDataModelConstraints(objectChartDataModel, 1282, true), class spoon.support.reflect.code.CtAssignmentImpl
statement is: jSpinner = new JSpinner(), class spoon.support.reflect.code.CtAssignmentImpl
statement is: jSpinner_NumberEditor = new JSpinner.NumberEditor(jSpinner), class spoon.support.reflect.code.CtAssignmentImpl
statement is: format = jSpinner_NumberEditor.getFormat(), class spoon.support.reflect.code.CtAssignmentImpl
statement is: coordSystem = new CoordSystem(objectChartDataModel, format, true, true, true), class spoon.support.reflect.code.CtAssignmentImpl
statement is: coordSystemUtilities = new CoordSystemUtilities(coordSystem, stackedChartDataModelConstraints, stackedChartDataModelConstraints, objectChartDataModel), class spoon.support.reflect.code.CtAssignmentImpl
statement is: coordSystemUtilities.computeBottomMargin(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: coordSystemUtilities.computeBottomMargin() target is: coordSystemUtilities method is: computeBottomMargin()
TestCase is: double[][] doubleArray = new double[6][5];

statement is: org.evosuite.testcase.statements.ArrayStatement@48597dfe type is: class org.evosuite.testcase.statements.ArrayStatement return type class [[D
statement code is: double[][] doubleArray = new double[4][5]
statement is: org.evosuite.testcase.statements.ArrayStatement@cabe8d35 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [Ljava.lang.String;
statement code is: String[] stringArray = new String[5]
statement is: de.progra.charting.model.ObjectChartDataModel([[D[Ljava/lang/Object;[Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.progra.charting.model.ObjectChartDataModel
statement code is: ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel(arg1, arg1, arg2)
statement is: de.progra.charting.CoordSystem(Lde/progra/charting/model/ChartDataModel;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.progra.charting.CoordSystem
statement code is: CoordSystem coordSystem = new CoordSystem(arg0)
statement is: org.evosuite.testcase.statements.FieldStatement@69fb6284 type is: class org.evosuite.testcase.statements.FieldStatement return type class de.progra.charting.CoordSystemUtilities
statement code is: CoordSystemUtilities coordSystemUtilities = coordSystem.c
statement is: computeBottomMargin()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int computeBottomMargin = coordSystemUtilities.computeBottomMargin()
test data is: double[][] doubleArray = new double[4][5];
String[] stringArray = new String[5];
ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel(doubleArray, doubleArray, stringArray);
CoordSystem coordSystem = new CoordSystem(objectChartDataModel);
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
coordSystemUtilities.computeBottomMargin();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        double[][] doubleArray = new double[4][5];
        // Improved test data: using more descriptive values for the array elements
        doubleArray[0][0] = 1.23;
        doubleArray[0][1] = -2.34;
        doubleArray[0][2] = 3.45;
        doubleArray[0][3] = -4.56;
        doubleArray[0][4] = 5.67;
        doubleArray[1][0] = -6.78;
        doubleArray[1][1] = 7.89;
        doubleArray[1][2] = -8.9;
        doubleArray[1][3] = 9.01;
        doubleArray[1][4] = -10.11;
        doubleArray[2][0] = 11.12;
        doubleArray[2][1] = -12.13;
        doubleArray[2][2] = 13.14;
        doubleArray[2][3] = -14.15;
        doubleArray[2][4] = 15.16;
        doubleArray[3][0] = -16.17;
        doubleArray[3][1] = 17.18;
        doubleArray[3][2] = -18.19;
        doubleArray[3][3] = 19.2;
        doubleArray[3][4] = -20.21;
        String[] stringArray = new String[5];
        // Improved test data: using more descriptive values for the array elements
        stringArray[0] = "apple";
        stringArray[1] = "banana";
        stringArray[2] = "cherry";
        stringArray[3] = "date";
        stringArray[4] = "elderberry";
        ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel(doubleArray, doubleArray, stringArray);
        CoordSystem coordSystem = new CoordSystem(objectChartDataModel);
        CoordSystemUtilities coordSystemUtilities = coordSystem.c;
        coordSystemUtilities.computeBottomMargin();
    }
}
statement is: double[][] doubleArray = new double[4][5], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [4, 5] Ct is: double[][] doubleArray = new double[4][5] isAssignment: false Array: new double[4][5] Elements: []
lengths: [4, 5] [4, 5]
Their type are: class [[D double[][]
statement is: // Improved test data: using more descriptive values for the array elements
doubleArray[0][0] = 1.23, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : doubleArray[0][0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl double Assignment:1.23 Ct is: // Improved test data: using more descriptive values for the array elements
doubleArray[0][0] = 1.23
target : doubleArray[0] class spoon.support.reflect.code.CtLiteralImpl
statement is: doubleArray[0][1] = -2.34, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : doubleArray[0][1] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl double Assignment:-2.34 Ct is: doubleArray[0][1] = -2.34
target : doubleArray[0] class spoon.support.reflect.code.CtLiteralImpl
statement is: doubleArray[0][2] = 3.45, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : doubleArray[0][2] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl double Assignment:3.45 Ct is: doubleArray[0][2] = 3.45
target : doubleArray[0] class spoon.support.reflect.code.CtLiteralImpl
statement is: doubleArray[0][3] = -4.56, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : doubleArray[0][3] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl double Assignment:-4.56 Ct is: doubleArray[0][3] = -4.56
target : doubleArray[0] class spoon.support.reflect.code.CtLiteralImpl
statement is: doubleArray[0][4] = 5.67, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : doubleArray[0][4] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl double Assignment:5.67 Ct is: doubleArray[0][4] = 5.67
target : doubleArray[0] class spoon.support.reflect.code.CtLiteralImpl
statement is: doubleArray[1][0] = -6.78, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : doubleArray[1][0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl double Assignment:-6.78 Ct is: doubleArray[1][0] = -6.78
target : doubleArray[1] class spoon.support.reflect.code.CtLiteralImpl
statement is: doubleArray[1][1] = 7.89, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : doubleArray[1][1] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl double Assignment:7.89 Ct is: doubleArray[1][1] = 7.89
target : doubleArray[1] class spoon.support.reflect.code.CtLiteralImpl
statement is: doubleArray[1][2] = -8.9, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : doubleArray[1][2] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl double Assignment:-8.9 Ct is: doubleArray[1][2] = -8.9
target : doubleArray[1] class spoon.support.reflect.code.CtLiteralImpl
statement is: doubleArray[1][3] = 9.01, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : doubleArray[1][3] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl double Assignment:9.01 Ct is: doubleArray[1][3] = 9.01
target : doubleArray[1] class spoon.support.reflect.code.CtLiteralImpl
statement is: doubleArray[1][4] = -10.11, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : doubleArray[1][4] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl double Assignment:-10.11 Ct is: doubleArray[1][4] = -10.11
target : doubleArray[1] class spoon.support.reflect.code.CtLiteralImpl
statement is: doubleArray[2][0] = 11.12, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : doubleArray[2][0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl double Assignment:11.12 Ct is: doubleArray[2][0] = 11.12
target : doubleArray[2] class spoon.support.reflect.code.CtLiteralImpl
statement is: doubleArray[2][1] = -12.13, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : doubleArray[2][1] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl double Assignment:-12.13 Ct is: doubleArray[2][1] = -12.13
target : doubleArray[2] class spoon.support.reflect.code.CtLiteralImpl
statement is: doubleArray[2][2] = 13.14, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : doubleArray[2][2] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl double Assignment:13.14 Ct is: doubleArray[2][2] = 13.14
target : doubleArray[2] class spoon.support.reflect.code.CtLiteralImpl
statement is: doubleArray[2][3] = -14.15, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : doubleArray[2][3] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl double Assignment:-14.15 Ct is: doubleArray[2][3] = -14.15
target : doubleArray[2] class spoon.support.reflect.code.CtLiteralImpl
statement is: doubleArray[2][4] = 15.16, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : doubleArray[2][4] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl double Assignment:15.16 Ct is: doubleArray[2][4] = 15.16
target : doubleArray[2] class spoon.support.reflect.code.CtLiteralImpl
statement is: doubleArray[3][0] = -16.17, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : doubleArray[3][0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl double Assignment:-16.17 Ct is: doubleArray[3][0] = -16.17
target : doubleArray[3] class spoon.support.reflect.code.CtLiteralImpl
statement is: doubleArray[3][1] = 17.18, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : doubleArray[3][1] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl double Assignment:17.18 Ct is: doubleArray[3][1] = 17.18
target : doubleArray[3] class spoon.support.reflect.code.CtLiteralImpl
statement is: doubleArray[3][2] = -18.19, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : doubleArray[3][2] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl double Assignment:-18.19 Ct is: doubleArray[3][2] = -18.19
target : doubleArray[3] class spoon.support.reflect.code.CtLiteralImpl
statement is: doubleArray[3][3] = 19.2, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : doubleArray[3][3] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl double Assignment:19.2 Ct is: doubleArray[3][3] = 19.2
target : doubleArray[3] class spoon.support.reflect.code.CtLiteralImpl
statement is: doubleArray[3][4] = -20.21, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : doubleArray[3][4] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl double Assignment:-20.21 Ct is: doubleArray[3][4] = -20.21
target : doubleArray[3] class spoon.support.reflect.code.CtLiteralImpl
statement is: String[] stringArray = new String[5], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [5] Ct is: double[][] doubleArray = new double[4][5] isAssignment: false Array: new String[5] Elements: []
lengths: [4, 5] [5]
Dimension: [5] Ct is: String[] stringArray = new String[5] isAssignment: false Array: new String[5] Elements: []
lengths: [5] [5]
Their type are: class [Ljava.lang.String; String[]
statement is: // Improved test data: using more descriptive values for the array elements
stringArray[0] = "apple", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"apple" Ct is: // Improved test data: using more descriptive values for the array elements
stringArray[0] = "apple"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[1] = "banana", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[1] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"banana" Ct is: stringArray[1] = "banana"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[2] = "cherry", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[2] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"cherry" Ct is: stringArray[2] = "cherry"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[3] = "date", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[3] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"date" Ct is: stringArray[3] = "date"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[4] = "elderberry", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[4] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"elderberry" Ct is: stringArray[4] = "elderberry"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel(doubleArray, doubleArray, stringArray), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: CoordSystem coordSystem = new CoordSystem(objectChartDataModel), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: CoordSystemUtilities coordSystemUtilities = coordSystem.c, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: coordSystem.c is coordSystem
CtField is: protected de.progra.charting.CoordSystemUtilities de.progra.charting.CoordSystem.c CoordSystemUtilities c
statement is: coordSystemUtilities.computeBottomMargin(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: coordSystemUtilities.computeBottomMargin() target is: coordSystemUtilities method is: computeBottomMargin()
TestCase is: double[][] doubleArray = new double[4][5];
String[] stringArray = new String[5];
ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel(doubleArray, doubleArray, stringArray);
CoordSystem coordSystem = new CoordSystem(objectChartDataModel);

statement is: org.evosuite.testcase.statements.ArrayStatement@4dbc88 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [[D
statement code is: double[][] doubleArray = new double[6][5]
statement is: org.evosuite.testcase.statements.ArrayStatement@dd63afc6 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [D
statement code is: double[] doubleArray = new double[8]
statement is: org.evosuite.testcase.statements.AssignmentStatement@4d75c623 type is: class org.evosuite.testcase.statements.AssignmentStatement return type double
statement code is: doubleArray[2] = (-21.953295162629235)
statement is: org.evosuite.testcase.statements.AssignmentStatement@e823c476 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class [D
statement code is: doubleArray[3] = doubleArray
statement is: org.evosuite.testcase.statements.ArrayStatement@7d4dc887 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [Ljava.lang.String;
statement code is: String[] stringArray = new String[8]
statement is: de.progra.charting.model.ObjectChartDataModel([[D[Ljava/lang/Object;[Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.progra.charting.model.ObjectChartDataModel
statement code is: ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel(arg0, arg2, arg2)
statement is: de.progra.charting.model.StackedChartDataModelConstraints(Lde/progra/charting/model/AbstractChartDataModel;IZ)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.progra.charting.model.StackedChartDataModelConstraints
statement code is: StackedChartDataModelConstraints stackedChartDataModelConstraints = new StackedChartDataModelConstraints(arg0, 1282, true)
statement is: javax.swing.JSpinner()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class javax.swing.JSpinner
statement code is: JSpinner jSpinner = new JSpinner()
statement is: javax.swing.JSpinner$NumberEditor(Ljavax/swing/JSpinner;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class javax.swing.JSpinner$NumberEditor
statement code is: JSpinner.NumberEditor jSpinner_NumberEditor = new JSpinner.NumberEditor(arg0)
statement is: getFormat()Ljava/text/DecimalFormat; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.text.DecimalFormat
statement code is: DecimalFormat format = jSpinner_NumberEditor.getFormat()
statement is: de.progra.charting.CoordSystem(Lde/progra/charting/model/ChartDataModel;Ljava/text/DecimalFormat;ZZZ)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.progra.charting.CoordSystem
statement code is: CoordSystem coordSystem = new CoordSystem(arg0, arg1, true, true, true)
statement is: de.progra.charting.CoordSystemUtilities(Lde/progra/charting/CoordSystem;Lde/progra/charting/model/ChartDataModelConstraints;Lde/progra/charting/model/ChartDataModelConstraints;Lde/progra/charting/model/ChartDataModel;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.progra.charting.CoordSystemUtilities
statement code is: CoordSystemUtilities coordSystemUtilities = new CoordSystemUtilities(arg0, arg2, arg2, arg3)
statement is: computeBottomMargin()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int computeBottomMargin = coordSystemUtilities.computeBottomMargin()
test data is: double[][] doubleArray = new double[6][5];
double[] doubleArray = new double[8];
doubleArray[2] = (-21.953295162629235);
doubleArray[3] = doubleArray;
String[] stringArray = new String[8];
ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel(doubleArray, stringArray, stringArray);
StackedChartDataModelConstraints stackedChartDataModelConstraints = new StackedChartDataModelConstraints(objectChartDataModel, 1282, true);
JSpinner jSpinner = new JSpinner();
JSpinner.NumberEditor jSpinner_NumberEditor = new JSpinner.NumberEditor(jSpinner);
DecimalFormat format = jSpinner_NumberEditor.getFormat();
CoordSystem coordSystem = new CoordSystem(objectChartDataModel, format, true, true, true);
CoordSystemUtilities coordSystemUtilities = new CoordSystemUtilities(coordSystem, stackedChartDataModelConstraints, stackedChartDataModelConstraints, objectChartDataModel);
coordSystemUtilities.computeBottomMargin();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        double[][] doubleArray = new double[6][5];
        doubleArray[0] = -21.953295162629235;
        doubleArray[1] = -21.953295162629235;
        doubleArray[2] = -21.953295162629235;
        doubleArray[3] = -21.953295162629235;
        doubleArray[4] = -21.953295162629235;
        doubleArray[5] = -21.953295162629235;
        String[] stringArray = new String[8];
        stringArray[0] = "Monday";
        stringArray[1] = "Tuesday";
        stringArray[2] = "Wednesday";
        stringArray[3] = "Thursday";
        stringArray[4] = "Friday";
        stringArray[5] = "Saturday";
        stringArray[6] = "Sunday";
        ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel(doubleArray, stringArray, stringArray);
        StackedChartDataModelConstraints stackedChartDataModelConstraints = new StackedChartDataModelConstraints(objectChartDataModel, 1282, true);
        JSpinner jSpinner = new JSpinner();
        JSpinner.NumberEditor jSpinner_NumberEditor = new JSpinner.NumberEditor(jSpinner);
        DecimalFormat format = jSpinner_NumberEditor.getFormat();
        CoordSystem coordSystem = new CoordSystem(objectChartDataModel, format, true, true, true);
        CoordSystemUtilities coordSystemUtilities = new CoordSystemUtilities(coordSystem, stackedChartDataModelConstraints, stackedChartDataModelConstraints, objectChartDataModel);
        coordSystemUtilities.computeBottomMargin();
    }
}
statement is: double[][] doubleArray = new double[6][5], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [6, 5] Ct is: double[][] doubleArray = new double[6][5] isAssignment: false Array: new double[6][5] Elements: []
lengths: [6, 5] [6, 5]
Their type are: class [[D double[][]
statement is: doubleArray[0] = -21.953295162629235, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : doubleArray[0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl double[] Assignment:-21.953295162629235 Ct is: doubleArray[0] = -21.953295162629235
target : doubleArray class spoon.support.reflect.code.CtLiteralImpl
TestCase Could not be added: org.evosuite.testcase.statements.AssignmentStatement@1fa7cec7
statement is: doubleArray[1] = -21.953295162629235, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : doubleArray[1] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl double[] Assignment:-21.953295162629235 Ct is: doubleArray[1] = -21.953295162629235
target : doubleArray class spoon.support.reflect.code.CtLiteralImpl
TestCase Could not be added: org.evosuite.testcase.statements.AssignmentStatement@1fa7cec7
statement is: doubleArray[2] = -21.953295162629235, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : doubleArray[2] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl double[] Assignment:-21.953295162629235 Ct is: doubleArray[2] = -21.953295162629235
target : doubleArray class spoon.support.reflect.code.CtLiteralImpl
TestCase Could not be added: org.evosuite.testcase.statements.AssignmentStatement@1fa7cec7
statement is: doubleArray[3] = -21.953295162629235, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : doubleArray[3] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl double[] Assignment:-21.953295162629235 Ct is: doubleArray[3] = -21.953295162629235
target : doubleArray class spoon.support.reflect.code.CtLiteralImpl
TestCase Could not be added: org.evosuite.testcase.statements.AssignmentStatement@1fa7cec7
statement is: doubleArray[4] = -21.953295162629235, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : doubleArray[4] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl double[] Assignment:-21.953295162629235 Ct is: doubleArray[4] = -21.953295162629235
target : doubleArray class spoon.support.reflect.code.CtLiteralImpl
TestCase Could not be added: org.evosuite.testcase.statements.AssignmentStatement@1fa7cec7
statement is: doubleArray[5] = -21.953295162629235, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : doubleArray[5] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl double[] Assignment:-21.953295162629235 Ct is: doubleArray[5] = -21.953295162629235
target : doubleArray class spoon.support.reflect.code.CtLiteralImpl
TestCase Could not be added: org.evosuite.testcase.statements.AssignmentStatement@1fa7cec7
statement is: String[] stringArray = new String[8], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [8] Ct is: double[][] doubleArray = new double[6][5] isAssignment: false Array: new String[8] Elements: []
lengths: [6, 5] [8]
Dimension: [8] Ct is: double[] doubleArray = new double[8] isAssignment: false Array: new String[8] Elements: []
lengths: [8] [8]
Their type are: class [D String[]
Dimension: [8] Ct is: String[] stringArray = new String[8] isAssignment: false Array: new String[8] Elements: []
lengths: [8] [8]
Their type are: class [Ljava.lang.String; String[]
statement is: stringArray[0] = "Monday", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"Monday" Ct is: stringArray[0] = "Monday"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[1] = "Tuesday", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[1] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"Tuesday" Ct is: stringArray[1] = "Tuesday"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[2] = "Wednesday", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[2] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"Wednesday" Ct is: stringArray[2] = "Wednesday"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[3] = "Thursday", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[3] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"Thursday" Ct is: stringArray[3] = "Thursday"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[4] = "Friday", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[4] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"Friday" Ct is: stringArray[4] = "Friday"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[5] = "Saturday", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[5] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"Saturday" Ct is: stringArray[5] = "Saturday"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[6] = "Sunday", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[6] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"Sunday" Ct is: stringArray[6] = "Sunday"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel(doubleArray, stringArray, stringArray), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: StackedChartDataModelConstraints stackedChartDataModelConstraints = new StackedChartDataModelConstraints(objectChartDataModel, 1282, true), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JSpinner jSpinner = new JSpinner(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JSpinner.NumberEditor jSpinner_NumberEditor = new JSpinner.NumberEditor(jSpinner), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: DecimalFormat format = jSpinner_NumberEditor.getFormat(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: jSpinner_NumberEditor.getFormat() target is: jSpinner_NumberEditor method is: getFormat()
statement is: CoordSystem coordSystem = new CoordSystem(objectChartDataModel, format, true, true, true), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: CoordSystemUtilities coordSystemUtilities = new CoordSystemUtilities(coordSystem, stackedChartDataModelConstraints, stackedChartDataModelConstraints, objectChartDataModel), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: coordSystemUtilities.computeBottomMargin(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: coordSystemUtilities.computeBottomMargin() target is: coordSystemUtilities method is: computeBottomMargin()
source statement: de.progra.charting.CoordSystemUtilities(Lde/progra/charting/CoordSystem;Lde/progra/charting/model/ChartDataModelConstraints;Lde/progra/charting/model/ChartDataModelConstraints;Lde/progra/charting/model/ChartDataModel;)V callee: VariableReference: Statement 11, type de.progra.charting.CoordSystemUtilitiesindex is: 11
Matched Method is: computeBottomMargin()I
TestCase is: double[][] doubleArray = new double[6][5];
String[] stringArray = new String[8];
ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel(doubleArray, stringArray, stringArray);
int _int = 1282;
boolean _boolean = true;
StackedChartDataModelConstraints stackedChartDataModelConstraints = new StackedChartDataModelConstraints(objectChartDataModel, _int, _boolean);
JSpinner jSpinner = new JSpinner();
boolean _boolean = true;
boolean _boolean = true;
boolean _boolean = true;
CoordSystem coordSystem = new CoordSystem(objectChartDataModel, (DecimalFormat) _boolean, _boolean, _boolean, true);
CoordSystemUtilities coordSystemUtilities = new CoordSystemUtilities(coordSystem, stackedChartDataModelConstraints, stackedChartDataModelConstraints, objectChartDataModel);
coordSystemUtilities.computeBottomMargin();

statement is: org.evosuite.testcase.statements.ArrayStatement@d363e7d8 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [[D
statement code is: double[][] doubleArray = new double[1][5]
statement is: org.evosuite.testcase.statements.ArrayStatement@ce07ad1a type is: class org.evosuite.testcase.statements.ArrayStatement return type class [D
statement code is: double[] doubleArray = new double[1]
statement is: org.evosuite.testcase.statements.AssignmentStatement@900dc15e type is: class org.evosuite.testcase.statements.AssignmentStatement return type double
statement code is: doubleArray[0] = (double) 20
statement is: org.evosuite.testcase.statements.AssignmentStatement@92132eaa type is: class org.evosuite.testcase.statements.AssignmentStatement return type class [D
statement code is: doubleArray[0] = doubleArray
statement is: org.evosuite.testcase.statements.ArrayStatement@cf90630d type is: class org.evosuite.testcase.statements.ArrayStatement return type class [Ljava.lang.String;
statement code is: String[] stringArray = new String[7]
statement is: de.progra.charting.model.ObjectChartDataModel([[D[Ljava/lang/Object;[Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.progra.charting.model.ObjectChartDataModel
statement code is: ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel(arg1, arg1, arg2)
statement is: de.progra.charting.CoordSystem(Lde/progra/charting/model/ChartDataModel;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.progra.charting.CoordSystem
statement code is: CoordSystem coordSystem = new CoordSystem(arg0)
statement is: org.evosuite.testcase.statements.FieldStatement@3878ebf6 type is: class org.evosuite.testcase.statements.FieldStatement return type class de.progra.charting.CoordSystemUtilities
statement code is: CoordSystemUtilities coordSystemUtilities = coordSystem.c
statement is: computeXAxisLabelHeight()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int computeXAxisLabelHeight = coordSystemUtilities.computeXAxisLabelHeight()
test data is: double[][] doubleArray = new double[1][5];
double[] doubleArray = new double[1];
doubleArray[0] = (double) 20;
doubleArray[0] = doubleArray;
String[] stringArray = new String[7];
ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel(doubleArray, doubleArray, stringArray);
CoordSystem coordSystem = new CoordSystem(objectChartDataModel);
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
coordSystemUtilities.computeXAxisLabelHeight();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        double[][] doubleArray = new double[1][5];
        double[] doubleArray = new double[]{ 20.5, 30.6, 40.7, 50.8, 60.9 };// more descriptive and representative of the situation being tested

        String[] stringArray = new String[]{ "apple", "banana", "orange", "mango", "pineapple" };// more descriptive and representative of the situation being tested

        ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel(doubleArray, doubleArray, stringArray);
        CoordSystem coordSystem = new CoordSystem(objectChartDataModel);
        CoordSystemUtilities coordSystemUtilities = coordSystem.c;
        coordSystemUtilities.computeXAxisLabelHeight();
    }
}
statement is: double[][] doubleArray = new double[1][5], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [1, 5] Ct is: double[][] doubleArray = new double[1][5] isAssignment: false Array: new double[1][5] Elements: []
lengths: [1, 5] [1, 5]
Their type are: class [[D double[][]
statement is: double[] doubleArray = new double[]{ 20.5, 30.6, 40.7, 50.8, 60.9 }// more descriptive and representative of the situation being tested
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [] Ct is: double[][] doubleArray = new double[1][5] isAssignment: false Array: new double[]{ 20.5, 30.6, 40.7, 50.8, 60.9 } Elements: [20.5, 30.6, 40.7, 50.8, 60.9]
lengths: [1, 5] []
Dimension: [] Ct is: double[] doubleArray = new double[1] isAssignment: false Array: new double[]{ 20.5, 30.6, 40.7, 50.8, 60.9 } Elements: [20.5, 30.6, 40.7, 50.8, 60.9]
lengths: [1] []
Dimension: [] Ct is: String[] stringArray = new String[7] isAssignment: false Array: new double[]{ 20.5, 30.6, 40.7, 50.8, 60.9 } Elements: [20.5, 30.6, 40.7, 50.8, 60.9]
lengths: [7] []
statement is: String[] stringArray = new String[]{ "apple", "banana", "orange", "mango", "pineapple" }// more descriptive and representative of the situation being tested
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [] Ct is: double[][] doubleArray = new double[1][5] isAssignment: false Array: new String[]{ "apple", "banana", "orange", "mango", "pineapple" } Elements: ["apple", "banana", "orange", "mango", "pineapple"]
lengths: [1, 5] []
Dimension: [] Ct is: double[] doubleArray = new double[1] isAssignment: false Array: new String[]{ "apple", "banana", "orange", "mango", "pineapple" } Elements: ["apple", "banana", "orange", "mango", "pineapple"]
lengths: [1] []
Dimension: [] Ct is: String[] stringArray = new String[7] isAssignment: false Array: new String[]{ "apple", "banana", "orange", "mango", "pineapple" } Elements: ["apple", "banana", "orange", "mango", "pineapple"]
lengths: [7] []
statement is: ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel(doubleArray, doubleArray, stringArray), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: de.progra.charting.model.ObjectChartDataModel([[D[Ljava/lang/Object;[Ljava/lang/String;)V
statement is: CoordSystem coordSystem = new CoordSystem(objectChartDataModel), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: de.progra.charting.CoordSystem(Lde/progra/charting/model/ChartDataModel;)V
statement is: CoordSystemUtilities coordSystemUtilities = coordSystem.c, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: coordSystem.c is coordSystem
CtField is: protected de.progra.charting.CoordSystemUtilities de.progra.charting.CoordSystem.c CoordSystemUtilities c
statement is: coordSystemUtilities.computeXAxisLabelHeight(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: coordSystemUtilities.computeXAxisLabelHeight() target is: coordSystemUtilities method is: computeXAxisLabelHeight()
TestCase is: double[][] doubleArray = new double[1][5];

statement is: org.evosuite.testcase.statements.ArrayStatement@43aa064d type is: class org.evosuite.testcase.statements.ArrayStatement return type class [[D
statement code is: double[][] doubleArray = new double[1][7]
statement is: org.evosuite.testcase.statements.ArrayStatement@91a728e type is: class org.evosuite.testcase.statements.ArrayStatement return type class [D
statement code is: double[] doubleArray = new double[4]
statement is: org.evosuite.testcase.statements.AssignmentStatement@d2fd8e02 type is: class org.evosuite.testcase.statements.AssignmentStatement return type double
statement code is: doubleArray[0] = (-1.9294442819002526)
statement is: org.evosuite.testcase.statements.AssignmentStatement@e16b4646 type is: class org.evosuite.testcase.statements.AssignmentStatement return type double
statement code is: doubleArray[1] = (-1.5294442819002523)
statement is: org.evosuite.testcase.statements.AssignmentStatement@78a56f3e type is: class org.evosuite.testcase.statements.AssignmentStatement return type double
statement code is: doubleArray[2] = (-1.9294442819002526)
statement is: org.evosuite.testcase.statements.AssignmentStatement@147c2ae2 type is: class org.evosuite.testcase.statements.AssignmentStatement return type double
statement code is: doubleArray[3] = (-1.9294442819002526)
statement is: org.evosuite.testcase.statements.AssignmentStatement@39bb6500 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class [D
statement code is: doubleArray[0] = doubleArray
statement is: org.evosuite.testcase.statements.ArrayStatement@7013b981 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [Ljava.lang.String;
statement code is: String[] stringArray = new String[7]
statement is: de.progra.charting.model.EditableChartDataModel([[D[D[Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.progra.charting.model.EditableChartDataModel
statement code is: EditableChartDataModel editableChartDataModel = new EditableChartDataModel(arg0, arg1, arg2)
statement is: de.progra.charting.CoordSystem(Lde/progra/charting/model/ChartDataModel;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.progra.charting.CoordSystem
statement code is: CoordSystem coordSystem = new CoordSystem(arg0)
statement is: org.evosuite.testcase.statements.FieldStatement@9f7b4b9 type is: class org.evosuite.testcase.statements.FieldStatement return type class de.progra.charting.CoordSystemUtilities
statement code is: CoordSystemUtilities coordSystemUtilities = coordSystem.c
statement is: computeXAxisLabelHeight()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int computeXAxisLabelHeight = coordSystemUtilities.computeXAxisLabelHeight()
test data is: double[][] doubleArray = new double[1][7];
double[] doubleArray = new double[4];
doubleArray[0] = (-1.9294442819002526);
doubleArray[1] = (-1.5294442819002523);
doubleArray[2] = (-1.9294442819002526);
doubleArray[3] = (-1.9294442819002526);
doubleArray[0] = doubleArray;
String[] stringArray = new String[7];
EditableChartDataModel editableChartDataModel = new EditableChartDataModel(doubleArray, doubleArray, stringArray);
CoordSystem coordSystem = new CoordSystem(editableChartDataModel);
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
coordSystemUtilities.computeXAxisLabelHeight();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        double[][] doubleArray = new double[1][7];
        double[] doubleArray = new double[4];
        doubleArray[0] = -2.93;
        doubleArray[1] = -1.52;
        doubleArray[2] = -2.93;
        doubleArray[3] = -2.93;
        doubleArray[0] = doubleArray;
        String[] stringArray = new String[7];
        stringArray[0] = "Apple";
        stringArray[1] = "Orange";
        stringArray[2] = "Banana";
        stringArray[3] = "Grape";
        stringArray[4] = "Mango";
        stringArray[5] = "Pear";
        stringArray[6] = "Lemon";
        EditableChartDataModel editableChartDataModel = new EditableChartDataModel(doubleArray, doubleArray, stringArray);
        CoordSystem coordSystem = new CoordSystem(editableChartDataModel);
        CoordSystemUtilities coordSystemUtilities = coordSystem.c;
        coordSystemUtilities.computeXAxisLabelHeight();
    }
}
statement is: double[][] doubleArray = new double[1][7], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [1, 7] Ct is: double[][] doubleArray = new double[1][7] isAssignment: false Array: new double[1][7] Elements: []
lengths: [1, 7] [1, 7]
Their type are: class [[D double[][]
statement is: double[] doubleArray = new double[4], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [4] Ct is: double[][] doubleArray = new double[1][7] isAssignment: false Array: new double[4] Elements: []
lengths: [1, 7] [4]
Dimension: [4] Ct is: double[] doubleArray = new double[4] isAssignment: false Array: new double[4] Elements: []
lengths: [4] [4]
Their type are: class [D double[]
statement is: doubleArray[0] = -2.93, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : doubleArray[0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl double Assignment:-2.93 Ct is: doubleArray[0] = -2.93
target : doubleArray class spoon.support.reflect.code.CtLiteralImpl
statement is: doubleArray[1] = -1.52, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : doubleArray[1] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl double Assignment:-1.52 Ct is: doubleArray[1] = -1.52
target : doubleArray class spoon.support.reflect.code.CtLiteralImpl
statement is: doubleArray[2] = -2.93, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : doubleArray[2] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl double Assignment:-2.93 Ct is: doubleArray[2] = -2.93
target : doubleArray class spoon.support.reflect.code.CtLiteralImpl
statement is: doubleArray[3] = -2.93, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : doubleArray[3] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl double Assignment:-2.93 Ct is: doubleArray[3] = -2.93
target : doubleArray class spoon.support.reflect.code.CtLiteralImpl
statement is: doubleArray[0] = doubleArray, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : doubleArray[0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl double Assignment:doubleArray Ct is: doubleArray[0] = doubleArray
target : doubleArray class spoon.support.reflect.code.CtLiteralImpl
statement is: String[] stringArray = new String[7], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [7] Ct is: double[][] doubleArray = new double[1][7] isAssignment: false Array: new String[7] Elements: []
lengths: [1, 7] [7]
Dimension: [7] Ct is: double[] doubleArray = new double[4] isAssignment: false Array: new String[7] Elements: []
lengths: [4] [7]
Their type are: class [D String[]
Dimension: [7] Ct is: String[] stringArray = new String[7] isAssignment: false Array: new String[7] Elements: []
lengths: [7] [7]
Their type are: class [Ljava.lang.String; String[]
statement is: stringArray[0] = "Apple", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"Apple" Ct is: stringArray[0] = "Apple"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[1] = "Orange", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[1] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"Orange" Ct is: stringArray[1] = "Orange"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[2] = "Banana", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[2] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"Banana" Ct is: stringArray[2] = "Banana"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[3] = "Grape", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[3] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"Grape" Ct is: stringArray[3] = "Grape"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[4] = "Mango", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[4] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"Mango" Ct is: stringArray[4] = "Mango"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[5] = "Pear", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[5] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"Pear" Ct is: stringArray[5] = "Pear"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[6] = "Lemon", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[6] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"Lemon" Ct is: stringArray[6] = "Lemon"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: EditableChartDataModel editableChartDataModel = new EditableChartDataModel(doubleArray, doubleArray, stringArray), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: CoordSystem coordSystem = new CoordSystem(editableChartDataModel), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: CoordSystemUtilities coordSystemUtilities = coordSystem.c, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: coordSystem.c is coordSystem
CtField is: protected de.progra.charting.CoordSystemUtilities de.progra.charting.CoordSystem.c CoordSystemUtilities c
statement is: coordSystemUtilities.computeXAxisLabelHeight(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: coordSystemUtilities.computeXAxisLabelHeight() target is: coordSystemUtilities method is: computeXAxisLabelHeight()
TestCase is: double[][] doubleArray = new double[1][7];
double[] doubleArray = new double[4];
doubleArray[0] = (-1.9294442819002526);
doubleArray[1] = (-1.5294442819002523);
doubleArray[2] = (-1.9294442819002526);
doubleArray[3] = (-1.9294442819002526);
doubleArray[0] = (double) doubleArray;
String[] stringArray = new String[7];
EditableChartDataModel editableChartDataModel = new EditableChartDataModel((double[][]) doubleArray, doubleArray, stringArray);
CoordSystem coordSystem = new CoordSystem(editableChartDataModel);

statement is: org.evosuite.testcase.statements.ArrayStatement@6b89513a type is: class org.evosuite.testcase.statements.ArrayStatement return type class [[D
statement code is: double[][] doubleArray = new double[2][7]
statement is: org.evosuite.testcase.statements.ArrayStatement@c29b09cf type is: class org.evosuite.testcase.statements.ArrayStatement return type class [D
statement code is: double[] doubleArray = new double[4]
statement is: org.evosuite.testcase.statements.AssignmentStatement@11b0ee81 type is: class org.evosuite.testcase.statements.AssignmentStatement return type double
statement code is: doubleArray[0] = 2.2339250900267746
statement is: org.evosuite.testcase.statements.AssignmentStatement@c05ad11f type is: class org.evosuite.testcase.statements.AssignmentStatement return type double
statement code is: doubleArray[1] = 2.2339250900267746
statement is: org.evosuite.testcase.statements.AssignmentStatement@4ab65f49 type is: class org.evosuite.testcase.statements.AssignmentStatement return type double
statement code is: doubleArray[2] = 2.2339250900267746
statement is: org.evosuite.testcase.statements.AssignmentStatement@530e8284 type is: class org.evosuite.testcase.statements.AssignmentStatement return type double
statement code is: doubleArray[3] = 2.2339250900267746
statement is: org.evosuite.testcase.statements.AssignmentStatement@7cad1e9c type is: class org.evosuite.testcase.statements.AssignmentStatement return type class [D
statement code is: doubleArray[0] = doubleArray
statement is: org.evosuite.testcase.statements.ArrayStatement@6aad56f5 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [Ljava.lang.String;
statement code is: String[] stringArray = new String[7]
statement is: de.progra.charting.model.EditableChartDataModel([[D[D[Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.progra.charting.model.EditableChartDataModel
statement code is: EditableChartDataModel editableChartDataModel = new EditableChartDataModel(arg0, arg1, arg2)
statement is: de.progra.charting.CoordSystem(Lde/progra/charting/model/ChartDataModel;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.progra.charting.CoordSystem
statement code is: CoordSystem coordSystem = new CoordSystem(arg0)
statement is: org.evosuite.testcase.statements.FieldStatement@283a5e29 type is: class org.evosuite.testcase.statements.FieldStatement return type class de.progra.charting.CoordSystemUtilities
statement code is: CoordSystemUtilities coordSystemUtilities = coordSystem.c
statement is: computeYAxisLabelWidth()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int computeYAxisLabelWidth = coordSystemUtilities.computeYAxisLabelWidth()
test data is: double[][] doubleArray = new double[2][7];
double[] doubleArray = new double[4];
doubleArray[0] = 2.2339250900267746;
doubleArray[1] = 2.2339250900267746;
doubleArray[2] = 2.2339250900267746;
doubleArray[3] = 2.2339250900267746;
doubleArray[0] = doubleArray;
String[] stringArray = new String[7];
EditableChartDataModel editableChartDataModel = new EditableChartDataModel(doubleArray, doubleArray, stringArray);
CoordSystem coordSystem = new CoordSystem(editableChartDataModel);
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
coordSystemUtilities.computeYAxisLabelWidth();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        double[][] doubleArray = new double[2][7];
        for (int i = 0; i < doubleArray[0].length; i++) {
            doubleArray[0][i] = Math.random() * 100;
        }
        for (int i = 0; i < doubleArray[1].length; i++) {
            doubleArray[1][i] = Math.random() * 100;
        }
        String[] stringArray = new String[7];
        for (int i = 0; i < stringArray.length; i++) {
            stringArray[i] = "Label" + (i + 1);
        }
        EditableChartDataModel editableChartDataModel = new EditableChartDataModel(doubleArray, doubleArray, stringArray);
        CoordSystem coordSystem = new CoordSystem(editableChartDataModel);
        CoordSystemUtilities coordSystemUtilities = coordSystem.c;
        coordSystemUtilities.computeYAxisLabelWidth();
    }
}
statement is: double[][] doubleArray = new double[2][7], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [2, 7] Ct is: double[][] doubleArray = new double[2][7] isAssignment: false Array: new double[2][7] Elements: []
lengths: [2, 7] [2, 7]
Their type are: class [[D double[][]
statement is: for (int i = 0; i < doubleArray[0].length; i++) {
    doubleArray[0][i] = Math.random() * 100;
}, class spoon.support.reflect.code.CtForImpl
statement is: for (int i = 0; i < doubleArray[1].length; i++) {
    doubleArray[1][i] = Math.random() * 100;
}, class spoon.support.reflect.code.CtForImpl
statement is: String[] stringArray = new String[7], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [7] Ct is: double[][] doubleArray = new double[2][7] isAssignment: false Array: new String[7] Elements: []
lengths: [2, 7] [7]
Dimension: [7] Ct is: double[] doubleArray = new double[4] isAssignment: false Array: new String[7] Elements: []
lengths: [4] [7]
Their type are: class [D String[]
Dimension: [7] Ct is: String[] stringArray = new String[7] isAssignment: false Array: new String[7] Elements: []
lengths: [7] [7]
Their type are: class [Ljava.lang.String; String[]
statement is: for (int i = 0; i < stringArray.length; i++) {
    stringArray[i] = "Label" + (i + 1);
}, class spoon.support.reflect.code.CtForImpl
statement is: EditableChartDataModel editableChartDataModel = new EditableChartDataModel(doubleArray, doubleArray, stringArray), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: CoordSystem coordSystem = new CoordSystem(editableChartDataModel), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: CoordSystemUtilities coordSystemUtilities = coordSystem.c, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: coordSystem.c is coordSystem
CtField is: protected de.progra.charting.CoordSystemUtilities de.progra.charting.CoordSystem.c CoordSystemUtilities c
statement is: coordSystemUtilities.computeYAxisLabelWidth(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: coordSystemUtilities.computeYAxisLabelWidth() target is: coordSystemUtilities method is: computeYAxisLabelWidth()
TestCase is: double[][] doubleArray = new double[2][7];
String[] stringArray = new String[7];
EditableChartDataModel editableChartDataModel = new EditableChartDataModel(doubleArray, (double[]) doubleArray, stringArray);
CoordSystem coordSystem = new CoordSystem(editableChartDataModel);

statement is: org.evosuite.testcase.statements.ArrayStatement@4097d378 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [[D
statement code is: double[][] doubleArray = new double[10][7]
statement is: org.evosuite.testcase.statements.ArrayStatement@9e39ea32 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [D
statement code is: double[] doubleArray = new double[4]
statement is: org.evosuite.testcase.statements.AssignmentStatement@b952176a type is: class org.evosuite.testcase.statements.AssignmentStatement return type double
statement code is: doubleArray[0] = (-0.834107530926774)
statement is: org.evosuite.testcase.statements.AssignmentStatement@72791023 type is: class org.evosuite.testcase.statements.AssignmentStatement return type double
statement code is: doubleArray[1] = (-0.834107530926774)
statement is: org.evosuite.testcase.statements.AssignmentStatement@aacecec2 type is: class org.evosuite.testcase.statements.AssignmentStatement return type double
statement code is: doubleArray[2] = (-0.834107530926774)
statement is: org.evosuite.testcase.statements.AssignmentStatement@cc1da17e type is: class org.evosuite.testcase.statements.AssignmentStatement return type double
statement code is: doubleArray[3] = (-0.834107530926774)
statement is: org.evosuite.testcase.statements.AssignmentStatement@46300b6d type is: class org.evosuite.testcase.statements.AssignmentStatement return type class [D
statement code is: doubleArray[0] = doubleArray
statement is: org.evosuite.testcase.statements.ArrayStatement@3a9c2f21 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [Ljava.lang.String;
statement code is: String[] stringArray = new String[10]
statement is: de.progra.charting.model.EditableChartDataModel([[D[D[Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.progra.charting.model.EditableChartDataModel
statement code is: EditableChartDataModel editableChartDataModel = new EditableChartDataModel(arg0, arg1, arg2)
statement is: de.progra.charting.CoordSystem(Lde/progra/charting/model/ChartDataModel;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.progra.charting.CoordSystem
statement code is: CoordSystem coordSystem = new CoordSystem(arg0)
statement is: org.evosuite.testcase.statements.FieldStatement@3630521c type is: class org.evosuite.testcase.statements.FieldStatement return type class de.progra.charting.CoordSystemUtilities
statement code is: CoordSystemUtilities coordSystemUtilities = coordSystem.c
statement is: computeYAxisLabelWidth()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int computeYAxisLabelWidth = coordSystemUtilities.computeYAxisLabelWidth()
test data is: double[][] doubleArray = new double[10][7];
double[] doubleArray = new double[4];
doubleArray[0] = (-0.834107530926774);
doubleArray[1] = (-0.834107530926774);
doubleArray[2] = (-0.834107530926774);
doubleArray[3] = (-0.834107530926774);
doubleArray[0] = doubleArray;
String[] stringArray = new String[10];
EditableChartDataModel editableChartDataModel = new EditableChartDataModel(doubleArray, doubleArray, stringArray);
CoordSystem coordSystem = new CoordSystem(editableChartDataModel);
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
coordSystemUtilities.computeYAxisLabelWidth();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        double[][] doubleArray = new double[10][7];
        for (int i = 0; i < 10; i++) {
            for (int j = 0; j < 7; j++) {
                doubleArray[i][j] = (Math.random() * 10) - 5;// Random values between -5 and +5

            }
        }
        String[] stringArray = new String[10];
        for (int i = 0; i < 10; i++) {
            stringArray[i] = "Item " + (i + 1);// Generate random strings

        }
        EditableChartDataModel editableChartDataModel = new EditableChartDataModel(doubleArray, doubleArray, stringArray);
        CoordSystem coordSystem = new CoordSystem(editableChartDataModel);
        CoordSystemUtilities coordSystemUtilities = coordSystem.c;
        coordSystemUtilities.computeYAxisLabelWidth();
    }
}
statement is: double[][] doubleArray = new double[10][7], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [10, 7] Ct is: double[][] doubleArray = new double[10][7] isAssignment: false Array: new double[10][7] Elements: []
lengths: [10, 7] [10, 7]
Their type are: class [[D double[][]
statement is: for (int i = 0; i < 10; i++) {
    for (int j = 0; j < 7; j++) {
        doubleArray[i][j] = (Math.random() * 10) - 5;// Random values between -5 and +5

    }
}, class spoon.support.reflect.code.CtForImpl
statement is: String[] stringArray = new String[10], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [10] Ct is: double[][] doubleArray = new double[10][7] isAssignment: false Array: new String[10] Elements: []
lengths: [10, 7] [10]
Dimension: [10] Ct is: double[] doubleArray = new double[4] isAssignment: false Array: new String[10] Elements: []
lengths: [4] [10]
Their type are: class [D String[]
Dimension: [10] Ct is: String[] stringArray = new String[10] isAssignment: false Array: new String[10] Elements: []
lengths: [10] [10]
Their type are: class [Ljava.lang.String; String[]
statement is: for (int i = 0; i < 10; i++) {
    stringArray[i] = "Item " + (i + 1);// Generate random strings

}, class spoon.support.reflect.code.CtForImpl
statement is: EditableChartDataModel editableChartDataModel = new EditableChartDataModel(doubleArray, doubleArray, stringArray), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: CoordSystem coordSystem = new CoordSystem(editableChartDataModel), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: CoordSystemUtilities coordSystemUtilities = coordSystem.c, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: coordSystem.c is coordSystem
CtField is: protected de.progra.charting.CoordSystemUtilities de.progra.charting.CoordSystem.c CoordSystemUtilities c
statement is: coordSystemUtilities.computeYAxisLabelWidth(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: coordSystemUtilities.computeYAxisLabelWidth() target is: coordSystemUtilities method is: computeYAxisLabelWidth()
TestCase is: double[][] doubleArray = new double[10][7];
String[] stringArray = new String[10];
EditableChartDataModel editableChartDataModel = new EditableChartDataModel(doubleArray, (double[]) doubleArray, stringArray);
CoordSystem coordSystem = new CoordSystem(editableChartDataModel);

statement is: org.evosuite.testcase.statements.ArrayStatement@ad9f2261 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [[D
statement code is: double[][] doubleArray = new double[10][7]
statement is: org.evosuite.testcase.statements.ArrayStatement@e4c79214 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [D
statement code is: double[] doubleArray = new double[4]
statement is: org.evosuite.testcase.statements.AssignmentStatement@453e4bbe type is: class org.evosuite.testcase.statements.AssignmentStatement return type double
statement code is: doubleArray[0] = (-0.834107530926774)
statement is: org.evosuite.testcase.statements.AssignmentStatement@ce7dc13b type is: class org.evosuite.testcase.statements.AssignmentStatement return type double
statement code is: doubleArray[1] = (-0.834107530926774)
statement is: org.evosuite.testcase.statements.AssignmentStatement@bf080f89 type is: class org.evosuite.testcase.statements.AssignmentStatement return type double
statement code is: doubleArray[2] = (-0.834107530926774)
statement is: org.evosuite.testcase.statements.AssignmentStatement@f0ee076d type is: class org.evosuite.testcase.statements.AssignmentStatement return type double
statement code is: doubleArray[3] = (-0.834107530926774)
statement is: org.evosuite.testcase.statements.AssignmentStatement@13ef2ff5 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class [D
statement code is: doubleArray[0] = doubleArray
statement is: org.evosuite.testcase.statements.ArrayStatement@656e71b0 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [Ljava.lang.String;
statement code is: String[] stringArray = new String[10]
statement is: de.progra.charting.model.EditableChartDataModel([[D[D[Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.progra.charting.model.EditableChartDataModel
statement code is: EditableChartDataModel editableChartDataModel = new EditableChartDataModel(arg0, arg1, arg2)
statement is: de.progra.charting.CoordSystem(Lde/progra/charting/model/ChartDataModel;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.progra.charting.CoordSystem
statement code is: CoordSystem coordSystem = new CoordSystem(arg0)
statement is: getXAxis()Lde/progra/charting/Axis; type is: class org.evosuite.testcase.statements.MethodStatement return type class de.progra.charting.Axis
statement code is: Axis xAxis = coordSystem.getXAxis()
statement is: org.evosuite.testcase.statements.AssignmentStatement@c6c61bf2 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class de.progra.charting.Axis
statement code is: coordSystem.yaxis2 = axis
statement is: org.evosuite.testcase.statements.FieldStatement@1da3f032 type is: class org.evosuite.testcase.statements.FieldStatement return type class de.progra.charting.CoordSystemUtilities
statement code is: CoordSystemUtilities coordSystemUtilities = coordSystem.c
statement is: computeYAxisLabelWidth()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int computeYAxisLabelWidth = coordSystemUtilities.computeYAxisLabelWidth()
test data is: double[][] doubleArray = new double[10][7];
double[] doubleArray = new double[4];
doubleArray[0] = (-0.834107530926774);
doubleArray[1] = (-0.834107530926774);
doubleArray[2] = (-0.834107530926774);
doubleArray[3] = (-0.834107530926774);
doubleArray[0] = doubleArray;
String[] stringArray = new String[10];
EditableChartDataModel editableChartDataModel = new EditableChartDataModel(doubleArray, doubleArray, stringArray);
CoordSystem coordSystem = new CoordSystem(editableChartDataModel);
Axis xAxis = coordSystem.getXAxis();
coordSystem.yaxis2 = xAxis;
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
coordSystemUtilities.computeYAxisLabelWidth();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        double[][] doubleArray = new double[10][7];
        for (int i = 0; i < doubleArray.length; i++) {
            for (int j = 0; j < doubleArray[i].length; j++) {
                doubleArray[i][j] = (Math.random() * 2) - 1;// Random values between -1 and 1

            }
        }
        double[] doubleArray = new double[4];
        for (int i = 0; i < doubleArray.length; i++) {
            doubleArray[i] = (Math.random() * 2) - 1;// Random values between -1 and 1

        }
        String[] stringArray = new String[10];
        for (int i = 0; i < stringArray.length; i++) {
            stringArray[i] = "Item " + i;// Generate random strings with the format "Item X"

        }
        EditableChartDataModel editableChartDataModel = new EditableChartDataModel(doubleArray, doubleArray, stringArray);
        CoordSystem coordSystem = new CoordSystem(editableChartDataModel);
        Axis xAxis = coordSystem.getXAxis();
        coordSystem.yaxis2 = xAxis;
        CoordSystemUtilities coordSystemUtilities = coordSystem.c;
        coordSystemUtilities.computeYAxisLabelWidth();
    }
}
statement is: double[][] doubleArray = new double[10][7], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [10, 7] Ct is: double[][] doubleArray = new double[10][7] isAssignment: false Array: new double[10][7] Elements: []
lengths: [10, 7] [10, 7]
Their type are: class [[D double[][]
statement is: for (int i = 0; i < doubleArray.length; i++) {
    for (int j = 0; j < doubleArray[i].length; j++) {
        doubleArray[i][j] = (Math.random() * 2) - 1;// Random values between -1 and 1

    }
}, class spoon.support.reflect.code.CtForImpl
statement is: double[] doubleArray = new double[4], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [4] Ct is: double[][] doubleArray = new double[10][7] isAssignment: false Array: new double[4] Elements: []
lengths: [10, 7] [4]
Dimension: [4] Ct is: double[] doubleArray = new double[4] isAssignment: false Array: new double[4] Elements: []
lengths: [4] [4]
Their type are: class [D double[]
statement is: for (int i = 0; i < doubleArray.length; i++) {
    doubleArray[i] = (Math.random() * 2) - 1;// Random values between -1 and 1

}, class spoon.support.reflect.code.CtForImpl
statement is: String[] stringArray = new String[10], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [10] Ct is: double[][] doubleArray = new double[10][7] isAssignment: false Array: new String[10] Elements: []
lengths: [10, 7] [10]
Dimension: [10] Ct is: double[] doubleArray = new double[4] isAssignment: false Array: new String[10] Elements: []
lengths: [4] [10]
Their type are: class [D String[]
Dimension: [10] Ct is: String[] stringArray = new String[10] isAssignment: false Array: new String[10] Elements: []
lengths: [10] [10]
Their type are: class [Ljava.lang.String; String[]
statement is: for (int i = 0; i < stringArray.length; i++) {
    stringArray[i] = "Item " + i;// Generate random strings with the format "Item X"

}, class spoon.support.reflect.code.CtForImpl
statement is: EditableChartDataModel editableChartDataModel = new EditableChartDataModel(doubleArray, doubleArray, stringArray), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: CoordSystem coordSystem = new CoordSystem(editableChartDataModel), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Axis xAxis = coordSystem.getXAxis(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: coordSystem.getXAxis() target is: coordSystem method is: getXAxis()
source statement: de.progra.charting.CoordSystem(Lde/progra/charting/model/ChartDataModel;)V callee: VariableReference: Statement 9, type de.progra.charting.CoordSystemindex is: 4
Matched Method is: getXAxis()Lde/progra/charting/Axis;
TestCase Could not be added: getXAxis()Lde/progra/charting/Axis;
statement is: coordSystem.yaxis2 = xAxis, class spoon.support.reflect.code.CtAssignmentImpl
statement is: CoordSystemUtilities coordSystemUtilities = coordSystem.c, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: coordSystem.c is coordSystem
CtField is: protected de.progra.charting.CoordSystemUtilities de.progra.charting.CoordSystem.c CoordSystemUtilities c
statement is: coordSystemUtilities.computeYAxisLabelWidth(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: coordSystemUtilities.computeYAxisLabelWidth() target is: coordSystemUtilities method is: computeYAxisLabelWidth()
TestCase is: double[][] doubleArray = new double[10][7];
double[] doubleArray = new double[4];
String[] stringArray = new String[10];
EditableChartDataModel editableChartDataModel = new EditableChartDataModel((double[][]) doubleArray, doubleArray, stringArray);
CoordSystem coordSystem = new CoordSystem(editableChartDataModel);

statement is: org.evosuite.testcase.statements.ArrayStatement@5c7b06da type is: class org.evosuite.testcase.statements.ArrayStatement return type class [[I
statement code is: int[][] intArray = new int[2][8]
statement is: org.evosuite.testcase.statements.ArrayStatement@2efcc581 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [I
statement code is: int[] intArray = new int[1]
statement is: org.evosuite.testcase.statements.AssignmentStatement@dce2f8e0 type is: class org.evosuite.testcase.statements.AssignmentStatement return type int
statement code is: intArray[0] = 248
statement is: org.evosuite.testcase.statements.AssignmentStatement@d74c59a9 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class [I
statement code is: intArray[0] = intArray
statement is: org.evosuite.testcase.statements.AssignmentStatement@1e334388 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class [I
statement code is: intArray[1] = intArray[0]
statement is: org.evosuite.testcase.statements.ArrayStatement@2b399a74 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [Ljava.lang.String;
statement code is: String[] stringArray = new String[5]
statement is: de.progra.charting.model.ObjectChartDataModel([[I[Ljava/lang/Object;[Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.progra.charting.model.ObjectChartDataModel
statement code is: ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel(arg1, arg1, arg2)
statement is: de.progra.charting.CoordSystem(Lde/progra/charting/model/ChartDataModel;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.progra.charting.CoordSystem
statement code is: CoordSystem coordSystem = new CoordSystem(arg0)
statement is: org.evosuite.testcase.statements.FieldStatement@29515ef1 type is: class org.evosuite.testcase.statements.FieldStatement return type class de.progra.charting.CoordSystemUtilities
statement code is: CoordSystemUtilities coordSystemUtilities = coordSystem.c
statement is: drawNumericalXAxisTicks(Ljava/awt/Graphics2D;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: coordSystemUtilities.drawNumericalXAxisTicks((Graphics2D) null)
test data is: int[][] intArray = new int[2][8];
int[] intArray = new int[1];
intArray[0] = 248;
intArray[0] = intArray;
intArray[1] = intArray[0];
String[] stringArray = new String[5];
ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel(intArray, intArray, stringArray);
CoordSystem coordSystem = new CoordSystem(objectChartDataModel);
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
coordSystemUtilities.drawNumericalXAxisTicks((Graphics2D) null);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        int[][] intArray = new int[2][8];
        int[] intArray = new int[1];
        intArray[0] = 248;
        intArray[0] = intArray;
        intArray[1] = intArray[0];
        String[] stringArray = new String[5];
        stringArray[0] = "Hello";
        stringArray[1] = "World";
        stringArray[2] = "Test";
        stringArray[3] = "Data";
        stringArray[4] = "Refined";
        ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel(intArray, intArray, stringArray);
        CoordSystem coordSystem = new CoordSystem(objectChartDataModel);
        CoordSystemUtilities coordSystemUtilities = coordSystem.c;
        coordSystemUtilities.drawNumericalXAxisTicks(((Graphics2D) (null)));
    }
}
statement is: int[][] intArray = new int[2][8], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [2, 8] Ct is: int[][] intArray = new int[2][8] isAssignment: false Array: new int[2][8] Elements: []
lengths: [2, 8] [2, 8]
Their type are: class [[I int[][]
statement is: int[] intArray = new int[1], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [1] Ct is: int[][] intArray = new int[2][8] isAssignment: false Array: new int[1] Elements: []
lengths: [2, 8] [1]
Dimension: [1] Ct is: int[] intArray = new int[1] isAssignment: false Array: new int[1] Elements: []
lengths: [1] [1]
Their type are: class [I int[]
statement is: intArray[0] = 248, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : intArray[0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl int Assignment:248 Ct is: intArray[0] = 248
target : intArray class spoon.support.reflect.code.CtLiteralImpl
statement is: intArray[0] = intArray, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : intArray[0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl int Assignment:intArray Ct is: intArray[0] = intArray
target : intArray class spoon.support.reflect.code.CtLiteralImpl
statement is: intArray[1] = intArray[0], class spoon.support.reflect.code.CtAssignmentImpl
Assigned : intArray[1] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl int Assignment:intArray[0] Ct is: intArray[1] = intArray[0]
target : intArray class spoon.support.reflect.code.CtLiteralImpl
statement is: String[] stringArray = new String[5], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [5] Ct is: int[][] intArray = new int[2][8] isAssignment: false Array: new String[5] Elements: []
lengths: [2, 8] [5]
Dimension: [5] Ct is: int[] intArray = new int[1] isAssignment: false Array: new String[5] Elements: []
lengths: [1] [5]
Their type are: class [I String[]
Dimension: [5] Ct is: String[] stringArray = new String[5] isAssignment: false Array: new String[5] Elements: []
lengths: [5] [5]
Their type are: class [Ljava.lang.String; String[]
statement is: stringArray[0] = "Hello", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"Hello" Ct is: stringArray[0] = "Hello"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[1] = "World", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[1] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"World" Ct is: stringArray[1] = "World"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[2] = "Test", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[2] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"Test" Ct is: stringArray[2] = "Test"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[3] = "Data", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[3] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"Data" Ct is: stringArray[3] = "Data"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[4] = "Refined", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[4] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"Refined" Ct is: stringArray[4] = "Refined"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel(intArray, intArray, stringArray), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: CoordSystem coordSystem = new CoordSystem(objectChartDataModel), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: CoordSystemUtilities coordSystemUtilities = coordSystem.c, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: coordSystem.c is coordSystem
CtField is: protected de.progra.charting.CoordSystemUtilities de.progra.charting.CoordSystem.c CoordSystemUtilities c
statement is: coordSystemUtilities.drawNumericalXAxisTicks(((Graphics2D) (null))), class spoon.support.reflect.code.CtInvocationImpl
invocation is: coordSystemUtilities.drawNumericalXAxisTicks(((Graphics2D) (null))) target is: coordSystemUtilities method is: drawNumericalXAxisTicks(Graphics2D)
TestCase is: int[][] intArray = new int[2][8];
int[] intArray = new int[1];
int _int = 248;
intArray[0] = _int;
intArray[0] = (int) intArray;
intArray[0] = (int) intArray;
String[] stringArray = new String[5];
ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel((int[][]) intArray, (Object[]) intArray, stringArray);
CoordSystem coordSystem = new CoordSystem(objectChartDataModel);

statement is: org.evosuite.testcase.statements.ArrayStatement@fef4fb3 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [[D
statement code is: double[][] doubleArray = new double[1][7]
statement is: org.evosuite.testcase.statements.ArrayStatement@5fa7ef14 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [D
statement code is: double[] doubleArray = new double[4]
statement is: org.evosuite.testcase.statements.AssignmentStatement@9010f15b type is: class org.evosuite.testcase.statements.AssignmentStatement return type double
statement code is: doubleArray[0] = (-1.9294442819002526)
statement is: org.evosuite.testcase.statements.AssignmentStatement@cc054baa type is: class org.evosuite.testcase.statements.AssignmentStatement return type double
statement code is: doubleArray[1] = (-1.5294442819002523)
statement is: org.evosuite.testcase.statements.AssignmentStatement@786fbd56 type is: class org.evosuite.testcase.statements.AssignmentStatement return type double
statement code is: doubleArray[2] = (-1.9294442819002526)
statement is: org.evosuite.testcase.statements.AssignmentStatement@674bb14 type is: class org.evosuite.testcase.statements.AssignmentStatement return type double
statement code is: doubleArray[3] = (-1.9294442819002526)
statement is: org.evosuite.testcase.statements.AssignmentStatement@a2d019b9 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class [D
statement code is: doubleArray[0] = doubleArray
statement is: org.evosuite.testcase.statements.ArrayStatement@59de27cd type is: class org.evosuite.testcase.statements.ArrayStatement return type class [Ljava.lang.String;
statement code is: String[] stringArray = new String[7]
statement is: de.progra.charting.model.EditableChartDataModel([[D[D[Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.progra.charting.model.EditableChartDataModel
statement code is: EditableChartDataModel editableChartDataModel = new EditableChartDataModel(arg0, arg1, arg2)
statement is: de.progra.charting.CoordSystem(Lde/progra/charting/model/ChartDataModel;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.progra.charting.CoordSystem
statement code is: CoordSystem coordSystem = new CoordSystem(arg0)
statement is: org.evosuite.testcase.statements.FieldStatement@6300c301 type is: class org.evosuite.testcase.statements.FieldStatement return type class de.progra.charting.CoordSystemUtilities
statement code is: CoordSystemUtilities coordSystemUtilities = coordSystem.c
statement is: drawNumericalXAxisTicks(Ljava/awt/Graphics2D;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: coordSystemUtilities.drawNumericalXAxisTicks((Graphics2D) null)
test data is: double[][] doubleArray = new double[1][7];
double[] doubleArray = new double[4];
doubleArray[0] = (-1.9294442819002526);
doubleArray[1] = (-1.5294442819002523);
doubleArray[2] = (-1.9294442819002526);
doubleArray[3] = (-1.9294442819002526);
doubleArray[0] = doubleArray;
String[] stringArray = new String[7];
EditableChartDataModel editableChartDataModel = new EditableChartDataModel(doubleArray, doubleArray, stringArray);
CoordSystem coordSystem = new CoordSystem(editableChartDataModel);
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
coordSystemUtilities.drawNumericalXAxisTicks((Graphics2D) null);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        double[][] doubleArray = new double[1][7];
        doubleArray[0][0] = -1.9294442819002526;
        doubleArray[0][1] = -1.5294442819002523;
        doubleArray[0][2] = -1.9294442819002526;
        doubleArray[0][3] = -1.9294442819002526;
        doubleArray[0][4] = -1.9294442819002526;
        doubleArray[0][5] = -1.9294442819002526;
        doubleArray[0][6] = -1.9294442819002526;
        String[] stringArray = new String[7];
        stringArray[0] = "Monday";
        stringArray[1] = "Tuesday";
        stringArray[2] = "Wednesday";
        stringArray[3] = "Thursday";
        stringArray[4] = "Friday";
        stringArray[5] = "Saturday";
        stringArray[6] = "Sunday";
        EditableChartDataModel editableChartDataModel = new EditableChartDataModel(doubleArray, doubleArray, stringArray);
        CoordSystem coordSystem = new CoordSystem(editableChartDataModel);
        CoordSystemUtilities coordSystemUtilities = coordSystem.c;
        coordSystemUtilities.drawNumericalXAxisTicks(((Graphics2D) (null)));
    }
}
statement is: double[][] doubleArray = new double[1][7], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [1, 7] Ct is: double[][] doubleArray = new double[1][7] isAssignment: false Array: new double[1][7] Elements: []
lengths: [1, 7] [1, 7]
Their type are: class [[D double[][]
statement is: doubleArray[0][0] = -1.9294442819002526, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : doubleArray[0][0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl double Assignment:-1.9294442819002526 Ct is: doubleArray[0][0] = -1.9294442819002526
target : doubleArray[0] class spoon.support.reflect.code.CtLiteralImpl
statement is: doubleArray[0][1] = -1.5294442819002523, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : doubleArray[0][1] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl double Assignment:-1.5294442819002523 Ct is: doubleArray[0][1] = -1.5294442819002523
target : doubleArray[0] class spoon.support.reflect.code.CtLiteralImpl
statement is: doubleArray[0][2] = -1.9294442819002526, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : doubleArray[0][2] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl double Assignment:-1.9294442819002526 Ct is: doubleArray[0][2] = -1.9294442819002526
target : doubleArray[0] class spoon.support.reflect.code.CtLiteralImpl
statement is: doubleArray[0][3] = -1.9294442819002526, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : doubleArray[0][3] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl double Assignment:-1.9294442819002526 Ct is: doubleArray[0][3] = -1.9294442819002526
target : doubleArray[0] class spoon.support.reflect.code.CtLiteralImpl
statement is: doubleArray[0][4] = -1.9294442819002526, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : doubleArray[0][4] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl double Assignment:-1.9294442819002526 Ct is: doubleArray[0][4] = -1.9294442819002526
target : doubleArray[0] class spoon.support.reflect.code.CtLiteralImpl
statement is: doubleArray[0][5] = -1.9294442819002526, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : doubleArray[0][5] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl double Assignment:-1.9294442819002526 Ct is: doubleArray[0][5] = -1.9294442819002526
target : doubleArray[0] class spoon.support.reflect.code.CtLiteralImpl
statement is: doubleArray[0][6] = -1.9294442819002526, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : doubleArray[0][6] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl double Assignment:-1.9294442819002526 Ct is: doubleArray[0][6] = -1.9294442819002526
target : doubleArray[0] class spoon.support.reflect.code.CtLiteralImpl
statement is: String[] stringArray = new String[7], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [7] Ct is: double[][] doubleArray = new double[1][7] isAssignment: false Array: new String[7] Elements: []
lengths: [1, 7] [7]
Dimension: [7] Ct is: double[] doubleArray = new double[4] isAssignment: false Array: new String[7] Elements: []
lengths: [4] [7]
Their type are: class [D String[]
Dimension: [7] Ct is: String[] stringArray = new String[7] isAssignment: false Array: new String[7] Elements: []
lengths: [7] [7]
Their type are: class [Ljava.lang.String; String[]
statement is: stringArray[0] = "Monday", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"Monday" Ct is: stringArray[0] = "Monday"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[1] = "Tuesday", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[1] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"Tuesday" Ct is: stringArray[1] = "Tuesday"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[2] = "Wednesday", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[2] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"Wednesday" Ct is: stringArray[2] = "Wednesday"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[3] = "Thursday", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[3] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"Thursday" Ct is: stringArray[3] = "Thursday"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[4] = "Friday", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[4] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"Friday" Ct is: stringArray[4] = "Friday"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[5] = "Saturday", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[5] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"Saturday" Ct is: stringArray[5] = "Saturday"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[6] = "Sunday", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[6] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"Sunday" Ct is: stringArray[6] = "Sunday"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: EditableChartDataModel editableChartDataModel = new EditableChartDataModel(doubleArray, doubleArray, stringArray), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: CoordSystem coordSystem = new CoordSystem(editableChartDataModel), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: CoordSystemUtilities coordSystemUtilities = coordSystem.c, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: coordSystem.c is coordSystem
CtField is: protected de.progra.charting.CoordSystemUtilities de.progra.charting.CoordSystem.c CoordSystemUtilities c
statement is: coordSystemUtilities.drawNumericalXAxisTicks(((Graphics2D) (null))), class spoon.support.reflect.code.CtInvocationImpl
invocation is: coordSystemUtilities.drawNumericalXAxisTicks(((Graphics2D) (null))) target is: coordSystemUtilities method is: drawNumericalXAxisTicks(Graphics2D)
TestCase is: double[][] doubleArray = new double[1][7];
String[] stringArray = new String[7];
EditableChartDataModel editableChartDataModel = new EditableChartDataModel(doubleArray, (double[]) doubleArray, stringArray);
CoordSystem coordSystem = new CoordSystem(editableChartDataModel);

statement is: de.progra.charting.model.ObjectChartDataModel()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.progra.charting.model.ObjectChartDataModel
statement code is: ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel()
statement is: de.progra.charting.CoordSystem(Lde/progra/charting/model/ChartDataModel;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.progra.charting.CoordSystem
statement code is: CoordSystem coordSystem = new CoordSystem(arg0)
statement is: org.evosuite.testcase.statements.FieldStatement@134f3d5d type is: class org.evosuite.testcase.statements.FieldStatement return type class de.progra.charting.CoordSystemUtilities
statement code is: CoordSystemUtilities coordSystemUtilities = coordSystem.c
statement is: getRotateInstance(DDD)Ljava/awt/geom/AffineTransform; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.awt.geom.AffineTransform
statement code is: AffineTransform rotateInstance = AffineTransform.getRotateInstance((double) 20, (double) 0, (double) 15)
statement is: org.evosuite.testcase.statements.AssignmentStatement@1fcb1139 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.awt.geom.AffineTransform
statement code is: coordSystem.y1transform = affineTransform
statement is: java.awt.image.BufferedImage(III)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.awt.image.BufferedImage
statement code is: BufferedImage bufferedImage = new BufferedImage(15, 20, 1)
statement is: createGraphics()Ljava/awt/Graphics2D; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.awt.Graphics2D
statement code is: Graphics2D createGraphics = bufferedImage.createGraphics()
statement is: drawNumericalXAxisTicks(Ljava/awt/Graphics2D;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: coordSystemUtilities.drawNumericalXAxisTicks(arg0)
test data is: ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel();
CoordSystem coordSystem = new CoordSystem(objectChartDataModel);
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
AffineTransform rotateInstance = AffineTransform.getRotateInstance((double) 20, (double) 0, (double) 15);
coordSystem.y1transform = rotateInstance;
BufferedImage bufferedImage = new BufferedImage(15, 20, 1);
Graphics2D createGraphics = bufferedImage.createGraphics();
coordSystemUtilities.drawNumericalXAxisTicks(createGraphics);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel();
        CoordSystem coordSystem = new CoordSystem(objectChartDataModel);
        CoordSystemUtilities coordSystemUtilities = coordSystem.c;
        AffineTransform rotateInstance = AffineTransform.getRotateInstance(((double) (20)), ((double) (15)), ((double) (15)));
        coordSystem.y1transform = rotateInstance;
        BufferedImage bufferedImage = new BufferedImage(15, 20, 1);
        Graphics2D createGraphics = bufferedImage.createGraphics();
        coordSystemUtilities.drawNumericalXAxisTicks(createGraphics);
    }
}
statement is: ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: CoordSystem coordSystem = new CoordSystem(objectChartDataModel), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: CoordSystemUtilities coordSystemUtilities = coordSystem.c, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: coordSystem.c is coordSystem
CtField is: protected de.progra.charting.CoordSystemUtilities de.progra.charting.CoordSystem.c CoordSystemUtilities c
statement is: AffineTransform rotateInstance = AffineTransform.getRotateInstance(((double) (20)), ((double) (15)), ((double) (15))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: AffineTransform.getRotateInstance(((double) (20)), ((double) (15)), ((double) (15))) target is: AffineTransform method is: getRotateInstance(double,double,double)
Matched Method is: getRotateInstance(DDD)Ljava/awt/geom/AffineTransform;
statement is: coordSystem.y1transform = rotateInstance, class spoon.support.reflect.code.CtAssignmentImpl
statement is: BufferedImage bufferedImage = new BufferedImage(15, 20, 1), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Graphics2D createGraphics = bufferedImage.createGraphics(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: bufferedImage.createGraphics() target is: bufferedImage method is: createGraphics()
source statement: java.awt.image.BufferedImage(III)V callee: VariableReference: Statement 5, type java.awt.image.BufferedImageindex is: 9
Matched Method is: createGraphics()Ljava/awt/Graphics2D;
statement is: coordSystemUtilities.drawNumericalXAxisTicks(createGraphics), class spoon.support.reflect.code.CtInvocationImpl
invocation is: coordSystemUtilities.drawNumericalXAxisTicks(createGraphics) target is: coordSystemUtilities method is: drawNumericalXAxisTicks(Graphics2D)
TestCase is: ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel();
CoordSystem coordSystem = new CoordSystem(objectChartDataModel);
int _int = 20;
int _int = 15;
int _int = 15;
AffineTransform rotateInstance = AffineTransform.getRotateInstance((double) _int, (double) _int, (double) _int);
int _int = 15;
int _int = 20;
int _int = 1;
BufferedImage bufferedImage = new BufferedImage(_int, _int, _int);
((BufferedImage) rotateInstance).createGraphics();

statement is: de.progra.charting.model.ObjectChartDataModel()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.progra.charting.model.ObjectChartDataModel
statement code is: ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel()
statement is: de.progra.charting.CoordSystem(Lde/progra/charting/model/ChartDataModel;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.progra.charting.CoordSystem
statement code is: CoordSystem coordSystem = new CoordSystem(arg0)
statement is: org.evosuite.testcase.statements.FieldStatement@44fc0915 type is: class org.evosuite.testcase.statements.FieldStatement return type class de.progra.charting.CoordSystemUtilities
statement code is: CoordSystemUtilities coordSystemUtilities = coordSystem.c
statement is: setPaintLabels(Z)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: coordSystem.setPaintLabels(false)
statement is: getRotateInstance(DDD)Ljava/awt/geom/AffineTransform; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.awt.geom.AffineTransform
statement code is: AffineTransform rotateInstance = AffineTransform.getRotateInstance((double) 20, (double) 0, (double) 15)
statement is: org.evosuite.testcase.statements.AssignmentStatement@fd3e941a type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.awt.geom.AffineTransform
statement code is: coordSystem.y1transform = affineTransform
statement is: java.awt.image.BufferedImage(III)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.awt.image.BufferedImage
statement code is: BufferedImage bufferedImage = new BufferedImage(15, 20, 1)
statement is: createGraphics()Ljava/awt/Graphics2D; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.awt.Graphics2D
statement code is: Graphics2D createGraphics = bufferedImage.createGraphics()
statement is: drawNumericalXAxisTicks(Ljava/awt/Graphics2D;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: coordSystemUtilities.drawNumericalXAxisTicks(arg0)
test data is: ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel();
CoordSystem coordSystem = new CoordSystem(objectChartDataModel);
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
coordSystem.setPaintLabels(false);
AffineTransform rotateInstance = AffineTransform.getRotateInstance((double) 20, (double) 0, (double) 15);
coordSystem.y1transform = rotateInstance;
BufferedImage bufferedImage = new BufferedImage(15, 20, 1);
Graphics2D createGraphics = bufferedImage.createGraphics();
coordSystemUtilities.drawNumericalXAxisTicks(createGraphics);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel();
        CoordSystem coordSystem = new CoordSystem(objectChartDataModel);
        CoordSystemUtilities coordSystemUtilities = coordSystem.c;
        coordSystem.setPaintLabels(false);
        AffineTransform rotateInstance = AffineTransform.getRotateInstance(((double) (20)), ((double) (0)), ((double) (15)));
        coordSystem.y1transform = rotateInstance;
        BufferedImage bufferedImage = new BufferedImage(15, 20, 1);
        Graphics2D createGraphics = bufferedImage.createGraphics();
        coordSystemUtilities.drawNumericalXAxisTicks(createGraphics);
    }
}
statement is: ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: CoordSystem coordSystem = new CoordSystem(objectChartDataModel), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: CoordSystemUtilities coordSystemUtilities = coordSystem.c, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: coordSystem.c is coordSystem
CtField is: protected de.progra.charting.CoordSystemUtilities de.progra.charting.CoordSystem.c CoordSystemUtilities c
statement is: coordSystem.setPaintLabels(false), class spoon.support.reflect.code.CtInvocationImpl
invocation is: coordSystem.setPaintLabels(false) target is: coordSystem method is: setPaintLabels(boolean)
source statement: de.progra.charting.CoordSystem(Lde/progra/charting/model/ChartDataModel;)V callee: VariableReference: Statement 1, type de.progra.charting.CoordSystemindex is: 1
Matched Method is: setPaintLabels(Z)V
statement is: AffineTransform rotateInstance = AffineTransform.getRotateInstance(((double) (20)), ((double) (0)), ((double) (15))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: AffineTransform.getRotateInstance(((double) (20)), ((double) (0)), ((double) (15))) target is: AffineTransform method is: getRotateInstance(double,double,double)
Matched Method is: getRotateInstance(DDD)Ljava/awt/geom/AffineTransform;
statement is: coordSystem.y1transform = rotateInstance, class spoon.support.reflect.code.CtAssignmentImpl
statement is: BufferedImage bufferedImage = new BufferedImage(15, 20, 1), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Graphics2D createGraphics = bufferedImage.createGraphics(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: bufferedImage.createGraphics() target is: bufferedImage method is: createGraphics()
source statement: java.awt.image.BufferedImage(III)V callee: VariableReference: Statement 6, type java.awt.image.BufferedImageindex is: 11
Matched Method is: createGraphics()Ljava/awt/Graphics2D;
statement is: coordSystemUtilities.drawNumericalXAxisTicks(createGraphics), class spoon.support.reflect.code.CtInvocationImpl
invocation is: coordSystemUtilities.drawNumericalXAxisTicks(createGraphics) target is: coordSystemUtilities method is: drawNumericalXAxisTicks(Graphics2D)
TestCase is: ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel();
CoordSystem coordSystem = new CoordSystem(objectChartDataModel);
boolean _boolean = false;
coordSystem.setPaintLabels(_boolean);
int _int = 20;
int _int = 0;
int _int = 15;
AffineTransform.getRotateInstance((double) _int, (double) _int, (double) _int);
int _int = 15;
int _int = 20;
int _int = 1;
BufferedImage bufferedImage = new BufferedImage(_int, _int, _int);
((BufferedImage) _int).createGraphics();

statement is: org.evosuite.testcase.statements.ArrayStatement@d83f00b7 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [[D
statement code is: double[][] doubleArray = new double[1][7]
statement is: org.evosuite.testcase.statements.ArrayStatement@a894dca8 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [D
statement code is: double[] doubleArray = new double[4]
statement is: org.evosuite.testcase.statements.AssignmentStatement@edc84ee8 type is: class org.evosuite.testcase.statements.AssignmentStatement return type double
statement code is: doubleArray[0] = (-1.9294442819002526)
statement is: org.evosuite.testcase.statements.AssignmentStatement@60e67fa2 type is: class org.evosuite.testcase.statements.AssignmentStatement return type double
statement code is: doubleArray[1] = (-1.5294442819002523)
statement is: org.evosuite.testcase.statements.AssignmentStatement@f537298b type is: class org.evosuite.testcase.statements.AssignmentStatement return type double
statement code is: doubleArray[2] = (-1.9294442819002526)
statement is: org.evosuite.testcase.statements.AssignmentStatement@f1925cbb type is: class org.evosuite.testcase.statements.AssignmentStatement return type double
statement code is: doubleArray[3] = (-1.9294442819002526)
statement is: org.evosuite.testcase.statements.AssignmentStatement@dab108f6 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class [D
statement code is: doubleArray[0] = doubleArray
statement is: org.evosuite.testcase.statements.ArrayStatement@2d0bbd3e type is: class org.evosuite.testcase.statements.ArrayStatement return type class [Ljava.lang.String;
statement code is: String[] stringArray = new String[7]
statement is: de.progra.charting.model.EditableChartDataModel([[D[D[Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.progra.charting.model.EditableChartDataModel
statement code is: EditableChartDataModel editableChartDataModel = new EditableChartDataModel(arg0, arg1, arg2)
statement is: de.progra.charting.CoordSystem(Lde/progra/charting/model/ChartDataModel;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.progra.charting.CoordSystem
statement code is: CoordSystem coordSystem = new CoordSystem(arg0)
statement is: org.evosuite.testcase.statements.FieldStatement@1b49b84e type is: class org.evosuite.testcase.statements.FieldStatement return type class de.progra.charting.CoordSystemUtilities
statement code is: CoordSystemUtilities coordSystemUtilities = coordSystem.c
statement is: drawXAxisTicks(Ljava/awt/Graphics2D;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: coordSystemUtilities.drawXAxisTicks((Graphics2D) null)
test data is: double[][] doubleArray = new double[1][7];
double[] doubleArray = new double[4];
doubleArray[0] = (-1.9294442819002526);
doubleArray[1] = (-1.5294442819002523);
doubleArray[2] = (-1.9294442819002526);
doubleArray[3] = (-1.9294442819002526);
doubleArray[0] = doubleArray;
String[] stringArray = new String[7];
EditableChartDataModel editableChartDataModel = new EditableChartDataModel(doubleArray, doubleArray, stringArray);
CoordSystem coordSystem = new CoordSystem(editableChartDataModel);
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
coordSystemUtilities.drawXAxisTicks((Graphics2D) null);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
    }
}
statement is: de.progra.charting.model.ObjectChartDataModel()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.progra.charting.model.ObjectChartDataModel
statement code is: ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel()
statement is: de.progra.charting.CoordSystem(Lde/progra/charting/model/ChartDataModel;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.progra.charting.CoordSystem
statement code is: CoordSystem coordSystem = new CoordSystem(arg0)
statement is: setPaintLabels(Z)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: coordSystem.setPaintLabels(false)
statement is: org.evosuite.testcase.statements.FieldStatement@4bc3d2f2 type is: class org.evosuite.testcase.statements.FieldStatement return type class de.progra.charting.CoordSystemUtilities
statement code is: CoordSystemUtilities coordSystemUtilities = coordSystem.c
statement is: getDefaultTransform(I)Ljava/awt/geom/AffineTransform; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.awt.geom.AffineTransform
statement code is: AffineTransform defaultTransform = coordSystem.getDefaultTransform(0)
statement is: org.evosuite.testcase.statements.AssignmentStatement@33e70453 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.awt.geom.AffineTransform
statement code is: coordSystem.y1transform = affineTransform
statement is: java.awt.image.BufferedImage(III)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.awt.image.BufferedImage
statement code is: BufferedImage bufferedImage = new BufferedImage(15, 20, 1)
statement is: createGraphics()Ljava/awt/Graphics2D; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.awt.Graphics2D
statement code is: Graphics2D createGraphics = bufferedImage.createGraphics()
statement is: drawXAxisTicks(Ljava/awt/Graphics2D;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: coordSystemUtilities.drawXAxisTicks(arg0)
test data is: ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel();
CoordSystem coordSystem = new CoordSystem(objectChartDataModel);
coordSystem.setPaintLabels(false);
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
AffineTransform defaultTransform = coordSystem.getDefaultTransform(0);
coordSystem.y1transform = defaultTransform;
BufferedImage bufferedImage = new BufferedImage(15, 20, 1);
Graphics2D createGraphics = bufferedImage.createGraphics();
coordSystemUtilities.drawXAxisTicks(createGraphics);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel();
        CoordSystem coordSystem = new CoordSystem(objectChartDataModel);
        coordSystem.setPaintLabels(false);
        CoordSystemUtilities coordSystemUtilities = coordSystem.c;
        AffineTransform defaultTransform = coordSystem.getDefaultTransform(0);
        coordSystem.y1transform = defaultTransform;
        BufferedImage bufferedImage = new BufferedImage(15, 20, 1);
        Graphics2D createGraphics = bufferedImage.createGraphics();
        coordSystemUtilities.drawXAxisTicks(createGraphics);
    }
}
statement is: ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: CoordSystem coordSystem = new CoordSystem(objectChartDataModel), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: coordSystem.setPaintLabels(false), class spoon.support.reflect.code.CtInvocationImpl
invocation is: coordSystem.setPaintLabels(false) target is: coordSystem method is: setPaintLabels(boolean)
source statement: de.progra.charting.CoordSystem(Lde/progra/charting/model/ChartDataModel;)V callee: VariableReference: Statement 1, type de.progra.charting.CoordSystemindex is: 1
Matched Method is: setPaintLabels(Z)V
statement is: CoordSystemUtilities coordSystemUtilities = coordSystem.c, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: coordSystem.c is coordSystem
CtField is: protected de.progra.charting.CoordSystemUtilities de.progra.charting.CoordSystem.c CoordSystemUtilities c
statement is: AffineTransform defaultTransform = coordSystem.getDefaultTransform(0), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: coordSystem.getDefaultTransform(0) target is: coordSystem method is: getDefaultTransform(int)
source statement: de.progra.charting.CoordSystem(Lde/progra/charting/model/ChartDataModel;)V callee: VariableReference: Statement 1, type de.progra.charting.CoordSystemindex is: 1
Matched Method is: getDefaultTransform(I)Ljava/awt/geom/AffineTransform;
statement is: coordSystem.y1transform = defaultTransform, class spoon.support.reflect.code.CtAssignmentImpl
statement is: BufferedImage bufferedImage = new BufferedImage(15, 20, 1), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Graphics2D createGraphics = bufferedImage.createGraphics(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: bufferedImage.createGraphics() target is: bufferedImage method is: createGraphics()
source statement: java.awt.image.BufferedImage(III)V callee: VariableReference: Statement 6, type java.awt.image.BufferedImageindex is: 9
Matched Method is: createGraphics()Ljava/awt/Graphics2D;
statement is: coordSystemUtilities.drawXAxisTicks(createGraphics), class spoon.support.reflect.code.CtInvocationImpl
invocation is: coordSystemUtilities.drawXAxisTicks(createGraphics) target is: coordSystemUtilities method is: drawXAxisTicks(Graphics2D)
TestCase is: ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel();
CoordSystem coordSystem = new CoordSystem(objectChartDataModel);
boolean _boolean = false;
coordSystem.setPaintLabels(_boolean);
int _int = 0;
coordSystem.getDefaultTransform(_int);
int _int = 15;
int _int = 20;
int _int = 1;
BufferedImage bufferedImage = new BufferedImage(_int, _int, _int);
((BufferedImage) _int).createGraphics();

statement is: de.progra.charting.model.ObjectChartDataModel()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.progra.charting.model.ObjectChartDataModel
statement code is: ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel()
statement is: de.progra.charting.CoordSystem(Lde/progra/charting/model/ChartDataModel;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.progra.charting.CoordSystem
statement code is: CoordSystem coordSystem = new CoordSystem(arg0)
statement is: org.evosuite.testcase.statements.FieldStatement@1d16eba0 type is: class org.evosuite.testcase.statements.FieldStatement return type class de.progra.charting.CoordSystemUtilities
statement code is: CoordSystemUtilities coordSystemUtilities = coordSystem.c
statement is: getRotateInstance(DDD)Ljava/awt/geom/AffineTransform; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.awt.geom.AffineTransform
statement code is: AffineTransform rotateInstance = AffineTransform.getRotateInstance((double) 20, (double) 0, (double) 15)
statement is: org.evosuite.testcase.statements.AssignmentStatement@c134643c type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.awt.geom.AffineTransform
statement code is: coordSystem.y1transform = affineTransform
statement is: java.awt.image.BufferedImage(III)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.awt.image.BufferedImage
statement code is: BufferedImage bufferedImage = new BufferedImage(15, 20, 1)
statement is: createGraphics()Ljava/awt/Graphics2D; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.awt.Graphics2D
statement code is: Graphics2D createGraphics = bufferedImage.createGraphics()
statement is: drawXAxisTicks(Ljava/awt/Graphics2D;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: coordSystemUtilities.drawXAxisTicks(arg0)
test data is: ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel();
CoordSystem coordSystem = new CoordSystem(objectChartDataModel);
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
AffineTransform rotateInstance = AffineTransform.getRotateInstance((double) 20, (double) 0, (double) 15);
coordSystem.y1transform = rotateInstance;
BufferedImage bufferedImage = new BufferedImage(15, 20, 1);
Graphics2D createGraphics = bufferedImage.createGraphics();
coordSystemUtilities.drawXAxisTicks(createGraphics);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel();
        CoordSystem coordSystem = new CoordSystem(objectChartDataModel);
        CoordSystemUtilities coordSystemUtilities = coordSystem.c;
        AffineTransform rotateInstance = AffineTransform.getRotateInstance(((double) (45)), ((double) (0)), ((double) (15)));
        coordSystem.y1transform = rotateInstance;
        BufferedImage bufferedImage = new BufferedImage(15, 20, 1);
        Graphics2D createGraphics = bufferedImage.createGraphics();
        coordSystemUtilities.drawXAxisTicks(createGraphics);
    }
}
statement is: ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: CoordSystem coordSystem = new CoordSystem(objectChartDataModel), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: CoordSystemUtilities coordSystemUtilities = coordSystem.c, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: coordSystem.c is coordSystem
CtField is: protected de.progra.charting.CoordSystemUtilities de.progra.charting.CoordSystem.c CoordSystemUtilities c
statement is: AffineTransform rotateInstance = AffineTransform.getRotateInstance(((double) (45)), ((double) (0)), ((double) (15))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: AffineTransform.getRotateInstance(((double) (45)), ((double) (0)), ((double) (15))) target is: AffineTransform method is: getRotateInstance(double,double,double)
Matched Method is: getRotateInstance(DDD)Ljava/awt/geom/AffineTransform;
statement is: coordSystem.y1transform = rotateInstance, class spoon.support.reflect.code.CtAssignmentImpl
statement is: BufferedImage bufferedImage = new BufferedImage(15, 20, 1), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Graphics2D createGraphics = bufferedImage.createGraphics(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: bufferedImage.createGraphics() target is: bufferedImage method is: createGraphics()
source statement: java.awt.image.BufferedImage(III)V callee: VariableReference: Statement 5, type java.awt.image.BufferedImageindex is: 9
Matched Method is: createGraphics()Ljava/awt/Graphics2D;
statement is: coordSystemUtilities.drawXAxisTicks(createGraphics), class spoon.support.reflect.code.CtInvocationImpl
invocation is: coordSystemUtilities.drawXAxisTicks(createGraphics) target is: coordSystemUtilities method is: drawXAxisTicks(Graphics2D)
TestCase is: ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel();
CoordSystem coordSystem = new CoordSystem(objectChartDataModel);
int _int = 45;
int _int = 0;
int _int = 15;
AffineTransform rotateInstance = AffineTransform.getRotateInstance((double) _int, (double) _int, (double) _int);
int _int = 15;
int _int = 20;
int _int = 1;
BufferedImage bufferedImage = new BufferedImage(_int, _int, _int);
((BufferedImage) rotateInstance).createGraphics();

statement is: org.evosuite.testcase.statements.ArrayStatement@777d8a8a type is: class org.evosuite.testcase.statements.ArrayStatement return type class [[D
statement code is: double[][] doubleArray = new double[2][7]
statement is: org.evosuite.testcase.statements.ArrayStatement@b427bfd type is: class org.evosuite.testcase.statements.ArrayStatement return type class [D
statement code is: double[] doubleArray = new double[4]
statement is: org.evosuite.testcase.statements.AssignmentStatement@4fd2f2d type is: class org.evosuite.testcase.statements.AssignmentStatement return type double
statement code is: doubleArray[0] = 0.32870741247955104
statement is: org.evosuite.testcase.statements.AssignmentStatement@301497c6 type is: class org.evosuite.testcase.statements.AssignmentStatement return type double
statement code is: doubleArray[1] = 0.32870741247955104
statement is: org.evosuite.testcase.statements.AssignmentStatement@e4e3eb67 type is: class org.evosuite.testcase.statements.AssignmentStatement return type double
statement code is: doubleArray[2] = 0.32870741247955104
statement is: org.evosuite.testcase.statements.AssignmentStatement@c242171b type is: class org.evosuite.testcase.statements.AssignmentStatement return type double
statement code is: doubleArray[3] = 0.32870741247955104
statement is: org.evosuite.testcase.statements.AssignmentStatement@6078c200 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class [D
statement code is: doubleArray[0] = doubleArray
statement is: org.evosuite.testcase.statements.ArrayStatement@93e55bcb type is: class org.evosuite.testcase.statements.ArrayStatement return type class [Ljava.lang.String;
statement code is: String[] stringArray = new String[7]
statement is: de.progra.charting.model.EditableChartDataModel([[D[D[Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.progra.charting.model.EditableChartDataModel
statement code is: EditableChartDataModel editableChartDataModel = new EditableChartDataModel(arg0, arg1, arg2)
statement is: de.progra.charting.CoordSystem(Lde/progra/charting/model/ChartDataModel;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.progra.charting.CoordSystem
statement code is: CoordSystem coordSystem = new CoordSystem(arg0)
statement is: org.evosuite.testcase.statements.FieldStatement@4f542650 type is: class org.evosuite.testcase.statements.FieldStatement return type class de.progra.charting.CoordSystemUtilities
statement code is: CoordSystemUtilities coordSystemUtilities = coordSystem.c
statement is: drawYAxisTicks(Ljava/awt/Graphics2D;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: coordSystemUtilities.drawYAxisTicks((Graphics2D) null)
test data is: double[][] doubleArray = new double[2][7];
double[] doubleArray = new double[4];
doubleArray[0] = 0.32870741247955104;
doubleArray[1] = 0.32870741247955104;
doubleArray[2] = 0.32870741247955104;
doubleArray[3] = 0.32870741247955104;
doubleArray[0] = doubleArray;
String[] stringArray = new String[7];
EditableChartDataModel editableChartDataModel = new EditableChartDataModel(doubleArray, doubleArray, stringArray);
CoordSystem coordSystem = new CoordSystem(editableChartDataModel);
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
coordSystemUtilities.drawYAxisTicks((Graphics2D) null);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        double[][] doubleArray = new double[2][7];
        doubleArray[0] = new double[]{ 1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0 };
        doubleArray[1] = new double[]{ 8.0, 9.0, 10.0, 11.0, 12.0, 13.0, 14.0 };
        String[] stringArray = new String[7];
        stringArray[0] = "January";
        stringArray[1] = "February";
        stringArray[2] = "March";
        stringArray[3] = "April";
        stringArray[4] = "May";
        stringArray[5] = "June";
        stringArray[6] = "July";
        EditableChartDataModel editableChartDataModel = new EditableChartDataModel(doubleArray, doubleArray, stringArray);
        CoordSystem coordSystem = new CoordSystem(editableChartDataModel);
        CoordSystemUtilities coordSystemUtilities = coordSystem.c;
        coordSystemUtilities.drawYAxisTicks(((Graphics2D) (null)));
    }
}
statement is: double[][] doubleArray = new double[2][7], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [2, 7] Ct is: double[][] doubleArray = new double[2][7] isAssignment: false Array: new double[2][7] Elements: []
lengths: [2, 7] [2, 7]
Their type are: class [[D double[][]
statement is: doubleArray[0] = new double[]{ 1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0 }, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : doubleArray[0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl double[] Assignment:new double[]{ 1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0 } Ct is: doubleArray[0] = new double[]{ 1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0 }
target : doubleArray class spoon.support.reflect.code.CtLiteralImpl
TestCase Could not be added: org.evosuite.testcase.statements.AssignmentStatement@a9308ada
statement is: doubleArray[1] = new double[]{ 8.0, 9.0, 10.0, 11.0, 12.0, 13.0, 14.0 }, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : doubleArray[1] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl double[] Assignment:new double[]{ 8.0, 9.0, 10.0, 11.0, 12.0, 13.0, 14.0 } Ct is: doubleArray[1] = new double[]{ 8.0, 9.0, 10.0, 11.0, 12.0, 13.0, 14.0 }
target : doubleArray class spoon.support.reflect.code.CtLiteralImpl
TestCase Could not be added: org.evosuite.testcase.statements.AssignmentStatement@a9308ada
statement is: String[] stringArray = new String[7], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [7] Ct is: double[][] doubleArray = new double[2][7] isAssignment: false Array: new String[7] Elements: []
lengths: [2, 7] [7]
Dimension: [7] Ct is: double[] doubleArray = new double[4] isAssignment: false Array: new String[7] Elements: []
lengths: [4] [7]
Their type are: class [D String[]
Dimension: [7] Ct is: String[] stringArray = new String[7] isAssignment: false Array: new String[7] Elements: []
lengths: [7] [7]
Their type are: class [Ljava.lang.String; String[]
statement is: stringArray[0] = "January", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"January" Ct is: stringArray[0] = "January"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[1] = "February", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[1] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"February" Ct is: stringArray[1] = "February"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[2] = "March", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[2] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"March" Ct is: stringArray[2] = "March"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[3] = "April", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[3] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"April" Ct is: stringArray[3] = "April"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[4] = "May", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[4] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"May" Ct is: stringArray[4] = "May"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[5] = "June", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[5] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"June" Ct is: stringArray[5] = "June"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[6] = "July", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[6] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"July" Ct is: stringArray[6] = "July"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: EditableChartDataModel editableChartDataModel = new EditableChartDataModel(doubleArray, doubleArray, stringArray), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: CoordSystem coordSystem = new CoordSystem(editableChartDataModel), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: CoordSystemUtilities coordSystemUtilities = coordSystem.c, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: coordSystem.c is coordSystem
CtField is: protected de.progra.charting.CoordSystemUtilities de.progra.charting.CoordSystem.c CoordSystemUtilities c
statement is: coordSystemUtilities.drawYAxisTicks(((Graphics2D) (null))), class spoon.support.reflect.code.CtInvocationImpl
invocation is: coordSystemUtilities.drawYAxisTicks(((Graphics2D) (null))) target is: coordSystemUtilities method is: drawYAxisTicks(Graphics2D)
TestCase is: double[][] doubleArray = new double[2][7];
String[] stringArray = new String[7];
EditableChartDataModel editableChartDataModel = new EditableChartDataModel(doubleArray, (double[]) doubleArray, stringArray);
CoordSystem coordSystem = new CoordSystem(editableChartDataModel);

statement is: org.evosuite.testcase.statements.ArrayStatement@a349a9ca type is: class org.evosuite.testcase.statements.ArrayStatement return type class [[D
statement code is: double[][] doubleArray = new double[1][7]
statement is: org.evosuite.testcase.statements.ArrayStatement@67cb6bf4 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [D
statement code is: double[] doubleArray = new double[4]
statement is: org.evosuite.testcase.statements.AssignmentStatement@2f4a01af type is: class org.evosuite.testcase.statements.AssignmentStatement return type double
statement code is: doubleArray[0] = (-1.9294442819002526)
statement is: org.evosuite.testcase.statements.AssignmentStatement@67d7c8e9 type is: class org.evosuite.testcase.statements.AssignmentStatement return type double
statement code is: doubleArray[1] = (-1.5294442819002523)
statement is: org.evosuite.testcase.statements.AssignmentStatement@883b763c type is: class org.evosuite.testcase.statements.AssignmentStatement return type double
statement code is: doubleArray[2] = (-1.9294442819002526)
statement is: org.evosuite.testcase.statements.AssignmentStatement@241be532 type is: class org.evosuite.testcase.statements.AssignmentStatement return type double
statement code is: doubleArray[3] = (-1.5294442819002523)
statement is: org.evosuite.testcase.statements.AssignmentStatement@42045701 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class [D
statement code is: doubleArray[0] = doubleArray
statement is: org.evosuite.testcase.statements.ArrayStatement@b7ab0b9 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [Ljava.lang.String;
statement code is: String[] stringArray = new String[7]
statement is: de.progra.charting.model.EditableChartDataModel([[D[D[Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.progra.charting.model.EditableChartDataModel
statement code is: EditableChartDataModel editableChartDataModel = new EditableChartDataModel(arg0, arg1, arg2)
statement is: de.progra.charting.CoordSystem(Lde/progra/charting/model/ChartDataModel;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.progra.charting.CoordSystem
statement code is: CoordSystem coordSystem = new CoordSystem(arg0)
statement is: org.evosuite.testcase.statements.FieldStatement@8102d989 type is: class org.evosuite.testcase.statements.FieldStatement return type class de.progra.charting.CoordSystemUtilities
statement code is: CoordSystemUtilities coordSystemUtilities = coordSystem.c
statement is: drawYAxisTicks(Ljava/awt/Graphics2D;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: coordSystemUtilities.drawYAxisTicks((Graphics2D) null)
test data is: double[][] doubleArray = new double[1][7];
double[] doubleArray = new double[4];
doubleArray[0] = (-1.9294442819002526);
doubleArray[1] = (-1.5294442819002523);
doubleArray[2] = (-1.9294442819002526);
doubleArray[3] = (-1.5294442819002523);
doubleArray[0] = doubleArray;
String[] stringArray = new String[7];
EditableChartDataModel editableChartDataModel = new EditableChartDataModel(doubleArray, doubleArray, stringArray);
CoordSystem coordSystem = new CoordSystem(editableChartDataModel);
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
coordSystemUtilities.drawYAxisTicks((Graphics2D) null);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        double[][] doubleArray = new double[1][7];
        doubleArray[0][0] = -1.9294442819002526;
        doubleArray[0][1] = -1.5294442819002523;
        doubleArray[0][2] = -1.9294442819002526;
        doubleArray[0][3] = -1.5294442819002523;
        doubleArray[0][4] = -1.9294442819002526;
        doubleArray[0][5] = -1.5294442819002523;
        doubleArray[0][6] = -1.9294442819002526;
        String[] stringArray = new String[7];
        EditableChartDataModel editableChartDataModel = new EditableChartDataModel(doubleArray, doubleArray, stringArray);
        CoordSystem coordSystem = new CoordSystem(editableChartDataModel);
        CoordSystemUtilities coordSystemUtilities = coordSystem.c;
        coordSystemUtilities.drawYAxisTicks(((Graphics2D) (null)));
    }
}
statement is: double[][] doubleArray = new double[1][7], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [1, 7] Ct is: double[][] doubleArray = new double[1][7] isAssignment: false Array: new double[1][7] Elements: []
lengths: [1, 7] [1, 7]
Their type are: class [[D double[][]
statement is: doubleArray[0][0] = -1.9294442819002526, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : doubleArray[0][0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl double Assignment:-1.9294442819002526 Ct is: doubleArray[0][0] = -1.9294442819002526
target : doubleArray[0] class spoon.support.reflect.code.CtLiteralImpl
statement is: doubleArray[0][1] = -1.5294442819002523, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : doubleArray[0][1] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl double Assignment:-1.5294442819002523 Ct is: doubleArray[0][1] = -1.5294442819002523
target : doubleArray[0] class spoon.support.reflect.code.CtLiteralImpl
statement is: doubleArray[0][2] = -1.9294442819002526, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : doubleArray[0][2] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl double Assignment:-1.9294442819002526 Ct is: doubleArray[0][2] = -1.9294442819002526
target : doubleArray[0] class spoon.support.reflect.code.CtLiteralImpl
statement is: doubleArray[0][3] = -1.5294442819002523, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : doubleArray[0][3] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl double Assignment:-1.5294442819002523 Ct is: doubleArray[0][3] = -1.5294442819002523
target : doubleArray[0] class spoon.support.reflect.code.CtLiteralImpl
statement is: doubleArray[0][4] = -1.9294442819002526, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : doubleArray[0][4] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl double Assignment:-1.9294442819002526 Ct is: doubleArray[0][4] = -1.9294442819002526
target : doubleArray[0] class spoon.support.reflect.code.CtLiteralImpl
statement is: doubleArray[0][5] = -1.5294442819002523, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : doubleArray[0][5] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl double Assignment:-1.5294442819002523 Ct is: doubleArray[0][5] = -1.5294442819002523
target : doubleArray[0] class spoon.support.reflect.code.CtLiteralImpl
statement is: doubleArray[0][6] = -1.9294442819002526, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : doubleArray[0][6] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl double Assignment:-1.9294442819002526 Ct is: doubleArray[0][6] = -1.9294442819002526
target : doubleArray[0] class spoon.support.reflect.code.CtLiteralImpl
statement is: String[] stringArray = new String[7], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [7] Ct is: double[][] doubleArray = new double[1][7] isAssignment: false Array: new String[7] Elements: []
lengths: [1, 7] [7]
Dimension: [7] Ct is: double[] doubleArray = new double[4] isAssignment: false Array: new String[7] Elements: []
lengths: [4] [7]
Their type are: class [D String[]
Dimension: [7] Ct is: String[] stringArray = new String[7] isAssignment: false Array: new String[7] Elements: []
lengths: [7] [7]
Their type are: class [Ljava.lang.String; String[]
statement is: EditableChartDataModel editableChartDataModel = new EditableChartDataModel(doubleArray, doubleArray, stringArray), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: CoordSystem coordSystem = new CoordSystem(editableChartDataModel), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: CoordSystemUtilities coordSystemUtilities = coordSystem.c, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: coordSystem.c is coordSystem
CtField is: protected de.progra.charting.CoordSystemUtilities de.progra.charting.CoordSystem.c CoordSystemUtilities c
statement is: coordSystemUtilities.drawYAxisTicks(((Graphics2D) (null))), class spoon.support.reflect.code.CtInvocationImpl
invocation is: coordSystemUtilities.drawYAxisTicks(((Graphics2D) (null))) target is: coordSystemUtilities method is: drawYAxisTicks(Graphics2D)
TestCase is: double[][] doubleArray = new double[1][7];
String[] stringArray = new String[7];
EditableChartDataModel editableChartDataModel = new EditableChartDataModel(doubleArray, (double[]) doubleArray, stringArray);
CoordSystem coordSystem = new CoordSystem(editableChartDataModel);

statement is: org.evosuite.testcase.statements.ArrayStatement@e35c692a type is: class org.evosuite.testcase.statements.ArrayStatement return type class [[D
statement code is: double[][] doubleArray = new double[1][7]
statement is: org.evosuite.testcase.statements.ArrayStatement@5ffa422c type is: class org.evosuite.testcase.statements.ArrayStatement return type class [D
statement code is: double[] doubleArray = new double[4]
statement is: org.evosuite.testcase.statements.AssignmentStatement@ca59c73 type is: class org.evosuite.testcase.statements.AssignmentStatement return type double
statement code is: doubleArray[0] = (-1.9294442819002526)
statement is: org.evosuite.testcase.statements.AssignmentStatement@295c125e type is: class org.evosuite.testcase.statements.AssignmentStatement return type double
statement code is: doubleArray[1] = (-1.5294442819002523)
statement is: org.evosuite.testcase.statements.AssignmentStatement@ef6e4507 type is: class org.evosuite.testcase.statements.AssignmentStatement return type double
statement code is: doubleArray[2] = (-1.9294442819002526)
statement is: org.evosuite.testcase.statements.AssignmentStatement@1e438267 type is: class org.evosuite.testcase.statements.AssignmentStatement return type double
statement code is: doubleArray[3] = (-1.5294442819002523)
statement is: org.evosuite.testcase.statements.AssignmentStatement@2f58e97f type is: class org.evosuite.testcase.statements.AssignmentStatement return type class [D
statement code is: doubleArray[0] = doubleArray
statement is: org.evosuite.testcase.statements.ArrayStatement@ef7e2d8b type is: class org.evosuite.testcase.statements.ArrayStatement return type class [Ljava.lang.String;
statement code is: String[] stringArray = new String[7]
statement is: de.progra.charting.model.EditableChartDataModel([[D[D[Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.progra.charting.model.EditableChartDataModel
statement code is: EditableChartDataModel editableChartDataModel = new EditableChartDataModel(arg0, arg1, arg2)
statement is: de.progra.charting.CoordSystem(Lde/progra/charting/model/ChartDataModel;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.progra.charting.CoordSystem
statement code is: CoordSystem coordSystem = new CoordSystem(arg0)
statement is: de.progra.charting.model.DefaultChartDataModelConstraints(Lde/progra/charting/model/AbstractChartDataModel;I)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.progra.charting.model.DefaultChartDataModelConstraints
statement code is: DefaultChartDataModelConstraints defaultChartDataModelConstraints = new DefaultChartDataModelConstraints(arg0, 0)
statement is: de.progra.charting.Axis(ILde/progra/charting/model/ChartDataModelConstraints;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.progra.charting.Axis
statement code is: Axis axis = new Axis(15, arg1)
statement is: setSecondYAxis(Lde/progra/charting/Axis;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: coordSystem.setSecondYAxis(arg0)
statement is: org.evosuite.testcase.statements.FieldStatement@1d1086a3 type is: class org.evosuite.testcase.statements.FieldStatement return type class de.progra.charting.CoordSystemUtilities
statement code is: CoordSystemUtilities coordSystemUtilities = coordSystem.c
statement is: drawYAxisTicks(Ljava/awt/Graphics2D;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: coordSystemUtilities.drawYAxisTicks((Graphics2D) null)
test data is: double[][] doubleArray = new double[1][7];
double[] doubleArray = new double[4];
doubleArray[0] = (-1.9294442819002526);
doubleArray[1] = (-1.5294442819002523);
doubleArray[2] = (-1.9294442819002526);
doubleArray[3] = (-1.5294442819002523);
doubleArray[0] = doubleArray;
String[] stringArray = new String[7];
EditableChartDataModel editableChartDataModel = new EditableChartDataModel(doubleArray, doubleArray, stringArray);
CoordSystem coordSystem = new CoordSystem(editableChartDataModel);
DefaultChartDataModelConstraints defaultChartDataModelConstraints = new DefaultChartDataModelConstraints(editableChartDataModel, 0);
Axis axis = new Axis(15, defaultChartDataModelConstraints);
coordSystem.setSecondYAxis(axis);
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
coordSystemUtilities.drawYAxisTicks((Graphics2D) null);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        double[][] doubleArray = new double[1][7];
        double[] doubleArray = new double[4];
        doubleArray[0] = -1.9294442819002526;
        doubleArray[1] = -1.5294442819002523;
        doubleArray[2] = -1.9294442819002526;
        doubleArray[3] = -1.5294442819002523;
        doubleArray[0] = doubleArray;
        String[] stringArray = new String[7];
        EditableChartDataModel editableChartDataModel = new EditableChartDataModel(doubleArray, doubleArray, stringArray);
        CoordSystem coordSystem = new CoordSystem(editableChartDataModel);
        DefaultChartDataModelConstraints defaultChartDataModelConstraints = new DefaultChartDataModelConstraints(editableChartDataModel, 0);
        Axis axis = new Axis(15, defaultChartDataModelConstraints);
        coordSystem.setSecondYAxis(axis);
        CoordSystemUtilities coordSystemUtilities = coordSystem.c;
        coordSystemUtilities.drawYAxisTicks(((Graphics2D) (null)));
    }
}
statement is: double[][] doubleArray = new double[1][7], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [1, 7] Ct is: double[][] doubleArray = new double[1][7] isAssignment: false Array: new double[1][7] Elements: []
lengths: [1, 7] [1, 7]
Their type are: class [[D double[][]
statement is: double[] doubleArray = new double[4], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [4] Ct is: double[][] doubleArray = new double[1][7] isAssignment: false Array: new double[4] Elements: []
lengths: [1, 7] [4]
Dimension: [4] Ct is: double[] doubleArray = new double[4] isAssignment: false Array: new double[4] Elements: []
lengths: [4] [4]
Their type are: class [D double[]
statement is: doubleArray[0] = -1.9294442819002526, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : doubleArray[0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl double Assignment:-1.9294442819002526 Ct is: doubleArray[0] = -1.9294442819002526
target : doubleArray class spoon.support.reflect.code.CtLiteralImpl
statement is: doubleArray[1] = -1.5294442819002523, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : doubleArray[1] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl double Assignment:-1.5294442819002523 Ct is: doubleArray[1] = -1.5294442819002523
target : doubleArray class spoon.support.reflect.code.CtLiteralImpl
statement is: doubleArray[2] = -1.9294442819002526, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : doubleArray[2] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl double Assignment:-1.9294442819002526 Ct is: doubleArray[2] = -1.9294442819002526
target : doubleArray class spoon.support.reflect.code.CtLiteralImpl
statement is: doubleArray[3] = -1.5294442819002523, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : doubleArray[3] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl double Assignment:-1.5294442819002523 Ct is: doubleArray[3] = -1.5294442819002523
target : doubleArray class spoon.support.reflect.code.CtLiteralImpl
statement is: doubleArray[0] = doubleArray, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : doubleArray[0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl double Assignment:doubleArray Ct is: doubleArray[0] = doubleArray
target : doubleArray class spoon.support.reflect.code.CtLiteralImpl
statement is: String[] stringArray = new String[7], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [7] Ct is: double[][] doubleArray = new double[1][7] isAssignment: false Array: new String[7] Elements: []
lengths: [1, 7] [7]
Dimension: [7] Ct is: double[] doubleArray = new double[4] isAssignment: false Array: new String[7] Elements: []
lengths: [4] [7]
Their type are: class [D String[]
Dimension: [7] Ct is: String[] stringArray = new String[7] isAssignment: false Array: new String[7] Elements: []
lengths: [7] [7]
Their type are: class [Ljava.lang.String; String[]
statement is: EditableChartDataModel editableChartDataModel = new EditableChartDataModel(doubleArray, doubleArray, stringArray), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: CoordSystem coordSystem = new CoordSystem(editableChartDataModel), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: DefaultChartDataModelConstraints defaultChartDataModelConstraints = new DefaultChartDataModelConstraints(editableChartDataModel, 0), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Axis axis = new Axis(15, defaultChartDataModelConstraints), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: coordSystem.setSecondYAxis(axis), class spoon.support.reflect.code.CtInvocationImpl
invocation is: coordSystem.setSecondYAxis(axis) target is: coordSystem method is: setSecondYAxis(Axis)
source statement: de.progra.charting.CoordSystem(Lde/progra/charting/model/ChartDataModel;)V callee: VariableReference: Statement 9, type de.progra.charting.CoordSystemindex is: 9
Matched Method is: setSecondYAxis(Lde/progra/charting/Axis;)V
statement is: CoordSystemUtilities coordSystemUtilities = coordSystem.c, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: coordSystem.c is coordSystem
CtField is: protected de.progra.charting.CoordSystemUtilities de.progra.charting.CoordSystem.c CoordSystemUtilities c
statement is: coordSystemUtilities.drawYAxisTicks(((Graphics2D) (null))), class spoon.support.reflect.code.CtInvocationImpl
invocation is: coordSystemUtilities.drawYAxisTicks(((Graphics2D) (null))) target is: coordSystemUtilities method is: drawYAxisTicks(Graphics2D)
TestCase is: double[][] doubleArray = new double[1][7];
double[] doubleArray = new double[4];
doubleArray[0] = (-1.9294442819002526);
doubleArray[1] = (-1.5294442819002523);
doubleArray[2] = (-1.9294442819002526);
doubleArray[3] = (-1.5294442819002523);
doubleArray[0] = (double) doubleArray;
String[] stringArray = new String[7];
EditableChartDataModel editableChartDataModel = new EditableChartDataModel((double[][]) doubleArray, doubleArray, stringArray);
CoordSystem coordSystem = new CoordSystem(editableChartDataModel);
int _int = 0;
DefaultChartDataModelConstraints defaultChartDataModelConstraints = new DefaultChartDataModelConstraints(editableChartDataModel, _int);
int _int = 15;
Axis axis = new Axis(_int, defaultChartDataModelConstraints);
coordSystem.setSecondYAxis(axis);

statement is: de.progra.charting.model.ObjectChartDataModel()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.progra.charting.model.ObjectChartDataModel
statement code is: ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel()
statement is: de.progra.charting.CoordSystem(Lde/progra/charting/model/ChartDataModel;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.progra.charting.CoordSystem
statement code is: CoordSystem coordSystem = new CoordSystem(arg0)
statement is: org.evosuite.testcase.statements.FieldStatement@56f8b6f3 type is: class org.evosuite.testcase.statements.FieldStatement return type class de.progra.charting.CoordSystemUtilities
statement code is: CoordSystemUtilities coordSystemUtilities = coordSystem.c
statement is: getRotateInstance(DDD)Ljava/awt/geom/AffineTransform; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.awt.geom.AffineTransform
statement code is: AffineTransform rotateInstance = AffineTransform.getRotateInstance((double) 20, (double) 0, (double) 15)
statement is: org.evosuite.testcase.statements.AssignmentStatement@66e08c7d type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.awt.geom.AffineTransform
statement code is: coordSystem.y1transform = affineTransform
statement is: java.awt.image.BufferedImage(III)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.awt.image.BufferedImage
statement code is: BufferedImage bufferedImage = new BufferedImage(15, 20, 1)
statement is: createGraphics()Ljava/awt/Graphics2D; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.awt.Graphics2D
statement code is: Graphics2D createGraphics = bufferedImage.createGraphics()
statement is: drawYAxisTicks(Ljava/awt/Graphics2D;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: coordSystemUtilities.drawYAxisTicks(arg0)
test data is: ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel();
CoordSystem coordSystem = new CoordSystem(objectChartDataModel);
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
AffineTransform rotateInstance = AffineTransform.getRotateInstance((double) 20, (double) 0, (double) 15);
coordSystem.y1transform = rotateInstance;
BufferedImage bufferedImage = new BufferedImage(15, 20, 1);
Graphics2D createGraphics = bufferedImage.createGraphics();
coordSystemUtilities.drawYAxisTicks(createGraphics);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel();
        CoordSystem coordSystem = new CoordSystem(objectChartDataModel);
        CoordSystemUtilities coordSystemUtilities = coordSystem.c;
        AffineTransform rotateInstance = AffineTransform.getRotateInstance(((double) (45)), ((double) (10)), ((double) (20)));
        coordSystem.y1transform = rotateInstance;
        BufferedImage bufferedImage = new BufferedImage(30, 40, 1);
        Graphics2D createGraphics = bufferedImage.createGraphics();
        coordSystemUtilities.drawYAxisTicks(createGraphics);
    }
}
statement is: ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: CoordSystem coordSystem = new CoordSystem(objectChartDataModel), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: CoordSystemUtilities coordSystemUtilities = coordSystem.c, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: coordSystem.c is coordSystem
CtField is: protected de.progra.charting.CoordSystemUtilities de.progra.charting.CoordSystem.c CoordSystemUtilities c
statement is: AffineTransform rotateInstance = AffineTransform.getRotateInstance(((double) (45)), ((double) (10)), ((double) (20))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: AffineTransform.getRotateInstance(((double) (45)), ((double) (10)), ((double) (20))) target is: AffineTransform method is: getRotateInstance(double,double,double)
Matched Method is: getRotateInstance(DDD)Ljava/awt/geom/AffineTransform;
statement is: coordSystem.y1transform = rotateInstance, class spoon.support.reflect.code.CtAssignmentImpl
statement is: BufferedImage bufferedImage = new BufferedImage(30, 40, 1), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Graphics2D createGraphics = bufferedImage.createGraphics(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: bufferedImage.createGraphics() target is: bufferedImage method is: createGraphics()
source statement: java.awt.image.BufferedImage(III)V callee: VariableReference: Statement 5, type java.awt.image.BufferedImageindex is: 9
Matched Method is: createGraphics()Ljava/awt/Graphics2D;
statement is: coordSystemUtilities.drawYAxisTicks(createGraphics), class spoon.support.reflect.code.CtInvocationImpl
invocation is: coordSystemUtilities.drawYAxisTicks(createGraphics) target is: coordSystemUtilities method is: drawYAxisTicks(Graphics2D)
TestCase is: ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel();
CoordSystem coordSystem = new CoordSystem(objectChartDataModel);
int _int = 45;
int _int = 10;
int _int = 20;
AffineTransform rotateInstance = AffineTransform.getRotateInstance((double) _int, (double) _int, (double) _int);
int _int = 30;
int _int = 40;
int _int = 1;
BufferedImage bufferedImage = new BufferedImage(_int, _int, _int);
((BufferedImage) rotateInstance).createGraphics();

statement is: de.progra.charting.model.ObjectChartDataModel()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.progra.charting.model.ObjectChartDataModel
statement code is: ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel()
statement is: de.progra.charting.CoordSystem(Lde/progra/charting/model/ChartDataModel;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.progra.charting.CoordSystem
statement code is: CoordSystem coordSystem = new CoordSystem(arg0)
statement is: org.evosuite.testcase.statements.FieldStatement@72cec8e9 type is: class org.evosuite.testcase.statements.FieldStatement return type class de.progra.charting.CoordSystemUtilities
statement code is: CoordSystemUtilities coordSystemUtilities = coordSystem.c
statement is: getRotateInstance(DDD)Ljava/awt/geom/AffineTransform; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.awt.geom.AffineTransform
statement code is: AffineTransform rotateInstance = AffineTransform.getRotateInstance((double) 20, (double) 0, (double) 15)
statement is: org.evosuite.testcase.statements.AssignmentStatement@68975cbb type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.awt.geom.AffineTransform
statement code is: coordSystem.y1transform = affineTransform
statement is: java.awt.image.BufferedImage(III)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.awt.image.BufferedImage
statement code is: BufferedImage bufferedImage = new BufferedImage(15, 20, 1)
statement is: org.evosuite.testcase.statements.AssignmentStatement@bdd00890 type is: class org.evosuite.testcase.statements.AssignmentStatement return type boolean
statement code is: coordSystem.shouldPaintOnlyTick = false
statement is: createGraphics()Ljava/awt/Graphics2D; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.awt.Graphics2D
statement code is: Graphics2D createGraphics = bufferedImage.createGraphics()
statement is: drawYAxisTicks(Ljava/awt/Graphics2D;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: coordSystemUtilities.drawYAxisTicks(arg0)
test data is: ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel();
CoordSystem coordSystem = new CoordSystem(objectChartDataModel);
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
AffineTransform rotateInstance = AffineTransform.getRotateInstance((double) 20, (double) 0, (double) 15);
coordSystem.y1transform = rotateInstance;
BufferedImage bufferedImage = new BufferedImage(15, 20, 1);
coordSystem.shouldPaintOnlyTick = false;
Graphics2D createGraphics = bufferedImage.createGraphics();
coordSystemUtilities.drawYAxisTicks(createGraphics);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel();
        CoordSystem coordSystem = new CoordSystem(objectChartDataModel);
        CoordSystemUtilities coordSystemUtilities = coordSystem.c;
        AffineTransform rotateInstance = AffineTransform.getRotateInstance(((double) (20)), ((double) (0)), ((double) (15)));
        coordSystem.y1transform = rotateInstance;
        BufferedImage bufferedImage = new BufferedImage(15, 20, 1);
        coordSystem.shouldPaintOnlyTick = false;
        Graphics2D createGraphics = bufferedImage.createGraphics();
        coordSystemUtilities.drawYAxisTicks(createGraphics);
    }
}
statement is: ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: CoordSystem coordSystem = new CoordSystem(objectChartDataModel), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: CoordSystemUtilities coordSystemUtilities = coordSystem.c, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: coordSystem.c is coordSystem
CtField is: protected de.progra.charting.CoordSystemUtilities de.progra.charting.CoordSystem.c CoordSystemUtilities c
statement is: AffineTransform rotateInstance = AffineTransform.getRotateInstance(((double) (20)), ((double) (0)), ((double) (15))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: AffineTransform.getRotateInstance(((double) (20)), ((double) (0)), ((double) (15))) target is: AffineTransform method is: getRotateInstance(double,double,double)
Matched Method is: getRotateInstance(DDD)Ljava/awt/geom/AffineTransform;
statement is: coordSystem.y1transform = rotateInstance, class spoon.support.reflect.code.CtAssignmentImpl
statement is: BufferedImage bufferedImage = new BufferedImage(15, 20, 1), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: coordSystem.shouldPaintOnlyTick = false, class spoon.support.reflect.code.CtAssignmentImpl
statement is: Graphics2D createGraphics = bufferedImage.createGraphics(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: bufferedImage.createGraphics() target is: bufferedImage method is: createGraphics()
source statement: java.awt.image.BufferedImage(III)V callee: VariableReference: Statement 5, type java.awt.image.BufferedImageindex is: 9
Matched Method is: createGraphics()Ljava/awt/Graphics2D;
statement is: coordSystemUtilities.drawYAxisTicks(createGraphics), class spoon.support.reflect.code.CtInvocationImpl
invocation is: coordSystemUtilities.drawYAxisTicks(createGraphics) target is: coordSystemUtilities method is: drawYAxisTicks(Graphics2D)
TestCase is: ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel();
CoordSystem coordSystem = new CoordSystem(objectChartDataModel);
int _int = 20;
int _int = 0;
int _int = 15;
AffineTransform rotateInstance = AffineTransform.getRotateInstance((double) _int, (double) _int, (double) _int);
int _int = 15;
int _int = 20;
int _int = 1;
BufferedImage bufferedImage = new BufferedImage(_int, _int, _int);
((BufferedImage) rotateInstance).createGraphics();

statement is: org.evosuite.testcase.statements.ArrayStatement@9a00f555 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [[D
statement code is: double[][] doubleArray = new double[1][3]
statement is: org.evosuite.testcase.statements.ArrayStatement@efc12aec type is: class org.evosuite.testcase.statements.ArrayStatement return type class [D
statement code is: double[] doubleArray = new double[1]
statement is: org.evosuite.testcase.statements.AssignmentStatement@90b76ab2 type is: class org.evosuite.testcase.statements.AssignmentStatement return type double
statement code is: doubleArray[0] = 6.0
statement is: org.evosuite.testcase.statements.AssignmentStatement@b95baba6 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class [D
statement code is: doubleArray[0] = doubleArray
statement is: org.evosuite.testcase.statements.ArrayStatement@f1b46d73 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [Ljava.lang.String;
statement code is: String[] stringArray = new String[4]
statement is: de.progra.charting.model.ObjectChartDataModel([[D[Ljava/lang/Object;[Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.progra.charting.model.ObjectChartDataModel
statement code is: ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel(arg1, arg1, arg2)
statement is: java.text.DecimalFormat(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.text.DecimalFormat
statement code is: DecimalFormat decimalFormat = new DecimalFormat("]E2")
statement is: de.progra.charting.CoordSystem(Lde/progra/charting/model/ChartDataModel;Ljava/text/DecimalFormat;ZZZ)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.progra.charting.CoordSystem
statement code is: CoordSystem coordSystem = new CoordSystem(arg0, arg1, false, false, true)
statement is: org.evosuite.testcase.statements.FieldStatement@4e22aebd type is: class org.evosuite.testcase.statements.FieldStatement return type class de.progra.charting.CoordSystemUtilities
statement code is: CoordSystemUtilities coordSystemUtilities = coordSystem.c
statement is: getXAxisLine2D()Ljava/awt/geom/Line2D; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.awt.geom.Line2D
statement code is: Line2D xAxisLine2D = coordSystemUtilities.getXAxisLine2D()
test data is: double[][] doubleArray = new double[1][3];
double[] doubleArray = new double[1];
doubleArray[0] = 6.0;
doubleArray[0] = doubleArray;
String[] stringArray = new String[4];
ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel(doubleArray, doubleArray, stringArray);
DecimalFormat decimalFormat = new DecimalFormat("]E2");
CoordSystem coordSystem = new CoordSystem(objectChartDataModel, decimalFormat, false, false, true);
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
coordSystemUtilities.getXAxisLine2D();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        double[][] doubleArray = new double[2][3];
        doubleArray[0] = new double[]{ 1.2, 2.5, 4.8 };
        doubleArray[1] = new double[]{ 6.7, 8.9, 11.2 };
        String[] stringArray = new String[4];
        stringArray[0] = "Apple";
        stringArray[1] = "Orange";
        stringArray[2] = "Banana";
        stringArray[3] = "Grape";
        ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel(doubleArray, doubleArray, stringArray);
        DecimalFormat decimalFormat = new DecimalFormat("]E2");
        CoordSystem coordSystem = new CoordSystem(objectChartDataModel, decimalFormat, false, false, true);
        CoordSystemUtilities coordSystemUtilities = coordSystem.c;
        coordSystemUtilities.getXAxisLine2D();
    }
}
statement is: double[][] doubleArray = new double[2][3], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [2, 3] Ct is: double[][] doubleArray = new double[1][3] isAssignment: false Array: new double[2][3] Elements: []
lengths: [1, 3] [2, 3]
Their type are: class [[D double[][]
statement is: doubleArray[0] = new double[]{ 1.2, 2.5, 4.8 }, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : doubleArray[0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl double[] Assignment:new double[]{ 1.2, 2.5, 4.8 } Ct is: doubleArray[0] = new double[]{ 1.2, 2.5, 4.8 }
target : doubleArray class spoon.support.reflect.code.CtLiteralImpl
TestCase Could not be added: org.evosuite.testcase.statements.AssignmentStatement@dfdc49c0
statement is: doubleArray[1] = new double[]{ 6.7, 8.9, 11.2 }, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : doubleArray[1] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl double[] Assignment:new double[]{ 6.7, 8.9, 11.2 } Ct is: doubleArray[1] = new double[]{ 6.7, 8.9, 11.2 }
target : doubleArray class spoon.support.reflect.code.CtLiteralImpl
TestCase Could not be added: org.evosuite.testcase.statements.AssignmentStatement@dfdc49c0
statement is: String[] stringArray = new String[4], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [4] Ct is: double[][] doubleArray = new double[1][3] isAssignment: false Array: new String[4] Elements: []
lengths: [1, 3] [4]
Dimension: [4] Ct is: double[] doubleArray = new double[1] isAssignment: false Array: new String[4] Elements: []
lengths: [1] [4]
Their type are: class [D String[]
Dimension: [4] Ct is: String[] stringArray = new String[4] isAssignment: false Array: new String[4] Elements: []
lengths: [4] [4]
Their type are: class [Ljava.lang.String; String[]
statement is: stringArray[0] = "Apple", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"Apple" Ct is: stringArray[0] = "Apple"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[1] = "Orange", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[1] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"Orange" Ct is: stringArray[1] = "Orange"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[2] = "Banana", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[2] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"Banana" Ct is: stringArray[2] = "Banana"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[3] = "Grape", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[3] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"Grape" Ct is: stringArray[3] = "Grape"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel(doubleArray, doubleArray, stringArray), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: DecimalFormat decimalFormat = new DecimalFormat("]E2"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: CoordSystem coordSystem = new CoordSystem(objectChartDataModel, decimalFormat, false, false, true), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: CoordSystemUtilities coordSystemUtilities = coordSystem.c, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: coordSystem.c is coordSystem
CtField is: protected de.progra.charting.CoordSystemUtilities de.progra.charting.CoordSystem.c CoordSystemUtilities c
statement is: coordSystemUtilities.getXAxisLine2D(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: coordSystemUtilities.getXAxisLine2D() target is: coordSystemUtilities method is: getXAxisLine2D()
TestCase is: double[][] doubleArray = new double[1][3];
String[] stringArray = new String[4];
ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel(doubleArray, doubleArray, stringArray);
String string = "]E2";
DecimalFormat decimalFormat = new DecimalFormat(string);
boolean _boolean = false;
boolean _boolean = false;
boolean _boolean = true;
CoordSystem coordSystem = new CoordSystem(objectChartDataModel, decimalFormat, _boolean, _boolean, _boolean);

statement is: org.evosuite.testcase.statements.ArrayStatement@35a62b7e type is: class org.evosuite.testcase.statements.ArrayStatement return type class [[D
statement code is: double[][] doubleArray = new double[1][7]
statement is: org.evosuite.testcase.statements.ArrayStatement@49c544b7 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [D
statement code is: double[] doubleArray = new double[4]
statement is: org.evosuite.testcase.statements.AssignmentStatement@abc91369 type is: class org.evosuite.testcase.statements.AssignmentStatement return type double
statement code is: doubleArray[0] = (-1.9294442819002526)
statement is: org.evosuite.testcase.statements.AssignmentStatement@efc3f1f8 type is: class org.evosuite.testcase.statements.AssignmentStatement return type double
statement code is: doubleArray[1] = (-1.5294442819002523)
statement is: org.evosuite.testcase.statements.AssignmentStatement@204d2d5d type is: class org.evosuite.testcase.statements.AssignmentStatement return type double
statement code is: doubleArray[2] = (-1.9294442819002526)
statement is: org.evosuite.testcase.statements.AssignmentStatement@7107d0c4 type is: class org.evosuite.testcase.statements.AssignmentStatement return type double
statement code is: doubleArray[3] = (-1.9294442819002526)
statement is: org.evosuite.testcase.statements.AssignmentStatement@2fa48dd1 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class [D
statement code is: doubleArray[0] = doubleArray
statement is: org.evosuite.testcase.statements.ArrayStatement@5296cfb4 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [Ljava.lang.String;
statement code is: String[] stringArray = new String[7]
statement is: de.progra.charting.model.EditableChartDataModel([[D[D[Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.progra.charting.model.EditableChartDataModel
statement code is: EditableChartDataModel editableChartDataModel = new EditableChartDataModel(arg0, arg1, arg2)
statement is: de.progra.charting.CoordSystem(Lde/progra/charting/model/ChartDataModel;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.progra.charting.CoordSystem
statement code is: CoordSystem coordSystem = new CoordSystem(arg0)
statement is: org.evosuite.testcase.statements.FieldStatement@8ec9152 type is: class org.evosuite.testcase.statements.FieldStatement return type class de.progra.charting.CoordSystemUtilities
statement code is: CoordSystemUtilities coordSystemUtilities = coordSystem.c
statement is: getXAxisLine2D()Ljava/awt/geom/Line2D; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.awt.geom.Line2D
statement code is: Line2D xAxisLine2D = coordSystemUtilities.getXAxisLine2D()
test data is: double[][] doubleArray = new double[1][7];
double[] doubleArray = new double[4];
doubleArray[0] = (-1.9294442819002526);
doubleArray[1] = (-1.5294442819002523);
doubleArray[2] = (-1.9294442819002526);
doubleArray[3] = (-1.9294442819002526);
doubleArray[0] = doubleArray;
String[] stringArray = new String[7];
EditableChartDataModel editableChartDataModel = new EditableChartDataModel(doubleArray, doubleArray, stringArray);
CoordSystem coordSystem = new CoordSystem(editableChartDataModel);
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
coordSystemUtilities.getXAxisLine2D();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        and = $missing$;
    }
}
statement is: and = $missing$, class spoon.support.reflect.code.CtAssignmentImpl
statement is: org.evosuite.testcase.statements.ArrayStatement@b9ce97a5 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [[Ljava.lang.Number;
statement code is: Number[][] numberArray = new Number[1][3]
statement is: org.evosuite.testcase.statements.ArrayStatement@d6ae1ae6 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [Ljava.lang.Number;
statement code is: Number[] numberArray = new Number[2]
statement is: org.evosuite.testcase.statements.FieldStatement@e99a2837 type is: class org.evosuite.testcase.statements.FieldStatement return type class java.lang.Integer
statement code is: Integer integer = JLayeredPane.PALETTE_LAYER
statement is: org.evosuite.testcase.statements.AssignmentStatement@1cfe3deb type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.Number
statement code is: numberArray[0] = (Number) integer
statement is: org.evosuite.testcase.statements.AssignmentStatement@692eb230 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.Number
statement code is: numberArray[1] = (Number) integer
statement is: org.evosuite.testcase.statements.AssignmentStatement@140da47d type is: class org.evosuite.testcase.statements.AssignmentStatement return type class [Ljava.lang.Number;
statement code is: numberArray[0] = numberArray
statement is: org.evosuite.testcase.statements.ArrayStatement@11248a7c type is: class org.evosuite.testcase.statements.ArrayStatement return type class [D
statement code is: double[] doubleArray = new double[3]
statement is: org.evosuite.testcase.statements.AssignmentStatement@ab82aefd type is: class org.evosuite.testcase.statements.AssignmentStatement return type double
statement code is: doubleArray[0] = (double) 20
statement is: org.evosuite.testcase.statements.AssignmentStatement@91cf86f4 type is: class org.evosuite.testcase.statements.AssignmentStatement return type double
statement code is: doubleArray[1] = (double) 20
statement is: org.evosuite.testcase.statements.AssignmentStatement@88d45ff2 type is: class org.evosuite.testcase.statements.AssignmentStatement return type double
statement code is: doubleArray[2] = (double) 20
statement is: org.evosuite.testcase.statements.ArrayStatement@b0f3e99e type is: class org.evosuite.testcase.statements.ArrayStatement return type class [Ljava.lang.String;
statement code is: String[] stringArray = new String[8]
statement is: de.progra.charting.model.DefaultChartDataModel([[Ljava/lang/Number;[D[Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.progra.charting.model.DefaultChartDataModel
statement code is: DefaultChartDataModel defaultChartDataModel = new DefaultChartDataModel(arg0, arg1, arg2)
statement is: de.progra.charting.CoordSystem(Lde/progra/charting/model/ChartDataModel;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.progra.charting.CoordSystem
statement code is: CoordSystem coordSystem = new CoordSystem(arg0)
statement is: org.evosuite.testcase.statements.FieldStatement@38a7890a type is: class org.evosuite.testcase.statements.FieldStatement return type class de.progra.charting.CoordSystemUtilities
statement code is: CoordSystemUtilities coordSystemUtilities = coordSystem.c
statement is: getYAxisLine2D()Ljava/awt/geom/Line2D; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.awt.geom.Line2D
statement code is: Line2D yAxisLine2D = coordSystemUtilities.getYAxisLine2D()
test data is: Number[][] numberArray = new Number[1][3];
Number[] numberArray = new Number[2];
Integer integer = JLayeredPane.PALETTE_LAYER;
numberArray[0] = (Number) integer;
numberArray[1] = (Number) integer;
numberArray[0] = numberArray;
double[] doubleArray = new double[3];
doubleArray[0] = (double) 20;
doubleArray[1] = (double) 20;
doubleArray[2] = (double) 20;
String[] stringArray = new String[8];
DefaultChartDataModel defaultChartDataModel = new DefaultChartDataModel(numberArray, doubleArray, stringArray);
CoordSystem coordSystem = new CoordSystem(defaultChartDataModel);
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
coordSystemUtilities.getYAxisLine2D();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Number[][] numberArray = new Number[1][3];
        numberArray[0] = new Number[]{ 1, 2, 3 };// Use more descriptive values for the array elements

        double[] doubleArray = new double[3];
        doubleArray[0] = ((double) (20));
        doubleArray[1] = ((double) (40));
        doubleArray[2] = ((double) (60));// Use more descriptive values for the array elements

        String[] stringArray = new String[8];
        stringArray[0] = "Apple";
        stringArray[1] = "Banana";
        stringArray[2] = "Orange";
        stringArray[3] = "Mango";
        stringArray[4] = "Pear";
        stringArray[5] = "Grape";
        stringArray[6] = "Strawberry";
        stringArray[7] = "Lemon";// Use more descriptive values for the array elements

        DefaultChartDataModel defaultChartDataModel = new DefaultChartDataModel(numberArray, doubleArray, stringArray);
        CoordSystem coordSystem = new CoordSystem(defaultChartDataModel);
        CoordSystemUtilities coordSystemUtilities = coordSystem.c;
        coordSystemUtilities.getYAxisLine2D();
    }
}
statement is: Number[][] numberArray = new Number[1][3], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [1, 3] Ct is: Number[][] numberArray = new Number[1][3] isAssignment: false Array: new Number[1][3] Elements: []
lengths: [1, 3] [1, 3]
Their type are: class [[Ljava.lang.Number; Number[][]
statement is: numberArray[0] = new Number[]{ 1, 2, 3 }// Use more descriptive values for the array elements
, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : numberArray[0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl Number[] Assignment:new Number[]{ 1, 2, 3 } Ct is: numberArray[0] = new Number[]{ 1, 2, 3 }// Use more descriptive values for the array elements

target : numberArray class spoon.support.reflect.code.CtLiteralImpl
TestCase Could not be added: org.evosuite.testcase.statements.AssignmentStatement@2ae3b87
statement is: double[] doubleArray = new double[3], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [3] Ct is: Number[][] numberArray = new Number[1][3] isAssignment: false Array: new double[3] Elements: []
lengths: [1, 3] [3]
Dimension: [3] Ct is: Number[] numberArray = new Number[2] isAssignment: false Array: new double[3] Elements: []
lengths: [2] [3]
Their type are: class [Ljava.lang.Number; double[]
Dimension: [3] Ct is: double[] doubleArray = new double[3] isAssignment: false Array: new double[3] Elements: []
lengths: [3] [3]
Their type are: class [D double[]
statement is: doubleArray[0] = ((double) (20)), class spoon.support.reflect.code.CtAssignmentImpl
Assigned : doubleArray[0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl double Assignment:((double) (20)) Ct is: doubleArray[0] = ((double) (20))
target : doubleArray class spoon.support.reflect.code.CtLiteralImpl
TestCase Could not be added: org.evosuite.testcase.statements.AssignmentStatement@3b033771
statement is: doubleArray[1] = ((double) (40)), class spoon.support.reflect.code.CtAssignmentImpl
Assigned : doubleArray[1] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl double Assignment:((double) (40)) Ct is: doubleArray[1] = ((double) (40))
target : doubleArray class spoon.support.reflect.code.CtLiteralImpl
TestCase Could not be added: org.evosuite.testcase.statements.AssignmentStatement@fa9a6026
statement is: doubleArray[2] = ((double) (60))// Use more descriptive values for the array elements
, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : doubleArray[2] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl double Assignment:((double) (60)) Ct is: doubleArray[2] = ((double) (60))// Use more descriptive values for the array elements

target : doubleArray class spoon.support.reflect.code.CtLiteralImpl
TestCase Could not be added: org.evosuite.testcase.statements.AssignmentStatement@7d71a440
statement is: String[] stringArray = new String[8], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [8] Ct is: Number[][] numberArray = new Number[1][3] isAssignment: false Array: new String[8] Elements: []
lengths: [1, 3] [8]
Dimension: [8] Ct is: Number[] numberArray = new Number[2] isAssignment: false Array: new String[8] Elements: []
lengths: [2] [8]
Their type are: class [Ljava.lang.Number; String[]
Dimension: [8] Ct is: double[] doubleArray = new double[3] isAssignment: false Array: new String[8] Elements: []
lengths: [3] [8]
Their type are: class [D String[]
Dimension: [8] Ct is: String[] stringArray = new String[8] isAssignment: false Array: new String[8] Elements: []
lengths: [8] [8]
Their type are: class [Ljava.lang.String; String[]
statement is: stringArray[0] = "Apple", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"Apple" Ct is: stringArray[0] = "Apple"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[1] = "Banana", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[1] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"Banana" Ct is: stringArray[1] = "Banana"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[2] = "Orange", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[2] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"Orange" Ct is: stringArray[2] = "Orange"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[3] = "Mango", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[3] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"Mango" Ct is: stringArray[3] = "Mango"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[4] = "Pear", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[4] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"Pear" Ct is: stringArray[4] = "Pear"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[5] = "Grape", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[5] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"Grape" Ct is: stringArray[5] = "Grape"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[6] = "Strawberry", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[6] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"Strawberry" Ct is: stringArray[6] = "Strawberry"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[7] = "Lemon"// Use more descriptive values for the array elements
, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[7] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"Lemon" Ct is: stringArray[7] = "Lemon"// Use more descriptive values for the array elements

target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: DefaultChartDataModel defaultChartDataModel = new DefaultChartDataModel(numberArray, doubleArray, stringArray), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: CoordSystem coordSystem = new CoordSystem(defaultChartDataModel), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: CoordSystemUtilities coordSystemUtilities = coordSystem.c, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: coordSystem.c is coordSystem
CtField is: public static final java.lang.Integer javax.swing.JLayeredPane.PALETTE_LAYER Integer PALETTE_LAYER
CtField is: protected de.progra.charting.CoordSystemUtilities de.progra.charting.CoordSystem.c CoordSystemUtilities c
statement is: coordSystemUtilities.getYAxisLine2D(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: coordSystemUtilities.getYAxisLine2D() target is: coordSystemUtilities method is: getYAxisLine2D()
* this is vulnerable: int _int = 20
* this is vulnerable: int _int = 40
* this is vulnerable: int _int = 60
TestCase is: Number[][] numberArray = new Number[1][3];
double[] doubleArray = new double[3];
int _int = 20;
int _int = 40;
int _int = 60;
String[] stringArray = new String[8];
DefaultChartDataModel defaultChartDataModel = new DefaultChartDataModel(numberArray, doubleArray, stringArray);
CoordSystem coordSystem = new CoordSystem(defaultChartDataModel);

statement is: org.evosuite.testcase.statements.ArrayStatement@ea9590a3 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [[D
statement code is: double[][] doubleArray = new double[1][7]
statement is: org.evosuite.testcase.statements.ArrayStatement@749f6575 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [D
statement code is: double[] doubleArray = new double[4]
statement is: org.evosuite.testcase.statements.AssignmentStatement@8b96d2ac type is: class org.evosuite.testcase.statements.AssignmentStatement return type double
statement code is: doubleArray[0] = (-685.7777562423753)
statement is: org.evosuite.testcase.statements.AssignmentStatement@94547ddd type is: class org.evosuite.testcase.statements.AssignmentStatement return type double
statement code is: doubleArray[1] = (-685.7777562423753)
statement is: org.evosuite.testcase.statements.AssignmentStatement@9b7621fd type is: class org.evosuite.testcase.statements.AssignmentStatement return type double
statement code is: doubleArray[2] = (-685.7777562423753)
statement is: org.evosuite.testcase.statements.AssignmentStatement@13234d4b type is: class org.evosuite.testcase.statements.AssignmentStatement return type double
statement code is: doubleArray[3] = (-685.7777562423753)
statement is: org.evosuite.testcase.statements.ArrayStatement@3f7aba72 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [Ljava.lang.String;
statement code is: String[] stringArray = new String[7]
statement is: de.progra.charting.model.EditableChartDataModel([[D[D[Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.progra.charting.model.EditableChartDataModel
statement code is: EditableChartDataModel editableChartDataModel = new EditableChartDataModel(arg0, arg1, arg2)
statement is: de.progra.charting.CoordSystem(Lde/progra/charting/model/ChartDataModel;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.progra.charting.CoordSystem
statement code is: CoordSystem coordSystem = new CoordSystem(arg0)
statement is: org.evosuite.testcase.statements.FieldStatement@725e0a8 type is: class org.evosuite.testcase.statements.FieldStatement return type class de.progra.charting.CoordSystemUtilities
statement code is: CoordSystemUtilities coordSystemUtilities = coordSystem.c
statement is: getYAxisLine2D()Ljava/awt/geom/Line2D; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.awt.geom.Line2D
statement code is: Line2D yAxisLine2D = coordSystemUtilities.getYAxisLine2D()
test data is: double[][] doubleArray = new double[1][7];
double[] doubleArray = new double[4];
doubleArray[0] = (-685.7777562423753);
doubleArray[1] = (-685.7777562423753);
doubleArray[2] = (-685.7777562423753);
doubleArray[3] = (-685.7777562423753);
String[] stringArray = new String[7];
EditableChartDataModel editableChartDataModel = new EditableChartDataModel(doubleArray, doubleArray, stringArray);
CoordSystem coordSystem = new CoordSystem(editableChartDataModel);
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
coordSystemUtilities.getYAxisLine2D();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        double[][] doubleArray = new double[][]{ new double[]{ -685.7777562423753, -685.7777562423753, -685.7777562423753, -685.7777562423753 }, new double[]{ -685.7777562423753, -685.7777562423753, -685.7777562423753, -685.7777562423753 } };
        String[] stringArray = new String[]{ "A", "B", "C", "D" };
        EditableChartDataModel editableChartDataModel = new EditableChartDataModel(doubleArray, doubleArray, stringArray);
        CoordSystem coordSystem = new CoordSystem(editableChartDataModel);
        CoordSystemUtilities coordSystemUtilities = coordSystem.c;
        Line2D yAxisLine2D = coordSystemUtilities.getYAxisLine2D();
    }
}
statement is: double[][] doubleArray = new double[][]{ new double[]{ -685.7777562423753, -685.7777562423753, -685.7777562423753, -685.7777562423753 }, new double[]{ -685.7777562423753, -685.7777562423753, -685.7777562423753, -685.7777562423753 } }, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [] Ct is: double[][] doubleArray = new double[1][7] isAssignment: false Array: new double[][]{ new double[]{ -685.7777562423753, -685.7777562423753, -685.7777562423753, -685.7777562423753 }, new double[]{ -685.7777562423753, -685.7777562423753, -685.7777562423753, -685.7777562423753 } } Elements: [new double[]{ -685.7777562423753, -685.7777562423753, -685.7777562423753, -685.7777562423753 }, new double[]{ -685.7777562423753, -685.7777562423753, -685.7777562423753, -685.7777562423753 }]
lengths: [1, 7] []
Dimension: [] Ct is: double[] doubleArray = new double[4] isAssignment: false Array: new double[][]{ new double[]{ -685.7777562423753, -685.7777562423753, -685.7777562423753, -685.7777562423753 }, new double[]{ -685.7777562423753, -685.7777562423753, -685.7777562423753, -685.7777562423753 } } Elements: [new double[]{ -685.7777562423753, -685.7777562423753, -685.7777562423753, -685.7777562423753 }, new double[]{ -685.7777562423753, -685.7777562423753, -685.7777562423753, -685.7777562423753 }]
lengths: [4] []
Dimension: [] Ct is: String[] stringArray = new String[7] isAssignment: false Array: new double[][]{ new double[]{ -685.7777562423753, -685.7777562423753, -685.7777562423753, -685.7777562423753 }, new double[]{ -685.7777562423753, -685.7777562423753, -685.7777562423753, -685.7777562423753 } } Elements: [new double[]{ -685.7777562423753, -685.7777562423753, -685.7777562423753, -685.7777562423753 }, new double[]{ -685.7777562423753, -685.7777562423753, -685.7777562423753, -685.7777562423753 }]
lengths: [7] []
statement is: String[] stringArray = new String[]{ "A", "B", "C", "D" }, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [] Ct is: double[][] doubleArray = new double[1][7] isAssignment: false Array: new String[]{ "A", "B", "C", "D" } Elements: ["A", "B", "C", "D"]
lengths: [1, 7] []
Dimension: [] Ct is: double[] doubleArray = new double[4] isAssignment: false Array: new String[]{ "A", "B", "C", "D" } Elements: ["A", "B", "C", "D"]
lengths: [4] []
Dimension: [] Ct is: String[] stringArray = new String[7] isAssignment: false Array: new String[]{ "A", "B", "C", "D" } Elements: ["A", "B", "C", "D"]
lengths: [7] []
statement is: EditableChartDataModel editableChartDataModel = new EditableChartDataModel(doubleArray, doubleArray, stringArray), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: de.progra.charting.model.EditableChartDataModel([[D[D[Ljava/lang/String;)V
statement is: CoordSystem coordSystem = new CoordSystem(editableChartDataModel), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: de.progra.charting.CoordSystem(Lde/progra/charting/model/ChartDataModel;)V
statement is: CoordSystemUtilities coordSystemUtilities = coordSystem.c, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: coordSystem.c is coordSystem
CtField is: protected de.progra.charting.CoordSystemUtilities de.progra.charting.CoordSystem.c CoordSystemUtilities c
statement is: Line2D yAxisLine2D = coordSystemUtilities.getYAxisLine2D(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: coordSystemUtilities.getYAxisLine2D() target is: coordSystemUtilities method is: getYAxisLine2D()
statement is: org.evosuite.testcase.statements.ArrayStatement@e6587cac type is: class org.evosuite.testcase.statements.ArrayStatement return type class [[D
statement code is: double[][] doubleArray = new double[1][7]
statement is: org.evosuite.testcase.statements.ArrayStatement@94903a99 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [D
statement code is: double[] doubleArray = new double[4]
statement is: org.evosuite.testcase.statements.AssignmentStatement@ba19cf0 type is: class org.evosuite.testcase.statements.AssignmentStatement return type double
statement code is: doubleArray[0] = (-685.7777562423753)
statement is: org.evosuite.testcase.statements.AssignmentStatement@9d90b6ea type is: class org.evosuite.testcase.statements.AssignmentStatement return type double
statement code is: doubleArray[1] = (-685.7777562423753)
statement is: org.evosuite.testcase.statements.AssignmentStatement@f3cf248c type is: class org.evosuite.testcase.statements.AssignmentStatement return type double
statement code is: doubleArray[2] = (-685.7777562423753)
statement is: org.evosuite.testcase.statements.AssignmentStatement@b560ef6c type is: class org.evosuite.testcase.statements.AssignmentStatement return type double
statement code is: doubleArray[3] = (-685.7777562423753)
statement is: org.evosuite.testcase.statements.ArrayStatement@6856a4c3 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [Ljava.lang.String;
statement code is: String[] stringArray = new String[7]
statement is: de.progra.charting.model.EditableChartDataModel([[D[D[Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.progra.charting.model.EditableChartDataModel
statement code is: EditableChartDataModel editableChartDataModel = new EditableChartDataModel(arg0, arg1, arg2)
statement is: de.progra.charting.CoordSystem(Lde/progra/charting/model/ChartDataModel;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.progra.charting.CoordSystem
statement code is: CoordSystem coordSystem = new CoordSystem(arg0)
statement is: org.evosuite.testcase.statements.FieldStatement@217440f2 type is: class org.evosuite.testcase.statements.FieldStatement return type class de.progra.charting.model.DefaultChartDataModelConstraints
statement code is: DefaultChartDataModelConstraints defaultChartDataModelConstraints = (DefaultChartDataModelConstraints)coordSystem.constraints
statement is: de.progra.charting.Axis(ILde/progra/charting/model/ChartDataModelConstraints;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.progra.charting.Axis
statement code is: Axis axis = new Axis(1, arg1)
statement is: setSecondYAxis(Lde/progra/charting/Axis;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: coordSystem.setSecondYAxis(arg0)
statement is: org.evosuite.testcase.statements.FieldStatement@6c36249 type is: class org.evosuite.testcase.statements.FieldStatement return type class de.progra.charting.CoordSystemUtilities
statement code is: CoordSystemUtilities coordSystemUtilities = coordSystem.c
statement is: getYAxisLine2D()Ljava/awt/geom/Line2D; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.awt.geom.Line2D
statement code is: Line2D yAxisLine2D = coordSystemUtilities.getYAxisLine2D()
test data is: double[][] doubleArray = new double[1][7];
double[] doubleArray = new double[4];
doubleArray[0] = (-685.7777562423753);
doubleArray[1] = (-685.7777562423753);
doubleArray[2] = (-685.7777562423753);
doubleArray[3] = (-685.7777562423753);
String[] stringArray = new String[7];
EditableChartDataModel editableChartDataModel = new EditableChartDataModel(doubleArray, doubleArray, stringArray);
CoordSystem coordSystem = new CoordSystem(editableChartDataModel);
DefaultChartDataModelConstraints defaultChartDataModelConstraints = (DefaultChartDataModelConstraints)coordSystem.constraints;
Axis axis = new Axis(1, defaultChartDataModelConstraints);
coordSystem.setSecondYAxis(axis);
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
coordSystemUtilities.getYAxisLine2D();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        double[][] doubleArray = new double[1][7];
        doubleArray[0] = -1234.56;
        doubleArray[1] = 9876.12;
        doubleArray[2] = 123.45;
        doubleArray[3] = -987.65;
        String[] stringArray = new String[7];
        stringArray[0] = "apple";
        stringArray[1] = "banana";
        stringArray[2] = "orange";
        stringArray[3] = "grape";
        EditableChartDataModel editableChartDataModel = new EditableChartDataModel(doubleArray, doubleArray, stringArray);
        CoordSystem coordSystem = new CoordSystem(editableChartDataModel);
        DefaultChartDataModelConstraints defaultChartDataModelConstraints = ((DefaultChartDataModelConstraints) (coordSystem.constraints));
        Axis axis = new Axis(1, defaultChartDataModelConstraints);
        coordSystem.setSecondYAxis(axis);
        CoordSystemUtilities coordSystemUtilities = coordSystem.c;
        Line2D yAxisLine2D = coordSystemUtilities.getYAxisLine2D();
    }
}
statement is: double[][] doubleArray = new double[1][7], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [1, 7] Ct is: double[][] doubleArray = new double[1][7] isAssignment: false Array: new double[1][7] Elements: []
lengths: [1, 7] [1, 7]
Their type are: class [[D double[][]
statement is: doubleArray[0] = -1234.56, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : doubleArray[0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl double[] Assignment:-1234.56 Ct is: doubleArray[0] = -1234.56
target : doubleArray class spoon.support.reflect.code.CtLiteralImpl
statement is: doubleArray[1] = 9876.12, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : doubleArray[1] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl double[] Assignment:9876.12 Ct is: doubleArray[1] = 9876.12
target : doubleArray class spoon.support.reflect.code.CtLiteralImpl
statement is: doubleArray[2] = 123.45, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : doubleArray[2] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl double[] Assignment:123.45 Ct is: doubleArray[2] = 123.45
target : doubleArray class spoon.support.reflect.code.CtLiteralImpl
statement is: doubleArray[3] = -987.65, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : doubleArray[3] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl double[] Assignment:-987.65 Ct is: doubleArray[3] = -987.65
target : doubleArray class spoon.support.reflect.code.CtLiteralImpl
statement is: String[] stringArray = new String[7], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [7] Ct is: double[][] doubleArray = new double[1][7] isAssignment: false Array: new String[7] Elements: []
lengths: [1, 7] [7]
Dimension: [7] Ct is: double[] doubleArray = new double[4] isAssignment: false Array: new String[7] Elements: []
lengths: [4] [7]
Their type are: class [D String[]
Dimension: [7] Ct is: String[] stringArray = new String[7] isAssignment: false Array: new String[7] Elements: []
lengths: [7] [7]
Their type are: class [Ljava.lang.String; String[]
statement is: stringArray[0] = "apple", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"apple" Ct is: stringArray[0] = "apple"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[1] = "banana", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[1] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"banana" Ct is: stringArray[1] = "banana"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[2] = "orange", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[2] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"orange" Ct is: stringArray[2] = "orange"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[3] = "grape", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[3] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"grape" Ct is: stringArray[3] = "grape"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: EditableChartDataModel editableChartDataModel = new EditableChartDataModel(doubleArray, doubleArray, stringArray), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: CoordSystem coordSystem = new CoordSystem(editableChartDataModel), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: DefaultChartDataModelConstraints defaultChartDataModelConstraints = ((DefaultChartDataModelConstraints) (coordSystem.constraints)), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: ((DefaultChartDataModelConstraints) (coordSystem.constraints)) is coordSystem
CtField is: protected de.progra.charting.model.ChartDataModelConstraints de.progra.charting.CoordSystem.constraints ChartDataModelConstraints constraints
CtField is: protected de.progra.charting.CoordSystemUtilities de.progra.charting.CoordSystem.c CoordSystemUtilities c
statement is: Axis axis = new Axis(1, defaultChartDataModelConstraints), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: de.progra.charting.Axis(ILde/progra/charting/model/ChartDataModelConstraints;)V
statement is: coordSystem.setSecondYAxis(axis), class spoon.support.reflect.code.CtInvocationImpl
invocation is: coordSystem.setSecondYAxis(axis) target is: coordSystem method is: setSecondYAxis(Axis)
source statement: de.progra.charting.CoordSystem(Lde/progra/charting/model/ChartDataModel;)V callee: VariableReference: Statement 8, type de.progra.charting.CoordSystemindex is: 3
Matched Method is: setSecondYAxis(Lde/progra/charting/Axis;)V
i 0 Parameters size() 0 Num of Method Parameters: 1
TestCase Could not be added: setSecondYAxis(Lde/progra/charting/Axis;)V
statement is: CoordSystemUtilities coordSystemUtilities = coordSystem.c, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: coordSystem.c is coordSystem
CtField is: protected de.progra.charting.model.ChartDataModelConstraints de.progra.charting.CoordSystem.constraints ChartDataModelConstraints constraints
CtField is: protected de.progra.charting.CoordSystemUtilities de.progra.charting.CoordSystem.c CoordSystemUtilities c
statement is: Line2D yAxisLine2D = coordSystemUtilities.getYAxisLine2D(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: coordSystemUtilities.getYAxisLine2D() target is: coordSystemUtilities method is: getYAxisLine2D()
* this is vulnerable: int _int = 1
* this is vulnerable: Axis axis = null
TestCase is: double[][] doubleArray = new double[1][7];
String[] stringArray = new String[7];
EditableChartDataModel editableChartDataModel = new EditableChartDataModel(doubleArray, (double[]) doubleArray, stringArray);
CoordSystem coordSystem = new CoordSystem(editableChartDataModel);
int _int = 1;
Axis axis = null;

statement is: org.evosuite.testcase.statements.ArrayStatement@abe44944 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [[D
statement code is: double[][] doubleArray = new double[4][1]
statement is: org.evosuite.testcase.statements.ArrayStatement@ade22e21 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [D
statement code is: double[] doubleArray = new double[2]
statement is: org.evosuite.testcase.statements.AssignmentStatement@4cf023a9 type is: class org.evosuite.testcase.statements.AssignmentStatement return type double
statement code is: doubleArray[0] = 2.0
statement is: org.evosuite.testcase.statements.AssignmentStatement@67f587ef type is: class org.evosuite.testcase.statements.AssignmentStatement return type class [D
statement code is: doubleArray[0] = doubleArray
statement is: org.evosuite.testcase.statements.AssignmentStatement@e68eb336 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class [D
statement code is: doubleArray[1] = doubleArray
statement is: org.evosuite.testcase.statements.AssignmentStatement@5a9f1c3c type is: class org.evosuite.testcase.statements.AssignmentStatement return type class [D
statement code is: doubleArray[2] = doubleArray
statement is: org.evosuite.testcase.statements.AssignmentStatement@c3599b20 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class [D
statement code is: doubleArray[3] = doubleArray[0]
statement is: org.evosuite.testcase.statements.ArrayStatement@559749a1 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [Ljava.lang.String;
statement code is: String[] stringArray = new String[5]
statement is: de.progra.charting.model.EditableChartDataModel([[D[D[Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.progra.charting.model.EditableChartDataModel
statement code is: EditableChartDataModel editableChartDataModel = new EditableChartDataModel(arg0, arg0[0], arg2)
statement is: java.text.DecimalFormat()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.text.DecimalFormat
statement code is: DecimalFormat decimalFormat = new DecimalFormat()
statement is: de.progra.charting.CoordSystem(Lde/progra/charting/model/ChartDataModel;Ljava/text/DecimalFormat;ZZZ)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.progra.charting.CoordSystem
statement code is: CoordSystem coordSystem = new CoordSystem(arg0, arg1, false, false, false)
statement is: getChartDataModelConstraints(I)Lde/progra/charting/model/ChartDataModelConstraints; type is: class org.evosuite.testcase.statements.MethodStatement return type class de.progra.charting.model.DefaultChartDataModelConstraints
statement code is: DefaultChartDataModelConstraints chartDataModelConstraints = (DefaultChartDataModelConstraints)editableChartDataModel.getChartDataModelConstraints(15)
statement is: de.progra.charting.CoordSystemUtilities(Lde/progra/charting/CoordSystem;Lde/progra/charting/model/ChartDataModelConstraints;Lde/progra/charting/model/ChartDataModelConstraints;Lde/progra/charting/model/ChartDataModel;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.progra.charting.CoordSystemUtilities
statement code is: CoordSystemUtilities coordSystemUtilities = new CoordSystemUtilities(arg0, arg2, arg2, arg3)
statement is: computeXAxisLabelHeight()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int computeXAxisLabelHeight = coordSystemUtilities.computeXAxisLabelHeight()
test data is: double[][] doubleArray = new double[4][1];
double[] doubleArray = new double[2];
doubleArray[0] = 2.0;
doubleArray[0] = doubleArray;
doubleArray[1] = doubleArray;
doubleArray[2] = doubleArray;
doubleArray[3] = doubleArray[0];
String[] stringArray = new String[5];
EditableChartDataModel editableChartDataModel = new EditableChartDataModel(doubleArray, doubleArray[0], stringArray);
DecimalFormat decimalFormat = new DecimalFormat();
CoordSystem coordSystem = new CoordSystem(editableChartDataModel, decimalFormat, false, false, false);
DefaultChartDataModelConstraints chartDataModelConstraints = (DefaultChartDataModelConstraints)editableChartDataModel.getChartDataModelConstraints(15);
CoordSystemUtilities coordSystemUtilities = new CoordSystemUtilities(coordSystem, chartDataModelConstraints, chartDataModelConstraints, editableChartDataModel);
coordSystemUtilities.computeXAxisLabelHeight();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        double[][] doubleArray = new double[4][1];
        doubleArray[0][0] = 2.5;
        doubleArray[1][0] = 3.2;
        doubleArray[2][0] = 4.9;
        doubleArray[3][0] = 6.1;
        String[] stringArray = new String[5];
        stringArray[0] = "First";
        stringArray[1] = "Second";
        stringArray[2] = "Third";
        stringArray[3] = "Fourth";
        stringArray[4] = "Fifth";
        EditableChartDataModel editableChartDataModel = new EditableChartDataModel(doubleArray, doubleArray[0], stringArray);
        DecimalFormat decimalFormat = new DecimalFormat();
        CoordSystem coordSystem = new CoordSystem(editableChartDataModel, decimalFormat, false, false, false);
        DefaultChartDataModelConstraints chartDataModelConstraints = ((DefaultChartDataModelConstraints) (editableChartDataModel.getChartDataModelConstraints(15)));
        CoordSystemUtilities coordSystemUtilities = new CoordSystemUtilities(coordSystem, chartDataModelConstraints, chartDataModelConstraints, editableChartDataModel);
        coordSystemUtilities.computeXAxisLabelHeight();
    }
}
statement is: double[][] doubleArray = new double[4][1], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [4, 1] Ct is: double[][] doubleArray = new double[4][1] isAssignment: false Array: new double[4][1] Elements: []
lengths: [4, 1] [4, 1]
Their type are: class [[D double[][]
statement is: doubleArray[0][0] = 2.5, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : doubleArray[0][0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl double Assignment:2.5 Ct is: doubleArray[0][0] = 2.5
target : doubleArray[0] class spoon.support.reflect.code.CtLiteralImpl
statement is: doubleArray[1][0] = 3.2, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : doubleArray[1][0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl double Assignment:3.2 Ct is: doubleArray[1][0] = 3.2
target : doubleArray[1] class spoon.support.reflect.code.CtLiteralImpl
statement is: doubleArray[2][0] = 4.9, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : doubleArray[2][0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl double Assignment:4.9 Ct is: doubleArray[2][0] = 4.9
target : doubleArray[2] class spoon.support.reflect.code.CtLiteralImpl
statement is: doubleArray[3][0] = 6.1, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : doubleArray[3][0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl double Assignment:6.1 Ct is: doubleArray[3][0] = 6.1
target : doubleArray[3] class spoon.support.reflect.code.CtLiteralImpl
statement is: String[] stringArray = new String[5], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [5] Ct is: double[][] doubleArray = new double[4][1] isAssignment: false Array: new String[5] Elements: []
lengths: [4, 1] [5]
Dimension: [5] Ct is: double[] doubleArray = new double[2] isAssignment: false Array: new String[5] Elements: []
lengths: [2] [5]
Their type are: class [D String[]
Dimension: [5] Ct is: String[] stringArray = new String[5] isAssignment: false Array: new String[5] Elements: []
lengths: [5] [5]
Their type are: class [Ljava.lang.String; String[]
statement is: stringArray[0] = "First", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"First" Ct is: stringArray[0] = "First"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[1] = "Second", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[1] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"Second" Ct is: stringArray[1] = "Second"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[2] = "Third", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[2] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"Third" Ct is: stringArray[2] = "Third"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[3] = "Fourth", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[3] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"Fourth" Ct is: stringArray[3] = "Fourth"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[4] = "Fifth", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[4] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"Fifth" Ct is: stringArray[4] = "Fifth"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: EditableChartDataModel editableChartDataModel = new EditableChartDataModel(doubleArray, doubleArray[0], stringArray), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: de.progra.charting.model.EditableChartDataModel([[D[D[Ljava/lang/String;)V
statement is: DecimalFormat decimalFormat = new DecimalFormat(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: CoordSystem coordSystem = new CoordSystem(editableChartDataModel, decimalFormat, false, false, false), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: DefaultChartDataModelConstraints chartDataModelConstraints = ((DefaultChartDataModelConstraints) (editableChartDataModel.getChartDataModelConstraints(15))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: ((DefaultChartDataModelConstraints) (editableChartDataModel.getChartDataModelConstraints(15))) target is: editableChartDataModel method is: getChartDataModelConstraints(int)
source statement: java.text.DecimalFormat()V callee: VariableReference: Statement 8, type de.progra.charting.model.EditableChartDataModelindex is: 2
statement is: CoordSystemUtilities coordSystemUtilities = new CoordSystemUtilities(coordSystem, chartDataModelConstraints, chartDataModelConstraints, editableChartDataModel), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: de.progra.charting.CoordSystemUtilities(Lde/progra/charting/CoordSystem;Lde/progra/charting/model/ChartDataModelConstraints;Lde/progra/charting/model/ChartDataModelConstraints;Lde/progra/charting/model/ChartDataModel;)V
statement is: coordSystemUtilities.computeXAxisLabelHeight(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: coordSystemUtilities.computeXAxisLabelHeight() target is: coordSystemUtilities method is: computeXAxisLabelHeight()
TestCase is: double[][] doubleArray = new double[4][1];
String[] stringArray = new String[5];
DecimalFormat decimalFormat = new DecimalFormat();
boolean _boolean = false;
boolean _boolean = false;
boolean _boolean = false;
CoordSystem coordSystem = new CoordSystem((ChartDataModel) decimalFormat, (DecimalFormat) _boolean, _boolean, _boolean, false);

statement is: de.progra.charting.model.ObjectChartDataModel()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.progra.charting.model.ObjectChartDataModel
statement code is: ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel()
statement is: de.progra.charting.CoordSystem(Lde/progra/charting/model/ChartDataModel;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.progra.charting.CoordSystem
statement code is: CoordSystem coordSystem = new CoordSystem(arg0)
statement is: org.evosuite.testcase.statements.FieldStatement@572b2315 type is: class org.evosuite.testcase.statements.FieldStatement return type class de.progra.charting.CoordSystemUtilities
statement code is: CoordSystemUtilities coordSystemUtilities = coordSystem.c
statement is: computeYAxisLabelWidth()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int computeYAxisLabelWidth = coordSystemUtilities.computeYAxisLabelWidth()
test data is: ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel();
CoordSystem coordSystem = new CoordSystem(objectChartDataModel);
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
coordSystemUtilities.computeYAxisLabelWidth();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel("Test Data for a chart showing financial data", 1234, new Date("Jan 15, 2023"), new BigDecimal("123.456"));
        CoordSystem coordSystem = new CoordSystem(objectChartDataModel);
        CoordSystemUtilities coordSystemUtilities = coordSystem.c;
        coordSystemUtilities.computeYAxisLabelWidth();
    }
}
statement is: ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel("Test Data for a chart showing financial data", 1234, new Date("Jan 15, 2023"), new BigDecimal("123.456")), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: CoordSystem coordSystem = new CoordSystem(objectChartDataModel), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: de.progra.charting.CoordSystem(Lde/progra/charting/model/ChartDataModel;)V
statement is: CoordSystemUtilities coordSystemUtilities = coordSystem.c, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: coordSystem.c is coordSystem
CtField is: protected de.progra.charting.CoordSystemUtilities de.progra.charting.CoordSystem.c CoordSystemUtilities c
statement is: coordSystemUtilities.computeYAxisLabelWidth(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: coordSystemUtilities.computeYAxisLabelWidth() target is: coordSystemUtilities method is: computeYAxisLabelWidth()
statement is: de.progra.charting.model.ObjectChartDataModel()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.progra.charting.model.ObjectChartDataModel
statement code is: ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel()
statement is: de.progra.charting.CoordSystem(Lde/progra/charting/model/ChartDataModel;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.progra.charting.CoordSystem
statement code is: CoordSystem coordSystem = new CoordSystem(arg0)
statement is: org.evosuite.testcase.statements.FieldStatement@6aa53e12 type is: class org.evosuite.testcase.statements.FieldStatement return type class de.progra.charting.CoordSystemUtilities
statement code is: CoordSystemUtilities coordSystemUtilities = coordSystem.c
statement is: getXAxisLine2D()Ljava/awt/geom/Line2D; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.awt.geom.Line2D
statement code is: Line2D xAxisLine2D = coordSystemUtilities.getXAxisLine2D()
test data is: ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel();
CoordSystem coordSystem = new CoordSystem(objectChartDataModel);
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
coordSystemUtilities.getXAxisLine2D();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel();
        CoordSystem coordSystem = new CoordSystem(objectChartDataModel);
        CoordSystemUtilities coordSystemUtilities = coordSystem.c;
        coordSystemUtilities.getXAxisLine2D();
    }
}
statement is: ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: CoordSystem coordSystem = new CoordSystem(objectChartDataModel), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: CoordSystemUtilities coordSystemUtilities = coordSystem.c, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: coordSystem.c is coordSystem
CtField is: protected de.progra.charting.CoordSystemUtilities de.progra.charting.CoordSystem.c CoordSystemUtilities c
statement is: coordSystemUtilities.getXAxisLine2D(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: coordSystemUtilities.getXAxisLine2D() target is: coordSystemUtilities method is: getXAxisLine2D()
TestCase is: ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel();
CoordSystem coordSystem = new CoordSystem(objectChartDataModel);

statement is: org.evosuite.testcase.statements.ArrayStatement@fa547b91 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [[D
statement code is: double[][] doubleArray = new double[4][1]
statement is: org.evosuite.testcase.statements.ArrayStatement@662e091d type is: class org.evosuite.testcase.statements.ArrayStatement return type class [D
statement code is: double[] doubleArray = new double[4]
statement is: org.evosuite.testcase.statements.AssignmentStatement@ddf5e16 type is: class org.evosuite.testcase.statements.AssignmentStatement return type double
statement code is: doubleArray[2] = Double.NaN
statement is: org.evosuite.testcase.statements.AssignmentStatement@4b799e03 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class [D
statement code is: doubleArray[1] = doubleArray
statement is: org.evosuite.testcase.statements.ArrayStatement@5bdc3e97 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [Ljava.lang.String;
statement code is: String[] stringArray = new String[5]
statement is: de.progra.charting.model.EditableChartDataModel([[D[D[Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.progra.charting.model.EditableChartDataModel
statement code is: EditableChartDataModel editableChartDataModel = new EditableChartDataModel(arg0, arg0[1], arg2)
statement is: java.text.DecimalFormat()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.text.DecimalFormat
statement code is: DecimalFormat decimalFormat = new DecimalFormat()
statement is: de.progra.charting.CoordSystem(Lde/progra/charting/model/ChartDataModel;Ljava/text/DecimalFormat;ZZZ)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.progra.charting.CoordSystem
statement code is: CoordSystem coordSystem = new CoordSystem(arg0, arg1, false, false, false)
statement is: getChartDataModelConstraints(I)Lde/progra/charting/model/ChartDataModelConstraints; type is: class org.evosuite.testcase.statements.MethodStatement return type class de.progra.charting.model.DefaultChartDataModelConstraints
statement code is: DefaultChartDataModelConstraints chartDataModelConstraints = (DefaultChartDataModelConstraints)editableChartDataModel.getChartDataModelConstraints(15)
statement is: de.progra.charting.CoordSystemUtilities(Lde/progra/charting/CoordSystem;Lde/progra/charting/model/ChartDataModelConstraints;Lde/progra/charting/model/ChartDataModelConstraints;Lde/progra/charting/model/ChartDataModel;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.progra.charting.CoordSystemUtilities
statement code is: CoordSystemUtilities coordSystemUtilities = new CoordSystemUtilities(arg0, arg2, arg2, arg3)
statement is: computeXAxisLabelHeight()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int computeXAxisLabelHeight = coordSystemUtilities.computeXAxisLabelHeight()
test data is: double[][] doubleArray = new double[4][1];
double[] doubleArray = new double[4];
doubleArray[2] = Double.NaN;
doubleArray[1] = doubleArray;
String[] stringArray = new String[5];
EditableChartDataModel editableChartDataModel = new EditableChartDataModel(doubleArray, doubleArray[1], stringArray);
DecimalFormat decimalFormat = new DecimalFormat();
CoordSystem coordSystem = new CoordSystem(editableChartDataModel, decimalFormat, false, false, false);
DefaultChartDataModelConstraints chartDataModelConstraints = (DefaultChartDataModelConstraints)editableChartDataModel.getChartDataModelConstraints(15);
CoordSystemUtilities coordSystemUtilities = new CoordSystemUtilities(coordSystem, chartDataModelConstraints, chartDataModelConstraints, editableChartDataModel);
coordSystemUtilities.computeXAxisLabelHeight();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        double[][] doubleArray = new double[4][1];
        double[] doubleArray = new double[]{ 0.0, 2.5, Double.NaN, 7.2 };
        String[] stringArray = new String[]{ "abc", "def", "ghi", "jkl" };
        EditableChartDataModel editableChartDataModel = new EditableChartDataModel(doubleArray, doubleArray[1], stringArray);
        DecimalFormat decimalFormat = new DecimalFormat();
        CoordSystem coordSystem = new CoordSystem(editableChartDataModel, decimalFormat, false, false, false);
        DefaultChartDataModelConstraints chartDataModelConstraints = ((DefaultChartDataModelConstraints) (editableChartDataModel.getChartDataModelConstraints(15)));
        CoordSystemUtilities coordSystemUtilities = new CoordSystemUtilities(coordSystem, chartDataModelConstraints, chartDataModelConstraints, editableChartDataModel);
        coordSystemUtilities.computeXAxisLabelHeight();
    }
}
statement is: double[][] doubleArray = new double[4][1], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [4, 1] Ct is: double[][] doubleArray = new double[4][1] isAssignment: false Array: new double[4][1] Elements: []
lengths: [4, 1] [4, 1]
Their type are: class [[D double[][]
statement is: double[] doubleArray = new double[]{ 0.0, 2.5, Double.NaN, 7.2 }, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [] Ct is: double[][] doubleArray = new double[4][1] isAssignment: false Array: new double[]{ 0.0, 2.5, Double.NaN, 7.2 } Elements: [0.0, 2.5, Double.NaN, 7.2]
lengths: [4, 1] []
Dimension: [] Ct is: double[] doubleArray = new double[4] isAssignment: false Array: new double[]{ 0.0, 2.5, Double.NaN, 7.2 } Elements: [0.0, 2.5, Double.NaN, 7.2]
lengths: [4] []
Dimension: [] Ct is: String[] stringArray = new String[5] isAssignment: false Array: new double[]{ 0.0, 2.5, Double.NaN, 7.2 } Elements: [0.0, 2.5, Double.NaN, 7.2]
lengths: [5] []
statement is: String[] stringArray = new String[]{ "abc", "def", "ghi", "jkl" }, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [] Ct is: double[][] doubleArray = new double[4][1] isAssignment: false Array: new String[]{ "abc", "def", "ghi", "jkl" } Elements: ["abc", "def", "ghi", "jkl"]
lengths: [4, 1] []
Dimension: [] Ct is: double[] doubleArray = new double[4] isAssignment: false Array: new String[]{ "abc", "def", "ghi", "jkl" } Elements: ["abc", "def", "ghi", "jkl"]
lengths: [4] []
Dimension: [] Ct is: String[] stringArray = new String[5] isAssignment: false Array: new String[]{ "abc", "def", "ghi", "jkl" } Elements: ["abc", "def", "ghi", "jkl"]
lengths: [5] []
statement is: EditableChartDataModel editableChartDataModel = new EditableChartDataModel(doubleArray, doubleArray[1], stringArray), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: de.progra.charting.model.EditableChartDataModel([[D[D[Ljava/lang/String;)V
statement is: DecimalFormat decimalFormat = new DecimalFormat(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: CoordSystem coordSystem = new CoordSystem(editableChartDataModel, decimalFormat, false, false, false), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: DefaultChartDataModelConstraints chartDataModelConstraints = ((DefaultChartDataModelConstraints) (editableChartDataModel.getChartDataModelConstraints(15))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: ((DefaultChartDataModelConstraints) (editableChartDataModel.getChartDataModelConstraints(15))) target is: editableChartDataModel method is: getChartDataModelConstraints(int)
source statement: java.text.DecimalFormat()V callee: VariableReference: Statement 5, type de.progra.charting.model.EditableChartDataModelindex is: 1
statement is: CoordSystemUtilities coordSystemUtilities = new CoordSystemUtilities(coordSystem, chartDataModelConstraints, chartDataModelConstraints, editableChartDataModel), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: de.progra.charting.CoordSystemUtilities(Lde/progra/charting/CoordSystem;Lde/progra/charting/model/ChartDataModelConstraints;Lde/progra/charting/model/ChartDataModelConstraints;Lde/progra/charting/model/ChartDataModel;)V
statement is: coordSystemUtilities.computeXAxisLabelHeight(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: coordSystemUtilities.computeXAxisLabelHeight() target is: coordSystemUtilities method is: computeXAxisLabelHeight()
TestCase is: double[][] doubleArray = new double[4][1];
DecimalFormat decimalFormat = new DecimalFormat();
boolean _boolean = false;
boolean _boolean = false;
boolean _boolean = false;
CoordSystem coordSystem = new CoordSystem((ChartDataModel) decimalFormat, (DecimalFormat) _boolean, _boolean, _boolean, false);

statement is: org.evosuite.testcase.statements.ArrayStatement@89a861eb type is: class org.evosuite.testcase.statements.ArrayStatement return type class [[D
statement code is: double[][] doubleArray = new double[4][5]
statement is: org.evosuite.testcase.statements.ArrayStatement@bb17e92e type is: class org.evosuite.testcase.statements.ArrayStatement return type class [D
statement code is: double[] doubleArray = new double[8]
statement is: org.evosuite.testcase.statements.AssignmentStatement@fefbcbc9 type is: class org.evosuite.testcase.statements.AssignmentStatement return type double
statement code is: doubleArray[3] = (-53.42230997495)
statement is: org.evosuite.testcase.statements.AssignmentStatement@f628ec62 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class [D
statement code is: doubleArray[3] = doubleArray
statement is: org.evosuite.testcase.statements.ArrayStatement@3f1cab16 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [Ljava.lang.String;
statement code is: String[] stringArray = new String[6]
statement is: de.progra.charting.model.EditableChartDataModel([[D[D[Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.progra.charting.model.EditableChartDataModel
statement code is: EditableChartDataModel editableChartDataModel = new EditableChartDataModel(arg0, arg0[0], arg2)
statement is: de.progra.charting.CoordSystem(Lde/progra/charting/model/ChartDataModel;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.progra.charting.CoordSystem
statement code is: CoordSystem coordSystem = new CoordSystem(arg0)
statement is: java.awt.Font(Ljava/lang/String;II)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.awt.Font
statement code is: Font font = new Font("Lr<eF{M}}WW%_N]I9+0", 0, (-3022))
statement is: org.evosuite.testcase.statements.AssignmentStatement@4fa45a89 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.awt.Font
statement code is: coordSystem.font = font
statement is: de.progra.charting.model.DefaultChartDataModelConstraints(Lde/progra/charting/model/AbstractChartDataModel;IZ)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.progra.charting.model.DefaultChartDataModelConstraints
statement code is: DefaultChartDataModelConstraints defaultChartDataModelConstraints = new DefaultChartDataModelConstraints(arg0, 0, true)
statement is: de.progra.charting.CoordSystemUtilities(Lde/progra/charting/CoordSystem;Lde/progra/charting/model/ChartDataModelConstraints;Lde/progra/charting/model/ChartDataModelConstraints;Lde/progra/charting/model/ChartDataModel;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.progra.charting.CoordSystemUtilities
statement code is: CoordSystemUtilities coordSystemUtilities = new CoordSystemUtilities(arg0, arg2, arg2, arg3)
statement is: computeYAxisLabelWidth()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int computeYAxisLabelWidth = coordSystemUtilities.computeYAxisLabelWidth()
test data is: double[][] doubleArray = new double[4][5];
double[] doubleArray = new double[8];
doubleArray[3] = (-53.42230997495);
doubleArray[3] = doubleArray;
String[] stringArray = new String[6];
EditableChartDataModel editableChartDataModel = new EditableChartDataModel(doubleArray, doubleArray[0], stringArray);
CoordSystem coordSystem = new CoordSystem(editableChartDataModel);
Font font = new Font("Lr<eF{M}}WW%_N]I9+0", 0, (-3022));
coordSystem.font = font;
DefaultChartDataModelConstraints defaultChartDataModelConstraints = new DefaultChartDataModelConstraints(editableChartDataModel, 0, true);
CoordSystemUtilities coordSystemUtilities = new CoordSystemUtilities(coordSystem, defaultChartDataModelConstraints, defaultChartDataModelConstraints, editableChartDataModel);
coordSystemUtilities.computeYAxisLabelWidth();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        double[][] doubleArray = new double[4][5];
        double[] doubleArray = new double[]{ 1.2, 3.4, 5.6, 7.8, 9.0 };
        String[] stringArray = new String[]{ "apple", "banana", "cherry", "date", "elderberry" };
        EditableChartDataModel editableChartDataModel = new EditableChartDataModel(doubleArray, doubleArray[0], stringArray);
        CoordSystem coordSystem = new CoordSystem(editableChartDataModel);
        Font font = new Font("Arial", 0, -3022);
        coordSystem.font = font;
        DefaultChartDataModelConstraints defaultChartDataModelConstraints = new DefaultChartDataModelConstraints(editableChartDataModel, 0, true);
        CoordSystemUtilities coordSystemUtilities = new CoordSystemUtilities(coordSystem, defaultChartDataModelConstraints, defaultChartDataModelConstraints, editableChartDataModel);
        coordSystemUtilities.computeYAxisLabelWidth();
    }
}
statement is: double[][] doubleArray = new double[4][5], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [4, 5] Ct is: double[][] doubleArray = new double[4][5] isAssignment: false Array: new double[4][5] Elements: []
lengths: [4, 5] [4, 5]
Their type are: class [[D double[][]
statement is: double[] doubleArray = new double[]{ 1.2, 3.4, 5.6, 7.8, 9.0 }, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [] Ct is: double[][] doubleArray = new double[4][5] isAssignment: false Array: new double[]{ 1.2, 3.4, 5.6, 7.8, 9.0 } Elements: [1.2, 3.4, 5.6, 7.8, 9.0]
lengths: [4, 5] []
Dimension: [] Ct is: double[] doubleArray = new double[8] isAssignment: false Array: new double[]{ 1.2, 3.4, 5.6, 7.8, 9.0 } Elements: [1.2, 3.4, 5.6, 7.8, 9.0]
lengths: [8] []
Dimension: [] Ct is: String[] stringArray = new String[6] isAssignment: false Array: new double[]{ 1.2, 3.4, 5.6, 7.8, 9.0 } Elements: [1.2, 3.4, 5.6, 7.8, 9.0]
lengths: [6] []
statement is: String[] stringArray = new String[]{ "apple", "banana", "cherry", "date", "elderberry" }, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [] Ct is: double[][] doubleArray = new double[4][5] isAssignment: false Array: new String[]{ "apple", "banana", "cherry", "date", "elderberry" } Elements: ["apple", "banana", "cherry", "date", "elderberry"]
lengths: [4, 5] []
Dimension: [] Ct is: double[] doubleArray = new double[8] isAssignment: false Array: new String[]{ "apple", "banana", "cherry", "date", "elderberry" } Elements: ["apple", "banana", "cherry", "date", "elderberry"]
lengths: [8] []
Dimension: [] Ct is: String[] stringArray = new String[6] isAssignment: false Array: new String[]{ "apple", "banana", "cherry", "date", "elderberry" } Elements: ["apple", "banana", "cherry", "date", "elderberry"]
lengths: [6] []
statement is: EditableChartDataModel editableChartDataModel = new EditableChartDataModel(doubleArray, doubleArray[0], stringArray), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: de.progra.charting.model.EditableChartDataModel([[D[D[Ljava/lang/String;)V
statement is: CoordSystem coordSystem = new CoordSystem(editableChartDataModel), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: de.progra.charting.CoordSystem(Lde/progra/charting/model/ChartDataModel;)V
statement is: Font font = new Font("Arial", 0, -3022), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: coordSystem.font = font, class spoon.support.reflect.code.CtAssignmentImpl
statement is: DefaultChartDataModelConstraints defaultChartDataModelConstraints = new DefaultChartDataModelConstraints(editableChartDataModel, 0, true), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: CoordSystemUtilities coordSystemUtilities = new CoordSystemUtilities(coordSystem, defaultChartDataModelConstraints, defaultChartDataModelConstraints, editableChartDataModel), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: de.progra.charting.CoordSystemUtilities(Lde/progra/charting/CoordSystem;Lde/progra/charting/model/ChartDataModelConstraints;Lde/progra/charting/model/ChartDataModelConstraints;Lde/progra/charting/model/ChartDataModel;)V
statement is: coordSystemUtilities.computeYAxisLabelWidth(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: coordSystemUtilities.computeYAxisLabelWidth() target is: coordSystemUtilities method is: computeYAxisLabelWidth()
TestCase is: double[][] doubleArray = new double[4][5];
String string = "Arial";
int _int = 0;
Font font = new Font(string, _int, (-3022));
int _int = 0;
boolean _boolean = true;
DefaultChartDataModelConstraints defaultChartDataModelConstraints = new DefaultChartDataModelConstraints((AbstractChartDataModel) _int, (int) _boolean, true);

statement is: de.progra.charting.model.ObjectChartDataModel()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.progra.charting.model.ObjectChartDataModel
statement code is: ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel()
statement is: de.progra.charting.CoordSystem(Lde/progra/charting/model/ChartDataModel;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.progra.charting.CoordSystem
statement code is: CoordSystem coordSystem = new CoordSystem(arg0)
statement is: org.evosuite.testcase.statements.ArrayStatement@1e80c4d3 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [F
statement code is: float[] floatArray = new float[5]
statement is: java.awt.geom.AffineTransform([F)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.awt.geom.AffineTransform
statement code is: AffineTransform affineTransform = new AffineTransform(arg0)
statement is: org.evosuite.testcase.statements.AssignmentStatement@9ed5b38e type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.awt.geom.AffineTransform
statement code is: coordSystem.y2transform = affineTransform
statement is: org.evosuite.testcase.statements.FieldStatement@62711e3e type is: class org.evosuite.testcase.statements.FieldStatement return type class de.progra.charting.CoordSystemUtilities
statement code is: CoordSystemUtilities coordSystemUtilities = coordSystem.c
statement is: getSecondYAxisLine2D()Ljava/awt/geom/Line2D; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.awt.geom.Line2D$Double
statement code is: Line2D.Double secondYAxisLine2D = (Line2D.Double)coordSystemUtilities.getSecondYAxisLine2D()
test data is: ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel();
CoordSystem coordSystem = new CoordSystem(objectChartDataModel);
float[] floatArray = new float[5];
AffineTransform affineTransform = new AffineTransform(floatArray);
coordSystem.y2transform = affineTransform;
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
coordSystemUtilities.getSecondYAxisLine2D();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel();
        CoordSystem coordSystem = new CoordSystem(objectChartDataModel);
        float[] floatArray = new float[]{ 1.5F, 2.3F, 0.7F, -1.9F, 4.6F };
        AffineTransform affineTransform = new AffineTransform(floatArray);
        coordSystem.y2transform = affineTransform;
        CoordSystemUtilities coordSystemUtilities = coordSystem.c;
        Line2D secondYAxisLine2D = coordSystemUtilities.getSecondYAxisLine2D();
    }
}
statement is: ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: CoordSystem coordSystem = new CoordSystem(objectChartDataModel), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: float[] floatArray = new float[]{ 1.5F, 2.3F, 0.7F, -1.9F, 4.6F }, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [] Ct is: float[] floatArray = new float[5] isAssignment: false Array: new float[]{ 1.5F, 2.3F, 0.7F, -1.9F, 4.6F } Elements: [1.5F, 2.3F, 0.7F, -1.9F, 4.6F]
lengths: [5] []
statement is: AffineTransform affineTransform = new AffineTransform(floatArray), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: java.awt.geom.AffineTransform([F)V
statement is: coordSystem.y2transform = affineTransform, class spoon.support.reflect.code.CtAssignmentImpl
statement is: CoordSystemUtilities coordSystemUtilities = coordSystem.c, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: coordSystem.c is coordSystem
CtField is: protected de.progra.charting.CoordSystemUtilities de.progra.charting.CoordSystem.c CoordSystemUtilities c
statement is: Line2D secondYAxisLine2D = coordSystemUtilities.getSecondYAxisLine2D(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: coordSystemUtilities.getSecondYAxisLine2D() target is: coordSystemUtilities method is: getSecondYAxisLine2D()
TestCase is: ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel();
CoordSystem coordSystem = new CoordSystem(objectChartDataModel);

statement is: de.progra.charting.model.ObjectChartDataModel()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.progra.charting.model.ObjectChartDataModel
statement code is: ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel()
statement is: de.progra.charting.CoordSystem(Lde/progra/charting/model/ChartDataModel;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.progra.charting.CoordSystem
statement code is: CoordSystem coordSystem = new CoordSystem(arg0)
statement is: org.evosuite.testcase.statements.FieldStatement@13a93c65 type is: class org.evosuite.testcase.statements.FieldStatement return type class de.progra.charting.CoordSystemUtilities
statement code is: CoordSystemUtilities coordSystemUtilities = coordSystem.c
statement is: getRotateInstance(DDD)Ljava/awt/geom/AffineTransform; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.awt.geom.AffineTransform
statement code is: AffineTransform rotateInstance = AffineTransform.getRotateInstance((double) 20, (double) 0, (double) 15)
statement is: org.evosuite.testcase.statements.AssignmentStatement@c6b5adb5 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.awt.geom.AffineTransform
statement code is: coordSystem.y1transform = affineTransform
statement is: getYAxisLine2D()Ljava/awt/geom/Line2D; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.awt.geom.Line2D$Double
statement code is: Line2D.Double yAxisLine2D = (Line2D.Double)coordSystemUtilities.getYAxisLine2D()
test data is: ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel();
CoordSystem coordSystem = new CoordSystem(objectChartDataModel);
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
AffineTransform rotateInstance = AffineTransform.getRotateInstance((double) 20, (double) 0, (double) 15);
coordSystem.y1transform = rotateInstance;
coordSystemUtilities.getYAxisLine2D();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel();
        CoordSystem coordSystem = new CoordSystem(objectChartDataModel);
        CoordSystemUtilities coordSystemUtilities = coordSystem.c;
        AffineTransform rotateInstance = AffineTransform.getRotateInstance(((double) (90)), ((double) (0)), ((double) (15)));
        coordSystem.rotationTransform = rotateInstance;
        coordSystemUtilities.getYAxisLine2D();
    }
}
statement is: ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: CoordSystem coordSystem = new CoordSystem(objectChartDataModel), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: CoordSystemUtilities coordSystemUtilities = coordSystem.c, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: coordSystem.c is coordSystem
CtField is: protected de.progra.charting.CoordSystemUtilities de.progra.charting.CoordSystem.c CoordSystemUtilities c
statement is: AffineTransform rotateInstance = AffineTransform.getRotateInstance(((double) (90)), ((double) (0)), ((double) (15))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: AffineTransform.getRotateInstance(((double) (90)), ((double) (0)), ((double) (15))) target is: AffineTransform method is: getRotateInstance(double,double,double)
Matched Method is: getRotateInstance(DDD)Ljava/awt/geom/AffineTransform;
statement is: coordSystem.rotationTransform = rotateInstance, class spoon.support.reflect.code.CtAssignmentImpl
statement is: coordSystemUtilities.getYAxisLine2D(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: coordSystemUtilities.getYAxisLine2D() target is: coordSystemUtilities method is: getYAxisLine2D()
TestCase is: ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel();
CoordSystem coordSystem = new CoordSystem(objectChartDataModel);
int _int = 90;
int _int = 0;
int _int = 15;
AffineTransform.getRotateInstance((double) _int, (double) _int, (double) _int);

* test suite isTestSuite: 72
Test 0: 
EditableChartDataModel editableChartDataModel = new EditableChartDataModel();
CoordSystem coordSystem = new CoordSystem(editableChartDataModel);
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
coordSystemUtilities.computeRightMargin();
Test 1: 
ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel();
CoordSystem coordSystem = new CoordSystem(objectChartDataModel);
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
coordSystemUtilities.computeTopMargin();
Test 2: 
double[][] doubleArray = new double[4][5];
String[] stringArray = new String[7];
double[] doubleArray = new double[3];
doubleArray[0] = 2.4;
doubleArray[1] = 3568.50611820713;
doubleArray[2] = 3291.858831452;
EditableChartDataModel editableChartDataModel = new EditableChartDataModel(doubleArray, doubleArray, stringArray);
CoordSystem coordSystem = new CoordSystem(editableChartDataModel);
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
coordSystemUtilities.computeLeftMargin();
Test 3: 
ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel();
CoordSystem coordSystem = new CoordSystem(objectChartDataModel);
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
coordSystemUtilities.computeLeftMargin();
Test 4: 
EditableChartDataModel editableChartDataModel = new EditableChartDataModel();
editableChartDataModel.setManualScale(true);
CoordSystem coordSystem = new CoordSystem(editableChartDataModel);
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
coordSystemUtilities.computeLeftMargin();
Test 5: 
double[][] doubleArray = new double[4][5];
String[] stringArray = new String[5];
ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel(doubleArray, doubleArray, stringArray);
CoordSystem coordSystem = new CoordSystem(objectChartDataModel);
double[] doubleArray = new double[9];
doubleArray[0] = (double) 20;
doubleArray[6] = (-1.0);
EditableChartDataModel editableChartDataModel = new EditableChartDataModel(doubleArray, doubleArray, stringArray);
DefaultChartDataModelConstraints defaultChartDataModelConstraints = new DefaultChartDataModelConstraints(editableChartDataModel, 1, true);
CoordSystemUtilities coordSystemUtilities = new CoordSystemUtilities(coordSystem, defaultChartDataModelConstraints, defaultChartDataModelConstraints, objectChartDataModel);
coordSystemUtilities.computeLeftMargin();
Test 6: 
Number[][] numberArray = new Number[1][3];
Number[] numberArray = new Number[2];
Integer integer = JLayeredPane.PALETTE_LAYER;
numberArray[0] = (Number) integer;
numberArray[1] = (Number) integer;
numberArray[0] = numberArray;
double[] doubleArray = new double[3];
String[] stringArray = new String[8];
DefaultChartDataModel defaultChartDataModel = new DefaultChartDataModel(numberArray, doubleArray, stringArray);
CoordSystem coordSystem = new CoordSystem(defaultChartDataModel);
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
coordSystemUtilities.computeBottomMargin();
Test 7: 
double[][] doubleArray = new double[6][5];
String[] stringArray = new String[8];
ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel(doubleArray, stringArray, stringArray);
StackedChartDataModelConstraints stackedChartDataModelConstraints = new StackedChartDataModelConstraints(objectChartDataModel, 1282, true);
JSpinner jSpinner = new JSpinner();
JSpinner.NumberEditor jSpinner_NumberEditor = new JSpinner.NumberEditor(jSpinner);
DecimalFormat format = jSpinner_NumberEditor.getFormat();
CoordSystem coordSystem = new CoordSystem(objectChartDataModel, format, true, true, true);
CoordSystemUtilities coordSystemUtilities = new CoordSystemUtilities(coordSystem, stackedChartDataModelConstraints, stackedChartDataModelConstraints, objectChartDataModel);
coordSystemUtilities.computeBottomMargin();
Test 8: 
double[][] doubleArray = new double[4][5];
String[] stringArray = new String[5];
ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel(doubleArray, doubleArray, stringArray);
CoordSystem coordSystem = new CoordSystem(objectChartDataModel);
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
coordSystemUtilities.computeBottomMargin();
Test 9: 
double[][] doubleArray = new double[6][5];
double[] doubleArray = new double[8];
doubleArray[2] = (-21.953295162629235);
doubleArray[3] = doubleArray;
String[] stringArray = new String[8];
ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel(doubleArray, stringArray, stringArray);
StackedChartDataModelConstraints stackedChartDataModelConstraints = new StackedChartDataModelConstraints(objectChartDataModel, 1282, true);
JSpinner jSpinner = new JSpinner();
JSpinner.NumberEditor jSpinner_NumberEditor = new JSpinner.NumberEditor(jSpinner);
DecimalFormat format = jSpinner_NumberEditor.getFormat();
CoordSystem coordSystem = new CoordSystem(objectChartDataModel, format, true, true, true);
CoordSystemUtilities coordSystemUtilities = new CoordSystemUtilities(coordSystem, stackedChartDataModelConstraints, stackedChartDataModelConstraints, objectChartDataModel);
coordSystemUtilities.computeBottomMargin();
Test 10: 
double[][] doubleArray = new double[1][5];
double[] doubleArray = new double[1];
doubleArray[0] = (double) 20;
doubleArray[0] = doubleArray;
String[] stringArray = new String[7];
ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel(doubleArray, doubleArray, stringArray);
CoordSystem coordSystem = new CoordSystem(objectChartDataModel);
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
coordSystemUtilities.computeXAxisLabelHeight();
Test 11: 
double[][] doubleArray = new double[1][7];
double[] doubleArray = new double[4];
doubleArray[0] = (-1.9294442819002526);
doubleArray[1] = (-1.5294442819002523);
doubleArray[2] = (-1.9294442819002526);
doubleArray[3] = (-1.9294442819002526);
doubleArray[0] = doubleArray;
String[] stringArray = new String[7];
EditableChartDataModel editableChartDataModel = new EditableChartDataModel(doubleArray, doubleArray, stringArray);
CoordSystem coordSystem = new CoordSystem(editableChartDataModel);
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
coordSystemUtilities.computeXAxisLabelHeight();
Test 12: 
double[][] doubleArray = new double[2][7];
double[] doubleArray = new double[4];
doubleArray[0] = 2.2339250900267746;
doubleArray[1] = 2.2339250900267746;
doubleArray[2] = 2.2339250900267746;
doubleArray[3] = 2.2339250900267746;
doubleArray[0] = doubleArray;
String[] stringArray = new String[7];
EditableChartDataModel editableChartDataModel = new EditableChartDataModel(doubleArray, doubleArray, stringArray);
CoordSystem coordSystem = new CoordSystem(editableChartDataModel);
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
coordSystemUtilities.computeYAxisLabelWidth();
Test 13: 
double[][] doubleArray = new double[10][7];
double[] doubleArray = new double[4];
doubleArray[0] = (-0.834107530926774);
doubleArray[1] = (-0.834107530926774);
doubleArray[2] = (-0.834107530926774);
doubleArray[3] = (-0.834107530926774);
doubleArray[0] = doubleArray;
String[] stringArray = new String[10];
EditableChartDataModel editableChartDataModel = new EditableChartDataModel(doubleArray, doubleArray, stringArray);
CoordSystem coordSystem = new CoordSystem(editableChartDataModel);
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
coordSystemUtilities.computeYAxisLabelWidth();
Test 14: 
double[][] doubleArray = new double[10][7];
double[] doubleArray = new double[4];
doubleArray[0] = (-0.834107530926774);
doubleArray[1] = (-0.834107530926774);
doubleArray[2] = (-0.834107530926774);
doubleArray[3] = (-0.834107530926774);
doubleArray[0] = doubleArray;
String[] stringArray = new String[10];
EditableChartDataModel editableChartDataModel = new EditableChartDataModel(doubleArray, doubleArray, stringArray);
CoordSystem coordSystem = new CoordSystem(editableChartDataModel);
Axis xAxis = coordSystem.getXAxis();
coordSystem.yaxis2 = xAxis;
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
coordSystemUtilities.computeYAxisLabelWidth();
Test 15: 
int[][] intArray = new int[2][8];
int[] intArray = new int[1];
intArray[0] = 248;
intArray[0] = intArray;
intArray[1] = intArray;
String[] stringArray = new String[5];
ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel(intArray, intArray, stringArray);
CoordSystem coordSystem = new CoordSystem(objectChartDataModel);
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
// Undeclared exception!
try { 
  coordSystemUtilities.drawNumericalXAxisTicks((Graphics2D) null);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("de.progra.charting.CoordSystemUtilities", e);
}

Test 16: 
double[][] doubleArray = new double[1][7];
double[] doubleArray = new double[4];
doubleArray[0] = (-1.9294442819002526);
doubleArray[1] = (-1.5294442819002523);
doubleArray[2] = (-1.9294442819002526);
doubleArray[3] = (-1.9294442819002526);
doubleArray[0] = doubleArray;
String[] stringArray = new String[7];
EditableChartDataModel editableChartDataModel = new EditableChartDataModel(doubleArray, doubleArray, stringArray);
CoordSystem coordSystem = new CoordSystem(editableChartDataModel);
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
// Undeclared exception!
try { 
  coordSystemUtilities.drawNumericalXAxisTicks((Graphics2D) null);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("de.progra.charting.CoordSystemUtilities", e);
}

Test 17: 
ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel();
CoordSystem coordSystem = new CoordSystem(objectChartDataModel);
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
AffineTransform rotateInstance = AffineTransform.getRotateInstance((double) 20, (double) 0, (double) 15);
coordSystem.y1transform = rotateInstance;
BufferedImage bufferedImage = new BufferedImage(15, 20, 1);
Graphics2D createGraphics = bufferedImage.createGraphics();
coordSystemUtilities.drawNumericalXAxisTicks(createGraphics);
Test 18: 
ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel();
CoordSystem coordSystem = new CoordSystem(objectChartDataModel);
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
coordSystem.setPaintLabels(false);
AffineTransform rotateInstance = AffineTransform.getRotateInstance((double) 20, (double) 0, (double) 15);
coordSystem.y1transform = rotateInstance;
BufferedImage bufferedImage = new BufferedImage(15, 20, 1);
Graphics2D createGraphics = bufferedImage.createGraphics();
coordSystemUtilities.drawNumericalXAxisTicks(createGraphics);
Test 19: 
double[][] doubleArray = new double[1][7];
double[] doubleArray = new double[4];
doubleArray[0] = (-1.9294442819002526);
doubleArray[1] = (-1.5294442819002523);
doubleArray[2] = (-1.9294442819002526);
doubleArray[3] = (-1.9294442819002526);
doubleArray[0] = doubleArray;
String[] stringArray = new String[7];
EditableChartDataModel editableChartDataModel = new EditableChartDataModel(doubleArray, doubleArray, stringArray);
CoordSystem coordSystem = new CoordSystem(editableChartDataModel);
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
// Undeclared exception!
try { 
  coordSystemUtilities.drawXAxisTicks((Graphics2D) null);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 20: 
ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel();
CoordSystem coordSystem = new CoordSystem(objectChartDataModel);
coordSystem.setPaintLabels(false);
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
AffineTransform defaultTransform = coordSystem.getDefaultTransform(0);
coordSystem.y1transform = defaultTransform;
BufferedImage bufferedImage = new BufferedImage(15, 20, 1);
Graphics2D createGraphics = bufferedImage.createGraphics();
coordSystemUtilities.drawXAxisTicks(createGraphics);
Test 21: 
ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel();
CoordSystem coordSystem = new CoordSystem(objectChartDataModel);
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
AffineTransform rotateInstance = AffineTransform.getRotateInstance((double) 20, (double) 0, (double) 15);
coordSystem.y1transform = rotateInstance;
BufferedImage bufferedImage = new BufferedImage(15, 20, 1);
Graphics2D createGraphics = bufferedImage.createGraphics();
// Undeclared exception!
try { 
  coordSystemUtilities.drawXAxisTicks(createGraphics);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 22: 
double[][] doubleArray = new double[2][7];
double[] doubleArray = new double[4];
doubleArray[0] = 0.32870741247955104;
doubleArray[1] = 0.32870741247955104;
doubleArray[2] = 0.32870741247955104;
doubleArray[3] = 0.32870741247955104;
doubleArray[0] = doubleArray;
String[] stringArray = new String[7];
EditableChartDataModel editableChartDataModel = new EditableChartDataModel(doubleArray, doubleArray, stringArray);
CoordSystem coordSystem = new CoordSystem(editableChartDataModel);
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
// Undeclared exception!
try { 
  coordSystemUtilities.drawYAxisTicks((Graphics2D) null);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 23: 
double[][] doubleArray = new double[1][7];
double[] doubleArray = new double[4];
doubleArray[0] = (-1.9294442819002526);
doubleArray[1] = (-1.5294442819002523);
doubleArray[2] = (-1.9294442819002526);
doubleArray[3] = (-1.5294442819002523);
doubleArray[0] = doubleArray;
String[] stringArray = new String[7];
EditableChartDataModel editableChartDataModel = new EditableChartDataModel(doubleArray, doubleArray, stringArray);
CoordSystem coordSystem = new CoordSystem(editableChartDataModel);
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
// Undeclared exception!
try { 
  coordSystemUtilities.drawYAxisTicks((Graphics2D) null);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 24: 
double[][] doubleArray = new double[1][7];
double[] doubleArray = new double[4];
doubleArray[0] = (-1.9294442819002526);
doubleArray[1] = (-1.5294442819002523);
doubleArray[2] = (-1.9294442819002526);
doubleArray[3] = (-1.5294442819002523);
doubleArray[0] = doubleArray;
String[] stringArray = new String[7];
EditableChartDataModel editableChartDataModel = new EditableChartDataModel(doubleArray, doubleArray, stringArray);
CoordSystem coordSystem = new CoordSystem(editableChartDataModel);
DefaultChartDataModelConstraints defaultChartDataModelConstraints = new DefaultChartDataModelConstraints(editableChartDataModel, 0);
Axis axis = new Axis(15, defaultChartDataModelConstraints);
coordSystem.setSecondYAxis(axis);
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
// Undeclared exception!
try { 
  coordSystemUtilities.drawYAxisTicks((Graphics2D) null);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 25: 
ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel();
CoordSystem coordSystem = new CoordSystem(objectChartDataModel);
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
AffineTransform rotateInstance = AffineTransform.getRotateInstance((double) 20, (double) 0, (double) 15);
coordSystem.y1transform = rotateInstance;
BufferedImage bufferedImage = new BufferedImage(15, 20, 1);
Graphics2D createGraphics = bufferedImage.createGraphics();
coordSystemUtilities.drawYAxisTicks(createGraphics);
Test 26: 
ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel();
CoordSystem coordSystem = new CoordSystem(objectChartDataModel);
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
AffineTransform rotateInstance = AffineTransform.getRotateInstance((double) 20, (double) 0, (double) 15);
coordSystem.y1transform = rotateInstance;
BufferedImage bufferedImage = new BufferedImage(15, 20, 1);
coordSystem.shouldPaintOnlyTick = false;
Graphics2D createGraphics = bufferedImage.createGraphics();
coordSystemUtilities.drawYAxisTicks(createGraphics);
Test 27: 
double[][] doubleArray = new double[1][3];
double[] doubleArray = new double[1];
doubleArray[0] = 6.0;
doubleArray[0] = doubleArray;
String[] stringArray = new String[4];
ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel(doubleArray, doubleArray, stringArray);
DecimalFormat decimalFormat = new DecimalFormat("]E2");
CoordSystem coordSystem = new CoordSystem(objectChartDataModel, decimalFormat, false, false, true);
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
// Undeclared exception!
try { 
  coordSystemUtilities.getXAxisLine2D();
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("de.progra.charting.CoordSystemUtilities", e);
}

Test 28: 
double[][] doubleArray = new double[1][7];
double[] doubleArray = new double[4];
doubleArray[0] = (-1.9294442819002526);
doubleArray[1] = (-1.5294442819002523);
doubleArray[2] = (-1.9294442819002526);
doubleArray[3] = (-1.9294442819002526);
doubleArray[0] = doubleArray;
String[] stringArray = new String[7];
EditableChartDataModel editableChartDataModel = new EditableChartDataModel(doubleArray, doubleArray, stringArray);
CoordSystem coordSystem = new CoordSystem(editableChartDataModel);
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
// Undeclared exception!
try { 
  coordSystemUtilities.getXAxisLine2D();
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("de.progra.charting.CoordSystemUtilities", e);
}

Test 29: 
Number[][] numberArray = new Number[1][3];
Number[] numberArray = new Number[2];
Integer integer = JLayeredPane.PALETTE_LAYER;
numberArray[0] = (Number) integer;
numberArray[1] = (Number) integer;
numberArray[0] = numberArray;
double[] doubleArray = new double[3];
doubleArray[0] = (double) 20;
doubleArray[1] = (double) 20;
doubleArray[2] = (double) 20;
String[] stringArray = new String[8];
DefaultChartDataModel defaultChartDataModel = new DefaultChartDataModel(numberArray, doubleArray, stringArray);
CoordSystem coordSystem = new CoordSystem(defaultChartDataModel);
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
// Undeclared exception!
try { 
  coordSystemUtilities.getYAxisLine2D();
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("de.progra.charting.CoordSystemUtilities", e);
}

Test 30: 
double[][] doubleArray = new double[1][7];
double[] doubleArray = new double[4];
doubleArray[0] = (-685.7777562423753);
doubleArray[1] = (-685.7777562423753);
doubleArray[2] = (-685.7777562423753);
doubleArray[3] = (-685.7777562423753);
String[] stringArray = new String[7];
EditableChartDataModel editableChartDataModel = new EditableChartDataModel(doubleArray, doubleArray, stringArray);
CoordSystem coordSystem = new CoordSystem(editableChartDataModel);
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
// Undeclared exception!
try { 
  coordSystemUtilities.getYAxisLine2D();
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("de.progra.charting.CoordSystemUtilities", e);
}

Test 31: 
double[][] doubleArray = new double[1][7];
double[] doubleArray = new double[4];
doubleArray[0] = (-685.7777562423753);
doubleArray[1] = (-685.7777562423753);
doubleArray[2] = (-685.7777562423753);
doubleArray[3] = (-685.7777562423753);
String[] stringArray = new String[7];
EditableChartDataModel editableChartDataModel = new EditableChartDataModel(doubleArray, doubleArray, stringArray);
CoordSystem coordSystem = new CoordSystem(editableChartDataModel);
DefaultChartDataModelConstraints defaultChartDataModelConstraints = (DefaultChartDataModelConstraints)coordSystem.constraints;
Axis axis = new Axis(1, defaultChartDataModelConstraints);
coordSystem.setSecondYAxis(axis);
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
// Undeclared exception!
try { 
  coordSystemUtilities.getYAxisLine2D();
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("de.progra.charting.CoordSystemUtilities", e);
}

Test 32: 
double[][] doubleArray = new double[4][1];
double[] doubleArray = new double[2];
doubleArray[0] = 2.0;
doubleArray[0] = doubleArray;
doubleArray[1] = doubleArray;
doubleArray[2] = doubleArray;
doubleArray[3] = doubleArray;
String[] stringArray = new String[5];
EditableChartDataModel editableChartDataModel = new EditableChartDataModel(doubleArray, doubleArray, stringArray);
DecimalFormat decimalFormat = new DecimalFormat();
CoordSystem coordSystem = new CoordSystem(editableChartDataModel, decimalFormat, false, false, false);
DefaultChartDataModelConstraints chartDataModelConstraints = (DefaultChartDataModelConstraints)editableChartDataModel.getChartDataModelConstraints(15);
CoordSystemUtilities coordSystemUtilities = new CoordSystemUtilities(coordSystem, chartDataModelConstraints, chartDataModelConstraints, editableChartDataModel);
coordSystemUtilities.computeXAxisLabelHeight();
Test 33: 
ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel();
CoordSystem coordSystem = new CoordSystem(objectChartDataModel);
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
coordSystemUtilities.computeYAxisLabelWidth();
Test 34: 
ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel();
CoordSystem coordSystem = new CoordSystem(objectChartDataModel);
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
// Undeclared exception!
try { 
  coordSystemUtilities.getXAxisLine2D();
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("de.progra.charting.CoordSystemUtilities", e);
}

Test 35: 
double[][] doubleArray = new double[4][1];
double[] doubleArray = new double[4];
doubleArray[2] = Double.NaN;
doubleArray[1] = doubleArray;
String[] stringArray = new String[5];
EditableChartDataModel editableChartDataModel = new EditableChartDataModel(doubleArray, doubleArray, stringArray);
DecimalFormat decimalFormat = new DecimalFormat();
CoordSystem coordSystem = new CoordSystem(editableChartDataModel, decimalFormat, false, false, false);
DefaultChartDataModelConstraints chartDataModelConstraints = (DefaultChartDataModelConstraints)editableChartDataModel.getChartDataModelConstraints(15);
CoordSystemUtilities coordSystemUtilities = new CoordSystemUtilities(coordSystem, chartDataModelConstraints, chartDataModelConstraints, editableChartDataModel);
coordSystemUtilities.computeXAxisLabelHeight();
Test 36: 
double[][] doubleArray = new double[4][5];
double[] doubleArray = new double[8];
doubleArray[3] = (-53.42230997495);
doubleArray[3] = doubleArray;
String[] stringArray = new String[6];
EditableChartDataModel editableChartDataModel = new EditableChartDataModel(doubleArray, doubleArray[0], stringArray);
CoordSystem coordSystem = new CoordSystem(editableChartDataModel);
Font font = new Font("Lr<eF{M}}WW%_N]I9+0", 0, (-3022));
coordSystem.font = font;
DefaultChartDataModelConstraints defaultChartDataModelConstraints = new DefaultChartDataModelConstraints(editableChartDataModel, 0, true);
CoordSystemUtilities coordSystemUtilities = new CoordSystemUtilities(coordSystem, defaultChartDataModelConstraints, defaultChartDataModelConstraints, editableChartDataModel);
coordSystemUtilities.computeYAxisLabelWidth();
Test 37: 
ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel();
CoordSystem coordSystem = new CoordSystem(objectChartDataModel);
float[] floatArray = new float[5];
AffineTransform affineTransform = new AffineTransform(floatArray);
coordSystem.y2transform = affineTransform;
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
coordSystemUtilities.getSecondYAxisLine2D();
Test 38: 
ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel();
CoordSystem coordSystem = new CoordSystem(objectChartDataModel);
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
AffineTransform rotateInstance = AffineTransform.getRotateInstance((double) 20, (double) 0, (double) 15);
coordSystem.y1transform = rotateInstance;
coordSystemUtilities.getYAxisLine2D();
Test 39: 
EditableChartDataModel editableChartDataModel = new EditableChartDataModel();
CoordSystem coordSystem = new CoordSystem(editableChartDataModel);

Test 40: 
ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel();
CoordSystem coordSystem = new CoordSystem(objectChartDataModel);

Test 41: 
EditableChartDataModel editableChartDataModel = new EditableChartDataModel();
editableChartDataModel.setManualScale(true);
CoordSystem coordSystem = new CoordSystem(editableChartDataModel);

Test 42: 
double[][] doubleArray = new double[4][5];
String[] stringArray = new String[5];
ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel(doubleArray, doubleArray, stringArray);
CoordSystem coordSystem = new CoordSystem(objectChartDataModel);
DefaultChartDataModelConstraints defaultChartDataModelConstraints = new DefaultChartDataModelConstraints(objectChartDataModel, 1, true);
CoordSystemUtilities coordSystemUtilities = new CoordSystemUtilities(coordSystem, defaultChartDataModelConstraints, defaultChartDataModelConstraints, objectChartDataModel);

Test 43: 
Number[][] numberArray = new Number[1][3];
double[] doubleArray = new double[3];
String[] stringArray = new String[8];
DefaultChartDataModel defaultChartDataModel = new DefaultChartDataModel(numberArray, doubleArray, stringArray);
CoordSystem coordSystem = new CoordSystem(defaultChartDataModel);

Test 44: 
double[][] doubleArray = new double[6][5];

Test 45: 
double[][] doubleArray = new double[4][5];
String[] stringArray = new String[5];
ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel(doubleArray, doubleArray, stringArray);
CoordSystem coordSystem = new CoordSystem(objectChartDataModel);

Test 46: 
double[][] doubleArray = new double[6][5];
String[] stringArray = new String[8];
ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel(doubleArray, stringArray, stringArray);
StackedChartDataModelConstraints stackedChartDataModelConstraints = new StackedChartDataModelConstraints(objectChartDataModel, 1282, true);
JSpinner jSpinner = new JSpinner();
CoordSystem coordSystem = new CoordSystem(objectChartDataModel, (DecimalFormat) true, true, true, true);
CoordSystemUtilities coordSystemUtilities = new CoordSystemUtilities(coordSystem, stackedChartDataModelConstraints, stackedChartDataModelConstraints, objectChartDataModel);
coordSystemUtilities.computeBottomMargin();

Test 47: 
double[][] doubleArray = new double[1][5];

Test 48: 
double[][] doubleArray = new double[1][7];
double[] doubleArray = new double[4];
doubleArray[0] = (-1.9294442819002526);
doubleArray[1] = (-1.5294442819002523);
doubleArray[2] = (-1.9294442819002526);
doubleArray[3] = (-1.9294442819002526);
doubleArray[0] = (double) doubleArray;
String[] stringArray = new String[7];
EditableChartDataModel editableChartDataModel = new EditableChartDataModel((double[][]) doubleArray, doubleArray, stringArray);
CoordSystem coordSystem = new CoordSystem(editableChartDataModel);

Test 49: 
double[][] doubleArray = new double[2][7];
String[] stringArray = new String[7];
EditableChartDataModel editableChartDataModel = new EditableChartDataModel(doubleArray, (double[]) doubleArray, stringArray);
CoordSystem coordSystem = new CoordSystem(editableChartDataModel);

Test 50: 
double[][] doubleArray = new double[10][7];
String[] stringArray = new String[10];
EditableChartDataModel editableChartDataModel = new EditableChartDataModel(doubleArray, (double[]) doubleArray, stringArray);
CoordSystem coordSystem = new CoordSystem(editableChartDataModel);

Test 51: 
double[][] doubleArray = new double[10][7];
double[] doubleArray = new double[4];
String[] stringArray = new String[10];
EditableChartDataModel editableChartDataModel = new EditableChartDataModel((double[][]) doubleArray, doubleArray, stringArray);
CoordSystem coordSystem = new CoordSystem(editableChartDataModel);

Test 52: 
int[][] intArray = new int[2][8];
int[] intArray = new int[1];
intArray[0] = 248;
intArray[0] = (int) intArray;
intArray[0] = (int) intArray;
String[] stringArray = new String[5];
ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel((int[][]) intArray, (Object[]) intArray, stringArray);
CoordSystem coordSystem = new CoordSystem(objectChartDataModel);

Test 53: 
double[][] doubleArray = new double[1][7];
String[] stringArray = new String[7];
EditableChartDataModel editableChartDataModel = new EditableChartDataModel(doubleArray, (double[]) doubleArray, stringArray);
CoordSystem coordSystem = new CoordSystem(editableChartDataModel);

Test 54: 
ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel();
CoordSystem coordSystem = new CoordSystem(objectChartDataModel);
AffineTransform rotateInstance = AffineTransform.getRotateInstance((double) 20, (double) 15, (double) 15);
BufferedImage bufferedImage = new BufferedImage(15, 20, 1);
((BufferedImage) rotateInstance).createGraphics();

Test 55: 
ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel();
CoordSystem coordSystem = new CoordSystem(objectChartDataModel);
coordSystem.setPaintLabels(false);
AffineTransform.getRotateInstance((double) 20, (double) 0, (double) 15);
BufferedImage bufferedImage = new BufferedImage(15, 20, 1);
((BufferedImage)15).createGraphics();

Test 56: 
ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel();
CoordSystem coordSystem = new CoordSystem(objectChartDataModel);
coordSystem.setPaintLabels(false);
coordSystem.getDefaultTransform(0);
BufferedImage bufferedImage = new BufferedImage(15, 20, 1);
((BufferedImage)15).createGraphics();

Test 57: 
ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel();
CoordSystem coordSystem = new CoordSystem(objectChartDataModel);
AffineTransform rotateInstance = AffineTransform.getRotateInstance((double) 45, (double) 0, (double) 15);
BufferedImage bufferedImage = new BufferedImage(15, 20, 1);
((BufferedImage) rotateInstance).createGraphics();

Test 58: 
double[][] doubleArray = new double[2][7];
String[] stringArray = new String[7];
EditableChartDataModel editableChartDataModel = new EditableChartDataModel(doubleArray, (double[]) doubleArray, stringArray);
CoordSystem coordSystem = new CoordSystem(editableChartDataModel);

Test 59: 
double[][] doubleArray = new double[1][7];
String[] stringArray = new String[7];
EditableChartDataModel editableChartDataModel = new EditableChartDataModel(doubleArray, (double[]) doubleArray, stringArray);
CoordSystem coordSystem = new CoordSystem(editableChartDataModel);

Test 60: 
double[][] doubleArray = new double[1][7];
double[] doubleArray = new double[4];
doubleArray[0] = (-1.9294442819002526);
doubleArray[1] = (-1.5294442819002523);
doubleArray[2] = (-1.9294442819002526);
doubleArray[3] = (-1.5294442819002523);
doubleArray[0] = (double) doubleArray;
String[] stringArray = new String[7];
EditableChartDataModel editableChartDataModel = new EditableChartDataModel((double[][]) doubleArray, doubleArray, stringArray);
CoordSystem coordSystem = new CoordSystem(editableChartDataModel);
int _int = 0;
DefaultChartDataModelConstraints defaultChartDataModelConstraints = new DefaultChartDataModelConstraints(editableChartDataModel, _int);
int _int = 15;
Axis axis = new Axis(_int, defaultChartDataModelConstraints);
coordSystem.setSecondYAxis(axis);

Test 61: 
ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel();
CoordSystem coordSystem = new CoordSystem(objectChartDataModel);
AffineTransform rotateInstance = AffineTransform.getRotateInstance((double) 45, (double) 10, (double) 20);
BufferedImage bufferedImage = new BufferedImage(30, 40, 1);
((BufferedImage) rotateInstance).createGraphics();

Test 62: 
ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel();
CoordSystem coordSystem = new CoordSystem(objectChartDataModel);
AffineTransform rotateInstance = AffineTransform.getRotateInstance((double) 20, (double) 0, (double) 15);
BufferedImage bufferedImage = new BufferedImage(15, 20, 1);
((BufferedImage) rotateInstance).createGraphics();

Test 63: 
double[][] doubleArray = new double[1][3];
String[] stringArray = new String[4];
ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel(doubleArray, doubleArray, stringArray);
DecimalFormat decimalFormat = new DecimalFormat("]E2");
CoordSystem coordSystem = new CoordSystem(objectChartDataModel, decimalFormat, false, false, true);

Test 64: 
Number[][] numberArray = new Number[1][3];
double[] doubleArray = new double[3];
String[] stringArray = new String[8];
DefaultChartDataModel defaultChartDataModel = new DefaultChartDataModel(numberArray, doubleArray, stringArray);
CoordSystem coordSystem = new CoordSystem(defaultChartDataModel);

Test 65: 
double[][] doubleArray = new double[1][7];
String[] stringArray = new String[7];
EditableChartDataModel editableChartDataModel = new EditableChartDataModel(doubleArray, (double[]) doubleArray, stringArray);
CoordSystem coordSystem = new CoordSystem(editableChartDataModel);

Test 66: 
double[][] doubleArray = new double[4][1];
String[] stringArray = new String[5];
DecimalFormat decimalFormat = new DecimalFormat();
CoordSystem coordSystem = new CoordSystem((ChartDataModel) decimalFormat, (DecimalFormat) false, false, false, false);

Test 67: 
ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel();
CoordSystem coordSystem = new CoordSystem(objectChartDataModel);

Test 68: 
double[][] doubleArray = new double[4][1];
DecimalFormat decimalFormat = new DecimalFormat();
CoordSystem coordSystem = new CoordSystem((ChartDataModel) decimalFormat, (DecimalFormat) false, false, false, false);

Test 69: 
double[][] doubleArray = new double[4][5];
Font font = new Font("Arial", 0, (-3022));
DefaultChartDataModelConstraints defaultChartDataModelConstraints = new DefaultChartDataModelConstraints((AbstractChartDataModel) 0, (int) true, true);

Test 70: 
ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel();
CoordSystem coordSystem = new CoordSystem(objectChartDataModel);

Test 71: 
ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel();
CoordSystem coordSystem = new CoordSystem(objectChartDataModel);
AffineTransform.getRotateInstance((double) 90, (double) 0, (double) 15);


* Generated after the refinement and before minimization 72 tests with total length 535
* test suite isTestSuite: 72
Test 0: 
EditableChartDataModel editableChartDataModel = new EditableChartDataModel();
CoordSystem coordSystem = new CoordSystem(editableChartDataModel);
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
coordSystemUtilities.computeRightMargin();
Test 1: 
ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel();
CoordSystem coordSystem = new CoordSystem(objectChartDataModel);
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
coordSystemUtilities.computeTopMargin();
Test 2: 
double[][] doubleArray = new double[4][5];
String[] stringArray = new String[7];
double[] doubleArray = new double[3];
doubleArray[0] = 2.4;
doubleArray[1] = 3568.50611820713;
doubleArray[2] = 3291.858831452;
EditableChartDataModel editableChartDataModel = new EditableChartDataModel(doubleArray, doubleArray, stringArray);
CoordSystem coordSystem = new CoordSystem(editableChartDataModel);
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
coordSystemUtilities.computeLeftMargin();
Test 3: 
ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel();
CoordSystem coordSystem = new CoordSystem(objectChartDataModel);
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
coordSystemUtilities.computeLeftMargin();
Test 4: 
EditableChartDataModel editableChartDataModel = new EditableChartDataModel();
editableChartDataModel.setManualScale(true);
CoordSystem coordSystem = new CoordSystem(editableChartDataModel);
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
coordSystemUtilities.computeLeftMargin();
Test 5: 
double[][] doubleArray = new double[4][5];
String[] stringArray = new String[5];
ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel(doubleArray, doubleArray, stringArray);
CoordSystem coordSystem = new CoordSystem(objectChartDataModel);
double[] doubleArray = new double[9];
doubleArray[0] = (double) 20;
doubleArray[6] = (-1.0);
EditableChartDataModel editableChartDataModel = new EditableChartDataModel(doubleArray, doubleArray, stringArray);
DefaultChartDataModelConstraints defaultChartDataModelConstraints = new DefaultChartDataModelConstraints(editableChartDataModel, 1, true);
CoordSystemUtilities coordSystemUtilities = new CoordSystemUtilities(coordSystem, defaultChartDataModelConstraints, defaultChartDataModelConstraints, objectChartDataModel);
coordSystemUtilities.computeLeftMargin();
Test 6: 
Number[][] numberArray = new Number[1][3];
Number[] numberArray = new Number[2];
Integer integer = JLayeredPane.PALETTE_LAYER;
numberArray[0] = (Number) integer;
numberArray[1] = (Number) integer;
numberArray[0] = numberArray;
double[] doubleArray = new double[3];
String[] stringArray = new String[8];
DefaultChartDataModel defaultChartDataModel = new DefaultChartDataModel(numberArray, doubleArray, stringArray);
CoordSystem coordSystem = new CoordSystem(defaultChartDataModel);
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
coordSystemUtilities.computeBottomMargin();
Test 7: 
double[][] doubleArray = new double[6][5];
String[] stringArray = new String[8];
ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel(doubleArray, stringArray, stringArray);
StackedChartDataModelConstraints stackedChartDataModelConstraints = new StackedChartDataModelConstraints(objectChartDataModel, 1282, true);
JSpinner jSpinner = new JSpinner();
JSpinner.NumberEditor jSpinner_NumberEditor = new JSpinner.NumberEditor(jSpinner);
DecimalFormat format = jSpinner_NumberEditor.getFormat();
CoordSystem coordSystem = new CoordSystem(objectChartDataModel, format, true, true, true);
CoordSystemUtilities coordSystemUtilities = new CoordSystemUtilities(coordSystem, stackedChartDataModelConstraints, stackedChartDataModelConstraints, objectChartDataModel);
coordSystemUtilities.computeBottomMargin();
Test 8: 
double[][] doubleArray = new double[4][5];
String[] stringArray = new String[5];
ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel(doubleArray, doubleArray, stringArray);
CoordSystem coordSystem = new CoordSystem(objectChartDataModel);
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
coordSystemUtilities.computeBottomMargin();
Test 9: 
double[][] doubleArray = new double[6][5];
double[] doubleArray = new double[8];
doubleArray[2] = (-21.953295162629235);
doubleArray[3] = doubleArray;
String[] stringArray = new String[8];
ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel(doubleArray, stringArray, stringArray);
StackedChartDataModelConstraints stackedChartDataModelConstraints = new StackedChartDataModelConstraints(objectChartDataModel, 1282, true);
JSpinner jSpinner = new JSpinner();
JSpinner.NumberEditor jSpinner_NumberEditor = new JSpinner.NumberEditor(jSpinner);
DecimalFormat format = jSpinner_NumberEditor.getFormat();
CoordSystem coordSystem = new CoordSystem(objectChartDataModel, format, true, true, true);
CoordSystemUtilities coordSystemUtilities = new CoordSystemUtilities(coordSystem, stackedChartDataModelConstraints, stackedChartDataModelConstraints, objectChartDataModel);
coordSystemUtilities.computeBottomMargin();
Test 10: 
double[][] doubleArray = new double[1][5];
double[] doubleArray = new double[1];
doubleArray[0] = (double) 20;
doubleArray[0] = doubleArray;
String[] stringArray = new String[7];
ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel(doubleArray, doubleArray, stringArray);
CoordSystem coordSystem = new CoordSystem(objectChartDataModel);
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
coordSystemUtilities.computeXAxisLabelHeight();
Test 11: 
double[][] doubleArray = new double[1][7];
double[] doubleArray = new double[4];
doubleArray[0] = (-1.9294442819002526);
doubleArray[1] = (-1.5294442819002523);
doubleArray[2] = (-1.9294442819002526);
doubleArray[3] = (-1.9294442819002526);
doubleArray[0] = doubleArray;
String[] stringArray = new String[7];
EditableChartDataModel editableChartDataModel = new EditableChartDataModel(doubleArray, doubleArray, stringArray);
CoordSystem coordSystem = new CoordSystem(editableChartDataModel);
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
coordSystemUtilities.computeXAxisLabelHeight();
Test 12: 
double[][] doubleArray = new double[2][7];
double[] doubleArray = new double[4];
doubleArray[0] = 2.2339250900267746;
doubleArray[1] = 2.2339250900267746;
doubleArray[2] = 2.2339250900267746;
doubleArray[3] = 2.2339250900267746;
doubleArray[0] = doubleArray;
String[] stringArray = new String[7];
EditableChartDataModel editableChartDataModel = new EditableChartDataModel(doubleArray, doubleArray, stringArray);
CoordSystem coordSystem = new CoordSystem(editableChartDataModel);
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
coordSystemUtilities.computeYAxisLabelWidth();
Test 13: 
double[][] doubleArray = new double[10][7];
double[] doubleArray = new double[4];
doubleArray[0] = (-0.834107530926774);
doubleArray[1] = (-0.834107530926774);
doubleArray[2] = (-0.834107530926774);
doubleArray[3] = (-0.834107530926774);
doubleArray[0] = doubleArray;
String[] stringArray = new String[10];
EditableChartDataModel editableChartDataModel = new EditableChartDataModel(doubleArray, doubleArray, stringArray);
CoordSystem coordSystem = new CoordSystem(editableChartDataModel);
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
coordSystemUtilities.computeYAxisLabelWidth();
Test 14: 
double[][] doubleArray = new double[10][7];
double[] doubleArray = new double[4];
doubleArray[0] = (-0.834107530926774);
doubleArray[1] = (-0.834107530926774);
doubleArray[2] = (-0.834107530926774);
doubleArray[3] = (-0.834107530926774);
doubleArray[0] = doubleArray;
String[] stringArray = new String[10];
EditableChartDataModel editableChartDataModel = new EditableChartDataModel(doubleArray, doubleArray, stringArray);
CoordSystem coordSystem = new CoordSystem(editableChartDataModel);
Axis xAxis = coordSystem.getXAxis();
coordSystem.yaxis2 = xAxis;
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
coordSystemUtilities.computeYAxisLabelWidth();
Test 15: 
int[][] intArray = new int[2][8];
int[] intArray = new int[1];
intArray[0] = 248;
intArray[0] = intArray;
intArray[1] = intArray;
String[] stringArray = new String[5];
ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel(intArray, intArray, stringArray);
CoordSystem coordSystem = new CoordSystem(objectChartDataModel);
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
// Undeclared exception!
try { 
  coordSystemUtilities.drawNumericalXAxisTicks((Graphics2D) null);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("de.progra.charting.CoordSystemUtilities", e);
}

Test 16: 
double[][] doubleArray = new double[1][7];
double[] doubleArray = new double[4];
doubleArray[0] = (-1.9294442819002526);
doubleArray[1] = (-1.5294442819002523);
doubleArray[2] = (-1.9294442819002526);
doubleArray[3] = (-1.9294442819002526);
doubleArray[0] = doubleArray;
String[] stringArray = new String[7];
EditableChartDataModel editableChartDataModel = new EditableChartDataModel(doubleArray, doubleArray, stringArray);
CoordSystem coordSystem = new CoordSystem(editableChartDataModel);
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
// Undeclared exception!
try { 
  coordSystemUtilities.drawNumericalXAxisTicks((Graphics2D) null);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("de.progra.charting.CoordSystemUtilities", e);
}

Test 17: 
ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel();
CoordSystem coordSystem = new CoordSystem(objectChartDataModel);
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
AffineTransform rotateInstance = AffineTransform.getRotateInstance((double) 20, (double) 0, (double) 15);
coordSystem.y1transform = rotateInstance;
BufferedImage bufferedImage = new BufferedImage(15, 20, 1);
Graphics2D createGraphics = bufferedImage.createGraphics();
coordSystemUtilities.drawNumericalXAxisTicks(createGraphics);
Test 18: 
ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel();
CoordSystem coordSystem = new CoordSystem(objectChartDataModel);
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
coordSystem.setPaintLabels(false);
AffineTransform rotateInstance = AffineTransform.getRotateInstance((double) 20, (double) 0, (double) 15);
coordSystem.y1transform = rotateInstance;
BufferedImage bufferedImage = new BufferedImage(15, 20, 1);
Graphics2D createGraphics = bufferedImage.createGraphics();
coordSystemUtilities.drawNumericalXAxisTicks(createGraphics);
Test 19: 
double[][] doubleArray = new double[1][7];
double[] doubleArray = new double[4];
doubleArray[0] = (-1.9294442819002526);
doubleArray[1] = (-1.5294442819002523);
doubleArray[2] = (-1.9294442819002526);
doubleArray[3] = (-1.9294442819002526);
doubleArray[0] = doubleArray;
String[] stringArray = new String[7];
EditableChartDataModel editableChartDataModel = new EditableChartDataModel(doubleArray, doubleArray, stringArray);
CoordSystem coordSystem = new CoordSystem(editableChartDataModel);
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
// Undeclared exception!
try { 
  coordSystemUtilities.drawXAxisTicks((Graphics2D) null);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 20: 
ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel();
CoordSystem coordSystem = new CoordSystem(objectChartDataModel);
coordSystem.setPaintLabels(false);
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
AffineTransform defaultTransform = coordSystem.getDefaultTransform(0);
coordSystem.y1transform = defaultTransform;
BufferedImage bufferedImage = new BufferedImage(15, 20, 1);
Graphics2D createGraphics = bufferedImage.createGraphics();
coordSystemUtilities.drawXAxisTicks(createGraphics);
Test 21: 
ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel();
CoordSystem coordSystem = new CoordSystem(objectChartDataModel);
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
AffineTransform rotateInstance = AffineTransform.getRotateInstance((double) 20, (double) 0, (double) 15);
coordSystem.y1transform = rotateInstance;
BufferedImage bufferedImage = new BufferedImage(15, 20, 1);
Graphics2D createGraphics = bufferedImage.createGraphics();
// Undeclared exception!
try { 
  coordSystemUtilities.drawXAxisTicks(createGraphics);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 22: 
double[][] doubleArray = new double[2][7];
double[] doubleArray = new double[4];
doubleArray[0] = 0.32870741247955104;
doubleArray[1] = 0.32870741247955104;
doubleArray[2] = 0.32870741247955104;
doubleArray[3] = 0.32870741247955104;
doubleArray[0] = doubleArray;
String[] stringArray = new String[7];
EditableChartDataModel editableChartDataModel = new EditableChartDataModel(doubleArray, doubleArray, stringArray);
CoordSystem coordSystem = new CoordSystem(editableChartDataModel);
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
// Undeclared exception!
try { 
  coordSystemUtilities.drawYAxisTicks((Graphics2D) null);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 23: 
double[][] doubleArray = new double[1][7];
double[] doubleArray = new double[4];
doubleArray[0] = (-1.9294442819002526);
doubleArray[1] = (-1.5294442819002523);
doubleArray[2] = (-1.9294442819002526);
doubleArray[3] = (-1.5294442819002523);
doubleArray[0] = doubleArray;
String[] stringArray = new String[7];
EditableChartDataModel editableChartDataModel = new EditableChartDataModel(doubleArray, doubleArray, stringArray);
CoordSystem coordSystem = new CoordSystem(editableChartDataModel);
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
// Undeclared exception!
try { 
  coordSystemUtilities.drawYAxisTicks((Graphics2D) null);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 24: 
double[][] doubleArray = new double[1][7];
double[] doubleArray = new double[4];
doubleArray[0] = (-1.9294442819002526);
doubleArray[1] = (-1.5294442819002523);
doubleArray[2] = (-1.9294442819002526);
doubleArray[3] = (-1.5294442819002523);
doubleArray[0] = doubleArray;
String[] stringArray = new String[7];
EditableChartDataModel editableChartDataModel = new EditableChartDataModel(doubleArray, doubleArray, stringArray);
CoordSystem coordSystem = new CoordSystem(editableChartDataModel);
DefaultChartDataModelConstraints defaultChartDataModelConstraints = new DefaultChartDataModelConstraints(editableChartDataModel, 0);
Axis axis = new Axis(15, defaultChartDataModelConstraints);
coordSystem.setSecondYAxis(axis);
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
// Undeclared exception!
try { 
  coordSystemUtilities.drawYAxisTicks((Graphics2D) null);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 25: 
ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel();
CoordSystem coordSystem = new CoordSystem(objectChartDataModel);
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
AffineTransform rotateInstance = AffineTransform.getRotateInstance((double) 20, (double) 0, (double) 15);
coordSystem.y1transform = rotateInstance;
BufferedImage bufferedImage = new BufferedImage(15, 20, 1);
Graphics2D createGraphics = bufferedImage.createGraphics();
coordSystemUtilities.drawYAxisTicks(createGraphics);
Test 26: 
ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel();
CoordSystem coordSystem = new CoordSystem(objectChartDataModel);
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
AffineTransform rotateInstance = AffineTransform.getRotateInstance((double) 20, (double) 0, (double) 15);
coordSystem.y1transform = rotateInstance;
BufferedImage bufferedImage = new BufferedImage(15, 20, 1);
coordSystem.shouldPaintOnlyTick = false;
Graphics2D createGraphics = bufferedImage.createGraphics();
coordSystemUtilities.drawYAxisTicks(createGraphics);
Test 27: 
double[][] doubleArray = new double[1][3];
double[] doubleArray = new double[1];
doubleArray[0] = 6.0;
doubleArray[0] = doubleArray;
String[] stringArray = new String[4];
ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel(doubleArray, doubleArray, stringArray);
DecimalFormat decimalFormat = new DecimalFormat("]E2");
CoordSystem coordSystem = new CoordSystem(objectChartDataModel, decimalFormat, false, false, true);
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
// Undeclared exception!
try { 
  coordSystemUtilities.getXAxisLine2D();
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("de.progra.charting.CoordSystemUtilities", e);
}

Test 28: 
double[][] doubleArray = new double[1][7];
double[] doubleArray = new double[4];
doubleArray[0] = (-1.9294442819002526);
doubleArray[1] = (-1.5294442819002523);
doubleArray[2] = (-1.9294442819002526);
doubleArray[3] = (-1.9294442819002526);
doubleArray[0] = doubleArray;
String[] stringArray = new String[7];
EditableChartDataModel editableChartDataModel = new EditableChartDataModel(doubleArray, doubleArray, stringArray);
CoordSystem coordSystem = new CoordSystem(editableChartDataModel);
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
// Undeclared exception!
try { 
  coordSystemUtilities.getXAxisLine2D();
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("de.progra.charting.CoordSystemUtilities", e);
}

Test 29: 
Number[][] numberArray = new Number[1][3];
Number[] numberArray = new Number[2];
Integer integer = JLayeredPane.PALETTE_LAYER;
numberArray[0] = (Number) integer;
numberArray[1] = (Number) integer;
numberArray[0] = numberArray;
double[] doubleArray = new double[3];
doubleArray[0] = (double) 20;
doubleArray[1] = (double) 20;
doubleArray[2] = (double) 20;
String[] stringArray = new String[8];
DefaultChartDataModel defaultChartDataModel = new DefaultChartDataModel(numberArray, doubleArray, stringArray);
CoordSystem coordSystem = new CoordSystem(defaultChartDataModel);
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
// Undeclared exception!
try { 
  coordSystemUtilities.getYAxisLine2D();
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("de.progra.charting.CoordSystemUtilities", e);
}

Test 30: 
double[][] doubleArray = new double[1][7];
double[] doubleArray = new double[4];
doubleArray[0] = (-685.7777562423753);
doubleArray[1] = (-685.7777562423753);
doubleArray[2] = (-685.7777562423753);
doubleArray[3] = (-685.7777562423753);
String[] stringArray = new String[7];
EditableChartDataModel editableChartDataModel = new EditableChartDataModel(doubleArray, doubleArray, stringArray);
CoordSystem coordSystem = new CoordSystem(editableChartDataModel);
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
// Undeclared exception!
try { 
  coordSystemUtilities.getYAxisLine2D();
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("de.progra.charting.CoordSystemUtilities", e);
}

Test 31: 
double[][] doubleArray = new double[1][7];
double[] doubleArray = new double[4];
doubleArray[0] = (-685.7777562423753);
doubleArray[1] = (-685.7777562423753);
doubleArray[2] = (-685.7777562423753);
doubleArray[3] = (-685.7777562423753);
String[] stringArray = new String[7];
EditableChartDataModel editableChartDataModel = new EditableChartDataModel(doubleArray, doubleArray, stringArray);
CoordSystem coordSystem = new CoordSystem(editableChartDataModel);
DefaultChartDataModelConstraints defaultChartDataModelConstraints = (DefaultChartDataModelConstraints)coordSystem.constraints;
Axis axis = new Axis(1, defaultChartDataModelConstraints);
coordSystem.setSecondYAxis(axis);
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
// Undeclared exception!
try { 
  coordSystemUtilities.getYAxisLine2D();
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("de.progra.charting.CoordSystemUtilities", e);
}

Test 32: 
double[][] doubleArray = new double[4][1];
double[] doubleArray = new double[2];
doubleArray[0] = 2.0;
doubleArray[0] = doubleArray;
doubleArray[1] = doubleArray;
doubleArray[2] = doubleArray;
doubleArray[3] = doubleArray;
String[] stringArray = new String[5];
EditableChartDataModel editableChartDataModel = new EditableChartDataModel(doubleArray, doubleArray, stringArray);
DecimalFormat decimalFormat = new DecimalFormat();
CoordSystem coordSystem = new CoordSystem(editableChartDataModel, decimalFormat, false, false, false);
DefaultChartDataModelConstraints chartDataModelConstraints = (DefaultChartDataModelConstraints)editableChartDataModel.getChartDataModelConstraints(15);
CoordSystemUtilities coordSystemUtilities = new CoordSystemUtilities(coordSystem, chartDataModelConstraints, chartDataModelConstraints, editableChartDataModel);
coordSystemUtilities.computeXAxisLabelHeight();
Test 33: 
ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel();
CoordSystem coordSystem = new CoordSystem(objectChartDataModel);
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
coordSystemUtilities.computeYAxisLabelWidth();
Test 34: 
ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel();
CoordSystem coordSystem = new CoordSystem(objectChartDataModel);
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
// Undeclared exception!
try { 
  coordSystemUtilities.getXAxisLine2D();
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("de.progra.charting.CoordSystemUtilities", e);
}

Test 35: 
double[][] doubleArray = new double[4][1];
double[] doubleArray = new double[4];
doubleArray[2] = Double.NaN;
doubleArray[1] = doubleArray;
String[] stringArray = new String[5];
EditableChartDataModel editableChartDataModel = new EditableChartDataModel(doubleArray, doubleArray, stringArray);
DecimalFormat decimalFormat = new DecimalFormat();
CoordSystem coordSystem = new CoordSystem(editableChartDataModel, decimalFormat, false, false, false);
DefaultChartDataModelConstraints chartDataModelConstraints = (DefaultChartDataModelConstraints)editableChartDataModel.getChartDataModelConstraints(15);
CoordSystemUtilities coordSystemUtilities = new CoordSystemUtilities(coordSystem, chartDataModelConstraints, chartDataModelConstraints, editableChartDataModel);
coordSystemUtilities.computeXAxisLabelHeight();
Test 36: 
double[][] doubleArray = new double[4][5];
double[] doubleArray = new double[8];
doubleArray[3] = (-53.42230997495);
doubleArray[3] = doubleArray;
String[] stringArray = new String[6];
EditableChartDataModel editableChartDataModel = new EditableChartDataModel(doubleArray, doubleArray[0], stringArray);
CoordSystem coordSystem = new CoordSystem(editableChartDataModel);
Font font = new Font("Lr<eF{M}}WW%_N]I9+0", 0, (-3022));
coordSystem.font = font;
DefaultChartDataModelConstraints defaultChartDataModelConstraints = new DefaultChartDataModelConstraints(editableChartDataModel, 0, true);
CoordSystemUtilities coordSystemUtilities = new CoordSystemUtilities(coordSystem, defaultChartDataModelConstraints, defaultChartDataModelConstraints, editableChartDataModel);
coordSystemUtilities.computeYAxisLabelWidth();
Test 37: 
ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel();
CoordSystem coordSystem = new CoordSystem(objectChartDataModel);
float[] floatArray = new float[5];
AffineTransform affineTransform = new AffineTransform(floatArray);
coordSystem.y2transform = affineTransform;
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
coordSystemUtilities.getSecondYAxisLine2D();
Test 38: 
ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel();
CoordSystem coordSystem = new CoordSystem(objectChartDataModel);
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
AffineTransform rotateInstance = AffineTransform.getRotateInstance((double) 20, (double) 0, (double) 15);
coordSystem.y1transform = rotateInstance;
coordSystemUtilities.getYAxisLine2D();
Test 39: 
EditableChartDataModel editableChartDataModel = new EditableChartDataModel();
CoordSystem coordSystem = new CoordSystem(editableChartDataModel);

Test 40: 
ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel();
CoordSystem coordSystem = new CoordSystem(objectChartDataModel);

Test 41: 
EditableChartDataModel editableChartDataModel = new EditableChartDataModel();
editableChartDataModel.setManualScale(true);
CoordSystem coordSystem = new CoordSystem(editableChartDataModel);

Test 42: 
double[][] doubleArray = new double[4][5];
String[] stringArray = new String[5];
ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel(doubleArray, doubleArray, stringArray);
CoordSystem coordSystem = new CoordSystem(objectChartDataModel);
DefaultChartDataModelConstraints defaultChartDataModelConstraints = new DefaultChartDataModelConstraints(objectChartDataModel, 1, true);
CoordSystemUtilities coordSystemUtilities = new CoordSystemUtilities(coordSystem, defaultChartDataModelConstraints, defaultChartDataModelConstraints, objectChartDataModel);

Test 43: 
Number[][] numberArray = new Number[1][3];
double[] doubleArray = new double[3];
String[] stringArray = new String[8];
DefaultChartDataModel defaultChartDataModel = new DefaultChartDataModel(numberArray, doubleArray, stringArray);
CoordSystem coordSystem = new CoordSystem(defaultChartDataModel);

Test 44: 
double[][] doubleArray = new double[6][5];

Test 45: 
double[][] doubleArray = new double[4][5];
String[] stringArray = new String[5];
ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel(doubleArray, doubleArray, stringArray);
CoordSystem coordSystem = new CoordSystem(objectChartDataModel);

Test 46: 
double[][] doubleArray = new double[6][5];
String[] stringArray = new String[8];
ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel(doubleArray, stringArray, stringArray);
StackedChartDataModelConstraints stackedChartDataModelConstraints = new StackedChartDataModelConstraints(objectChartDataModel, 1282, true);
JSpinner jSpinner = new JSpinner();
CoordSystem coordSystem = new CoordSystem(objectChartDataModel, (DecimalFormat) true, true, true, true);
CoordSystemUtilities coordSystemUtilities = new CoordSystemUtilities(coordSystem, stackedChartDataModelConstraints, stackedChartDataModelConstraints, objectChartDataModel);
coordSystemUtilities.computeBottomMargin();

Test 47: 
double[][] doubleArray = new double[1][5];

Test 48: 
double[][] doubleArray = new double[1][7];
double[] doubleArray = new double[4];
doubleArray[0] = (-1.9294442819002526);
doubleArray[1] = (-1.5294442819002523);
doubleArray[2] = (-1.9294442819002526);
doubleArray[3] = (-1.9294442819002526);
doubleArray[0] = (double) doubleArray;
String[] stringArray = new String[7];
EditableChartDataModel editableChartDataModel = new EditableChartDataModel((double[][]) doubleArray, doubleArray, stringArray);
CoordSystem coordSystem = new CoordSystem(editableChartDataModel);

Test 49: 
double[][] doubleArray = new double[2][7];
String[] stringArray = new String[7];
EditableChartDataModel editableChartDataModel = new EditableChartDataModel(doubleArray, (double[]) doubleArray, stringArray);
CoordSystem coordSystem = new CoordSystem(editableChartDataModel);

Test 50: 
double[][] doubleArray = new double[10][7];
String[] stringArray = new String[10];
EditableChartDataModel editableChartDataModel = new EditableChartDataModel(doubleArray, (double[]) doubleArray, stringArray);
CoordSystem coordSystem = new CoordSystem(editableChartDataModel);

Test 51: 
double[][] doubleArray = new double[10][7];
double[] doubleArray = new double[4];
String[] stringArray = new String[10];
EditableChartDataModel editableChartDataModel = new EditableChartDataModel((double[][]) doubleArray, doubleArray, stringArray);
CoordSystem coordSystem = new CoordSystem(editableChartDataModel);

Test 52: 
int[][] intArray = new int[2][8];
int[] intArray = new int[1];
intArray[0] = 248;
intArray[0] = (int) intArray;
intArray[0] = (int) intArray;
String[] stringArray = new String[5];
ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel((int[][]) intArray, (Object[]) intArray, stringArray);
CoordSystem coordSystem = new CoordSystem(objectChartDataModel);

Test 53: 
double[][] doubleArray = new double[1][7];
String[] stringArray = new String[7];
EditableChartDataModel editableChartDataModel = new EditableChartDataModel(doubleArray, (double[]) doubleArray, stringArray);
CoordSystem coordSystem = new CoordSystem(editableChartDataModel);

Test 54: 
ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel();
CoordSystem coordSystem = new CoordSystem(objectChartDataModel);
AffineTransform rotateInstance = AffineTransform.getRotateInstance((double) 20, (double) 15, (double) 15);
BufferedImage bufferedImage = new BufferedImage(15, 20, 1);
((BufferedImage) rotateInstance).createGraphics();

Test 55: 
ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel();
CoordSystem coordSystem = new CoordSystem(objectChartDataModel);
coordSystem.setPaintLabels(false);
AffineTransform.getRotateInstance((double) 20, (double) 0, (double) 15);
BufferedImage bufferedImage = new BufferedImage(15, 20, 1);
((BufferedImage)15).createGraphics();

Test 56: 
ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel();
CoordSystem coordSystem = new CoordSystem(objectChartDataModel);
coordSystem.setPaintLabels(false);
coordSystem.getDefaultTransform(0);
BufferedImage bufferedImage = new BufferedImage(15, 20, 1);
((BufferedImage)15).createGraphics();

Test 57: 
ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel();
CoordSystem coordSystem = new CoordSystem(objectChartDataModel);
AffineTransform rotateInstance = AffineTransform.getRotateInstance((double) 45, (double) 0, (double) 15);
BufferedImage bufferedImage = new BufferedImage(15, 20, 1);
((BufferedImage) rotateInstance).createGraphics();

Test 58: 
double[][] doubleArray = new double[2][7];
String[] stringArray = new String[7];
EditableChartDataModel editableChartDataModel = new EditableChartDataModel(doubleArray, (double[]) doubleArray, stringArray);
CoordSystem coordSystem = new CoordSystem(editableChartDataModel);

Test 59: 
double[][] doubleArray = new double[1][7];
String[] stringArray = new String[7];
EditableChartDataModel editableChartDataModel = new EditableChartDataModel(doubleArray, (double[]) doubleArray, stringArray);
CoordSystem coordSystem = new CoordSystem(editableChartDataModel);

Test 60: 
double[][] doubleArray = new double[1][7];
double[] doubleArray = new double[4];
doubleArray[0] = (-1.9294442819002526);
doubleArray[1] = (-1.5294442819002523);
doubleArray[2] = (-1.9294442819002526);
doubleArray[3] = (-1.5294442819002523);
doubleArray[0] = (double) doubleArray;
String[] stringArray = new String[7];
EditableChartDataModel editableChartDataModel = new EditableChartDataModel((double[][]) doubleArray, doubleArray, stringArray);
CoordSystem coordSystem = new CoordSystem(editableChartDataModel);
int _int = 0;
DefaultChartDataModelConstraints defaultChartDataModelConstraints = new DefaultChartDataModelConstraints(editableChartDataModel, _int);
int _int = 15;
Axis axis = new Axis(_int, defaultChartDataModelConstraints);
coordSystem.setSecondYAxis(axis);

Test 61: 
ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel();
CoordSystem coordSystem = new CoordSystem(objectChartDataModel);
AffineTransform rotateInstance = AffineTransform.getRotateInstance((double) 45, (double) 10, (double) 20);
BufferedImage bufferedImage = new BufferedImage(30, 40, 1);
((BufferedImage) rotateInstance).createGraphics();

Test 62: 
ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel();
CoordSystem coordSystem = new CoordSystem(objectChartDataModel);
AffineTransform rotateInstance = AffineTransform.getRotateInstance((double) 20, (double) 0, (double) 15);
BufferedImage bufferedImage = new BufferedImage(15, 20, 1);
((BufferedImage) rotateInstance).createGraphics();

Test 63: 
double[][] doubleArray = new double[1][3];
String[] stringArray = new String[4];
ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel(doubleArray, doubleArray, stringArray);
DecimalFormat decimalFormat = new DecimalFormat("]E2");
CoordSystem coordSystem = new CoordSystem(objectChartDataModel, decimalFormat, false, false, true);

Test 64: 
Number[][] numberArray = new Number[1][3];
double[] doubleArray = new double[3];
String[] stringArray = new String[8];
DefaultChartDataModel defaultChartDataModel = new DefaultChartDataModel(numberArray, doubleArray, stringArray);
CoordSystem coordSystem = new CoordSystem(defaultChartDataModel);

Test 65: 
double[][] doubleArray = new double[1][7];
String[] stringArray = new String[7];
EditableChartDataModel editableChartDataModel = new EditableChartDataModel(doubleArray, (double[]) doubleArray, stringArray);
CoordSystem coordSystem = new CoordSystem(editableChartDataModel);

Test 66: 
double[][] doubleArray = new double[4][1];
String[] stringArray = new String[5];
DecimalFormat decimalFormat = new DecimalFormat();
CoordSystem coordSystem = new CoordSystem((ChartDataModel) decimalFormat, (DecimalFormat) false, false, false, false);

Test 67: 
ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel();
CoordSystem coordSystem = new CoordSystem(objectChartDataModel);

Test 68: 
double[][] doubleArray = new double[4][1];
DecimalFormat decimalFormat = new DecimalFormat();
CoordSystem coordSystem = new CoordSystem((ChartDataModel) decimalFormat, (DecimalFormat) false, false, false, false);

Test 69: 
double[][] doubleArray = new double[4][5];
Font font = new Font("Arial", 0, (-3022));
DefaultChartDataModelConstraints defaultChartDataModelConstraints = new DefaultChartDataModelConstraints((AbstractChartDataModel) 0, (int) true, true);

Test 70: 
ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel();
CoordSystem coordSystem = new CoordSystem(objectChartDataModel);

Test 71: 
ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel();
CoordSystem coordSystem = new CoordSystem(objectChartDataModel);
AffineTransform.getRotateInstance((double) 90, (double) 0, (double) 15);


* Minimizing test suite
* test suite isTestSuite: 38
Test 0: 
EditableChartDataModel editableChartDataModel = new EditableChartDataModel();
CoordSystem coordSystem = new CoordSystem(editableChartDataModel);
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
coordSystemUtilities.computeRightMargin();
Test 1: 
ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel();
CoordSystem coordSystem = new CoordSystem(objectChartDataModel);
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
coordSystemUtilities.computeTopMargin();
Test 2: 
double[][] doubleArray = new double[4][5];
String[] stringArray = new String[7];
double[] doubleArray = new double[3];
doubleArray[0] = 2.4;
doubleArray[1] = 3568.50611820713;
doubleArray[2] = 3291.858831452;
EditableChartDataModel editableChartDataModel = new EditableChartDataModel(doubleArray, doubleArray, stringArray);
CoordSystem coordSystem = new CoordSystem(editableChartDataModel);
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
coordSystemUtilities.computeLeftMargin();
Test 3: 
ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel();
CoordSystem coordSystem = new CoordSystem(objectChartDataModel);
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
coordSystemUtilities.computeLeftMargin();
Test 4: 
EditableChartDataModel editableChartDataModel = new EditableChartDataModel();
editableChartDataModel.setManualScale(true);
CoordSystem coordSystem = new CoordSystem(editableChartDataModel);
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
coordSystemUtilities.computeLeftMargin();
Test 5: 
double[][] doubleArray = new double[4][5];
String[] stringArray = new String[5];
ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel(doubleArray, doubleArray, stringArray);
CoordSystem coordSystem = new CoordSystem(objectChartDataModel);
double[] doubleArray = new double[9];
doubleArray[0] = (double) 20;
doubleArray[6] = (-1.0);
EditableChartDataModel editableChartDataModel = new EditableChartDataModel(doubleArray, doubleArray, stringArray);
DefaultChartDataModelConstraints defaultChartDataModelConstraints = new DefaultChartDataModelConstraints(editableChartDataModel, 1, true);
CoordSystemUtilities coordSystemUtilities = new CoordSystemUtilities(coordSystem, defaultChartDataModelConstraints, defaultChartDataModelConstraints, objectChartDataModel);
coordSystemUtilities.computeLeftMargin();
Test 6: 
Number[][] numberArray = new Number[1][3];
Number[] numberArray = new Number[2];
Integer integer = JLayeredPane.PALETTE_LAYER;
numberArray[0] = (Number) integer;
numberArray[1] = (Number) integer;
numberArray[0] = numberArray;
double[] doubleArray = new double[3];
String[] stringArray = new String[8];
DefaultChartDataModel defaultChartDataModel = new DefaultChartDataModel(numberArray, doubleArray, stringArray);
CoordSystem coordSystem = new CoordSystem(defaultChartDataModel);
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
coordSystemUtilities.computeBottomMargin();
Test 7: 
double[][] doubleArray = new double[4][5];
String[] stringArray = new String[5];
ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel(doubleArray, doubleArray, stringArray);
CoordSystem coordSystem = new CoordSystem(objectChartDataModel);
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
coordSystemUtilities.computeBottomMargin();
Test 8: 
double[][] doubleArray = new double[6][5];
String[] stringArray = new String[8];
ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel(doubleArray, stringArray, stringArray);
StackedChartDataModelConstraints stackedChartDataModelConstraints = new StackedChartDataModelConstraints(objectChartDataModel, 1282, true);
JSpinner jSpinner = new JSpinner();
JSpinner.NumberEditor jSpinner_NumberEditor = new JSpinner.NumberEditor(jSpinner);
DecimalFormat format = jSpinner_NumberEditor.getFormat();
CoordSystem coordSystem = new CoordSystem(objectChartDataModel, format, true, true, true);
CoordSystemUtilities coordSystemUtilities = new CoordSystemUtilities(coordSystem, stackedChartDataModelConstraints, stackedChartDataModelConstraints, objectChartDataModel);
coordSystemUtilities.computeBottomMargin();
Test 9: 
double[][] doubleArray = new double[6][5];
double[] doubleArray = new double[8];
doubleArray[2] = (-21.953295162629235);
doubleArray[3] = doubleArray;
String[] stringArray = new String[8];
ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel(doubleArray, stringArray, stringArray);
StackedChartDataModelConstraints stackedChartDataModelConstraints = new StackedChartDataModelConstraints(objectChartDataModel, 1282, true);
JSpinner jSpinner = new JSpinner();
JSpinner.NumberEditor jSpinner_NumberEditor = new JSpinner.NumberEditor(jSpinner);
DecimalFormat format = jSpinner_NumberEditor.getFormat();
CoordSystem coordSystem = new CoordSystem(objectChartDataModel, format, true, true, true);
CoordSystemUtilities coordSystemUtilities = new CoordSystemUtilities(coordSystem, stackedChartDataModelConstraints, stackedChartDataModelConstraints, objectChartDataModel);
coordSystemUtilities.computeBottomMargin();
Test 10: 
double[][] doubleArray = new double[1][5];
double[] doubleArray = new double[1];
doubleArray[0] = (double) 20;
doubleArray[0] = doubleArray;
String[] stringArray = new String[7];
ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel(doubleArray, doubleArray, stringArray);
CoordSystem coordSystem = new CoordSystem(objectChartDataModel);
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
coordSystemUtilities.computeXAxisLabelHeight();
Test 11: 
double[][] doubleArray = new double[1][7];
double[] doubleArray = new double[4];
doubleArray[0] = (-1.9294442819002526);
doubleArray[1] = (-1.5294442819002523);
doubleArray[2] = (-1.9294442819002526);
doubleArray[3] = (-1.9294442819002526);
doubleArray[0] = doubleArray;
String[] stringArray = new String[7];
EditableChartDataModel editableChartDataModel = new EditableChartDataModel(doubleArray, doubleArray, stringArray);
CoordSystem coordSystem = new CoordSystem(editableChartDataModel);
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
coordSystemUtilities.computeXAxisLabelHeight();
Test 12: 
double[][] doubleArray = new double[2][7];
double[] doubleArray = new double[4];
doubleArray[0] = 2.2339250900267746;
doubleArray[1] = 2.2339250900267746;
doubleArray[2] = 2.2339250900267746;
doubleArray[3] = 2.2339250900267746;
doubleArray[0] = doubleArray;
String[] stringArray = new String[7];
EditableChartDataModel editableChartDataModel = new EditableChartDataModel(doubleArray, doubleArray, stringArray);
CoordSystem coordSystem = new CoordSystem(editableChartDataModel);
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
coordSystemUtilities.computeYAxisLabelWidth();
Test 13: 
double[][] doubleArray = new double[10][7];
double[] doubleArray = new double[4];
doubleArray[0] = (-0.834107530926774);
doubleArray[1] = (-0.834107530926774);
doubleArray[2] = (-0.834107530926774);
doubleArray[3] = (-0.834107530926774);
doubleArray[0] = doubleArray;
String[] stringArray = new String[10];
EditableChartDataModel editableChartDataModel = new EditableChartDataModel(doubleArray, doubleArray, stringArray);
CoordSystem coordSystem = new CoordSystem(editableChartDataModel);
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
coordSystemUtilities.computeYAxisLabelWidth();
Test 14: 
double[][] doubleArray = new double[10][7];
double[] doubleArray = new double[4];
doubleArray[0] = (-0.834107530926774);
doubleArray[1] = (-0.834107530926774);
doubleArray[2] = (-0.834107530926774);
doubleArray[3] = (-0.834107530926774);
doubleArray[0] = doubleArray;
String[] stringArray = new String[10];
EditableChartDataModel editableChartDataModel = new EditableChartDataModel(doubleArray, doubleArray, stringArray);
CoordSystem coordSystem = new CoordSystem(editableChartDataModel);
Axis xAxis = coordSystem.getXAxis();
coordSystem.yaxis2 = xAxis;
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
coordSystemUtilities.computeYAxisLabelWidth();
Test 15: 
int[][] intArray = new int[2][8];
int[] intArray = new int[1];
intArray[0] = 248;
intArray[0] = intArray;
intArray[1] = intArray;
String[] stringArray = new String[5];
ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel(intArray, intArray, stringArray);
CoordSystem coordSystem = new CoordSystem(objectChartDataModel);
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
// Undeclared exception!
try { 
  coordSystemUtilities.drawNumericalXAxisTicks((Graphics2D) null);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("de.progra.charting.CoordSystemUtilities", e);
}

Test 16: 
double[][] doubleArray = new double[1][7];
double[] doubleArray = new double[4];
doubleArray[0] = (-1.9294442819002526);
doubleArray[1] = (-1.5294442819002523);
doubleArray[2] = (-1.9294442819002526);
doubleArray[3] = (-1.9294442819002526);
doubleArray[0] = doubleArray;
String[] stringArray = new String[7];
EditableChartDataModel editableChartDataModel = new EditableChartDataModel(doubleArray, doubleArray, stringArray);
CoordSystem coordSystem = new CoordSystem(editableChartDataModel);
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
// Undeclared exception!
try { 
  coordSystemUtilities.drawNumericalXAxisTicks((Graphics2D) null);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("de.progra.charting.CoordSystemUtilities", e);
}

Test 17: 
ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel();
CoordSystem coordSystem = new CoordSystem(objectChartDataModel);
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
AffineTransform rotateInstance = AffineTransform.getRotateInstance((double) 20, (double) 0, (double) 15);
coordSystem.y1transform = rotateInstance;
BufferedImage bufferedImage = new BufferedImage(15, 20, 1);
Graphics2D createGraphics = bufferedImage.createGraphics();
coordSystemUtilities.drawNumericalXAxisTicks(createGraphics);
Test 18: 
ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel();
CoordSystem coordSystem = new CoordSystem(objectChartDataModel);
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
coordSystem.setPaintLabels(false);
AffineTransform rotateInstance = AffineTransform.getRotateInstance((double) 20, (double) 0, (double) 15);
coordSystem.y1transform = rotateInstance;
BufferedImage bufferedImage = new BufferedImage(15, 20, 1);
Graphics2D createGraphics = bufferedImage.createGraphics();
coordSystemUtilities.drawNumericalXAxisTicks(createGraphics);
Test 19: 
double[][] doubleArray = new double[1][7];
double[] doubleArray = new double[4];
doubleArray[0] = (-1.9294442819002526);
doubleArray[1] = (-1.5294442819002523);
doubleArray[2] = (-1.9294442819002526);
doubleArray[3] = (-1.9294442819002526);
doubleArray[0] = doubleArray;
String[] stringArray = new String[7];
EditableChartDataModel editableChartDataModel = new EditableChartDataModel(doubleArray, doubleArray, stringArray);
CoordSystem coordSystem = new CoordSystem(editableChartDataModel);
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
// Undeclared exception!
try { 
  coordSystemUtilities.drawXAxisTicks((Graphics2D) null);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 20: 
ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel();
CoordSystem coordSystem = new CoordSystem(objectChartDataModel);
coordSystem.setPaintLabels(false);
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
AffineTransform defaultTransform = coordSystem.getDefaultTransform(0);
coordSystem.y1transform = defaultTransform;
BufferedImage bufferedImage = new BufferedImage(15, 20, 1);
Graphics2D createGraphics = bufferedImage.createGraphics();
coordSystemUtilities.drawXAxisTicks(createGraphics);
Test 21: 
ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel();
CoordSystem coordSystem = new CoordSystem(objectChartDataModel);
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
AffineTransform rotateInstance = AffineTransform.getRotateInstance((double) 20, (double) 0, (double) 15);
coordSystem.y1transform = rotateInstance;
BufferedImage bufferedImage = new BufferedImage(15, 20, 1);
Graphics2D createGraphics = bufferedImage.createGraphics();
// Undeclared exception!
try { 
  coordSystemUtilities.drawXAxisTicks(createGraphics);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 22: 
double[][] doubleArray = new double[2][7];
double[] doubleArray = new double[4];
doubleArray[0] = 0.32870741247955104;
doubleArray[1] = 0.32870741247955104;
doubleArray[2] = 0.32870741247955104;
doubleArray[3] = 0.32870741247955104;
doubleArray[0] = doubleArray;
String[] stringArray = new String[7];
EditableChartDataModel editableChartDataModel = new EditableChartDataModel(doubleArray, doubleArray, stringArray);
CoordSystem coordSystem = new CoordSystem(editableChartDataModel);
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
// Undeclared exception!
try { 
  coordSystemUtilities.drawYAxisTicks((Graphics2D) null);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 23: 
double[][] doubleArray = new double[1][7];
double[] doubleArray = new double[4];
doubleArray[0] = (-1.9294442819002526);
doubleArray[1] = (-1.5294442819002523);
doubleArray[2] = (-1.9294442819002526);
doubleArray[3] = (-1.5294442819002523);
doubleArray[0] = doubleArray;
String[] stringArray = new String[7];
EditableChartDataModel editableChartDataModel = new EditableChartDataModel(doubleArray, doubleArray, stringArray);
CoordSystem coordSystem = new CoordSystem(editableChartDataModel);
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
// Undeclared exception!
try { 
  coordSystemUtilities.drawYAxisTicks((Graphics2D) null);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 24: 
double[][] doubleArray = new double[1][7];
double[] doubleArray = new double[4];
doubleArray[0] = (-1.9294442819002526);
doubleArray[1] = (-1.5294442819002523);
doubleArray[2] = (-1.9294442819002526);
doubleArray[3] = (-1.5294442819002523);
doubleArray[0] = doubleArray;
String[] stringArray = new String[7];
EditableChartDataModel editableChartDataModel = new EditableChartDataModel(doubleArray, doubleArray, stringArray);
CoordSystem coordSystem = new CoordSystem(editableChartDataModel);
DefaultChartDataModelConstraints defaultChartDataModelConstraints = new DefaultChartDataModelConstraints(editableChartDataModel, 0);
Axis axis = new Axis(15, defaultChartDataModelConstraints);
coordSystem.setSecondYAxis(axis);
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
// Undeclared exception!
try { 
  coordSystemUtilities.drawYAxisTicks((Graphics2D) null);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 25: 
ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel();
CoordSystem coordSystem = new CoordSystem(objectChartDataModel);
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
AffineTransform rotateInstance = AffineTransform.getRotateInstance((double) 20, (double) 0, (double) 15);
coordSystem.y1transform = rotateInstance;
BufferedImage bufferedImage = new BufferedImage(15, 20, 1);
Graphics2D createGraphics = bufferedImage.createGraphics();
coordSystemUtilities.drawYAxisTicks(createGraphics);
Test 26: 
ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel();
CoordSystem coordSystem = new CoordSystem(objectChartDataModel);
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
AffineTransform rotateInstance = AffineTransform.getRotateInstance((double) 20, (double) 0, (double) 15);
coordSystem.y1transform = rotateInstance;
BufferedImage bufferedImage = new BufferedImage(15, 20, 1);
coordSystem.shouldPaintOnlyTick = false;
Graphics2D createGraphics = bufferedImage.createGraphics();
coordSystemUtilities.drawYAxisTicks(createGraphics);
Test 27: 
double[][] doubleArray = new double[1][3];
double[] doubleArray = new double[1];
doubleArray[0] = 6.0;
doubleArray[0] = doubleArray;
String[] stringArray = new String[4];
ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel(doubleArray, doubleArray, stringArray);
DecimalFormat decimalFormat = new DecimalFormat("]E2");
CoordSystem coordSystem = new CoordSystem(objectChartDataModel, decimalFormat, false, false, true);
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
// Undeclared exception!
try { 
  coordSystemUtilities.getXAxisLine2D();
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("de.progra.charting.CoordSystemUtilities", e);
}

Test 28: 
double[][] doubleArray = new double[1][7];
double[] doubleArray = new double[4];
doubleArray[0] = (-1.9294442819002526);
doubleArray[1] = (-1.5294442819002523);
doubleArray[2] = (-1.9294442819002526);
doubleArray[3] = (-1.9294442819002526);
doubleArray[0] = doubleArray;
String[] stringArray = new String[7];
EditableChartDataModel editableChartDataModel = new EditableChartDataModel(doubleArray, doubleArray, stringArray);
CoordSystem coordSystem = new CoordSystem(editableChartDataModel);
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
// Undeclared exception!
try { 
  coordSystemUtilities.getXAxisLine2D();
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("de.progra.charting.CoordSystemUtilities", e);
}

Test 29: 
Number[][] numberArray = new Number[1][3];
Number[] numberArray = new Number[2];
Integer integer = JLayeredPane.PALETTE_LAYER;
numberArray[0] = (Number) integer;
numberArray[1] = (Number) integer;
numberArray[0] = numberArray;
double[] doubleArray = new double[3];
doubleArray[0] = (double) 20;
doubleArray[1] = (double) 20;
doubleArray[2] = (double) 20;
String[] stringArray = new String[8];
DefaultChartDataModel defaultChartDataModel = new DefaultChartDataModel(numberArray, doubleArray, stringArray);
CoordSystem coordSystem = new CoordSystem(defaultChartDataModel);
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
// Undeclared exception!
try { 
  coordSystemUtilities.getYAxisLine2D();
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("de.progra.charting.CoordSystemUtilities", e);
}

Test 30: 
double[][] doubleArray = new double[1][7];
double[] doubleArray = new double[4];
doubleArray[0] = (-685.7777562423753);
doubleArray[1] = (-685.7777562423753);
doubleArray[2] = (-685.7777562423753);
doubleArray[3] = (-685.7777562423753);
String[] stringArray = new String[7];
EditableChartDataModel editableChartDataModel = new EditableChartDataModel(doubleArray, doubleArray, stringArray);
CoordSystem coordSystem = new CoordSystem(editableChartDataModel);
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
// Undeclared exception!
try { 
  coordSystemUtilities.getYAxisLine2D();
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("de.progra.charting.CoordSystemUtilities", e);
}

Test 31: 
double[][] doubleArray = new double[1][7];
double[] doubleArray = new double[4];
doubleArray[0] = (-685.7777562423753);
doubleArray[1] = (-685.7777562423753);
doubleArray[2] = (-685.7777562423753);
doubleArray[3] = (-685.7777562423753);
String[] stringArray = new String[7];
EditableChartDataModel editableChartDataModel = new EditableChartDataModel(doubleArray, doubleArray, stringArray);
CoordSystem coordSystem = new CoordSystem(editableChartDataModel);
DefaultChartDataModelConstraints defaultChartDataModelConstraints = (DefaultChartDataModelConstraints)coordSystem.constraints;
Axis axis = new Axis(1, defaultChartDataModelConstraints);
coordSystem.setSecondYAxis(axis);
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
// Undeclared exception!
try { 
  coordSystemUtilities.getYAxisLine2D();
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("de.progra.charting.CoordSystemUtilities", e);
}

Test 32: 
double[][] doubleArray = new double[4][1];
double[] doubleArray = new double[4];
doubleArray[2] = Double.NaN;
String[] stringArray = new String[5];
EditableChartDataModel editableChartDataModel = new EditableChartDataModel(doubleArray, doubleArray, stringArray);
DecimalFormat decimalFormat = new DecimalFormat();
CoordSystem coordSystem = new CoordSystem(editableChartDataModel, decimalFormat, false, false, false);
DefaultChartDataModelConstraints chartDataModelConstraints = (DefaultChartDataModelConstraints)editableChartDataModel.getChartDataModelConstraints(15);
CoordSystemUtilities coordSystemUtilities = new CoordSystemUtilities(coordSystem, chartDataModelConstraints, chartDataModelConstraints, editableChartDataModel);
coordSystemUtilities.computeXAxisLabelHeight();
Test 33: 
ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel();
CoordSystem coordSystem = new CoordSystem(objectChartDataModel);
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
coordSystemUtilities.computeYAxisLabelWidth();
Test 34: 
ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel();
CoordSystem coordSystem = new CoordSystem(objectChartDataModel);
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
// Undeclared exception!
try { 
  coordSystemUtilities.getXAxisLine2D();
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("de.progra.charting.CoordSystemUtilities", e);
}

Test 35: 
double[][] doubleArray = new double[4][5];
double[] doubleArray = new double[8];
doubleArray[3] = (-53.42230997495);
doubleArray[3] = doubleArray;
String[] stringArray = new String[6];
EditableChartDataModel editableChartDataModel = new EditableChartDataModel(doubleArray, doubleArray[0], stringArray);
CoordSystem coordSystem = new CoordSystem(editableChartDataModel);
Font font = new Font("Lr<eF{M}}WW%_N]I9+0", 0, (-3022));
coordSystem.font = font;
DefaultChartDataModelConstraints defaultChartDataModelConstraints = new DefaultChartDataModelConstraints(editableChartDataModel, 0, true);
CoordSystemUtilities coordSystemUtilities = new CoordSystemUtilities(coordSystem, defaultChartDataModelConstraints, defaultChartDataModelConstraints, editableChartDataModel);
coordSystemUtilities.computeYAxisLabelWidth();
Test 36: 
ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel();
CoordSystem coordSystem = new CoordSystem(objectChartDataModel);
float[] floatArray = new float[5];
AffineTransform affineTransform = new AffineTransform(floatArray);
coordSystem.y2transform = affineTransform;
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
coordSystemUtilities.getSecondYAxisLine2D();
Test 37: 
ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel();
CoordSystem coordSystem = new CoordSystem(objectChartDataModel);
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
AffineTransform rotateInstance = AffineTransform.getRotateInstance((double) 20, (double) 0, (double) 15);
coordSystem.y1transform = rotateInstance;
coordSystemUtilities.getYAxisLine2D();

* Going to analyze the coverage criteria
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 97%
* Total number of goals: 92
* Number of covered goals: 89
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 99%
* Total number of goals: 196
* Number of covered goals: 194
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 14%
* Total number of goals: 57
* Number of covered goals: 8
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 13
* Number of covered goals: 13
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 97%
* Total number of goals: 92
* Number of covered goals: 89
* Generated 38 tests with total length 367
* Resulting test suite's coverage: 82% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 36%
* Compiling and checking tests
Going to execute: removeTestsThatDoNotCompile
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: EditableChartDataModel arg0 = new EditableChartDataModel();
CoordSystem coordSystem = new CoordSystem(arg0);
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
int computeRightMargin = coordSystemUtilities.computeRightMargin();
assertEquals(15, computeRightMargin);


** It was a parseable test case! 
refined test name is: testComputeRightMarginReturnsCorrectValue
* Compiling Tests
refined test name is: testComputeRightMarginWithFixedWidth
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: ObjectChartDataModel arg0 = new ObjectChartDataModel();
CoordSystem coordSystem = new CoordSystem(arg0);
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
int computeTopMargin = coordSystemUtilities.computeTopMargin();
assertEquals(15, computeTopMargin);


** It was a parseable test case! 
refined test name is: testComputeTopMargin
* Compiling Tests
refined test name is: testComputeTopMargin
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: ObjectChartDataModel arg0 = new ObjectChartDataModel();
CoordSystem coordSystem = new CoordSystem(arg0);
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
int computeLeftMargin = coordSystemUtilities.computeLeftMargin();
assertEquals(32, computeLeftMargin);


** It was a parseable test case! 
refined test name is: testComputeLeftMarginValidDataModel
* Compiling Tests
refined test name is: testComputeLeftMarginValidInput
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: EditableChartDataModel arg0 = new EditableChartDataModel();
arg0.setManualScale(true);
CoordSystem coordSystem = new CoordSystem(arg0);
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
int computeLeftMargin = coordSystemUtilities.computeLeftMargin();
assertEquals(20, computeLeftMargin);


** It was a parseable test case! 
refined test name is: testComputeLeftMarginManualScale
* Compiling Tests
refined test name is: testComputeLeftMarginManualScale
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: double[][] arg1 = new double[4][5];
String[] arg2 = new String[5];
ObjectChartDataModel arg0 = new ObjectChartDataModel(arg1, arg1, arg2);
CoordSystem coordSystem = new CoordSystem(arg0);
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
int computeBottomMargin = coordSystemUtilities.computeBottomMargin();
assertEquals(20, computeBottomMargin);


** It was a parseable test case! 
refined test name is: testComputeBottomMarginShouldReturn20
* Compiling Tests
refined test name is: testComputeBottomMarginReturnsCorrectValue
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: double[][] arg1 = new double[1][5];
double[] doubleArray = new double[1];
doubleArray[0] = (double) 20;
arg1[0] = doubleArray;
String[] arg2 = new String[7];
ObjectChartDataModel arg0 = new ObjectChartDataModel(arg1, arg1, arg2);
CoordSystem coordSystem = new CoordSystem(arg0);
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
int computeXAxisLabelHeight = coordSystemUtilities.computeXAxisLabelHeight();
assertEquals(10, computeXAxisLabelHeight);


** It was a parseable test case! 
refined test name is: testComputeXAxisLabelHeight
* Compiling Tests
refined test name is: testComputeXAxisLabelHeight
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: int[][] arg1 = new int[2][8];
int[] intArray = new int[1];
intArray[0] = 248;
arg1[0] = intArray;
arg1[1] = intArray;
String[] arg2 = new String[5];
ObjectChartDataModel arg0 = new ObjectChartDataModel(arg1, arg1, arg2);
CoordSystem coordSystem = new CoordSystem(arg0);
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
// Undeclared exception!
try { 
  coordSystemUtilities.drawNumericalXAxisTicks((Graphics2D) null);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("de.progra.charting.CoordSystemUtilities", e);
}


** It was a parseable test case! 
refined test name is: testDrawNumericalXAxisTicksWithNullGraphics2D
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: ObjectChartDataModel arg0 = new ObjectChartDataModel();
CoordSystem coordSystem = new CoordSystem(arg0);
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
int computeYAxisLabelWidth = coordSystemUtilities.computeYAxisLabelWidth();
assertEquals(21, computeYAxisLabelWidth);


** It was a parseable test case! 
refined test name is: testComputeYAxisLabelWidthWithValidDataModel
* Compiling Tests
refined test name is: testComputeYAxisLabelWidthReturnsCorrectValue
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: ObjectChartDataModel arg0 = new ObjectChartDataModel();
CoordSystem coordSystem = new CoordSystem(arg0);
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
// Undeclared exception!
try { 
  coordSystemUtilities.getXAxisLine2D();
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("de.progra.charting.CoordSystemUtilities", e);
}


** It was a parseable test case! 
refined test name is: testGetXAxisLine2DShouldThrowNPEWhenModelIsNull
* Compiling Tests
refined test name is: testGetXAxisLine2DFailsWithoutDataModel
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: ObjectChartDataModel arg0 = new ObjectChartDataModel();
CoordSystem coordSystem = new CoordSystem(arg0);
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
AffineTransform rotateInstance = AffineTransform.getRotateInstance((double) 20, (double) 0, (double) 15);
coordSystem.y1transform = rotateInstance;
Line2D.Double yAxisLine2D = (Line2D.Double)coordSystemUtilities.getYAxisLine2D();
assertEquals(12.781233510186787, yAxisLine2D.x1, 0.01);
assertEquals(13.694178760914415, yAxisLine2D.x2, 0.01);


** It was a parseable test case! 
refined test name is: testRotatedYAxis
* Compiling Tests
refined test name is: testTransformedYAxisLine
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 18:45:21.115 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar2653206576042665634.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 18:45:21.149 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2653206576042665634.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 18:45:21.199 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar2653206576042665634.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 18:45:21.200 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2653206576042665634.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 18:45:21.283 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar2653206576042665634.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 18:45:21.285 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2653206576042665634.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 18:45:21.368 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar2653206576042665634.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 18:45:21.369 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2653206576042665634.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 18:45:21.462 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar2653206576042665634.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 18:45:21.462 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2653206576042665634.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 18:45:21.537 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar2653206576042665634.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 18:45:21.540 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2653206576042665634.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 18:45:21.622 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar2653206576042665634.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 18:45:21.623 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2653206576042665634.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 18:45:21.684 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar2653206576042665634.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 18:45:21.685 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2653206576042665634.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 18:45:21.749 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar2653206576042665634.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 18:45:21.750 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2653206576042665634.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 18:45:21.802 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar2653206576042665634.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 18:45:21.803 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2653206576042665634.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
** Write a test suite: 1 called: 1 to improve: false
** Write a test suite: 2 called: 2 to improve: false
** Write a test suite: 3 called: 3 to improve: false
** Write a test suite: 4 called: 4 to improve: false
** Write a test suite: 5 called: 5 to improve: false
** Write a test suite: 7 called: 6 to improve: false
** Write a test suite: 8 called: 7 to improve: false
** Write a test suite: 9 called: 8 to improve: false
[MASTER] 18:45:21.975 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar2653206576042665634.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 18:45:21.976 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2653206576042665634.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
** Write a test suite: 1 called: 1 to improve: false
** Write a test suite: 2 called: 2 to improve: false
** Write a test suite: 4 called: 3 to improve: false
** Write a test suite: 5 called: 4 to improve: false
** Write a test suite: 6 called: 5 to improve: false
** Write a test suite: 7 called: 6 to improve: false
** Write a test suite: 8 called: 7 to improve: false
** Write a test suite: 9 called: 8 to improve: false
[MASTER] 18:45:22.149 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar2653206576042665634.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 18:45:22.150 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2653206576042665634.jar
[MASTER] 18:45:27.245 [logback-1] WARN  TimeController - Already entered in phase: INLINING. This will mess up the timing calculations.
* Computation finished
