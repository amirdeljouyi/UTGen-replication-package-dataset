* EvoSuite 1.0.0-SNAPSHOT
* Going to generate test cases for class: de.progra.charting.CoordSystemUtilities
* Starting Client-0
* Properties loaded from /home/roham/Results-Utestgen/dataset/SF110-new-res/88_jopenchart/evosuite-files/evosuite.properties
* Connecting to master process on port 10557
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 14:38:34.711 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 14:38:34.714 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 14:38:34.717 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
[MASTER] 14:38:35.301 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 14:38:35.308 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 14:38:35.321 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 14:38:36.742 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.ZoneId
[MASTER] 14:38:36.782 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.Temporal
[MASTER] 14:38:36.783 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAccessor
[MASTER] 14:38:36.783 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalField
[MASTER] 14:38:36.784 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalUnit
[MASTER] 14:38:36.784 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAmount
[MASTER] 14:38:36.785 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.Clock
[MASTER] 14:38:36.786 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalQuery
[MASTER] 14:38:36.786 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAdjuster
[MASTER] 14:38:36.798 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.Chronology
[MASTER] 14:38:36.810 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.Era
* Finished analyzing classpath
* Generating tests for class de.progra.charting.CoordSystemUtilities
* Test criteria:
  - Branch Coverage
  - Line Coverage
  - Method-Output Coverage
  - Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 450
* Using seed 1710340711739
* Starting evolution
[Progress:>                             0%] [Cov:>                                  0%]* Initial Number of Goals in DynaMOSA = 188 / 450
[Progress:>                             0%] [Cov:=====>                             17%][Progress:>                             1%] [Cov:==========>                        30%][Progress:>                             1%] [Cov:==============>                    40%][Progress:>                             2%] [Cov:==============>                    42%][Progress:>                             2%] [Cov:================>                  48%][MASTER] 14:38:40.289 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.ChronoLocalDate
[Progress:=>                            4%] [Cov:================>                  48%][Progress:=>                            4%] [Cov:================>                  48%][Progress:=>                            4%] [Cov:================>                  48%][Progress:=>                            4%] [Cov:=================>                 49%][Progress:=>                            5%] [Cov:=================>                 49%][Progress:=>                            5%] [Cov:==================>                54%][Progress:=>                            5%] [Cov:==================>                54%][Progress:=>                            5%] [Cov:==================>                54%][Progress:=>                            5%] [Cov:==================>                54%][Progress:=>                            6%] [Cov:==================>                54%][Progress:=>                            6%] [Cov:==================>                54%][Progress:=>                            6%] [Cov:===================>               55%][Progress:=>                            6%] [Cov:===================>               55%][Progress:=>                            6%] [Cov:===================>               56%][Progress:==>                           7%] [Cov:===================>               56%][Progress:==>                           9%] [Cov:===================>               56%][Progress:==>                           9%] [Cov:===================>               56%][Progress:==>                           9%] [Cov:===================>               56%][Progress:===>                          10%] [Cov:===================>               56%][Progress:===>                          10%] [Cov:===================>               56%][Progress:===>                          10%] [Cov:===================>               56%][Progress:===>                          11%] [Cov:===================>               56%][Progress:===>                          11%] [Cov:====================>              59%][Progress:===>                          11%] [Cov:====================>              59%][Progress:===>                          11%] [Cov:======================>            64%][Progress:===>                          12%] [Cov:======================>            64%][Progress:===>                          12%] [Cov:=======================>           68%][Progress:===>                          12%] [Cov:=======================>           68%][Progress:===>                          12%] [Cov:=======================>           68%][Progress:===>                          12%] [Cov:=======================>           68%][Progress:===>                          13%] [Cov:=======================>           68%][Progress:===>                          13%] [Cov:=======================>           68%][Progress:===>                          13%] [Cov:=======================>           68%][Progress:====>                         14%] [Cov:=======================>           68%][Progress:====>                         14%] [Cov:=======================>           68%][Progress:====>                         14%] [Cov:=======================>           68%][Progress:====>                         14%] [Cov:=======================>           68%][Progress:====>                         14%] [Cov:=======================>           68%][Progress:====>                         14%] [Cov:=======================>           68%][Progress:====>                         15%] [Cov:=======================>           68%][Progress:====>                         15%] [Cov:=======================>           68%][Progress:====>                         15%] [Cov:=======================>           68%][Progress:====>                         15%] [Cov:=======================>           68%][Progress:====>                         15%] [Cov:========================>          69%][Progress:====>                         16%] [Cov:========================>          69%][Progress:====>                         16%] [Cov:========================>          69%][Progress:====>                         16%] [Cov:========================>          69%][Progress:====>                         16%] [Cov:========================>          69%][Progress:====>                         16%] [Cov:========================>          70%][Progress:====>                         16%] [Cov:========================>          70%][Progress:=====>                        17%] [Cov:========================>          70%][Progress:=====>                        17%] [Cov:========================>          70%][Progress:=====>                        17%] [Cov:========================>          70%][Progress:=====>                        17%] [Cov:========================>          70%][Progress:=====>                        17%] [Cov:========================>          70%][Progress:=====>                        17%] [Cov:========================>          71%][Progress:=====>                        17%] [Cov:========================>          71%][Progress:=====>                        18%] [Cov:========================>          71%][Progress:=====>                        18%] [Cov:========================>          71%][Progress:=====>                        18%] [Cov:========================>          71%][Progress:=====>                        18%] [Cov:========================>          71%][Progress:=====>                        18%] [Cov:========================>          71%][Progress:=====>                        18%] [Cov:========================>          71%][Progress:=====>                        19%] [Cov:========================>          71%][Progress:=====>                        19%] [Cov:========================>          71%][Progress:=====>                        19%] [Cov:========================>          71%][Progress:=====>                        19%] [Cov:========================>          71%][Progress:=====>                        19%] [Cov:========================>          71%][Progress:======>                       20%] [Cov:========================>          71%][Progress:======>                       20%] [Cov:========================>          71%][Progress:======>                       20%] [Cov:========================>          71%][Progress:======>                       20%] [Cov:========================>          71%][Progress:======>                       20%] [Cov:========================>          71%][Progress:======>                       20%] [Cov:========================>          71%][Progress:======>                       21%] [Cov:========================>          71%][Progress:======>                       21%] [Cov:========================>          71%][Progress:======>                       21%] [Cov:========================>          71%][Progress:======>                       21%] [Cov:========================>          71%][Progress:======>                       21%] [Cov:========================>          71%][Progress:======>                       21%] [Cov:========================>          71%][Progress:======>                       22%] [Cov:========================>          71%][Progress:======>                       22%] [Cov:========================>          71%][Progress:======>                       22%] [Cov:========================>          71%][Progress:======>                       22%] [Cov:========================>          71%][Progress:======>                       22%] [Cov:========================>          71%][Progress:======>                       22%] [Cov:========================>          71%][Progress:======>                       22%] [Cov:========================>          71%][Progress:======>                       23%] [Cov:========================>          71%][Progress:======>                       23%] [Cov:========================>          71%][Progress:======>                       23%] [Cov:========================>          71%][Progress:======>                       23%] [Cov:=========================>         72%][Progress:======>                       23%] [Cov:=========================>         72%][Progress:======>                       23%] [Cov:=========================>         72%][Progress:======>                       23%] [Cov:=========================>         72%][Progress:=======>                      24%] [Cov:=========================>         72%][Progress:=======>                      24%] [Cov:=========================>         72%][Progress:=======>                      25%] [Cov:=========================>         72%][Progress:=======>                      25%] [Cov:=========================>         73%][Progress:=======>                      25%] [Cov:=========================>         73%][Progress:=======>                      25%] [Cov:=========================>         73%][Progress:=======>                      25%] [Cov:=========================>         73%][Progress:=======>                      25%] [Cov:=========================>         73%][Progress:=======>                      25%] [Cov:=========================>         73%][Progress:=======>                      26%] [Cov:=========================>         73%][Progress:=======>                      26%] [Cov:=========================>         73%][Progress:=======>                      26%] [Cov:=========================>         73%][Progress:=======>                      26%] [Cov:=========================>         73%][Progress:=======>                      26%] [Cov:=========================>         73%][Progress:=======>                      26%] [Cov:=========================>         73%][Progress:========>                     27%] [Cov:=========================>         73%][Progress:========>                     27%] [Cov:=========================>         73%][Progress:========>                     27%] [Cov:=========================>         73%][Progress:========>                     27%] [Cov:=========================>         73%][Progress:========>                     27%] [Cov:=========================>         73%][Progress:========>                     27%] [Cov:=========================>         73%][Progress:========>                     27%] [Cov:=========================>         73%][Progress:========>                     27%] [Cov:=========================>         73%][Progress:========>                     28%] [Cov:=========================>         73%][Progress:========>                     28%] [Cov:=========================>         74%][Progress:========>                     28%] [Cov:=========================>         74%][Progress:========>                     28%] [Cov:=========================>         74%][Progress:========>                     28%] [Cov:=========================>         74%][Progress:========>                     28%] [Cov:=========================>         74%][Progress:=========>                    30%] [Cov:=========================>         74%][Progress:=========>                    30%] [Cov:=========================>         74%][Progress:=========>                    30%] [Cov:=========================>         74%][Progress:=========>                    31%] [Cov:=========================>         74%][Progress:=========>                    31%] [Cov:=========================>         74%][Progress:=========>                    31%] [Cov:=========================>         74%][Progress:=========>                    31%] [Cov:=========================>         74%][Progress:=========>                    31%] [Cov:=========================>         74%][Progress:=========>                    31%] [Cov:=========================>         74%][Progress:=========>                    31%] [Cov:=========================>         74%][Progress:=========>                    31%] [Cov:=========================>         74%][Progress:=========>                    31%] [Cov:=========================>         74%][Progress:=========>                    32%] [Cov:=========================>         74%][Progress:=========>                    32%] [Cov:=========================>         74%][Progress:=========>                    32%] [Cov:=========================>         74%][Progress:=========>                    32%] [Cov:=========================>         74%][Progress:=========>                    32%] [Cov:=========================>         74%][Progress:=========>                    32%] [Cov:=========================>         74%][Progress:=========>                    32%] [Cov:=========================>         74%][Progress:=========>                    33%] [Cov:=========================>         74%][Progress:=========>                    33%] [Cov:=========================>         74%][Progress:=========>                    33%] [Cov:=========================>         74%][Progress:=========>                    33%] [Cov:=========================>         74%][Progress:=========>                    33%] [Cov:=========================>         74%][Progress:=========>                    33%] [Cov:=========================>         74%][Progress:=========>                    33%] [Cov:=========================>         74%][Progress:==========>                   34%] [Cov:=========================>         74%][Progress:==========>                   34%] [Cov:=========================>         74%][Progress:==========>                   34%] [Cov:=========================>         74%][Progress:==========>                   34%] [Cov:=========================>         74%][Progress:==========>                   34%] [Cov:=========================>         74%][Progress:==========>                   34%] [Cov:==========================>        75%][Progress:==========>                   35%] [Cov:==========================>        75%][Progress:==========>                   35%] [Cov:==========================>        75%][Progress:==========>                   35%] [Cov:==========================>        75%][Progress:==========>                   35%] [Cov:==========================>        75%][Progress:==========>                   35%] [Cov:==========================>        75%][Progress:==========>                   36%] [Cov:==========================>        75%][Progress:==========>                   36%] [Cov:==========================>        75%][Progress:==========>                   36%] [Cov:==========================>        75%][Progress:==========>                   36%] [Cov:==========================>        75%][Progress:==========>                   36%] [Cov:==========================>        75%][Progress:==========>                   36%] [Cov:==========================>        75%][Progress:===========>                  37%] [Cov:==========================>        75%][Progress:===========>                  37%] [Cov:==========================>        75%][Progress:===========>                  37%] [Cov:==========================>        75%][Progress:===========>                  37%] [Cov:==========================>        75%][Progress:===========>                  37%] [Cov:==========================>        75%][Progress:===========>                  38%] [Cov:==========================>        75%][Progress:===========>                  38%] [Cov:==========================>        75%][Progress:===========>                  38%] [Cov:==========================>        75%][Progress:===========>                  38%] [Cov:==========================>        75%][MASTER] 14:39:15.936 [logback-1] WARN  TestCluster - Failed to check cache for java.util.Enumeration<E> : Type points to itself
[Progress:===========>                  38%] [Cov:==========================>        75%][Progress:===========>                  38%] [Cov:==========================>        75%][Progress:===========>                  38%] [Cov:==========================>        76%][Progress:============>                 41%] [Cov:==========================>        76%][Progress:============>                 41%] [Cov:==========================>        76%][Progress:============>                 41%] [Cov:==========================>        76%][Progress:============>                 41%] [Cov:==========================>        76%][Progress:============>                 41%] [Cov:==========================>        77%][Progress:============>                 41%] [Cov:==========================>        77%][Progress:============>                 41%] [Cov:==========================>        77%][Progress:============>                 41%] [Cov:==========================>        77%][Progress:============>                 42%] [Cov:==========================>        77%][Progress:============>                 42%] [Cov:==========================>        77%][Progress:============>                 42%] [Cov:==========================>        77%][Progress:============>                 42%] [Cov:==========================>        77%][Progress:============>                 42%] [Cov:==========================>        77%][Progress:============>                 42%] [Cov:==========================>        77%][Progress:============>                 42%] [Cov:==========================>        77%][Progress:============>                 43%] [Cov:==========================>        77%][Progress:============>                 43%] [Cov:==========================>        77%][Progress:============>                 43%] [Cov:==========================>        77%][Progress:=============>                44%] [Cov:==========================>        77%][Progress:=============>                44%] [Cov:==========================>        77%][Progress:=============>                44%] [Cov:==========================>        77%][Progress:=============>                45%] [Cov:==========================>        77%][Progress:=============>                45%] [Cov:==========================>        77%][Progress:=============>                45%] [Cov:==========================>        77%][Progress:=============>                45%] [Cov:==========================>        77%][Progress:=============>                45%] [Cov:==========================>        77%][Progress:=============>                45%] [Cov:==========================>        77%][Progress:=============>                46%] [Cov:==========================>        77%][Progress:=============>                46%] [Cov:==========================>        77%][Progress:=============>                46%] [Cov:==========================>        77%][Progress:=============>                46%] [Cov:==========================>        77%][Progress:=============>                46%] [Cov:==========================>        77%][Progress:=============>                46%] [Cov:==========================>        77%][Progress:=============>                46%] [Cov:==========================>        77%][Progress:=============>                46%] [Cov:==========================>        77%][Progress:=============>                46%] [Cov:==========================>        77%][Progress:=============>                46%] [Cov:==========================>        77%][Progress:=============>                46%] [Cov:==========================>        77%][Progress:==============>               47%] [Cov:==========================>        77%][Progress:==============>               47%] [Cov:===========================>       78%][Progress:==============>               47%] [Cov:===========================>       78%][MASTER] 14:39:24.856 [logback-1] WARN  TestCluster - Failed to check cache for javax.swing.RowFilter<M, I>.ComparisonType : Type points to itself
[Progress:==============>               47%] [Cov:===========================>       78%][Progress:==============>               47%] [Cov:===========================>       78%][Progress:==============>               47%] [Cov:===========================>       78%][Progress:==============>               47%] [Cov:===========================>       78%][Progress:==============>               48%] [Cov:===========================>       78%][Progress:==============>               48%] [Cov:===========================>       78%][Progress:==============>               48%] [Cov:===========================>       78%][Progress:==============>               49%] [Cov:===========================>       78%][Progress:===============>              50%] [Cov:===========================>       78%][Progress:===============>              51%] [Cov:===========================>       78%][Progress:===============>              51%] [Cov:===========================>       78%][Progress:===============>              51%] [Cov:===========================>       78%][Progress:===============>              51%] [Cov:===========================>       78%][Progress:===============>              51%] [Cov:===========================>       78%][Progress:===============>              52%] [Cov:===========================>       78%][Progress:===============>              52%] [Cov:===========================>       78%][Progress:===============>              52%] [Cov:===========================>       78%][Progress:===============>              53%] [Cov:===========================>       78%][Progress:===============>              53%] [Cov:===========================>       78%][Progress:===============>              53%] [Cov:===========================>       78%][Progress:===============>              53%] [Cov:===========================>       78%][Progress:===============>              53%] [Cov:===========================>       78%][Progress:================>             54%] [Cov:===========================>       78%][Progress:================>             54%] [Cov:===========================>       78%][Progress:================>             54%] [Cov:===========================>       78%][Progress:================>             54%] [Cov:===========================>       78%][Progress:================>             54%] [Cov:===========================>       78%][Progress:================>             54%] [Cov:===========================>       78%][Progress:================>             54%] [Cov:===========================>       78%][Progress:================>             54%] [Cov:===========================>       78%][Progress:================>             54%] [Cov:===========================>       78%][Progress:================>             55%] [Cov:===========================>       78%][Progress:================>             55%] [Cov:===========================>       78%][Progress:================>             55%] [Cov:===========================>       78%][Progress:================>             55%] [Cov:===========================>       78%][Progress:================>             55%] [Cov:===========================>       78%][Progress:================>             55%] [Cov:===========================>       78%][Progress:================>             55%] [Cov:===========================>       78%][Progress:================>             55%] [Cov:===========================>       78%][Progress:================>             55%] [Cov:===========================>       78%][Progress:================>             56%] [Cov:===========================>       78%][Progress:================>             56%] [Cov:===========================>       78%][Progress:================>             56%] [Cov:===========================>       78%][Progress:================>             56%] [Cov:===========================>       78%][Progress:================>             56%] [Cov:===========================>       78%][Progress:================>             56%] [Cov:===========================>       78%][Progress:================>             56%] [Cov:===========================>       78%][Progress:================>             56%] [Cov:===========================>       78%][Progress:=================>            57%] [Cov:===========================>       78%][Progress:=================>            57%] [Cov:===========================>       79%][Progress:=================>            57%] [Cov:===========================>       79%][Progress:=================>            57%] [Cov:===========================>       79%][Progress:=================>            57%] [Cov:===========================>       79%][Progress:=================>            57%] [Cov:===========================>       79%][Progress:=================>            57%] [Cov:===========================>       79%][Progress:=================>            58%] [Cov:===========================>       79%][Progress:=================>            58%] [Cov:===========================>       79%][Progress:=================>            58%] [Cov:===========================>       79%][Progress:=================>            59%] [Cov:===========================>       79%][Progress:=================>            59%] [Cov:===========================>       79%][Progress:=================>            59%] [Cov:===========================>       79%][Progress:=================>            59%] [Cov:===========================>       79%][Progress:==================>           60%] [Cov:===========================>       79%][Progress:==================>           60%] [Cov:===========================>       79%][Progress:==================>           60%] [Cov:===========================>       79%][Progress:==================>           60%] [Cov:===========================>       79%][Progress:==================>           60%] [Cov:===========================>       79%][Progress:==================>           61%] [Cov:===========================>       79%][Progress:==================>           61%] [Cov:===========================>       79%][Progress:==================>           62%] [Cov:===========================>       79%][Progress:==================>           62%] [Cov:===========================>       79%][Progress:==================>           62%] [Cov:===========================>       79%][Progress:==================>           62%] [Cov:===========================>       79%][Progress:==================>           63%] [Cov:===========================>       79%][Progress:==================>           63%] [Cov:===========================>       79%][Progress:==================>           63%] [Cov:===========================>       79%][Progress:==================>           63%] [Cov:===========================>       79%][Progress:==================>           63%] [Cov:===========================>       79%][Progress:==================>           63%] [Cov:===========================>       79%][Progress:===================>          64%] [Cov:===========================>       79%][Progress:===================>          64%] [Cov:===========================>       79%][Progress:===================>          65%] [Cov:===========================>       79%][Progress:===================>          65%] [Cov:===========================>       79%][Progress:===================>          65%] [Cov:===========================>       79%][Progress:===================>          65%] [Cov:===========================>       79%][Progress:===================>          65%] [Cov:===========================>       79%][Progress:===================>          65%] [Cov:===========================>       79%][Progress:===================>          65%] [Cov:===========================>       79%][Progress:===================>          65%] [Cov:===========================>       79%][Progress:===================>          65%] [Cov:===========================>       79%][Progress:===================>          66%] [Cov:===========================>       79%][Progress:===================>          66%] [Cov:===========================>       79%][Progress:===================>          66%] [Cov:===========================>       79%][Progress:===================>          66%] [Cov:===========================>       79%][Progress:===================>          66%] [Cov:===========================>       79%][Progress:===================>          66%] [Cov:===========================>       79%][Progress:===================>          66%] [Cov:===========================>       79%][Progress:====================>         67%] [Cov:===========================>       79%][Progress:====================>         67%] [Cov:===========================>       79%][Progress:====================>         67%] [Cov:===========================>       79%][Progress:====================>         67%] [Cov:===========================>       79%][Progress:====================>         67%] [Cov:===========================>       79%][Progress:====================>         67%] [Cov:===========================>       79%][Progress:====================>         67%] [Cov:===========================>       79%][Progress:====================>         67%] [Cov:===========================>       79%][Progress:====================>         68%] [Cov:===========================>       79%][Progress:====================>         68%] [Cov:===========================>       79%][Progress:====================>         68%] [Cov:===========================>       79%][Progress:====================>         68%] [Cov:===========================>       79%][Progress:====================>         68%] [Cov:===========================>       79%][Progress:====================>         68%] [Cov:===========================>       79%][Progress:====================>         69%] [Cov:===========================>       79%][Progress:====================>         69%] [Cov:===========================>       79%][Progress:====================>         69%] [Cov:===========================>       79%][MASTER] 14:39:46.847 [logback-1] WARN  TestCluster - Failed to check cache for java.lang.Comparable<T> : Type points to itself
[Progress:====================>         69%] [Cov:===========================>       79%][Progress:====================>         69%] [Cov:===========================>       79%][Progress:====================>         69%] [Cov:===========================>       79%][Progress:====================>         69%] [Cov:===========================>       79%][Progress:====================>         69%] [Cov:===========================>       79%][Progress:=====================>        70%] [Cov:===========================>       79%][Progress:=====================>        70%] [Cov:===========================>       79%][Progress:=====================>        70%] [Cov:===========================>       79%][Progress:=====================>        70%] [Cov:===========================>       79%][Progress:=====================>        70%] [Cov:===========================>       79%][Progress:=====================>        70%] [Cov:===========================>       79%][Progress:=====================>        70%] [Cov:===========================>       79%][Progress:=====================>        70%] [Cov:===========================>       79%][Progress:=====================>        71%] [Cov:===========================>       79%][Progress:=====================>        71%] [Cov:===========================>       79%][Progress:=====================>        71%] [Cov:===========================>       79%][Progress:=====================>        71%] [Cov:===========================>       79%][Progress:=====================>        71%] [Cov:===========================>       79%][Progress:=====================>        72%] [Cov:===========================>       79%][Progress:=====================>        72%] [Cov:===========================>       79%][Progress:=====================>        72%] [Cov:===========================>       79%][Progress:=====================>        72%] [Cov:===========================>       79%][Progress:=====================>        72%] [Cov:===========================>       79%][Progress:=====================>        72%] [Cov:===========================>       79%][Progress:=====================>        72%] [Cov:===========================>       79%][Progress:=====================>        73%] [Cov:===========================>       79%][Progress:======================>       74%] [Cov:===========================>       79%][Progress:======================>       74%] [Cov:===========================>       79%][Progress:======================>       74%] [Cov:===========================>       79%][Progress:======================>       74%] [Cov:===========================>       79%][Progress:======================>       74%] [Cov:===========================>       79%][Progress:======================>       74%] [Cov:===========================>       79%][Progress:======================>       74%] [Cov:===========================>       79%][Progress:======================>       74%] [Cov:===========================>       79%][Progress:======================>       75%] [Cov:===========================>       79%][Progress:======================>       75%] [Cov:===========================>       79%][Progress:======================>       75%] [Cov:===========================>       79%][Progress:======================>       75%] [Cov:===========================>       79%][Progress:======================>       76%] [Cov:===========================>       79%][Progress:======================>       76%] [Cov:===========================>       79%][Progress:======================>       76%] [Cov:===========================>       79%][Progress:======================>       76%] [Cov:===========================>       79%][Progress:======================>       76%] [Cov:===========================>       79%][Progress:======================>       76%] [Cov:===========================>       79%][Progress:======================>       76%] [Cov:===========================>       79%][Progress:=======================>      77%] [Cov:===========================>       79%][Progress:=======================>      77%] [Cov:===========================>       79%][Progress:=======================>      77%] [Cov:===========================>       79%][Progress:=======================>      77%] [Cov:===========================>       79%][Progress:=======================>      77%] [Cov:===========================>       79%][Progress:=======================>      77%] [Cov:===========================>       79%][Progress:=======================>      77%] [Cov:===========================>       79%][Progress:=======================>      77%] [Cov:===========================>       79%][Progress:=======================>      77%] [Cov:===========================>       79%][Progress:=======================>      78%] [Cov:===========================>       79%][Progress:=======================>      78%] [Cov:===========================>       79%][Progress:=======================>      78%] [Cov:===========================>       79%][Progress:=======================>      79%] [Cov:===========================>       79%][Progress:=======================>      79%] [Cov:===========================>       79%][Progress:=======================>      79%] [Cov:===========================>       79%][Progress:========================>     80%] [Cov:===========================>       79%][Progress:========================>     80%] [Cov:===========================>       79%][Progress:========================>     80%] [Cov:===========================>       79%][Progress:========================>     80%] [Cov:===========================>       79%][Progress:========================>     80%] [Cov:===========================>       79%][Progress:========================>     80%] [Cov:===========================>       79%][Progress:========================>     80%] [Cov:===========================>       79%][Progress:========================>     81%] [Cov:===========================>       79%][Progress:========================>     81%] [Cov:===========================>       79%][Progress:========================>     81%] [Cov:===========================>       79%][Progress:========================>     81%] [Cov:===========================>       79%][Progress:========================>     81%] [Cov:===========================>       79%][Progress:========================>     81%] [Cov:===========================>       79%][Progress:========================>     81%] [Cov:===========================>       79%][Progress:========================>     81%] [Cov:===========================>       79%][Progress:========================>     81%] [Cov:===========================>       79%][Progress:========================>     82%] [Cov:===========================>       79%][Progress:========================>     82%] [Cov:===========================>       79%][Progress:========================>     82%] [Cov:===========================>       79%][Progress:========================>     82%] [Cov:===========================>       79%][Progress:========================>     82%] [Cov:===========================>       79%][Progress:========================>     82%] [Cov:===========================>       79%][Progress:========================>     82%] [Cov:===========================>       79%][Progress:========================>     82%] [Cov:===========================>       79%][Progress:========================>     83%] [Cov:===========================>       79%][Progress:========================>     83%] [Cov:===========================>       79%][Progress:========================>     83%] [Cov:===========================>       79%][Progress:========================>     83%] [Cov:===========================>       79%][Progress:========================>     83%] [Cov:===========================>       79%][Progress:=========================>    84%] [Cov:===========================>       79%][Progress:=========================>    84%] [Cov:===========================>       79%][Progress:=========================>    84%] [Cov:===========================>       79%][Progress:=========================>    84%] [Cov:===========================>       79%][Progress:=========================>    84%] [Cov:===========================>       79%][Progress:=========================>    84%] [Cov:===========================>       79%][Progress:=========================>    84%] [Cov:===========================>       79%][Progress:=========================>    84%] [Cov:===========================>       79%][Progress:=========================>    85%] [Cov:===========================>       79%][Progress:=========================>    85%] [Cov:===========================>       79%][Progress:=========================>    85%] [Cov:===========================>       79%][Progress:=========================>    85%] [Cov:===========================>       79%][Progress:=========================>    85%] [Cov:===========================>       79%][Progress:=========================>    85%] [Cov:===========================>       79%][Progress:=========================>    85%] [Cov:===========================>       79%][Progress:=========================>    85%] [Cov:===========================>       79%][Progress:=========================>    85%] [Cov:===========================>       79%][Progress:=========================>    86%] [Cov:===========================>       79%][Progress:=========================>    86%] [Cov:===========================>       79%][Progress:=========================>    86%] [Cov:===========================>       79%][Progress:=========================>    86%] [Cov:===========================>       79%][Progress:=========================>    86%] [Cov:===========================>       79%][Progress:=========================>    86%] [Cov:===========================>       79%][Progress:=========================>    86%] [Cov:===========================>       79%][Progress:=========================>    86%] [Cov:===========================>       79%][Progress:=========================>    86%] [Cov:===========================>       79%][Progress:=========================>    86%] [Cov:===========================>       79%][Progress:==========================>   87%] [Cov:===========================>       79%][Progress:==========================>   87%] [Cov:===========================>       79%][Progress:==========================>   87%] [Cov:===========================>       79%][Progress:==========================>   87%] [Cov:===========================>       79%][Progress:==========================>   87%] [Cov:===========================>       79%][Progress:==========================>   87%] [Cov:===========================>       79%][Progress:==========================>   87%] [Cov:===========================>       79%][Progress:==========================>   87%] [Cov:===========================>       79%][Progress:==========================>   87%] [Cov:===========================>       79%][Progress:==========================>   87%] [Cov:===========================>       79%][Progress:==========================>   87%] [Cov:===========================>       79%][Progress:==========================>   88%] [Cov:===========================>       79%][Progress:==========================>   88%] [Cov:===========================>       79%][Progress:==========================>   88%] [Cov:===========================>       79%][Progress:==========================>   88%] [Cov:===========================>       79%][Progress:==========================>   89%] [Cov:===========================>       79%][Progress:==========================>   89%] [Cov:===========================>       79%][Progress:==========================>   89%] [Cov:===========================>       79%][Progress:==========================>   89%] [Cov:===========================>       79%][Progress:==========================>   89%] [Cov:===========================>       79%][Progress:==========================>   89%] [Cov:===========================>       79%][Progress:===========================>  90%] [Cov:===========================>       79%][Progress:===========================>  90%] [Cov:===========================>       79%][Progress:===========================>  90%] [Cov:===========================>       79%][Progress:===========================>  90%] [Cov:===========================>       79%][Progress:===========================>  90%] [Cov:===========================>       79%][Progress:===========================>  90%] [Cov:===========================>       79%][Progress:===========================>  90%] [Cov:===========================>       79%][Progress:===========================>  90%] [Cov:===========================>       79%][Progress:===========================>  90%] [Cov:===========================>       79%][Progress:===========================>  91%] [Cov:===========================>       79%][Progress:===========================>  91%] [Cov:===========================>       79%][Progress:===========================>  91%] [Cov:===========================>       79%][Progress:===========================>  91%] [Cov:===========================>       79%][Progress:===========================>  92%] [Cov:===========================>       79%][Progress:===========================>  92%] [Cov:===========================>       79%][Progress:===========================>  92%] [Cov:===========================>       79%][Progress:===========================>  92%] [Cov:===========================>       79%][Progress:===========================>  92%] [Cov:===========================>       79%][Progress:===========================>  92%] [Cov:===========================>       79%][Progress:===========================>  93%] [Cov:===========================>       79%][Progress:===========================>  93%] [Cov:============================>      80%][Progress:===========================>  93%] [Cov:============================>      80%][Progress:===========================>  93%] [Cov:============================>      80%][Progress:===========================>  93%] [Cov:============================>      80%][Progress:===========================>  93%] [Cov:============================>      80%][Progress:===========================>  93%] [Cov:============================>      80%][Progress:============================> 94%] [Cov:============================>      80%][Progress:============================> 94%] [Cov:============================>      80%][Progress:============================> 94%] [Cov:============================>      80%][Progress:============================> 94%] [Cov:============================>      80%][Progress:============================> 94%] [Cov:============================>      80%][Progress:============================> 94%] [Cov:============================>      80%][Progress:============================> 94%] [Cov:============================>      80%][Progress:============================> 95%] [Cov:============================>      80%][Progress:============================> 95%] [Cov:============================>      80%][Progress:============================> 95%] [Cov:============================>      80%][Progress:============================> 95%] [Cov:============================>      80%][Progress:============================> 95%] [Cov:============================>      80%][Progress:============================> 95%] [Cov:============================>      80%][Progress:============================> 95%] [Cov:============================>      80%][Progress:============================> 95%] [Cov:============================>      80%][Progress:============================> 96%] [Cov:============================>      80%][Progress:============================> 96%] [Cov:============================>      80%][Progress:============================> 96%] [Cov:============================>      80%][Progress:============================> 96%] [Cov:============================>      80%][Progress:============================> 96%] [Cov:============================>      80%][Progress:=============================>97%] [Cov:============================>      80%][Progress:=============================>97%] [Cov:============================>      80%][Progress:=============================>97%] [Cov:============================>      80%][Progress:=============================>97%] [Cov:============================>      80%][Progress:=============================>97%] [Cov:============================>      80%][Progress:=============================>97%] [Cov:============================>      80%][Progress:=============================>97%] [Cov:============================>      80%][Progress:=============================>97%] [Cov:============================>      80%][Progress:=============================>98%] [Cov:============================>      80%][Progress:=============================>98%] [Cov:============================>      80%][Progress:=============================>98%] [Cov:============================>      80%][Progress:=============================>98%] [Cov:============================>      80%][Progress:=============================>98%] [Cov:============================>      80%][Progress:=============================>98%] [Cov:============================>      80%][Progress:=============================>99%] [Cov:============================>      80%][Progress:=============================>99%] [Cov:============================>      80%][Progress:=============================>99%] [Cov:============================>      80%][Progress:=============================>99%] [Cov:============================>      80%][Progress:=============================>99%] [Cov:============================>      80%][Progress:=============================>99%] [Cov:============================>      80%][Progress:==============================100%] [Cov:============================>      80%][Progress:==============================100%] [Cov:============================>      80%][Progress:==============================100%] [Cov:============================>      80%][Progress:==============================100%] [Cov:============================>      80%][Progress:==============================100%] [Cov:============================>      80%][Progress:==============================100%] [Cov:============================>      80%][Progress:==============================100%] [Cov:============================>      80%][Progress:==============================100%] [Cov:============================>      80%]
* Search finished after 101s and 548 generations, 296325 statements, best individual has fitness: 59.0
* Generated before the refinement 37 tests with total length 337
statement is: de.progra.charting.model.DefaultChartDataModel()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.progra.charting.model.DefaultChartDataModel
statement code is: DefaultChartDataModel defaultChartDataModel = new DefaultChartDataModel()
statement is: de.progra.charting.CoordSystem(Lde/progra/charting/model/ChartDataModel;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.progra.charting.CoordSystem
statement code is: CoordSystem coordSystem = new CoordSystem(arg0)
statement is: de.progra.charting.model.ObjectChartDataModel()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.progra.charting.model.ObjectChartDataModel
statement code is: ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel()
statement is: getChartDataModelConstraints(I)Lde/progra/charting/model/ChartDataModelConstraints; type is: class org.evosuite.testcase.statements.MethodStatement return type class de.progra.charting.model.DefaultChartDataModelConstraints
statement code is: DefaultChartDataModelConstraints chartDataModelConstraints = (DefaultChartDataModelConstraints)objectChartDataModel.getChartDataModelConstraints(970)
statement is: de.progra.charting.CoordSystemUtilities(Lde/progra/charting/CoordSystem;Lde/progra/charting/model/ChartDataModelConstraints;Lde/progra/charting/model/ChartDataModelConstraints;Lde/progra/charting/model/ChartDataModel;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.progra.charting.CoordSystemUtilities
statement code is: CoordSystemUtilities coordSystemUtilities = new CoordSystemUtilities(arg0, arg2, arg2, arg3)
statement is: computeRightMargin()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int computeRightMargin = coordSystemUtilities.computeRightMargin()
test data is: DefaultChartDataModel defaultChartDataModel = new DefaultChartDataModel();
CoordSystem coordSystem = new CoordSystem(defaultChartDataModel);
ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel();
DefaultChartDataModelConstraints chartDataModelConstraints = (DefaultChartDataModelConstraints)objectChartDataModel.getChartDataModelConstraints(970);
CoordSystemUtilities coordSystemUtilities = new CoordSystemUtilities(coordSystem, chartDataModelConstraints, chartDataModelConstraints, defaultChartDataModel);
coordSystemUtilities.computeRightMargin();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        DefaultChartDataModel salesRevenueChartDataModel = new DefaultChartDataModel();
        salesRevenueChartDataModel.setTitle("Sales Revenue by Month");
        salesRevenueChartDataModel.setLegendPosition(NORTH);
        CoordSystem salesRevenueCoordSystem = new CoordSystem(salesRevenueChartDataModel);
        ObjectChartDataModel salesRevenueObjectChartDataModel = new ObjectChartDataModel();
        DefaultChartDataModelConstraints chartDataModelConstraints = ((DefaultChartDataModelConstraints) (salesRevenueObjectChartDataModel.getChartDataModelConstraints(970)));
        CoordSystemUtilities coordSystemUtilities = new CoordSystemUtilities(salesRevenueCoordSystem, chartDataModelConstraints, chartDataModelConstraints, salesRevenueChartDataModel);
        coordSystemUtilities.computeRightMargin();
    }
}
statement is: DefaultChartDataModel salesRevenueChartDataModel = new DefaultChartDataModel(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: salesRevenueChartDataModel.setTitle("Sales Revenue by Month"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: salesRevenueChartDataModel.setTitle("Sales Revenue by Month") target is: salesRevenueChartDataModel method is: setTitle(java.lang.String)
statement is: salesRevenueChartDataModel.setLegendPosition(NORTH), class spoon.support.reflect.code.CtInvocationImpl
invocation is: salesRevenueChartDataModel.setLegendPosition(NORTH) target is: salesRevenueChartDataModel method is: setLegendPosition()
statement is: CoordSystem salesRevenueCoordSystem = new CoordSystem(salesRevenueChartDataModel), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: ObjectChartDataModel salesRevenueObjectChartDataModel = new ObjectChartDataModel(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: DefaultChartDataModelConstraints chartDataModelConstraints = ((DefaultChartDataModelConstraints) (salesRevenueObjectChartDataModel.getChartDataModelConstraints(970))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: ((DefaultChartDataModelConstraints) (salesRevenueObjectChartDataModel.getChartDataModelConstraints(970))) target is: salesRevenueObjectChartDataModel method is: getChartDataModelConstraints(int)
source statement: de.progra.charting.model.ObjectChartDataModel()V callee: VariableReference: Statement 2, type de.progra.charting.model.ObjectChartDataModelindex is: 2
Matched Method is: getChartDataModelConstraints(I)Lde/progra/charting/model/ChartDataModelConstraints;
statement is: CoordSystemUtilities coordSystemUtilities = new CoordSystemUtilities(salesRevenueCoordSystem, chartDataModelConstraints, chartDataModelConstraints, salesRevenueChartDataModel), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: coordSystemUtilities.computeRightMargin(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: coordSystemUtilities.computeRightMargin() target is: coordSystemUtilities method is: computeRightMargin()
source statement: de.progra.charting.CoordSystemUtilities(Lde/progra/charting/CoordSystem;Lde/progra/charting/model/ChartDataModelConstraints;Lde/progra/charting/model/ChartDataModelConstraints;Lde/progra/charting/model/ChartDataModel;)V callee: VariableReference: Statement 4, type de.progra.charting.CoordSystemUtilitiesindex is: 5
Matched Method is: computeRightMargin()I
TestCase is: DefaultChartDataModel defaultChartDataModel = new DefaultChartDataModel();
CoordSystem coordSystem = new CoordSystem(defaultChartDataModel);
ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel();
int _int = 970;
DefaultChartDataModelConstraints chartDataModelConstraints = (DefaultChartDataModelConstraints)objectChartDataModel.getChartDataModelConstraints(_int);
CoordSystemUtilities coordSystemUtilities = new CoordSystemUtilities(coordSystem, chartDataModelConstraints, chartDataModelConstraints, defaultChartDataModel);
((CoordSystemUtilities) chartDataModelConstraints).computeRightMargin();

statement is: de.progra.charting.model.DefaultChartDataModel()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.progra.charting.model.DefaultChartDataModel
statement code is: DefaultChartDataModel defaultChartDataModel = new DefaultChartDataModel()
statement is: de.progra.charting.CoordSystem(Lde/progra/charting/model/ChartDataModel;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.progra.charting.CoordSystem
statement code is: CoordSystem coordSystem = new CoordSystem(arg0)
statement is: de.progra.charting.model.ObjectChartDataModel()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.progra.charting.model.ObjectChartDataModel
statement code is: ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel()
statement is: getChartDataModelConstraints(I)Lde/progra/charting/model/ChartDataModelConstraints; type is: class org.evosuite.testcase.statements.MethodStatement return type class de.progra.charting.model.DefaultChartDataModelConstraints
statement code is: DefaultChartDataModelConstraints chartDataModelConstraints = (DefaultChartDataModelConstraints)objectChartDataModel.getChartDataModelConstraints(970)
statement is: de.progra.charting.CoordSystemUtilities(Lde/progra/charting/CoordSystem;Lde/progra/charting/model/ChartDataModelConstraints;Lde/progra/charting/model/ChartDataModelConstraints;Lde/progra/charting/model/ChartDataModel;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.progra.charting.CoordSystemUtilities
statement code is: CoordSystemUtilities coordSystemUtilities = new CoordSystemUtilities(arg0, arg2, arg2, arg3)
statement is: computeTopMargin()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int computeTopMargin = coordSystemUtilities.computeTopMargin()
test data is: DefaultChartDataModel defaultChartDataModel = new DefaultChartDataModel();
CoordSystem coordSystem = new CoordSystem(defaultChartDataModel);
ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel();
DefaultChartDataModelConstraints chartDataModelConstraints = (DefaultChartDataModelConstraints)objectChartDataModel.getChartDataModelConstraints(970);
CoordSystemUtilities coordSystemUtilities = new CoordSystemUtilities(coordSystem, chartDataModelConstraints, chartDataModelConstraints, defaultChartDataModel);
coordSystemUtilities.computeTopMargin();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        DefaultChartDataModel defaultChartDataModel = new DefaultChartDataModel();
        defaultChartDataModel.setTitle("Stock Price Chart");
        defaultChartDataModel.setXAxisLabel("Date");
        defaultChartDataModel.setYAxisLabel("Price (USD)");
        CoordSystem coordSystem = new CoordSystem(defaultChartDataModel);
        ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel();
        DefaultChartDataModelConstraints chartDataModelConstraints = ((DefaultChartDataModelConstraints) (objectChartDataModel.getChartDataModelConstraints(970)));
        chartDataModelConstraints.setXAxisMinValue("2015-01-01");
        chartDataModelConstraints.setXAxisMaxValue("2015-12-31");
        chartDataModelConstraints.setYAxisMinValue(10.0);
        chartDataModelConstraints.setYAxisMaxValue(20.0);
        CoordSystemUtilities coordSystemUtilities = new CoordSystemUtilities(coordSystem, chartDataModelConstraints, chartDataModelConstraints, defaultChartDataModel);
        int topMargin = coordSystemUtilities.computeTopMargin();
    }
}
statement is: DefaultChartDataModel defaultChartDataModel = new DefaultChartDataModel(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: defaultChartDataModel.setTitle("Stock Price Chart"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: defaultChartDataModel.setTitle("Stock Price Chart") target is: defaultChartDataModel method is: setTitle(java.lang.String)
statement is: defaultChartDataModel.setXAxisLabel("Date"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: defaultChartDataModel.setXAxisLabel("Date") target is: defaultChartDataModel method is: setXAxisLabel(java.lang.String)
statement is: defaultChartDataModel.setYAxisLabel("Price (USD)"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: defaultChartDataModel.setYAxisLabel("Price (USD)") target is: defaultChartDataModel method is: setYAxisLabel(java.lang.String)
statement is: CoordSystem coordSystem = new CoordSystem(defaultChartDataModel), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: DefaultChartDataModelConstraints chartDataModelConstraints = ((DefaultChartDataModelConstraints) (objectChartDataModel.getChartDataModelConstraints(970))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: ((DefaultChartDataModelConstraints) (objectChartDataModel.getChartDataModelConstraints(970))) target is: objectChartDataModel method is: getChartDataModelConstraints(int)
source statement: de.progra.charting.model.ObjectChartDataModel()V callee: VariableReference: Statement 2, type de.progra.charting.model.ObjectChartDataModelindex is: 2
Matched Method is: getChartDataModelConstraints(I)Lde/progra/charting/model/ChartDataModelConstraints;
statement is: chartDataModelConstraints.setXAxisMinValue("2015-01-01"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: chartDataModelConstraints.setXAxisMinValue("2015-01-01") target is: chartDataModelConstraints method is: setXAxisMinValue(java.lang.String)
statement is: chartDataModelConstraints.setXAxisMaxValue("2015-12-31"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: chartDataModelConstraints.setXAxisMaxValue("2015-12-31") target is: chartDataModelConstraints method is: setXAxisMaxValue(java.lang.String)
statement is: chartDataModelConstraints.setYAxisMinValue(10.0), class spoon.support.reflect.code.CtInvocationImpl
invocation is: chartDataModelConstraints.setYAxisMinValue(10.0) target is: chartDataModelConstraints method is: setYAxisMinValue(double)
statement is: chartDataModelConstraints.setYAxisMaxValue(20.0), class spoon.support.reflect.code.CtInvocationImpl
invocation is: chartDataModelConstraints.setYAxisMaxValue(20.0) target is: chartDataModelConstraints method is: setYAxisMaxValue(double)
statement is: CoordSystemUtilities coordSystemUtilities = new CoordSystemUtilities(coordSystem, chartDataModelConstraints, chartDataModelConstraints, defaultChartDataModel), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: int topMargin = coordSystemUtilities.computeTopMargin(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: coordSystemUtilities.computeTopMargin() target is: coordSystemUtilities method is: computeTopMargin()
source statement: de.progra.charting.CoordSystemUtilities(Lde/progra/charting/CoordSystem;Lde/progra/charting/model/ChartDataModelConstraints;Lde/progra/charting/model/ChartDataModelConstraints;Lde/progra/charting/model/ChartDataModel;)V callee: VariableReference: Statement 4, type de.progra.charting.CoordSystemUtilitiesindex is: 5
Matched Method is: computeTopMargin()I
TestCase is: DefaultChartDataModel defaultChartDataModel = new DefaultChartDataModel();
CoordSystem coordSystem = new CoordSystem(defaultChartDataModel);
ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel();
int _int = 970;
DefaultChartDataModelConstraints chartDataModelConstraints = (DefaultChartDataModelConstraints)objectChartDataModel.getChartDataModelConstraints(_int);
CoordSystemUtilities coordSystemUtilities = new CoordSystemUtilities(coordSystem, chartDataModelConstraints, chartDataModelConstraints, defaultChartDataModel);
((CoordSystemUtilities) chartDataModelConstraints).computeTopMargin();

statement is: org.evosuite.testcase.statements.ArrayStatement@a6654ad type is: class org.evosuite.testcase.statements.ArrayStatement return type class [[D
statement code is: double[][] doubleArray = new double[1][4]
statement is: org.evosuite.testcase.statements.ArrayStatement@89fbcdff type is: class org.evosuite.testcase.statements.ArrayStatement return type class [Ljava.lang.String;
statement code is: String[] stringArray = new String[9]
statement is: org.evosuite.testcase.statements.ArrayStatement@bf34e07d type is: class org.evosuite.testcase.statements.ArrayStatement return type class [D
statement code is: double[] doubleArray = new double[1]
statement is: org.evosuite.testcase.statements.AssignmentStatement@40268b2f type is: class org.evosuite.testcase.statements.AssignmentStatement return type double
statement code is: doubleArray[0] = 0.5
statement is: de.progra.charting.model.EditableChartDataModel([[D[D[Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.progra.charting.model.EditableChartDataModel
statement code is: EditableChartDataModel editableChartDataModel = new EditableChartDataModel(arg0, arg1, arg2)
statement is: de.progra.charting.CoordSystem(Lde/progra/charting/model/ChartDataModel;Ljava/lang/String;Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.progra.charting.CoordSystem
statement code is: CoordSystem coordSystem = new CoordSystem(arg0, "**w}-{4:WCX8", "de.progra.charting.CoordSystemUtilities")
statement is: org.evosuite.testcase.statements.FieldStatement@15f2554c type is: class org.evosuite.testcase.statements.FieldStatement return type class de.progra.charting.CoordSystemUtilities
statement code is: CoordSystemUtilities coordSystemUtilities = coordSystem.c
statement is: computeLeftMargin()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int computeLeftMargin = coordSystemUtilities.computeLeftMargin()
test data is: double[][] doubleArray = new double[1][4];
String[] stringArray = new String[9];
double[] doubleArray = new double[1];
doubleArray[0] = 0.5;
EditableChartDataModel editableChartDataModel = new EditableChartDataModel(doubleArray, doubleArray, stringArray);
CoordSystem coordSystem = new CoordSystem(editableChartDataModel, "**w}-{4:WCX8", "de.progra.charting.CoordSystemUtilities");
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
coordSystemUtilities.computeLeftMargin();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        double[][] doubleArray = new double[1][4];
        String[] stringArray = new String[9];
        doubleArray[0][0] = 2.3456;
        doubleArray[0][1] = 0.2;
        doubleArray[0][2] = 0.3;
        doubleArray[0][3] = 0.4;
        stringArray[0] = "apple";
        stringArray[1] = "banana";
        stringArray[2] = "cherry";
        stringArray[3] = "durian";
        stringArray[4] = "elderberry";
        stringArray[5] = "fig";
        stringArray[6] = "grapefruit";
        stringArray[7] = "guava";
        stringArray[8] = "jackfruit";
        EditableChartDataModel editableChartDataModel = new EditableChartDataModel(doubleArray, doubleArray, stringArray);
        CoordSystem coordSystem = new CoordSystem(editableChartDataModel, "**w}-{4:WCX8", "de.progra.charting.CoordSystemUtilities");
        CoordSystemUtilities coordSystemUtilities = coordSystem.c;
        coordSystemUtilities.computeLeftMargin();
    }
}
statement is: double[][] doubleArray = new double[1][4], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [1, 4] Ct is: double[][] doubleArray = new double[1][4] isAssignment: false Array: new double[1][4] Elements: []
lengths: [1, 4] [1, 4]
Their type are: class [[D double[][]
statement is: String[] stringArray = new String[9], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [9] Ct is: double[][] doubleArray = new double[1][4] isAssignment: false Array: new String[9] Elements: []
lengths: [1, 4] [9]
Dimension: [9] Ct is: String[] stringArray = new String[9] isAssignment: false Array: new String[9] Elements: []
lengths: [9] [9]
Their type are: class [Ljava.lang.String; String[]
statement is: doubleArray[0][0] = 2.3456, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : doubleArray[0][0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl double Assignment:2.3456 Ct is: doubleArray[0][0] = 2.3456
target : doubleArray[0] class spoon.support.reflect.code.CtLiteralImpl
statement is: doubleArray[0][1] = 0.2, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : doubleArray[0][1] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl double Assignment:0.2 Ct is: doubleArray[0][1] = 0.2
target : doubleArray[0] class spoon.support.reflect.code.CtLiteralImpl
statement is: doubleArray[0][2] = 0.3, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : doubleArray[0][2] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl double Assignment:0.3 Ct is: doubleArray[0][2] = 0.3
target : doubleArray[0] class spoon.support.reflect.code.CtLiteralImpl
statement is: doubleArray[0][3] = 0.4, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : doubleArray[0][3] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl double Assignment:0.4 Ct is: doubleArray[0][3] = 0.4
target : doubleArray[0] class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[0] = "apple", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"apple" Ct is: stringArray[0] = "apple"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[1] = "banana", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[1] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"banana" Ct is: stringArray[1] = "banana"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[2] = "cherry", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[2] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"cherry" Ct is: stringArray[2] = "cherry"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[3] = "durian", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[3] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"durian" Ct is: stringArray[3] = "durian"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[4] = "elderberry", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[4] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"elderberry" Ct is: stringArray[4] = "elderberry"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[5] = "fig", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[5] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"fig" Ct is: stringArray[5] = "fig"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[6] = "grapefruit", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[6] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"grapefruit" Ct is: stringArray[6] = "grapefruit"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[7] = "guava", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[7] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"guava" Ct is: stringArray[7] = "guava"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[8] = "jackfruit", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[8] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"jackfruit" Ct is: stringArray[8] = "jackfruit"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: EditableChartDataModel editableChartDataModel = new EditableChartDataModel(doubleArray, doubleArray, stringArray), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: CoordSystem coordSystem = new CoordSystem(editableChartDataModel, "**w}-{4:WCX8", "de.progra.charting.CoordSystemUtilities"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: CoordSystemUtilities coordSystemUtilities = coordSystem.c, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: coordSystem.c is coordSystem
CtField is: protected de.progra.charting.CoordSystemUtilities de.progra.charting.CoordSystem.c CoordSystemUtilities c
statement is: coordSystemUtilities.computeLeftMargin(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: coordSystemUtilities.computeLeftMargin() target is: coordSystemUtilities method is: computeLeftMargin()
TestCase is: double[][] doubleArray = new double[1][4];
String[] stringArray = new String[9];
EditableChartDataModel editableChartDataModel = new EditableChartDataModel(doubleArray, (double[]) doubleArray, stringArray);
String string = "**w}-{4:WCX8";
String string = "de.progra.charting.CoordSystemUtilities";
CoordSystem coordSystem = new CoordSystem(editableChartDataModel, string, string);

statement is: de.progra.charting.model.DefaultChartDataModel()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.progra.charting.model.DefaultChartDataModel
statement code is: DefaultChartDataModel defaultChartDataModel = new DefaultChartDataModel()
statement is: de.progra.charting.CoordSystem(Lde/progra/charting/model/ChartDataModel;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.progra.charting.CoordSystem
statement code is: CoordSystem coordSystem = new CoordSystem(arg0)
statement is: de.progra.charting.model.ObjectChartDataModel()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.progra.charting.model.ObjectChartDataModel
statement code is: ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel()
statement is: getChartDataModelConstraints(I)Lde/progra/charting/model/ChartDataModelConstraints; type is: class org.evosuite.testcase.statements.MethodStatement return type class de.progra.charting.model.DefaultChartDataModelConstraints
statement code is: DefaultChartDataModelConstraints chartDataModelConstraints = (DefaultChartDataModelConstraints)objectChartDataModel.getChartDataModelConstraints(970)
statement is: de.progra.charting.CoordSystemUtilities(Lde/progra/charting/CoordSystem;Lde/progra/charting/model/ChartDataModelConstraints;Lde/progra/charting/model/ChartDataModelConstraints;Lde/progra/charting/model/ChartDataModel;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.progra.charting.CoordSystemUtilities
statement code is: CoordSystemUtilities coordSystemUtilities = new CoordSystemUtilities(arg0, arg2, arg2, arg3)
statement is: computeLeftMargin()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int computeLeftMargin = coordSystemUtilities.computeLeftMargin()
test data is: DefaultChartDataModel defaultChartDataModel = new DefaultChartDataModel();
CoordSystem coordSystem = new CoordSystem(defaultChartDataModel);
ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel();
DefaultChartDataModelConstraints chartDataModelConstraints = (DefaultChartDataModelConstraints)objectChartDataModel.getChartDataModelConstraints(970);
CoordSystemUtilities coordSystemUtilities = new CoordSystemUtilities(coordSystem, chartDataModelConstraints, chartDataModelConstraints, defaultChartDataModel);
coordSystemUtilities.computeLeftMargin();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        DefaultChartDataModel defaultChartDataModel = new DefaultChartDataModel();
        defaultChartDataModel.setTitle("Stock Price Analysis");
        defaultChartDataModel.setXAxisLabel("Date");
        defaultChartDataModel.setYAxisLabel("Price (USD)");
        CoordSystem coordSystem = new CoordSystem(defaultChartDataModel);
        coordSystem.setXRange(new Date(2018, 1, 1), new Date(2018, 1, 7));// Replace the integer values with date objects

        coordSystem.setYRange(50, 100);// Replace the integer values with a range of stock prices

        ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel();
        objectChartDataModel.addSeries("Stock A", new double[]{ 10, 20, 30, 40, 50 });
        objectChartDataModel.addSeries("Stock B", new double[]{ 20, 30, 40, 50, 60 });
        objectChartDataModel.addSeries("Stock C", new double[]{ 30, 40, 50, 60, 70 });
        DefaultChartDataModelConstraints chartDataModelConstraints = ((DefaultChartDataModelConstraints) (objectChartDataModel.getChartDataModelConstraints(970)));
        CoordSystemUtilities coordSystemUtilities = new CoordSystemUtilities(coordSystem, chartDataModelConstraints, chartDataModelConstraints, defaultChartDataModel);
        coordSystemUtilities.computeLeftMargin();
    }
}
statement is: DefaultChartDataModel defaultChartDataModel = new DefaultChartDataModel(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: defaultChartDataModel.setTitle("Stock Price Analysis"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: defaultChartDataModel.setTitle("Stock Price Analysis") target is: defaultChartDataModel method is: setTitle(java.lang.String)
statement is: defaultChartDataModel.setXAxisLabel("Date"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: defaultChartDataModel.setXAxisLabel("Date") target is: defaultChartDataModel method is: setXAxisLabel(java.lang.String)
statement is: defaultChartDataModel.setYAxisLabel("Price (USD)"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: defaultChartDataModel.setYAxisLabel("Price (USD)") target is: defaultChartDataModel method is: setYAxisLabel(java.lang.String)
statement is: CoordSystem coordSystem = new CoordSystem(defaultChartDataModel), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: coordSystem.setXRange(new Date(2018, 1, 1), new Date(2018, 1, 7))// Replace the integer values with date objects
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: coordSystem.setXRange(new Date(2018, 1, 1), new Date(2018, 1, 7))// Replace the integer values with date objects
 target is: coordSystem method is: setXRange(Date,Date)
statement is: coordSystem.setYRange(50, 100)// Replace the integer values with a range of stock prices
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: coordSystem.setYRange(50, 100)// Replace the integer values with a range of stock prices
 target is: coordSystem method is: setYRange(int,int)
statement is: ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: objectChartDataModel.addSeries("Stock A", new double[]{ 10, 20, 30, 40, 50 }), class spoon.support.reflect.code.CtInvocationImpl
invocation is: objectChartDataModel.addSeries("Stock A", new double[]{ 10, 20, 30, 40, 50 }) target is: objectChartDataModel method is: addSeries(java.lang.String,double[])
statement is: objectChartDataModel.addSeries("Stock B", new double[]{ 20, 30, 40, 50, 60 }), class spoon.support.reflect.code.CtInvocationImpl
invocation is: objectChartDataModel.addSeries("Stock B", new double[]{ 20, 30, 40, 50, 60 }) target is: objectChartDataModel method is: addSeries(java.lang.String,double[])
statement is: objectChartDataModel.addSeries("Stock C", new double[]{ 30, 40, 50, 60, 70 }), class spoon.support.reflect.code.CtInvocationImpl
invocation is: objectChartDataModel.addSeries("Stock C", new double[]{ 30, 40, 50, 60, 70 }) target is: objectChartDataModel method is: addSeries(java.lang.String,double[])
statement is: DefaultChartDataModelConstraints chartDataModelConstraints = ((DefaultChartDataModelConstraints) (objectChartDataModel.getChartDataModelConstraints(970))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: ((DefaultChartDataModelConstraints) (objectChartDataModel.getChartDataModelConstraints(970))) target is: objectChartDataModel method is: getChartDataModelConstraints(int)
source statement: de.progra.charting.model.ObjectChartDataModel()V callee: VariableReference: Statement 2, type de.progra.charting.model.ObjectChartDataModelindex is: 2
Matched Method is: getChartDataModelConstraints(I)Lde/progra/charting/model/ChartDataModelConstraints;
statement is: CoordSystemUtilities coordSystemUtilities = new CoordSystemUtilities(coordSystem, chartDataModelConstraints, chartDataModelConstraints, defaultChartDataModel), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: coordSystemUtilities.computeLeftMargin(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: coordSystemUtilities.computeLeftMargin() target is: coordSystemUtilities method is: computeLeftMargin()
source statement: de.progra.charting.CoordSystemUtilities(Lde/progra/charting/CoordSystem;Lde/progra/charting/model/ChartDataModelConstraints;Lde/progra/charting/model/ChartDataModelConstraints;Lde/progra/charting/model/ChartDataModel;)V callee: VariableReference: Statement 4, type de.progra.charting.CoordSystemUtilitiesindex is: 5
Matched Method is: computeLeftMargin()I
TestCase is: DefaultChartDataModel defaultChartDataModel = new DefaultChartDataModel();
CoordSystem coordSystem = new CoordSystem(defaultChartDataModel);
ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel();
int _int = 970;
DefaultChartDataModelConstraints chartDataModelConstraints = (DefaultChartDataModelConstraints)objectChartDataModel.getChartDataModelConstraints(_int);
CoordSystemUtilities coordSystemUtilities = new CoordSystemUtilities(coordSystem, chartDataModelConstraints, chartDataModelConstraints, defaultChartDataModel);
((CoordSystemUtilities) chartDataModelConstraints).computeLeftMargin();

statement is: org.evosuite.testcase.statements.ArrayStatement@6e58a160 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [[D
statement code is: double[][] doubleArray = new double[1][4]
statement is: org.evosuite.testcase.statements.ArrayStatement@900cecb9 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [Ljava.lang.String;
statement code is: String[] stringArray = new String[4]
statement is: de.progra.charting.model.DefaultChartDataModel([[D[D[Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.progra.charting.model.DefaultChartDataModel
statement code is: DefaultChartDataModel defaultChartDataModel = new DefaultChartDataModel(arg0, arg0[0], arg2)
statement is: de.progra.charting.CoordSystem(Lde/progra/charting/model/ChartDataModel;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.progra.charting.CoordSystem
statement code is: CoordSystem coordSystem = new CoordSystem(arg0)
statement is: org.evosuite.testcase.statements.FieldStatement@7b60cc4f type is: class org.evosuite.testcase.statements.FieldStatement return type class de.progra.charting.CoordSystemUtilities
statement code is: CoordSystemUtilities coordSystemUtilities = coordSystem.c
statement is: computeLeftMargin()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int computeLeftMargin = coordSystemUtilities.computeLeftMargin()
test data is: double[][] doubleArray = new double[1][4];
String[] stringArray = new String[4];
DefaultChartDataModel defaultChartDataModel = new DefaultChartDataModel(doubleArray, doubleArray[0], stringArray);
CoordSystem coordSystem = new CoordSystem(defaultChartDataModel);
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
coordSystemUtilities.computeLeftMargin();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        double[][] doubleArray = new double[1][4];
        doubleArray[0][0] = 1.5;
        doubleArray[0][1] = 2.6;
        doubleArray[0][2] = 3.7;
        doubleArray[0][3] = 4.8;
        String[] stringArray = new String[4];
        stringArray[0] = "A";
        stringArray[1] = "B";
        stringArray[2] = "C";
        stringArray[3] = "D";
        DefaultChartDataModel defaultChartDataModel = new DefaultChartDataModel(doubleArray, doubleArray[0], stringArray);
        CoordSystem coordSystem = new CoordSystem(defaultChartDataModel);
        CoordSystemUtilities coordSystemUtilities = coordSystem.c;
        coordSystemUtilities.computeLeftMargin();
    }
}
statement is: double[][] doubleArray = new double[1][4], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [1, 4] Ct is: double[][] doubleArray = new double[1][4] isAssignment: false Array: new double[1][4] Elements: []
lengths: [1, 4] [1, 4]
Their type are: class [[D double[][]
statement is: doubleArray[0][0] = 1.5, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : doubleArray[0][0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl double Assignment:1.5 Ct is: doubleArray[0][0] = 1.5
target : doubleArray[0] class spoon.support.reflect.code.CtLiteralImpl
statement is: doubleArray[0][1] = 2.6, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : doubleArray[0][1] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl double Assignment:2.6 Ct is: doubleArray[0][1] = 2.6
target : doubleArray[0] class spoon.support.reflect.code.CtLiteralImpl
statement is: doubleArray[0][2] = 3.7, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : doubleArray[0][2] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl double Assignment:3.7 Ct is: doubleArray[0][2] = 3.7
target : doubleArray[0] class spoon.support.reflect.code.CtLiteralImpl
statement is: doubleArray[0][3] = 4.8, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : doubleArray[0][3] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl double Assignment:4.8 Ct is: doubleArray[0][3] = 4.8
target : doubleArray[0] class spoon.support.reflect.code.CtLiteralImpl
statement is: String[] stringArray = new String[4], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [4] Ct is: double[][] doubleArray = new double[1][4] isAssignment: false Array: new String[4] Elements: []
lengths: [1, 4] [4]
Dimension: [4] Ct is: String[] stringArray = new String[4] isAssignment: false Array: new String[4] Elements: []
lengths: [4] [4]
Their type are: class [Ljava.lang.String; String[]
statement is: stringArray[0] = "A", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"A" Ct is: stringArray[0] = "A"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[1] = "B", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[1] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"B" Ct is: stringArray[1] = "B"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[2] = "C", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[2] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"C" Ct is: stringArray[2] = "C"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[3] = "D", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[3] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"D" Ct is: stringArray[3] = "D"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: DefaultChartDataModel defaultChartDataModel = new DefaultChartDataModel(doubleArray, doubleArray[0], stringArray), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: CoordSystem coordSystem = new CoordSystem(defaultChartDataModel), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: CoordSystemUtilities coordSystemUtilities = coordSystem.c, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: coordSystem.c is coordSystem
CtField is: protected de.progra.charting.CoordSystemUtilities de.progra.charting.CoordSystem.c CoordSystemUtilities c
statement is: coordSystemUtilities.computeLeftMargin(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: coordSystemUtilities.computeLeftMargin() target is: coordSystemUtilities method is: computeLeftMargin()
TestCase is: double[][] doubleArray = new double[1][4];
String[] stringArray = new String[4];
DefaultChartDataModel defaultChartDataModel = new DefaultChartDataModel(doubleArray, (double[]) stringArray, stringArray);
CoordSystem coordSystem = new CoordSystem(defaultChartDataModel);

statement is: de.progra.charting.model.DefaultChartDataModel()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.progra.charting.model.DefaultChartDataModel
statement code is: DefaultChartDataModel defaultChartDataModel = new DefaultChartDataModel()
statement is: de.progra.charting.CoordSystem(Lde/progra/charting/model/ChartDataModel;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.progra.charting.CoordSystem
statement code is: CoordSystem coordSystem = new CoordSystem(arg0)
statement is: de.progra.charting.model.ObjectChartDataModel()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.progra.charting.model.ObjectChartDataModel
statement code is: ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel()
statement is: java.awt.Font(Ljava/lang/String;II)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.awt.Font
statement code is: Font font = new Font("", 0, 0)
statement is: setFont(Ljava/awt/Font;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: coordSystem.setFont(arg0)
statement is: getChartDataModelConstraints(I)Lde/progra/charting/model/ChartDataModelConstraints; type is: class org.evosuite.testcase.statements.MethodStatement return type class de.progra.charting.model.DefaultChartDataModelConstraints
statement code is: DefaultChartDataModelConstraints chartDataModelConstraints = (DefaultChartDataModelConstraints)objectChartDataModel.getChartDataModelConstraints(970)
statement is: de.progra.charting.CoordSystemUtilities(Lde/progra/charting/CoordSystem;Lde/progra/charting/model/ChartDataModelConstraints;Lde/progra/charting/model/ChartDataModelConstraints;Lde/progra/charting/model/ChartDataModel;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.progra.charting.CoordSystemUtilities
statement code is: CoordSystemUtilities coordSystemUtilities = new CoordSystemUtilities(arg0, arg2, arg2, arg3)
statement is: computeLeftMargin()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int computeLeftMargin = coordSystemUtilities.computeLeftMargin()
test data is: DefaultChartDataModel defaultChartDataModel = new DefaultChartDataModel();
CoordSystem coordSystem = new CoordSystem(defaultChartDataModel);
ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel();
Font font = new Font("", 0, 0);
coordSystem.setFont(font);
DefaultChartDataModelConstraints chartDataModelConstraints = (DefaultChartDataModelConstraints)objectChartDataModel.getChartDataModelConstraints(970);
CoordSystemUtilities coordSystemUtilities = new CoordSystemUtilities(coordSystem, chartDataModelConstraints, chartDataModelConstraints, defaultChartDataModel);
coordSystemUtilities.computeLeftMargin();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        DefaultChartDataModel defaultChartDataModel = new DefaultChartDataModel();
        defaultChartDataModel.setXAxisLabel("Monthly Sales");
        defaultChartDataModel.setYAxisLabel("Revenue (USD)");
        defaultChartDataModel.setTitle("Sales and Revenue by Month");
        CoordSystem coordSystem = new CoordSystem(defaultChartDataModel);
        ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel();
        Font font = new Font("Times New Roman", 18, Font.ITALIC);
        coordSystem.setFont(font);
        DefaultChartDataModelConstraints chartDataModelConstraints = ((DefaultChartDataModelConstraints) (objectChartDataModel.getChartDataModelConstraints(1024)));
        CoordSystemUtilities coordSystemUtilities = new CoordSystemUtilities(coordSystem, chartDataModelConstraints, chartDataModelConstraints, defaultChartDataModel);
        coordSystemUtilities.computeLeftMargin();
    }
}
statement is: DefaultChartDataModel defaultChartDataModel = new DefaultChartDataModel(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: defaultChartDataModel.setXAxisLabel("Monthly Sales"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: defaultChartDataModel.setXAxisLabel("Monthly Sales") target is: defaultChartDataModel method is: setXAxisLabel(java.lang.String)
statement is: defaultChartDataModel.setYAxisLabel("Revenue (USD)"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: defaultChartDataModel.setYAxisLabel("Revenue (USD)") target is: defaultChartDataModel method is: setYAxisLabel(java.lang.String)
statement is: defaultChartDataModel.setTitle("Sales and Revenue by Month"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: defaultChartDataModel.setTitle("Sales and Revenue by Month") target is: defaultChartDataModel method is: setTitle(java.lang.String)
statement is: CoordSystem coordSystem = new CoordSystem(defaultChartDataModel), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Font font = new Font("Times New Roman", 18, Font.ITALIC), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: coordSystem.setFont(font), class spoon.support.reflect.code.CtInvocationImpl
invocation is: coordSystem.setFont(font) target is: coordSystem method is: setFont(Font)
source statement: de.progra.charting.CoordSystem(Lde/progra/charting/model/ChartDataModel;)V callee: VariableReference: Statement 1, type de.progra.charting.CoordSystemindex is: 1
Matched Method is: setFont(Ljava/awt/Font;)V
statement is: DefaultChartDataModelConstraints chartDataModelConstraints = ((DefaultChartDataModelConstraints) (objectChartDataModel.getChartDataModelConstraints(1024))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: ((DefaultChartDataModelConstraints) (objectChartDataModel.getChartDataModelConstraints(1024))) target is: objectChartDataModel method is: getChartDataModelConstraints(int)
source statement: de.progra.charting.model.ObjectChartDataModel()V callee: VariableReference: Statement 2, type de.progra.charting.model.ObjectChartDataModelindex is: 2
Matched Method is: getChartDataModelConstraints(I)Lde/progra/charting/model/ChartDataModelConstraints;
statement is: CoordSystemUtilities coordSystemUtilities = new CoordSystemUtilities(coordSystem, chartDataModelConstraints, chartDataModelConstraints, defaultChartDataModel), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: coordSystemUtilities.computeLeftMargin(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: coordSystemUtilities.computeLeftMargin() target is: coordSystemUtilities method is: computeLeftMargin()
source statement: de.progra.charting.CoordSystemUtilities(Lde/progra/charting/CoordSystem;Lde/progra/charting/model/ChartDataModelConstraints;Lde/progra/charting/model/ChartDataModelConstraints;Lde/progra/charting/model/ChartDataModel;)V callee: VariableReference: Statement 6, type de.progra.charting.CoordSystemUtilitiesindex is: 9
Matched Method is: computeLeftMargin()I
TestCase is: DefaultChartDataModel defaultChartDataModel = new DefaultChartDataModel();
CoordSystem coordSystem = new CoordSystem(defaultChartDataModel);
ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel();
String string = "Times New Roman";
int _int = 18;
Font font = new Font(string, _int, 0);
coordSystem.setFont(font);
int _int = 1024;
DefaultChartDataModelConstraints chartDataModelConstraints = (DefaultChartDataModelConstraints)objectChartDataModel.getChartDataModelConstraints(_int);
CoordSystemUtilities coordSystemUtilities = new CoordSystemUtilities(coordSystem, chartDataModelConstraints, chartDataModelConstraints, defaultChartDataModel);
((CoordSystemUtilities) _void).computeLeftMargin();

statement is: de.progra.charting.model.ObjectChartDataModel()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.progra.charting.model.ObjectChartDataModel
statement code is: ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel()
statement is: de.progra.charting.CoordSystem(Lde/progra/charting/model/ChartDataModel;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.progra.charting.CoordSystem
statement code is: CoordSystem coordSystem = new CoordSystem(arg0)
statement is: org.evosuite.testcase.statements.FieldStatement@a10f198 type is: class org.evosuite.testcase.statements.FieldStatement return type class de.progra.charting.CoordSystemUtilities
statement code is: CoordSystemUtilities coordSystemUtilities = coordSystem.c
statement is: computeBottomMargin()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int computeBottomMargin = coordSystemUtilities.computeBottomMargin()
test data is: ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel();
CoordSystem coordSystem = new CoordSystem(objectChartDataModel);
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
coordSystemUtilities.computeBottomMargin();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel();
        objectChartDataModel.setBackgroundColor(new Color(255, 0, 0));// red background color

        objectChartDataModel.setTitle("Sales Data");
        objectChartDataModel.setLegendPosition(TOP);
        CoordSystem coordSystem = new CoordSystem(objectChartDataModel);
        coordSystem.setXAxisLabel("Month");
        coordSystem.setYAxisLabel("Sales Amount (USD)");
        coordSystem.setZAxisLabel("Profit Margin (%)");
        coordSystem.setGridLinesVisible(true);
        CoordSystemUtilities coordSystemUtilities = coordSystem.c;
        coordSystemUtilities.computeBottomMargin();
        // Set up the data for the chart
        List<String> monthValues = Arrays.asList("January", "February", "March", "April", "May");
        List<Double> salesAmountValues = Arrays.asList(1000.0, 2000.0, 3000.0, 4000.0, 5000.0);
        List<Double> profitMarginValues = Arrays.asList(10.0, 20.0, 30.0, 40.0, 50.0);
        // Create a chart with the data
        Chart chart = new Chart(coordSystem);
        chart.setTitle("Sales Data");
        chart.addSeries("Total Sales", monthValues, salesAmountValues);
        chart.addSeries("Profit Margin", monthValues, profitMarginValues);
        chart.display();
    }
}
statement is: ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: objectChartDataModel.setBackgroundColor(new Color(255, 0, 0))// red background color
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: objectChartDataModel.setBackgroundColor(new Color(255, 0, 0))// red background color
 target is: objectChartDataModel method is: setBackgroundColor(Color)
statement is: objectChartDataModel.setTitle("Sales Data"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: objectChartDataModel.setTitle("Sales Data") target is: objectChartDataModel method is: setTitle(java.lang.String)
statement is: objectChartDataModel.setLegendPosition(TOP), class spoon.support.reflect.code.CtInvocationImpl
invocation is: objectChartDataModel.setLegendPosition(TOP) target is: objectChartDataModel method is: setLegendPosition()
statement is: CoordSystem coordSystem = new CoordSystem(objectChartDataModel), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: coordSystem.setXAxisLabel("Month"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: coordSystem.setXAxisLabel("Month") target is: coordSystem method is: setXAxisLabel(java.lang.String)
statement is: coordSystem.setYAxisLabel("Sales Amount (USD)"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: coordSystem.setYAxisLabel("Sales Amount (USD)") target is: coordSystem method is: setYAxisLabel(java.lang.String)
statement is: coordSystem.setZAxisLabel("Profit Margin (%)"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: coordSystem.setZAxisLabel("Profit Margin (%)") target is: coordSystem method is: setZAxisLabel(java.lang.String)
statement is: coordSystem.setGridLinesVisible(true), class spoon.support.reflect.code.CtInvocationImpl
invocation is: coordSystem.setGridLinesVisible(true) target is: coordSystem method is: setGridLinesVisible(boolean)
statement is: CoordSystemUtilities coordSystemUtilities = coordSystem.c, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: coordSystem.c is coordSystem
CtField is: protected de.progra.charting.CoordSystemUtilities de.progra.charting.CoordSystem.c CoordSystemUtilities c
statement is: coordSystemUtilities.computeBottomMargin(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: coordSystemUtilities.computeBottomMargin() target is: coordSystemUtilities method is: computeBottomMargin()
statement is: // Set up the data for the chart
List<String> monthValues = Arrays.asList("January", "February", "March", "April", "May"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: Arrays.asList("January", "February", "March", "April", "May") target is: Arrays method is: asList(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
statement is: List<Double> salesAmountValues = Arrays.asList(1000.0, 2000.0, 3000.0, 4000.0, 5000.0), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: Arrays.asList(1000.0, 2000.0, 3000.0, 4000.0, 5000.0) target is: Arrays method is: asList(double,double,double,double,double)
statement is: List<Double> profitMarginValues = Arrays.asList(10.0, 20.0, 30.0, 40.0, 50.0), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: Arrays.asList(10.0, 20.0, 30.0, 40.0, 50.0) target is: Arrays method is: asList(double,double,double,double,double)
statement is: // Create a chart with the data
Chart chart = new Chart(coordSystem), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: chart.setTitle("Sales Data"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: chart.setTitle("Sales Data") target is: chart method is: setTitle(java.lang.String)
statement is: chart.addSeries("Total Sales", monthValues, salesAmountValues), class spoon.support.reflect.code.CtInvocationImpl
invocation is: chart.addSeries("Total Sales", monthValues, salesAmountValues) target is: chart method is: addSeries(java.lang.String,List,List)
statement is: chart.addSeries("Profit Margin", monthValues, profitMarginValues), class spoon.support.reflect.code.CtInvocationImpl
invocation is: chart.addSeries("Profit Margin", monthValues, profitMarginValues) target is: chart method is: addSeries(java.lang.String,List,List)
statement is: chart.display(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: chart.display() target is: chart method is: display()
TestCase is: ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel();
CoordSystem coordSystem = new CoordSystem(objectChartDataModel);

statement is: org.evosuite.testcase.statements.ArrayStatement@4c44b68e type is: class org.evosuite.testcase.statements.ArrayStatement return type class [Ljava.lang.String;
statement code is: String[] stringArray = new String[9]
statement is: org.evosuite.testcase.statements.ArrayStatement@588ddfb6 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [[Ljava.lang.Number;
statement code is: Number[][] numberArray = new Number[2][7]
statement is: org.evosuite.testcase.statements.ArrayStatement@c39daed6 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [Ljava.lang.Number;
statement code is: Number[] numberArray = new Number[7]
statement is: org.evosuite.testcase.statements.AssignmentStatement@223b9fdd type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.Number
statement code is: numberArray[0] = (Number) (-36.36869162977149)
statement is: org.evosuite.testcase.statements.AssignmentStatement@677560cc type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.Number
statement code is: numberArray[1] = (Number) (-36.36869162977149)
statement is: org.evosuite.testcase.statements.AssignmentStatement@4344cc25 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.Number
statement code is: numberArray[2] = (Number) (-36.36869162977149)
statement is: org.evosuite.testcase.statements.AssignmentStatement@c55d78f7 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.Number
statement code is: numberArray[3] = (Number) (-36.36869162977149)
statement is: org.evosuite.testcase.statements.AssignmentStatement@4350e697 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.Number
statement code is: numberArray[4] = (Number) (-36.36869162977149)
statement is: org.evosuite.testcase.statements.AssignmentStatement@e2d0b447 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.Number
statement code is: numberArray[5] = (Number) (-36.36869162977149)
statement is: org.evosuite.testcase.statements.AssignmentStatement@9614b92a type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.Number
statement code is: numberArray[6] = (Number) (-36.36869162977149)
statement is: org.evosuite.testcase.statements.AssignmentStatement@65cd9eb5 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class [Ljava.lang.Number;
statement code is: numberArray[0] = numberArray
statement is: org.evosuite.testcase.statements.AssignmentStatement@3dbdb444 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class [Ljava.lang.Number;
statement code is: numberArray[1] = numberArray
statement is: de.progra.charting.model.ObjectChartDataModel([[Ljava/lang/Number;[Ljava/lang/Object;[Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.progra.charting.model.ObjectChartDataModel
statement code is: ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel(arg0, arg1, arg2)
statement is: de.progra.charting.CoordSystem(Lde/progra/charting/model/ChartDataModel;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.progra.charting.CoordSystem
statement code is: CoordSystem coordSystem = new CoordSystem(arg0)
statement is: org.evosuite.testcase.statements.FieldStatement@33551d3 type is: class org.evosuite.testcase.statements.FieldStatement return type class de.progra.charting.CoordSystemUtilities
statement code is: CoordSystemUtilities coordSystemUtilities = coordSystem.c
statement is: computeBottomMargin()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int computeBottomMargin = coordSystemUtilities.computeBottomMargin()
test data is: String[] stringArray = new String[9];
Number[][] numberArray = new Number[2][7];
Number[] numberArray = new Number[7];
numberArray[0] = (Number) (-36.36869162977149);
numberArray[1] = (Number) (-36.36869162977149);
numberArray[2] = (Number) (-36.36869162977149);
numberArray[3] = (Number) (-36.36869162977149);
numberArray[4] = (Number) (-36.36869162977149);
numberArray[5] = (Number) (-36.36869162977149);
numberArray[6] = (Number) (-36.36869162977149);
numberArray[0] = numberArray;
numberArray[1] = numberArray;
ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel(numberArray, numberArray, stringArray);
CoordSystem coordSystem = new CoordSystem(objectChartDataModel);
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
coordSystemUtilities.computeBottomMargin();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        String[] stringArray = new String[]{ "-36.36869162977149", "-36.36869162977149", "-36.36869162977149", "-36.36869162977149", "-36.36869162977149", "-36.36869162977149", "-36.36869162977149" };
        Number[][] numberArray = new Number[][]{ new Number[]{ -36.36869162977149, -36.36869162977149, -36.36869162977149, -36.36869162977149, -36.36869162977149, -36.36869162977149, -36.36869162977149 } };
        Number[] numberArray = new Number[]{ 36.36869162977149, 36.36869162977149, 36.36869162977149, 36.36869162977149, 36.36869162977149, 36.36869162977149, 36.36869162977149 };
        ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel(numberArray, numberArray, stringArray);
        CoordSystem coordSystem = new CoordSystem(objectChartDataModel);
        CoordSystemUtilities coordSystemUtilities = coordSystem.c;
        coordSystemUtilities.computeBottomMargin();
    }
}
statement is: String[] stringArray = new String[]{ "-36.36869162977149", "-36.36869162977149", "-36.36869162977149", "-36.36869162977149", "-36.36869162977149", "-36.36869162977149", "-36.36869162977149" }, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [] Ct is: String[] stringArray = new String[9] isAssignment: false Array: new String[]{ "-36.36869162977149", "-36.36869162977149", "-36.36869162977149", "-36.36869162977149", "-36.36869162977149", "-36.36869162977149", "-36.36869162977149" } Elements: ["-36.36869162977149", "-36.36869162977149", "-36.36869162977149", "-36.36869162977149", "-36.36869162977149", "-36.36869162977149", "-36.36869162977149"]
lengths: [9] []
Dimension: [] Ct is: Number[][] numberArray = new Number[2][7] isAssignment: false Array: new String[]{ "-36.36869162977149", "-36.36869162977149", "-36.36869162977149", "-36.36869162977149", "-36.36869162977149", "-36.36869162977149", "-36.36869162977149" } Elements: ["-36.36869162977149", "-36.36869162977149", "-36.36869162977149", "-36.36869162977149", "-36.36869162977149", "-36.36869162977149", "-36.36869162977149"]
lengths: [2, 7] []
Dimension: [] Ct is: Number[] numberArray = new Number[7] isAssignment: false Array: new String[]{ "-36.36869162977149", "-36.36869162977149", "-36.36869162977149", "-36.36869162977149", "-36.36869162977149", "-36.36869162977149", "-36.36869162977149" } Elements: ["-36.36869162977149", "-36.36869162977149", "-36.36869162977149", "-36.36869162977149", "-36.36869162977149", "-36.36869162977149", "-36.36869162977149"]
lengths: [7] []
statement is: Number[][] numberArray = new Number[][]{ new Number[]{ -36.36869162977149, -36.36869162977149, -36.36869162977149, -36.36869162977149, -36.36869162977149, -36.36869162977149, -36.36869162977149 } }, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [] Ct is: String[] stringArray = new String[9] isAssignment: false Array: new Number[][]{ new Number[]{ -36.36869162977149, -36.36869162977149, -36.36869162977149, -36.36869162977149, -36.36869162977149, -36.36869162977149, -36.36869162977149 } } Elements: [new Number[]{ -36.36869162977149, -36.36869162977149, -36.36869162977149, -36.36869162977149, -36.36869162977149, -36.36869162977149, -36.36869162977149 }]
lengths: [9] []
Dimension: [] Ct is: Number[][] numberArray = new Number[2][7] isAssignment: false Array: new Number[][]{ new Number[]{ -36.36869162977149, -36.36869162977149, -36.36869162977149, -36.36869162977149, -36.36869162977149, -36.36869162977149, -36.36869162977149 } } Elements: [new Number[]{ -36.36869162977149, -36.36869162977149, -36.36869162977149, -36.36869162977149, -36.36869162977149, -36.36869162977149, -36.36869162977149 }]
lengths: [2, 7] []
Dimension: [] Ct is: Number[] numberArray = new Number[7] isAssignment: false Array: new Number[][]{ new Number[]{ -36.36869162977149, -36.36869162977149, -36.36869162977149, -36.36869162977149, -36.36869162977149, -36.36869162977149, -36.36869162977149 } } Elements: [new Number[]{ -36.36869162977149, -36.36869162977149, -36.36869162977149, -36.36869162977149, -36.36869162977149, -36.36869162977149, -36.36869162977149 }]
lengths: [7] []
statement is: Number[] numberArray = new Number[]{ 36.36869162977149, 36.36869162977149, 36.36869162977149, 36.36869162977149, 36.36869162977149, 36.36869162977149, 36.36869162977149 }, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [] Ct is: String[] stringArray = new String[9] isAssignment: false Array: new Number[]{ 36.36869162977149, 36.36869162977149, 36.36869162977149, 36.36869162977149, 36.36869162977149, 36.36869162977149, 36.36869162977149 } Elements: [36.36869162977149, 36.36869162977149, 36.36869162977149, 36.36869162977149, 36.36869162977149, 36.36869162977149, 36.36869162977149]
lengths: [9] []
Dimension: [] Ct is: Number[][] numberArray = new Number[2][7] isAssignment: false Array: new Number[]{ 36.36869162977149, 36.36869162977149, 36.36869162977149, 36.36869162977149, 36.36869162977149, 36.36869162977149, 36.36869162977149 } Elements: [36.36869162977149, 36.36869162977149, 36.36869162977149, 36.36869162977149, 36.36869162977149, 36.36869162977149, 36.36869162977149]
lengths: [2, 7] []
Dimension: [] Ct is: Number[] numberArray = new Number[7] isAssignment: false Array: new Number[]{ 36.36869162977149, 36.36869162977149, 36.36869162977149, 36.36869162977149, 36.36869162977149, 36.36869162977149, 36.36869162977149 } Elements: [36.36869162977149, 36.36869162977149, 36.36869162977149, 36.36869162977149, 36.36869162977149, 36.36869162977149, 36.36869162977149]
lengths: [7] []
statement is: ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel(numberArray, numberArray, stringArray), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: de.progra.charting.model.ObjectChartDataModel([[Ljava/lang/Number;[Ljava/lang/Object;[Ljava/lang/String;)V
statement is: CoordSystem coordSystem = new CoordSystem(objectChartDataModel), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: de.progra.charting.CoordSystem(Lde/progra/charting/model/ChartDataModel;)V
statement is: CoordSystemUtilities coordSystemUtilities = coordSystem.c, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: coordSystem.c is coordSystem
CtField is: protected de.progra.charting.CoordSystemUtilities de.progra.charting.CoordSystem.c CoordSystemUtilities c
statement is: coordSystemUtilities.computeBottomMargin(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: coordSystemUtilities.computeBottomMargin() target is: coordSystemUtilities method is: computeBottomMargin()
statement is: de.progra.charting.model.ObjectChartDataModel()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.progra.charting.model.ObjectChartDataModel
statement code is: ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel()
statement is: de.progra.charting.CoordSystem(Lde/progra/charting/model/ChartDataModel;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.progra.charting.CoordSystem
statement code is: CoordSystem coordSystem = new CoordSystem(arg0)
statement is: getDefaultStyleContext()Ljavax/swing/text/StyleContext; type is: class org.evosuite.testcase.statements.MethodStatement return type class javax.swing.text.StyleContext
statement code is: StyleContext defaultStyleContext = StyleContext.getDefaultStyleContext()
statement is: getFont(Ljava/lang/String;II)Ljava/awt/Font; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.awt.Font
statement code is: Font font = styleContext.getFont("", 1, 0)
statement is: setFont(Ljava/awt/Font;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: coordSystem.setFont(arg0)
statement is: org.evosuite.testcase.statements.FieldStatement@5029dc8e type is: class org.evosuite.testcase.statements.FieldStatement return type class de.progra.charting.CoordSystemUtilities
statement code is: CoordSystemUtilities coordSystemUtilities = coordSystem.c
statement is: computeBottomMargin()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int computeBottomMargin = coordSystemUtilities.computeBottomMargin()
test data is: ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel();
CoordSystem coordSystem = new CoordSystem(objectChartDataModel);
StyleContext defaultStyleContext = StyleContext.getDefaultStyleContext();
Font font = defaultStyleContext.getFont("", 1, 0);
coordSystem.setFont(font);
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
coordSystemUtilities.computeBottomMargin();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel();
        objectChartDataModel.setXAxisLabel("X Axis");
        objectChartDataModel.setYAxisLabel("Y Axis");
        objectChartDataModel.setTitle("Chart Title");
        CoordSystem coordSystem = new CoordSystem(objectChartDataModel);
        int chartWidth = 800;// Use a dynamic value for the chart width

        coordSystem.setWidth(chartWidth);
        int chartHeight = 600;// Use a dynamic value for the chart height

        coordSystem.setHeight(chartHeight);
        coordSystem.setFontSize(24);
        coordSystem.setBackgroundColor("#FFFFFF");
        coordSystem.setMargin(10);
        StyleContext defaultStyleContext = StyleContext.getDefaultStyleContext();
        Font font = defaultStyleContext.getFont("", 1, 0);
        coordSystem.setFont(font);
        CoordSystemUtilities coordSystemUtilities = coordSystem.c;
        coordSystemUtilities.computeBottomMargin();
    }
}
statement is: ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: objectChartDataModel.setXAxisLabel("X Axis"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: objectChartDataModel.setXAxisLabel("X Axis") target is: objectChartDataModel method is: setXAxisLabel(java.lang.String)
statement is: objectChartDataModel.setYAxisLabel("Y Axis"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: objectChartDataModel.setYAxisLabel("Y Axis") target is: objectChartDataModel method is: setYAxisLabel(java.lang.String)
statement is: objectChartDataModel.setTitle("Chart Title"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: objectChartDataModel.setTitle("Chart Title") target is: objectChartDataModel method is: setTitle(java.lang.String)
statement is: CoordSystem coordSystem = new CoordSystem(objectChartDataModel), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: int chartWidth = 800// Use a dynamic value for the chart width
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: coordSystem.setWidth(chartWidth), class spoon.support.reflect.code.CtInvocationImpl
invocation is: coordSystem.setWidth(chartWidth) target is: coordSystem method is: setWidth(int)
statement is: int chartHeight = 600// Use a dynamic value for the chart height
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: coordSystem.setHeight(chartHeight), class spoon.support.reflect.code.CtInvocationImpl
invocation is: coordSystem.setHeight(chartHeight) target is: coordSystem method is: setHeight(int)
statement is: coordSystem.setFontSize(24), class spoon.support.reflect.code.CtInvocationImpl
invocation is: coordSystem.setFontSize(24) target is: coordSystem method is: setFontSize(int)
statement is: coordSystem.setBackgroundColor("#FFFFFF"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: coordSystem.setBackgroundColor("#FFFFFF") target is: coordSystem method is: setBackgroundColor(java.lang.String)
statement is: coordSystem.setMargin(10), class spoon.support.reflect.code.CtInvocationImpl
invocation is: coordSystem.setMargin(10) target is: coordSystem method is: setMargin(int)
statement is: StyleContext defaultStyleContext = StyleContext.getDefaultStyleContext(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: StyleContext.getDefaultStyleContext() target is: StyleContext method is: getDefaultStyleContext()
Matched Method is: getDefaultStyleContext()Ljavax/swing/text/StyleContext;
statement is: Font font = defaultStyleContext.getFont("", 1, 0), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: defaultStyleContext.getFont("", 1, 0) target is: defaultStyleContext method is: getFont(java.lang.String,int,int)
source statement: getDefaultStyleContext()Ljavax/swing/text/StyleContext; callee: VariableReference: Statement 2, type javax.swing.text.StyleContextindex is: 4
Matched Method is: getFont(Ljava/lang/String;II)Ljava/awt/Font;
statement is: coordSystem.setFont(font), class spoon.support.reflect.code.CtInvocationImpl
invocation is: coordSystem.setFont(font) target is: coordSystem method is: setFont(Font)
source statement: de.progra.charting.CoordSystem(Lde/progra/charting/model/ChartDataModel;)V callee: VariableReference: Statement 1, type de.progra.charting.CoordSystemindex is: 1
Matched Method is: setFont(Ljava/awt/Font;)V
statement is: CoordSystemUtilities coordSystemUtilities = coordSystem.c, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: coordSystem.c is coordSystem
CtField is: protected de.progra.charting.CoordSystemUtilities de.progra.charting.CoordSystem.c CoordSystemUtilities c
statement is: coordSystemUtilities.computeBottomMargin(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: coordSystemUtilities.computeBottomMargin() target is: coordSystemUtilities method is: computeBottomMargin()
* this is vulnerable: int _int = 600
TestCase is: ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel();
CoordSystem coordSystem = new CoordSystem(objectChartDataModel);
int _int = 800;
int _int = 600;
StyleContext.getDefaultStyleContext();
String string = "";
int _int = 1;
int _int = 0;
Font font = ((StyleContext) _int).getFont(string, _int, _int);
coordSystem.setFont(font);

statement is: org.evosuite.testcase.statements.ArrayStatement@76e45558 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [Ljava.lang.String;
statement code is: String[] stringArray = new String[9]
statement is: org.evosuite.testcase.statements.ArrayStatement@86f4b6b4 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [[Ljava.lang.Number;
statement code is: Number[][] numberArray = new Number[2][7]
statement is: org.evosuite.testcase.statements.ArrayStatement@d843b358 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [Ljava.lang.Number;
statement code is: Number[] numberArray = new Number[7]
statement is: org.evosuite.testcase.statements.AssignmentStatement@ce51eb07 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.Number
statement code is: numberArray[0] = (Number) (-36.36869162977149)
statement is: org.evosuite.testcase.statements.AssignmentStatement@fb800292 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.Number
statement code is: numberArray[1] = (Number) (-36.36869162977149)
statement is: org.evosuite.testcase.statements.AssignmentStatement@8ce49609 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.Number
statement code is: numberArray[2] = (Number) (-36.36869162977149)
statement is: org.evosuite.testcase.statements.AssignmentStatement@b17aa6aa type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.Number
statement code is: numberArray[3] = (Number) (-36.36869162977149)
statement is: org.evosuite.testcase.statements.AssignmentStatement@b1443d94 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.Number
statement code is: numberArray[4] = (Number) (-36.36869162977149)
statement is: org.evosuite.testcase.statements.AssignmentStatement@35503b3 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.Number
statement code is: numberArray[5] = (Number) (-36.36869162977149)
statement is: org.evosuite.testcase.statements.AssignmentStatement@9cd74dc0 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.Number
statement code is: numberArray[6] = (Number) (-36.36869162977149)
statement is: org.evosuite.testcase.statements.AssignmentStatement@1bc04536 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class [Ljava.lang.Number;
statement code is: numberArray[0] = numberArray
statement is: org.evosuite.testcase.statements.AssignmentStatement@2c9d6041 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class [Ljava.lang.Number;
statement code is: numberArray[1] = numberArray
statement is: de.progra.charting.model.ObjectChartDataModel([[Ljava/lang/Number;[Ljava/lang/Object;[Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.progra.charting.model.ObjectChartDataModel
statement code is: ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel(arg0, arg1, arg2)
statement is: de.progra.charting.CoordSystem(Lde/progra/charting/model/ChartDataModel;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.progra.charting.CoordSystem
statement code is: CoordSystem coordSystem = new CoordSystem(arg0)
statement is: org.evosuite.testcase.statements.FieldStatement@745a67ad type is: class org.evosuite.testcase.statements.FieldStatement return type class de.progra.charting.CoordSystemUtilities
statement code is: CoordSystemUtilities coordSystemUtilities = coordSystem.c
statement is: computeXAxisLabelHeight()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int computeXAxisLabelHeight = coordSystemUtilities.computeXAxisLabelHeight()
test data is: String[] stringArray = new String[9];
Number[][] numberArray = new Number[2][7];
Number[] numberArray = new Number[7];
numberArray[0] = (Number) (-36.36869162977149);
numberArray[1] = (Number) (-36.36869162977149);
numberArray[2] = (Number) (-36.36869162977149);
numberArray[3] = (Number) (-36.36869162977149);
numberArray[4] = (Number) (-36.36869162977149);
numberArray[5] = (Number) (-36.36869162977149);
numberArray[6] = (Number) (-36.36869162977149);
numberArray[0] = numberArray;
numberArray[1] = numberArray;
ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel(numberArray, numberArray, stringArray);
CoordSystem coordSystem = new CoordSystem(objectChartDataModel);
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
coordSystemUtilities.computeXAxisLabelHeight();

* Computation finished
