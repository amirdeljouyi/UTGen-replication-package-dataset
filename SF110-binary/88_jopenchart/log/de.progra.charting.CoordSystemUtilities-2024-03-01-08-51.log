* EvoSuite 1.2.1-SNAPSHOT
* Going to generate test cases for class: de.progra.charting.CoordSystemUtilities
* Starting Client-0
* Properties loaded from /home/ubuntu/UTestGen/Evaluation/getting_results/dataset/SF110/88_jopenchart/evosuite-files/evosuite.properties
* Connecting to master process on port 4973
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 08:51:33.065 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 08:51:33.065 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 08:51:33.069 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
[MASTER] 08:51:33.346 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 08:51:33.347 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 08:51:33.352 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 08:51:34.362 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.ZoneId
[MASTER] 08:51:34.393 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.Temporal
[MASTER] 08:51:34.393 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAccessor
[MASTER] 08:51:34.394 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalField
[MASTER] 08:51:34.394 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalUnit
[MASTER] 08:51:34.394 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAmount
[MASTER] 08:51:34.394 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.Clock
[MASTER] 08:51:34.395 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalQuery
[MASTER] 08:51:34.395 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAdjuster
[MASTER] 08:51:34.404 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.Chronology
[MASTER] 08:51:34.409 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.Era
* Finished analyzing classpath
* Generating tests for class de.progra.charting.CoordSystemUtilities
* Test criteria:
  - Branch Coverage
  - Line Coverage
  - Method-Output Coverage
  - Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 450
* Using seed 1709283091047
[Progress:>                             0%] [Cov:>                                  0%]* Starting evolution
* Initial Number of Goals in DynaMOSA = 188 / 450
[Progress:>                             0%] [Cov:====>                              12%][Progress:>                             1%] [Cov:========>                          23%][Progress:>                             1%] [Cov:========>                          23%][Progress:>                             1%] [Cov:========>                          25%][Progress:>                             2%] [Cov:==========>                        30%][Progress:>                             2%] [Cov:==========>                        30%][Progress:>                             2%] [Cov:============>                      37%][Progress:>                             3%] [Cov:=============>                     39%][Progress:>                             3%] [Cov:=============>                     39%][Progress:>                             3%] [Cov:=============>                     39%][Progress:=>                            4%] [Cov:=============>                     39%][Progress:==>                           9%] [Cov:=============>                     39%][Progress:==>                           9%] [Cov:==============>                    41%][Progress:==>                           9%] [Cov:==============>                    41%][Progress:===>                          10%] [Cov:===============>                   44%][Progress:===>                          10%] [Cov:===============>                   45%][Progress:===>                          10%] [Cov:=================>                 50%][Progress:===>                          10%] [Cov:==================>                53%][Progress:===>                          11%] [Cov:==================>                53%][Progress:===>                          11%] [Cov:==================>                53%][Progress:===>                          11%] [Cov:==================>                54%][Progress:===>                          11%] [Cov:===================>               55%][Progress:===>                          12%] [Cov:===================>               55%][Progress:===>                          12%] [Cov:===================>               56%][Progress:===>                          12%] [Cov:===================>               56%][Progress:===>                          12%] [Cov:===================>               56%][Progress:===>                          13%] [Cov:===================>               56%][Progress:===>                          13%] [Cov:===================>               56%][Progress:===>                          13%] [Cov:===================>               56%][Progress:===>                          13%] [Cov:===================>               57%][Progress:===>                          13%] [Cov:===================>               57%][Progress:====>                         14%] [Cov:===================>               57%][Progress:====>                         14%] [Cov:===================>               57%][Progress:====>                         15%] [Cov:===================>               57%][Progress:====>                         15%] [Cov:====================>              58%][Progress:====>                         15%] [Cov:====================>              58%][Progress:====>                         15%] [Cov:====================>              58%][Progress:====>                         15%] [Cov:====================>              58%][Progress:====>                         15%] [Cov:====================>              58%][Progress:====>                         15%] [Cov:====================>              58%][Progress:====>                         15%] [Cov:====================>              58%][Progress:====>                         16%] [Cov:====================>              58%][Progress:====>                         16%] [Cov:====================>              58%][Progress:====>                         16%] [Cov:====================>              58%][Progress:====>                         16%] [Cov:====================>              58%][Progress:====>                         16%] [Cov:====================>              58%][Progress:====>                         16%] [Cov:====================>              58%][Progress:====>                         16%] [Cov:====================>              58%][Progress:====>                         16%] [Cov:====================>              58%][Progress:=====>                        17%] [Cov:====================>              58%][Progress:=====>                        17%] [Cov:====================>              59%][Progress:=====>                        17%] [Cov:====================>              59%][Progress:=====>                        17%] [Cov:====================>              59%][Progress:=====>                        17%] [Cov:====================>              59%][Progress:=====>                        17%] [Cov:====================>              59%][Progress:=====>                        17%] [Cov:====================>              59%][Progress:=====>                        17%] [Cov:====================>              59%][Progress:=====>                        18%] [Cov:=====================>             60%][Progress:=====>                        18%] [Cov:=====================>             60%][Progress:=====>                        18%] [Cov:=====================>             60%][Progress:=====>                        18%] [Cov:=====================>             60%][Progress:=====>                        18%] [Cov:=====================>             60%][Progress:=====>                        18%] [Cov:=====================>             60%][Progress:=====>                        18%] [Cov:=====================>             60%][Progress:=====>                        19%] [Cov:=====================>             60%][Progress:=====>                        19%] [Cov:=====================>             60%][Progress:=====>                        19%] [Cov:=====================>             60%][Progress:=====>                        19%] [Cov:=====================>             60%][Progress:=====>                        19%] [Cov:=====================>             61%][Progress:=====>                        19%] [Cov:=====================>             61%][Progress:=====>                        19%] [Cov:=====================>             61%][Progress:=====>                        19%] [Cov:=====================>             61%][Progress:======>                       20%] [Cov:=====================>             61%][Progress:======>                       20%] [Cov:=====================>             61%][Progress:======>                       20%] [Cov:=====================>             61%][Progress:======>                       20%] [Cov:=====================>             61%][Progress:======>                       20%] [Cov:=====================>             61%][Progress:======>                       20%] [Cov:=====================>             61%][Progress:======>                       20%] [Cov:=====================>             61%][Progress:======>                       20%] [Cov:=====================>             61%][Progress:======>                       21%] [Cov:=====================>             61%][Progress:======>                       21%] [Cov:=====================>             61%][Progress:======>                       21%] [Cov:=====================>             61%][Progress:======>                       21%] [Cov:=====================>             61%][Progress:======>                       21%] [Cov:=====================>             61%][Progress:======>                       21%] [Cov:=====================>             61%][Progress:======>                       21%] [Cov:=====================>             61%][Progress:======>                       21%] [Cov:=====================>             61%][Progress:======>                       22%] [Cov:=====================>             61%][Progress:======>                       22%] [Cov:=====================>             61%][Progress:======>                       22%] [Cov:=====================>             61%][Progress:======>                       22%] [Cov:=====================>             61%][Progress:======>                       22%] [Cov:=====================>             61%][Progress:======>                       22%] [Cov:=====================>             61%][Progress:======>                       22%] [Cov:=====================>             61%][Progress:======>                       23%] [Cov:=====================>             62%][Progress:======>                       23%] [Cov:=====================>             62%][Progress:======>                       23%] [Cov:=====================>             62%][Progress:======>                       23%] [Cov:=====================>             62%][Progress:======>                       23%] [Cov:=====================>             62%][Progress:======>                       23%] [Cov:=====================>             62%][Progress:======>                       23%] [Cov:=====================>             62%][Progress:======>                       23%] [Cov:=====================>             62%][Progress:=======>                      24%] [Cov:=====================>             62%][Progress:=======>                      24%] [Cov:=====================>             62%][Progress:=======>                      24%] [Cov:=====================>             62%][Progress:=======>                      24%] [Cov:=====================>             62%][Progress:=======>                      24%] [Cov:=====================>             62%][Progress:=======>                      24%] [Cov:=====================>             62%][Progress:=======>                      24%] [Cov:=====================>             62%][Progress:=======>                      24%] [Cov:=====================>             62%][Progress:=======>                      25%] [Cov:=====================>             62%][Progress:=======>                      25%] [Cov:=====================>             62%][Progress:=======>                      25%] [Cov:=====================>             62%][Progress:=======>                      25%] [Cov:=====================>             62%][Progress:=======>                      25%] [Cov:=====================>             62%][Progress:=======>                      25%] [Cov:=====================>             62%][Progress:=======>                      25%] [Cov:======================>            63%][Progress:=======>                      25%] [Cov:======================>            63%][Progress:=======>                      25%] [Cov:======================>            63%][Progress:=======>                      26%] [Cov:======================>            63%][Progress:=======>                      26%] [Cov:======================>            63%][Progress:=======>                      26%] [Cov:======================>            63%][Progress:=======>                      26%] [Cov:======================>            63%][Progress:=======>                      26%] [Cov:======================>            63%][Progress:=======>                      26%] [Cov:======================>            63%][Progress:=======>                      26%] [Cov:======================>            63%][Progress:=======>                      26%] [Cov:======================>            63%][Progress:=========>                    31%] [Cov:======================>            63%][Progress:=========>                    32%] [Cov:======================>            63%][Progress:=========>                    32%] [Cov:======================>            63%][Progress:=========>                    32%] [Cov:======================>            63%][Progress:=========>                    32%] [Cov:======================>            63%][Progress:=========>                    32%] [Cov:======================>            63%][Progress:=========>                    32%] [Cov:======================>            63%][Progress:=========>                    32%] [Cov:======================>            64%][Progress:=========>                    32%] [Cov:======================>            64%][Progress:=========>                    33%] [Cov:======================>            64%][Progress:=========>                    33%] [Cov:======================>            64%][Progress:=========>                    33%] [Cov:======================>            64%][Progress:=========>                    33%] [Cov:======================>            64%][Progress:=========>                    33%] [Cov:======================>            64%][Progress:=========>                    33%] [Cov:======================>            64%][Progress:=========>                    33%] [Cov:======================>            64%][Progress:=========>                    33%] [Cov:======================>            64%][Progress:==========>                   34%] [Cov:======================>            64%][Progress:==========>                   34%] [Cov:======================>            64%][Progress:==========>                   34%] [Cov:======================>            64%][Progress:==========>                   34%] [Cov:======================>            64%][Progress:==========>                   34%] [Cov:======================>            64%][Progress:==========>                   34%] [Cov:======================>            64%][Progress:==========>                   34%] [Cov:======================>            64%][Progress:==========>                   34%] [Cov:======================>            64%][Progress:==========>                   34%] [Cov:======================>            64%][Progress:==========>                   35%] [Cov:======================>            64%][Progress:==========>                   35%] [Cov:======================>            64%][Progress:==========>                   35%] [Cov:======================>            64%][Progress:==========>                   35%] [Cov:======================>            64%][Progress:==========>                   35%] [Cov:======================>            64%][Progress:==========>                   35%] [Cov:======================>            64%][Progress:==========>                   35%] [Cov:======================>            64%][Progress:==========>                   35%] [Cov:======================>            64%][Progress:==========>                   35%] [Cov:======================>            64%][Progress:==========>                   36%] [Cov:======================>            64%][Progress:==========>                   36%] [Cov:======================>            64%][Progress:==========>                   36%] [Cov:======================>            64%][Progress:==========>                   36%] [Cov:======================>            64%][Progress:==========>                   36%] [Cov:======================>            64%][Progress:==========>                   36%] [Cov:======================>            64%][Progress:==========>                   36%] [Cov:======================>            64%][Progress:==========>                   36%] [Cov:======================>            64%][Progress:==========>                   36%] [Cov:======================>            64%][Progress:==========>                   36%] [Cov:======================>            64%][Progress:==========>                   36%] [Cov:======================>            64%][Progress:==========>                   36%] [Cov:======================>            64%][Progress:===========>                  37%] [Cov:======================>            64%][Progress:===========>                  37%] [Cov:======================>            64%][Progress:===========>                  37%] [Cov:======================>            64%][Progress:===========>                  37%] [Cov:======================>            64%][Progress:===========>                  37%] [Cov:======================>            65%][Progress:===========>                  37%] [Cov:======================>            65%][Progress:===========>                  37%] [Cov:======================>            65%][Progress:===========>                  37%] [Cov:======================>            65%][Progress:===========>                  37%] [Cov:======================>            65%][Progress:===========>                  37%] [Cov:======================>            65%][Progress:===========>                  38%] [Cov:======================>            65%][Progress:===========>                  38%] [Cov:======================>            65%][Progress:===========>                  38%] [Cov:======================>            65%][Progress:===========>                  38%] [Cov:======================>            65%][Progress:===========>                  38%] [Cov:======================>            65%][Progress:===========>                  38%] [Cov:======================>            65%][Progress:===========>                  38%] [Cov:======================>            65%][Progress:===========>                  38%] [Cov:======================>            65%][Progress:===========>                  39%] [Cov:======================>            65%][Progress:===========>                  39%] [Cov:======================>            65%][Progress:===========>                  39%] [Cov:======================>            65%][Progress:===========>                  39%] [Cov:======================>            65%][Progress:===========>                  39%] [Cov:======================>            65%][Progress:===========>                  39%] [Cov:======================>            65%][Progress:===========>                  39%] [Cov:======================>            65%][Progress:===========>                  39%] [Cov:======================>            65%][Progress:===========>                  39%] [Cov:======================>            65%][Progress:============>                 40%] [Cov:======================>            65%][Progress:============>                 40%] [Cov:======================>            65%][Progress:============>                 40%] [Cov:======================>            65%][Progress:============>                 40%] [Cov:======================>            65%][Progress:============>                 40%] [Cov:======================>            65%][Progress:============>                 40%] [Cov:======================>            65%][Progress:============>                 40%] [Cov:======================>            65%][Progress:============>                 40%] [Cov:======================>            65%][Progress:============>                 41%] [Cov:======================>            65%][Progress:============>                 41%] [Cov:======================>            65%][Progress:============>                 41%] [Cov:======================>            65%][Progress:============>                 41%] [Cov:======================>            65%][Progress:============>                 41%] [Cov:======================>            65%][Progress:============>                 41%] [Cov:======================>            65%][Progress:============>                 41%] [Cov:======================>            65%][Progress:============>                 41%] [Cov:======================>            65%][Progress:============>                 41%] [Cov:======================>            65%][Progress:============>                 41%] [Cov:======================>            65%][Progress:============>                 42%] [Cov:======================>            65%][Progress:============>                 42%] [Cov:======================>            65%][Progress:============>                 42%] [Cov:======================>            65%][Progress:============>                 42%] [Cov:======================>            65%][Progress:============>                 42%] [Cov:======================>            65%][Progress:============>                 42%] [Cov:======================>            65%][Progress:============>                 42%] [Cov:======================>            65%][Progress:============>                 42%] [Cov:======================>            65%][Progress:============>                 42%] [Cov:======================>            65%][Progress:============>                 43%] [Cov:======================>            65%][Progress:============>                 43%] [Cov:======================>            65%][Progress:============>                 43%] [Cov:======================>            65%][Progress:============>                 43%] [Cov:======================>            65%][Progress:============>                 43%] [Cov:======================>            65%][Progress:============>                 43%] [Cov:======================>            65%][Progress:============>                 43%] [Cov:======================>            65%][Progress:=============>                44%] [Cov:======================>            65%][Progress:=============>                44%] [Cov:======================>            65%][Progress:=============>                44%] [Cov:======================>            65%][Progress:=============>                44%] [Cov:======================>            65%][Progress:=============>                44%] [Cov:======================>            65%][Progress:=============>                44%] [Cov:======================>            65%][Progress:=============>                45%] [Cov:======================>            65%][Progress:=============>                45%] [Cov:======================>            65%][Progress:===============>              50%] [Cov:======================>            65%][Progress:===============>              50%] [Cov:======================>            65%][Progress:===============>              50%] [Cov:======================>            65%][Progress:===============>              50%] [Cov:======================>            65%][Progress:===============>              50%] [Cov:======================>            65%][Progress:===============>              50%] [Cov:======================>            65%][Progress:===============>              50%] [Cov:======================>            65%][Progress:===============>              50%] [Cov:======================>            65%][Progress:===============>              51%] [Cov:======================>            65%][Progress:===============>              51%] [Cov:======================>            65%][Progress:===============>              51%] [Cov:======================>            65%][Progress:===============>              51%] [Cov:======================>            65%][Progress:===============>              51%] [Cov:======================>            65%][Progress:===============>              51%] [Cov:======================>            65%][Progress:===============>              51%] [Cov:======================>            65%][Progress:===============>              51%] [Cov:======================>            65%][Progress:===============>              51%] [Cov:======================>            65%][Progress:===============>              51%] [Cov:======================>            65%][Progress:===============>              51%] [Cov:======================>            65%][Progress:===============>              51%] [Cov:======================>            65%][Progress:===============>              51%] [Cov:======================>            65%][Progress:===============>              52%] [Cov:======================>            65%][Progress:===============>              52%] [Cov:======================>            65%][Progress:===============>              52%] [Cov:======================>            65%][Progress:===============>              52%] [Cov:======================>            65%][Progress:===============>              52%] [Cov:=======================>           68%][Progress:===============>              52%] [Cov:=======================>           68%][Progress:===============>              52%] [Cov:========================>          71%][Progress:===============>              52%] [Cov:========================>          71%][Progress:===============>              52%] [Cov:==========================>        76%][Progress:===============>              52%] [Cov:==========================>        76%][Progress:===============>              53%] [Cov:==========================>        76%][Progress:===============>              53%] [Cov:==========================>        76%][Progress:===============>              53%] [Cov:==========================>        76%][Progress:===============>              53%] [Cov:==========================>        77%][Progress:===============>              53%] [Cov:==========================>        77%][Progress:===============>              53%] [Cov:===========================>       78%][Progress:===============>              53%] [Cov:===========================>       78%][Progress:===============>              53%] [Cov:===========================>       78%][Progress:===============>              53%] [Cov:===========================>       78%][Progress:================>             54%] [Cov:===========================>       78%][Progress:================>             54%] [Cov:===========================>       78%][Progress:================>             54%] [Cov:===========================>       78%][Progress:================>             54%] [Cov:===========================>       78%][Progress:================>             54%] [Cov:===========================>       78%][Progress:================>             54%] [Cov:===========================>       78%][Progress:================>             55%] [Cov:===========================>       78%][Progress:================>             55%] [Cov:===========================>       78%][Progress:================>             55%] [Cov:===========================>       78%][Progress:================>             55%] [Cov:===========================>       78%][Progress:================>             55%] [Cov:===========================>       78%][Progress:================>             55%] [Cov:===========================>       78%][Progress:================>             55%] [Cov:===========================>       78%][Progress:================>             55%] [Cov:===========================>       78%][Progress:================>             56%] [Cov:===========================>       78%][Progress:================>             56%] [Cov:===========================>       78%][Progress:================>             56%] [Cov:===========================>       78%][Progress:================>             56%] [Cov:===========================>       78%][Progress:================>             56%] [Cov:===========================>       78%][Progress:================>             56%] [Cov:===========================>       78%][Progress:================>             56%] [Cov:===========================>       78%][Progress:================>             56%] [Cov:===========================>       78%][Progress:=================>            57%] [Cov:===========================>       78%][Progress:=================>            57%] [Cov:===========================>       78%][Progress:=================>            57%] [Cov:===========================>       78%][Progress:=================>            57%] [Cov:===========================>       78%][Progress:=================>            57%] [Cov:===========================>       78%][Progress:=================>            57%] [Cov:===========================>       78%][Progress:=================>            58%] [Cov:===========================>       79%][Progress:=================>            58%] [Cov:===========================>       79%][Progress:=================>            58%] [Cov:===========================>       79%][Progress:=================>            58%] [Cov:===========================>       79%][Progress:=================>            58%] [Cov:===========================>       79%][Progress:=================>            58%] [Cov:===========================>       79%][Progress:=================>            58%] [Cov:===========================>       79%][Progress:=================>            58%] [Cov:===========================>       79%][Progress:=================>            59%] [Cov:===========================>       79%][Progress:=================>            59%] [Cov:===========================>       79%][Progress:=================>            59%] [Cov:===========================>       79%][Progress:==================>           60%] [Cov:===========================>       79%][Progress:==================>           60%] [Cov:===========================>       79%][Progress:==================>           61%] [Cov:===========================>       79%][Progress:==================>           61%] [Cov:===========================>       79%][Progress:==================>           61%] [Cov:===========================>       79%][Progress:==================>           61%] [Cov:===========================>       79%][Progress:==================>           61%] [Cov:===========================>       79%][Progress:==================>           61%] [Cov:===========================>       79%][Progress:==================>           61%] [Cov:===========================>       79%][Progress:==================>           62%] [Cov:===========================>       79%][Progress:==================>           62%] [Cov:===========================>       79%][Progress:==================>           62%] [Cov:===========================>       79%][Progress:==================>           62%] [Cov:===========================>       79%][Progress:==================>           62%] [Cov:===========================>       79%][Progress:==================>           62%] [Cov:===========================>       79%][Progress:==================>           62%] [Cov:===========================>       79%][Progress:==================>           62%] [Cov:===========================>       79%][Progress:==================>           62%] [Cov:===========================>       79%][Progress:==================>           63%] [Cov:===========================>       79%][Progress:==================>           63%] [Cov:===========================>       79%][Progress:==================>           63%] [Cov:===========================>       79%][Progress:==================>           63%] [Cov:===========================>       79%][MASTER] 08:52:38.229 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.ChronoLocalDate
[Progress:==================>           63%] [Cov:===========================>       79%][Progress:==================>           63%] [Cov:===========================>       79%][MASTER] 08:52:38.455 [logback-1] WARN  TestCluster - Failed to check cache for java.time.temporal.TemporalQuery<R> : Type points to itself
[Progress:==================>           63%] [Cov:============================>      80%][Progress:==================>           63%] [Cov:============================>      80%][Progress:==================>           63%] [Cov:============================>      80%][Progress:==================>           63%] [Cov:============================>      80%][Progress:==================>           63%] [Cov:============================>      80%][Progress:===================>          64%] [Cov:============================>      80%][Progress:===================>          64%] [Cov:============================>      80%][Progress:===================>          64%] [Cov:============================>      80%][Progress:===================>          64%] [Cov:============================>      80%][Progress:===================>          64%] [Cov:============================>      80%][Progress:===================>          64%] [Cov:============================>      80%][Progress:===================>          64%] [Cov:============================>      80%][Progress:===================>          64%] [Cov:============================>      80%][Progress:===================>          65%] [Cov:============================>      80%][Progress:===================>          65%] [Cov:============================>      80%][Progress:===================>          65%] [Cov:============================>      80%][Progress:===================>          65%] [Cov:============================>      80%][Progress:====================>         67%] [Cov:============================>      80%][Progress:====================>         67%] [Cov:============================>      80%][Progress:====================>         69%] [Cov:============================>      80%][Progress:=====================>        70%] [Cov:============================>      80%][Progress:=====================>        70%] [Cov:============================>      80%][Progress:=====================>        70%] [Cov:============================>      80%][MASTER] 08:52:45.187 [logback-1] WARN  TestCluster - Failed to check cache for java.util.Enumeration<E> : Type points to itself
[Progress:=====================>        70%] [Cov:============================>      80%][Progress:=====================>        70%] [Cov:============================>      80%][Progress:=====================>        70%] [Cov:============================>      80%][Progress:=====================>        70%] [Cov:============================>      80%][Progress:=====================>        70%] [Cov:============================>      80%][Progress:=====================>        71%] [Cov:============================>      80%][Progress:=====================>        71%] [Cov:============================>      80%][Progress:=====================>        71%] [Cov:============================>      80%][Progress:=====================>        71%] [Cov:============================>      80%][Progress:=====================>        71%] [Cov:============================>      80%][Progress:=====================>        71%] [Cov:============================>      80%][Progress:=====================>        71%] [Cov:============================>      80%][Progress:=====================>        72%] [Cov:============================>      80%][Progress:=====================>        72%] [Cov:============================>      80%][Progress:=====================>        72%] [Cov:============================>      80%][Progress:=====================>        72%] [Cov:============================>      80%][Progress:=====================>        72%] [Cov:============================>      80%][Progress:=====================>        72%] [Cov:============================>      80%][Progress:=====================>        72%] [Cov:============================>      80%][Progress:=====================>        72%] [Cov:============================>      80%][Progress:=====================>        72%] [Cov:============================>      80%][Progress:=====================>        73%] [Cov:============================>      80%][Progress:=====================>        73%] [Cov:============================>      80%][Progress:=====================>        73%] [Cov:============================>      80%][Progress:======================>       75%] [Cov:============================>      80%][Progress:======================>       75%] [Cov:============================>      80%][Progress:======================>       75%] [Cov:============================>      80%][Progress:======================>       75%] [Cov:============================>      80%][Progress:======================>       76%] [Cov:============================>      80%][Progress:======================>       76%] [Cov:============================>      80%][Progress:======================>       76%] [Cov:============================>      80%][Progress:=======================>      78%] [Cov:============================>      80%][Progress:=======================>      78%] [Cov:============================>      80%][Progress:=======================>      78%] [Cov:============================>      80%][Progress:=======================>      78%] [Cov:============================>      80%][Progress:=======================>      78%] [Cov:============================>      80%][Progress:=======================>      78%] [Cov:============================>      80%][Progress:=======================>      78%] [Cov:============================>      80%][Progress:=======================>      78%] [Cov:============================>      80%][Progress:=======================>      79%] [Cov:============================>      80%][Progress:=======================>      79%] [Cov:============================>      80%][Progress:=======================>      79%] [Cov:============================>      80%][Progress:=======================>      79%] [Cov:============================>      80%][Progress:=======================>      79%] [Cov:============================>      80%][Progress:=======================>      79%] [Cov:============================>      80%][Progress:=======================>      79%] [Cov:============================>      80%][Progress:========================>     80%] [Cov:============================>      80%][Progress:========================>     80%] [Cov:============================>      80%][Progress:========================>     80%] [Cov:============================>      80%][Progress:========================>     80%] [Cov:============================>      80%][Progress:========================>     80%] [Cov:============================>      80%][Progress:========================>     80%] [Cov:============================>      80%][MASTER] 08:52:55.853 [logback-1] WARN  TestCluster - Failed to check cache for java.lang.Comparable<T> : Type points to itself
[Progress:========================>     81%] [Cov:============================>      80%][Progress:========================>     81%] [Cov:============================>      80%][Progress:========================>     81%] [Cov:============================>      80%][Progress:========================>     81%] [Cov:============================>      80%][Progress:========================>     82%] [Cov:============================>      80%][Progress:========================>     82%] [Cov:============================>      80%][Progress:========================>     82%] [Cov:============================>      80%][Progress:========================>     82%] [Cov:============================>      80%][Progress:========================>     82%] [Cov:============================>      80%][Progress:========================>     82%] [Cov:============================>      80%][Progress:========================>     82%] [Cov:============================>      80%][Progress:========================>     82%] [Cov:============================>      80%][Progress:========================>     82%] [Cov:============================>      80%][Progress:========================>     83%] [Cov:============================>      80%][Progress:========================>     83%] [Cov:============================>      80%][Progress:========================>     83%] [Cov:============================>      80%][Progress:========================>     83%] [Cov:============================>      80%][Progress:========================>     83%] [Cov:============================>      80%][Progress:========================>     83%] [Cov:============================>      80%][Progress:========================>     83%] [Cov:============================>      80%][Progress:=========================>    84%] [Cov:============================>      80%][Progress:=========================>    84%] [Cov:============================>      80%][Progress:=========================>    84%] [Cov:============================>      80%][Progress:=========================>    84%] [Cov:============================>      80%][Progress:=========================>    84%] [Cov:============================>      80%][Progress:=========================>    84%] [Cov:============================>      80%][Progress:=========================>    84%] [Cov:============================>      80%][Progress:=========================>    84%] [Cov:============================>      80%][Progress:=========================>    85%] [Cov:============================>      80%][Progress:=========================>    85%] [Cov:============================>      80%][Progress:==========================>   87%] [Cov:============================>      80%][Progress:==========================>   87%] [Cov:============================>      80%][Progress:==========================>   88%] [Cov:============================>      80%][Progress:==========================>   88%] [Cov:============================>      80%][Progress:==========================>   88%] [Cov:============================>      80%][Progress:==========================>   88%] [Cov:============================>      80%][Progress:==========================>   88%] [Cov:============================>      80%][Progress:==========================>   88%] [Cov:============================>      80%][Progress:==========================>   88%] [Cov:============================>      80%][Progress:==========================>   88%] [Cov:============================>      80%][Progress:==========================>   89%] [Cov:============================>      80%][Progress:==========================>   89%] [Cov:============================>      80%][Progress:==========================>   89%] [Cov:============================>      80%][Progress:==========================>   89%] [Cov:============================>      80%][Progress:==========================>   89%] [Cov:============================>      80%][Progress:==========================>   89%] [Cov:============================>      80%][Progress:==========================>   89%] [Cov:============================>      80%][Progress:==========================>   89%] [Cov:============================>      80%][Progress:==========================>   89%] [Cov:============================>      80%][Progress:==========================>   89%] [Cov:============================>      80%][Progress:===========================>  90%] [Cov:============================>      80%][Progress:===========================>  90%] [Cov:============================>      80%][Progress:===========================>  90%] [Cov:============================>      80%][Progress:===========================>  90%] [Cov:============================>      80%][Progress:===========================>  90%] [Cov:============================>      80%][Progress:===========================>  90%] [Cov:============================>      80%][Progress:===========================>  90%] [Cov:============================>      80%][Progress:===========================>  91%] [Cov:============================>      80%][Progress:===========================>  91%] [Cov:============================>      80%][Progress:===========================>  91%] [Cov:============================>      80%][Progress:===========================>  91%] [Cov:============================>      80%][Progress:===========================>  91%] [Cov:============================>      80%][Progress:===========================>  91%] [Cov:============================>      80%][Progress:===========================>  91%] [Cov:============================>      80%][Progress:===========================>  92%] [Cov:============================>      80%][Progress:===========================>  92%] [Cov:============================>      80%][Progress:===========================>  92%] [Cov:============================>      80%][Progress:===========================>  92%] [Cov:============================>      80%][Progress:===========================>  92%] [Cov:============================>      80%][Progress:===========================>  92%] [Cov:============================>      80%][Progress:===========================>  92%] [Cov:============================>      80%][Progress:===========================>  92%] [Cov:============================>      80%][Progress:===========================>  93%] [Cov:============================>      80%][Progress:===========================>  93%] [Cov:============================>      80%][Progress:===========================>  93%] [Cov:============================>      80%][Progress:===========================>  93%] [Cov:============================>      80%][Progress:=============================>98%] [Cov:============================>      80%][Progress:=============================>98%] [Cov:============================>      80%][Progress:=============================>98%] [Cov:============================>      80%][Progress:=============================>98%] [Cov:============================>      80%][Progress:=============================>98%] [Cov:============================>      80%][Progress:=============================>99%] [Cov:============================>      80%][Progress:=============================>99%] [Cov:============================>      80%][Progress:=============================>99%] [Cov:============================>      80%][Progress:=============================>99%] [Cov:============================>      80%][Progress:=============================>99%] [Cov:============================>      80%][Progress:=============================>99%] [Cov:============================>      80%][Progress:==============================100%] [Cov:============================>      80%][Progress:==============================100%] [Cov:============================>      80%][Progress:==============================100%] [Cov:============================>      80%][Progress:==============================100%] [Cov:============================>      80%][Progress:==============================100%] [Cov:============================>      80%][Progress:==============================100%] [Cov:============================>      80%][Progress:==============================100%] [Cov:============================>      80%][Progress:==============================100%] [Cov:============================>      80%][Progress:==============================100%] [Cov:============================>      80%]
* Search finished after 102s and 517 generations, 274504 statements, best individual has fitness: 62.0
* Generated before the refinement 38 tests with total length 372
statement is: de.progra.charting.model.ObjectChartDataModel()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.progra.charting.model.ObjectChartDataModel
statement code is: ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel()
statement is: de.progra.charting.CoordSystem(Lde/progra/charting/model/ChartDataModel;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.progra.charting.CoordSystem
statement code is: CoordSystem coordSystem = new CoordSystem(arg0)
statement is: org.evosuite.testcase.statements.FieldStatement@77e67ce0 type is: class org.evosuite.testcase.statements.FieldStatement return type class de.progra.charting.CoordSystemUtilities
statement code is: CoordSystemUtilities coordSystemUtilities = coordSystem.c
statement is: computeRightMargin()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int computeRightMargin = coordSystemUtilities.computeRightMargin()
test data is: ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel();
CoordSystem coordSystem = new CoordSystem(objectChartDataModel);
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
coordSystemUtilities.computeRightMargin();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel();
        objectChartDataModel.setWidth(800);
        objectChartDataModel.setHeight(600);
        objectChartDataModel.setXAxisLabel("Time (s)");
        objectChartDataModel.setYAxisLabel("Temperature (°C)");
        CoordSystem coordSystem = new CoordSystem(objectChartDataModel);
        coordSystem.setOrigin(new Point(0, 0));
        coordSystem.setRightMargin(50);
        CoordSystemUtilities coordSystemUtilities = coordSystem.c;
        coordSystemUtilities.computeRightMargin();
    }
}
statement is: ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: objectChartDataModel.setWidth(800), class spoon.support.reflect.code.CtInvocationImpl
invocation is: objectChartDataModel.setWidth(800) target is: objectChartDataModel method is: setWidth(int)
statement is: objectChartDataModel.setHeight(600), class spoon.support.reflect.code.CtInvocationImpl
invocation is: objectChartDataModel.setHeight(600) target is: objectChartDataModel method is: setHeight(int)
statement is: objectChartDataModel.setXAxisLabel("Time (s)"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: objectChartDataModel.setXAxisLabel("Time (s)") target is: objectChartDataModel method is: setXAxisLabel(java.lang.String)
statement is: objectChartDataModel.setYAxisLabel("Temperature (°C)"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: objectChartDataModel.setYAxisLabel("Temperature (°C)") target is: objectChartDataModel method is: setYAxisLabel(java.lang.String)
statement is: CoordSystem coordSystem = new CoordSystem(objectChartDataModel), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: coordSystem.setOrigin(new Point(0, 0)), class spoon.support.reflect.code.CtInvocationImpl
invocation is: coordSystem.setOrigin(new Point(0, 0)) target is: coordSystem method is: setOrigin(Point)
statement is: coordSystem.setRightMargin(50), class spoon.support.reflect.code.CtInvocationImpl
invocation is: coordSystem.setRightMargin(50) target is: coordSystem method is: setRightMargin(int)
statement is: CoordSystemUtilities coordSystemUtilities = coordSystem.c, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: coordSystem.c is coordSystem
CtField is: protected de.progra.charting.CoordSystemUtilities de.progra.charting.CoordSystem.c CoordSystemUtilities c
statement is: coordSystemUtilities.computeRightMargin(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: coordSystemUtilities.computeRightMargin() target is: coordSystemUtilities method is: computeRightMargin()
TestCase is: ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel();
CoordSystem coordSystem = new CoordSystem(objectChartDataModel);

statement is: de.progra.charting.model.ObjectChartDataModel()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.progra.charting.model.ObjectChartDataModel
statement code is: ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel()
statement is: de.progra.charting.CoordSystem(Lde/progra/charting/model/ChartDataModel;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.progra.charting.CoordSystem
statement code is: CoordSystem coordSystem = new CoordSystem(arg0)
statement is: org.evosuite.testcase.statements.FieldStatement@5f27dbf0 type is: class org.evosuite.testcase.statements.FieldStatement return type class de.progra.charting.CoordSystemUtilities
statement code is: CoordSystemUtilities coordSystemUtilities = coordSystem.c
statement is: computeTopMargin()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int computeTopMargin = coordSystemUtilities.computeTopMargin()
test data is: ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel();
CoordSystem coordSystem = new CoordSystem(objectChartDataModel);
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
coordSystemUtilities.computeTopMargin();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel();
        objectChartDataModel.setWidth(1000);// set a more realistic width value

        objectChartDataModel.setHeight(500);// set a more realistic height value

        CoordSystem coordSystem = new CoordSystem(objectChartDataModel);
        coordSystem.setTopMargin(50);// set a more realistic top margin value

        CoordSystemUtilities coordSystemUtilities = coordSystem.c;
        coordSystemUtilities.computeTopMargin();
    }
}
statement is: ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: objectChartDataModel.setWidth(1000)// set a more realistic width value
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: objectChartDataModel.setWidth(1000)// set a more realistic width value
 target is: objectChartDataModel method is: setWidth(int)
statement is: objectChartDataModel.setHeight(500)// set a more realistic height value
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: objectChartDataModel.setHeight(500)// set a more realistic height value
 target is: objectChartDataModel method is: setHeight(int)
statement is: CoordSystem coordSystem = new CoordSystem(objectChartDataModel), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: coordSystem.setTopMargin(50)// set a more realistic top margin value
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: coordSystem.setTopMargin(50)// set a more realistic top margin value
 target is: coordSystem method is: setTopMargin(int)
statement is: CoordSystemUtilities coordSystemUtilities = coordSystem.c, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: coordSystem.c is coordSystem
CtField is: protected de.progra.charting.CoordSystemUtilities de.progra.charting.CoordSystem.c CoordSystemUtilities c
statement is: coordSystemUtilities.computeTopMargin(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: coordSystemUtilities.computeTopMargin() target is: coordSystemUtilities method is: computeTopMargin()
TestCase is: ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel();
CoordSystem coordSystem = new CoordSystem(objectChartDataModel);

statement is: org.evosuite.testcase.statements.ArrayStatement@90484f03 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [[D
statement code is: double[][] doubleArray = new double[1][8]
statement is: org.evosuite.testcase.statements.ArrayStatement@32465f5b type is: class org.evosuite.testcase.statements.ArrayStatement return type class [D
statement code is: double[] doubleArray = new double[1]
statement is: org.evosuite.testcase.statements.AssignmentStatement@62d01b46 type is: class org.evosuite.testcase.statements.AssignmentStatement return type double
statement code is: doubleArray[0] = 1.0
statement is: org.evosuite.testcase.statements.ArrayStatement@a9744572 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [Ljava.lang.String;
statement code is: String[] stringArray = new String[6]
statement is: de.progra.charting.model.EditableChartDataModel([[D[D[Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.progra.charting.model.EditableChartDataModel
statement code is: EditableChartDataModel editableChartDataModel = new EditableChartDataModel(arg0, arg1, arg2)
statement is: java.text.DecimalFormatSymbols()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.text.DecimalFormatSymbols
statement code is: DecimalFormatSymbols decimalFormatSymbols = new DecimalFormatSymbols()
statement is: java.text.DecimalFormat(Ljava/lang/String;Ljava/text/DecimalFormatSymbols;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.text.DecimalFormat
statement code is: DecimalFormat decimalFormat = new DecimalFormat("", arg1)
statement is: de.progra.charting.CoordSystem(Lde/progra/charting/model/ChartDataModel;Ljava/text/DecimalFormat;ZZZ)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.progra.charting.CoordSystem
statement code is: CoordSystem coordSystem = new CoordSystem(arg0, arg1, false, false, false)
statement is: org.evosuite.testcase.statements.FieldStatement@5a87cf07 type is: class org.evosuite.testcase.statements.FieldStatement return type class de.progra.charting.CoordSystemUtilities
statement code is: CoordSystemUtilities coordSystemUtilities = coordSystem.c
statement is: computeLeftMargin()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int computeLeftMargin = coordSystemUtilities.computeLeftMargin()
test data is: double[][] doubleArray = new double[1][8];
double[] doubleArray = new double[1];
doubleArray[0] = 1.0;
String[] stringArray = new String[6];
EditableChartDataModel editableChartDataModel = new EditableChartDataModel(doubleArray, doubleArray, stringArray);
DecimalFormatSymbols decimalFormatSymbols = new DecimalFormatSymbols();
DecimalFormat decimalFormat = new DecimalFormat("", decimalFormatSymbols);
CoordSystem coordSystem = new CoordSystem(editableChartDataModel, decimalFormat, false, false, false);
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
coordSystemUtilities.computeLeftMargin();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        double[][] doubleArray = new double[1][8];
        double[] doubleArray = new double[1];
        doubleArray[0] = 3.14;
        String[] stringArray = new String[6];
        stringArray[0] = "Apple";
        stringArray[1] = "Orange";
        stringArray[2] = "Banana";
        stringArray[3] = "Mango";
        stringArray[4] = "Pineapple";
        stringArray[5] = "Grapes";
        EditableChartDataModel editableChartDataModel = new EditableChartDataModel(doubleArray, doubleArray, stringArray);
        DecimalFormatSymbols decimalFormatSymbols = new DecimalFormatSymbols();
        DecimalFormat decimalFormat = new DecimalFormat("", decimalFormatSymbols);
        CoordSystem coordSystem = new CoordSystem(editableChartDataModel, decimalFormat, false, false, false);
        CoordSystemUtilities coordSystemUtilities = coordSystem.c;
        coordSystemUtilities.computeLeftMargin();
    }
}
statement is: double[][] doubleArray = new double[1][8], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [1, 8] Ct is: double[][] doubleArray = new double[1][8] isAssignment: false Array: new double[1][8] Elements: []
lengths: [1, 8] [1, 8]
Their type are: class [[D double[][]
statement is: double[] doubleArray = new double[1], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [1] Ct is: double[][] doubleArray = new double[1][8] isAssignment: false Array: new double[1] Elements: []
lengths: [1, 8] [1]
Dimension: [1] Ct is: double[] doubleArray = new double[1] isAssignment: false Array: new double[1] Elements: []
lengths: [1] [1]
Their type are: class [D double[]
statement is: doubleArray[0] = 3.14, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : doubleArray[0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl double Assignment:3.14 Ct is: doubleArray[0] = 3.14
target : doubleArray class spoon.support.reflect.code.CtLiteralImpl
statement is: String[] stringArray = new String[6], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [6] Ct is: double[][] doubleArray = new double[1][8] isAssignment: false Array: new String[6] Elements: []
lengths: [1, 8] [6]
Dimension: [6] Ct is: double[] doubleArray = new double[1] isAssignment: false Array: new String[6] Elements: []
lengths: [1] [6]
Their type are: class [D String[]
Dimension: [6] Ct is: String[] stringArray = new String[6] isAssignment: false Array: new String[6] Elements: []
lengths: [6] [6]
Their type are: class [Ljava.lang.String; String[]
statement is: stringArray[0] = "Apple", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"Apple" Ct is: stringArray[0] = "Apple"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[1] = "Orange", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[1] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"Orange" Ct is: stringArray[1] = "Orange"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[2] = "Banana", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[2] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"Banana" Ct is: stringArray[2] = "Banana"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[3] = "Mango", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[3] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"Mango" Ct is: stringArray[3] = "Mango"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[4] = "Pineapple", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[4] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"Pineapple" Ct is: stringArray[4] = "Pineapple"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[5] = "Grapes", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[5] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"Grapes" Ct is: stringArray[5] = "Grapes"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: EditableChartDataModel editableChartDataModel = new EditableChartDataModel(doubleArray, doubleArray, stringArray), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: DecimalFormatSymbols decimalFormatSymbols = new DecimalFormatSymbols(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: DecimalFormat decimalFormat = new DecimalFormat("", decimalFormatSymbols), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: CoordSystem coordSystem = new CoordSystem(editableChartDataModel, decimalFormat, false, false, false), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: CoordSystemUtilities coordSystemUtilities = coordSystem.c, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: coordSystem.c is coordSystem
CtField is: protected de.progra.charting.CoordSystemUtilities de.progra.charting.CoordSystem.c CoordSystemUtilities c
statement is: coordSystemUtilities.computeLeftMargin(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: coordSystemUtilities.computeLeftMargin() target is: coordSystemUtilities method is: computeLeftMargin()
TestCase is: double[][] doubleArray = new double[1][8];
double[] doubleArray = new double[1];
double _double = 3.14;
doubleArray[0] = _double;
String[] stringArray = new String[6];
EditableChartDataModel editableChartDataModel = new EditableChartDataModel((double[][]) doubleArray, doubleArray, stringArray);
DecimalFormatSymbols decimalFormatSymbols = new DecimalFormatSymbols();
String string = "";
DecimalFormat decimalFormat = new DecimalFormat(string, decimalFormatSymbols);
boolean _boolean = false;
boolean _boolean = false;
boolean _boolean = false;
CoordSystem coordSystem = new CoordSystem(editableChartDataModel, decimalFormat, _boolean, _boolean, _boolean);

statement is: de.progra.charting.model.ObjectChartDataModel()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.progra.charting.model.ObjectChartDataModel
statement code is: ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel()
statement is: de.progra.charting.CoordSystem(Lde/progra/charting/model/ChartDataModel;Ljava/lang/String;Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.progra.charting.CoordSystem
statement code is: CoordSystem coordSystem = new CoordSystem(arg0, (String) null, "^R^i>pE#zxTl02\"(")
statement is: org.evosuite.testcase.statements.FieldStatement@3545c81b type is: class org.evosuite.testcase.statements.FieldStatement return type class de.progra.charting.CoordSystemUtilities
statement code is: CoordSystemUtilities coordSystemUtilities = coordSystem.c
statement is: computeLeftMargin()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int computeLeftMargin = coordSystemUtilities.computeLeftMargin()
test data is: ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel();
CoordSystem coordSystem = new CoordSystem(objectChartDataModel, (String) null, "^R^i>pE#zxTl02\"(");
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
coordSystemUtilities.computeLeftMargin();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel();
        CoordSystem coordSystem = new CoordSystem(objectChartDataModel, ((String) (null)), "^R^i>pE#zxTl02\"(");
        CoordSystemUtilities coordSystemUtilities = coordSystem.c;
        coordSystemUtilities.computeLeftMargin();
        // Improved test data:
        ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel(10, 20);
        CoordSystem coordSystem = new CoordSystem(objectChartDataModel, "my_coord_system", "^R^i>pE#zxTl02\"(");
        CoordSystemUtilities coordSystemUtilities = coordSystem.c;
        coordSystemUtilities.computeLeftMargin();
    }
}
statement is: ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: CoordSystem coordSystem = new CoordSystem(objectChartDataModel, ((String) (null)), "^R^i>pE#zxTl02\"("), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: CoordSystemUtilities coordSystemUtilities = coordSystem.c, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: coordSystem.c is coordSystem
CtField is: protected de.progra.charting.CoordSystemUtilities de.progra.charting.CoordSystem.c CoordSystemUtilities c
statement is: coordSystemUtilities.computeLeftMargin(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: coordSystemUtilities.computeLeftMargin() target is: coordSystemUtilities method is: computeLeftMargin()
statement is: // Improved test data:
ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel(10, 20), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: CoordSystem coordSystem = new CoordSystem(objectChartDataModel, "my_coord_system", "^R^i>pE#zxTl02\"("), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: CoordSystemUtilities coordSystemUtilities = coordSystem.c, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: coordSystem.c is coordSystem
CtField is: protected de.progra.charting.CoordSystemUtilities de.progra.charting.CoordSystem.c CoordSystemUtilities c
statement is: coordSystemUtilities.computeLeftMargin(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: coordSystemUtilities.computeLeftMargin() target is: coordSystemUtilities method is: computeLeftMargin()
TestCase is: ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel();
String string = "^R^i>pE#zxTl02\"(";
CoordSystem coordSystem = new CoordSystem(objectChartDataModel, string, "^R^i>pE#zxTl02\"(");
String string = "my_coord_system";
String string = "^R^i>pE#zxTl02\"(";
CoordSystem coordSystem = new CoordSystem(objectChartDataModel, string, string);

statement is: org.evosuite.testcase.statements.ArrayStatement@94dfdc7e type is: class org.evosuite.testcase.statements.ArrayStatement return type class [[D
statement code is: double[][] doubleArray = new double[1][0]
statement is: org.evosuite.testcase.statements.ArrayStatement@71b25de3 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [D
statement code is: double[] doubleArray = new double[9]
statement is: org.evosuite.testcase.statements.AssignmentStatement@558a4689 type is: class org.evosuite.testcase.statements.AssignmentStatement return type double
statement code is: doubleArray[0] = (-2015.4909919749273)
statement is: org.evosuite.testcase.statements.AssignmentStatement@fd186653 type is: class org.evosuite.testcase.statements.AssignmentStatement return type double
statement code is: doubleArray[1] = 1138.447
statement is: org.evosuite.testcase.statements.AssignmentStatement@87752904 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class [D
statement code is: doubleArray[0] = doubleArray
statement is: org.evosuite.testcase.statements.ArrayStatement@17f459d0 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [Ljava.lang.String;
statement code is: String[] stringArray = new String[9]
statement is: de.progra.charting.model.DefaultChartDataModel([[D[D[Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.progra.charting.model.DefaultChartDataModel
statement code is: DefaultChartDataModel defaultChartDataModel = new DefaultChartDataModel(arg0, arg1, arg2)
statement is: de.progra.charting.CoordSystem(Lde/progra/charting/model/ChartDataModel;Ljava/lang/String;Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.progra.charting.CoordSystem
statement code is: CoordSystem coordSystem = new CoordSystem(arg0, stringArray[7], "~oG#U")
statement is: org.evosuite.testcase.statements.FieldStatement@80e7688c type is: class org.evosuite.testcase.statements.FieldStatement return type class de.progra.charting.CoordSystemUtilities
statement code is: CoordSystemUtilities coordSystemUtilities = coordSystem.c
statement is: computeLeftMargin()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int computeLeftMargin = coordSystemUtilities.computeLeftMargin()
test data is: double[][] doubleArray = new double[1][0];
double[] doubleArray = new double[9];
doubleArray[0] = (-2015.4909919749273);
doubleArray[1] = 1138.447;
doubleArray[0] = doubleArray;
String[] stringArray = new String[9];
DefaultChartDataModel defaultChartDataModel = new DefaultChartDataModel(doubleArray, doubleArray, stringArray);
CoordSystem coordSystem = new CoordSystem(defaultChartDataModel, stringArray[7], "~oG#U");
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
coordSystemUtilities.computeLeftMargin();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        double[][] doubleArray = new double[1][0];
        doubleArray[0] = -2015.4909919749273;
        doubleArray[1] = 1138.447;
        doubleArray[0] = doubleArray;
        String[] stringArray = new String[9];
        stringArray[0] = "A";
        stringArray[1] = "B";
        stringArray[2] = "C";
        stringArray[3] = "D";
        stringArray[4] = "E";
        stringArray[5] = "F";
        stringArray[6] = "G";
        stringArray[7] = "H";
        String[] stringArray = new String[9];
        DefaultChartDataModel defaultChartDataModel = new DefaultChartDataModel(doubleArray, doubleArray, stringArray);
        CoordSystem coordSystem = new CoordSystem(defaultChartDataModel, stringArray[7], "~oG#U");
        CoordSystemUtilities coordSystemUtilities = coordSystem.c;
        coordSystemUtilities.computeLeftMargin();
    }
}
statement is: double[][] doubleArray = new double[1][0], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [1, 0] Ct is: double[][] doubleArray = new double[1][0] isAssignment: false Array: new double[1][0] Elements: []
lengths: [1, 0] [1, 0]
Their type are: class [[D double[][]
statement is: doubleArray[0] = -2015.4909919749273, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : doubleArray[0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl double[] Assignment:-2015.4909919749273 Ct is: doubleArray[0] = -2015.4909919749273
target : doubleArray class spoon.support.reflect.code.CtLiteralImpl
TestCase Could not be added: org.evosuite.testcase.statements.AssignmentStatement@47622dd8
statement is: doubleArray[1] = 1138.447, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : doubleArray[1] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl double[] Assignment:1138.447 Ct is: doubleArray[1] = 1138.447
target : doubleArray class spoon.support.reflect.code.CtLiteralImpl
statement is: doubleArray[0] = doubleArray, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : doubleArray[0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl double[] Assignment:doubleArray Ct is: doubleArray[0] = doubleArray
target : doubleArray class spoon.support.reflect.code.CtLiteralImpl
statement is: String[] stringArray = new String[9], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [9] Ct is: double[][] doubleArray = new double[1][0] isAssignment: false Array: new String[9] Elements: []
lengths: [1, 0] [9]
Dimension: [9] Ct is: double[] doubleArray = new double[9] isAssignment: false Array: new String[9] Elements: []
lengths: [9] [9]
Their type are: class [D String[]
Dimension: [9] Ct is: String[] stringArray = new String[9] isAssignment: false Array: new String[9] Elements: []
lengths: [9] [9]
Their type are: class [Ljava.lang.String; String[]
statement is: stringArray[0] = "A", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"A" Ct is: stringArray[0] = "A"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[1] = "B", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[1] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"B" Ct is: stringArray[1] = "B"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[2] = "C", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[2] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"C" Ct is: stringArray[2] = "C"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[3] = "D", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[3] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"D" Ct is: stringArray[3] = "D"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[4] = "E", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[4] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"E" Ct is: stringArray[4] = "E"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[5] = "F", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[5] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"F" Ct is: stringArray[5] = "F"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[6] = "G", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[6] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"G" Ct is: stringArray[6] = "G"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[7] = "H", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[7] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"H" Ct is: stringArray[7] = "H"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: String[] stringArray = new String[9], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [9] Ct is: double[][] doubleArray = new double[1][0] isAssignment: false Array: new String[9] Elements: []
lengths: [1, 0] [9]
Dimension: [9] Ct is: double[] doubleArray = new double[9] isAssignment: false Array: new String[9] Elements: []
lengths: [9] [9]
Their type are: class [D String[]
Dimension: [9] Ct is: String[] stringArray = new String[9] isAssignment: false Array: new String[9] Elements: []
lengths: [9] [9]
Their type are: class [Ljava.lang.String; String[]
statement is: DefaultChartDataModel defaultChartDataModel = new DefaultChartDataModel(doubleArray, doubleArray, stringArray), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: CoordSystem coordSystem = new CoordSystem(defaultChartDataModel, stringArray[7], "~oG#U"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: CoordSystemUtilities coordSystemUtilities = coordSystem.c, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: coordSystem.c is coordSystem
CtField is: protected de.progra.charting.CoordSystemUtilities de.progra.charting.CoordSystem.c CoordSystemUtilities c
statement is: coordSystemUtilities.computeLeftMargin(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: coordSystemUtilities.computeLeftMargin() target is: coordSystemUtilities method is: computeLeftMargin()
TestCase is: double[][] doubleArray = new double[1][0];
double _double = 1138.447;
doubleArray[0] = (double[]) _double;
doubleArray[0] = (double[]) doubleArray;
String[] stringArray = new String[9];
String[] stringArray = new String[9];
DefaultChartDataModel defaultChartDataModel = new DefaultChartDataModel(doubleArray, (double[]) doubleArray, stringArray);
String string = "~oG#U";
CoordSystem coordSystem = new CoordSystem(defaultChartDataModel, string, "~oG#U");

statement is: org.evosuite.testcase.statements.ArrayStatement@ba2fbde3 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [[D
statement code is: double[][] doubleArray = new double[1][8]
statement is: org.evosuite.testcase.statements.ArrayStatement@3d3b79d1 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [D
statement code is: double[] doubleArray = new double[1]
statement is: org.evosuite.testcase.statements.AssignmentStatement@8b9096f8 type is: class org.evosuite.testcase.statements.AssignmentStatement return type double
statement code is: doubleArray[0] = 1.0
statement is: org.evosuite.testcase.statements.AssignmentStatement@7450b60b type is: class org.evosuite.testcase.statements.AssignmentStatement return type class [D
statement code is: doubleArray[0] = doubleArray
statement is: org.evosuite.testcase.statements.ArrayStatement@aa78a6b9 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [Ljava.lang.String;
statement code is: String[] stringArray = new String[6]
statement is: de.progra.charting.model.EditableChartDataModel([[D[D[Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.progra.charting.model.EditableChartDataModel
statement code is: EditableChartDataModel editableChartDataModel = new EditableChartDataModel(arg0, arg1, arg2)
statement is: java.text.DecimalFormatSymbols()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.text.DecimalFormatSymbols
statement code is: DecimalFormatSymbols decimalFormatSymbols = new DecimalFormatSymbols()
statement is: java.text.DecimalFormat(Ljava/lang/String;Ljava/text/DecimalFormatSymbols;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.text.DecimalFormat
statement code is: DecimalFormat decimalFormat = new DecimalFormat("", arg1)
statement is: de.progra.charting.CoordSystem(Lde/progra/charting/model/ChartDataModel;Ljava/text/DecimalFormat;ZZZ)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.progra.charting.CoordSystem
statement code is: CoordSystem coordSystem = new CoordSystem(arg0, arg1, false, false, false)
statement is: org.evosuite.testcase.statements.FieldStatement@aa5be06 type is: class org.evosuite.testcase.statements.FieldStatement return type class de.progra.charting.CoordSystemUtilities
statement code is: CoordSystemUtilities coordSystemUtilities = coordSystem.c
statement is: computeBottomMargin()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int computeBottomMargin = coordSystemUtilities.computeBottomMargin()
test data is: double[][] doubleArray = new double[1][8];
double[] doubleArray = new double[1];
doubleArray[0] = 1.0;
doubleArray[0] = doubleArray;
String[] stringArray = new String[6];
EditableChartDataModel editableChartDataModel = new EditableChartDataModel(doubleArray, doubleArray, stringArray);
DecimalFormatSymbols decimalFormatSymbols = new DecimalFormatSymbols();
DecimalFormat decimalFormat = new DecimalFormat("", decimalFormatSymbols);
CoordSystem coordSystem = new CoordSystem(editableChartDataModel, decimalFormat, false, false, false);
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
coordSystemUtilities.computeBottomMargin();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        double[][] doubleArray = new double[1][8];
        double[] doubleArray = new double[1];
        doubleArray[0] = 3.14;// replaced with a more descriptive value related to the specific situation being tested

        doubleArray[0] = doubleArray;
        String[] stringArray = new String[6];
        stringArray[0] = "Hello";
        stringArray[1] = "World";
        EditableChartDataModel editableChartDataModel = new EditableChartDataModel(doubleArray, doubleArray, stringArray);
        DecimalFormatSymbols decimalFormatSymbols = new DecimalFormatSymbols();
        DecimalFormat decimalFormat = new DecimalFormat("", decimalFormatSymbols);
        CoordSystem coordSystem = new CoordSystem(editableChartDataModel, decimalFormat, false, false, false);
        CoordSystemUtilities coordSystemUtilities = coordSystem.c;
        coordSystemUtilities.computeBottomMargin();
    }
}
statement is: double[][] doubleArray = new double[1][8], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [1, 8] Ct is: double[][] doubleArray = new double[1][8] isAssignment: false Array: new double[1][8] Elements: []
lengths: [1, 8] [1, 8]
Their type are: class [[D double[][]
statement is: double[] doubleArray = new double[1], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [1] Ct is: double[][] doubleArray = new double[1][8] isAssignment: false Array: new double[1] Elements: []
lengths: [1, 8] [1]
Dimension: [1] Ct is: double[] doubleArray = new double[1] isAssignment: false Array: new double[1] Elements: []
lengths: [1] [1]
Their type are: class [D double[]
statement is: doubleArray[0] = 3.14// replaced with a more descriptive value related to the specific situation being tested
, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : doubleArray[0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl double Assignment:3.14 Ct is: doubleArray[0] = 3.14// replaced with a more descriptive value related to the specific situation being tested

target : doubleArray class spoon.support.reflect.code.CtLiteralImpl
statement is: doubleArray[0] = doubleArray, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : doubleArray[0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl double Assignment:doubleArray Ct is: doubleArray[0] = doubleArray
target : doubleArray class spoon.support.reflect.code.CtLiteralImpl
statement is: String[] stringArray = new String[6], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [6] Ct is: double[][] doubleArray = new double[1][8] isAssignment: false Array: new String[6] Elements: []
lengths: [1, 8] [6]
Dimension: [6] Ct is: double[] doubleArray = new double[1] isAssignment: false Array: new String[6] Elements: []
lengths: [1] [6]
Their type are: class [D String[]
Dimension: [6] Ct is: String[] stringArray = new String[6] isAssignment: false Array: new String[6] Elements: []
lengths: [6] [6]
Their type are: class [Ljava.lang.String; String[]
statement is: stringArray[0] = "Hello", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"Hello" Ct is: stringArray[0] = "Hello"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[1] = "World", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[1] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"World" Ct is: stringArray[1] = "World"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: EditableChartDataModel editableChartDataModel = new EditableChartDataModel(doubleArray, doubleArray, stringArray), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: DecimalFormatSymbols decimalFormatSymbols = new DecimalFormatSymbols(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: DecimalFormat decimalFormat = new DecimalFormat("", decimalFormatSymbols), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: CoordSystem coordSystem = new CoordSystem(editableChartDataModel, decimalFormat, false, false, false), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: CoordSystemUtilities coordSystemUtilities = coordSystem.c, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: coordSystem.c is coordSystem
CtField is: protected de.progra.charting.CoordSystemUtilities de.progra.charting.CoordSystem.c CoordSystemUtilities c
statement is: coordSystemUtilities.computeBottomMargin(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: coordSystemUtilities.computeBottomMargin() target is: coordSystemUtilities method is: computeBottomMargin()
TestCase is: double[][] doubleArray = new double[1][8];
double[] doubleArray = new double[1];
double _double = 3.14;
doubleArray[0] = _double;
doubleArray[0] = (double) doubleArray;
String[] stringArray = new String[6];
EditableChartDataModel editableChartDataModel = new EditableChartDataModel((double[][]) doubleArray, doubleArray, stringArray);
DecimalFormatSymbols decimalFormatSymbols = new DecimalFormatSymbols();
String string = "";
DecimalFormat decimalFormat = new DecimalFormat(string, decimalFormatSymbols);
boolean _boolean = false;
boolean _boolean = false;
boolean _boolean = false;
CoordSystem coordSystem = new CoordSystem(editableChartDataModel, decimalFormat, _boolean, _boolean, _boolean);

statement is: org.evosuite.testcase.statements.ArrayStatement@66e0795f type is: class org.evosuite.testcase.statements.ArrayStatement return type class [D
statement code is: double[] doubleArray = new double[2]
statement is: org.evosuite.testcase.statements.ArrayStatement@5e2a6593 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [Ljava.lang.String;
statement code is: String[] stringArray = new String[5]
statement is: org.evosuite.testcase.statements.ArrayStatement@806d838e type is: class org.evosuite.testcase.statements.ArrayStatement return type class [[I
statement code is: int[][] intArray = new int[1][5]
statement is: de.progra.charting.model.EditableChartDataModel([[I[D[Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.progra.charting.model.EditableChartDataModel
statement code is: EditableChartDataModel editableChartDataModel = new EditableChartDataModel(arg0, arg1, arg2)
statement is: de.progra.charting.CoordSystem(Lde/progra/charting/model/ChartDataModel;Ljava/lang/String;Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.progra.charting.CoordSystem
statement code is: CoordSystem coordSystem = new CoordSystem(arg0, "oKU{2s[lgD0uL", "")
statement is: org.evosuite.testcase.statements.FieldStatement@12b01506 type is: class org.evosuite.testcase.statements.FieldStatement return type class de.progra.charting.CoordSystemUtilities
statement code is: CoordSystemUtilities coordSystemUtilities = coordSystem.c
statement is: computeBottomMargin()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int computeBottomMargin = coordSystemUtilities.computeBottomMargin()
test data is: double[] doubleArray = new double[2];
String[] stringArray = new String[5];
int[][] intArray = new int[1][5];
EditableChartDataModel editableChartDataModel = new EditableChartDataModel(intArray, doubleArray, stringArray);
CoordSystem coordSystem = new CoordSystem(editableChartDataModel, "oKU{2s[lgD0uL", "");
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
coordSystemUtilities.computeBottomMargin();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        double[] doubleArray = new double[]{ 1.23456789012345E9, 9.87654321098765E9 };
        String[] stringArray = new String[]{ "Test String 1", "Test String 2", "Test String 3" };
        int[][] intArray = new int[][]{ new int[]{ 1, 2, 3 }, new int[]{ 4, 5, 6 } };
        EditableChartDataModel editableChartDataModel = new EditableChartDataModel(intArray, doubleArray, stringArray);
        CoordSystem coordSystem = new CoordSystem(editableChartDataModel, "oKU{2s[lgD0uL", "");
        CoordSystemUtilities coordSystemUtilities = coordSystem.c;
        coordSystemUtilities.computeBottomMargin();
    }
}
statement is: double[] doubleArray = new double[]{ 1.23456789012345E9, 9.87654321098765E9 }, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [] Ct is: double[] doubleArray = new double[2] isAssignment: false Array: new double[]{ 1.23456789012345E9, 9.87654321098765E9 } Elements: [1.23456789012345E9, 9.87654321098765E9]
lengths: [2] []
Dimension: [] Ct is: String[] stringArray = new String[5] isAssignment: false Array: new double[]{ 1.23456789012345E9, 9.87654321098765E9 } Elements: [1.23456789012345E9, 9.87654321098765E9]
lengths: [5] []
Dimension: [] Ct is: int[][] intArray = new int[1][5] isAssignment: false Array: new double[]{ 1.23456789012345E9, 9.87654321098765E9 } Elements: [1.23456789012345E9, 9.87654321098765E9]
lengths: [1, 5] []
statement is: String[] stringArray = new String[]{ "Test String 1", "Test String 2", "Test String 3" }, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [] Ct is: double[] doubleArray = new double[2] isAssignment: false Array: new String[]{ "Test String 1", "Test String 2", "Test String 3" } Elements: ["Test String 1", "Test String 2", "Test String 3"]
lengths: [2] []
Dimension: [] Ct is: String[] stringArray = new String[5] isAssignment: false Array: new String[]{ "Test String 1", "Test String 2", "Test String 3" } Elements: ["Test String 1", "Test String 2", "Test String 3"]
lengths: [5] []
Dimension: [] Ct is: int[][] intArray = new int[1][5] isAssignment: false Array: new String[]{ "Test String 1", "Test String 2", "Test String 3" } Elements: ["Test String 1", "Test String 2", "Test String 3"]
lengths: [1, 5] []
statement is: int[][] intArray = new int[][]{ new int[]{ 1, 2, 3 }, new int[]{ 4, 5, 6 } }, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [] Ct is: double[] doubleArray = new double[2] isAssignment: false Array: new int[][]{ new int[]{ 1, 2, 3 }, new int[]{ 4, 5, 6 } } Elements: [new int[]{ 1, 2, 3 }, new int[]{ 4, 5, 6 }]
lengths: [2] []
Dimension: [] Ct is: String[] stringArray = new String[5] isAssignment: false Array: new int[][]{ new int[]{ 1, 2, 3 }, new int[]{ 4, 5, 6 } } Elements: [new int[]{ 1, 2, 3 }, new int[]{ 4, 5, 6 }]
lengths: [5] []
Dimension: [] Ct is: int[][] intArray = new int[1][5] isAssignment: false Array: new int[][]{ new int[]{ 1, 2, 3 }, new int[]{ 4, 5, 6 } } Elements: [new int[]{ 1, 2, 3 }, new int[]{ 4, 5, 6 }]
lengths: [1, 5] []
statement is: EditableChartDataModel editableChartDataModel = new EditableChartDataModel(intArray, doubleArray, stringArray), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: de.progra.charting.model.EditableChartDataModel([[I[D[Ljava/lang/String;)V
statement is: CoordSystem coordSystem = new CoordSystem(editableChartDataModel, "oKU{2s[lgD0uL", ""), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: CoordSystemUtilities coordSystemUtilities = coordSystem.c, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: coordSystem.c is coordSystem
CtField is: protected de.progra.charting.CoordSystemUtilities de.progra.charting.CoordSystem.c CoordSystemUtilities c
statement is: coordSystemUtilities.computeBottomMargin(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: coordSystemUtilities.computeBottomMargin() target is: coordSystemUtilities method is: computeBottomMargin()
TestCase is: String string = "oKU{2s[lgD0uL";
String string = "";
CoordSystem coordSystem = new CoordSystem((ChartDataModel) string, string, "");

statement is: org.evosuite.testcase.statements.ArrayStatement@278b0c14 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [Ljava.lang.Object;
statement code is: Object[] objectArray = new Object[4]
statement is: org.evosuite.testcase.statements.ArrayStatement@ed30bc27 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [[Ljava.lang.Number;
statement code is: Number[][] numberArray = new Number[0][3]
statement is: org.evosuite.testcase.statements.ArrayStatement@6fa52f1c type is: class org.evosuite.testcase.statements.ArrayStatement return type class [Ljava.lang.String;
statement code is: String[] stringArray = new String[0]
statement is: de.progra.charting.model.ObjectChartDataModel([[Ljava/lang/Number;[Ljava/lang/Object;[Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.progra.charting.model.ObjectChartDataModel
statement code is: ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel(arg0, arg1, arg2)
statement is: de.progra.charting.CoordSystem(Lde/progra/charting/model/ChartDataModel;Ljava/lang/String;Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.progra.charting.CoordSystem
statement code is: CoordSystem coordSystem = new CoordSystem(arg0, "de.progra.charting.CoordSystemUtilities", "de.progra.charting.CoordSystemUtilities")
statement is: org.evosuite.testcase.statements.FieldStatement@20a0ea32 type is: class org.evosuite.testcase.statements.FieldStatement return type class de.progra.charting.model.DefaultChartDataModelConstraints
statement code is: DefaultChartDataModelConstraints defaultChartDataModelConstraints = (DefaultChartDataModelConstraints)coordSystem.constraints
statement is: de.progra.charting.CoordSystemUtilities(Lde/progra/charting/CoordSystem;Lde/progra/charting/model/ChartDataModelConstraints;Lde/progra/charting/model/ChartDataModelConstraints;Lde/progra/charting/model/ChartDataModel;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.progra.charting.CoordSystemUtilities
statement code is: CoordSystemUtilities coordSystemUtilities = new CoordSystemUtilities(arg0, arg2, arg2, arg3)
statement is: computeBottomMargin()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int computeBottomMargin = coordSystemUtilities.computeBottomMargin()
test data is: Object[] objectArray = new Object[4];
Number[][] numberArray = new Number[0][3];
String[] stringArray = new String[0];
ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel(numberArray, objectArray, stringArray);
CoordSystem coordSystem = new CoordSystem(objectChartDataModel, "de.progra.charting.CoordSystemUtilities", "de.progra.charting.CoordSystemUtilities");
DefaultChartDataModelConstraints defaultChartDataModelConstraints = (DefaultChartDataModelConstraints)coordSystem.constraints;
CoordSystemUtilities coordSystemUtilities = new CoordSystemUtilities(coordSystem, defaultChartDataModelConstraints, defaultChartDataModelConstraints, objectChartDataModel);
coordSystemUtilities.computeBottomMargin();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Object[] objectArray = new Object[4];
        objectArray[0] = "January";
        objectArray[1] = "string";
        objectArray[2] = true;
        objectArray[3] = 4.5678;
        Number[][] numberArray = new Number[0][3];
        numberArray[0][0] = -10;
        numberArray[0][1] = 20;
        numberArray[0][2] = 5.6789;
        String[] stringArray = new String[0];
        stringArray[0] = "Hello";
        stringArray[1] = "World";
        stringArray[2] = "!";
        ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel(numberArray, objectArray, stringArray);
        CoordSystem coordSystem = new CoordSystem(objectChartDataModel, "de.progra.charting.CoordSystemUtilities", "de.progra.charting.CoordSystemUtilities");
        DefaultChartDataModelConstraints defaultChartDataModelConstraints = ((DefaultChartDataModelConstraints) (coordSystem.constraints));
        CoordSystemUtilities coordSystemUtilities = new CoordSystemUtilities(coordSystem, defaultChartDataModelConstraints, defaultChartDataModelConstraints, objectChartDataModel);
        coordSystemUtilities.computeBottomMargin();
    }
}
statement is: Object[] objectArray = new Object[4], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [4] Ct is: Object[] objectArray = new Object[4] isAssignment: false Array: new Object[4] Elements: []
lengths: [4] [4]
Their type are: class [Ljava.lang.Object; Object[]
statement is: objectArray[0] = "January", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : objectArray[0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl Object Assignment:"January" Ct is: objectArray[0] = "January"
target : objectArray class spoon.support.reflect.code.CtLiteralImpl
statement is: objectArray[1] = "string", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : objectArray[1] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl Object Assignment:"string" Ct is: objectArray[1] = "string"
target : objectArray class spoon.support.reflect.code.CtLiteralImpl
statement is: objectArray[2] = true, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : objectArray[2] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl Object Assignment:true Ct is: objectArray[2] = true
target : objectArray class spoon.support.reflect.code.CtLiteralImpl
statement is: objectArray[3] = 4.5678, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : objectArray[3] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl Object Assignment:4.5678 Ct is: objectArray[3] = 4.5678
target : objectArray class spoon.support.reflect.code.CtLiteralImpl
statement is: Number[][] numberArray = new Number[0][3], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [0, 3] Ct is: Object[] objectArray = new Object[4] isAssignment: false Array: new Number[0][3] Elements: []
lengths: [4] [0, 3]
Dimension: [0, 3] Ct is: Number[][] numberArray = new Number[0][3] isAssignment: false Array: new Number[0][3] Elements: []
lengths: [0, 3] [0, 3]
Their type are: class [[Ljava.lang.Number; Number[][]
statement is: numberArray[0][0] = -10, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : numberArray[0][0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl Number Assignment:-10 Ct is: numberArray[0][0] = -10
target : numberArray[0] class spoon.support.reflect.code.CtLiteralImpl
statement is: numberArray[0][1] = 20, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : numberArray[0][1] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl Number Assignment:20 Ct is: numberArray[0][1] = 20
target : numberArray[0] class spoon.support.reflect.code.CtLiteralImpl
statement is: numberArray[0][2] = 5.6789, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : numberArray[0][2] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl Number Assignment:5.6789 Ct is: numberArray[0][2] = 5.6789
target : numberArray[0] class spoon.support.reflect.code.CtLiteralImpl
statement is: String[] stringArray = new String[0], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [0] Ct is: Object[] objectArray = new Object[4] isAssignment: false Array: new String[0] Elements: []
lengths: [4] [0]
Their type are: class [Ljava.lang.Object; String[]
Dimension: [0] Ct is: Number[][] numberArray = new Number[0][3] isAssignment: false Array: new String[0] Elements: []
lengths: [0, 3] [0]
Dimension: [0] Ct is: String[] stringArray = new String[0] isAssignment: false Array: new String[0] Elements: []
lengths: [0] [0]
Their type are: class [Ljava.lang.String; String[]
statement is: stringArray[0] = "Hello", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"Hello" Ct is: stringArray[0] = "Hello"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[1] = "World", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[1] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"World" Ct is: stringArray[1] = "World"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[2] = "!", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[2] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"!" Ct is: stringArray[2] = "!"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel(numberArray, objectArray, stringArray), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: CoordSystem coordSystem = new CoordSystem(objectChartDataModel, "de.progra.charting.CoordSystemUtilities", "de.progra.charting.CoordSystemUtilities"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: DefaultChartDataModelConstraints defaultChartDataModelConstraints = ((DefaultChartDataModelConstraints) (coordSystem.constraints)), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: ((DefaultChartDataModelConstraints) (coordSystem.constraints)) is coordSystem
CtField is: protected de.progra.charting.model.ChartDataModelConstraints de.progra.charting.CoordSystem.constraints ChartDataModelConstraints constraints
statement is: CoordSystemUtilities coordSystemUtilities = new CoordSystemUtilities(coordSystem, defaultChartDataModelConstraints, defaultChartDataModelConstraints, objectChartDataModel), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: coordSystemUtilities.computeBottomMargin(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: coordSystemUtilities.computeBottomMargin() target is: coordSystemUtilities method is: computeBottomMargin()
source statement: de.progra.charting.CoordSystemUtilities(Lde/progra/charting/CoordSystem;Lde/progra/charting/model/ChartDataModelConstraints;Lde/progra/charting/model/ChartDataModelConstraints;Lde/progra/charting/model/ChartDataModel;)V callee: VariableReference: Statement 6, type de.progra.charting.CoordSystemUtilitiesindex is: 7
Matched Method is: computeBottomMargin()I
TestCase is: Object[] objectArray = new Object[4];
Number[][] numberArray = new Number[0][3];
String[] stringArray = new String[0];
ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel(numberArray, objectArray, stringArray);
String string = "de.progra.charting.CoordSystemUtilities";
String string = "de.progra.charting.CoordSystemUtilities";
CoordSystem coordSystem = new CoordSystem(objectChartDataModel, string, string);
CoordSystemUtilities coordSystemUtilities = new CoordSystemUtilities(coordSystem, (ChartDataModelConstraints) objectChartDataModel, (ChartDataModelConstraints) string, objectChartDataModel);
((CoordSystemUtilities) coordSystem).computeBottomMargin();

statement is: org.evosuite.testcase.statements.ArrayStatement@4dd74e82 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [D
statement code is: double[] doubleArray = new double[2]
statement is: org.evosuite.testcase.statements.AssignmentStatement@34ff6431 type is: class org.evosuite.testcase.statements.AssignmentStatement return type double
statement code is: doubleArray[1] = (-1306.02151431)
statement is: org.evosuite.testcase.statements.ArrayStatement@da19f700 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [Ljava.lang.String;
statement code is: String[] stringArray = new String[5]
statement is: org.evosuite.testcase.statements.ArrayStatement@1e97300 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [[I
statement code is: int[][] intArray = new int[1][5]
statement is: org.evosuite.testcase.statements.ArrayStatement@d326c03b type is: class org.evosuite.testcase.statements.ArrayStatement return type class [I
statement code is: int[] intArray = new int[7]
statement is: org.evosuite.testcase.statements.AssignmentStatement@52d93abd type is: class org.evosuite.testcase.statements.AssignmentStatement return type int
statement code is: intArray[0] = 20
statement is: org.evosuite.testcase.statements.AssignmentStatement@ad1ba955 type is: class org.evosuite.testcase.statements.AssignmentStatement return type int
statement code is: intArray[1] = (-2109045091)
statement is: org.evosuite.testcase.statements.AssignmentStatement@ccc41db4 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class [I
statement code is: intArray[0] = intArray
statement is: de.progra.charting.model.EditableChartDataModel([[I[D[Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.progra.charting.model.EditableChartDataModel
statement code is: EditableChartDataModel editableChartDataModel = new EditableChartDataModel(arg0, arg1, arg2)
statement is: de.progra.charting.CoordSystem(Lde/progra/charting/model/ChartDataModel;Ljava/lang/String;Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.progra.charting.CoordSystem
statement code is: CoordSystem coordSystem = new CoordSystem(arg0, "oKU{2s[lgD0uL", "")
statement is: org.evosuite.testcase.statements.FieldStatement@54a2adda type is: class org.evosuite.testcase.statements.FieldStatement return type class de.progra.charting.CoordSystemUtilities
statement code is: CoordSystemUtilities coordSystemUtilities = coordSystem.c
statement is: computeBottomMargin()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int computeBottomMargin = coordSystemUtilities.computeBottomMargin()
test data is: double[] doubleArray = new double[2];
doubleArray[1] = (-1306.02151431);
String[] stringArray = new String[5];
int[][] intArray = new int[1][5];
int[] intArray = new int[7];
intArray[0] = 20;
intArray[1] = (-2109045091);
intArray[0] = intArray;
EditableChartDataModel editableChartDataModel = new EditableChartDataModel(intArray, doubleArray, stringArray);
CoordSystem coordSystem = new CoordSystem(editableChartDataModel, "oKU{2s[lgD0uL", "");
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
coordSystemUtilities.computeBottomMargin();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        double[] temperatureData = new double[]{ 20.1, -15.4, 30.9, 10.2, -2.7 };
        String[] cityNames = new String[]{ "New York", "Los Angeles", "Chicago", "Houston", "Phoenix" };
        int[][] intArray = new int[][]{ new int[]{ 20, 10, 5, 15 }, new int[]{ 15, 10, 8, 3 } };
        double doubleValue = -1.3;
        EditableChartDataModel editableChartDataModel = new EditableChartDataModel(intArray, doubleValue, cityNames);
        CoordSystem coordSystem = new CoordSystem(editableChartDataModel, "oKU{2s[lgD0uL", "");
        CoordSystemUtilities coordSystemUtilities = coordSystem.c;
        coordSystemUtilities.computeBottomMargin();
    }
}
statement is: double[] temperatureData = new double[]{ 20.1, -15.4, 30.9, 10.2, -2.7 }, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [] Ct is: double[] doubleArray = new double[2] isAssignment: false Array: new double[]{ 20.1, -15.4, 30.9, 10.2, -2.7 } Elements: [20.1, -15.4, 30.9, 10.2, -2.7]
lengths: [2] []
Dimension: [] Ct is: String[] stringArray = new String[5] isAssignment: false Array: new double[]{ 20.1, -15.4, 30.9, 10.2, -2.7 } Elements: [20.1, -15.4, 30.9, 10.2, -2.7]
lengths: [5] []
Dimension: [] Ct is: int[][] intArray = new int[1][5] isAssignment: false Array: new double[]{ 20.1, -15.4, 30.9, 10.2, -2.7 } Elements: [20.1, -15.4, 30.9, 10.2, -2.7]
lengths: [1, 5] []
Dimension: [] Ct is: int[] intArray = new int[7] isAssignment: false Array: new double[]{ 20.1, -15.4, 30.9, 10.2, -2.7 } Elements: [20.1, -15.4, 30.9, 10.2, -2.7]
lengths: [7] []
statement is: String[] cityNames = new String[]{ "New York", "Los Angeles", "Chicago", "Houston", "Phoenix" }, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [] Ct is: double[] doubleArray = new double[2] isAssignment: false Array: new String[]{ "New York", "Los Angeles", "Chicago", "Houston", "Phoenix" } Elements: ["New York", "Los Angeles", "Chicago", "Houston", "Phoenix"]
lengths: [2] []
Dimension: [] Ct is: String[] stringArray = new String[5] isAssignment: false Array: new String[]{ "New York", "Los Angeles", "Chicago", "Houston", "Phoenix" } Elements: ["New York", "Los Angeles", "Chicago", "Houston", "Phoenix"]
lengths: [5] []
Dimension: [] Ct is: int[][] intArray = new int[1][5] isAssignment: false Array: new String[]{ "New York", "Los Angeles", "Chicago", "Houston", "Phoenix" } Elements: ["New York", "Los Angeles", "Chicago", "Houston", "Phoenix"]
lengths: [1, 5] []
Dimension: [] Ct is: int[] intArray = new int[7] isAssignment: false Array: new String[]{ "New York", "Los Angeles", "Chicago", "Houston", "Phoenix" } Elements: ["New York", "Los Angeles", "Chicago", "Houston", "Phoenix"]
lengths: [7] []
statement is: int[][] intArray = new int[][]{ new int[]{ 20, 10, 5, 15 }, new int[]{ 15, 10, 8, 3 } }, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [] Ct is: double[] doubleArray = new double[2] isAssignment: false Array: new int[][]{ new int[]{ 20, 10, 5, 15 }, new int[]{ 15, 10, 8, 3 } } Elements: [new int[]{ 20, 10, 5, 15 }, new int[]{ 15, 10, 8, 3 }]
lengths: [2] []
Dimension: [] Ct is: String[] stringArray = new String[5] isAssignment: false Array: new int[][]{ new int[]{ 20, 10, 5, 15 }, new int[]{ 15, 10, 8, 3 } } Elements: [new int[]{ 20, 10, 5, 15 }, new int[]{ 15, 10, 8, 3 }]
lengths: [5] []
Dimension: [] Ct is: int[][] intArray = new int[1][5] isAssignment: false Array: new int[][]{ new int[]{ 20, 10, 5, 15 }, new int[]{ 15, 10, 8, 3 } } Elements: [new int[]{ 20, 10, 5, 15 }, new int[]{ 15, 10, 8, 3 }]
lengths: [1, 5] []
Dimension: [] Ct is: int[] intArray = new int[7] isAssignment: false Array: new int[][]{ new int[]{ 20, 10, 5, 15 }, new int[]{ 15, 10, 8, 3 } } Elements: [new int[]{ 20, 10, 5, 15 }, new int[]{ 15, 10, 8, 3 }]
lengths: [7] []
statement is: double doubleValue = -1.3, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtUnaryOperatorImpl
IT HAS NOT BEEN SUPPORTED YET: -1.3
statement is: EditableChartDataModel editableChartDataModel = new EditableChartDataModel(intArray, doubleValue, cityNames), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: de.progra.charting.model.EditableChartDataModel([[I[D[Ljava/lang/String;)V
statement is: CoordSystem coordSystem = new CoordSystem(editableChartDataModel, "oKU{2s[lgD0uL", ""), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: CoordSystemUtilities coordSystemUtilities = coordSystem.c, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: coordSystem.c is coordSystem
CtField is: protected de.progra.charting.CoordSystemUtilities de.progra.charting.CoordSystem.c CoordSystemUtilities c
statement is: coordSystemUtilities.computeBottomMargin(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: coordSystemUtilities.computeBottomMargin() target is: coordSystemUtilities method is: computeBottomMargin()
TestCase is: String string = "oKU{2s[lgD0uL";
String string = "";
CoordSystem coordSystem = new CoordSystem((ChartDataModel) string, string, "");

statement is: org.evosuite.testcase.statements.ArrayStatement@bb61edcb type is: class org.evosuite.testcase.statements.ArrayStatement return type class [[I
statement code is: int[][] intArray = new int[1][9]
statement is: org.evosuite.testcase.statements.ArrayStatement@269014c8 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [I
statement code is: int[] intArray = new int[9]
statement is: org.evosuite.testcase.statements.AssignmentStatement@8dc3c389 type is: class org.evosuite.testcase.statements.AssignmentStatement return type int
statement code is: intArray[0] = Integer.MAX_VALUE
statement is: org.evosuite.testcase.statements.AssignmentStatement@6a2191a1 type is: class org.evosuite.testcase.statements.AssignmentStatement return type int
statement code is: intArray[1] = Integer.MAX_VALUE
statement is: org.evosuite.testcase.statements.AssignmentStatement@e4761381 type is: class org.evosuite.testcase.statements.AssignmentStatement return type int
statement code is: intArray[2] = 623
statement is: org.evosuite.testcase.statements.AssignmentStatement@7f618f33 type is: class org.evosuite.testcase.statements.AssignmentStatement return type int
statement code is: intArray[3] = Integer.MAX_VALUE
statement is: org.evosuite.testcase.statements.AssignmentStatement@24696532 type is: class org.evosuite.testcase.statements.AssignmentStatement return type int
statement code is: intArray[4] = Integer.MAX_VALUE
statement is: org.evosuite.testcase.statements.AssignmentStatement@88ec26d6 type is: class org.evosuite.testcase.statements.AssignmentStatement return type int
statement code is: intArray[5] = Integer.MAX_VALUE
statement is: org.evosuite.testcase.statements.AssignmentStatement@cd4186b0 type is: class org.evosuite.testcase.statements.AssignmentStatement return type int
statement code is: intArray[6] = Integer.MAX_VALUE
statement is: org.evosuite.testcase.statements.AssignmentStatement@a5ed70d8 type is: class org.evosuite.testcase.statements.AssignmentStatement return type int
statement code is: intArray[7] = 6
statement is: org.evosuite.testcase.statements.AssignmentStatement@4ee0dd2c type is: class org.evosuite.testcase.statements.AssignmentStatement return type int
statement code is: intArray[8] = Integer.MAX_VALUE
statement is: org.evosuite.testcase.statements.AssignmentStatement@be2383f8 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class [I
statement code is: intArray[0] = intArray
statement is: org.evosuite.testcase.statements.ArrayStatement@a7a7438e type is: class org.evosuite.testcase.statements.ArrayStatement return type class [Ljava.lang.String;
statement code is: String[] stringArray = new String[8]
statement is: de.progra.charting.model.ObjectChartDataModel([[I[Ljava/lang/Object;[Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.progra.charting.model.ObjectChartDataModel
statement code is: ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel(arg1, arg1, arg2)
statement is: de.progra.charting.CoordSystem(Lde/progra/charting/model/ChartDataModel;Ljava/text/DecimalFormat;ZZZ)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.progra.charting.CoordSystem
statement code is: CoordSystem coordSystem = new CoordSystem(arg0, (DecimalFormat) null, true, false, false)
statement is: org.evosuite.testcase.statements.FieldStatement@761f852d type is: class org.evosuite.testcase.statements.FieldStatement return type class de.progra.charting.CoordSystemUtilities
statement code is: CoordSystemUtilities coordSystemUtilities = coordSystem.c
statement is: computeXAxisLabelHeight()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int computeXAxisLabelHeight = coordSystemUtilities.computeXAxisLabelHeight()
test data is: int[][] intArray = new int[1][9];
int[] intArray = new int[9];
intArray[0] = Integer.MAX_VALUE;
intArray[1] = Integer.MAX_VALUE;
intArray[2] = 623;
intArray[3] = Integer.MAX_VALUE;
intArray[4] = Integer.MAX_VALUE;
intArray[5] = Integer.MAX_VALUE;
intArray[6] = Integer.MAX_VALUE;
intArray[7] = 6;
intArray[8] = Integer.MAX_VALUE;
intArray[0] = intArray;
String[] stringArray = new String[8];
ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel(intArray, intArray, stringArray);
CoordSystem coordSystem = new CoordSystem(objectChartDataModel, (DecimalFormat) null, true, false, false);
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
coordSystemUtilities.computeXAxisLabelHeight();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        int[][] intArray = new int[1][9];
        int[] intArray = new int[9];
        intArray[0] = Integer.MAX_VALUE;// set to a large positive integer

        intArray[1] = Integer.MAX_VALUE;// set to a large positive integer

        intArray[2] = 623;// set to a medium-sized integer

        intArray[3] = Integer.MAX_VALUE;// set to a large positive integer

        intArray[4] = Integer.MAX_VALUE;// set to a large positive integer

        intArray[5] = Integer.MAX_VALUE;// set to a large positive integer

        intArray[6] = Integer.MAX_VALUE;// set to a large positive integer

        intArray[7] = 6;// set to a medium-sized integer

        intArray[8] = Integer.MAX_VALUE;// set to a large positive integer

        intArray[0] = intArray;// set to an array containing the same values

        String[] stringArray = new String[8];
        ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel(intArray, intArray, stringArray);
        CoordSystem coordSystem = new CoordSystem(objectChartDataModel, ((DecimalFormat) (null)), true, false, false);
        CoordSystemUtilities coordSystemUtilities = coordSystem.c;
        coordSystemUtilities.computeXAxisLabelHeight();
    }
}
statement is: int[][] intArray = new int[1][9], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [1, 9] Ct is: int[][] intArray = new int[1][9] isAssignment: false Array: new int[1][9] Elements: []
lengths: [1, 9] [1, 9]
Their type are: class [[I int[][]
statement is: int[] intArray = new int[9], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [9] Ct is: int[][] intArray = new int[1][9] isAssignment: false Array: new int[9] Elements: []
lengths: [1, 9] [9]
Dimension: [9] Ct is: int[] intArray = new int[9] isAssignment: false Array: new int[9] Elements: []
lengths: [9] [9]
Their type are: class [I int[]
statement is: intArray[0] = Integer.MAX_VALUE// set to a large positive integer
, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : intArray[0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl int Assignment:Integer.MAX_VALUE Ct is: intArray[0] = Integer.MAX_VALUE// set to a large positive integer

target : intArray class spoon.support.reflect.code.CtLiteralImpl
statement is: intArray[1] = Integer.MAX_VALUE// set to a large positive integer
, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : intArray[1] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl int Assignment:Integer.MAX_VALUE Ct is: intArray[1] = Integer.MAX_VALUE// set to a large positive integer

target : intArray class spoon.support.reflect.code.CtLiteralImpl
statement is: intArray[2] = 623// set to a medium-sized integer
, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : intArray[2] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl int Assignment:623 Ct is: intArray[2] = 623// set to a medium-sized integer

target : intArray class spoon.support.reflect.code.CtLiteralImpl
statement is: intArray[3] = Integer.MAX_VALUE// set to a large positive integer
, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : intArray[3] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl int Assignment:Integer.MAX_VALUE Ct is: intArray[3] = Integer.MAX_VALUE// set to a large positive integer

target : intArray class spoon.support.reflect.code.CtLiteralImpl
statement is: intArray[4] = Integer.MAX_VALUE// set to a large positive integer
, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : intArray[4] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl int Assignment:Integer.MAX_VALUE Ct is: intArray[4] = Integer.MAX_VALUE// set to a large positive integer

target : intArray class spoon.support.reflect.code.CtLiteralImpl
statement is: intArray[5] = Integer.MAX_VALUE// set to a large positive integer
, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : intArray[5] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl int Assignment:Integer.MAX_VALUE Ct is: intArray[5] = Integer.MAX_VALUE// set to a large positive integer

target : intArray class spoon.support.reflect.code.CtLiteralImpl
statement is: intArray[6] = Integer.MAX_VALUE// set to a large positive integer
, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : intArray[6] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl int Assignment:Integer.MAX_VALUE Ct is: intArray[6] = Integer.MAX_VALUE// set to a large positive integer

target : intArray class spoon.support.reflect.code.CtLiteralImpl
statement is: intArray[7] = 6// set to a medium-sized integer
, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : intArray[7] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl int Assignment:6 Ct is: intArray[7] = 6// set to a medium-sized integer

target : intArray class spoon.support.reflect.code.CtLiteralImpl
statement is: intArray[8] = Integer.MAX_VALUE// set to a large positive integer
, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : intArray[8] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl int Assignment:Integer.MAX_VALUE Ct is: intArray[8] = Integer.MAX_VALUE// set to a large positive integer

target : intArray class spoon.support.reflect.code.CtLiteralImpl
statement is: intArray[0] = intArray// set to an array containing the same values
, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : intArray[0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl int Assignment:intArray Ct is: intArray[0] = intArray// set to an array containing the same values

target : intArray class spoon.support.reflect.code.CtLiteralImpl
statement is: String[] stringArray = new String[8], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [8] Ct is: int[][] intArray = new int[1][9] isAssignment: false Array: new String[8] Elements: []
lengths: [1, 9] [8]
Dimension: [8] Ct is: int[] intArray = new int[9] isAssignment: false Array: new String[8] Elements: []
lengths: [9] [8]
Their type are: class [I String[]
Dimension: [8] Ct is: String[] stringArray = new String[8] isAssignment: false Array: new String[8] Elements: []
lengths: [8] [8]
Their type are: class [Ljava.lang.String; String[]
statement is: ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel(intArray, intArray, stringArray), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: CoordSystem coordSystem = new CoordSystem(objectChartDataModel, ((DecimalFormat) (null)), true, false, false), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: CoordSystemUtilities coordSystemUtilities = coordSystem.c, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: coordSystem.c is coordSystem
CtField is: protected de.progra.charting.CoordSystemUtilities de.progra.charting.CoordSystem.c CoordSystemUtilities c
statement is: coordSystemUtilities.computeXAxisLabelHeight(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: coordSystemUtilities.computeXAxisLabelHeight() target is: coordSystemUtilities method is: computeXAxisLabelHeight()
TestCase is: int[][] intArray = new int[1][9];
int[] intArray = new int[9];
intArray[0] = Integer.MAX_VALUE;
intArray[1] = Integer.MAX_VALUE;
int _int = 623;
intArray[2] = _int;
intArray[3] = Integer.MAX_VALUE;
intArray[4] = Integer.MAX_VALUE;
intArray[5] = Integer.MAX_VALUE;
intArray[6] = Integer.MAX_VALUE;
int _int = 6;
intArray[7] = _int;
intArray[8] = Integer.MAX_VALUE;
intArray[0] = (int) intArray;
String[] stringArray = new String[8];
ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel((int[][]) intArray, (Object[]) intArray, stringArray);
boolean _boolean = true;
boolean _boolean = false;
boolean _boolean = false;
CoordSystem coordSystem = new CoordSystem(objectChartDataModel, (DecimalFormat) _boolean, _boolean, _boolean, false);

statement is: org.evosuite.testcase.statements.ArrayStatement@db2b20af type is: class org.evosuite.testcase.statements.ArrayStatement return type class [D
statement code is: double[] doubleArray = new double[4]
statement is: org.evosuite.testcase.statements.AssignmentStatement@3ac0acb1 type is: class org.evosuite.testcase.statements.AssignmentStatement return type double
statement code is: doubleArray[0] = (-1570.889471817)
statement is: org.evosuite.testcase.statements.AssignmentStatement@6b6d5a3f type is: class org.evosuite.testcase.statements.AssignmentStatement return type double
statement code is: doubleArray[1] = (-1306.02151431)
statement is: org.evosuite.testcase.statements.AssignmentStatement@920c4c1f type is: class org.evosuite.testcase.statements.AssignmentStatement return type double
statement code is: doubleArray[2] = (-1306.02151431)
statement is: org.evosuite.testcase.statements.AssignmentStatement@16e2f09c type is: class org.evosuite.testcase.statements.AssignmentStatement return type double
statement code is: doubleArray[3] = (-1570.889471817)
statement is: org.evosuite.testcase.statements.ArrayStatement@9b8fe675 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [Ljava.lang.String;
statement code is: String[] stringArray = new String[5]
statement is: org.evosuite.testcase.statements.ArrayStatement@9f8bbd28 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [[D
statement code is: double[][] doubleArray = new double[1][4]
statement is: org.evosuite.testcase.statements.AssignmentStatement@f9dff00 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class [D
statement code is: doubleArray[0] = doubleArray
statement is: de.progra.charting.model.DefaultChartDataModel([[D[D[Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.progra.charting.model.DefaultChartDataModel
statement code is: DefaultChartDataModel defaultChartDataModel = new DefaultChartDataModel(arg0, arg1, arg2)
statement is: de.progra.charting.CoordSystem(Lde/progra/charting/model/ChartDataModel;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.progra.charting.CoordSystem
statement code is: CoordSystem coordSystem = new CoordSystem(arg0)
statement is: org.evosuite.testcase.statements.FieldStatement@2e577614 type is: class org.evosuite.testcase.statements.FieldStatement return type class de.progra.charting.CoordSystemUtilities
statement code is: CoordSystemUtilities coordSystemUtilities = coordSystem.c
statement is: computeXAxisLabelHeight()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int computeXAxisLabelHeight = coordSystemUtilities.computeXAxisLabelHeight()
test data is: double[] doubleArray = new double[4];
doubleArray[0] = (-1570.889471817);
doubleArray[1] = (-1306.02151431);
doubleArray[2] = (-1306.02151431);
doubleArray[3] = (-1570.889471817);
String[] stringArray = new String[5];
double[][] doubleArray = new double[1][4];
doubleArray[0] = doubleArray;
DefaultChartDataModel defaultChartDataModel = new DefaultChartDataModel(doubleArray, doubleArray, stringArray);
CoordSystem coordSystem = new CoordSystem(defaultChartDataModel);
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
coordSystemUtilities.computeXAxisLabelHeight();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        double[] doubleArray = new double[4];
        doubleArray[0] = -1570.889471817;
        doubleArray[1] = -1306.02151431;
        doubleArray[2] = -1306.02151431;
        doubleArray[3] = -1570.889471817;
        String[] stringArray = new String[5];
        stringArray[0] = "Apple";
        stringArray[1] = "Orange";
        stringArray[2] = "Banana";
        stringArray[3] = "Mango";
        stringArray[4] = "Grape";
        DefaultChartDataModel defaultChartDataModel = new DefaultChartDataModel(doubleArray, doubleArray, stringArray);
        CoordSystem coordSystem = new CoordSystem(defaultChartDataModel);
        CoordSystemUtilities coordSystemUtilities = coordSystem.c;
        coordSystemUtilities.computeXAxisLabelHeight();
    }
}
statement is: double[] doubleArray = new double[4], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [4] Ct is: double[] doubleArray = new double[4] isAssignment: false Array: new double[4] Elements: []
lengths: [4] [4]
Their type are: class [D double[]
statement is: doubleArray[0] = -1570.889471817, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : doubleArray[0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl double Assignment:-1570.889471817 Ct is: doubleArray[0] = -1570.889471817
target : doubleArray class spoon.support.reflect.code.CtLiteralImpl
statement is: doubleArray[1] = -1306.02151431, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : doubleArray[1] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl double Assignment:-1306.02151431 Ct is: doubleArray[1] = -1306.02151431
target : doubleArray class spoon.support.reflect.code.CtLiteralImpl
statement is: doubleArray[2] = -1306.02151431, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : doubleArray[2] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl double Assignment:-1306.02151431 Ct is: doubleArray[2] = -1306.02151431
target : doubleArray class spoon.support.reflect.code.CtLiteralImpl
statement is: doubleArray[3] = -1570.889471817, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : doubleArray[3] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl double Assignment:-1570.889471817 Ct is: doubleArray[3] = -1570.889471817
target : doubleArray class spoon.support.reflect.code.CtLiteralImpl
statement is: String[] stringArray = new String[5], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [5] Ct is: double[] doubleArray = new double[4] isAssignment: false Array: new String[5] Elements: []
lengths: [4] [5]
Their type are: class [D String[]
Dimension: [5] Ct is: String[] stringArray = new String[5] isAssignment: false Array: new String[5] Elements: []
lengths: [5] [5]
Their type are: class [Ljava.lang.String; String[]
statement is: stringArray[0] = "Apple", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"Apple" Ct is: stringArray[0] = "Apple"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[1] = "Orange", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[1] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"Orange" Ct is: stringArray[1] = "Orange"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[2] = "Banana", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[2] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"Banana" Ct is: stringArray[2] = "Banana"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[3] = "Mango", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[3] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"Mango" Ct is: stringArray[3] = "Mango"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[4] = "Grape", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[4] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"Grape" Ct is: stringArray[4] = "Grape"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: DefaultChartDataModel defaultChartDataModel = new DefaultChartDataModel(doubleArray, doubleArray, stringArray), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: CoordSystem coordSystem = new CoordSystem(defaultChartDataModel), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: CoordSystemUtilities coordSystemUtilities = coordSystem.c, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: coordSystem.c is coordSystem
CtField is: protected de.progra.charting.CoordSystemUtilities de.progra.charting.CoordSystem.c CoordSystemUtilities c
statement is: coordSystemUtilities.computeXAxisLabelHeight(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: coordSystemUtilities.computeXAxisLabelHeight() target is: coordSystemUtilities method is: computeXAxisLabelHeight()
TestCase is: double[] doubleArray = new double[4];
doubleArray[0] = (-1570.889471817);
doubleArray[1] = (-1306.02151431);
doubleArray[2] = (-1306.02151431);
doubleArray[3] = (-1570.889471817);
String[] stringArray = new String[5];
DefaultChartDataModel defaultChartDataModel = new DefaultChartDataModel((double[][]) doubleArray, doubleArray, stringArray);
CoordSystem coordSystem = new CoordSystem(defaultChartDataModel);

statement is: org.evosuite.testcase.statements.ArrayStatement@4d99bb84 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [[D
statement code is: double[][] doubleArray = new double[2][2]
statement is: org.evosuite.testcase.statements.ArrayStatement@f46171a type is: class org.evosuite.testcase.statements.ArrayStatement return type class [D
statement code is: double[] doubleArray = new double[1]
statement is: org.evosuite.testcase.statements.AssignmentStatement@1fc15f98 type is: class org.evosuite.testcase.statements.AssignmentStatement return type double
statement code is: doubleArray[0] = (double) 1
statement is: org.evosuite.testcase.statements.AssignmentStatement@cb5ea009 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class [D
statement code is: doubleArray[0] = doubleArray
statement is: org.evosuite.testcase.statements.ArrayStatement@3fc46237 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [Ljava.lang.String;
statement code is: String[] stringArray = new String[12]
statement is: de.progra.charting.model.DefaultChartDataModel([[D[D[Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.progra.charting.model.DefaultChartDataModel
statement code is: DefaultChartDataModel defaultChartDataModel = new DefaultChartDataModel(arg0, arg1, arg2)
statement is: de.progra.charting.CoordSystem(Lde/progra/charting/model/ChartDataModel;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.progra.charting.CoordSystem
statement code is: CoordSystem coordSystem = new CoordSystem(arg0)
statement is: org.evosuite.testcase.statements.FieldStatement@196ab765 type is: class org.evosuite.testcase.statements.FieldStatement return type class de.progra.charting.CoordSystemUtilities
statement code is: CoordSystemUtilities coordSystemUtilities = coordSystem.c
statement is: computeYAxisLabelWidth()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int computeYAxisLabelWidth = coordSystemUtilities.computeYAxisLabelWidth()
test data is: double[][] doubleArray = new double[2][2];
double[] doubleArray = new double[1];
doubleArray[0] = (double) 1;
doubleArray[0] = doubleArray;
String[] stringArray = new String[12];
DefaultChartDataModel defaultChartDataModel = new DefaultChartDataModel(doubleArray, doubleArray, stringArray);
CoordSystem coordSystem = new CoordSystem(defaultChartDataModel);
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
coordSystemUtilities.computeYAxisLabelWidth();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        double[][] doubleArray = new double[][]{ new double[]{ 1, 2 }, new double[]{ 3, 4 } };
        String[] stringArray = new String[]{ "apple", "banana", "cherry" };
        DefaultChartDataModel defaultChartDataModel = new DefaultChartDataModel(doubleArray, doubleArray, stringArray);
        CoordSystem coordSystem = new CoordSystem(defaultChartDataModel);
        CoordSystemUtilities coordSystemUtilities = coordSystem.c;
        coordSystemUtilities.computeYAxisLabelWidth();
    }
}
statement is: double[][] doubleArray = new double[][]{ new double[]{ 1, 2 }, new double[]{ 3, 4 } }, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [] Ct is: double[][] doubleArray = new double[2][2] isAssignment: false Array: new double[][]{ new double[]{ 1, 2 }, new double[]{ 3, 4 } } Elements: [new double[]{ 1, 2 }, new double[]{ 3, 4 }]
lengths: [2, 2] []
Dimension: [] Ct is: double[] doubleArray = new double[1] isAssignment: false Array: new double[][]{ new double[]{ 1, 2 }, new double[]{ 3, 4 } } Elements: [new double[]{ 1, 2 }, new double[]{ 3, 4 }]
lengths: [1] []
Dimension: [] Ct is: String[] stringArray = new String[12] isAssignment: false Array: new double[][]{ new double[]{ 1, 2 }, new double[]{ 3, 4 } } Elements: [new double[]{ 1, 2 }, new double[]{ 3, 4 }]
lengths: [12] []
statement is: String[] stringArray = new String[]{ "apple", "banana", "cherry" }, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [] Ct is: double[][] doubleArray = new double[2][2] isAssignment: false Array: new String[]{ "apple", "banana", "cherry" } Elements: ["apple", "banana", "cherry"]
lengths: [2, 2] []
Dimension: [] Ct is: double[] doubleArray = new double[1] isAssignment: false Array: new String[]{ "apple", "banana", "cherry" } Elements: ["apple", "banana", "cherry"]
lengths: [1] []
Dimension: [] Ct is: String[] stringArray = new String[12] isAssignment: false Array: new String[]{ "apple", "banana", "cherry" } Elements: ["apple", "banana", "cherry"]
lengths: [12] []
statement is: DefaultChartDataModel defaultChartDataModel = new DefaultChartDataModel(doubleArray, doubleArray, stringArray), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: de.progra.charting.model.DefaultChartDataModel([[D[D[Ljava/lang/String;)V
statement is: CoordSystem coordSystem = new CoordSystem(defaultChartDataModel), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: de.progra.charting.CoordSystem(Lde/progra/charting/model/ChartDataModel;)V
statement is: CoordSystemUtilities coordSystemUtilities = coordSystem.c, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: coordSystem.c is coordSystem
CtField is: protected de.progra.charting.CoordSystemUtilities de.progra.charting.CoordSystem.c CoordSystemUtilities c
statement is: coordSystemUtilities.computeYAxisLabelWidth(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: coordSystemUtilities.computeYAxisLabelWidth() target is: coordSystemUtilities method is: computeYAxisLabelWidth()
statement is: org.evosuite.testcase.statements.ArrayStatement@c49b4763 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [[D
statement code is: double[][] doubleArray = new double[3][6]
statement is: org.evosuite.testcase.statements.ArrayStatement@a885fd29 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [D
statement code is: double[] doubleArray = new double[2]
statement is: org.evosuite.testcase.statements.AssignmentStatement@f6965a11 type is: class org.evosuite.testcase.statements.AssignmentStatement return type double
statement code is: doubleArray[1] = (-1306.02151431)
statement is: org.evosuite.testcase.statements.AssignmentStatement@733d1c42 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class [D
statement code is: doubleArray[0] = doubleArray
statement is: org.evosuite.testcase.statements.ArrayStatement@33505663 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [D
statement code is: double[] doubleArray = new double[4]
statement is: org.evosuite.testcase.statements.AssignmentStatement@f447bb36 type is: class org.evosuite.testcase.statements.AssignmentStatement return type double
statement code is: doubleArray[0] = (-1570.889471817)
statement is: org.evosuite.testcase.statements.AssignmentStatement@618c09ae type is: class org.evosuite.testcase.statements.AssignmentStatement return type double
statement code is: doubleArray[1] = (-1306.02151431)
statement is: org.evosuite.testcase.statements.AssignmentStatement@988c16fb type is: class org.evosuite.testcase.statements.AssignmentStatement return type double
statement code is: doubleArray[2] = (-1306.02151431)
statement is: org.evosuite.testcase.statements.AssignmentStatement@4ec4155e type is: class org.evosuite.testcase.statements.AssignmentStatement return type double
statement code is: doubleArray[3] = (-1570.889471817)
statement is: org.evosuite.testcase.statements.ArrayStatement@2dc113a5 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [Ljava.lang.String;
statement code is: String[] stringArray = new String[5]
statement is: de.progra.charting.model.DefaultChartDataModel([[D[D[Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.progra.charting.model.DefaultChartDataModel
statement code is: DefaultChartDataModel defaultChartDataModel = new DefaultChartDataModel(arg0, arg1, arg2)
statement is: de.progra.charting.CoordSystem(Lde/progra/charting/model/ChartDataModel;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.progra.charting.CoordSystem
statement code is: CoordSystem coordSystem = new CoordSystem(arg0)
statement is: org.evosuite.testcase.statements.FieldStatement@6a5d6306 type is: class org.evosuite.testcase.statements.FieldStatement return type class de.progra.charting.CoordSystemUtilities
statement code is: CoordSystemUtilities coordSystemUtilities = coordSystem.c
statement is: computeYAxisLabelWidth()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int computeYAxisLabelWidth = coordSystemUtilities.computeYAxisLabelWidth()
test data is: double[][] doubleArray = new double[3][6];
double[] doubleArray = new double[2];
doubleArray[1] = (-1306.02151431);
doubleArray[0] = doubleArray;
double[] doubleArray = new double[4];
doubleArray[0] = (-1570.889471817);
doubleArray[1] = (-1306.02151431);
doubleArray[2] = (-1306.02151431);
doubleArray[3] = (-1570.889471817);
String[] stringArray = new String[5];
DefaultChartDataModel defaultChartDataModel = new DefaultChartDataModel(doubleArray, doubleArray, stringArray);
CoordSystem coordSystem = new CoordSystem(defaultChartDataModel);
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
coordSystemUtilities.computeYAxisLabelWidth();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        double[][] doubleArray = new double[][]{ new double[]{ -1306.02151431, -1570.889471817, -1570.889471817, -1306.02151431 }, new double[]{ 123.45, 234.56, 345.67, 456.78 } };
        String[] stringArray = new String[]{ "Apple", "Banana", "Cherry", "Durian" };
        DefaultChartDataModel defaultChartDataModel = new DefaultChartDataModel(doubleArray, doubleArray, stringArray);
        CoordSystem coordSystem = new CoordSystem(defaultChartDataModel);
        CoordSystemUtilities coordSystemUtilities = coordSystem.c;
        coordSystemUtilities.computeYAxisLabelWidth();
    }
}
statement is: double[][] doubleArray = new double[][]{ new double[]{ -1306.02151431, -1570.889471817, -1570.889471817, -1306.02151431 }, new double[]{ 123.45, 234.56, 345.67, 456.78 } }, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [] Ct is: double[][] doubleArray = new double[3][6] isAssignment: false Array: new double[][]{ new double[]{ -1306.02151431, -1570.889471817, -1570.889471817, -1306.02151431 }, new double[]{ 123.45, 234.56, 345.67, 456.78 } } Elements: [new double[]{ -1306.02151431, -1570.889471817, -1570.889471817, -1306.02151431 }, new double[]{ 123.45, 234.56, 345.67, 456.78 }]
lengths: [3, 6] []
Dimension: [] Ct is: double[] doubleArray = new double[2] isAssignment: false Array: new double[][]{ new double[]{ -1306.02151431, -1570.889471817, -1570.889471817, -1306.02151431 }, new double[]{ 123.45, 234.56, 345.67, 456.78 } } Elements: [new double[]{ -1306.02151431, -1570.889471817, -1570.889471817, -1306.02151431 }, new double[]{ 123.45, 234.56, 345.67, 456.78 }]
lengths: [2] []
Dimension: [] Ct is: double[] doubleArray = new double[4] isAssignment: false Array: new double[][]{ new double[]{ -1306.02151431, -1570.889471817, -1570.889471817, -1306.02151431 }, new double[]{ 123.45, 234.56, 345.67, 456.78 } } Elements: [new double[]{ -1306.02151431, -1570.889471817, -1570.889471817, -1306.02151431 }, new double[]{ 123.45, 234.56, 345.67, 456.78 }]
lengths: [4] []
Dimension: [] Ct is: String[] stringArray = new String[5] isAssignment: false Array: new double[][]{ new double[]{ -1306.02151431, -1570.889471817, -1570.889471817, -1306.02151431 }, new double[]{ 123.45, 234.56, 345.67, 456.78 } } Elements: [new double[]{ -1306.02151431, -1570.889471817, -1570.889471817, -1306.02151431 }, new double[]{ 123.45, 234.56, 345.67, 456.78 }]
lengths: [5] []
statement is: String[] stringArray = new String[]{ "Apple", "Banana", "Cherry", "Durian" }, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [] Ct is: double[][] doubleArray = new double[3][6] isAssignment: false Array: new String[]{ "Apple", "Banana", "Cherry", "Durian" } Elements: ["Apple", "Banana", "Cherry", "Durian"]
lengths: [3, 6] []
Dimension: [] Ct is: double[] doubleArray = new double[2] isAssignment: false Array: new String[]{ "Apple", "Banana", "Cherry", "Durian" } Elements: ["Apple", "Banana", "Cherry", "Durian"]
lengths: [2] []
Dimension: [] Ct is: double[] doubleArray = new double[4] isAssignment: false Array: new String[]{ "Apple", "Banana", "Cherry", "Durian" } Elements: ["Apple", "Banana", "Cherry", "Durian"]
lengths: [4] []
Dimension: [] Ct is: String[] stringArray = new String[5] isAssignment: false Array: new String[]{ "Apple", "Banana", "Cherry", "Durian" } Elements: ["Apple", "Banana", "Cherry", "Durian"]
lengths: [5] []
statement is: DefaultChartDataModel defaultChartDataModel = new DefaultChartDataModel(doubleArray, doubleArray, stringArray), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: de.progra.charting.model.DefaultChartDataModel([[D[D[Ljava/lang/String;)V
statement is: CoordSystem coordSystem = new CoordSystem(defaultChartDataModel), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: de.progra.charting.CoordSystem(Lde/progra/charting/model/ChartDataModel;)V
statement is: CoordSystemUtilities coordSystemUtilities = coordSystem.c, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: coordSystem.c is coordSystem
CtField is: protected de.progra.charting.CoordSystemUtilities de.progra.charting.CoordSystem.c CoordSystemUtilities c
statement is: coordSystemUtilities.computeYAxisLabelWidth(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: coordSystemUtilities.computeYAxisLabelWidth() target is: coordSystemUtilities method is: computeYAxisLabelWidth()
statement is: org.evosuite.testcase.statements.ArrayStatement@1c31987e type is: class org.evosuite.testcase.statements.ArrayStatement return type class [[D
statement code is: double[][] doubleArray = new double[3][6]
statement is: org.evosuite.testcase.statements.ArrayStatement@a2965c0b type is: class org.evosuite.testcase.statements.ArrayStatement return type class [D
statement code is: double[] doubleArray = new double[2]
statement is: org.evosuite.testcase.statements.AssignmentStatement@fbc9a3d7 type is: class org.evosuite.testcase.statements.AssignmentStatement return type double
statement code is: doubleArray[1] = (-1570.889471817)
statement is: org.evosuite.testcase.statements.AssignmentStatement@63daca30 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class [D
statement code is: doubleArray[0] = doubleArray
statement is: org.evosuite.testcase.statements.ArrayStatement@22c9ef13 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [D
statement code is: double[] doubleArray = new double[3]
statement is: org.evosuite.testcase.statements.AssignmentStatement@6489a51d type is: class org.evosuite.testcase.statements.AssignmentStatement return type double
statement code is: doubleArray[0] = (-1570.889471817)
statement is: org.evosuite.testcase.statements.AssignmentStatement@ca9d6282 type is: class org.evosuite.testcase.statements.AssignmentStatement return type double
statement code is: doubleArray[1] = (-1570.889471817)
statement is: org.evosuite.testcase.statements.AssignmentStatement@3f3bbb6b type is: class org.evosuite.testcase.statements.AssignmentStatement return type double
statement code is: doubleArray[2] = (-1570.889471817)
statement is: org.evosuite.testcase.statements.ArrayStatement@44a7e01e type is: class org.evosuite.testcase.statements.ArrayStatement return type class [Ljava.lang.String;
statement code is: String[] stringArray = new String[5]
statement is: de.progra.charting.model.DefaultChartDataModel([[D[D[Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.progra.charting.model.DefaultChartDataModel
statement code is: DefaultChartDataModel defaultChartDataModel = new DefaultChartDataModel(arg0, arg1, arg2)
statement is: de.progra.charting.CoordSystem(Lde/progra/charting/model/ChartDataModel;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.progra.charting.CoordSystem
statement code is: CoordSystem coordSystem = new CoordSystem(arg0)
statement is: getXAxis()Lde/progra/charting/Axis; type is: class org.evosuite.testcase.statements.MethodStatement return type class de.progra.charting.Axis
statement code is: Axis xAxis = coordSystem.getXAxis()
statement is: setSecondYAxis(Lde/progra/charting/Axis;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: coordSystem.setSecondYAxis(arg0)
statement is: org.evosuite.testcase.statements.FieldStatement@2f4c8ce6 type is: class org.evosuite.testcase.statements.FieldStatement return type class de.progra.charting.CoordSystemUtilities
statement code is: CoordSystemUtilities coordSystemUtilities = coordSystem.c
statement is: computeYAxisLabelWidth()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int computeYAxisLabelWidth = coordSystemUtilities.computeYAxisLabelWidth()
test data is: double[][] doubleArray = new double[3][6];
double[] doubleArray = new double[2];
doubleArray[1] = (-1570.889471817);
doubleArray[0] = doubleArray;
double[] doubleArray = new double[3];
doubleArray[0] = (-1570.889471817);
doubleArray[1] = (-1570.889471817);
doubleArray[2] = (-1570.889471817);
String[] stringArray = new String[5];
DefaultChartDataModel defaultChartDataModel = new DefaultChartDataModel(doubleArray, doubleArray, stringArray);
CoordSystem coordSystem = new CoordSystem(defaultChartDataModel);
Axis xAxis = coordSystem.getXAxis();
coordSystem.setSecondYAxis(xAxis);
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
coordSystemUtilities.computeYAxisLabelWidth();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        double[][] doubleArray = new double[3][6];
        double[] doubleArray = new double[2];
        doubleArray[1] = 3.14;
        doubleArray[0] = doubleArray;
        double[] doubleArray = new double[3];
        doubleArray[0] = 3.14;
        doubleArray[1] = 3.14;
        doubleArray[2] = 3.14;
        String[] stringArray = new String[5];
        stringArray[0] = "Hello";
        stringArray[1] = "World";
        stringArray[2] = "Testing";
        stringArray[3] = "Data";
        stringArray[4] = "Improvement";
        DefaultChartDataModel defaultChartDataModel = new DefaultChartDataModel(doubleArray, doubleArray, stringArray);
        CoordSystem coordSystem = new CoordSystem(defaultChartDataModel);
        Axis xAxis = coordSystem.getXAxis();
        coordSystem.setSecondYAxis(xAxis);
        CoordSystemUtilities coordSystemUtilities = coordSystem.c;
        coordSystemUtilities.computeYAxisLabelWidth();
    }
}
statement is: double[][] doubleArray = new double[3][6], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [3, 6] Ct is: double[][] doubleArray = new double[3][6] isAssignment: false Array: new double[3][6] Elements: []
lengths: [3, 6] [3, 6]
Their type are: class [[D double[][]
statement is: double[] doubleArray = new double[2], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [2] Ct is: double[][] doubleArray = new double[3][6] isAssignment: false Array: new double[2] Elements: []
lengths: [3, 6] [2]
Dimension: [2] Ct is: double[] doubleArray = new double[2] isAssignment: false Array: new double[2] Elements: []
lengths: [2] [2]
Their type are: class [D double[]
statement is: doubleArray[1] = 3.14, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : doubleArray[1] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl double Assignment:3.14 Ct is: doubleArray[1] = 3.14
target : doubleArray class spoon.support.reflect.code.CtLiteralImpl
statement is: doubleArray[0] = doubleArray, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : doubleArray[0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl double Assignment:doubleArray Ct is: doubleArray[0] = doubleArray
target : doubleArray class spoon.support.reflect.code.CtLiteralImpl
statement is: double[] doubleArray = new double[3], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [3] Ct is: double[][] doubleArray = new double[3][6] isAssignment: false Array: new double[3] Elements: []
lengths: [3, 6] [3]
Dimension: [3] Ct is: double[] doubleArray = new double[2] isAssignment: false Array: new double[3] Elements: []
lengths: [2] [3]
Their type are: class [D double[]
statement is: doubleArray[0] = 3.14, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : doubleArray[0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl double Assignment:3.14 Ct is: doubleArray[0] = 3.14
target : doubleArray class spoon.support.reflect.code.CtLiteralImpl
statement is: doubleArray[1] = 3.14, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : doubleArray[1] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl double Assignment:3.14 Ct is: doubleArray[1] = 3.14
target : doubleArray class spoon.support.reflect.code.CtLiteralImpl
statement is: doubleArray[2] = 3.14, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : doubleArray[2] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl double Assignment:3.14 Ct is: doubleArray[2] = 3.14
target : doubleArray class spoon.support.reflect.code.CtLiteralImpl
statement is: String[] stringArray = new String[5], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [5] Ct is: double[][] doubleArray = new double[3][6] isAssignment: false Array: new String[5] Elements: []
lengths: [3, 6] [5]
Dimension: [5] Ct is: double[] doubleArray = new double[2] isAssignment: false Array: new String[5] Elements: []
lengths: [2] [5]
Their type are: class [D String[]
Dimension: [5] Ct is: double[] doubleArray = new double[3] isAssignment: false Array: new String[5] Elements: []
lengths: [3] [5]
Their type are: class [D String[]
Dimension: [5] Ct is: String[] stringArray = new String[5] isAssignment: false Array: new String[5] Elements: []
lengths: [5] [5]
Their type are: class [Ljava.lang.String; String[]
statement is: stringArray[0] = "Hello", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"Hello" Ct is: stringArray[0] = "Hello"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[1] = "World", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[1] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"World" Ct is: stringArray[1] = "World"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[2] = "Testing", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[2] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"Testing" Ct is: stringArray[2] = "Testing"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[3] = "Data", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[3] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"Data" Ct is: stringArray[3] = "Data"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[4] = "Improvement", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[4] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"Improvement" Ct is: stringArray[4] = "Improvement"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: DefaultChartDataModel defaultChartDataModel = new DefaultChartDataModel(doubleArray, doubleArray, stringArray), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: CoordSystem coordSystem = new CoordSystem(defaultChartDataModel), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Axis xAxis = coordSystem.getXAxis(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: coordSystem.getXAxis() target is: coordSystem method is: getXAxis()
source statement: de.progra.charting.CoordSystem(Lde/progra/charting/model/ChartDataModel;)V callee: VariableReference: Statement 10, type de.progra.charting.CoordSystemindex is: 14
Matched Method is: getXAxis()Lde/progra/charting/Axis;
statement is: coordSystem.setSecondYAxis(xAxis), class spoon.support.reflect.code.CtInvocationImpl
invocation is: coordSystem.setSecondYAxis(xAxis) target is: coordSystem method is: setSecondYAxis(Axis)
source statement: de.progra.charting.CoordSystem(Lde/progra/charting/model/ChartDataModel;)V callee: VariableReference: Statement 10, type de.progra.charting.CoordSystemindex is: 14
Matched Method is: setSecondYAxis(Lde/progra/charting/Axis;)V
statement is: CoordSystemUtilities coordSystemUtilities = coordSystem.c, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: coordSystem.c is coordSystem
CtField is: protected de.progra.charting.CoordSystemUtilities de.progra.charting.CoordSystem.c CoordSystemUtilities c
statement is: coordSystemUtilities.computeYAxisLabelWidth(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: coordSystemUtilities.computeYAxisLabelWidth() target is: coordSystemUtilities method is: computeYAxisLabelWidth()
TestCase is: double[][] doubleArray = new double[3][6];
double[] doubleArray = new double[2];
double _double = 3.14;
doubleArray[1] = _double;
doubleArray[1] = (double) doubleArray;
double[] doubleArray = new double[2];
double _double = 3.14;
doubleArray[1] = _double;
double _double = 3.14;
doubleArray[1] = _double;
double _double = 3.14;
doubleArray[1] = _double;
String[] stringArray = new String[5];
DefaultChartDataModel defaultChartDataModel = new DefaultChartDataModel((double[][]) doubleArray, doubleArray, stringArray);
CoordSystem coordSystem = new CoordSystem(defaultChartDataModel);
Axis xAxis = ((CoordSystem) _double).getXAxis();
((CoordSystem) _double).setSecondYAxis(xAxis);

statement is: org.evosuite.testcase.statements.ArrayStatement@c5e5d29b type is: class org.evosuite.testcase.statements.ArrayStatement return type class [[D
statement code is: double[][] doubleArray = new double[1][5]
statement is: org.evosuite.testcase.statements.ArrayStatement@ddb6c49 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [D
statement code is: double[] doubleArray = new double[6]
statement is: org.evosuite.testcase.statements.AssignmentStatement@b761379f type is: class org.evosuite.testcase.statements.AssignmentStatement return type double
statement code is: doubleArray[0] = 0.2
statement is: org.evosuite.testcase.statements.AssignmentStatement@1a7f7864 type is: class org.evosuite.testcase.statements.AssignmentStatement return type double
statement code is: doubleArray[1] = 2251.13228227
statement is: org.evosuite.testcase.statements.AssignmentStatement@34139c9 type is: class org.evosuite.testcase.statements.AssignmentStatement return type double
statement code is: doubleArray[2] = 25.0
statement is: org.evosuite.testcase.statements.AssignmentStatement@127faa5a type is: class org.evosuite.testcase.statements.AssignmentStatement return type double
statement code is: doubleArray[3] = 1639.553
statement is: org.evosuite.testcase.statements.AssignmentStatement@e703ab11 type is: class org.evosuite.testcase.statements.AssignmentStatement return type double
statement code is: doubleArray[4] = 2472.4206967
statement is: org.evosuite.testcase.statements.AssignmentStatement@19e556ac type is: class org.evosuite.testcase.statements.AssignmentStatement return type double
statement code is: doubleArray[5] = 3.0
statement is: org.evosuite.testcase.statements.AssignmentStatement@338c3130 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class [D
statement code is: doubleArray[0] = doubleArray
statement is: org.evosuite.testcase.statements.ArrayStatement@f65ddb5b type is: class org.evosuite.testcase.statements.ArrayStatement return type class [Ljava.lang.String;
statement code is: String[] stringArray = new String[3]
statement is: de.progra.charting.model.DefaultChartDataModel([[D[D[Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.progra.charting.model.DefaultChartDataModel
statement code is: DefaultChartDataModel defaultChartDataModel = new DefaultChartDataModel(arg0, arg1, arg2)
statement is: de.progra.charting.CoordSystem(Lde/progra/charting/model/ChartDataModel;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.progra.charting.CoordSystem
statement code is: CoordSystem coordSystem = new CoordSystem(arg0)
statement is: org.evosuite.testcase.statements.FieldStatement@75a65e7c type is: class org.evosuite.testcase.statements.FieldStatement return type class de.progra.charting.CoordSystemUtilities
statement code is: CoordSystemUtilities coordSystemUtilities = coordSystem.c
statement is: drawNumericalXAxisTicks(Ljava/awt/Graphics2D;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: coordSystemUtilities.drawNumericalXAxisTicks((Graphics2D) null)
test data is: double[][] doubleArray = new double[1][5];
double[] doubleArray = new double[6];
doubleArray[0] = 0.2;
doubleArray[1] = 2251.13228227;
doubleArray[2] = 25.0;
doubleArray[3] = 1639.553;
doubleArray[4] = 2472.4206967;
doubleArray[5] = 3.0;
doubleArray[0] = doubleArray;
String[] stringArray = new String[3];
DefaultChartDataModel defaultChartDataModel = new DefaultChartDataModel(doubleArray, doubleArray, stringArray);
CoordSystem coordSystem = new CoordSystem(defaultChartDataModel);
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
coordSystemUtilities.drawNumericalXAxisTicks((Graphics2D) null);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        double[][] doubleArray = new double[1][5];
        // Improved test data
        doubleArray[0] = 0.2;// Instead of using a random value, use a more descriptive example like 0.2 (two decimal places) to represent the average value in the dataset.

        doubleArray[1] = 2251.13228227;// Improved test data: Use a more descriptive example like 2251.13228227 (six decimal places) to represent the maximum value in the dataset.

        doubleArray[2] = 25.0;// Improved test data: Use a more descriptive example like 25.0 (one decimal place) to represent the minimum value in the dataset.

        doubleArray[3] = 1639.553;// Improved test data: Use a more descriptive example like 1639.553 (three decimal places) to represent the median value in the dataset.

        doubleArray[4] = 2472.4206967;// Improved test data: Use a more descriptive example like 2472.4206967 (seven decimal places) to represent the mode value in the dataset.

        doubleArray[5] = 3.0;// Improved test data: Use a more descriptive example like 3.0 (one decimal place) to represent the standard deviation of the dataset.

        doubleArray[0] = doubleArray;
        String[] stringArray = new String[3];
        // Improved test data: Use more descriptive examples like "Average", "Maximum", "Minimum", "Median", and "Mode" instead of using random strings to represent the labels for the dataset.
        stringArray[0] = "Average";
        stringArray[1] = "Maximum";
        stringArray[2] = "Minimum";
        stringArray[3] = "Median";
        stringArray[4] = "Mode";
        DefaultChartDataModel defaultChartDataModel = new DefaultChartDataModel(doubleArray, doubleArray, stringArray);
        CoordSystem coordSystem = new CoordSystem(defaultChartDataModel);
        CoordSystemUtilities coordSystemUtilities = coordSystem.c;
        coordSystemUtilities.drawNumericalXAxisTicks(((Graphics2D) (null)));
    }
}
statement is: double[][] doubleArray = new double[1][5], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [1, 5] Ct is: double[][] doubleArray = new double[1][5] isAssignment: false Array: new double[1][5] Elements: []
lengths: [1, 5] [1, 5]
Their type are: class [[D double[][]
statement is: // Improved test data
doubleArray[0] = 0.2// Instead of using a random value, use a more descriptive example like 0.2 (two decimal places) to represent the average value in the dataset.
, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : doubleArray[0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl double[] Assignment:0.2 Ct is: // Improved test data
doubleArray[0] = 0.2// Instead of using a random value, use a more descriptive example like 0.2 (two decimal places) to represent the average value in the dataset.

target : doubleArray class spoon.support.reflect.code.CtLiteralImpl
statement is: doubleArray[1] = 2251.13228227// Improved test data: Use a more descriptive example like 2251.13228227 (six decimal places) to represent the maximum value in the dataset.
, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : doubleArray[1] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl double[] Assignment:2251.13228227 Ct is: doubleArray[1] = 2251.13228227// Improved test data: Use a more descriptive example like 2251.13228227 (six decimal places) to represent the maximum value in the dataset.

target : doubleArray class spoon.support.reflect.code.CtLiteralImpl
statement is: doubleArray[2] = 25.0// Improved test data: Use a more descriptive example like 25.0 (one decimal place) to represent the minimum value in the dataset.
, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : doubleArray[2] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl double[] Assignment:25.0 Ct is: doubleArray[2] = 25.0// Improved test data: Use a more descriptive example like 25.0 (one decimal place) to represent the minimum value in the dataset.

target : doubleArray class spoon.support.reflect.code.CtLiteralImpl
statement is: doubleArray[3] = 1639.553// Improved test data: Use a more descriptive example like 1639.553 (three decimal places) to represent the median value in the dataset.
, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : doubleArray[3] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl double[] Assignment:1639.553 Ct is: doubleArray[3] = 1639.553// Improved test data: Use a more descriptive example like 1639.553 (three decimal places) to represent the median value in the dataset.

target : doubleArray class spoon.support.reflect.code.CtLiteralImpl
statement is: doubleArray[4] = 2472.4206967// Improved test data: Use a more descriptive example like 2472.4206967 (seven decimal places) to represent the mode value in the dataset.
, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : doubleArray[4] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl double[] Assignment:2472.4206967 Ct is: doubleArray[4] = 2472.4206967// Improved test data: Use a more descriptive example like 2472.4206967 (seven decimal places) to represent the mode value in the dataset.

target : doubleArray class spoon.support.reflect.code.CtLiteralImpl
statement is: doubleArray[5] = 3.0// Improved test data: Use a more descriptive example like 3.0 (one decimal place) to represent the standard deviation of the dataset.
, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : doubleArray[5] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl double[] Assignment:3.0 Ct is: doubleArray[5] = 3.0// Improved test data: Use a more descriptive example like 3.0 (one decimal place) to represent the standard deviation of the dataset.

target : doubleArray class spoon.support.reflect.code.CtLiteralImpl
statement is: doubleArray[0] = doubleArray, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : doubleArray[0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl double[] Assignment:doubleArray Ct is: doubleArray[0] = doubleArray
target : doubleArray class spoon.support.reflect.code.CtLiteralImpl
statement is: String[] stringArray = new String[3], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [3] Ct is: double[][] doubleArray = new double[1][5] isAssignment: false Array: new String[3] Elements: []
lengths: [1, 5] [3]
Dimension: [3] Ct is: double[] doubleArray = new double[6] isAssignment: false Array: new String[3] Elements: []
lengths: [6] [3]
Their type are: class [D String[]
Dimension: [3] Ct is: String[] stringArray = new String[3] isAssignment: false Array: new String[3] Elements: []
lengths: [3] [3]
Their type are: class [Ljava.lang.String; String[]
statement is: // Improved test data: Use more descriptive examples like "Average", "Maximum", "Minimum", "Median", and "Mode" instead of using random strings to represent the labels for the dataset.
stringArray[0] = "Average", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"Average" Ct is: // Improved test data: Use more descriptive examples like "Average", "Maximum", "Minimum", "Median", and "Mode" instead of using random strings to represent the labels for the dataset.
stringArray[0] = "Average"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[1] = "Maximum", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[1] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"Maximum" Ct is: stringArray[1] = "Maximum"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[2] = "Minimum", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[2] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"Minimum" Ct is: stringArray[2] = "Minimum"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[3] = "Median", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[3] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"Median" Ct is: stringArray[3] = "Median"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[4] = "Mode", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[4] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"Mode" Ct is: stringArray[4] = "Mode"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: DefaultChartDataModel defaultChartDataModel = new DefaultChartDataModel(doubleArray, doubleArray, stringArray), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: CoordSystem coordSystem = new CoordSystem(defaultChartDataModel), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: CoordSystemUtilities coordSystemUtilities = coordSystem.c, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: coordSystem.c is coordSystem
CtField is: protected de.progra.charting.CoordSystemUtilities de.progra.charting.CoordSystem.c CoordSystemUtilities c
statement is: coordSystemUtilities.drawNumericalXAxisTicks(((Graphics2D) (null))), class spoon.support.reflect.code.CtInvocationImpl
invocation is: coordSystemUtilities.drawNumericalXAxisTicks(((Graphics2D) (null))) target is: coordSystemUtilities method is: drawNumericalXAxisTicks(Graphics2D)
TestCase is: double[][] doubleArray = new double[1][5];
double _double = 0.2;
doubleArray[0] = (double[]) _double;
double _double = 2251.13228227;
doubleArray[0] = (double[]) _double;
double _double = 25.0;
doubleArray[0] = (double[]) _double;
double _double = 1639.553;
doubleArray[0] = (double[]) _double;
double _double = 2472.4206967;
doubleArray[0] = (double[]) _double;
double _double = 3.0;
doubleArray[0] = (double[]) _double;
doubleArray[0] = (double[]) doubleArray;
String[] stringArray = new String[3];
DefaultChartDataModel defaultChartDataModel = new DefaultChartDataModel(doubleArray, (double[]) doubleArray, stringArray);
CoordSystem coordSystem = new CoordSystem(defaultChartDataModel);

statement is: org.evosuite.testcase.statements.ArrayStatement@18405760 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [[D
statement code is: double[][] doubleArray = new double[3][6]
statement is: org.evosuite.testcase.statements.ArrayStatement@7ef9d23d type is: class org.evosuite.testcase.statements.ArrayStatement return type class [D
statement code is: double[] doubleArray = new double[2]
statement is: org.evosuite.testcase.statements.AssignmentStatement@842025df type is: class org.evosuite.testcase.statements.AssignmentStatement return type double
statement code is: doubleArray[0] = (-1570.889471817)
statement is: org.evosuite.testcase.statements.AssignmentStatement@79991c08 type is: class org.evosuite.testcase.statements.AssignmentStatement return type double
statement code is: doubleArray[1] = (-1306.02151431)
statement is: org.evosuite.testcase.statements.AssignmentStatement@3a2b882d type is: class org.evosuite.testcase.statements.AssignmentStatement return type class [D
statement code is: doubleArray[0] = doubleArray
statement is: org.evosuite.testcase.statements.AssignmentStatement@56012e67 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class [D
statement code is: doubleArray[1] = doubleArray[0]
statement is: org.evosuite.testcase.statements.AssignmentStatement@a9d3f474 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class [D
statement code is: doubleArray[2] = doubleArray[0]
statement is: org.evosuite.testcase.statements.ArrayStatement@52e43684 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [Ljava.lang.String;
statement code is: String[] stringArray = new String[5]
statement is: de.progra.charting.model.DefaultChartDataModel([[D[D[Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.progra.charting.model.DefaultChartDataModel
statement code is: DefaultChartDataModel defaultChartDataModel = new DefaultChartDataModel(arg0, arg1, arg2)
statement is: de.progra.charting.CoordSystem(Lde/progra/charting/model/ChartDataModel;Ljava/lang/String;Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.progra.charting.CoordSystem
statement code is: CoordSystem coordSystem = new CoordSystem(arg0, "n~sMnv]\"r,}Bi?W2<", "ZOT'c")
statement is: org.evosuite.testcase.statements.FieldStatement@115e9e0c type is: class org.evosuite.testcase.statements.FieldStatement return type class de.progra.charting.CoordSystemUtilities
statement code is: CoordSystemUtilities coordSystemUtilities = coordSystem.c
statement is: drawNumericalXAxisTicks(Ljava/awt/Graphics2D;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: coordSystemUtilities.drawNumericalXAxisTicks((Graphics2D) null)
test data is: double[][] doubleArray = new double[3][6];
double[] doubleArray = new double[2];
doubleArray[0] = (-1570.889471817);
doubleArray[1] = (-1306.02151431);
doubleArray[0] = doubleArray;
doubleArray[1] = doubleArray[0];
doubleArray[2] = doubleArray[0];
String[] stringArray = new String[5];
DefaultChartDataModel defaultChartDataModel = new DefaultChartDataModel(doubleArray, doubleArray, stringArray);
CoordSystem coordSystem = new CoordSystem(defaultChartDataModel, "n~sMnv]\"r,}Bi?W2<", "ZOT'c");
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
coordSystemUtilities.drawNumericalXAxisTicks((Graphics2D) null);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        double[][] doubleArray = new double[3][6];
        doubleArray[0] = 15.4;
        doubleArray[1] = -13.987;
        doubleArray[2] = 1.0E-6;
        doubleArray[3] = -1570.889471817;
        doubleArray[4] = -1306.02151431;
        doubleArray[5] = -1570.889471817;
        String[] stringArray = new String[5];
        stringArray[0] = "apple";
        stringArray[1] = "banana";
        stringArray[2] = "cherry";
        stringArray[3] = "date";
        stringArray[4] = "elderberry";
        DefaultChartDataModel defaultChartDataModel = new DefaultChartDataModel(doubleArray, doubleArray, stringArray);
        CoordSystem coordSystem = new CoordSystem(defaultChartDataModel, "n~sMnv]\"r,}Bi?W2<", "ZOT'c");
        CoordSystemUtilities coordSystemUtilities = coordSystem.c;
        coordSystemUtilities.drawNumericalXAxisTicks(((Graphics2D) (null)));
    }
}
statement is: double[][] doubleArray = new double[3][6], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [3, 6] Ct is: double[][] doubleArray = new double[3][6] isAssignment: false Array: new double[3][6] Elements: []
lengths: [3, 6] [3, 6]
Their type are: class [[D double[][]
statement is: doubleArray[0] = 15.4, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : doubleArray[0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl double[] Assignment:15.4 Ct is: doubleArray[0] = 15.4
target : doubleArray class spoon.support.reflect.code.CtLiteralImpl
statement is: doubleArray[1] = -13.987, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : doubleArray[1] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl double[] Assignment:-13.987 Ct is: doubleArray[1] = -13.987
target : doubleArray class spoon.support.reflect.code.CtLiteralImpl
statement is: doubleArray[2] = 1.0E-6, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : doubleArray[2] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl double[] Assignment:1.0E-6 Ct is: doubleArray[2] = 1.0E-6
target : doubleArray class spoon.support.reflect.code.CtLiteralImpl
statement is: doubleArray[3] = -1570.889471817, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : doubleArray[3] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl double[] Assignment:-1570.889471817 Ct is: doubleArray[3] = -1570.889471817
target : doubleArray class spoon.support.reflect.code.CtLiteralImpl
statement is: doubleArray[4] = -1306.02151431, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : doubleArray[4] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl double[] Assignment:-1306.02151431 Ct is: doubleArray[4] = -1306.02151431
target : doubleArray class spoon.support.reflect.code.CtLiteralImpl
statement is: doubleArray[5] = -1570.889471817, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : doubleArray[5] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl double[] Assignment:-1570.889471817 Ct is: doubleArray[5] = -1570.889471817
target : doubleArray class spoon.support.reflect.code.CtLiteralImpl
statement is: String[] stringArray = new String[5], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [5] Ct is: double[][] doubleArray = new double[3][6] isAssignment: false Array: new String[5] Elements: []
lengths: [3, 6] [5]
Dimension: [5] Ct is: double[] doubleArray = new double[2] isAssignment: false Array: new String[5] Elements: []
lengths: [2] [5]
Their type are: class [D String[]
Dimension: [5] Ct is: String[] stringArray = new String[5] isAssignment: false Array: new String[5] Elements: []
lengths: [5] [5]
Their type are: class [Ljava.lang.String; String[]
statement is: stringArray[0] = "apple", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"apple" Ct is: stringArray[0] = "apple"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[1] = "banana", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[1] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"banana" Ct is: stringArray[1] = "banana"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[2] = "cherry", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[2] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"cherry" Ct is: stringArray[2] = "cherry"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[3] = "date", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[3] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"date" Ct is: stringArray[3] = "date"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[4] = "elderberry", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[4] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"elderberry" Ct is: stringArray[4] = "elderberry"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: DefaultChartDataModel defaultChartDataModel = new DefaultChartDataModel(doubleArray, doubleArray, stringArray), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: CoordSystem coordSystem = new CoordSystem(defaultChartDataModel, "n~sMnv]\"r,}Bi?W2<", "ZOT'c"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: CoordSystemUtilities coordSystemUtilities = coordSystem.c, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: coordSystem.c is coordSystem
CtField is: protected de.progra.charting.CoordSystemUtilities de.progra.charting.CoordSystem.c CoordSystemUtilities c
statement is: coordSystemUtilities.drawNumericalXAxisTicks(((Graphics2D) (null))), class spoon.support.reflect.code.CtInvocationImpl
invocation is: coordSystemUtilities.drawNumericalXAxisTicks(((Graphics2D) (null))) target is: coordSystemUtilities method is: drawNumericalXAxisTicks(Graphics2D)
TestCase is: double[][] doubleArray = new double[3][6];
double _double = 15.4;
doubleArray[0] = (double[]) _double;
doubleArray[1] = doubleArray[0];
double _double = 1.0E-6;
doubleArray[2] = (double[]) _double;
doubleArray[0] = (double[]) _double;
doubleArray[0] = (double[]) _double;
doubleArray[0] = (double[]) _double;
String[] stringArray = new String[5];
DefaultChartDataModel defaultChartDataModel = new DefaultChartDataModel(doubleArray, (double[]) doubleArray, stringArray);
String string = "n~sMnv]\"r,}Bi?W2<";
String string = "ZOT'c";
CoordSystem coordSystem = new CoordSystem(defaultChartDataModel, string, string);

statement is: de.progra.charting.model.ObjectChartDataModel()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.progra.charting.model.ObjectChartDataModel
statement code is: ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel()
statement is: de.progra.charting.CoordSystem(Lde/progra/charting/model/ChartDataModel;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.progra.charting.CoordSystem
statement code is: CoordSystem coordSystem = new CoordSystem(arg0)
statement is: java.awt.image.BufferedImage(III)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.awt.image.BufferedImage
statement code is: BufferedImage bufferedImage = new BufferedImage(15, 20, 1)
statement is: getRotateInstance(DD)Ljava/awt/geom/AffineTransform; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.awt.geom.AffineTransform
statement code is: AffineTransform rotateInstance = AffineTransform.getRotateInstance((double) 15, (double) 20)
statement is: org.evosuite.testcase.statements.AssignmentStatement@6e79539d type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.awt.geom.AffineTransform
statement code is: coordSystem.y1transform = affineTransform
statement is: org.evosuite.testcase.statements.FieldStatement@3531e28b type is: class org.evosuite.testcase.statements.FieldStatement return type class de.progra.charting.CoordSystemUtilities
statement code is: CoordSystemUtilities coordSystemUtilities = coordSystem.c
statement is: createGraphics()Ljava/awt/Graphics2D; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.awt.Graphics2D
statement code is: Graphics2D createGraphics = bufferedImage.createGraphics()
statement is: drawNumericalXAxisTicks(Ljava/awt/Graphics2D;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: coordSystemUtilities.drawNumericalXAxisTicks(arg0)
test data is: ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel();
CoordSystem coordSystem = new CoordSystem(objectChartDataModel);
BufferedImage bufferedImage = new BufferedImage(15, 20, 1);
AffineTransform rotateInstance = AffineTransform.getRotateInstance((double) 15, (double) 20);
coordSystem.y1transform = rotateInstance;
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
Graphics2D createGraphics = bufferedImage.createGraphics();
coordSystemUtilities.drawNumericalXAxisTicks(createGraphics);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel();
        CoordSystem coordSystem = new CoordSystem(objectChartDataModel);
        BufferedImage bufferedImage = new BufferedImage(15, 20, 1);
        AffineTransform rotateInstance = AffineTransform.getRotateInstance(((double) (Math.PI)) / 4, ((double) (10)));
        coordSystem.y1transform = rotateInstance;
        CoordSystemUtilities coordSystemUtilities = coordSystem.c;
        Graphics2D createGraphics = bufferedImage.createGraphics();
        coordSystemUtilities.drawNumericalXAxisTicks(createGraphics);
    }
}
statement is: ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: CoordSystem coordSystem = new CoordSystem(objectChartDataModel), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: BufferedImage bufferedImage = new BufferedImage(15, 20, 1), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: AffineTransform rotateInstance = AffineTransform.getRotateInstance(((double) (Math.PI)) / 4, ((double) (10))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: AffineTransform.getRotateInstance(((double) (Math.PI)) / 4, ((double) (10))) target is: AffineTransform method is: getRotateInstance(double,double)
Matched Method is: getRotateInstance(DD)Ljava/awt/geom/AffineTransform;
i 1 Parameters size() 1 Num of Method Parameters: 2
statement is: coordSystem.y1transform = rotateInstance, class spoon.support.reflect.code.CtAssignmentImpl
statement is: CoordSystemUtilities coordSystemUtilities = coordSystem.c, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: coordSystem.c is coordSystem
CtField is: protected de.progra.charting.CoordSystemUtilities de.progra.charting.CoordSystem.c CoordSystemUtilities c
statement is: Graphics2D createGraphics = bufferedImage.createGraphics(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: bufferedImage.createGraphics() target is: bufferedImage method is: createGraphics()
source statement: java.awt.image.BufferedImage(III)V callee: VariableReference: Statement 2, type java.awt.image.BufferedImageindex is: 5
Matched Method is: createGraphics()Ljava/awt/Graphics2D;
statement is: coordSystemUtilities.drawNumericalXAxisTicks(createGraphics), class spoon.support.reflect.code.CtInvocationImpl
invocation is: coordSystemUtilities.drawNumericalXAxisTicks(createGraphics) target is: coordSystemUtilities method is: drawNumericalXAxisTicks(Graphics2D)
TestCase is: ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel();
CoordSystem coordSystem = new CoordSystem(objectChartDataModel);
int _int = 15;
int _int = 20;
int _int = 1;
BufferedImage bufferedImage = new BufferedImage(_int, _int, _int);
int _int = 10;
int _int = null;
AffineTransform.getRotateInstance((double) _int, (double) _int);
((BufferedImage) _int).createGraphics();

statement is: de.progra.charting.model.ObjectChartDataModel()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.progra.charting.model.ObjectChartDataModel
statement code is: ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel()
statement is: de.progra.charting.CoordSystem(Lde/progra/charting/model/ChartDataModel;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.progra.charting.CoordSystem
statement code is: CoordSystem coordSystem = new CoordSystem(arg0)
statement is: setPaintLabels(Z)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: coordSystem.setPaintLabels(false)
statement is: java.awt.image.BufferedImage(III)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.awt.image.BufferedImage
statement code is: BufferedImage bufferedImage = new BufferedImage(15, 20, 1)
statement is: getRotateInstance(DD)Ljava/awt/geom/AffineTransform; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.awt.geom.AffineTransform
statement code is: AffineTransform rotateInstance = AffineTransform.getRotateInstance((double) 15, (double) 20)
statement is: org.evosuite.testcase.statements.AssignmentStatement@7956da09 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.awt.geom.AffineTransform
statement code is: coordSystem.y1transform = affineTransform
statement is: org.evosuite.testcase.statements.FieldStatement@65ff42a2 type is: class org.evosuite.testcase.statements.FieldStatement return type class de.progra.charting.CoordSystemUtilities
statement code is: CoordSystemUtilities coordSystemUtilities = coordSystem.c
statement is: createGraphics()Ljava/awt/Graphics2D; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.awt.Graphics2D
statement code is: Graphics2D createGraphics = bufferedImage.createGraphics()
statement is: drawNumericalXAxisTicks(Ljava/awt/Graphics2D;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: coordSystemUtilities.drawNumericalXAxisTicks(arg0)
test data is: ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel();
CoordSystem coordSystem = new CoordSystem(objectChartDataModel);
coordSystem.setPaintLabels(false);
BufferedImage bufferedImage = new BufferedImage(15, 20, 1);
AffineTransform rotateInstance = AffineTransform.getRotateInstance((double) 15, (double) 20);
coordSystem.y1transform = rotateInstance;
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
Graphics2D createGraphics = bufferedImage.createGraphics();
coordSystemUtilities.drawNumericalXAxisTicks(createGraphics);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel();
        CoordSystem coordSystem = new CoordSystem(objectChartDataModel);
        coordSystem.setPaintLabels(false);
        BufferedImage bufferedImage = new BufferedImage(15, 20, 1);
        AffineTransform rotateInstance = AffineTransform.getRotateInstance(((double) (30)), ((double) (40)));
        coordSystem.y1transform = rotateInstance;
        CoordSystemUtilities coordSystemUtilities = coordSystem.c;
        Graphics2D createGraphics = bufferedImage.createGraphics();
        coordSystemUtilities.drawNumericalXAxisTicks(createGraphics);
    }
}
statement is: ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: CoordSystem coordSystem = new CoordSystem(objectChartDataModel), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: coordSystem.setPaintLabels(false), class spoon.support.reflect.code.CtInvocationImpl
invocation is: coordSystem.setPaintLabels(false) target is: coordSystem method is: setPaintLabels(boolean)
source statement: de.progra.charting.CoordSystem(Lde/progra/charting/model/ChartDataModel;)V callee: VariableReference: Statement 1, type de.progra.charting.CoordSystemindex is: 1
Matched Method is: setPaintLabels(Z)V
statement is: BufferedImage bufferedImage = new BufferedImage(15, 20, 1), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: AffineTransform rotateInstance = AffineTransform.getRotateInstance(((double) (30)), ((double) (40))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: AffineTransform.getRotateInstance(((double) (30)), ((double) (40))) target is: AffineTransform method is: getRotateInstance(double,double)
Matched Method is: getRotateInstance(DD)Ljava/awt/geom/AffineTransform;
statement is: coordSystem.y1transform = rotateInstance, class spoon.support.reflect.code.CtAssignmentImpl
statement is: CoordSystemUtilities coordSystemUtilities = coordSystem.c, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: coordSystem.c is coordSystem
CtField is: protected de.progra.charting.CoordSystemUtilities de.progra.charting.CoordSystem.c CoordSystemUtilities c
statement is: Graphics2D createGraphics = bufferedImage.createGraphics(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: bufferedImage.createGraphics() target is: bufferedImage method is: createGraphics()
source statement: java.awt.image.BufferedImage(III)V callee: VariableReference: Statement 3, type java.awt.image.BufferedImageindex is: 7
Matched Method is: createGraphics()Ljava/awt/Graphics2D;
statement is: coordSystemUtilities.drawNumericalXAxisTicks(createGraphics), class spoon.support.reflect.code.CtInvocationImpl
invocation is: coordSystemUtilities.drawNumericalXAxisTicks(createGraphics) target is: coordSystemUtilities method is: drawNumericalXAxisTicks(Graphics2D)
TestCase is: ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel();
CoordSystem coordSystem = new CoordSystem(objectChartDataModel);
boolean _boolean = false;
coordSystem.setPaintLabels(_boolean);
int _int = 15;
int _int = 20;
int _int = 1;
BufferedImage bufferedImage = new BufferedImage(_int, _int, _int);
int _int = 30;
int _int = 40;
AffineTransform.getRotateInstance((double) _int, (double) _int);
((BufferedImage) _void).createGraphics();

statement is: org.evosuite.testcase.statements.ArrayStatement@172e6753 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [[D
statement code is: double[][] doubleArray = new double[1][3]
statement is: org.evosuite.testcase.statements.ArrayStatement@909abeb1 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [D
statement code is: double[] doubleArray = new double[1]
statement is: org.evosuite.testcase.statements.AssignmentStatement@47223070 type is: class org.evosuite.testcase.statements.AssignmentStatement return type double
statement code is: doubleArray[0] = 0.39999999999999997
statement is: org.evosuite.testcase.statements.AssignmentStatement@26786ca6 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class [D
statement code is: doubleArray[0] = doubleArray
statement is: org.evosuite.testcase.statements.ArrayStatement@d2c37087 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [Ljava.lang.String;
statement code is: String[] stringArray = new String[1]
statement is: de.progra.charting.model.DefaultChartDataModel([[D[D[Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.progra.charting.model.DefaultChartDataModel
statement code is: DefaultChartDataModel defaultChartDataModel = new DefaultChartDataModel(arg0, arg1, arg2)
statement is: de.progra.charting.CoordSystem(Lde/progra/charting/model/ChartDataModel;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.progra.charting.CoordSystem
statement code is: CoordSystem coordSystem = new CoordSystem(arg0)
statement is: org.evosuite.testcase.statements.FieldStatement@3137259e type is: class org.evosuite.testcase.statements.FieldStatement return type class de.progra.charting.CoordSystemUtilities
statement code is: CoordSystemUtilities coordSystemUtilities = coordSystem.c
statement is: drawXAxisTicks(Ljava/awt/Graphics2D;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: coordSystemUtilities.drawXAxisTicks((Graphics2D) null)
test data is: double[][] doubleArray = new double[1][3];
double[] doubleArray = new double[1];
doubleArray[0] = 0.39999999999999997;
doubleArray[0] = doubleArray;
String[] stringArray = new String[1];
DefaultChartDataModel defaultChartDataModel = new DefaultChartDataModel(doubleArray, doubleArray, stringArray);
CoordSystem coordSystem = new CoordSystem(defaultChartDataModel);
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
coordSystemUtilities.drawXAxisTicks((Graphics2D) null);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        double[][] doubleArray = new double[1][3];
        double[] doubleArray = new double[1];
        doubleArray[0] = 0.39999999999999997;// This is a more descriptive and representative value for the test case. It is also less prone to floating point errors.

        doubleArray[0] = doubleArray;
        String[] stringArray = new String[1];
        stringArray[0] = "This is a string";// This is a more descriptive and representative value for the test case. It is also less prone to floating point errors.

        DefaultChartDataModel defaultChartDataModel = new DefaultChartDataModel(doubleArray, doubleArray, stringArray);
        CoordSystem coordSystem = new CoordSystem(defaultChartDataModel);
        CoordSystemUtilities coordSystemUtilities = coordSystem.c;
        coordSystemUtilities.drawXAxisTicks(((Graphics2D) (null)));
    }
}
statement is: double[][] doubleArray = new double[1][3], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [1, 3] Ct is: double[][] doubleArray = new double[1][3] isAssignment: false Array: new double[1][3] Elements: []
lengths: [1, 3] [1, 3]
Their type are: class [[D double[][]
statement is: double[] doubleArray = new double[1], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [1] Ct is: double[][] doubleArray = new double[1][3] isAssignment: false Array: new double[1] Elements: []
lengths: [1, 3] [1]
Dimension: [1] Ct is: double[] doubleArray = new double[1] isAssignment: false Array: new double[1] Elements: []
lengths: [1] [1]
Their type are: class [D double[]
statement is: doubleArray[0] = 0.39999999999999997// This is a more descriptive and representative value for the test case. It is also less prone to floating point errors.
, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : doubleArray[0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl double Assignment:0.39999999999999997 Ct is: doubleArray[0] = 0.39999999999999997// This is a more descriptive and representative value for the test case. It is also less prone to floating point errors.

target : doubleArray class spoon.support.reflect.code.CtLiteralImpl
statement is: doubleArray[0] = doubleArray, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : doubleArray[0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl double Assignment:doubleArray Ct is: doubleArray[0] = doubleArray
target : doubleArray class spoon.support.reflect.code.CtLiteralImpl
statement is: String[] stringArray = new String[1], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [1] Ct is: double[][] doubleArray = new double[1][3] isAssignment: false Array: new String[1] Elements: []
lengths: [1, 3] [1]
Dimension: [1] Ct is: double[] doubleArray = new double[1] isAssignment: false Array: new String[1] Elements: []
lengths: [1] [1]
Their type are: class [D String[]
Dimension: [1] Ct is: String[] stringArray = new String[1] isAssignment: false Array: new String[1] Elements: []
lengths: [1] [1]
Their type are: class [Ljava.lang.String; String[]
statement is: stringArray[0] = "This is a string"// This is a more descriptive and representative value for the test case. It is also less prone to floating point errors.
, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"This is a string" Ct is: stringArray[0] = "This is a string"// This is a more descriptive and representative value for the test case. It is also less prone to floating point errors.

target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: DefaultChartDataModel defaultChartDataModel = new DefaultChartDataModel(doubleArray, doubleArray, stringArray), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: CoordSystem coordSystem = new CoordSystem(defaultChartDataModel), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: CoordSystemUtilities coordSystemUtilities = coordSystem.c, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: coordSystem.c is coordSystem
CtField is: protected de.progra.charting.CoordSystemUtilities de.progra.charting.CoordSystem.c CoordSystemUtilities c
statement is: coordSystemUtilities.drawXAxisTicks(((Graphics2D) (null))), class spoon.support.reflect.code.CtInvocationImpl
invocation is: coordSystemUtilities.drawXAxisTicks(((Graphics2D) (null))) target is: coordSystemUtilities method is: drawXAxisTicks(Graphics2D)
TestCase is: double[][] doubleArray = new double[1][3];
double[] doubleArray = new double[1];
double _double = 0.39999999999999997;
doubleArray[0] = _double;
doubleArray[0] = (double) doubleArray;
String[] stringArray = new String[1];
DefaultChartDataModel defaultChartDataModel = new DefaultChartDataModel((double[][]) doubleArray, doubleArray, stringArray);
CoordSystem coordSystem = new CoordSystem(defaultChartDataModel);

statement is: de.progra.charting.model.ObjectChartDataModel()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.progra.charting.model.ObjectChartDataModel
statement code is: ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel()
statement is: de.progra.charting.CoordSystem(Lde/progra/charting/model/ChartDataModel;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.progra.charting.CoordSystem
statement code is: CoordSystem coordSystem = new CoordSystem(arg0)
statement is: java.awt.image.BufferedImage(III)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.awt.image.BufferedImage
statement code is: BufferedImage bufferedImage = new BufferedImage(15, 20, 1)
statement is: getRotateInstance(DD)Ljava/awt/geom/AffineTransform; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.awt.geom.AffineTransform
statement code is: AffineTransform rotateInstance = AffineTransform.getRotateInstance((double) 15, (double) 20)
statement is: org.evosuite.testcase.statements.AssignmentStatement@7b9d8551 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.awt.geom.AffineTransform
statement code is: coordSystem.y1transform = affineTransform
statement is: setPaintLabels(Z)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: coordSystem.setPaintLabels(false)
statement is: org.evosuite.testcase.statements.FieldStatement@33f9e229 type is: class org.evosuite.testcase.statements.FieldStatement return type class de.progra.charting.CoordSystemUtilities
statement code is: CoordSystemUtilities coordSystemUtilities = coordSystem.c
statement is: createGraphics()Ljava/awt/Graphics2D; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.awt.Graphics2D
statement code is: Graphics2D createGraphics = bufferedImage.createGraphics()
statement is: drawXAxisTicks(Ljava/awt/Graphics2D;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: coordSystemUtilities.drawXAxisTicks(arg0)
test data is: ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel();
CoordSystem coordSystem = new CoordSystem(objectChartDataModel);
BufferedImage bufferedImage = new BufferedImage(15, 20, 1);
AffineTransform rotateInstance = AffineTransform.getRotateInstance((double) 15, (double) 20);
coordSystem.y1transform = rotateInstance;
coordSystem.setPaintLabels(false);
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
Graphics2D createGraphics = bufferedImage.createGraphics();
coordSystemUtilities.drawXAxisTicks(createGraphics);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel();
        CoordSystem coordSystem = new CoordSystem(objectChartDataModel);
        BufferedImage bufferedImage = new BufferedImage(15, 20, 1);
        AffineTransform rotateInstance = AffineTransform.getRotateInstance(((double) (45)), ((double) (60)));
        coordSystem.y1transform = rotateInstance;
        coordSystem.setPaintLabels(false);
        CoordSystemUtilities coordSystemUtilities = coordSystem.c;
        Graphics2D createGraphics = bufferedImage.createGraphics();
        coordSystemUtilities.drawXAxisTicks(createGraphics);
    }
}
statement is: ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: CoordSystem coordSystem = new CoordSystem(objectChartDataModel), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: BufferedImage bufferedImage = new BufferedImage(15, 20, 1), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: AffineTransform rotateInstance = AffineTransform.getRotateInstance(((double) (45)), ((double) (60))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: AffineTransform.getRotateInstance(((double) (45)), ((double) (60))) target is: AffineTransform method is: getRotateInstance(double,double)
Matched Method is: getRotateInstance(DD)Ljava/awt/geom/AffineTransform;
statement is: coordSystem.y1transform = rotateInstance, class spoon.support.reflect.code.CtAssignmentImpl
statement is: coordSystem.setPaintLabels(false), class spoon.support.reflect.code.CtInvocationImpl
invocation is: coordSystem.setPaintLabels(false) target is: coordSystem method is: setPaintLabels(boolean)
source statement: de.progra.charting.CoordSystem(Lde/progra/charting/model/ChartDataModel;)V callee: VariableReference: Statement 1, type de.progra.charting.CoordSystemindex is: 1
Matched Method is: setPaintLabels(Z)V
statement is: CoordSystemUtilities coordSystemUtilities = coordSystem.c, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: coordSystem.c is coordSystem
CtField is: protected de.progra.charting.CoordSystemUtilities de.progra.charting.CoordSystem.c CoordSystemUtilities c
statement is: Graphics2D createGraphics = bufferedImage.createGraphics(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: bufferedImage.createGraphics() target is: bufferedImage method is: createGraphics()
source statement: java.awt.image.BufferedImage(III)V callee: VariableReference: Statement 2, type java.awt.image.BufferedImageindex is: 5
Matched Method is: createGraphics()Ljava/awt/Graphics2D;
statement is: coordSystemUtilities.drawXAxisTicks(createGraphics), class spoon.support.reflect.code.CtInvocationImpl
invocation is: coordSystemUtilities.drawXAxisTicks(createGraphics) target is: coordSystemUtilities method is: drawXAxisTicks(Graphics2D)
TestCase is: ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel();
CoordSystem coordSystem = new CoordSystem(objectChartDataModel);
int _int = 15;
int _int = 20;
int _int = 1;
BufferedImage bufferedImage = new BufferedImage(_int, _int, _int);
int _int = 45;
int _int = 60;
AffineTransform.getRotateInstance((double) _int, (double) _int);
boolean _boolean = false;
coordSystem.setPaintLabels(_boolean);
((BufferedImage) _int).createGraphics();

statement is: de.progra.charting.model.ObjectChartDataModel()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.progra.charting.model.ObjectChartDataModel
statement code is: ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel()
statement is: de.progra.charting.CoordSystem(Lde/progra/charting/model/ChartDataModel;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.progra.charting.CoordSystem
statement code is: CoordSystem coordSystem = new CoordSystem(arg0)
statement is: java.awt.image.BufferedImage(III)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.awt.image.BufferedImage
statement code is: BufferedImage bufferedImage = new BufferedImage(15, 20, 1)
statement is: getRotateInstance(DD)Ljava/awt/geom/AffineTransform; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.awt.geom.AffineTransform
statement code is: AffineTransform rotateInstance = AffineTransform.getRotateInstance((double) 15, (double) 20)
statement is: org.evosuite.testcase.statements.AssignmentStatement@da541a4d type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.awt.geom.AffineTransform
statement code is: coordSystem.y1transform = affineTransform
statement is: org.evosuite.testcase.statements.FieldStatement@3600fb3a type is: class org.evosuite.testcase.statements.FieldStatement return type class de.progra.charting.CoordSystemUtilities
statement code is: CoordSystemUtilities coordSystemUtilities = coordSystem.c
statement is: createGraphics()Ljava/awt/Graphics2D; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.awt.Graphics2D
statement code is: Graphics2D createGraphics = bufferedImage.createGraphics()
statement is: drawXAxisTicks(Ljava/awt/Graphics2D;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: coordSystemUtilities.drawXAxisTicks(arg0)
test data is: ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel();
CoordSystem coordSystem = new CoordSystem(objectChartDataModel);
BufferedImage bufferedImage = new BufferedImage(15, 20, 1);
AffineTransform rotateInstance = AffineTransform.getRotateInstance((double) 15, (double) 20);
coordSystem.y1transform = rotateInstance;
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
Graphics2D createGraphics = bufferedImage.createGraphics();
coordSystemUtilities.drawXAxisTicks(createGraphics);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel();
        CoordSystem coordSystem = new CoordSystem(objectChartDataModel);
        BufferedImage bufferedImage = new BufferedImage(30, 40, 1);
        AffineTransform rotateInstance = AffineTransform.getRotateInstance(((double) (45)), ((double) (20)));
        coordSystem.y1transform = rotateInstance;
        CoordSystemUtilities coordSystemUtilities = coordSystem.c;
        Graphics2D createGraphics = bufferedImage.createGraphics();
        coordSystemUtilities.drawXAxisTicks(createGraphics);
    }
}
statement is: ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: CoordSystem coordSystem = new CoordSystem(objectChartDataModel), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: BufferedImage bufferedImage = new BufferedImage(30, 40, 1), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: AffineTransform rotateInstance = AffineTransform.getRotateInstance(((double) (45)), ((double) (20))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: AffineTransform.getRotateInstance(((double) (45)), ((double) (20))) target is: AffineTransform method is: getRotateInstance(double,double)
Matched Method is: getRotateInstance(DD)Ljava/awt/geom/AffineTransform;
statement is: coordSystem.y1transform = rotateInstance, class spoon.support.reflect.code.CtAssignmentImpl
statement is: CoordSystemUtilities coordSystemUtilities = coordSystem.c, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: coordSystem.c is coordSystem
CtField is: protected de.progra.charting.CoordSystemUtilities de.progra.charting.CoordSystem.c CoordSystemUtilities c
statement is: Graphics2D createGraphics = bufferedImage.createGraphics(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: bufferedImage.createGraphics() target is: bufferedImage method is: createGraphics()
source statement: java.awt.image.BufferedImage(III)V callee: VariableReference: Statement 2, type java.awt.image.BufferedImageindex is: 5
Matched Method is: createGraphics()Ljava/awt/Graphics2D;
statement is: coordSystemUtilities.drawXAxisTicks(createGraphics), class spoon.support.reflect.code.CtInvocationImpl
invocation is: coordSystemUtilities.drawXAxisTicks(createGraphics) target is: coordSystemUtilities method is: drawXAxisTicks(Graphics2D)
TestCase is: ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel();
CoordSystem coordSystem = new CoordSystem(objectChartDataModel);
int _int = 30;
int _int = 40;
int _int = 1;
BufferedImage bufferedImage = new BufferedImage(_int, _int, _int);
int _int = 45;
int _int = 20;
AffineTransform.getRotateInstance((double) _int, (double) _int);
((BufferedImage) _int).createGraphics();

statement is: org.evosuite.testcase.statements.ArrayStatement@dd64ac42 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [[D
statement code is: double[][] doubleArray = new double[2][5]
statement is: org.evosuite.testcase.statements.ArrayStatement@b4cfb99 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [D
statement code is: double[] doubleArray = new double[6]
statement is: org.evosuite.testcase.statements.AssignmentStatement@12330bb5 type is: class org.evosuite.testcase.statements.AssignmentStatement return type double
statement code is: doubleArray[0] = (double) 1
statement is: org.evosuite.testcase.statements.AssignmentStatement@a2c7582c type is: class org.evosuite.testcase.statements.AssignmentStatement return type double
statement code is: doubleArray[1] = (double) 1
statement is: org.evosuite.testcase.statements.AssignmentStatement@aca7dd3b type is: class org.evosuite.testcase.statements.AssignmentStatement return type double
statement code is: doubleArray[2] = (double) 20
statement is: org.evosuite.testcase.statements.AssignmentStatement@834c23cd type is: class org.evosuite.testcase.statements.AssignmentStatement return type double
statement code is: doubleArray[3] = 1459.6169454
statement is: org.evosuite.testcase.statements.AssignmentStatement@a09709f4 type is: class org.evosuite.testcase.statements.AssignmentStatement return type double
statement code is: doubleArray[4] = (double) 15
statement is: org.evosuite.testcase.statements.AssignmentStatement@b9ef9f71 type is: class org.evosuite.testcase.statements.AssignmentStatement return type double
statement code is: doubleArray[5] = (double) 15
statement is: org.evosuite.testcase.statements.AssignmentStatement@f2a443b type is: class org.evosuite.testcase.statements.AssignmentStatement return type class [D
statement code is: doubleArray[0] = doubleArray
statement is: org.evosuite.testcase.statements.AssignmentStatement@f5a1d5d type is: class org.evosuite.testcase.statements.AssignmentStatement return type class [D
statement code is: doubleArray[1] = doubleArray[0]
statement is: org.evosuite.testcase.statements.ArrayStatement@101dff8b type is: class org.evosuite.testcase.statements.ArrayStatement return type class [Ljava.lang.String;
statement code is: String[] stringArray = new String[3]
statement is: de.progra.charting.model.DefaultChartDataModel([[D[D[Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.progra.charting.model.DefaultChartDataModel
statement code is: DefaultChartDataModel defaultChartDataModel = new DefaultChartDataModel(arg0, arg1, arg2)
statement is: de.progra.charting.CoordSystem(Lde/progra/charting/model/ChartDataModel;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.progra.charting.CoordSystem
statement code is: CoordSystem coordSystem = new CoordSystem(arg0)
statement is: org.evosuite.testcase.statements.FieldStatement@577f0740 type is: class org.evosuite.testcase.statements.FieldStatement return type class de.progra.charting.CoordSystemUtilities
statement code is: CoordSystemUtilities coordSystemUtilities = coordSystem.c
statement is: drawYAxisTicks(Ljava/awt/Graphics2D;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: coordSystemUtilities.drawYAxisTicks((Graphics2D) null)
test data is: double[][] doubleArray = new double[2][5];
double[] doubleArray = new double[6];
doubleArray[0] = (double) 1;
doubleArray[1] = (double) 1;
doubleArray[2] = (double) 20;
doubleArray[3] = 1459.6169454;
doubleArray[4] = (double) 15;
doubleArray[5] = (double) 15;
doubleArray[0] = doubleArray;
doubleArray[1] = doubleArray[0];
String[] stringArray = new String[3];
DefaultChartDataModel defaultChartDataModel = new DefaultChartDataModel(doubleArray, doubleArray, stringArray);
CoordSystem coordSystem = new CoordSystem(defaultChartDataModel);
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
coordSystemUtilities.drawYAxisTicks((Graphics2D) null);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        double[][] doubleArray = new double[2][5];
        doubleArray[0] = 1;
        doubleArray[1] = 1;
        doubleArray[2] = 20;
        doubleArray[3] = 1459.6169454;
        doubleArray[4] = 15;
        doubleArray[5] = 15;
        doubleArray[0] = doubleArray;
        doubleArray[1] = doubleArray[0];
        String[] stringArray = new String[3];
        stringArray[0] = "A";
        stringArray[1] = "B";
        stringArray[2] = "C";
        DefaultChartDataModel defaultChartDataModel = new DefaultChartDataModel(doubleArray, doubleArray, stringArray);
        CoordSystem coordSystem = new CoordSystem(defaultChartDataModel);
        CoordSystemUtilities coordSystemUtilities = coordSystem.c;
        coordSystemUtilities.drawYAxisTicks(((Graphics2D) (null)));
    }
}
statement is: double[][] doubleArray = new double[2][5], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [2, 5] Ct is: double[][] doubleArray = new double[2][5] isAssignment: false Array: new double[2][5] Elements: []
lengths: [2, 5] [2, 5]
Their type are: class [[D double[][]
statement is: doubleArray[0] = 1, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : doubleArray[0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl double[] Assignment:1 Ct is: doubleArray[0] = 1
target : doubleArray class spoon.support.reflect.code.CtLiteralImpl
statement is: doubleArray[1] = 1, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : doubleArray[1] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl double[] Assignment:1 Ct is: doubleArray[1] = 1
target : doubleArray class spoon.support.reflect.code.CtLiteralImpl
statement is: doubleArray[2] = 20, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : doubleArray[2] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl double[] Assignment:20 Ct is: doubleArray[2] = 20
target : doubleArray class spoon.support.reflect.code.CtLiteralImpl
statement is: doubleArray[3] = 1459.6169454, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : doubleArray[3] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl double[] Assignment:1459.6169454 Ct is: doubleArray[3] = 1459.6169454
target : doubleArray class spoon.support.reflect.code.CtLiteralImpl
statement is: doubleArray[4] = 15, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : doubleArray[4] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl double[] Assignment:15 Ct is: doubleArray[4] = 15
target : doubleArray class spoon.support.reflect.code.CtLiteralImpl
statement is: doubleArray[5] = 15, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : doubleArray[5] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl double[] Assignment:15 Ct is: doubleArray[5] = 15
target : doubleArray class spoon.support.reflect.code.CtLiteralImpl
statement is: doubleArray[0] = doubleArray, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : doubleArray[0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl double[] Assignment:doubleArray Ct is: doubleArray[0] = doubleArray
target : doubleArray class spoon.support.reflect.code.CtLiteralImpl
statement is: doubleArray[1] = doubleArray[0], class spoon.support.reflect.code.CtAssignmentImpl
Assigned : doubleArray[1] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl double[] Assignment:doubleArray[0] Ct is: doubleArray[1] = doubleArray[0]
target : doubleArray class spoon.support.reflect.code.CtLiteralImpl
statement is: String[] stringArray = new String[3], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [3] Ct is: double[][] doubleArray = new double[2][5] isAssignment: false Array: new String[3] Elements: []
lengths: [2, 5] [3]
Dimension: [3] Ct is: double[] doubleArray = new double[6] isAssignment: false Array: new String[3] Elements: []
lengths: [6] [3]
Their type are: class [D String[]
Dimension: [3] Ct is: String[] stringArray = new String[3] isAssignment: false Array: new String[3] Elements: []
lengths: [3] [3]
Their type are: class [Ljava.lang.String; String[]
statement is: stringArray[0] = "A", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"A" Ct is: stringArray[0] = "A"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[1] = "B", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[1] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"B" Ct is: stringArray[1] = "B"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[2] = "C", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[2] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"C" Ct is: stringArray[2] = "C"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: DefaultChartDataModel defaultChartDataModel = new DefaultChartDataModel(doubleArray, doubleArray, stringArray), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: CoordSystem coordSystem = new CoordSystem(defaultChartDataModel), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: CoordSystemUtilities coordSystemUtilities = coordSystem.c, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: coordSystem.c is coordSystem
CtField is: protected de.progra.charting.CoordSystemUtilities de.progra.charting.CoordSystem.c CoordSystemUtilities c
statement is: coordSystemUtilities.drawYAxisTicks(((Graphics2D) (null))), class spoon.support.reflect.code.CtInvocationImpl
invocation is: coordSystemUtilities.drawYAxisTicks(((Graphics2D) (null))) target is: coordSystemUtilities method is: drawYAxisTicks(Graphics2D)
TestCase is: double[][] doubleArray = new double[2][5];
int _int = 1;
doubleArray[0] = (double[]) _int;
int _int = 1;
doubleArray[1] = (double[]) _int;
doubleArray[0] = (double[]) _int;
doubleArray[0] = (double[]) _int;
doubleArray[0] = (double[]) _int;
doubleArray[0] = (double[]) _int;
doubleArray[0] = (double[]) doubleArray;
doubleArray[1] = (double[]) _int;
String[] stringArray = new String[3];
DefaultChartDataModel defaultChartDataModel = new DefaultChartDataModel(doubleArray, (double[]) doubleArray, stringArray);
CoordSystem coordSystem = new CoordSystem(defaultChartDataModel);

statement is: org.evosuite.testcase.statements.ArrayStatement@ac647e4c type is: class org.evosuite.testcase.statements.ArrayStatement return type class [[D
statement code is: double[][] doubleArray = new double[3][6]
statement is: org.evosuite.testcase.statements.ArrayStatement@4faa1b44 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [D
statement code is: double[] doubleArray = new double[2]
statement is: org.evosuite.testcase.statements.AssignmentStatement@b2501574 type is: class org.evosuite.testcase.statements.AssignmentStatement return type double
statement code is: doubleArray[1] = (-1570.889471817)
statement is: org.evosuite.testcase.statements.AssignmentStatement@b433926b type is: class org.evosuite.testcase.statements.AssignmentStatement return type class [D
statement code is: doubleArray[0] = doubleArray
statement is: org.evosuite.testcase.statements.ArrayStatement@48bffcb7 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [D
statement code is: double[] doubleArray = new double[3]
statement is: org.evosuite.testcase.statements.AssignmentStatement@9f95957e type is: class org.evosuite.testcase.statements.AssignmentStatement return type double
statement code is: doubleArray[0] = (-1570.889471817)
statement is: org.evosuite.testcase.statements.AssignmentStatement@80989e1a type is: class org.evosuite.testcase.statements.AssignmentStatement return type double
statement code is: doubleArray[1] = (-1570.889471817)
statement is: org.evosuite.testcase.statements.AssignmentStatement@a2eeb9a0 type is: class org.evosuite.testcase.statements.AssignmentStatement return type double
statement code is: doubleArray[2] = (-1570.889471817)
statement is: org.evosuite.testcase.statements.ArrayStatement@5f9a49e0 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [Ljava.lang.String;
statement code is: String[] stringArray = new String[5]
statement is: de.progra.charting.model.DefaultChartDataModel([[D[D[Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.progra.charting.model.DefaultChartDataModel
statement code is: DefaultChartDataModel defaultChartDataModel = new DefaultChartDataModel(arg0, arg1, arg2)
statement is: de.progra.charting.CoordSystem(Lde/progra/charting/model/ChartDataModel;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.progra.charting.CoordSystem
statement code is: CoordSystem coordSystem = new CoordSystem(arg0)
statement is: org.evosuite.testcase.statements.FieldStatement@146f6cee type is: class org.evosuite.testcase.statements.FieldStatement return type class de.progra.charting.CoordSystemUtilities
statement code is: CoordSystemUtilities coordSystemUtilities = coordSystem.c
statement is: drawYAxisTicks(Ljava/awt/Graphics2D;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: coordSystemUtilities.drawYAxisTicks((Graphics2D) null)
test data is: double[][] doubleArray = new double[3][6];
double[] doubleArray = new double[2];
doubleArray[1] = (-1570.889471817);
doubleArray[0] = doubleArray;
double[] doubleArray = new double[3];
doubleArray[0] = (-1570.889471817);
doubleArray[1] = (-1570.889471817);
doubleArray[2] = (-1570.889471817);
String[] stringArray = new String[5];
DefaultChartDataModel defaultChartDataModel = new DefaultChartDataModel(doubleArray, doubleArray, stringArray);
CoordSystem coordSystem = new CoordSystem(defaultChartDataModel);
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
coordSystemUtilities.drawYAxisTicks((Graphics2D) null);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        double[][] doubleArray = new double[3][6];
        for (int i = 0; i < doubleArray.length; i++) {
            doubleArray[i] = new double[6];
            for (int j = 0; j < doubleArray[i].length; j++) {
                doubleArray[i][j] = (Math.random() * 100) - 50;
            }
        }
        String[] stringArray = new String[5];
        for (int i = 0; i < stringArray.length; i++) {
            stringArray[i] = "Test" + i;
        }
        DefaultChartDataModel defaultChartDataModel = new DefaultChartDataModel(doubleArray, doubleArray, stringArray);
        CoordSystem coordSystem = new CoordSystem(defaultChartDataModel);
        CoordSystemUtilities coordSystemUtilities = coordSystem.c;
        coordSystemUtilities.drawYAxisTicks(((Graphics2D) (null)));
    }
}
statement is: double[][] doubleArray = new double[3][6], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [3, 6] Ct is: double[][] doubleArray = new double[3][6] isAssignment: false Array: new double[3][6] Elements: []
lengths: [3, 6] [3, 6]
Their type are: class [[D double[][]
statement is: for (int i = 0; i < doubleArray.length; i++) {
    doubleArray[i] = new double[6];
    for (int j = 0; j < doubleArray[i].length; j++) {
        doubleArray[i][j] = (Math.random() * 100) - 50;
    }
}, class spoon.support.reflect.code.CtForImpl
statement is: String[] stringArray = new String[5], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [5] Ct is: double[][] doubleArray = new double[3][6] isAssignment: false Array: new String[5] Elements: []
lengths: [3, 6] [5]
Dimension: [5] Ct is: double[] doubleArray = new double[2] isAssignment: false Array: new String[5] Elements: []
lengths: [2] [5]
Their type are: class [D String[]
Dimension: [5] Ct is: double[] doubleArray = new double[3] isAssignment: false Array: new String[5] Elements: []
lengths: [3] [5]
Their type are: class [D String[]
Dimension: [5] Ct is: String[] stringArray = new String[5] isAssignment: false Array: new String[5] Elements: []
lengths: [5] [5]
Their type are: class [Ljava.lang.String; String[]
statement is: for (int i = 0; i < stringArray.length; i++) {
    stringArray[i] = "Test" + i;
}, class spoon.support.reflect.code.CtForImpl
statement is: DefaultChartDataModel defaultChartDataModel = new DefaultChartDataModel(doubleArray, doubleArray, stringArray), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: CoordSystem coordSystem = new CoordSystem(defaultChartDataModel), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: CoordSystemUtilities coordSystemUtilities = coordSystem.c, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: coordSystem.c is coordSystem
CtField is: protected de.progra.charting.CoordSystemUtilities de.progra.charting.CoordSystem.c CoordSystemUtilities c
statement is: coordSystemUtilities.drawYAxisTicks(((Graphics2D) (null))), class spoon.support.reflect.code.CtInvocationImpl
invocation is: coordSystemUtilities.drawYAxisTicks(((Graphics2D) (null))) target is: coordSystemUtilities method is: drawYAxisTicks(Graphics2D)
TestCase is: double[][] doubleArray = new double[3][6];
String[] stringArray = new String[5];
DefaultChartDataModel defaultChartDataModel = new DefaultChartDataModel(doubleArray, (double[]) doubleArray, stringArray);
CoordSystem coordSystem = new CoordSystem(defaultChartDataModel);

statement is: org.evosuite.testcase.statements.ArrayStatement@d0ad5c71 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [[D
statement code is: double[][] doubleArray = new double[3][6]
statement is: org.evosuite.testcase.statements.ArrayStatement@10c44407 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [D
statement code is: double[] doubleArray = new double[2]
statement is: org.evosuite.testcase.statements.AssignmentStatement@fc450c9c type is: class org.evosuite.testcase.statements.AssignmentStatement return type double
statement code is: doubleArray[1] = (-1570.889471817)
statement is: org.evosuite.testcase.statements.AssignmentStatement@483dee8d type is: class org.evosuite.testcase.statements.AssignmentStatement return type class [D
statement code is: doubleArray[0] = doubleArray
statement is: org.evosuite.testcase.statements.ArrayStatement@24655c9b type is: class org.evosuite.testcase.statements.ArrayStatement return type class [D
statement code is: double[] doubleArray = new double[3]
statement is: org.evosuite.testcase.statements.AssignmentStatement@3b3c07b type is: class org.evosuite.testcase.statements.AssignmentStatement return type double
statement code is: doubleArray[0] = (-1570.889471817)
statement is: org.evosuite.testcase.statements.AssignmentStatement@6af3ab18 type is: class org.evosuite.testcase.statements.AssignmentStatement return type double
statement code is: doubleArray[1] = (-1570.889471817)
statement is: org.evosuite.testcase.statements.AssignmentStatement@da882961 type is: class org.evosuite.testcase.statements.AssignmentStatement return type double
statement code is: doubleArray[2] = (-1570.889471817)
statement is: org.evosuite.testcase.statements.ArrayStatement@1cf1d6dd type is: class org.evosuite.testcase.statements.ArrayStatement return type class [Ljava.lang.String;
statement code is: String[] stringArray = new String[5]
statement is: de.progra.charting.model.DefaultChartDataModel([[D[D[Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.progra.charting.model.DefaultChartDataModel
statement code is: DefaultChartDataModel defaultChartDataModel = new DefaultChartDataModel(arg0, arg1, arg2)
statement is: de.progra.charting.CoordSystem(Lde/progra/charting/model/ChartDataModel;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.progra.charting.CoordSystem
statement code is: CoordSystem coordSystem = new CoordSystem(arg0)
statement is: org.evosuite.testcase.statements.FieldStatement@232ebd58 type is: class org.evosuite.testcase.statements.FieldStatement return type class de.progra.charting.Axis
statement code is: Axis axis = coordSystem.xaxis
statement is: org.evosuite.testcase.statements.AssignmentStatement@edc36b59 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class de.progra.charting.Axis
statement code is: coordSystem.yaxis2 = axis
statement is: org.evosuite.testcase.statements.FieldStatement@7e02d5aa type is: class org.evosuite.testcase.statements.FieldStatement return type class de.progra.charting.CoordSystemUtilities
statement code is: CoordSystemUtilities coordSystemUtilities = coordSystem.c
statement is: drawYAxisTicks(Ljava/awt/Graphics2D;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: coordSystemUtilities.drawYAxisTicks((Graphics2D) null)
test data is: double[][] doubleArray = new double[3][6];
double[] doubleArray = new double[2];
doubleArray[1] = (-1570.889471817);
doubleArray[0] = doubleArray;
double[] doubleArray = new double[3];
doubleArray[0] = (-1570.889471817);
doubleArray[1] = (-1570.889471817);
doubleArray[2] = (-1570.889471817);
String[] stringArray = new String[5];
DefaultChartDataModel defaultChartDataModel = new DefaultChartDataModel(doubleArray, doubleArray, stringArray);
CoordSystem coordSystem = new CoordSystem(defaultChartDataModel);
Axis axis = coordSystem.xaxis;
coordSystem.yaxis2 = axis;
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
coordSystemUtilities.drawYAxisTicks((Graphics2D) null);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        double[][] doubleArray = new double[3][6];
        double[] doubleArray = new double[2];
        doubleArray[1] = -1570.889471817;
        doubleArray[0] = doubleArray;
        double[] doubleArray = new double[3];
        doubleArray[0] = -1570.889471817;
        doubleArray[1] = -1570.889471817;
        doubleArray[2] = -1570.889471817;
        String[] stringArray = new String[5];
        stringArray[0] = "January";
        stringArray[1] = "February";
        stringArray[2] = "March";
        stringArray[3] = "April";
        stringArray[4] = "May";
        DefaultChartDataModel defaultChartDataModel = new DefaultChartDataModel(doubleArray, doubleArray, stringArray);
        CoordSystem coordSystem = new CoordSystem(defaultChartDataModel);
        Axis axis = coordSystem.xaxis;
        coordSystem.yaxis2 = axis;
        CoordSystemUtilities coordSystemUtilities = coordSystem.c;
        coordSystemUtilities.drawYAxisTicks(((Graphics2D) (null)));
    }
}
statement is: double[][] doubleArray = new double[3][6], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [3, 6] Ct is: double[][] doubleArray = new double[3][6] isAssignment: false Array: new double[3][6] Elements: []
lengths: [3, 6] [3, 6]
Their type are: class [[D double[][]
statement is: double[] doubleArray = new double[2], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [2] Ct is: double[][] doubleArray = new double[3][6] isAssignment: false Array: new double[2] Elements: []
lengths: [3, 6] [2]
Dimension: [2] Ct is: double[] doubleArray = new double[2] isAssignment: false Array: new double[2] Elements: []
lengths: [2] [2]
Their type are: class [D double[]
statement is: doubleArray[1] = -1570.889471817, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : doubleArray[1] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl double Assignment:-1570.889471817 Ct is: doubleArray[1] = -1570.889471817
target : doubleArray class spoon.support.reflect.code.CtLiteralImpl
statement is: doubleArray[0] = doubleArray, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : doubleArray[0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl double Assignment:doubleArray Ct is: doubleArray[0] = doubleArray
target : doubleArray class spoon.support.reflect.code.CtLiteralImpl
statement is: double[] doubleArray = new double[3], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [3] Ct is: double[][] doubleArray = new double[3][6] isAssignment: false Array: new double[3] Elements: []
lengths: [3, 6] [3]
Dimension: [3] Ct is: double[] doubleArray = new double[2] isAssignment: false Array: new double[3] Elements: []
lengths: [2] [3]
Their type are: class [D double[]
statement is: doubleArray[0] = -1570.889471817, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : doubleArray[0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl double Assignment:-1570.889471817 Ct is: doubleArray[0] = -1570.889471817
target : doubleArray class spoon.support.reflect.code.CtLiteralImpl
statement is: doubleArray[1] = -1570.889471817, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : doubleArray[1] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl double Assignment:-1570.889471817 Ct is: doubleArray[1] = -1570.889471817
target : doubleArray class spoon.support.reflect.code.CtLiteralImpl
statement is: doubleArray[2] = -1570.889471817, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : doubleArray[2] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl double Assignment:-1570.889471817 Ct is: doubleArray[2] = -1570.889471817
target : doubleArray class spoon.support.reflect.code.CtLiteralImpl
statement is: String[] stringArray = new String[5], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [5] Ct is: double[][] doubleArray = new double[3][6] isAssignment: false Array: new String[5] Elements: []
lengths: [3, 6] [5]
Dimension: [5] Ct is: double[] doubleArray = new double[2] isAssignment: false Array: new String[5] Elements: []
lengths: [2] [5]
Their type are: class [D String[]
Dimension: [5] Ct is: double[] doubleArray = new double[3] isAssignment: false Array: new String[5] Elements: []
lengths: [3] [5]
Their type are: class [D String[]
Dimension: [5] Ct is: String[] stringArray = new String[5] isAssignment: false Array: new String[5] Elements: []
lengths: [5] [5]
Their type are: class [Ljava.lang.String; String[]
statement is: stringArray[0] = "January", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"January" Ct is: stringArray[0] = "January"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[1] = "February", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[1] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"February" Ct is: stringArray[1] = "February"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[2] = "March", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[2] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"March" Ct is: stringArray[2] = "March"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[3] = "April", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[3] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"April" Ct is: stringArray[3] = "April"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[4] = "May", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[4] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"May" Ct is: stringArray[4] = "May"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: DefaultChartDataModel defaultChartDataModel = new DefaultChartDataModel(doubleArray, doubleArray, stringArray), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: CoordSystem coordSystem = new CoordSystem(defaultChartDataModel), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Axis axis = coordSystem.xaxis, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: coordSystem.xaxis is coordSystem
CtField is: protected de.progra.charting.Axis de.progra.charting.CoordSystem.xaxis Axis xaxis
CtField is: protected de.progra.charting.CoordSystemUtilities de.progra.charting.CoordSystem.c CoordSystemUtilities c
statement is: coordSystem.yaxis2 = axis, class spoon.support.reflect.code.CtAssignmentImpl
statement is: CoordSystemUtilities coordSystemUtilities = coordSystem.c, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: coordSystem.c is coordSystem
CtField is: protected de.progra.charting.Axis de.progra.charting.CoordSystem.xaxis Axis xaxis
CtField is: protected de.progra.charting.CoordSystemUtilities de.progra.charting.CoordSystem.c CoordSystemUtilities c
statement is: coordSystemUtilities.drawYAxisTicks(((Graphics2D) (null))), class spoon.support.reflect.code.CtInvocationImpl
invocation is: coordSystemUtilities.drawYAxisTicks(((Graphics2D) (null))) target is: coordSystemUtilities method is: drawYAxisTicks(Graphics2D)
TestCase is: double[][] doubleArray = new double[3][6];
double[] doubleArray = new double[2];
doubleArray[1] = (-1570.889471817);
doubleArray[1] = (double) doubleArray;
double[] doubleArray = new double[2];
doubleArray[1] = (double) doubleArray;
doubleArray[1] = (double) doubleArray;
doubleArray[1] = (double) doubleArray;
String[] stringArray = new String[5];
DefaultChartDataModel defaultChartDataModel = new DefaultChartDataModel((double[][]) doubleArray, doubleArray, stringArray);
CoordSystem coordSystem = new CoordSystem(defaultChartDataModel);

statement is: de.progra.charting.model.ObjectChartDataModel()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.progra.charting.model.ObjectChartDataModel
statement code is: ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel()
statement is: de.progra.charting.CoordSystem(Lde/progra/charting/model/ChartDataModel;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.progra.charting.CoordSystem
statement code is: CoordSystem coordSystem = new CoordSystem(arg0)
statement is: java.awt.image.BufferedImage(III)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.awt.image.BufferedImage
statement code is: BufferedImage bufferedImage = new BufferedImage(15, 20, 1)
statement is: getRotateInstance(DD)Ljava/awt/geom/AffineTransform; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.awt.geom.AffineTransform
statement code is: AffineTransform rotateInstance = AffineTransform.getRotateInstance((double) 15, (double) 20)
statement is: org.evosuite.testcase.statements.AssignmentStatement@d9563b2 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.awt.geom.AffineTransform
statement code is: coordSystem.y1transform = affineTransform
statement is: org.evosuite.testcase.statements.FieldStatement@6cc50fdc type is: class org.evosuite.testcase.statements.FieldStatement return type class de.progra.charting.CoordSystemUtilities
statement code is: CoordSystemUtilities coordSystemUtilities = coordSystem.c
statement is: createGraphics()Ljava/awt/Graphics2D; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.awt.Graphics2D
statement code is: Graphics2D createGraphics = bufferedImage.createGraphics()
statement is: drawYAxisTicks(Ljava/awt/Graphics2D;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: coordSystemUtilities.drawYAxisTicks(arg0)
test data is: ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel();
CoordSystem coordSystem = new CoordSystem(objectChartDataModel);
BufferedImage bufferedImage = new BufferedImage(15, 20, 1);
AffineTransform rotateInstance = AffineTransform.getRotateInstance((double) 15, (double) 20);
coordSystem.y1transform = rotateInstance;
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
Graphics2D createGraphics = bufferedImage.createGraphics();
coordSystemUtilities.drawYAxisTicks(createGraphics);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Create a BufferedImage with different dimensions and pixel values
        BufferedImage bufferedImage1 = new BufferedImage(20, 30, 1);
        bufferedImage1.setRGB(0, 0, 100);
        bufferedImage1.setRGB(9, 15, 200);
        bufferedImage1.setRGB(14, 28, 300);
        // Create a BufferedImage with different pixel values and rotation angle
        BufferedImage bufferedImage2 = new BufferedImage(15, 20, 1);
        bufferedImage2.setRGB(0, 0, 255);
        bufferedImage2.setRGB(9, 15, 100);
        bufferedImage2.setRGB(14, 28, 200);
        // Create an AffineTransform for rotation with different angles and scales
        AffineTransform rotateInstance1 = AffineTransform.getRotateInstance(((double) (30)), ((double) (25)));
        AffineTransform rotateInstance2 = AffineTransform.getRotateInstance(((double) (45)), ((double) (50)));
        // Create a CoordSystem object with different rotation angles and scales
        CoordSystem coordSystem1 = new CoordSystem(bufferedImage1);
        coordSystem1.y1transform = rotateInstance1;
        CoordSystem coordSystem2 = new CoordSystem(bufferedImage2);
        coordSystem2.y1transform = rotateInstance2;
        // Use the CoordSystem objects to draw Y axis ticks on different BufferedImages
        Graphics2D createGraphics1 = bufferedImage1.createGraphics();
        coordSystem1.c.drawYAxisTicks(createGraphics1);
        Graphics2D createGraphics2 = bufferedImage2.createGraphics();
        coordSystem2.c.drawYAxisTicks(createGraphics2);
    }
}
statement is: // Create a BufferedImage with different dimensions and pixel values
BufferedImage bufferedImage1 = new BufferedImage(20, 30, 1), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: bufferedImage1.setRGB(0, 0, 100), class spoon.support.reflect.code.CtInvocationImpl
invocation is: bufferedImage1.setRGB(0, 0, 100) target is: bufferedImage1 method is: setRGB(int,int,int)
statement is: bufferedImage1.setRGB(9, 15, 200), class spoon.support.reflect.code.CtInvocationImpl
invocation is: bufferedImage1.setRGB(9, 15, 200) target is: bufferedImage1 method is: setRGB(int,int,int)
statement is: bufferedImage1.setRGB(14, 28, 300), class spoon.support.reflect.code.CtInvocationImpl
invocation is: bufferedImage1.setRGB(14, 28, 300) target is: bufferedImage1 method is: setRGB(int,int,int)
statement is: // Create a BufferedImage with different pixel values and rotation angle
BufferedImage bufferedImage2 = new BufferedImage(15, 20, 1), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: bufferedImage2.setRGB(0, 0, 255), class spoon.support.reflect.code.CtInvocationImpl
invocation is: bufferedImage2.setRGB(0, 0, 255) target is: bufferedImage2 method is: setRGB(int,int,int)
statement is: bufferedImage2.setRGB(9, 15, 100), class spoon.support.reflect.code.CtInvocationImpl
invocation is: bufferedImage2.setRGB(9, 15, 100) target is: bufferedImage2 method is: setRGB(int,int,int)
statement is: bufferedImage2.setRGB(14, 28, 200), class spoon.support.reflect.code.CtInvocationImpl
invocation is: bufferedImage2.setRGB(14, 28, 200) target is: bufferedImage2 method is: setRGB(int,int,int)
statement is: // Create an AffineTransform for rotation with different angles and scales
AffineTransform rotateInstance1 = AffineTransform.getRotateInstance(((double) (30)), ((double) (25))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: AffineTransform.getRotateInstance(((double) (30)), ((double) (25))) target is: AffineTransform method is: getRotateInstance(double,double)
Matched Method is: getRotateInstance(DD)Ljava/awt/geom/AffineTransform;
statement is: AffineTransform rotateInstance2 = AffineTransform.getRotateInstance(((double) (45)), ((double) (50))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: AffineTransform.getRotateInstance(((double) (45)), ((double) (50))) target is: AffineTransform method is: getRotateInstance(double,double)
Matched Method is: getRotateInstance(DD)Ljava/awt/geom/AffineTransform;
statement is: // Create a CoordSystem object with different rotation angles and scales
CoordSystem coordSystem1 = new CoordSystem(bufferedImage1), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: coordSystem1.y1transform = rotateInstance1, class spoon.support.reflect.code.CtAssignmentImpl
statement is: CoordSystem coordSystem2 = new CoordSystem(bufferedImage2), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: coordSystem2.y1transform = rotateInstance2, class spoon.support.reflect.code.CtAssignmentImpl
statement is: // Use the CoordSystem objects to draw Y axis ticks on different BufferedImages
Graphics2D createGraphics1 = bufferedImage1.createGraphics(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: bufferedImage1.createGraphics() target is: bufferedImage1 method is: createGraphics()
source statement: java.awt.image.BufferedImage(III)V callee: VariableReference: Statement 2, type java.awt.image.BufferedImageindex is: 7
Matched Method is: createGraphics()Ljava/awt/Graphics2D;
statement is: coordSystem1.c.drawYAxisTicks(createGraphics1), class spoon.support.reflect.code.CtInvocationImpl
invocation is: coordSystem1.c.drawYAxisTicks(createGraphics1) target is: coordSystem1.c method is: drawYAxisTicks(Graphics2D)
statement is: Graphics2D createGraphics2 = bufferedImage2.createGraphics(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: bufferedImage2.createGraphics() target is: bufferedImage2 method is: createGraphics()
source statement: java.awt.image.BufferedImage(III)V callee: VariableReference: Statement 2, type java.awt.image.BufferedImageindex is: 7
Matched Method is: createGraphics()Ljava/awt/Graphics2D;
statement is: coordSystem2.c.drawYAxisTicks(createGraphics2), class spoon.support.reflect.code.CtInvocationImpl
invocation is: coordSystem2.c.drawYAxisTicks(createGraphics2) target is: coordSystem2.c method is: drawYAxisTicks(Graphics2D)
TestCase is: int _int = 20;
int _int = 30;
int _int = 1;
BufferedImage bufferedImage = new BufferedImage(_int, _int, _int);
int _int = 15;
int _int = 20;
int _int = 1;
BufferedImage bufferedImage = new BufferedImage(_int, _int, _int);
int _int = 30;
int _int = 25;
AffineTransform.getRotateInstance((double) _int, (double) _int);
int _int = 45;
int _int = 50;
AffineTransform.getRotateInstance((double) _int, (double) _int);
CoordSystem coordSystem = new CoordSystem((ChartDataModel) bufferedImage);
CoordSystem coordSystem = new CoordSystem((ChartDataModel) bufferedImage);
((BufferedImage) _int).createGraphics();
((BufferedImage) _int).createGraphics();

statement is: de.progra.charting.model.ObjectChartDataModel()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.progra.charting.model.ObjectChartDataModel
statement code is: ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel()
statement is: de.progra.charting.CoordSystem(Lde/progra/charting/model/ChartDataModel;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.progra.charting.CoordSystem
statement code is: CoordSystem coordSystem = new CoordSystem(arg0)
statement is: java.awt.image.BufferedImage(III)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.awt.image.BufferedImage
statement code is: BufferedImage bufferedImage = new BufferedImage(15, 20, 1)
statement is: getRotateInstance(DD)Ljava/awt/geom/AffineTransform; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.awt.geom.AffineTransform
statement code is: AffineTransform rotateInstance = AffineTransform.getRotateInstance((double) 15, (double) 20)
statement is: org.evosuite.testcase.statements.AssignmentStatement@ec7e25d1 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.awt.geom.AffineTransform
statement code is: coordSystem.y1transform = affineTransform
statement is: setPaintLabels(Z)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: coordSystem.setPaintLabels(false)
statement is: org.evosuite.testcase.statements.FieldStatement@1253b0f0 type is: class org.evosuite.testcase.statements.FieldStatement return type class de.progra.charting.CoordSystemUtilities
statement code is: CoordSystemUtilities coordSystemUtilities = coordSystem.c
statement is: createGraphics()Ljava/awt/Graphics2D; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.awt.Graphics2D
statement code is: Graphics2D createGraphics = bufferedImage.createGraphics()
statement is: drawYAxisTicks(Ljava/awt/Graphics2D;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: coordSystemUtilities.drawYAxisTicks(arg0)
test data is: ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel();
CoordSystem coordSystem = new CoordSystem(objectChartDataModel);
BufferedImage bufferedImage = new BufferedImage(15, 20, 1);
AffineTransform rotateInstance = AffineTransform.getRotateInstance((double) 15, (double) 20);
coordSystem.y1transform = rotateInstance;
coordSystem.setPaintLabels(false);
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
Graphics2D createGraphics = bufferedImage.createGraphics();
coordSystemUtilities.drawYAxisTicks(createGraphics);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel();
        CoordSystem coordSystem = new CoordSystem(objectChartDataModel);
        BufferedImage bufferedImage = new BufferedImage(15, 20, 1);
        AffineTransform rotateInstance = AffineTransform.getRotateInstance(((double) (30)), ((double) (40)));
        coordSystem.y1transform = rotateInstance;
        coordSystem.setPaintLabels(true);
        CoordSystemUtilities coordSystemUtilities = coordSystem.c;
        Graphics2D createGraphics = bufferedImage.createGraphics();
        coordSystemUtilities.drawYAxisTicks(createGraphics);
    }
}
statement is: ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: CoordSystem coordSystem = new CoordSystem(objectChartDataModel), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: BufferedImage bufferedImage = new BufferedImage(15, 20, 1), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: AffineTransform rotateInstance = AffineTransform.getRotateInstance(((double) (30)), ((double) (40))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: AffineTransform.getRotateInstance(((double) (30)), ((double) (40))) target is: AffineTransform method is: getRotateInstance(double,double)
Matched Method is: getRotateInstance(DD)Ljava/awt/geom/AffineTransform;
statement is: coordSystem.y1transform = rotateInstance, class spoon.support.reflect.code.CtAssignmentImpl
statement is: coordSystem.setPaintLabels(true), class spoon.support.reflect.code.CtInvocationImpl
invocation is: coordSystem.setPaintLabels(true) target is: coordSystem method is: setPaintLabels(boolean)
source statement: de.progra.charting.CoordSystem(Lde/progra/charting/model/ChartDataModel;)V callee: VariableReference: Statement 1, type de.progra.charting.CoordSystemindex is: 1
Matched Method is: setPaintLabels(Z)V
statement is: CoordSystemUtilities coordSystemUtilities = coordSystem.c, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: coordSystem.c is coordSystem
CtField is: protected de.progra.charting.CoordSystemUtilities de.progra.charting.CoordSystem.c CoordSystemUtilities c
statement is: Graphics2D createGraphics = bufferedImage.createGraphics(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: bufferedImage.createGraphics() target is: bufferedImage method is: createGraphics()
source statement: java.awt.image.BufferedImage(III)V callee: VariableReference: Statement 2, type java.awt.image.BufferedImageindex is: 5
Matched Method is: createGraphics()Ljava/awt/Graphics2D;
statement is: coordSystemUtilities.drawYAxisTicks(createGraphics), class spoon.support.reflect.code.CtInvocationImpl
invocation is: coordSystemUtilities.drawYAxisTicks(createGraphics) target is: coordSystemUtilities method is: drawYAxisTicks(Graphics2D)
TestCase is: ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel();
CoordSystem coordSystem = new CoordSystem(objectChartDataModel);
int _int = 15;
int _int = 20;
int _int = 1;
BufferedImage bufferedImage = new BufferedImage(_int, _int, _int);
int _int = 30;
int _int = 40;
AffineTransform.getRotateInstance((double) _int, (double) _int);
boolean _boolean = true;
coordSystem.setPaintLabels(_boolean);
((BufferedImage) _int).createGraphics();

statement is: de.progra.charting.model.ObjectChartDataModel()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.progra.charting.model.ObjectChartDataModel
statement code is: ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel()
statement is: de.progra.charting.CoordSystem(Lde/progra/charting/model/ChartDataModel;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.progra.charting.CoordSystem
statement code is: CoordSystem coordSystem = new CoordSystem(arg0)
statement is: java.awt.image.BufferedImage(III)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.awt.image.BufferedImage
statement code is: BufferedImage bufferedImage = new BufferedImage(15, 20, 1)
statement is: org.evosuite.testcase.statements.AssignmentStatement@16b49a65 type is: class org.evosuite.testcase.statements.AssignmentStatement return type boolean
statement code is: coordSystem.shouldPaintAltTick = false
statement is: getRotateInstance(DD)Ljava/awt/geom/AffineTransform; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.awt.geom.AffineTransform
statement code is: AffineTransform rotateInstance = AffineTransform.getRotateInstance((double) 15, (double) 20)
statement is: org.evosuite.testcase.statements.AssignmentStatement@88c7ab55 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.awt.geom.AffineTransform
statement code is: coordSystem.y1transform = affineTransform
statement is: org.evosuite.testcase.statements.FieldStatement@3feea67 type is: class org.evosuite.testcase.statements.FieldStatement return type class de.progra.charting.CoordSystemUtilities
statement code is: CoordSystemUtilities coordSystemUtilities = coordSystem.c
statement is: createGraphics()Ljava/awt/Graphics2D; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.awt.Graphics2D
statement code is: Graphics2D createGraphics = bufferedImage.createGraphics()
statement is: drawYAxisTicks(Ljava/awt/Graphics2D;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: coordSystemUtilities.drawYAxisTicks(arg0)
test data is: ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel();
CoordSystem coordSystem = new CoordSystem(objectChartDataModel);
BufferedImage bufferedImage = new BufferedImage(15, 20, 1);
coordSystem.shouldPaintAltTick = false;
AffineTransform rotateInstance = AffineTransform.getRotateInstance((double) 15, (double) 20);
coordSystem.y1transform = rotateInstance;
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
Graphics2D createGraphics = bufferedImage.createGraphics();
coordSystemUtilities.drawYAxisTicks(createGraphics);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel();
        CoordSystem coordSystem = new CoordSystem(objectChartDataModel);
        BufferedImage bufferedImage = new BufferedImage(640, 480, 1);
        coordSystem.shouldPaintAltTick = false;
        AffineTransform rotateInstance = AffineTransform.getRotateInstance(((double) (30)), ((double) (200)));
        coordSystem.x1transform = rotateInstance;
        CoordSystemUtilities coordSystemUtilities = coordSystem.c;
        Graphics2D createGraphics = bufferedImage.createGraphics();
        coordSystemUtilities.drawXAxisTicks(createGraphics);
    }
}
statement is: ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: CoordSystem coordSystem = new CoordSystem(objectChartDataModel), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: BufferedImage bufferedImage = new BufferedImage(640, 480, 1), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: coordSystem.shouldPaintAltTick = false, class spoon.support.reflect.code.CtAssignmentImpl
statement is: AffineTransform rotateInstance = AffineTransform.getRotateInstance(((double) (30)), ((double) (200))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: AffineTransform.getRotateInstance(((double) (30)), ((double) (200))) target is: AffineTransform method is: getRotateInstance(double,double)
Matched Method is: getRotateInstance(DD)Ljava/awt/geom/AffineTransform;
statement is: coordSystem.x1transform = rotateInstance, class spoon.support.reflect.code.CtAssignmentImpl
statement is: CoordSystemUtilities coordSystemUtilities = coordSystem.c, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: coordSystem.c is coordSystem
CtField is: protected de.progra.charting.CoordSystemUtilities de.progra.charting.CoordSystem.c CoordSystemUtilities c
statement is: Graphics2D createGraphics = bufferedImage.createGraphics(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: bufferedImage.createGraphics() target is: bufferedImage method is: createGraphics()
source statement: java.awt.image.BufferedImage(III)V callee: VariableReference: Statement 2, type java.awt.image.BufferedImageindex is: 5
Matched Method is: createGraphics()Ljava/awt/Graphics2D;
statement is: coordSystemUtilities.drawXAxisTicks(createGraphics), class spoon.support.reflect.code.CtInvocationImpl
invocation is: coordSystemUtilities.drawXAxisTicks(createGraphics) target is: coordSystemUtilities method is: drawXAxisTicks(Graphics2D)
TestCase is: ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel();
CoordSystem coordSystem = new CoordSystem(objectChartDataModel);
int _int = 640;
int _int = 480;
int _int = 1;
BufferedImage bufferedImage = new BufferedImage(_int, _int, _int);
int _int = 30;
int _int = 200;
AffineTransform.getRotateInstance((double) _int, (double) _int);
((BufferedImage) _int).createGraphics();

statement is: org.evosuite.testcase.statements.ArrayStatement@18ad455d type is: class org.evosuite.testcase.statements.ArrayStatement return type class [[D
statement code is: double[][] doubleArray = new double[1][8]
statement is: org.evosuite.testcase.statements.ArrayStatement@968f928 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [D
statement code is: double[] doubleArray = new double[1]
statement is: org.evosuite.testcase.statements.AssignmentStatement@9a6d8c5f type is: class org.evosuite.testcase.statements.AssignmentStatement return type double
statement code is: doubleArray[0] = 4.000000000000002
statement is: org.evosuite.testcase.statements.AssignmentStatement@a429aec2 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class [D
statement code is: doubleArray[0] = doubleArray
statement is: org.evosuite.testcase.statements.ArrayStatement@c8c28046 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [Ljava.lang.String;
statement code is: String[] stringArray = new String[2]
statement is: de.progra.charting.model.EditableChartDataModel([[D[D[Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.progra.charting.model.EditableChartDataModel
statement code is: EditableChartDataModel editableChartDataModel = new EditableChartDataModel(arg0, arg1, arg2)
statement is: javax.swing.JSpinner()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class javax.swing.JSpinner
statement code is: JSpinner jSpinner = new JSpinner()
statement is: javax.swing.JSpinner$NumberEditor(Ljavax/swing/JSpinner;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class javax.swing.JSpinner$NumberEditor
statement code is: JSpinner.NumberEditor jSpinner_NumberEditor = new JSpinner.NumberEditor(arg0)
statement is: getFormat()Ljava/text/DecimalFormat; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.text.DecimalFormat
statement code is: DecimalFormat format = jSpinner_NumberEditor.getFormat()
statement is: de.progra.charting.CoordSystem(Lde/progra/charting/model/ChartDataModel;Ljava/text/DecimalFormat;ZZZ)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.progra.charting.CoordSystem
statement code is: CoordSystem coordSystem = new CoordSystem(arg0, arg1, true, true, false)
statement is: org.evosuite.testcase.statements.FieldStatement@3c299203 type is: class org.evosuite.testcase.statements.FieldStatement return type class de.progra.charting.CoordSystemUtilities
statement code is: CoordSystemUtilities coordSystemUtilities = coordSystem.c
statement is: getXAxisLine2D()Ljava/awt/geom/Line2D; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.awt.geom.Line2D
statement code is: Line2D xAxisLine2D = coordSystemUtilities.getXAxisLine2D()
test data is: double[][] doubleArray = new double[1][8];
double[] doubleArray = new double[1];
doubleArray[0] = 4.000000000000002;
doubleArray[0] = doubleArray;
String[] stringArray = new String[2];
EditableChartDataModel editableChartDataModel = new EditableChartDataModel(doubleArray, doubleArray, stringArray);
JSpinner jSpinner = new JSpinner();
JSpinner.NumberEditor jSpinner_NumberEditor = new JSpinner.NumberEditor(jSpinner);
DecimalFormat format = jSpinner_NumberEditor.getFormat();
CoordSystem coordSystem = new CoordSystem(editableChartDataModel, format, true, true, false);
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
coordSystemUtilities.getXAxisLine2D();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        double[][] doubleArray = new double[][]{ new double[]{ 1.0, 3.14, 2.78 }, new double[]{ 5.0, 9.0, 10.0 } };
        String[] stringArray = new String[]{ "Apple", "Banana", "Orange" };
        EditableChartDataModel editableChartDataModel = new EditableChartDataModel(doubleArray, doubleArray, stringArray);
        JSpinner jSpinner = new JSpinner();
        JSpinner.NumberEditor jSpinner_NumberEditor = new JSpinner.NumberEditor(jSpinner);
        DecimalFormat format = jSpinner_NumberEditor.getFormat();
        CoordSystem coordSystem = new CoordSystem(editableChartDataModel, format, true, true, false);
        CoordSystemUtilities coordSystemUtilities = coordSystem.c;
        coordSystemUtilities.getXAxisLine2D();
    }
}
statement is: double[][] doubleArray = new double[][]{ new double[]{ 1.0, 3.14, 2.78 }, new double[]{ 5.0, 9.0, 10.0 } }, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [] Ct is: double[][] doubleArray = new double[1][8] isAssignment: false Array: new double[][]{ new double[]{ 1.0, 3.14, 2.78 }, new double[]{ 5.0, 9.0, 10.0 } } Elements: [new double[]{ 1.0, 3.14, 2.78 }, new double[]{ 5.0, 9.0, 10.0 }]
lengths: [1, 8] []
Dimension: [] Ct is: double[] doubleArray = new double[1] isAssignment: false Array: new double[][]{ new double[]{ 1.0, 3.14, 2.78 }, new double[]{ 5.0, 9.0, 10.0 } } Elements: [new double[]{ 1.0, 3.14, 2.78 }, new double[]{ 5.0, 9.0, 10.0 }]
lengths: [1] []
Dimension: [] Ct is: String[] stringArray = new String[2] isAssignment: false Array: new double[][]{ new double[]{ 1.0, 3.14, 2.78 }, new double[]{ 5.0, 9.0, 10.0 } } Elements: [new double[]{ 1.0, 3.14, 2.78 }, new double[]{ 5.0, 9.0, 10.0 }]
lengths: [2] []
statement is: String[] stringArray = new String[]{ "Apple", "Banana", "Orange" }, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [] Ct is: double[][] doubleArray = new double[1][8] isAssignment: false Array: new String[]{ "Apple", "Banana", "Orange" } Elements: ["Apple", "Banana", "Orange"]
lengths: [1, 8] []
Dimension: [] Ct is: double[] doubleArray = new double[1] isAssignment: false Array: new String[]{ "Apple", "Banana", "Orange" } Elements: ["Apple", "Banana", "Orange"]
lengths: [1] []
Dimension: [] Ct is: String[] stringArray = new String[2] isAssignment: false Array: new String[]{ "Apple", "Banana", "Orange" } Elements: ["Apple", "Banana", "Orange"]
lengths: [2] []
statement is: EditableChartDataModel editableChartDataModel = new EditableChartDataModel(doubleArray, doubleArray, stringArray), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: de.progra.charting.model.EditableChartDataModel([[D[D[Ljava/lang/String;)V
statement is: JSpinner jSpinner = new JSpinner(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JSpinner.NumberEditor jSpinner_NumberEditor = new JSpinner.NumberEditor(jSpinner), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: DecimalFormat format = jSpinner_NumberEditor.getFormat(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: jSpinner_NumberEditor.getFormat() target is: jSpinner_NumberEditor method is: getFormat()
statement is: CoordSystem coordSystem = new CoordSystem(editableChartDataModel, format, true, true, false), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: CoordSystemUtilities coordSystemUtilities = coordSystem.c, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: coordSystem.c is coordSystem
CtField is: protected de.progra.charting.CoordSystemUtilities de.progra.charting.CoordSystem.c CoordSystemUtilities c
statement is: coordSystemUtilities.getXAxisLine2D(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: coordSystemUtilities.getXAxisLine2D() target is: coordSystemUtilities method is: getXAxisLine2D()
TestCase is: JSpinner jSpinner = new JSpinner();
boolean _boolean = true;
boolean _boolean = true;
boolean _boolean = false;
CoordSystem coordSystem = new CoordSystem((ChartDataModel) _boolean, (DecimalFormat) _boolean, _boolean, true, false);

statement is: org.evosuite.testcase.statements.ArrayStatement@a8b991c type is: class org.evosuite.testcase.statements.ArrayStatement return type class [[D
statement code is: double[][] doubleArray = new double[3][6]
statement is: org.evosuite.testcase.statements.ArrayStatement@58432278 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [D
statement code is: double[] doubleArray = new double[2]
statement is: org.evosuite.testcase.statements.AssignmentStatement@67815bb9 type is: class org.evosuite.testcase.statements.AssignmentStatement return type double
statement code is: doubleArray[0] = (-1570.889471817)
statement is: org.evosuite.testcase.statements.AssignmentStatement@f6befec1 type is: class org.evosuite.testcase.statements.AssignmentStatement return type double
statement code is: doubleArray[1] = (-1306.02151431)
statement is: org.evosuite.testcase.statements.AssignmentStatement@fda02e32 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class [D
statement code is: doubleArray[0] = doubleArray
statement is: org.evosuite.testcase.statements.AssignmentStatement@682658aa type is: class org.evosuite.testcase.statements.AssignmentStatement return type class [D
statement code is: doubleArray[1] = doubleArray
statement is: org.evosuite.testcase.statements.AssignmentStatement@221dc13 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class [D
statement code is: doubleArray[2] = doubleArray[0]
statement is: org.evosuite.testcase.statements.ArrayStatement@5305c2b0 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [Ljava.lang.String;
statement code is: String[] stringArray = new String[5]
statement is: de.progra.charting.model.DefaultChartDataModel([[D[D[Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.progra.charting.model.DefaultChartDataModel
statement code is: DefaultChartDataModel defaultChartDataModel = new DefaultChartDataModel(arg0, arg1, arg2)
statement is: de.progra.charting.CoordSystem(Lde/progra/charting/model/ChartDataModel;Ljava/lang/String;Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.progra.charting.CoordSystem
statement code is: CoordSystem coordSystem = new CoordSystem(arg0, "n~sMnv]\"r,}Bi?W2<", "ZOT'c")
statement is: org.evosuite.testcase.statements.FieldStatement@11423b77 type is: class org.evosuite.testcase.statements.FieldStatement return type class de.progra.charting.CoordSystemUtilities
statement code is: CoordSystemUtilities coordSystemUtilities = coordSystem.c
statement is: getXAxisLine2D()Ljava/awt/geom/Line2D; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.awt.geom.Line2D
statement code is: Line2D xAxisLine2D = coordSystemUtilities.getXAxisLine2D()
test data is: double[][] doubleArray = new double[3][6];
double[] doubleArray = new double[2];
doubleArray[0] = (-1570.889471817);
doubleArray[1] = (-1306.02151431);
doubleArray[0] = doubleArray;
doubleArray[1] = doubleArray;
doubleArray[2] = doubleArray[0];
String[] stringArray = new String[5];
DefaultChartDataModel defaultChartDataModel = new DefaultChartDataModel(doubleArray, doubleArray, stringArray);
CoordSystem coordSystem = new CoordSystem(defaultChartDataModel, "n~sMnv]\"r,}Bi?W2<", "ZOT'c");
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
coordSystemUtilities.getXAxisLine2D();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        double[][] doubleArray = new double[3][6];
        double[] doubleArray = new double[2];
        doubleArray[0] = -1570.889471817;
        doubleArray[1] = -1306.02151431;
        doubleArray[2] = -1023.08174178;
        doubleArray[3] = -995.33613916;
        doubleArray[4] = -966.58052654;
        doubleArray[5] = -937.82491392;
        String[] stringArray = new String[5];
        stringArray[0] = "A";
        stringArray[1] = "B";
        stringArray[2] = "C";
        stringArray[3] = "D";
        stringArray[4] = "E";
        DefaultChartDataModel defaultChartDataModel = new DefaultChartDataModel(doubleArray, doubleArray, stringArray);
        CoordSystem coordSystem = new CoordSystem(defaultChartDataModel, "n~sMnv]\"r,}Bi?W2<", "ZOT'c");
        CoordSystemUtilities coordSystemUtilities = coordSystem.getCoordinateSystemUtilities();
        Line2D xAxisLine2D = coordSystemUtilities.getXAxisLine2D();
    }
}
statement is: double[][] doubleArray = new double[3][6], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [3, 6] Ct is: double[][] doubleArray = new double[3][6] isAssignment: false Array: new double[3][6] Elements: []
lengths: [3, 6] [3, 6]
Their type are: class [[D double[][]
statement is: double[] doubleArray = new double[2], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [2] Ct is: double[][] doubleArray = new double[3][6] isAssignment: false Array: new double[2] Elements: []
lengths: [3, 6] [2]
Dimension: [2] Ct is: double[] doubleArray = new double[2] isAssignment: false Array: new double[2] Elements: []
lengths: [2] [2]
Their type are: class [D double[]
statement is: doubleArray[0] = -1570.889471817, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : doubleArray[0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl double Assignment:-1570.889471817 Ct is: doubleArray[0] = -1570.889471817
target : doubleArray class spoon.support.reflect.code.CtLiteralImpl
statement is: doubleArray[1] = -1306.02151431, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : doubleArray[1] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl double Assignment:-1306.02151431 Ct is: doubleArray[1] = -1306.02151431
target : doubleArray class spoon.support.reflect.code.CtLiteralImpl
statement is: doubleArray[2] = -1023.08174178, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : doubleArray[2] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl double Assignment:-1023.08174178 Ct is: doubleArray[2] = -1023.08174178
target : doubleArray class spoon.support.reflect.code.CtLiteralImpl
statement is: doubleArray[3] = -995.33613916, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : doubleArray[3] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl double Assignment:-995.33613916 Ct is: doubleArray[3] = -995.33613916
target : doubleArray class spoon.support.reflect.code.CtLiteralImpl
statement is: doubleArray[4] = -966.58052654, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : doubleArray[4] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl double Assignment:-966.58052654 Ct is: doubleArray[4] = -966.58052654
target : doubleArray class spoon.support.reflect.code.CtLiteralImpl
statement is: doubleArray[5] = -937.82491392, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : doubleArray[5] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl double Assignment:-937.82491392 Ct is: doubleArray[5] = -937.82491392
target : doubleArray class spoon.support.reflect.code.CtLiteralImpl
statement is: String[] stringArray = new String[5], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [5] Ct is: double[][] doubleArray = new double[3][6] isAssignment: false Array: new String[5] Elements: []
lengths: [3, 6] [5]
Dimension: [5] Ct is: double[] doubleArray = new double[2] isAssignment: false Array: new String[5] Elements: []
lengths: [2] [5]
Their type are: class [D String[]
Dimension: [5] Ct is: String[] stringArray = new String[5] isAssignment: false Array: new String[5] Elements: []
lengths: [5] [5]
Their type are: class [Ljava.lang.String; String[]
statement is: stringArray[0] = "A", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"A" Ct is: stringArray[0] = "A"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[1] = "B", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[1] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"B" Ct is: stringArray[1] = "B"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[2] = "C", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[2] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"C" Ct is: stringArray[2] = "C"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[3] = "D", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[3] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"D" Ct is: stringArray[3] = "D"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[4] = "E", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[4] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"E" Ct is: stringArray[4] = "E"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: DefaultChartDataModel defaultChartDataModel = new DefaultChartDataModel(doubleArray, doubleArray, stringArray), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: CoordSystem coordSystem = new CoordSystem(defaultChartDataModel, "n~sMnv]\"r,}Bi?W2<", "ZOT'c"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: CoordSystemUtilities coordSystemUtilities = coordSystem.getCoordinateSystemUtilities(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: coordSystem.getCoordinateSystemUtilities() target is: coordSystem method is: getCoordinateSystemUtilities()
statement is: Line2D xAxisLine2D = coordSystemUtilities.getXAxisLine2D(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: coordSystemUtilities.getXAxisLine2D() target is: coordSystemUtilities method is: getXAxisLine2D()
TestCase is: double[][] doubleArray = new double[3][6];
double[] doubleArray = new double[2];
doubleArray[0] = (-1570.889471817);
doubleArray[1] = (-1306.02151431);
doubleArray[0] = (-1570.889471817);
doubleArray[0] = (-1570.889471817);
doubleArray[0] = (-1570.889471817);
doubleArray[0] = (-1570.889471817);
String[] stringArray = new String[5];
DefaultChartDataModel defaultChartDataModel = new DefaultChartDataModel((double[][]) doubleArray, doubleArray, stringArray);
String string = "n~sMnv]\"r,}Bi?W2<";
String string = "ZOT'c";
CoordSystem coordSystem = new CoordSystem(defaultChartDataModel, string, string);

statement is: org.evosuite.testcase.statements.ArrayStatement@b404970b type is: class org.evosuite.testcase.statements.ArrayStatement return type class [[I
statement code is: int[][] intArray = new int[3][5]
statement is: org.evosuite.testcase.statements.ArrayStatement@bce2a13e type is: class org.evosuite.testcase.statements.ArrayStatement return type class [D
statement code is: double[] doubleArray = new double[6]
statement is: org.evosuite.testcase.statements.AssignmentStatement@facc8980 type is: class org.evosuite.testcase.statements.AssignmentStatement return type double
statement code is: doubleArray[0] = (double) 1000
statement is: org.evosuite.testcase.statements.AssignmentStatement@466892e3 type is: class org.evosuite.testcase.statements.AssignmentStatement return type double
statement code is: doubleArray[1] = (double) 1000
statement is: org.evosuite.testcase.statements.AssignmentStatement@61982f81 type is: class org.evosuite.testcase.statements.AssignmentStatement return type double
statement code is: doubleArray[2] = (double) 1000
statement is: org.evosuite.testcase.statements.AssignmentStatement@c0328ab9 type is: class org.evosuite.testcase.statements.AssignmentStatement return type double
statement code is: doubleArray[3] = (double) 1000
statement is: org.evosuite.testcase.statements.AssignmentStatement@889f7560 type is: class org.evosuite.testcase.statements.AssignmentStatement return type double
statement code is: doubleArray[4] = (double) 1000
statement is: org.evosuite.testcase.statements.AssignmentStatement@a9fd01d5 type is: class org.evosuite.testcase.statements.AssignmentStatement return type double
statement code is: doubleArray[5] = (double) 1000
statement is: org.evosuite.testcase.statements.ArrayStatement@fa38c16f type is: class org.evosuite.testcase.statements.ArrayStatement return type class [Ljava.lang.String;
statement code is: String[] stringArray = new String[6]
statement is: de.progra.charting.model.EditableChartDataModel([[I[D[Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.progra.charting.model.EditableChartDataModel
statement code is: EditableChartDataModel editableChartDataModel = new EditableChartDataModel(arg0, arg1, arg2)
statement is: de.progra.charting.CoordSystem(Lde/progra/charting/model/ChartDataModel;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.progra.charting.CoordSystem
statement code is: CoordSystem coordSystem = new CoordSystem(arg0)
statement is: org.evosuite.testcase.statements.FieldStatement@29c35b39 type is: class org.evosuite.testcase.statements.FieldStatement return type class de.progra.charting.CoordSystemUtilities
statement code is: CoordSystemUtilities coordSystemUtilities = coordSystem.c
statement is: getYAxisLine2D()Ljava/awt/geom/Line2D; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.awt.geom.Line2D
statement code is: Line2D yAxisLine2D = coordSystemUtilities.getYAxisLine2D()
test data is: int[][] intArray = new int[3][5];
double[] doubleArray = new double[6];
doubleArray[0] = (double) 1000;
doubleArray[1] = (double) 1000;
doubleArray[2] = (double) 1000;
doubleArray[3] = (double) 1000;
doubleArray[4] = (double) 1000;
doubleArray[5] = (double) 1000;
String[] stringArray = new String[6];
EditableChartDataModel editableChartDataModel = new EditableChartDataModel(intArray, doubleArray, stringArray);
CoordSystem coordSystem = new CoordSystem(editableChartDataModel);
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
coordSystemUtilities.getYAxisLine2D();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        int[][] intArray = new int[3][5];
        intArray[0][0] = 1;
        intArray[0][1] = 2;
        intArray[0][2] = 3;
        intArray[0][3] = 4;
        intArray[0][4] = 5;
        intArray[1][0] = 6;
        intArray[1][1] = 7;
        intArray[1][2] = 8;
        intArray[1][3] = 9;
        intArray[1][4] = 10;
        intArray[2][0] = 11;
        intArray[2][1] = 12;
        intArray[2][2] = 13;
        intArray[2][3] = 14;
        intArray[2][4] = 15;
        double[] doubleArray = new double[6];
        doubleArray[0] = ((double) (1.1));
        doubleArray[1] = ((double) (2.2));
        doubleArray[2] = ((double) (3.3));
        doubleArray[3] = ((double) (4.4));
        doubleArray[4] = ((double) (5.5));
        doubleArray[5] = ((double) (6.6));
        String[] stringArray = new String[6];
        stringArray[0] = "A";
        stringArray[1] = "B";
        stringArray[2] = "C";
        stringArray[3] = "D";
        stringArray[4] = "E";
        stringArray[5] = "F";
        EditableChartDataModel editableChartDataModel = new EditableChartDataModel(intArray, doubleArray, stringArray);
        CoordSystem coordSystem = new CoordSystem(editableChartDataModel);
        CoordSystemUtilities coordSystemUtilities = coordSystem.c;
        coordSystemUtilities.getYAxisLine2D();
    }
}
statement is: int[][] intArray = new int[3][5], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [3, 5] Ct is: int[][] intArray = new int[3][5] isAssignment: false Array: new int[3][5] Elements: []
lengths: [3, 5] [3, 5]
Their type are: class [[I int[][]
statement is: intArray[0][0] = 1, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : intArray[0][0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl int Assignment:1 Ct is: intArray[0][0] = 1
target : intArray[0] class spoon.support.reflect.code.CtLiteralImpl
statement is: intArray[0][1] = 2, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : intArray[0][1] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl int Assignment:2 Ct is: intArray[0][1] = 2
target : intArray[0] class spoon.support.reflect.code.CtLiteralImpl
statement is: intArray[0][2] = 3, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : intArray[0][2] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl int Assignment:3 Ct is: intArray[0][2] = 3
target : intArray[0] class spoon.support.reflect.code.CtLiteralImpl
statement is: intArray[0][3] = 4, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : intArray[0][3] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl int Assignment:4 Ct is: intArray[0][3] = 4
target : intArray[0] class spoon.support.reflect.code.CtLiteralImpl
statement is: intArray[0][4] = 5, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : intArray[0][4] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl int Assignment:5 Ct is: intArray[0][4] = 5
target : intArray[0] class spoon.support.reflect.code.CtLiteralImpl
statement is: intArray[1][0] = 6, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : intArray[1][0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl int Assignment:6 Ct is: intArray[1][0] = 6
target : intArray[1] class spoon.support.reflect.code.CtLiteralImpl
statement is: intArray[1][1] = 7, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : intArray[1][1] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl int Assignment:7 Ct is: intArray[1][1] = 7
target : intArray[1] class spoon.support.reflect.code.CtLiteralImpl
statement is: intArray[1][2] = 8, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : intArray[1][2] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl int Assignment:8 Ct is: intArray[1][2] = 8
target : intArray[1] class spoon.support.reflect.code.CtLiteralImpl
statement is: intArray[1][3] = 9, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : intArray[1][3] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl int Assignment:9 Ct is: intArray[1][3] = 9
target : intArray[1] class spoon.support.reflect.code.CtLiteralImpl
statement is: intArray[1][4] = 10, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : intArray[1][4] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl int Assignment:10 Ct is: intArray[1][4] = 10
target : intArray[1] class spoon.support.reflect.code.CtLiteralImpl
statement is: intArray[2][0] = 11, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : intArray[2][0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl int Assignment:11 Ct is: intArray[2][0] = 11
target : intArray[2] class spoon.support.reflect.code.CtLiteralImpl
statement is: intArray[2][1] = 12, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : intArray[2][1] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl int Assignment:12 Ct is: intArray[2][1] = 12
target : intArray[2] class spoon.support.reflect.code.CtLiteralImpl
statement is: intArray[2][2] = 13, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : intArray[2][2] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl int Assignment:13 Ct is: intArray[2][2] = 13
target : intArray[2] class spoon.support.reflect.code.CtLiteralImpl
statement is: intArray[2][3] = 14, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : intArray[2][3] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl int Assignment:14 Ct is: intArray[2][3] = 14
target : intArray[2] class spoon.support.reflect.code.CtLiteralImpl
statement is: intArray[2][4] = 15, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : intArray[2][4] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl int Assignment:15 Ct is: intArray[2][4] = 15
target : intArray[2] class spoon.support.reflect.code.CtLiteralImpl
statement is: double[] doubleArray = new double[6], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [6] Ct is: int[][] intArray = new int[3][5] isAssignment: false Array: new double[6] Elements: []
lengths: [3, 5] [6]
Dimension: [6] Ct is: double[] doubleArray = new double[6] isAssignment: false Array: new double[6] Elements: []
lengths: [6] [6]
Their type are: class [D double[]
statement is: doubleArray[0] = ((double) (1.1)), class spoon.support.reflect.code.CtAssignmentImpl
Assigned : doubleArray[0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl double Assignment:((double) (1.1)) Ct is: doubleArray[0] = ((double) (1.1))
target : doubleArray class spoon.support.reflect.code.CtLiteralImpl
statement is: doubleArray[1] = ((double) (2.2)), class spoon.support.reflect.code.CtAssignmentImpl
Assigned : doubleArray[1] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl double Assignment:((double) (2.2)) Ct is: doubleArray[1] = ((double) (2.2))
target : doubleArray class spoon.support.reflect.code.CtLiteralImpl
statement is: doubleArray[2] = ((double) (3.3)), class spoon.support.reflect.code.CtAssignmentImpl
Assigned : doubleArray[2] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl double Assignment:((double) (3.3)) Ct is: doubleArray[2] = ((double) (3.3))
target : doubleArray class spoon.support.reflect.code.CtLiteralImpl
statement is: doubleArray[3] = ((double) (4.4)), class spoon.support.reflect.code.CtAssignmentImpl
Assigned : doubleArray[3] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl double Assignment:((double) (4.4)) Ct is: doubleArray[3] = ((double) (4.4))
target : doubleArray class spoon.support.reflect.code.CtLiteralImpl
statement is: doubleArray[4] = ((double) (5.5)), class spoon.support.reflect.code.CtAssignmentImpl
Assigned : doubleArray[4] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl double Assignment:((double) (5.5)) Ct is: doubleArray[4] = ((double) (5.5))
target : doubleArray class spoon.support.reflect.code.CtLiteralImpl
statement is: doubleArray[5] = ((double) (6.6)), class spoon.support.reflect.code.CtAssignmentImpl
Assigned : doubleArray[5] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl double Assignment:((double) (6.6)) Ct is: doubleArray[5] = ((double) (6.6))
target : doubleArray class spoon.support.reflect.code.CtLiteralImpl
statement is: String[] stringArray = new String[6], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [6] Ct is: int[][] intArray = new int[3][5] isAssignment: false Array: new String[6] Elements: []
lengths: [3, 5] [6]
Dimension: [6] Ct is: double[] doubleArray = new double[6] isAssignment: false Array: new String[6] Elements: []
lengths: [6] [6]
Their type are: class [D String[]
Dimension: [6] Ct is: String[] stringArray = new String[6] isAssignment: false Array: new String[6] Elements: []
lengths: [6] [6]
Their type are: class [Ljava.lang.String; String[]
statement is: stringArray[0] = "A", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"A" Ct is: stringArray[0] = "A"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[1] = "B", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[1] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"B" Ct is: stringArray[1] = "B"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[2] = "C", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[2] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"C" Ct is: stringArray[2] = "C"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[3] = "D", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[3] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"D" Ct is: stringArray[3] = "D"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[4] = "E", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[4] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"E" Ct is: stringArray[4] = "E"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[5] = "F", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[5] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"F" Ct is: stringArray[5] = "F"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: EditableChartDataModel editableChartDataModel = new EditableChartDataModel(intArray, doubleArray, stringArray), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: CoordSystem coordSystem = new CoordSystem(editableChartDataModel), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: CoordSystemUtilities coordSystemUtilities = coordSystem.c, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: coordSystem.c is coordSystem
CtField is: protected de.progra.charting.CoordSystemUtilities de.progra.charting.CoordSystem.c CoordSystemUtilities c
statement is: coordSystemUtilities.getYAxisLine2D(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: coordSystemUtilities.getYAxisLine2D() target is: coordSystemUtilities method is: getYAxisLine2D()
TestCase is: int[][] intArray = new int[3][5];
double[] doubleArray = new double[6];
double _double = 1.1;
doubleArray[0] = _double;
double _double = 2.2;
doubleArray[1] = _double;
double _double = 3.3;
doubleArray[2] = _double;
double _double = 4.4;
doubleArray[3] = _double;
double _double = 5.5;
doubleArray[4] = _double;
double _double = 6.6;
doubleArray[5] = _double;
String[] stringArray = new String[6];
EditableChartDataModel editableChartDataModel = new EditableChartDataModel(intArray, doubleArray, stringArray);
CoordSystem coordSystem = new CoordSystem(editableChartDataModel);

statement is: org.evosuite.testcase.statements.ArrayStatement@65907dfb type is: class org.evosuite.testcase.statements.ArrayStatement return type class [[D
statement code is: double[][] doubleArray = new double[3][6]
statement is: org.evosuite.testcase.statements.ArrayStatement@10943bd2 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [D
statement code is: double[] doubleArray = new double[2]
statement is: org.evosuite.testcase.statements.AssignmentStatement@34f6b7dc type is: class org.evosuite.testcase.statements.AssignmentStatement return type double
statement code is: doubleArray[0] = (-1570.889471817)
statement is: org.evosuite.testcase.statements.AssignmentStatement@c942b92e type is: class org.evosuite.testcase.statements.AssignmentStatement return type double
statement code is: doubleArray[1] = (-1570.889471817)
statement is: org.evosuite.testcase.statements.ArrayStatement@d1e9478d type is: class org.evosuite.testcase.statements.ArrayStatement return type class [Ljava.lang.String;
statement code is: String[] stringArray = new String[5]
statement is: de.progra.charting.model.DefaultChartDataModel([[D[D[Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.progra.charting.model.DefaultChartDataModel
statement code is: DefaultChartDataModel defaultChartDataModel = new DefaultChartDataModel(arg0, arg1, arg2)
statement is: de.progra.charting.CoordSystem(Lde/progra/charting/model/ChartDataModel;Ljava/lang/String;Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.progra.charting.CoordSystem
statement code is: CoordSystem coordSystem = new CoordSystem(arg0, "", "c'c")
statement is: org.evosuite.testcase.statements.FieldStatement@43231e5 type is: class org.evosuite.testcase.statements.FieldStatement return type class de.progra.charting.CoordSystemUtilities
statement code is: CoordSystemUtilities coordSystemUtilities = coordSystem.c
statement is: org.evosuite.testcase.statements.FieldStatement@ae546a7a type is: class org.evosuite.testcase.statements.FieldStatement return type class de.progra.charting.Axis
statement code is: Axis axis = coordSystem.yaxis
statement is: org.evosuite.testcase.statements.AssignmentStatement@f98958e5 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class de.progra.charting.Axis
statement code is: coordSystem.yaxis2 = axis
statement is: getYAxisLine2D()Ljava/awt/geom/Line2D; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.awt.geom.Line2D
statement code is: Line2D yAxisLine2D = coordSystemUtilities.getYAxisLine2D()
test data is: double[][] doubleArray = new double[3][6];
double[] doubleArray = new double[2];
doubleArray[0] = (-1570.889471817);
doubleArray[1] = (-1570.889471817);
String[] stringArray = new String[5];
DefaultChartDataModel defaultChartDataModel = new DefaultChartDataModel(doubleArray, doubleArray, stringArray);
CoordSystem coordSystem = new CoordSystem(defaultChartDataModel, "", "c'c");
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
Axis axis = coordSystem.yaxis;
coordSystem.yaxis2 = axis;
coordSystemUtilities.getYAxisLine2D();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        double[][] doubleArray = new double[][]{ new double[]{ -1570.889471817, -1570.889471817 }, new double[]{ -1570.889471817, -1570.889471817 } };
        String[] stringArray = new String[]{ "", "" };
        DefaultChartDataModel defaultChartDataModel = new DefaultChartDataModel(doubleArray, doubleArray, stringArray);
        CoordSystem coordSystem = new CoordSystem(defaultChartDataModel, "", "c'c");
        CoordSystemUtilities coordSystemUtilities = coordSystem.c;
        Axis axis = coordSystem.yaxis;
        coordSystem.yaxis2 = axis;
        coordSystemUtilities.getYAxisLine2D();
    }
}
statement is: double[][] doubleArray = new double[][]{ new double[]{ -1570.889471817, -1570.889471817 }, new double[]{ -1570.889471817, -1570.889471817 } }, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [] Ct is: double[][] doubleArray = new double[3][6] isAssignment: false Array: new double[][]{ new double[]{ -1570.889471817, -1570.889471817 }, new double[]{ -1570.889471817, -1570.889471817 } } Elements: [new double[]{ -1570.889471817, -1570.889471817 }, new double[]{ -1570.889471817, -1570.889471817 }]
lengths: [3, 6] []
Dimension: [] Ct is: double[] doubleArray = new double[2] isAssignment: false Array: new double[][]{ new double[]{ -1570.889471817, -1570.889471817 }, new double[]{ -1570.889471817, -1570.889471817 } } Elements: [new double[]{ -1570.889471817, -1570.889471817 }, new double[]{ -1570.889471817, -1570.889471817 }]
lengths: [2] []
Dimension: [] Ct is: String[] stringArray = new String[5] isAssignment: false Array: new double[][]{ new double[]{ -1570.889471817, -1570.889471817 }, new double[]{ -1570.889471817, -1570.889471817 } } Elements: [new double[]{ -1570.889471817, -1570.889471817 }, new double[]{ -1570.889471817, -1570.889471817 }]
lengths: [5] []
statement is: String[] stringArray = new String[]{ "", "" }, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [] Ct is: double[][] doubleArray = new double[3][6] isAssignment: false Array: new String[]{ "", "" } Elements: ["", ""]
lengths: [3, 6] []
Dimension: [] Ct is: double[] doubleArray = new double[2] isAssignment: false Array: new String[]{ "", "" } Elements: ["", ""]
lengths: [2] []
Dimension: [] Ct is: String[] stringArray = new String[5] isAssignment: false Array: new String[]{ "", "" } Elements: ["", ""]
lengths: [5] []
statement is: DefaultChartDataModel defaultChartDataModel = new DefaultChartDataModel(doubleArray, doubleArray, stringArray), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: de.progra.charting.model.DefaultChartDataModel([[D[D[Ljava/lang/String;)V
statement is: CoordSystem coordSystem = new CoordSystem(defaultChartDataModel, "", "c'c"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: CoordSystemUtilities coordSystemUtilities = coordSystem.c, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: coordSystem.c is coordSystem
CtField is: protected de.progra.charting.CoordSystemUtilities de.progra.charting.CoordSystem.c CoordSystemUtilities c
CtField is: protected de.progra.charting.Axis de.progra.charting.CoordSystem.yaxis Axis yaxis
statement is: Axis axis = coordSystem.yaxis, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: coordSystem.yaxis is coordSystem
CtField is: protected de.progra.charting.CoordSystemUtilities de.progra.charting.CoordSystem.c CoordSystemUtilities c
CtField is: protected de.progra.charting.Axis de.progra.charting.CoordSystem.yaxis Axis yaxis
statement is: coordSystem.yaxis2 = axis, class spoon.support.reflect.code.CtAssignmentImpl
statement is: coordSystemUtilities.getYAxisLine2D(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: coordSystemUtilities.getYAxisLine2D() target is: coordSystemUtilities method is: getYAxisLine2D()
TestCase is: String string = "";
String string = "c'c";
CoordSystem coordSystem = new CoordSystem((ChartDataModel) string, string, "c'c");

statement is: org.evosuite.testcase.statements.ArrayStatement@72b9a88c type is: class org.evosuite.testcase.statements.ArrayStatement return type class [[D
statement code is: double[][] doubleArray = new double[3][6]
statement is: org.evosuite.testcase.statements.ArrayStatement@9320ff56 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [Ljava.lang.String;
statement code is: String[] stringArray = new String[5]
statement is: de.progra.charting.model.DefaultChartDataModel([[D[D[Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.progra.charting.model.DefaultChartDataModel
statement code is: DefaultChartDataModel defaultChartDataModel = new DefaultChartDataModel(arg0, arg0[0], arg2)
statement is: de.progra.charting.CoordSystem(Lde/progra/charting/model/ChartDataModel;Ljava/lang/String;Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.progra.charting.CoordSystem
statement code is: CoordSystem coordSystem = new CoordSystem(arg0, stringArray[2], "#2Ta`x<d2\"")
statement is: org.evosuite.testcase.statements.FieldStatement@39f5e735 type is: class org.evosuite.testcase.statements.FieldStatement return type class de.progra.charting.CoordSystemUtilities
statement code is: CoordSystemUtilities coordSystemUtilities = coordSystem.c
statement is: computeLeftMargin()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int computeLeftMargin = coordSystemUtilities.computeLeftMargin()
test data is: double[][] doubleArray = new double[3][6];
String[] stringArray = new String[5];
DefaultChartDataModel defaultChartDataModel = new DefaultChartDataModel(doubleArray, doubleArray[0], stringArray);
CoordSystem coordSystem = new CoordSystem(defaultChartDataModel, stringArray[2], "#2Ta`x<d2\"");
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
coordSystemUtilities.computeLeftMargin();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        double[][] doubleArray = new double[3][6];
        // Improve the test data by changing the primitive values and Strings (such as integers, doubles, strings, chars) to more illustrative examples.
        doubleArray[0][2] = 1.5;
        doubleArray[1][4] = -2.7;
        stringArray[3] = "Apple";
        stringArray[4] = "Banana";
        DefaultChartDataModel defaultChartDataModel = new DefaultChartDataModel(doubleArray, doubleArray[0], stringArray);
        CoordSystem coordSystem = new CoordSystem(defaultChartDataModel, stringArray[2], "#2Ta`x<d2\"");
        CoordSystemUtilities coordSystemUtilities = coordSystem.c;
        coordSystemUtilities.computeLeftMargin();
    }
}
statement is: double[][] doubleArray = new double[3][6], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [3, 6] Ct is: double[][] doubleArray = new double[3][6] isAssignment: false Array: new double[3][6] Elements: []
lengths: [3, 6] [3, 6]
Their type are: class [[D double[][]
statement is: // Improve the test data by changing the primitive values and Strings (such as integers, doubles, strings, chars) to more illustrative examples.
doubleArray[0][2] = 1.5, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : doubleArray[0][2] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl double Assignment:1.5 Ct is: // Improve the test data by changing the primitive values and Strings (such as integers, doubles, strings, chars) to more illustrative examples.
doubleArray[0][2] = 1.5
target : doubleArray[0] class spoon.support.reflect.code.CtLiteralImpl
statement is: doubleArray[1][4] = -2.7, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : doubleArray[1][4] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl double Assignment:-2.7 Ct is: doubleArray[1][4] = -2.7
target : doubleArray[1] class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[3] = "Apple", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[3] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl null Assignment:"Apple" Ct is: stringArray[3] = "Apple"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[4] = "Banana", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[4] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl null Assignment:"Banana" Ct is: stringArray[4] = "Banana"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: DefaultChartDataModel defaultChartDataModel = new DefaultChartDataModel(doubleArray, doubleArray[0], stringArray), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: de.progra.charting.model.DefaultChartDataModel([[D[D[Ljava/lang/String;)V
statement is: CoordSystem coordSystem = new CoordSystem(defaultChartDataModel, stringArray[2], "#2Ta`x<d2\""), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: de.progra.charting.CoordSystem(Lde/progra/charting/model/ChartDataModel;Ljava/lang/String;Ljava/lang/String;)V
statement is: CoordSystemUtilities coordSystemUtilities = coordSystem.c, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: coordSystem.c is coordSystem
CtField is: protected de.progra.charting.CoordSystemUtilities de.progra.charting.CoordSystem.c CoordSystemUtilities c
statement is: coordSystemUtilities.computeLeftMargin(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: coordSystemUtilities.computeLeftMargin() target is: coordSystemUtilities method is: computeLeftMargin()
* this is vulnerable: String string = "#2Ta`x<d2\""
TestCase is: double[][] doubleArray = new double[3][6];
String string = "#2Ta`x<d2\"";

statement is: org.evosuite.testcase.statements.ArrayStatement@d2f69cbf type is: class org.evosuite.testcase.statements.ArrayStatement return type class [[D
statement code is: double[][] doubleArray = new double[3][6]
statement is: org.evosuite.testcase.statements.ArrayStatement@dd8f31f0 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [D
statement code is: double[] doubleArray = new double[2]
statement is: org.evosuite.testcase.statements.AssignmentStatement@5897d903 type is: class org.evosuite.testcase.statements.AssignmentStatement return type double
statement code is: doubleArray[0] = (-1570.889471817)
statement is: org.evosuite.testcase.statements.AssignmentStatement@b5af3df1 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class [D
statement code is: doubleArray[0] = doubleArray
statement is: org.evosuite.testcase.statements.ArrayStatement@30c2e32a type is: class org.evosuite.testcase.statements.ArrayStatement return type class [Ljava.lang.String;
statement code is: String[] stringArray = new String[5]
statement is: de.progra.charting.model.DefaultChartDataModel([[D[D[Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.progra.charting.model.DefaultChartDataModel
statement code is: DefaultChartDataModel defaultChartDataModel = new DefaultChartDataModel(arg0, arg0[0], arg2)
statement is: de.progra.charting.CoordSystem(Lde/progra/charting/model/ChartDataModel;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.progra.charting.CoordSystem
statement code is: CoordSystem coordSystem = new CoordSystem(arg0)
statement is: org.evosuite.testcase.statements.FieldStatement@4d4b0afb type is: class org.evosuite.testcase.statements.FieldStatement return type class de.progra.charting.CoordSystemUtilities
statement code is: CoordSystemUtilities coordSystemUtilities = coordSystem.c
statement is: computeXAxisLabelHeight()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int computeXAxisLabelHeight = coordSystemUtilities.computeXAxisLabelHeight()
test data is: double[][] doubleArray = new double[3][6];
double[] doubleArray = new double[2];
doubleArray[0] = (-1570.889471817);
doubleArray[0] = doubleArray;
String[] stringArray = new String[5];
DefaultChartDataModel defaultChartDataModel = new DefaultChartDataModel(doubleArray, doubleArray[0], stringArray);
CoordSystem coordSystem = new CoordSystem(defaultChartDataModel);
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
coordSystemUtilities.computeXAxisLabelHeight();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        double[][] doubleArray = new double[3][6];
        double[] doubleArray = new double[2];
        doubleArray[0] = -1570.889471817;
        doubleArray[0] = doubleArray;
        String[] stringArray = new String[5];
        stringArray[0] = "January";
        stringArray[1] = "February";
        stringArray[2] = "March";
        stringArray[3] = "April";
        stringArray[4] = "May";
        DefaultChartDataModel defaultChartDataModel = new DefaultChartDataModel(doubleArray, doubleArray[0], stringArray);
        CoordSystem coordSystem = new CoordSystem(defaultChartDataModel);
        CoordSystemUtilities coordSystemUtilities = coordSystem.c;
        coordSystemUtilities.computeXAxisLabelHeight();
    }
}
statement is: double[][] doubleArray = new double[3][6], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [3, 6] Ct is: double[][] doubleArray = new double[3][6] isAssignment: false Array: new double[3][6] Elements: []
lengths: [3, 6] [3, 6]
Their type are: class [[D double[][]
statement is: double[] doubleArray = new double[2], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [2] Ct is: double[][] doubleArray = new double[3][6] isAssignment: false Array: new double[2] Elements: []
lengths: [3, 6] [2]
Dimension: [2] Ct is: double[] doubleArray = new double[2] isAssignment: false Array: new double[2] Elements: []
lengths: [2] [2]
Their type are: class [D double[]
statement is: doubleArray[0] = -1570.889471817, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : doubleArray[0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl double Assignment:-1570.889471817 Ct is: doubleArray[0] = -1570.889471817
target : doubleArray class spoon.support.reflect.code.CtLiteralImpl
statement is: doubleArray[0] = doubleArray, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : doubleArray[0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl double Assignment:doubleArray Ct is: doubleArray[0] = doubleArray
target : doubleArray class spoon.support.reflect.code.CtLiteralImpl
statement is: String[] stringArray = new String[5], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [5] Ct is: double[][] doubleArray = new double[3][6] isAssignment: false Array: new String[5] Elements: []
lengths: [3, 6] [5]
Dimension: [5] Ct is: double[] doubleArray = new double[2] isAssignment: false Array: new String[5] Elements: []
lengths: [2] [5]
Their type are: class [D String[]
Dimension: [5] Ct is: String[] stringArray = new String[5] isAssignment: false Array: new String[5] Elements: []
lengths: [5] [5]
Their type are: class [Ljava.lang.String; String[]
statement is: stringArray[0] = "January", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"January" Ct is: stringArray[0] = "January"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[1] = "February", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[1] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"February" Ct is: stringArray[1] = "February"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[2] = "March", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[2] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"March" Ct is: stringArray[2] = "March"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[3] = "April", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[3] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"April" Ct is: stringArray[3] = "April"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[4] = "May", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[4] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"May" Ct is: stringArray[4] = "May"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: DefaultChartDataModel defaultChartDataModel = new DefaultChartDataModel(doubleArray, doubleArray[0], stringArray), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: CoordSystem coordSystem = new CoordSystem(defaultChartDataModel), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: CoordSystemUtilities coordSystemUtilities = coordSystem.c, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: coordSystem.c is coordSystem
CtField is: protected de.progra.charting.CoordSystemUtilities de.progra.charting.CoordSystem.c CoordSystemUtilities c
statement is: coordSystemUtilities.computeXAxisLabelHeight(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: coordSystemUtilities.computeXAxisLabelHeight() target is: coordSystemUtilities method is: computeXAxisLabelHeight()
TestCase is: double[][] doubleArray = new double[3][6];
double[] doubleArray = new double[2];
doubleArray[0] = (-1570.889471817);
doubleArray[0] = (double) doubleArray;
String[] stringArray = new String[5];
DefaultChartDataModel defaultChartDataModel = new DefaultChartDataModel((double[][]) doubleArray, (double[]) stringArray, stringArray);
CoordSystem coordSystem = new CoordSystem(defaultChartDataModel);

statement is: de.progra.charting.model.ObjectChartDataModel()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.progra.charting.model.ObjectChartDataModel
statement code is: ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel()
statement is: de.progra.charting.CoordSystem(Lde/progra/charting/model/ChartDataModel;Ljava/lang/String;Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.progra.charting.CoordSystem
statement code is: CoordSystem coordSystem = new CoordSystem(arg0, (String) null, "")
statement is: org.evosuite.testcase.statements.FieldStatement@53b7d678 type is: class org.evosuite.testcase.statements.FieldStatement return type class de.progra.charting.CoordSystemUtilities
statement code is: CoordSystemUtilities coordSystemUtilities = coordSystem.c
statement is: computeYAxisLabelWidth()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int computeYAxisLabelWidth = coordSystemUtilities.computeYAxisLabelWidth()
test data is: ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel();
CoordSystem coordSystem = new CoordSystem(objectChartDataModel, (String) null, "");
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
coordSystemUtilities.computeYAxisLabelWidth();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel(10, "January", 2023);
        CoordSystem coordSystem = new CoordSystem(objectChartDataModel, ((String) (null)), "");
        CoordSystemUtilities coordSystemUtilities = coordSystem.c;
        coordSystemUtilities.computeYAxisLabelWidth();
    }
}
statement is: ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel(10, "January", 2023), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: CoordSystem coordSystem = new CoordSystem(objectChartDataModel, ((String) (null)), ""), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: CoordSystemUtilities coordSystemUtilities = coordSystem.c, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: coordSystem.c is coordSystem
CtField is: protected de.progra.charting.CoordSystemUtilities de.progra.charting.CoordSystem.c CoordSystemUtilities c
statement is: coordSystemUtilities.computeYAxisLabelWidth(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: coordSystemUtilities.computeYAxisLabelWidth() target is: coordSystemUtilities method is: computeYAxisLabelWidth()
TestCase is: String string = "";
CoordSystem coordSystem = new CoordSystem((ChartDataModel) string, (String) null, "");

statement is: org.evosuite.testcase.statements.ArrayStatement@b45bb14c type is: class org.evosuite.testcase.statements.ArrayStatement return type class [[D
statement code is: double[][] doubleArray = new double[3][6]
statement is: org.evosuite.testcase.statements.ArrayStatement@864fd35c type is: class org.evosuite.testcase.statements.ArrayStatement return type class [D
statement code is: double[] doubleArray = new double[3]
statement is: org.evosuite.testcase.statements.AssignmentStatement@c4389812 type is: class org.evosuite.testcase.statements.AssignmentStatement return type double
statement code is: doubleArray[0] = (-1570.889471817)
statement is: org.evosuite.testcase.statements.AssignmentStatement@79b0055f type is: class org.evosuite.testcase.statements.AssignmentStatement return type double
statement code is: doubleArray[1] = (-1570.889471817)
statement is: org.evosuite.testcase.statements.AssignmentStatement@7078bdbb type is: class org.evosuite.testcase.statements.AssignmentStatement return type double
statement code is: doubleArray[2] = (-1570.889471817)
statement is: org.evosuite.testcase.statements.ArrayStatement@637a43a3 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [Ljava.lang.String;
statement code is: String[] stringArray = new String[5]
statement is: de.progra.charting.model.DefaultChartDataModel([[D[D[Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.progra.charting.model.DefaultChartDataModel
statement code is: DefaultChartDataModel defaultChartDataModel = new DefaultChartDataModel(arg0, arg1, arg2)
statement is: de.progra.charting.CoordSystem(Lde/progra/charting/model/ChartDataModel;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.progra.charting.CoordSystem
statement code is: CoordSystem coordSystem = new CoordSystem(arg0)
statement is: org.evosuite.testcase.statements.FieldStatement@67316a6c type is: class org.evosuite.testcase.statements.FieldStatement return type class de.progra.charting.CoordSystemUtilities
statement code is: CoordSystemUtilities coordSystemUtilities = coordSystem.c
statement is: getYAxisLine2D()Ljava/awt/geom/Line2D; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.awt.geom.Line2D
statement code is: Line2D yAxisLine2D = coordSystemUtilities.getYAxisLine2D()
test data is: double[][] doubleArray = new double[3][6];
double[] doubleArray = new double[3];
doubleArray[0] = (-1570.889471817);
doubleArray[1] = (-1570.889471817);
doubleArray[2] = (-1570.889471817);
String[] stringArray = new String[5];
DefaultChartDataModel defaultChartDataModel = new DefaultChartDataModel(doubleArray, doubleArray, stringArray);
CoordSystem coordSystem = new CoordSystem(defaultChartDataModel);
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
coordSystemUtilities.getYAxisLine2D();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        double[][] doubleArray = new double[][]{ new double[]{ -1570.889471817, -1570.889471817, -1570.889471817 }, new double[]{ -1570.889471817, -1570.889471817, -1570.889471817 }, new double[]{ -1570.889471817, -1570.889471817, -1570.889471817 } };
        double[] doubleArray = new double[]{ -1570.889471817, -1570.889471817, -1570.889471817 };
        String[] stringArray = new String[]{ "January", "February", "March", "April", "May" };
        DefaultChartDataModel defaultChartDataModel = new DefaultChartDataModel(doubleArray, doubleArray, stringArray);
        CoordSystem coordSystem = new CoordSystem(defaultChartDataModel);
        CoordSystemUtilities coordSystemUtilities = coordSystem.c;
        coordSystemUtilities.getYAxisLine2D();
    }
}
statement is: double[][] doubleArray = new double[][]{ new double[]{ -1570.889471817, -1570.889471817, -1570.889471817 }, new double[]{ -1570.889471817, -1570.889471817, -1570.889471817 }, new double[]{ -1570.889471817, -1570.889471817, -1570.889471817 } }, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [] Ct is: double[][] doubleArray = new double[3][6] isAssignment: false Array: new double[][]{ new double[]{ -1570.889471817, -1570.889471817, -1570.889471817 }, new double[]{ -1570.889471817, -1570.889471817, -1570.889471817 }, new double[]{ -1570.889471817, -1570.889471817, -1570.889471817 } } Elements: [new double[]{ -1570.889471817, -1570.889471817, -1570.889471817 }, new double[]{ -1570.889471817, -1570.889471817, -1570.889471817 }, new double[]{ -1570.889471817, -1570.889471817, -1570.889471817 }]
lengths: [3, 6] []
Dimension: [] Ct is: double[] doubleArray = new double[3] isAssignment: false Array: new double[][]{ new double[]{ -1570.889471817, -1570.889471817, -1570.889471817 }, new double[]{ -1570.889471817, -1570.889471817, -1570.889471817 }, new double[]{ -1570.889471817, -1570.889471817, -1570.889471817 } } Elements: [new double[]{ -1570.889471817, -1570.889471817, -1570.889471817 }, new double[]{ -1570.889471817, -1570.889471817, -1570.889471817 }, new double[]{ -1570.889471817, -1570.889471817, -1570.889471817 }]
lengths: [3] []
Dimension: [] Ct is: String[] stringArray = new String[5] isAssignment: false Array: new double[][]{ new double[]{ -1570.889471817, -1570.889471817, -1570.889471817 }, new double[]{ -1570.889471817, -1570.889471817, -1570.889471817 }, new double[]{ -1570.889471817, -1570.889471817, -1570.889471817 } } Elements: [new double[]{ -1570.889471817, -1570.889471817, -1570.889471817 }, new double[]{ -1570.889471817, -1570.889471817, -1570.889471817 }, new double[]{ -1570.889471817, -1570.889471817, -1570.889471817 }]
lengths: [5] []
statement is: double[] doubleArray = new double[]{ -1570.889471817, -1570.889471817, -1570.889471817 }, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [] Ct is: double[][] doubleArray = new double[3][6] isAssignment: false Array: new double[]{ -1570.889471817, -1570.889471817, -1570.889471817 } Elements: [-1570.889471817, -1570.889471817, -1570.889471817]
lengths: [3, 6] []
Dimension: [] Ct is: double[] doubleArray = new double[3] isAssignment: false Array: new double[]{ -1570.889471817, -1570.889471817, -1570.889471817 } Elements: [-1570.889471817, -1570.889471817, -1570.889471817]
lengths: [3] []
Dimension: [] Ct is: String[] stringArray = new String[5] isAssignment: false Array: new double[]{ -1570.889471817, -1570.889471817, -1570.889471817 } Elements: [-1570.889471817, -1570.889471817, -1570.889471817]
lengths: [5] []
statement is: String[] stringArray = new String[]{ "January", "February", "March", "April", "May" }, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [] Ct is: double[][] doubleArray = new double[3][6] isAssignment: false Array: new String[]{ "January", "February", "March", "April", "May" } Elements: ["January", "February", "March", "April", "May"]
lengths: [3, 6] []
Dimension: [] Ct is: double[] doubleArray = new double[3] isAssignment: false Array: new String[]{ "January", "February", "March", "April", "May" } Elements: ["January", "February", "March", "April", "May"]
lengths: [3] []
Dimension: [] Ct is: String[] stringArray = new String[5] isAssignment: false Array: new String[]{ "January", "February", "March", "April", "May" } Elements: ["January", "February", "March", "April", "May"]
lengths: [5] []
statement is: DefaultChartDataModel defaultChartDataModel = new DefaultChartDataModel(doubleArray, doubleArray, stringArray), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: de.progra.charting.model.DefaultChartDataModel([[D[D[Ljava/lang/String;)V
statement is: CoordSystem coordSystem = new CoordSystem(defaultChartDataModel), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: de.progra.charting.CoordSystem(Lde/progra/charting/model/ChartDataModel;)V
statement is: CoordSystemUtilities coordSystemUtilities = coordSystem.c, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: coordSystem.c is coordSystem
CtField is: protected de.progra.charting.CoordSystemUtilities de.progra.charting.CoordSystem.c CoordSystemUtilities c
statement is: coordSystemUtilities.getYAxisLine2D(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: coordSystemUtilities.getYAxisLine2D() target is: coordSystemUtilities method is: getYAxisLine2D()
statement is: de.progra.charting.model.ObjectChartDataModel()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.progra.charting.model.ObjectChartDataModel
statement code is: ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel()
statement is: de.progra.charting.CoordSystem(Lde/progra/charting/model/ChartDataModel;Ljava/lang/String;Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.progra.charting.CoordSystem
statement code is: CoordSystem coordSystem = new CoordSystem(arg0, (String) null, (String) null)
statement is: java.awt.geom.AffineTransform(FFFFFF)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.awt.geom.AffineTransform
statement code is: AffineTransform affineTransform = new AffineTransform((float) 0, (float) 0, 0.0F, 0.0F, (float) 1, 0.0F)
statement is: org.evosuite.testcase.statements.AssignmentStatement@8b6c6e4e type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.awt.geom.AffineTransform
statement code is: coordSystem.y2transform = affineTransform
statement is: org.evosuite.testcase.statements.FieldStatement@28d85098 type is: class org.evosuite.testcase.statements.FieldStatement return type class de.progra.charting.CoordSystemUtilities
statement code is: CoordSystemUtilities coordSystemUtilities = coordSystem.c
statement is: getSecondYAxisLine2D()Ljava/awt/geom/Line2D; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.awt.geom.Line2D$Double
statement code is: Line2D.Double secondYAxisLine2D = (Line2D.Double)coordSystemUtilities.getSecondYAxisLine2D()
test data is: ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel();
CoordSystem coordSystem = new CoordSystem(objectChartDataModel, (String) null, (String) null);
AffineTransform affineTransform = new AffineTransform((float) 0, (float) 0, 0.0F, 0.0F, (float) 1, 0.0F);
coordSystem.y2transform = affineTransform;
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
coordSystemUtilities.getSecondYAxisLine2D();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel();
        CoordSystem coordSystem = new CoordSystem(objectChartDataModel, "x-axis", "y-axis");
        AffineTransform affineTransform = new AffineTransform(((float) (0.5)), ((float) (0.5)), 0.0F, 0.0F, ((float) (1.0)), 0.0F);
        coordSystem.y2transform = affineTransform;
        CoordSystemUtilities coordSystemUtilities = coordSystem.c;
        Line2D secondYAxisLine2D = coordSystemUtilities.getSecondYAxisLine2D();
    }
}
statement is: ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: CoordSystem coordSystem = new CoordSystem(objectChartDataModel, "x-axis", "y-axis"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: AffineTransform affineTransform = new AffineTransform(((float) (0.5)), ((float) (0.5)), 0.0F, 0.0F, ((float) (1.0)), 0.0F), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: coordSystem.y2transform = affineTransform, class spoon.support.reflect.code.CtAssignmentImpl
statement is: CoordSystemUtilities coordSystemUtilities = coordSystem.c, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: coordSystem.c is coordSystem
CtField is: protected de.progra.charting.CoordSystemUtilities de.progra.charting.CoordSystem.c CoordSystemUtilities c
statement is: Line2D secondYAxisLine2D = coordSystemUtilities.getSecondYAxisLine2D(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: coordSystemUtilities.getSecondYAxisLine2D() target is: coordSystemUtilities method is: getSecondYAxisLine2D()
TestCase is: ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel();
String string = "x-axis";
String string = "y-axis";
CoordSystem coordSystem = new CoordSystem(objectChartDataModel, string, string);
double _double = 0.5;
double _double = 0.5;
float _float = 0.0F;
float _float = 0.0F;
double _double = 1.0;
float _float = 0.0F;
AffineTransform affineTransform = new AffineTransform((float) _double, (float) _double, _float, _float, (float) _double, _float);

statement is: de.progra.charting.model.ObjectChartDataModel()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.progra.charting.model.ObjectChartDataModel
statement code is: ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel()
statement is: de.progra.charting.CoordSystem(Lde/progra/charting/model/ChartDataModel;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.progra.charting.CoordSystem
statement code is: CoordSystem coordSystem = new CoordSystem(arg0)
statement is: getQuadrantRotateInstance(IDD)Ljava/awt/geom/AffineTransform; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.awt.geom.AffineTransform
statement code is: AffineTransform quadrantRotateInstance = AffineTransform.getQuadrantRotateInstance(20, (double) 20, 278.7917028)
statement is: org.evosuite.testcase.statements.AssignmentStatement@63f91f54 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.awt.geom.AffineTransform
statement code is: coordSystem.y1transform = affineTransform
statement is: org.evosuite.testcase.statements.FieldStatement@92aae7a type is: class org.evosuite.testcase.statements.FieldStatement return type class de.progra.charting.CoordSystemUtilities
statement code is: CoordSystemUtilities coordSystemUtilities = coordSystem.c
statement is: getXAxisLine2D()Ljava/awt/geom/Line2D; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.awt.geom.Line2D$Double
statement code is: Line2D.Double xAxisLine2D = (Line2D.Double)coordSystemUtilities.getXAxisLine2D()
test data is: ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel();
CoordSystem coordSystem = new CoordSystem(objectChartDataModel);
AffineTransform quadrantRotateInstance = AffineTransform.getQuadrantRotateInstance(20, (double) 20, 278.7917028);
coordSystem.y1transform = quadrantRotateInstance;
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
coordSystemUtilities.getXAxisLine2D();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel();
        CoordSystem coordSystem = new CoordSystem(objectChartDataModel);
        AffineTransform quadrantRotateInstance = AffineTransform.getQuadrantRotateInstance(45, ((double) (100)), 278.7917028);
        coordSystem.y1transform = quadrantRotateInstance;
        CoordSystemUtilities coordSystemUtilities = coordSystem.c;
        coordSystemUtilities.getXAxisLine2D();
    }
}
statement is: ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: CoordSystem coordSystem = new CoordSystem(objectChartDataModel), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: AffineTransform quadrantRotateInstance = AffineTransform.getQuadrantRotateInstance(45, ((double) (100)), 278.7917028), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: AffineTransform.getQuadrantRotateInstance(45, ((double) (100)), 278.7917028) target is: AffineTransform method is: getQuadrantRotateInstance(int,double,double)
Matched Method is: getQuadrantRotateInstance(IDD)Ljava/awt/geom/AffineTransform;
statement is: coordSystem.y1transform = quadrantRotateInstance, class spoon.support.reflect.code.CtAssignmentImpl
statement is: CoordSystemUtilities coordSystemUtilities = coordSystem.c, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: coordSystem.c is coordSystem
CtField is: protected de.progra.charting.CoordSystemUtilities de.progra.charting.CoordSystem.c CoordSystemUtilities c
statement is: coordSystemUtilities.getXAxisLine2D(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: coordSystemUtilities.getXAxisLine2D() target is: coordSystemUtilities method is: getXAxisLine2D()
TestCase is: ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel();
CoordSystem coordSystem = new CoordSystem(objectChartDataModel);
int _int = 45;
int _int = 100;
double _double = 278.7917028;
AffineTransform.getQuadrantRotateInstance(_int, (double) _int, _double);

statement is: org.evosuite.testcase.statements.ArrayStatement@d5266190 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [[D
statement code is: double[][] doubleArray = new double[3][6]
statement is: org.evosuite.testcase.statements.ArrayStatement@651b3896 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [Ljava.lang.String;
statement code is: String[] stringArray = new String[5]
statement is: de.progra.charting.model.DefaultChartDataModel([[D[D[Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.progra.charting.model.DefaultChartDataModel
statement code is: DefaultChartDataModel defaultChartDataModel = new DefaultChartDataModel(arg0, arg0[0], arg2)
statement is: de.progra.charting.CoordSystem(Lde/progra/charting/model/ChartDataModel;Ljava/lang/String;Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.progra.charting.CoordSystem
statement code is: CoordSystem coordSystem = new CoordSystem(arg0, stringArray[2], "#2Ta`x<d2\"")
statement is: java.awt.geom.AffineTransform(DDDDDD)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.awt.geom.AffineTransform
statement code is: AffineTransform affineTransform = new AffineTransform((-1570.889471817), 0.0, (-2916.09), 964.329681923832, 40.0, (-1306.02151431))
statement is: org.evosuite.testcase.statements.AssignmentStatement@adcfd9a6 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.awt.geom.AffineTransform
statement code is: coordSystem.y1transform = affineTransform
statement is: org.evosuite.testcase.statements.FieldStatement@2ea3b458 type is: class org.evosuite.testcase.statements.FieldStatement return type class de.progra.charting.CoordSystemUtilities
statement code is: CoordSystemUtilities coordSystemUtilities = coordSystem.c
statement is: getYAxisLine2D()Ljava/awt/geom/Line2D; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.awt.geom.Line2D$Double
statement code is: Line2D.Double yAxisLine2D = (Line2D.Double)coordSystemUtilities.getYAxisLine2D()
test data is: double[][] doubleArray = new double[3][6];
String[] stringArray = new String[5];
DefaultChartDataModel defaultChartDataModel = new DefaultChartDataModel(doubleArray, doubleArray[0], stringArray);
CoordSystem coordSystem = new CoordSystem(defaultChartDataModel, stringArray[2], "#2Ta`x<d2\"");
AffineTransform affineTransform = new AffineTransform((-1570.889471817), 0.0, (-2916.09), 964.329681923832, 40.0, (-1306.02151431));
coordSystem.y1transform = affineTransform;
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
coordSystemUtilities.getYAxisLine2D();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        double[][] doubleArray = new double[][]{ new double[]{ 1.0, 2.0, 3.0, 4.0, 5.0 }, new double[]{ 6.0, 7.0, 8.0, 9.0, 10.0 }, new double[]{ 11.0, 12.0, 13.0, 14.0, 15.0 } };
        String[] stringArray = new String[]{ "a", "b", "c", "d", "e" };
        DefaultChartDataModel defaultChartDataModel = new DefaultChartDataModel(doubleArray, doubleArray[0], stringArray);
        CoordSystem coordSystem = new CoordSystem(defaultChartDataModel, stringArray[2], "#2Ta`x<d2\"");
        AffineTransform affineTransform = new AffineTransform(-1570.889471817, 0.0, -2916.09, 964.329681923832, 40.0, -1306.02151431);
        coordSystem.y1transform = affineTransform;
        CoordSystemUtilities coordSystemUtilities = coordSystem.c;
        coordSystemUtilities.getYAxisLine2D();
    }
}
statement is: double[][] doubleArray = new double[][]{ new double[]{ 1.0, 2.0, 3.0, 4.0, 5.0 }, new double[]{ 6.0, 7.0, 8.0, 9.0, 10.0 }, new double[]{ 11.0, 12.0, 13.0, 14.0, 15.0 } }, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [] Ct is: double[][] doubleArray = new double[3][6] isAssignment: false Array: new double[][]{ new double[]{ 1.0, 2.0, 3.0, 4.0, 5.0 }, new double[]{ 6.0, 7.0, 8.0, 9.0, 10.0 }, new double[]{ 11.0, 12.0, 13.0, 14.0, 15.0 } } Elements: [new double[]{ 1.0, 2.0, 3.0, 4.0, 5.0 }, new double[]{ 6.0, 7.0, 8.0, 9.0, 10.0 }, new double[]{ 11.0, 12.0, 13.0, 14.0, 15.0 }]
lengths: [3, 6] []
Dimension: [] Ct is: String[] stringArray = new String[5] isAssignment: false Array: new double[][]{ new double[]{ 1.0, 2.0, 3.0, 4.0, 5.0 }, new double[]{ 6.0, 7.0, 8.0, 9.0, 10.0 }, new double[]{ 11.0, 12.0, 13.0, 14.0, 15.0 } } Elements: [new double[]{ 1.0, 2.0, 3.0, 4.0, 5.0 }, new double[]{ 6.0, 7.0, 8.0, 9.0, 10.0 }, new double[]{ 11.0, 12.0, 13.0, 14.0, 15.0 }]
lengths: [5] []
statement is: String[] stringArray = new String[]{ "a", "b", "c", "d", "e" }, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [] Ct is: double[][] doubleArray = new double[3][6] isAssignment: false Array: new String[]{ "a", "b", "c", "d", "e" } Elements: ["a", "b", "c", "d", "e"]
lengths: [3, 6] []
Dimension: [] Ct is: String[] stringArray = new String[5] isAssignment: false Array: new String[]{ "a", "b", "c", "d", "e" } Elements: ["a", "b", "c", "d", "e"]
lengths: [5] []
statement is: DefaultChartDataModel defaultChartDataModel = new DefaultChartDataModel(doubleArray, doubleArray[0], stringArray), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: de.progra.charting.model.DefaultChartDataModel([[D[D[Ljava/lang/String;)V
statement is: CoordSystem coordSystem = new CoordSystem(defaultChartDataModel, stringArray[2], "#2Ta`x<d2\""), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: de.progra.charting.CoordSystem(Lde/progra/charting/model/ChartDataModel;Ljava/lang/String;Ljava/lang/String;)V
statement is: AffineTransform affineTransform = new AffineTransform(-1570.889471817, 0.0, -2916.09, 964.329681923832, 40.0, -1306.02151431), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: coordSystem.y1transform = affineTransform, class spoon.support.reflect.code.CtAssignmentImpl
statement is: CoordSystemUtilities coordSystemUtilities = coordSystem.c, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: coordSystem.c is coordSystem
CtField is: protected de.progra.charting.CoordSystemUtilities de.progra.charting.CoordSystem.c CoordSystemUtilities c
statement is: coordSystemUtilities.getYAxisLine2D(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: coordSystemUtilities.getYAxisLine2D() target is: coordSystemUtilities method is: getYAxisLine2D()
* this is vulnerable: String string = "#2Ta`x<d2\""
TestCase is: String string = "#2Ta`x<d2\"";
double _double = 0.0;
double _double = 964.329681923832;
double _double = 40.0;
AffineTransform affineTransform = new AffineTransform(_double, _double, _double, 964.329681923832, 40.0, (-1306.02151431));

* test suite isTestSuite: 73
Test 0: 
ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel();
CoordSystem coordSystem = new CoordSystem(objectChartDataModel);
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
coordSystemUtilities.computeRightMargin();
Test 1: 
ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel();
CoordSystem coordSystem = new CoordSystem(objectChartDataModel);
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
coordSystemUtilities.computeTopMargin();
Test 2: 
double[][] doubleArray = new double[1][8];
double[] doubleArray = new double[1];
doubleArray[0] = 1.0;
String[] stringArray = new String[6];
EditableChartDataModel editableChartDataModel = new EditableChartDataModel(doubleArray, doubleArray, stringArray);
DecimalFormatSymbols decimalFormatSymbols = new DecimalFormatSymbols();
DecimalFormat decimalFormat = new DecimalFormat("", decimalFormatSymbols);
CoordSystem coordSystem = new CoordSystem(editableChartDataModel, decimalFormat, false, false, false);
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
coordSystemUtilities.computeLeftMargin();
Test 3: 
ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel();
CoordSystem coordSystem = new CoordSystem(objectChartDataModel, (String) null, "^R^i>pE#zxTl02\"(");
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
coordSystemUtilities.computeLeftMargin();
Test 4: 
double[][] doubleArray = new double[1][0];
double[] doubleArray = new double[9];
doubleArray[0] = (-2015.4909919749273);
doubleArray[1] = 1138.447;
doubleArray[0] = doubleArray;
String[] stringArray = new String[9];
DefaultChartDataModel defaultChartDataModel = new DefaultChartDataModel(doubleArray, doubleArray, stringArray);
CoordSystem coordSystem = new CoordSystem(defaultChartDataModel, stringArray[7], "~oG#U");
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
coordSystemUtilities.computeLeftMargin();
Test 5: 
double[][] doubleArray = new double[1][8];
double[] doubleArray = new double[1];
doubleArray[0] = 1.0;
doubleArray[0] = doubleArray;
String[] stringArray = new String[6];
EditableChartDataModel editableChartDataModel = new EditableChartDataModel(doubleArray, doubleArray, stringArray);
DecimalFormatSymbols decimalFormatSymbols = new DecimalFormatSymbols();
DecimalFormat decimalFormat = new DecimalFormat("", decimalFormatSymbols);
CoordSystem coordSystem = new CoordSystem(editableChartDataModel, decimalFormat, false, false, false);
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
coordSystemUtilities.computeBottomMargin();
Test 6: 
double[] doubleArray = new double[2];
String[] stringArray = new String[5];
int[][] intArray = new int[1][5];
EditableChartDataModel editableChartDataModel = new EditableChartDataModel(intArray, doubleArray, stringArray);
CoordSystem coordSystem = new CoordSystem(editableChartDataModel, "oKU{2s[lgD0uL", "");
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
coordSystemUtilities.computeBottomMargin();
Test 7: 
Object[] objectArray = new Object[4];
Number[][] numberArray = new Number[0][3];
String[] stringArray = new String[0];
ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel(numberArray, objectArray, stringArray);
CoordSystem coordSystem = new CoordSystem(objectChartDataModel, "de.progra.charting.CoordSystemUtilities", "de.progra.charting.CoordSystemUtilities");
DefaultChartDataModelConstraints defaultChartDataModelConstraints = (DefaultChartDataModelConstraints)coordSystem.constraints;
CoordSystemUtilities coordSystemUtilities = new CoordSystemUtilities(coordSystem, defaultChartDataModelConstraints, defaultChartDataModelConstraints, objectChartDataModel);
coordSystemUtilities.computeBottomMargin();
Test 8: 
double[] doubleArray = new double[2];
doubleArray[1] = (-1306.02151431);
String[] stringArray = new String[5];
int[][] intArray = new int[1][5];
int[] intArray = new int[7];
intArray[0] = 20;
intArray[1] = (-2109045091);
intArray[0] = intArray;
EditableChartDataModel editableChartDataModel = new EditableChartDataModel(intArray, doubleArray, stringArray);
CoordSystem coordSystem = new CoordSystem(editableChartDataModel, "oKU{2s[lgD0uL", "");
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
coordSystemUtilities.computeBottomMargin();
Test 9: 
int[][] intArray = new int[1][9];
int[] intArray = new int[9];
intArray[0] = Integer.MAX_VALUE;
intArray[1] = Integer.MAX_VALUE;
intArray[2] = 623;
intArray[3] = Integer.MAX_VALUE;
intArray[4] = Integer.MAX_VALUE;
intArray[5] = Integer.MAX_VALUE;
intArray[6] = Integer.MAX_VALUE;
intArray[7] = 6;
intArray[8] = Integer.MAX_VALUE;
intArray[0] = intArray;
String[] stringArray = new String[8];
ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel(intArray, intArray, stringArray);
CoordSystem coordSystem = new CoordSystem(objectChartDataModel, (DecimalFormat) null, true, false, false);
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
coordSystemUtilities.computeXAxisLabelHeight();
Test 10: 
double[] doubleArray = new double[4];
doubleArray[0] = (-1570.889471817);
doubleArray[1] = (-1306.02151431);
doubleArray[2] = (-1306.02151431);
doubleArray[3] = (-1570.889471817);
String[] stringArray = new String[5];
double[][] doubleArray = new double[1][4];
doubleArray[0] = doubleArray;
DefaultChartDataModel defaultChartDataModel = new DefaultChartDataModel(doubleArray, doubleArray, stringArray);
CoordSystem coordSystem = new CoordSystem(defaultChartDataModel);
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
coordSystemUtilities.computeXAxisLabelHeight();
Test 11: 
double[][] doubleArray = new double[2][2];
double[] doubleArray = new double[1];
doubleArray[0] = (double) 1;
doubleArray[0] = doubleArray;
String[] stringArray = new String[12];
DefaultChartDataModel defaultChartDataModel = new DefaultChartDataModel(doubleArray, doubleArray, stringArray);
CoordSystem coordSystem = new CoordSystem(defaultChartDataModel);
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
coordSystemUtilities.computeYAxisLabelWidth();
Test 12: 
double[][] doubleArray = new double[3][6];
double[] doubleArray = new double[2];
doubleArray[1] = (-1306.02151431);
doubleArray[0] = doubleArray;
double[] doubleArray = new double[4];
doubleArray[0] = (-1570.889471817);
doubleArray[1] = (-1306.02151431);
doubleArray[2] = (-1306.02151431);
doubleArray[3] = (-1570.889471817);
String[] stringArray = new String[5];
DefaultChartDataModel defaultChartDataModel = new DefaultChartDataModel(doubleArray, doubleArray, stringArray);
CoordSystem coordSystem = new CoordSystem(defaultChartDataModel);
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
coordSystemUtilities.computeYAxisLabelWidth();
Test 13: 
double[][] doubleArray = new double[3][6];
double[] doubleArray = new double[2];
doubleArray[1] = (-1570.889471817);
doubleArray[0] = doubleArray;
double[] doubleArray = new double[3];
doubleArray[0] = (-1570.889471817);
doubleArray[1] = (-1570.889471817);
doubleArray[2] = (-1570.889471817);
String[] stringArray = new String[5];
DefaultChartDataModel defaultChartDataModel = new DefaultChartDataModel(doubleArray, doubleArray, stringArray);
CoordSystem coordSystem = new CoordSystem(defaultChartDataModel);
Axis xAxis = coordSystem.getXAxis();
coordSystem.setSecondYAxis(xAxis);
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
coordSystemUtilities.computeYAxisLabelWidth();
Test 14: 
double[][] doubleArray = new double[1][5];
double[] doubleArray = new double[6];
doubleArray[0] = 0.2;
doubleArray[1] = 2251.13228227;
doubleArray[2] = 25.0;
doubleArray[3] = 1639.553;
doubleArray[4] = 2472.4206967;
doubleArray[5] = 3.0;
doubleArray[0] = doubleArray;
String[] stringArray = new String[3];
DefaultChartDataModel defaultChartDataModel = new DefaultChartDataModel(doubleArray, doubleArray, stringArray);
CoordSystem coordSystem = new CoordSystem(defaultChartDataModel);
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
// Undeclared exception!
try { 
  coordSystemUtilities.drawNumericalXAxisTicks((Graphics2D) null);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 15: 
double[][] doubleArray = new double[3][6];
double[] doubleArray = new double[2];
doubleArray[0] = (-1570.889471817);
doubleArray[1] = (-1306.02151431);
doubleArray[0] = doubleArray;
doubleArray[1] = doubleArray;
doubleArray[2] = doubleArray;
String[] stringArray = new String[5];
DefaultChartDataModel defaultChartDataModel = new DefaultChartDataModel(doubleArray, doubleArray, stringArray);
CoordSystem coordSystem = new CoordSystem(defaultChartDataModel, "n~sMnv]\"r,}Bi?W2<", "ZOT'c");
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
// Undeclared exception!
try { 
  coordSystemUtilities.drawNumericalXAxisTicks((Graphics2D) null);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 16: 
ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel();
CoordSystem coordSystem = new CoordSystem(objectChartDataModel);
BufferedImage bufferedImage = new BufferedImage(15, 20, 1);
AffineTransform rotateInstance = AffineTransform.getRotateInstance((double) 15, (double) 20);
coordSystem.y1transform = rotateInstance;
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
Graphics2D createGraphics = bufferedImage.createGraphics();
coordSystemUtilities.drawNumericalXAxisTicks(createGraphics);
Test 17: 
ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel();
CoordSystem coordSystem = new CoordSystem(objectChartDataModel);
coordSystem.setPaintLabels(false);
BufferedImage bufferedImage = new BufferedImage(15, 20, 1);
AffineTransform rotateInstance = AffineTransform.getRotateInstance((double) 15, (double) 20);
coordSystem.y1transform = rotateInstance;
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
Graphics2D createGraphics = bufferedImage.createGraphics();
coordSystemUtilities.drawNumericalXAxisTicks(createGraphics);
Test 18: 
double[][] doubleArray = new double[1][3];
double[] doubleArray = new double[1];
doubleArray[0] = 0.39999999999999997;
doubleArray[0] = doubleArray;
String[] stringArray = new String[1];
DefaultChartDataModel defaultChartDataModel = new DefaultChartDataModel(doubleArray, doubleArray, stringArray);
CoordSystem coordSystem = new CoordSystem(defaultChartDataModel);
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
// Undeclared exception!
try { 
  coordSystemUtilities.drawXAxisTicks((Graphics2D) null);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 19: 
ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel();
CoordSystem coordSystem = new CoordSystem(objectChartDataModel);
BufferedImage bufferedImage = new BufferedImage(15, 20, 1);
AffineTransform rotateInstance = AffineTransform.getRotateInstance((double) 15, (double) 20);
coordSystem.y1transform = rotateInstance;
coordSystem.setPaintLabels(false);
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
Graphics2D createGraphics = bufferedImage.createGraphics();
coordSystemUtilities.drawXAxisTicks(createGraphics);
Test 20: 
ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel();
CoordSystem coordSystem = new CoordSystem(objectChartDataModel);
BufferedImage bufferedImage = new BufferedImage(15, 20, 1);
AffineTransform rotateInstance = AffineTransform.getRotateInstance((double) 15, (double) 20);
coordSystem.y1transform = rotateInstance;
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
Graphics2D createGraphics = bufferedImage.createGraphics();
// Undeclared exception!
try { 
  coordSystemUtilities.drawXAxisTicks(createGraphics);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 21: 
double[][] doubleArray = new double[2][5];
double[] doubleArray = new double[6];
doubleArray[0] = (double) 1;
doubleArray[1] = (double) 1;
doubleArray[2] = (double) 20;
doubleArray[3] = 1459.6169454;
doubleArray[4] = (double) 15;
doubleArray[5] = (double) 15;
doubleArray[0] = doubleArray;
doubleArray[1] = doubleArray;
String[] stringArray = new String[3];
DefaultChartDataModel defaultChartDataModel = new DefaultChartDataModel(doubleArray, doubleArray, stringArray);
CoordSystem coordSystem = new CoordSystem(defaultChartDataModel);
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
// Undeclared exception!
try { 
  coordSystemUtilities.drawYAxisTicks((Graphics2D) null);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 22: 
double[][] doubleArray = new double[3][6];
double[] doubleArray = new double[2];
doubleArray[1] = (-1570.889471817);
doubleArray[0] = doubleArray;
double[] doubleArray = new double[3];
doubleArray[0] = (-1570.889471817);
doubleArray[1] = (-1570.889471817);
doubleArray[2] = (-1570.889471817);
String[] stringArray = new String[5];
DefaultChartDataModel defaultChartDataModel = new DefaultChartDataModel(doubleArray, doubleArray, stringArray);
CoordSystem coordSystem = new CoordSystem(defaultChartDataModel);
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
// Undeclared exception!
try { 
  coordSystemUtilities.drawYAxisTicks((Graphics2D) null);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 23: 
double[][] doubleArray = new double[3][6];
double[] doubleArray = new double[2];
doubleArray[1] = (-1570.889471817);
doubleArray[0] = doubleArray;
double[] doubleArray = new double[3];
doubleArray[0] = (-1570.889471817);
doubleArray[1] = (-1570.889471817);
doubleArray[2] = (-1570.889471817);
String[] stringArray = new String[5];
DefaultChartDataModel defaultChartDataModel = new DefaultChartDataModel(doubleArray, doubleArray, stringArray);
CoordSystem coordSystem = new CoordSystem(defaultChartDataModel);
Axis axis = coordSystem.xaxis;
coordSystem.yaxis2 = axis;
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
// Undeclared exception!
try { 
  coordSystemUtilities.drawYAxisTicks((Graphics2D) null);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 24: 
ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel();
CoordSystem coordSystem = new CoordSystem(objectChartDataModel);
BufferedImage bufferedImage = new BufferedImage(15, 20, 1);
AffineTransform rotateInstance = AffineTransform.getRotateInstance((double) 15, (double) 20);
coordSystem.y1transform = rotateInstance;
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
Graphics2D createGraphics = bufferedImage.createGraphics();
coordSystemUtilities.drawYAxisTicks(createGraphics);
Test 25: 
ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel();
CoordSystem coordSystem = new CoordSystem(objectChartDataModel);
BufferedImage bufferedImage = new BufferedImage(15, 20, 1);
AffineTransform rotateInstance = AffineTransform.getRotateInstance((double) 15, (double) 20);
coordSystem.y1transform = rotateInstance;
coordSystem.setPaintLabels(false);
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
Graphics2D createGraphics = bufferedImage.createGraphics();
coordSystemUtilities.drawYAxisTicks(createGraphics);
Test 26: 
ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel();
CoordSystem coordSystem = new CoordSystem(objectChartDataModel);
BufferedImage bufferedImage = new BufferedImage(15, 20, 1);
coordSystem.shouldPaintAltTick = false;
AffineTransform rotateInstance = AffineTransform.getRotateInstance((double) 15, (double) 20);
coordSystem.y1transform = rotateInstance;
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
Graphics2D createGraphics = bufferedImage.createGraphics();
coordSystemUtilities.drawYAxisTicks(createGraphics);
Test 27: 
double[][] doubleArray = new double[1][8];
double[] doubleArray = new double[1];
doubleArray[0] = 4.000000000000002;
doubleArray[0] = doubleArray;
String[] stringArray = new String[2];
EditableChartDataModel editableChartDataModel = new EditableChartDataModel(doubleArray, doubleArray, stringArray);
JSpinner jSpinner = new JSpinner();
JSpinner.NumberEditor jSpinner_NumberEditor = new JSpinner.NumberEditor(jSpinner);
DecimalFormat format = jSpinner_NumberEditor.getFormat();
CoordSystem coordSystem = new CoordSystem(editableChartDataModel, format, true, true, false);
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
// Undeclared exception!
try { 
  coordSystemUtilities.getXAxisLine2D();
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("de.progra.charting.CoordSystemUtilities", e);
}

Test 28: 
double[][] doubleArray = new double[3][6];
double[] doubleArray = new double[2];
doubleArray[0] = (-1570.889471817);
doubleArray[1] = (-1306.02151431);
doubleArray[0] = doubleArray;
doubleArray[1] = doubleArray;
doubleArray[2] = doubleArray;
String[] stringArray = new String[5];
DefaultChartDataModel defaultChartDataModel = new DefaultChartDataModel(doubleArray, doubleArray, stringArray);
CoordSystem coordSystem = new CoordSystem(defaultChartDataModel, "n~sMnv]\"r,}Bi?W2<", "ZOT'c");
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
// Undeclared exception!
try { 
  coordSystemUtilities.getXAxisLine2D();
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("de.progra.charting.CoordSystemUtilities", e);
}

Test 29: 
int[][] intArray = new int[3][5];
double[] doubleArray = new double[6];
doubleArray[0] = (double) 1000;
doubleArray[1] = (double) 1000;
doubleArray[2] = (double) 1000;
doubleArray[3] = (double) 1000;
doubleArray[4] = (double) 1000;
doubleArray[5] = (double) 1000;
String[] stringArray = new String[6];
EditableChartDataModel editableChartDataModel = new EditableChartDataModel(intArray, doubleArray, stringArray);
CoordSystem coordSystem = new CoordSystem(editableChartDataModel);
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
// Undeclared exception!
try { 
  coordSystemUtilities.getYAxisLine2D();
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("de.progra.charting.CoordSystemUtilities", e);
}

Test 30: 
double[][] doubleArray = new double[3][6];
double[] doubleArray = new double[2];
doubleArray[0] = (-1570.889471817);
doubleArray[1] = (-1570.889471817);
String[] stringArray = new String[5];
DefaultChartDataModel defaultChartDataModel = new DefaultChartDataModel(doubleArray, doubleArray, stringArray);
CoordSystem coordSystem = new CoordSystem(defaultChartDataModel, "", "c'c");
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
Axis axis = coordSystem.yaxis;
coordSystem.yaxis2 = axis;
// Undeclared exception!
try { 
  coordSystemUtilities.getYAxisLine2D();
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("de.progra.charting.CoordSystemUtilities", e);
}

Test 31: 
double[][] doubleArray = new double[3][6];
String[] stringArray = new String[5];
DefaultChartDataModel defaultChartDataModel = new DefaultChartDataModel(doubleArray, doubleArray[0], stringArray);
CoordSystem coordSystem = new CoordSystem(defaultChartDataModel, stringArray[2], "#2Ta`x<d2\"");
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
coordSystemUtilities.computeLeftMargin();
Test 32: 
double[][] doubleArray = new double[3][6];
double[] doubleArray = new double[2];
doubleArray[0] = (-1570.889471817);
doubleArray[0] = doubleArray;
String[] stringArray = new String[5];
DefaultChartDataModel defaultChartDataModel = new DefaultChartDataModel(doubleArray, doubleArray, stringArray);
CoordSystem coordSystem = new CoordSystem(defaultChartDataModel);
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
coordSystemUtilities.computeXAxisLabelHeight();
Test 33: 
ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel();
CoordSystem coordSystem = new CoordSystem(objectChartDataModel, (String) null, "");
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
coordSystemUtilities.computeYAxisLabelWidth();
Test 34: 
double[][] doubleArray = new double[3][6];
double[] doubleArray = new double[3];
doubleArray[0] = (-1570.889471817);
doubleArray[1] = (-1570.889471817);
doubleArray[2] = (-1570.889471817);
String[] stringArray = new String[5];
DefaultChartDataModel defaultChartDataModel = new DefaultChartDataModel(doubleArray, doubleArray, stringArray);
CoordSystem coordSystem = new CoordSystem(defaultChartDataModel);
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
// Undeclared exception!
try { 
  coordSystemUtilities.getYAxisLine2D();
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("de.progra.charting.CoordSystemUtilities", e);
}

Test 35: 
ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel();
CoordSystem coordSystem = new CoordSystem(objectChartDataModel, (String) null, (String) null);
AffineTransform affineTransform = new AffineTransform((float) 0, (float) 0, 0.0F, 0.0F, (float) 1, 0.0F);
coordSystem.y2transform = affineTransform;
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
coordSystemUtilities.getSecondYAxisLine2D();
Test 36: 
ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel();
CoordSystem coordSystem = new CoordSystem(objectChartDataModel);
AffineTransform quadrantRotateInstance = AffineTransform.getQuadrantRotateInstance(20, (double) 20, 278.7917028);
coordSystem.y1transform = quadrantRotateInstance;
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
coordSystemUtilities.getXAxisLine2D();
Test 37: 
double[][] doubleArray = new double[3][6];
String[] stringArray = new String[5];
DefaultChartDataModel defaultChartDataModel = new DefaultChartDataModel(doubleArray, doubleArray[0], stringArray);
CoordSystem coordSystem = new CoordSystem(defaultChartDataModel, stringArray[2], "#2Ta`x<d2\"");
AffineTransform affineTransform = new AffineTransform((-1570.889471817), 0.0, (-2916.09), 964.329681923832, 40.0, (-1306.02151431));
coordSystem.y1transform = affineTransform;
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
coordSystemUtilities.getYAxisLine2D();
Test 38: 
ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel();
CoordSystem coordSystem = new CoordSystem(objectChartDataModel);

Test 39: 
ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel();
CoordSystem coordSystem = new CoordSystem(objectChartDataModel);

Test 40: 
double[][] doubleArray = new double[1][8];
double[] doubleArray = new double[1];
doubleArray[0] = 3.14;
String[] stringArray = new String[6];
EditableChartDataModel editableChartDataModel = new EditableChartDataModel((double[][]) doubleArray, doubleArray, stringArray);
DecimalFormatSymbols decimalFormatSymbols = new DecimalFormatSymbols();
String string = "";
DecimalFormat decimalFormat = new DecimalFormat(string, decimalFormatSymbols);
boolean _boolean = false;
boolean _boolean = false;
boolean _boolean = false;
CoordSystem coordSystem = new CoordSystem(editableChartDataModel, decimalFormat, _boolean, _boolean, _boolean);

Test 41: 
ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel();
CoordSystem coordSystem = new CoordSystem(objectChartDataModel, "^R^i>pE#zxTl02\"(", "^R^i>pE#zxTl02\"(");
CoordSystem coordSystem = new CoordSystem(objectChartDataModel, "my_coord_system", "^R^i>pE#zxTl02\"(");

Test 42: 
double[][] doubleArray = new double[1][0];
doubleArray[0] = (double[]) 1138.447;
doubleArray[0] = (double[]) doubleArray;
String[] stringArray = new String[9];
String[] stringArray = new String[9];
DefaultChartDataModel defaultChartDataModel = new DefaultChartDataModel(doubleArray, (double[]) doubleArray, stringArray);
String string = "~oG#U";
CoordSystem coordSystem = new CoordSystem(defaultChartDataModel, string, "~oG#U");

Test 43: 
double[][] doubleArray = new double[1][8];
double[] doubleArray = new double[1];
doubleArray[0] = 3.14;
doubleArray[0] = (double) doubleArray;
String[] stringArray = new String[6];
EditableChartDataModel editableChartDataModel = new EditableChartDataModel((double[][]) doubleArray, doubleArray, stringArray);
DecimalFormatSymbols decimalFormatSymbols = new DecimalFormatSymbols();
String string = "";
DecimalFormat decimalFormat = new DecimalFormat(string, decimalFormatSymbols);
boolean _boolean = false;
boolean _boolean = false;
boolean _boolean = false;
CoordSystem coordSystem = new CoordSystem(editableChartDataModel, decimalFormat, _boolean, _boolean, _boolean);

Test 44: 
CoordSystem coordSystem = new CoordSystem((ChartDataModel) "oKU{2s[lgD0uL", "", "");

Test 45: 
Object[] objectArray = new Object[4];
Number[][] numberArray = new Number[0][3];
String[] stringArray = new String[0];
ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel(numberArray, objectArray, stringArray);
CoordSystem coordSystem = new CoordSystem(objectChartDataModel, "de.progra.charting.CoordSystemUtilities", "de.progra.charting.CoordSystemUtilities");
CoordSystemUtilities coordSystemUtilities = new CoordSystemUtilities(coordSystem, (ChartDataModelConstraints) objectChartDataModel, (ChartDataModelConstraints) "de.progra.charting.CoordSystemUtilities", objectChartDataModel);
((CoordSystemUtilities) coordSystem).computeBottomMargin();

Test 46: 
CoordSystem coordSystem = new CoordSystem((ChartDataModel) "oKU{2s[lgD0uL", "", "");

Test 47: 
int[][] intArray = new int[1][9];
int[] intArray = new int[9];
intArray[0] = Integer.MAX_VALUE;
intArray[1] = Integer.MAX_VALUE;
intArray[2] = 623;
intArray[3] = Integer.MAX_VALUE;
intArray[4] = Integer.MAX_VALUE;
intArray[5] = Integer.MAX_VALUE;
intArray[6] = Integer.MAX_VALUE;
intArray[7] = 6;
intArray[8] = Integer.MAX_VALUE;
intArray[0] = (int) intArray;
String[] stringArray = new String[8];
ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel((int[][]) intArray, (Object[]) intArray, stringArray);
boolean _boolean = true;
boolean _boolean = false;
boolean _boolean = false;
CoordSystem coordSystem = new CoordSystem(objectChartDataModel, (DecimalFormat) _boolean, _boolean, _boolean, false);

Test 48: 
double[] doubleArray = new double[4];
doubleArray[0] = (-1570.889471817);
doubleArray[1] = (-1306.02151431);
doubleArray[2] = (-1306.02151431);
doubleArray[3] = (-1570.889471817);
String[] stringArray = new String[5];
DefaultChartDataModel defaultChartDataModel = new DefaultChartDataModel((double[][]) doubleArray, doubleArray, stringArray);
CoordSystem coordSystem = new CoordSystem(defaultChartDataModel);

Test 49: 
double[][] doubleArray = new double[3][6];
double[] doubleArray = new double[2];
doubleArray[1] = 3.14;
doubleArray[1] = (double) doubleArray;
double[] doubleArray = new double[2];
doubleArray[1] = 3.14;
doubleArray[1] = 3.14;
double _double = 3.14;
doubleArray[1] = 3.14;
String[] stringArray = new String[5];
DefaultChartDataModel defaultChartDataModel = new DefaultChartDataModel((double[][]) doubleArray, doubleArray, stringArray);
CoordSystem coordSystem = new CoordSystem(defaultChartDataModel);
Axis xAxis = ((CoordSystem) _double).getXAxis();
((CoordSystem) _double).setSecondYAxis(xAxis);

Test 50: 
double[][] doubleArray = new double[1][5];
doubleArray[0] = (double[]) 0.2;
double _double = 2251.13228227;
doubleArray[0] = (double[]) _double;
double _double = 25.0;
doubleArray[0] = (double[]) _double;
double _double = 1639.553;
doubleArray[0] = (double[]) _double;
double _double = 2472.4206967;
doubleArray[0] = (double[]) _double;
double _double = 3.0;
doubleArray[0] = (double[]) _double;
doubleArray[0] = (double[]) doubleArray;
String[] stringArray = new String[3];
DefaultChartDataModel defaultChartDataModel = new DefaultChartDataModel(doubleArray, (double[]) doubleArray, stringArray);
CoordSystem coordSystem = new CoordSystem(defaultChartDataModel);

Test 51: 
double[][] doubleArray = new double[3][6];
double _double = 15.4;
doubleArray[0] = (double[]) 15.4;
doubleArray[1] = doubleArray[0];
double _double = 1.0E-6;
doubleArray[2] = (double[]) _double;
doubleArray[0] = (double[]) _double;
doubleArray[0] = (double[]) _double;
doubleArray[0] = (double[]) _double;
String[] stringArray = new String[5];
DefaultChartDataModel defaultChartDataModel = new DefaultChartDataModel(doubleArray, (double[]) doubleArray, stringArray);
String string = "n~sMnv]\"r,}Bi?W2<";
String string = "ZOT'c";
CoordSystem coordSystem = new CoordSystem(defaultChartDataModel, string, string);

Test 52: 
ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel();
CoordSystem coordSystem = new CoordSystem(objectChartDataModel);
int _int = 15;
BufferedImage bufferedImage = new BufferedImage(15, 20, 1);
AffineTransform.getRotateInstance((double) 10, (double) (Double) null);
((BufferedImage) _int).createGraphics();

Test 53: 
ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel();
CoordSystem coordSystem = new CoordSystem(objectChartDataModel);
coordSystem.setPaintLabels(false);
BufferedImage bufferedImage = new BufferedImage(15, 20, 1);
AffineTransform.getRotateInstance((double) 30, (double) 40);
((BufferedImage)null).createGraphics();

Test 54: 
double[][] doubleArray = new double[1][3];
double[] doubleArray = new double[1];
doubleArray[0] = 0.39999999999999997;
doubleArray[0] = (double) doubleArray;
String[] stringArray = new String[1];
DefaultChartDataModel defaultChartDataModel = new DefaultChartDataModel((double[][]) doubleArray, doubleArray, stringArray);
CoordSystem coordSystem = new CoordSystem(defaultChartDataModel);

Test 55: 
ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel();
CoordSystem coordSystem = new CoordSystem(objectChartDataModel);
BufferedImage bufferedImage = new BufferedImage(15, 20, 1);
AffineTransform.getRotateInstance((double) 45, (double) 60);
coordSystem.setPaintLabels(false);
((BufferedImage)15).createGraphics();

Test 56: 
ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel();
CoordSystem coordSystem = new CoordSystem(objectChartDataModel);
BufferedImage bufferedImage = new BufferedImage(30, 40, 1);
AffineTransform.getRotateInstance((double) 45, (double) 20);
((BufferedImage)30).createGraphics();

Test 57: 
double[][] doubleArray = new double[2][5];
int _int = 1;
doubleArray[0] = (double[]) 1;
int _int = 1;
doubleArray[1] = (double[]) _int;
doubleArray[0] = (double[]) _int;
doubleArray[0] = (double[]) _int;
doubleArray[0] = (double[]) _int;
doubleArray[0] = (double[]) _int;
doubleArray[0] = (double[]) doubleArray;
doubleArray[1] = (double[]) _int;
String[] stringArray = new String[3];
DefaultChartDataModel defaultChartDataModel = new DefaultChartDataModel(doubleArray, (double[]) doubleArray, stringArray);
CoordSystem coordSystem = new CoordSystem(defaultChartDataModel);

Test 58: 
double[][] doubleArray = new double[3][6];
String[] stringArray = new String[5];
DefaultChartDataModel defaultChartDataModel = new DefaultChartDataModel(doubleArray, (double[]) doubleArray, stringArray);
CoordSystem coordSystem = new CoordSystem(defaultChartDataModel);

Test 59: 
double[][] doubleArray = new double[3][6];
double[] doubleArray = new double[2];
doubleArray[1] = (-1570.889471817);
doubleArray[1] = (double) doubleArray;
double[] doubleArray = new double[2];
doubleArray[1] = (double) doubleArray;
doubleArray[1] = (double) doubleArray;
doubleArray[1] = (double) doubleArray;
String[] stringArray = new String[5];
DefaultChartDataModel defaultChartDataModel = new DefaultChartDataModel((double[][]) doubleArray, doubleArray, stringArray);
CoordSystem coordSystem = new CoordSystem(defaultChartDataModel);

Test 60: 
int _int = 1;
BufferedImage bufferedImage = new BufferedImage(20, 30, 1);
BufferedImage bufferedImage = new BufferedImage(15, 20, 1);
AffineTransform.getRotateInstance((double) 30, (double) 25);
AffineTransform.getRotateInstance((double) 45, (double) 50);
CoordSystem coordSystem = new CoordSystem((ChartDataModel) bufferedImage);
CoordSystem coordSystem = new CoordSystem((ChartDataModel) bufferedImage);
((BufferedImage) _int).createGraphics();
((BufferedImage) _int).createGraphics();

Test 61: 
ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel();
CoordSystem coordSystem = new CoordSystem(objectChartDataModel);
BufferedImage bufferedImage = new BufferedImage(15, 20, 1);
AffineTransform.getRotateInstance((double) 30, (double) 40);
coordSystem.setPaintLabels(true);
((BufferedImage)15).createGraphics();

Test 62: 
ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel();
CoordSystem coordSystem = new CoordSystem(objectChartDataModel);
BufferedImage bufferedImage = new BufferedImage(640, 480, 1);
AffineTransform.getRotateInstance((double) 30, (double) 200);
((BufferedImage)640).createGraphics();

Test 63: 
JSpinner jSpinner = new JSpinner();
CoordSystem coordSystem = new CoordSystem((ChartDataModel) true, (DecimalFormat) true, false, true, false);

Test 64: 
double[][] doubleArray = new double[3][6];
double[] doubleArray = new double[2];
doubleArray[0] = (-1570.889471817);
doubleArray[1] = (-1306.02151431);
doubleArray[0] = (-1570.889471817);
doubleArray[0] = (-1570.889471817);
doubleArray[0] = (-1570.889471817);
doubleArray[0] = (-1570.889471817);
String[] stringArray = new String[5];
DefaultChartDataModel defaultChartDataModel = new DefaultChartDataModel((double[][]) doubleArray, doubleArray, stringArray);
String string = "n~sMnv]\"r,}Bi?W2<";
String string = "ZOT'c";
CoordSystem coordSystem = new CoordSystem(defaultChartDataModel, string, string);

Test 65: 
int[][] intArray = new int[3][5];
double[] doubleArray = new double[6];
doubleArray[0] = 1.1;
doubleArray[1] = 2.2;
doubleArray[2] = 3.3;
doubleArray[3] = 4.4;
doubleArray[4] = 5.5;
doubleArray[5] = 6.6;
String[] stringArray = new String[6];
EditableChartDataModel editableChartDataModel = new EditableChartDataModel(intArray, doubleArray, stringArray);
CoordSystem coordSystem = new CoordSystem(editableChartDataModel);

Test 66: 
CoordSystem coordSystem = new CoordSystem((ChartDataModel) "", "c'c", "c'c");

Test 67: 
double[][] doubleArray = new double[3][6];

Test 68: 
double[][] doubleArray = new double[3][6];
double[] doubleArray = new double[2];
doubleArray[0] = (-1570.889471817);
doubleArray[0] = (double) doubleArray;
String[] stringArray = new String[5];
DefaultChartDataModel defaultChartDataModel = new DefaultChartDataModel((double[][]) doubleArray, (double[]) stringArray, stringArray);
CoordSystem coordSystem = new CoordSystem(defaultChartDataModel);

Test 69: 
CoordSystem coordSystem = new CoordSystem((ChartDataModel) "", (String) null, "");

Test 70: 
ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel();
CoordSystem coordSystem = new CoordSystem(objectChartDataModel, "x-axis", "y-axis");
AffineTransform affineTransform = new AffineTransform((float) 0.5, (float) 0.5, 0.0F, 0.0F, (float) 1.0, 0.0F);

Test 71: 
ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel();
CoordSystem coordSystem = new CoordSystem(objectChartDataModel);
AffineTransform.getQuadrantRotateInstance(45, (double) 100, 278.7917028);

Test 72: 
AffineTransform affineTransform = new AffineTransform(0.0, 964.329681923832, 40.0, 964.329681923832, 40.0, (-1306.02151431));


* Generated after the refinement and before minimization 73 tests with total length 613
* test suite isTestSuite: 73
Test 0: 
ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel();
CoordSystem coordSystem = new CoordSystem(objectChartDataModel);
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
coordSystemUtilities.computeRightMargin();
Test 1: 
ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel();
CoordSystem coordSystem = new CoordSystem(objectChartDataModel);
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
coordSystemUtilities.computeTopMargin();
Test 2: 
double[][] doubleArray = new double[1][8];
double[] doubleArray = new double[1];
doubleArray[0] = 1.0;
String[] stringArray = new String[6];
EditableChartDataModel editableChartDataModel = new EditableChartDataModel(doubleArray, doubleArray, stringArray);
DecimalFormatSymbols decimalFormatSymbols = new DecimalFormatSymbols();
DecimalFormat decimalFormat = new DecimalFormat("", decimalFormatSymbols);
CoordSystem coordSystem = new CoordSystem(editableChartDataModel, decimalFormat, false, false, false);
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
coordSystemUtilities.computeLeftMargin();
Test 3: 
ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel();
CoordSystem coordSystem = new CoordSystem(objectChartDataModel, (String) null, "^R^i>pE#zxTl02\"(");
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
coordSystemUtilities.computeLeftMargin();
Test 4: 
double[][] doubleArray = new double[1][0];
double[] doubleArray = new double[9];
doubleArray[0] = (-2015.4909919749273);
doubleArray[1] = 1138.447;
doubleArray[0] = doubleArray;
String[] stringArray = new String[9];
DefaultChartDataModel defaultChartDataModel = new DefaultChartDataModel(doubleArray, doubleArray, stringArray);
CoordSystem coordSystem = new CoordSystem(defaultChartDataModel, stringArray[7], "~oG#U");
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
coordSystemUtilities.computeLeftMargin();
Test 5: 
double[][] doubleArray = new double[1][8];
double[] doubleArray = new double[1];
doubleArray[0] = 1.0;
doubleArray[0] = doubleArray;
String[] stringArray = new String[6];
EditableChartDataModel editableChartDataModel = new EditableChartDataModel(doubleArray, doubleArray, stringArray);
DecimalFormatSymbols decimalFormatSymbols = new DecimalFormatSymbols();
DecimalFormat decimalFormat = new DecimalFormat("", decimalFormatSymbols);
CoordSystem coordSystem = new CoordSystem(editableChartDataModel, decimalFormat, false, false, false);
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
coordSystemUtilities.computeBottomMargin();
Test 6: 
double[] doubleArray = new double[2];
String[] stringArray = new String[5];
int[][] intArray = new int[1][5];
EditableChartDataModel editableChartDataModel = new EditableChartDataModel(intArray, doubleArray, stringArray);
CoordSystem coordSystem = new CoordSystem(editableChartDataModel, "oKU{2s[lgD0uL", "");
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
coordSystemUtilities.computeBottomMargin();
Test 7: 
Object[] objectArray = new Object[4];
Number[][] numberArray = new Number[0][3];
String[] stringArray = new String[0];
ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel(numberArray, objectArray, stringArray);
CoordSystem coordSystem = new CoordSystem(objectChartDataModel, "de.progra.charting.CoordSystemUtilities", "de.progra.charting.CoordSystemUtilities");
DefaultChartDataModelConstraints defaultChartDataModelConstraints = (DefaultChartDataModelConstraints)coordSystem.constraints;
CoordSystemUtilities coordSystemUtilities = new CoordSystemUtilities(coordSystem, defaultChartDataModelConstraints, defaultChartDataModelConstraints, objectChartDataModel);
coordSystemUtilities.computeBottomMargin();
Test 8: 
double[] doubleArray = new double[2];
doubleArray[1] = (-1306.02151431);
String[] stringArray = new String[5];
int[][] intArray = new int[1][5];
int[] intArray = new int[7];
intArray[0] = 20;
intArray[1] = (-2109045091);
intArray[0] = intArray;
EditableChartDataModel editableChartDataModel = new EditableChartDataModel(intArray, doubleArray, stringArray);
CoordSystem coordSystem = new CoordSystem(editableChartDataModel, "oKU{2s[lgD0uL", "");
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
coordSystemUtilities.computeBottomMargin();
Test 9: 
int[][] intArray = new int[1][9];
int[] intArray = new int[9];
intArray[0] = Integer.MAX_VALUE;
intArray[1] = Integer.MAX_VALUE;
intArray[2] = 623;
intArray[3] = Integer.MAX_VALUE;
intArray[4] = Integer.MAX_VALUE;
intArray[5] = Integer.MAX_VALUE;
intArray[6] = Integer.MAX_VALUE;
intArray[7] = 6;
intArray[8] = Integer.MAX_VALUE;
intArray[0] = intArray;
String[] stringArray = new String[8];
ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel(intArray, intArray, stringArray);
CoordSystem coordSystem = new CoordSystem(objectChartDataModel, (DecimalFormat) null, true, false, false);
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
coordSystemUtilities.computeXAxisLabelHeight();
Test 10: 
double[] doubleArray = new double[4];
doubleArray[0] = (-1570.889471817);
doubleArray[1] = (-1306.02151431);
doubleArray[2] = (-1306.02151431);
doubleArray[3] = (-1570.889471817);
String[] stringArray = new String[5];
double[][] doubleArray = new double[1][4];
doubleArray[0] = doubleArray;
DefaultChartDataModel defaultChartDataModel = new DefaultChartDataModel(doubleArray, doubleArray, stringArray);
CoordSystem coordSystem = new CoordSystem(defaultChartDataModel);
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
coordSystemUtilities.computeXAxisLabelHeight();
Test 11: 
double[][] doubleArray = new double[2][2];
double[] doubleArray = new double[1];
doubleArray[0] = (double) 1;
doubleArray[0] = doubleArray;
String[] stringArray = new String[12];
DefaultChartDataModel defaultChartDataModel = new DefaultChartDataModel(doubleArray, doubleArray, stringArray);
CoordSystem coordSystem = new CoordSystem(defaultChartDataModel);
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
coordSystemUtilities.computeYAxisLabelWidth();
Test 12: 
double[][] doubleArray = new double[3][6];
double[] doubleArray = new double[2];
doubleArray[1] = (-1306.02151431);
doubleArray[0] = doubleArray;
double[] doubleArray = new double[4];
doubleArray[0] = (-1570.889471817);
doubleArray[1] = (-1306.02151431);
doubleArray[2] = (-1306.02151431);
doubleArray[3] = (-1570.889471817);
String[] stringArray = new String[5];
DefaultChartDataModel defaultChartDataModel = new DefaultChartDataModel(doubleArray, doubleArray, stringArray);
CoordSystem coordSystem = new CoordSystem(defaultChartDataModel);
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
coordSystemUtilities.computeYAxisLabelWidth();
Test 13: 
double[][] doubleArray = new double[3][6];
double[] doubleArray = new double[2];
doubleArray[1] = (-1570.889471817);
doubleArray[0] = doubleArray;
double[] doubleArray = new double[3];
doubleArray[0] = (-1570.889471817);
doubleArray[1] = (-1570.889471817);
doubleArray[2] = (-1570.889471817);
String[] stringArray = new String[5];
DefaultChartDataModel defaultChartDataModel = new DefaultChartDataModel(doubleArray, doubleArray, stringArray);
CoordSystem coordSystem = new CoordSystem(defaultChartDataModel);
Axis xAxis = coordSystem.getXAxis();
coordSystem.setSecondYAxis(xAxis);
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
coordSystemUtilities.computeYAxisLabelWidth();
Test 14: 
double[][] doubleArray = new double[1][5];
double[] doubleArray = new double[6];
doubleArray[0] = 0.2;
doubleArray[1] = 2251.13228227;
doubleArray[2] = 25.0;
doubleArray[3] = 1639.553;
doubleArray[4] = 2472.4206967;
doubleArray[5] = 3.0;
doubleArray[0] = doubleArray;
String[] stringArray = new String[3];
DefaultChartDataModel defaultChartDataModel = new DefaultChartDataModel(doubleArray, doubleArray, stringArray);
CoordSystem coordSystem = new CoordSystem(defaultChartDataModel);
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
// Undeclared exception!
try { 
  coordSystemUtilities.drawNumericalXAxisTicks((Graphics2D) null);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 15: 
double[][] doubleArray = new double[3][6];
double[] doubleArray = new double[2];
doubleArray[0] = (-1570.889471817);
doubleArray[1] = (-1306.02151431);
doubleArray[0] = doubleArray;
doubleArray[1] = doubleArray;
doubleArray[2] = doubleArray;
String[] stringArray = new String[5];
DefaultChartDataModel defaultChartDataModel = new DefaultChartDataModel(doubleArray, doubleArray, stringArray);
CoordSystem coordSystem = new CoordSystem(defaultChartDataModel, "n~sMnv]\"r,}Bi?W2<", "ZOT'c");
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
// Undeclared exception!
try { 
  coordSystemUtilities.drawNumericalXAxisTicks((Graphics2D) null);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 16: 
ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel();
CoordSystem coordSystem = new CoordSystem(objectChartDataModel);
BufferedImage bufferedImage = new BufferedImage(15, 20, 1);
AffineTransform rotateInstance = AffineTransform.getRotateInstance((double) 15, (double) 20);
coordSystem.y1transform = rotateInstance;
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
Graphics2D createGraphics = bufferedImage.createGraphics();
coordSystemUtilities.drawNumericalXAxisTicks(createGraphics);
Test 17: 
ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel();
CoordSystem coordSystem = new CoordSystem(objectChartDataModel);
coordSystem.setPaintLabels(false);
BufferedImage bufferedImage = new BufferedImage(15, 20, 1);
AffineTransform rotateInstance = AffineTransform.getRotateInstance((double) 15, (double) 20);
coordSystem.y1transform = rotateInstance;
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
Graphics2D createGraphics = bufferedImage.createGraphics();
coordSystemUtilities.drawNumericalXAxisTicks(createGraphics);
Test 18: 
double[][] doubleArray = new double[1][3];
double[] doubleArray = new double[1];
doubleArray[0] = 0.39999999999999997;
doubleArray[0] = doubleArray;
String[] stringArray = new String[1];
DefaultChartDataModel defaultChartDataModel = new DefaultChartDataModel(doubleArray, doubleArray, stringArray);
CoordSystem coordSystem = new CoordSystem(defaultChartDataModel);
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
// Undeclared exception!
try { 
  coordSystemUtilities.drawXAxisTicks((Graphics2D) null);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 19: 
ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel();
CoordSystem coordSystem = new CoordSystem(objectChartDataModel);
BufferedImage bufferedImage = new BufferedImage(15, 20, 1);
AffineTransform rotateInstance = AffineTransform.getRotateInstance((double) 15, (double) 20);
coordSystem.y1transform = rotateInstance;
coordSystem.setPaintLabels(false);
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
Graphics2D createGraphics = bufferedImage.createGraphics();
coordSystemUtilities.drawXAxisTicks(createGraphics);
Test 20: 
ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel();
CoordSystem coordSystem = new CoordSystem(objectChartDataModel);
BufferedImage bufferedImage = new BufferedImage(15, 20, 1);
AffineTransform rotateInstance = AffineTransform.getRotateInstance((double) 15, (double) 20);
coordSystem.y1transform = rotateInstance;
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
Graphics2D createGraphics = bufferedImage.createGraphics();
// Undeclared exception!
try { 
  coordSystemUtilities.drawXAxisTicks(createGraphics);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 21: 
double[][] doubleArray = new double[2][5];
double[] doubleArray = new double[6];
doubleArray[0] = (double) 1;
doubleArray[1] = (double) 1;
doubleArray[2] = (double) 20;
doubleArray[3] = 1459.6169454;
doubleArray[4] = (double) 15;
doubleArray[5] = (double) 15;
doubleArray[0] = doubleArray;
doubleArray[1] = doubleArray;
String[] stringArray = new String[3];
DefaultChartDataModel defaultChartDataModel = new DefaultChartDataModel(doubleArray, doubleArray, stringArray);
CoordSystem coordSystem = new CoordSystem(defaultChartDataModel);
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
// Undeclared exception!
try { 
  coordSystemUtilities.drawYAxisTicks((Graphics2D) null);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 22: 
double[][] doubleArray = new double[3][6];
double[] doubleArray = new double[2];
doubleArray[1] = (-1570.889471817);
doubleArray[0] = doubleArray;
double[] doubleArray = new double[3];
doubleArray[0] = (-1570.889471817);
doubleArray[1] = (-1570.889471817);
doubleArray[2] = (-1570.889471817);
String[] stringArray = new String[5];
DefaultChartDataModel defaultChartDataModel = new DefaultChartDataModel(doubleArray, doubleArray, stringArray);
CoordSystem coordSystem = new CoordSystem(defaultChartDataModel);
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
// Undeclared exception!
try { 
  coordSystemUtilities.drawYAxisTicks((Graphics2D) null);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 23: 
double[][] doubleArray = new double[3][6];
double[] doubleArray = new double[2];
doubleArray[1] = (-1570.889471817);
doubleArray[0] = doubleArray;
double[] doubleArray = new double[3];
doubleArray[0] = (-1570.889471817);
doubleArray[1] = (-1570.889471817);
doubleArray[2] = (-1570.889471817);
String[] stringArray = new String[5];
DefaultChartDataModel defaultChartDataModel = new DefaultChartDataModel(doubleArray, doubleArray, stringArray);
CoordSystem coordSystem = new CoordSystem(defaultChartDataModel);
Axis axis = coordSystem.xaxis;
coordSystem.yaxis2 = axis;
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
// Undeclared exception!
try { 
  coordSystemUtilities.drawYAxisTicks((Graphics2D) null);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 24: 
ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel();
CoordSystem coordSystem = new CoordSystem(objectChartDataModel);
BufferedImage bufferedImage = new BufferedImage(15, 20, 1);
AffineTransform rotateInstance = AffineTransform.getRotateInstance((double) 15, (double) 20);
coordSystem.y1transform = rotateInstance;
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
Graphics2D createGraphics = bufferedImage.createGraphics();
coordSystemUtilities.drawYAxisTicks(createGraphics);
Test 25: 
ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel();
CoordSystem coordSystem = new CoordSystem(objectChartDataModel);
BufferedImage bufferedImage = new BufferedImage(15, 20, 1);
AffineTransform rotateInstance = AffineTransform.getRotateInstance((double) 15, (double) 20);
coordSystem.y1transform = rotateInstance;
coordSystem.setPaintLabels(false);
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
Graphics2D createGraphics = bufferedImage.createGraphics();
coordSystemUtilities.drawYAxisTicks(createGraphics);
Test 26: 
ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel();
CoordSystem coordSystem = new CoordSystem(objectChartDataModel);
BufferedImage bufferedImage = new BufferedImage(15, 20, 1);
coordSystem.shouldPaintAltTick = false;
AffineTransform rotateInstance = AffineTransform.getRotateInstance((double) 15, (double) 20);
coordSystem.y1transform = rotateInstance;
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
Graphics2D createGraphics = bufferedImage.createGraphics();
coordSystemUtilities.drawYAxisTicks(createGraphics);
Test 27: 
double[][] doubleArray = new double[1][8];
double[] doubleArray = new double[1];
doubleArray[0] = 4.000000000000002;
doubleArray[0] = doubleArray;
String[] stringArray = new String[2];
EditableChartDataModel editableChartDataModel = new EditableChartDataModel(doubleArray, doubleArray, stringArray);
JSpinner jSpinner = new JSpinner();
JSpinner.NumberEditor jSpinner_NumberEditor = new JSpinner.NumberEditor(jSpinner);
DecimalFormat format = jSpinner_NumberEditor.getFormat();
CoordSystem coordSystem = new CoordSystem(editableChartDataModel, format, true, true, false);
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
// Undeclared exception!
try { 
  coordSystemUtilities.getXAxisLine2D();
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("de.progra.charting.CoordSystemUtilities", e);
}

Test 28: 
double[][] doubleArray = new double[3][6];
double[] doubleArray = new double[2];
doubleArray[0] = (-1570.889471817);
doubleArray[1] = (-1306.02151431);
doubleArray[0] = doubleArray;
doubleArray[1] = doubleArray;
doubleArray[2] = doubleArray;
String[] stringArray = new String[5];
DefaultChartDataModel defaultChartDataModel = new DefaultChartDataModel(doubleArray, doubleArray, stringArray);
CoordSystem coordSystem = new CoordSystem(defaultChartDataModel, "n~sMnv]\"r,}Bi?W2<", "ZOT'c");
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
// Undeclared exception!
try { 
  coordSystemUtilities.getXAxisLine2D();
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("de.progra.charting.CoordSystemUtilities", e);
}

Test 29: 
int[][] intArray = new int[3][5];
double[] doubleArray = new double[6];
doubleArray[0] = (double) 1000;
doubleArray[1] = (double) 1000;
doubleArray[2] = (double) 1000;
doubleArray[3] = (double) 1000;
doubleArray[4] = (double) 1000;
doubleArray[5] = (double) 1000;
String[] stringArray = new String[6];
EditableChartDataModel editableChartDataModel = new EditableChartDataModel(intArray, doubleArray, stringArray);
CoordSystem coordSystem = new CoordSystem(editableChartDataModel);
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
// Undeclared exception!
try { 
  coordSystemUtilities.getYAxisLine2D();
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("de.progra.charting.CoordSystemUtilities", e);
}

Test 30: 
double[][] doubleArray = new double[3][6];
double[] doubleArray = new double[2];
doubleArray[0] = (-1570.889471817);
doubleArray[1] = (-1570.889471817);
String[] stringArray = new String[5];
DefaultChartDataModel defaultChartDataModel = new DefaultChartDataModel(doubleArray, doubleArray, stringArray);
CoordSystem coordSystem = new CoordSystem(defaultChartDataModel, "", "c'c");
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
Axis axis = coordSystem.yaxis;
coordSystem.yaxis2 = axis;
// Undeclared exception!
try { 
  coordSystemUtilities.getYAxisLine2D();
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("de.progra.charting.CoordSystemUtilities", e);
}

Test 31: 
double[][] doubleArray = new double[3][6];
String[] stringArray = new String[5];
DefaultChartDataModel defaultChartDataModel = new DefaultChartDataModel(doubleArray, doubleArray[0], stringArray);
CoordSystem coordSystem = new CoordSystem(defaultChartDataModel, stringArray[2], "#2Ta`x<d2\"");
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
coordSystemUtilities.computeLeftMargin();
Test 32: 
double[][] doubleArray = new double[3][6];
double[] doubleArray = new double[2];
doubleArray[0] = (-1570.889471817);
doubleArray[0] = doubleArray;
String[] stringArray = new String[5];
DefaultChartDataModel defaultChartDataModel = new DefaultChartDataModel(doubleArray, doubleArray, stringArray);
CoordSystem coordSystem = new CoordSystem(defaultChartDataModel);
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
coordSystemUtilities.computeXAxisLabelHeight();
Test 33: 
ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel();
CoordSystem coordSystem = new CoordSystem(objectChartDataModel, (String) null, "");
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
coordSystemUtilities.computeYAxisLabelWidth();
Test 34: 
double[][] doubleArray = new double[3][6];
double[] doubleArray = new double[3];
doubleArray[0] = (-1570.889471817);
doubleArray[1] = (-1570.889471817);
doubleArray[2] = (-1570.889471817);
String[] stringArray = new String[5];
DefaultChartDataModel defaultChartDataModel = new DefaultChartDataModel(doubleArray, doubleArray, stringArray);
CoordSystem coordSystem = new CoordSystem(defaultChartDataModel);
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
// Undeclared exception!
try { 
  coordSystemUtilities.getYAxisLine2D();
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("de.progra.charting.CoordSystemUtilities", e);
}

Test 35: 
ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel();
CoordSystem coordSystem = new CoordSystem(objectChartDataModel, (String) null, (String) null);
AffineTransform affineTransform = new AffineTransform((float) 0, (float) 0, 0.0F, 0.0F, (float) 1, 0.0F);
coordSystem.y2transform = affineTransform;
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
coordSystemUtilities.getSecondYAxisLine2D();
Test 36: 
ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel();
CoordSystem coordSystem = new CoordSystem(objectChartDataModel);
AffineTransform quadrantRotateInstance = AffineTransform.getQuadrantRotateInstance(20, (double) 20, 278.7917028);
coordSystem.y1transform = quadrantRotateInstance;
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
coordSystemUtilities.getXAxisLine2D();
Test 37: 
double[][] doubleArray = new double[3][6];
String[] stringArray = new String[5];
DefaultChartDataModel defaultChartDataModel = new DefaultChartDataModel(doubleArray, doubleArray[0], stringArray);
CoordSystem coordSystem = new CoordSystem(defaultChartDataModel, stringArray[2], "#2Ta`x<d2\"");
AffineTransform affineTransform = new AffineTransform((-1570.889471817), 0.0, (-2916.09), 964.329681923832, 40.0, (-1306.02151431));
coordSystem.y1transform = affineTransform;
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
coordSystemUtilities.getYAxisLine2D();
Test 38: 
ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel();
CoordSystem coordSystem = new CoordSystem(objectChartDataModel);

Test 39: 
ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel();
CoordSystem coordSystem = new CoordSystem(objectChartDataModel);

Test 40: 
double[][] doubleArray = new double[1][8];
double[] doubleArray = new double[1];
doubleArray[0] = 3.14;
String[] stringArray = new String[6];
EditableChartDataModel editableChartDataModel = new EditableChartDataModel((double[][]) doubleArray, doubleArray, stringArray);
DecimalFormatSymbols decimalFormatSymbols = new DecimalFormatSymbols();
String string = "";
DecimalFormat decimalFormat = new DecimalFormat(string, decimalFormatSymbols);
boolean _boolean = false;
boolean _boolean = false;
boolean _boolean = false;
CoordSystem coordSystem = new CoordSystem(editableChartDataModel, decimalFormat, _boolean, _boolean, _boolean);

Test 41: 
ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel();
CoordSystem coordSystem = new CoordSystem(objectChartDataModel, "^R^i>pE#zxTl02\"(", "^R^i>pE#zxTl02\"(");
CoordSystem coordSystem = new CoordSystem(objectChartDataModel, "my_coord_system", "^R^i>pE#zxTl02\"(");

Test 42: 
double[][] doubleArray = new double[1][0];
doubleArray[0] = (double[]) 1138.447;
doubleArray[0] = (double[]) doubleArray;
String[] stringArray = new String[9];
String[] stringArray = new String[9];
DefaultChartDataModel defaultChartDataModel = new DefaultChartDataModel(doubleArray, (double[]) doubleArray, stringArray);
String string = "~oG#U";
CoordSystem coordSystem = new CoordSystem(defaultChartDataModel, string, "~oG#U");

Test 43: 
double[][] doubleArray = new double[1][8];
double[] doubleArray = new double[1];
doubleArray[0] = 3.14;
doubleArray[0] = (double) doubleArray;
String[] stringArray = new String[6];
EditableChartDataModel editableChartDataModel = new EditableChartDataModel((double[][]) doubleArray, doubleArray, stringArray);
DecimalFormatSymbols decimalFormatSymbols = new DecimalFormatSymbols();
String string = "";
DecimalFormat decimalFormat = new DecimalFormat(string, decimalFormatSymbols);
boolean _boolean = false;
boolean _boolean = false;
boolean _boolean = false;
CoordSystem coordSystem = new CoordSystem(editableChartDataModel, decimalFormat, _boolean, _boolean, _boolean);

Test 44: 
CoordSystem coordSystem = new CoordSystem((ChartDataModel) "oKU{2s[lgD0uL", "", "");

Test 45: 
Object[] objectArray = new Object[4];
Number[][] numberArray = new Number[0][3];
String[] stringArray = new String[0];
ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel(numberArray, objectArray, stringArray);
CoordSystem coordSystem = new CoordSystem(objectChartDataModel, "de.progra.charting.CoordSystemUtilities", "de.progra.charting.CoordSystemUtilities");
CoordSystemUtilities coordSystemUtilities = new CoordSystemUtilities(coordSystem, (ChartDataModelConstraints) objectChartDataModel, (ChartDataModelConstraints) "de.progra.charting.CoordSystemUtilities", objectChartDataModel);
((CoordSystemUtilities) coordSystem).computeBottomMargin();

Test 46: 
CoordSystem coordSystem = new CoordSystem((ChartDataModel) "oKU{2s[lgD0uL", "", "");

Test 47: 
int[][] intArray = new int[1][9];
int[] intArray = new int[9];
intArray[0] = Integer.MAX_VALUE;
intArray[1] = Integer.MAX_VALUE;
intArray[2] = 623;
intArray[3] = Integer.MAX_VALUE;
intArray[4] = Integer.MAX_VALUE;
intArray[5] = Integer.MAX_VALUE;
intArray[6] = Integer.MAX_VALUE;
intArray[7] = 6;
intArray[8] = Integer.MAX_VALUE;
intArray[0] = (int) intArray;
String[] stringArray = new String[8];
ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel((int[][]) intArray, (Object[]) intArray, stringArray);
boolean _boolean = true;
boolean _boolean = false;
boolean _boolean = false;
CoordSystem coordSystem = new CoordSystem(objectChartDataModel, (DecimalFormat) _boolean, _boolean, _boolean, false);

Test 48: 
double[] doubleArray = new double[4];
doubleArray[0] = (-1570.889471817);
doubleArray[1] = (-1306.02151431);
doubleArray[2] = (-1306.02151431);
doubleArray[3] = (-1570.889471817);
String[] stringArray = new String[5];
DefaultChartDataModel defaultChartDataModel = new DefaultChartDataModel((double[][]) doubleArray, doubleArray, stringArray);
CoordSystem coordSystem = new CoordSystem(defaultChartDataModel);

Test 49: 
double[][] doubleArray = new double[3][6];
double[] doubleArray = new double[2];
doubleArray[1] = 3.14;
doubleArray[1] = (double) doubleArray;
double[] doubleArray = new double[2];
doubleArray[1] = 3.14;
doubleArray[1] = 3.14;
double _double = 3.14;
doubleArray[1] = 3.14;
String[] stringArray = new String[5];
DefaultChartDataModel defaultChartDataModel = new DefaultChartDataModel((double[][]) doubleArray, doubleArray, stringArray);
CoordSystem coordSystem = new CoordSystem(defaultChartDataModel);
Axis xAxis = ((CoordSystem) _double).getXAxis();
((CoordSystem) _double).setSecondYAxis(xAxis);

Test 50: 
double[][] doubleArray = new double[1][5];
doubleArray[0] = (double[]) 0.2;
double _double = 2251.13228227;
doubleArray[0] = (double[]) _double;
double _double = 25.0;
doubleArray[0] = (double[]) _double;
double _double = 1639.553;
doubleArray[0] = (double[]) _double;
double _double = 2472.4206967;
doubleArray[0] = (double[]) _double;
double _double = 3.0;
doubleArray[0] = (double[]) _double;
doubleArray[0] = (double[]) doubleArray;
String[] stringArray = new String[3];
DefaultChartDataModel defaultChartDataModel = new DefaultChartDataModel(doubleArray, (double[]) doubleArray, stringArray);
CoordSystem coordSystem = new CoordSystem(defaultChartDataModel);

Test 51: 
double[][] doubleArray = new double[3][6];
double _double = 15.4;
doubleArray[0] = (double[]) 15.4;
doubleArray[1] = doubleArray[0];
double _double = 1.0E-6;
doubleArray[2] = (double[]) _double;
doubleArray[0] = (double[]) _double;
doubleArray[0] = (double[]) _double;
doubleArray[0] = (double[]) _double;
String[] stringArray = new String[5];
DefaultChartDataModel defaultChartDataModel = new DefaultChartDataModel(doubleArray, (double[]) doubleArray, stringArray);
String string = "n~sMnv]\"r,}Bi?W2<";
String string = "ZOT'c";
CoordSystem coordSystem = new CoordSystem(defaultChartDataModel, string, string);

Test 52: 
ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel();
CoordSystem coordSystem = new CoordSystem(objectChartDataModel);
int _int = 15;
BufferedImage bufferedImage = new BufferedImage(15, 20, 1);
AffineTransform.getRotateInstance((double) 10, (double) (Double) null);
((BufferedImage) _int).createGraphics();

Test 53: 
ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel();
CoordSystem coordSystem = new CoordSystem(objectChartDataModel);
coordSystem.setPaintLabels(false);
BufferedImage bufferedImage = new BufferedImage(15, 20, 1);
AffineTransform.getRotateInstance((double) 30, (double) 40);
((BufferedImage)null).createGraphics();

Test 54: 
double[][] doubleArray = new double[1][3];
double[] doubleArray = new double[1];
doubleArray[0] = 0.39999999999999997;
doubleArray[0] = (double) doubleArray;
String[] stringArray = new String[1];
DefaultChartDataModel defaultChartDataModel = new DefaultChartDataModel((double[][]) doubleArray, doubleArray, stringArray);
CoordSystem coordSystem = new CoordSystem(defaultChartDataModel);

Test 55: 
ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel();
CoordSystem coordSystem = new CoordSystem(objectChartDataModel);
BufferedImage bufferedImage = new BufferedImage(15, 20, 1);
AffineTransform.getRotateInstance((double) 45, (double) 60);
coordSystem.setPaintLabels(false);
((BufferedImage)15).createGraphics();

Test 56: 
ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel();
CoordSystem coordSystem = new CoordSystem(objectChartDataModel);
BufferedImage bufferedImage = new BufferedImage(30, 40, 1);
AffineTransform.getRotateInstance((double) 45, (double) 20);
((BufferedImage)30).createGraphics();

Test 57: 
double[][] doubleArray = new double[2][5];
int _int = 1;
doubleArray[0] = (double[]) 1;
int _int = 1;
doubleArray[1] = (double[]) _int;
doubleArray[0] = (double[]) _int;
doubleArray[0] = (double[]) _int;
doubleArray[0] = (double[]) _int;
doubleArray[0] = (double[]) _int;
doubleArray[0] = (double[]) doubleArray;
doubleArray[1] = (double[]) _int;
String[] stringArray = new String[3];
DefaultChartDataModel defaultChartDataModel = new DefaultChartDataModel(doubleArray, (double[]) doubleArray, stringArray);
CoordSystem coordSystem = new CoordSystem(defaultChartDataModel);

Test 58: 
double[][] doubleArray = new double[3][6];
String[] stringArray = new String[5];
DefaultChartDataModel defaultChartDataModel = new DefaultChartDataModel(doubleArray, (double[]) doubleArray, stringArray);
CoordSystem coordSystem = new CoordSystem(defaultChartDataModel);

Test 59: 
double[][] doubleArray = new double[3][6];
double[] doubleArray = new double[2];
doubleArray[1] = (-1570.889471817);
doubleArray[1] = (double) doubleArray;
double[] doubleArray = new double[2];
doubleArray[1] = (double) doubleArray;
doubleArray[1] = (double) doubleArray;
doubleArray[1] = (double) doubleArray;
String[] stringArray = new String[5];
DefaultChartDataModel defaultChartDataModel = new DefaultChartDataModel((double[][]) doubleArray, doubleArray, stringArray);
CoordSystem coordSystem = new CoordSystem(defaultChartDataModel);

Test 60: 
int _int = 1;
BufferedImage bufferedImage = new BufferedImage(20, 30, 1);
BufferedImage bufferedImage = new BufferedImage(15, 20, 1);
AffineTransform.getRotateInstance((double) 30, (double) 25);
AffineTransform.getRotateInstance((double) 45, (double) 50);
CoordSystem coordSystem = new CoordSystem((ChartDataModel) bufferedImage);
CoordSystem coordSystem = new CoordSystem((ChartDataModel) bufferedImage);
((BufferedImage) _int).createGraphics();
((BufferedImage) _int).createGraphics();

Test 61: 
ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel();
CoordSystem coordSystem = new CoordSystem(objectChartDataModel);
BufferedImage bufferedImage = new BufferedImage(15, 20, 1);
AffineTransform.getRotateInstance((double) 30, (double) 40);
coordSystem.setPaintLabels(true);
((BufferedImage)15).createGraphics();

Test 62: 
ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel();
CoordSystem coordSystem = new CoordSystem(objectChartDataModel);
BufferedImage bufferedImage = new BufferedImage(640, 480, 1);
AffineTransform.getRotateInstance((double) 30, (double) 200);
((BufferedImage)640).createGraphics();

Test 63: 
JSpinner jSpinner = new JSpinner();
CoordSystem coordSystem = new CoordSystem((ChartDataModel) true, (DecimalFormat) true, false, true, false);

Test 64: 
double[][] doubleArray = new double[3][6];
double[] doubleArray = new double[2];
doubleArray[0] = (-1570.889471817);
doubleArray[1] = (-1306.02151431);
doubleArray[0] = (-1570.889471817);
doubleArray[0] = (-1570.889471817);
doubleArray[0] = (-1570.889471817);
doubleArray[0] = (-1570.889471817);
String[] stringArray = new String[5];
DefaultChartDataModel defaultChartDataModel = new DefaultChartDataModel((double[][]) doubleArray, doubleArray, stringArray);
String string = "n~sMnv]\"r,}Bi?W2<";
String string = "ZOT'c";
CoordSystem coordSystem = new CoordSystem(defaultChartDataModel, string, string);

Test 65: 
int[][] intArray = new int[3][5];
double[] doubleArray = new double[6];
doubleArray[0] = 1.1;
doubleArray[1] = 2.2;
doubleArray[2] = 3.3;
doubleArray[3] = 4.4;
doubleArray[4] = 5.5;
doubleArray[5] = 6.6;
String[] stringArray = new String[6];
EditableChartDataModel editableChartDataModel = new EditableChartDataModel(intArray, doubleArray, stringArray);
CoordSystem coordSystem = new CoordSystem(editableChartDataModel);

Test 66: 
CoordSystem coordSystem = new CoordSystem((ChartDataModel) "", "c'c", "c'c");

Test 67: 
double[][] doubleArray = new double[3][6];

Test 68: 
double[][] doubleArray = new double[3][6];
double[] doubleArray = new double[2];
doubleArray[0] = (-1570.889471817);
doubleArray[0] = (double) doubleArray;
String[] stringArray = new String[5];
DefaultChartDataModel defaultChartDataModel = new DefaultChartDataModel((double[][]) doubleArray, (double[]) stringArray, stringArray);
CoordSystem coordSystem = new CoordSystem(defaultChartDataModel);

Test 69: 
CoordSystem coordSystem = new CoordSystem((ChartDataModel) "", (String) null, "");

Test 70: 
ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel();
CoordSystem coordSystem = new CoordSystem(objectChartDataModel, "x-axis", "y-axis");
AffineTransform affineTransform = new AffineTransform((float) 0.5, (float) 0.5, 0.0F, 0.0F, (float) 1.0, 0.0F);

Test 71: 
ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel();
CoordSystem coordSystem = new CoordSystem(objectChartDataModel);
AffineTransform.getQuadrantRotateInstance(45, (double) 100, 278.7917028);

Test 72: 
AffineTransform affineTransform = new AffineTransform(0.0, 964.329681923832, 40.0, 964.329681923832, 40.0, (-1306.02151431));


* Minimizing test suite
* test suite isTestSuite: 38
Test 0: 
ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel();
CoordSystem coordSystem = new CoordSystem(objectChartDataModel);
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
coordSystemUtilities.computeRightMargin();
Test 1: 
ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel();
CoordSystem coordSystem = new CoordSystem(objectChartDataModel);
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
coordSystemUtilities.computeTopMargin();
Test 2: 
double[][] doubleArray = new double[1][8];
double[] doubleArray = new double[1];
doubleArray[0] = 1.0;
String[] stringArray = new String[6];
EditableChartDataModel editableChartDataModel = new EditableChartDataModel(doubleArray, doubleArray, stringArray);
DecimalFormatSymbols decimalFormatSymbols = new DecimalFormatSymbols();
DecimalFormat decimalFormat = new DecimalFormat("", decimalFormatSymbols);
CoordSystem coordSystem = new CoordSystem(editableChartDataModel, decimalFormat, false, false, false);
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
coordSystemUtilities.computeLeftMargin();
Test 3: 
ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel();
CoordSystem coordSystem = new CoordSystem(objectChartDataModel, (String) null, "^R^i>pE#zxTl02\"(");
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
coordSystemUtilities.computeLeftMargin();
Test 4: 
double[][] doubleArray = new double[3][6];
String[] stringArray = new String[5];
DefaultChartDataModel defaultChartDataModel = new DefaultChartDataModel(doubleArray, doubleArray[0], stringArray);
CoordSystem coordSystem = new CoordSystem(defaultChartDataModel, stringArray[2], "#2Ta`x<d2\"");
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
coordSystemUtilities.computeLeftMargin();
Test 5: 
double[][] doubleArray = new double[1][0];
double[] doubleArray = new double[9];
doubleArray[0] = (-2015.4909919749273);
doubleArray[1] = 1138.447;
doubleArray[0] = doubleArray;
String[] stringArray = new String[9];
DefaultChartDataModel defaultChartDataModel = new DefaultChartDataModel(doubleArray, doubleArray, stringArray);
CoordSystem coordSystem = new CoordSystem(defaultChartDataModel, stringArray[7], "~oG#U");
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
coordSystemUtilities.computeLeftMargin();
Test 6: 
double[][] doubleArray = new double[1][8];
double[] doubleArray = new double[1];
doubleArray[0] = 1.0;
doubleArray[0] = doubleArray;
String[] stringArray = new String[6];
EditableChartDataModel editableChartDataModel = new EditableChartDataModel(doubleArray, doubleArray, stringArray);
DecimalFormatSymbols decimalFormatSymbols = new DecimalFormatSymbols();
DecimalFormat decimalFormat = new DecimalFormat("", decimalFormatSymbols);
CoordSystem coordSystem = new CoordSystem(editableChartDataModel, decimalFormat, false, false, false);
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
coordSystemUtilities.computeBottomMargin();
Test 7: 
double[] doubleArray = new double[2];
String[] stringArray = new String[5];
int[][] intArray = new int[1][5];
EditableChartDataModel editableChartDataModel = new EditableChartDataModel(intArray, doubleArray, stringArray);
CoordSystem coordSystem = new CoordSystem(editableChartDataModel, "oKU{2s[lgD0uL", "");
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
coordSystemUtilities.computeBottomMargin();
Test 8: 
Object[] objectArray = new Object[4];
Number[][] numberArray = new Number[0][3];
String[] stringArray = new String[0];
ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel(numberArray, objectArray, stringArray);
CoordSystem coordSystem = new CoordSystem(objectChartDataModel, "de.progra.charting.CoordSystemUtilities", "de.progra.charting.CoordSystemUtilities");
DefaultChartDataModelConstraints defaultChartDataModelConstraints = (DefaultChartDataModelConstraints)coordSystem.constraints;
CoordSystemUtilities coordSystemUtilities = new CoordSystemUtilities(coordSystem, defaultChartDataModelConstraints, defaultChartDataModelConstraints, objectChartDataModel);
coordSystemUtilities.computeBottomMargin();
Test 9: 
double[] doubleArray = new double[2];
doubleArray[1] = (-1306.02151431);
String[] stringArray = new String[5];
int[][] intArray = new int[1][5];
int[] intArray = new int[7];
intArray[0] = 20;
intArray[1] = (-2109045091);
intArray[0] = intArray;
EditableChartDataModel editableChartDataModel = new EditableChartDataModel(intArray, doubleArray, stringArray);
CoordSystem coordSystem = new CoordSystem(editableChartDataModel, "oKU{2s[lgD0uL", "");
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
coordSystemUtilities.computeBottomMargin();
Test 10: 
int[][] intArray = new int[1][9];
int[] intArray = new int[9];
intArray[0] = Integer.MAX_VALUE;
intArray[1] = Integer.MAX_VALUE;
intArray[2] = 623;
intArray[3] = Integer.MAX_VALUE;
intArray[4] = Integer.MAX_VALUE;
intArray[5] = Integer.MAX_VALUE;
intArray[6] = Integer.MAX_VALUE;
intArray[7] = 6;
intArray[8] = Integer.MAX_VALUE;
intArray[0] = intArray;
String[] stringArray = new String[8];
ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel(intArray, intArray, stringArray);
CoordSystem coordSystem = new CoordSystem(objectChartDataModel, (DecimalFormat) null, true, false, false);
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
coordSystemUtilities.computeXAxisLabelHeight();
Test 11: 
double[] doubleArray = new double[4];
doubleArray[0] = (-1570.889471817);
doubleArray[1] = (-1306.02151431);
doubleArray[2] = (-1306.02151431);
doubleArray[3] = (-1570.889471817);
String[] stringArray = new String[5];
double[][] doubleArray = new double[1][4];
doubleArray[0] = doubleArray;
DefaultChartDataModel defaultChartDataModel = new DefaultChartDataModel(doubleArray, doubleArray, stringArray);
CoordSystem coordSystem = new CoordSystem(defaultChartDataModel);
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
coordSystemUtilities.computeXAxisLabelHeight();
Test 12: 
double[][] doubleArray = new double[2][2];
double[] doubleArray = new double[1];
doubleArray[0] = (double) 1;
doubleArray[0] = doubleArray;
String[] stringArray = new String[12];
DefaultChartDataModel defaultChartDataModel = new DefaultChartDataModel(doubleArray, doubleArray, stringArray);
CoordSystem coordSystem = new CoordSystem(defaultChartDataModel);
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
coordSystemUtilities.computeYAxisLabelWidth();
Test 13: 
double[][] doubleArray = new double[3][6];
double[] doubleArray = new double[2];
doubleArray[1] = (-1306.02151431);
doubleArray[0] = doubleArray;
double[] doubleArray = new double[4];
doubleArray[0] = (-1570.889471817);
doubleArray[1] = (-1306.02151431);
doubleArray[2] = (-1306.02151431);
doubleArray[3] = (-1570.889471817);
String[] stringArray = new String[5];
DefaultChartDataModel defaultChartDataModel = new DefaultChartDataModel(doubleArray, doubleArray, stringArray);
CoordSystem coordSystem = new CoordSystem(defaultChartDataModel);
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
coordSystemUtilities.computeYAxisLabelWidth();
Test 14: 
double[][] doubleArray = new double[3][6];
double[] doubleArray = new double[2];
doubleArray[1] = (-1570.889471817);
doubleArray[0] = doubleArray;
double[] doubleArray = new double[3];
doubleArray[0] = (-1570.889471817);
doubleArray[1] = (-1570.889471817);
doubleArray[2] = (-1570.889471817);
String[] stringArray = new String[5];
DefaultChartDataModel defaultChartDataModel = new DefaultChartDataModel(doubleArray, doubleArray, stringArray);
CoordSystem coordSystem = new CoordSystem(defaultChartDataModel);
Axis xAxis = coordSystem.getXAxis();
coordSystem.setSecondYAxis(xAxis);
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
coordSystemUtilities.computeYAxisLabelWidth();
Test 15: 
double[][] doubleArray = new double[1][5];
double[] doubleArray = new double[6];
doubleArray[0] = 0.2;
doubleArray[1] = 2251.13228227;
doubleArray[2] = 25.0;
doubleArray[3] = 1639.553;
doubleArray[4] = 2472.4206967;
doubleArray[5] = 3.0;
doubleArray[0] = doubleArray;
String[] stringArray = new String[3];
DefaultChartDataModel defaultChartDataModel = new DefaultChartDataModel(doubleArray, doubleArray, stringArray);
CoordSystem coordSystem = new CoordSystem(defaultChartDataModel);
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
// Undeclared exception!
try { 
  coordSystemUtilities.drawNumericalXAxisTicks((Graphics2D) null);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 16: 
double[][] doubleArray = new double[3][6];
double[] doubleArray = new double[2];
doubleArray[0] = (-1570.889471817);
doubleArray[1] = (-1306.02151431);
doubleArray[0] = doubleArray;
doubleArray[1] = doubleArray;
doubleArray[2] = doubleArray;
String[] stringArray = new String[5];
DefaultChartDataModel defaultChartDataModel = new DefaultChartDataModel(doubleArray, doubleArray, stringArray);
CoordSystem coordSystem = new CoordSystem(defaultChartDataModel, "n~sMnv]\"r,}Bi?W2<", "ZOT'c");
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
// Undeclared exception!
try { 
  coordSystemUtilities.drawNumericalXAxisTicks((Graphics2D) null);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 17: 
ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel();
CoordSystem coordSystem = new CoordSystem(objectChartDataModel);
BufferedImage bufferedImage = new BufferedImage(15, 20, 1);
AffineTransform rotateInstance = AffineTransform.getRotateInstance((double) 15, (double) 20);
coordSystem.y1transform = rotateInstance;
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
Graphics2D createGraphics = bufferedImage.createGraphics();
coordSystemUtilities.drawNumericalXAxisTicks(createGraphics);
Test 18: 
ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel();
CoordSystem coordSystem = new CoordSystem(objectChartDataModel);
coordSystem.setPaintLabels(false);
BufferedImage bufferedImage = new BufferedImage(15, 20, 1);
AffineTransform rotateInstance = AffineTransform.getRotateInstance((double) 15, (double) 20);
coordSystem.y1transform = rotateInstance;
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
Graphics2D createGraphics = bufferedImage.createGraphics();
coordSystemUtilities.drawNumericalXAxisTicks(createGraphics);
Test 19: 
double[][] doubleArray = new double[1][3];
double[] doubleArray = new double[1];
doubleArray[0] = 0.39999999999999997;
doubleArray[0] = doubleArray;
String[] stringArray = new String[1];
DefaultChartDataModel defaultChartDataModel = new DefaultChartDataModel(doubleArray, doubleArray, stringArray);
CoordSystem coordSystem = new CoordSystem(defaultChartDataModel);
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
// Undeclared exception!
try { 
  coordSystemUtilities.drawXAxisTicks((Graphics2D) null);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 20: 
ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel();
CoordSystem coordSystem = new CoordSystem(objectChartDataModel);
BufferedImage bufferedImage = new BufferedImage(15, 20, 1);
AffineTransform rotateInstance = AffineTransform.getRotateInstance((double) 15, (double) 20);
coordSystem.y1transform = rotateInstance;
coordSystem.setPaintLabels(false);
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
Graphics2D createGraphics = bufferedImage.createGraphics();
coordSystemUtilities.drawXAxisTicks(createGraphics);
Test 21: 
ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel();
CoordSystem coordSystem = new CoordSystem(objectChartDataModel);
BufferedImage bufferedImage = new BufferedImage(15, 20, 1);
AffineTransform rotateInstance = AffineTransform.getRotateInstance((double) 15, (double) 20);
coordSystem.y1transform = rotateInstance;
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
Graphics2D createGraphics = bufferedImage.createGraphics();
// Undeclared exception!
try { 
  coordSystemUtilities.drawXAxisTicks(createGraphics);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 22: 
double[][] doubleArray = new double[2][5];
double[] doubleArray = new double[6];
doubleArray[0] = (double) 1;
doubleArray[1] = (double) 1;
doubleArray[2] = (double) 20;
doubleArray[3] = 1459.6169454;
doubleArray[4] = (double) 15;
doubleArray[5] = (double) 15;
doubleArray[1] = doubleArray;
String[] stringArray = new String[3];
DefaultChartDataModel defaultChartDataModel = new DefaultChartDataModel(doubleArray, doubleArray, stringArray);
CoordSystem coordSystem = new CoordSystem(defaultChartDataModel);
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
// Undeclared exception!
try { 
  coordSystemUtilities.drawYAxisTicks((Graphics2D) null);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 23: 
double[][] doubleArray = new double[3][6];
double[] doubleArray = new double[2];
doubleArray[1] = (-1570.889471817);
doubleArray[0] = doubleArray;
double[] doubleArray = new double[3];
doubleArray[0] = (-1570.889471817);
doubleArray[1] = (-1570.889471817);
doubleArray[2] = (-1570.889471817);
String[] stringArray = new String[5];
DefaultChartDataModel defaultChartDataModel = new DefaultChartDataModel(doubleArray, doubleArray, stringArray);
CoordSystem coordSystem = new CoordSystem(defaultChartDataModel);
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
// Undeclared exception!
try { 
  coordSystemUtilities.drawYAxisTicks((Graphics2D) null);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 24: 
double[][] doubleArray = new double[3][6];
double[] doubleArray = new double[2];
doubleArray[1] = (-1570.889471817);
doubleArray[0] = doubleArray;
double[] doubleArray = new double[3];
doubleArray[0] = (-1570.889471817);
doubleArray[1] = (-1570.889471817);
doubleArray[2] = (-1570.889471817);
String[] stringArray = new String[5];
DefaultChartDataModel defaultChartDataModel = new DefaultChartDataModel(doubleArray, doubleArray, stringArray);
CoordSystem coordSystem = new CoordSystem(defaultChartDataModel);
Axis axis = coordSystem.xaxis;
coordSystem.yaxis2 = axis;
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
// Undeclared exception!
try { 
  coordSystemUtilities.drawYAxisTicks((Graphics2D) null);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 25: 
ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel();
CoordSystem coordSystem = new CoordSystem(objectChartDataModel);
BufferedImage bufferedImage = new BufferedImage(15, 20, 1);
AffineTransform rotateInstance = AffineTransform.getRotateInstance((double) 15, (double) 20);
coordSystem.y1transform = rotateInstance;
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
Graphics2D createGraphics = bufferedImage.createGraphics();
coordSystemUtilities.drawYAxisTicks(createGraphics);
Test 26: 
ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel();
CoordSystem coordSystem = new CoordSystem(objectChartDataModel);
BufferedImage bufferedImage = new BufferedImage(15, 20, 1);
AffineTransform rotateInstance = AffineTransform.getRotateInstance((double) 15, (double) 20);
coordSystem.y1transform = rotateInstance;
coordSystem.setPaintLabels(false);
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
Graphics2D createGraphics = bufferedImage.createGraphics();
coordSystemUtilities.drawYAxisTicks(createGraphics);
Test 27: 
ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel();
CoordSystem coordSystem = new CoordSystem(objectChartDataModel);
BufferedImage bufferedImage = new BufferedImage(15, 20, 1);
coordSystem.shouldPaintAltTick = false;
AffineTransform rotateInstance = AffineTransform.getRotateInstance((double) 15, (double) 20);
coordSystem.y1transform = rotateInstance;
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
Graphics2D createGraphics = bufferedImage.createGraphics();
coordSystemUtilities.drawYAxisTicks(createGraphics);
Test 28: 
double[][] doubleArray = new double[1][8];
double[] doubleArray = new double[1];
doubleArray[0] = 4.000000000000002;
doubleArray[0] = doubleArray;
String[] stringArray = new String[2];
EditableChartDataModel editableChartDataModel = new EditableChartDataModel(doubleArray, doubleArray, stringArray);
JSpinner jSpinner = new JSpinner();
JSpinner.NumberEditor jSpinner_NumberEditor = new JSpinner.NumberEditor(jSpinner);
DecimalFormat format = jSpinner_NumberEditor.getFormat();
CoordSystem coordSystem = new CoordSystem(editableChartDataModel, format, true, true, false);
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
// Undeclared exception!
try { 
  coordSystemUtilities.getXAxisLine2D();
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("de.progra.charting.CoordSystemUtilities", e);
}

Test 29: 
double[][] doubleArray = new double[3][6];
double[] doubleArray = new double[2];
doubleArray[0] = (-1570.889471817);
doubleArray[1] = (-1306.02151431);
doubleArray[0] = doubleArray;
doubleArray[1] = doubleArray;
doubleArray[2] = doubleArray;
String[] stringArray = new String[5];
DefaultChartDataModel defaultChartDataModel = new DefaultChartDataModel(doubleArray, doubleArray, stringArray);
CoordSystem coordSystem = new CoordSystem(defaultChartDataModel, "n~sMnv]\"r,}Bi?W2<", "ZOT'c");
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
// Undeclared exception!
try { 
  coordSystemUtilities.getXAxisLine2D();
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("de.progra.charting.CoordSystemUtilities", e);
}

Test 30: 
int[][] intArray = new int[3][5];
double[] doubleArray = new double[6];
doubleArray[0] = (double) 1000;
doubleArray[1] = (double) 1000;
doubleArray[2] = (double) 1000;
doubleArray[3] = (double) 1000;
doubleArray[4] = (double) 1000;
doubleArray[5] = (double) 1000;
String[] stringArray = new String[6];
EditableChartDataModel editableChartDataModel = new EditableChartDataModel(intArray, doubleArray, stringArray);
CoordSystem coordSystem = new CoordSystem(editableChartDataModel);
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
// Undeclared exception!
try { 
  coordSystemUtilities.getYAxisLine2D();
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("de.progra.charting.CoordSystemUtilities", e);
}

Test 31: 
double[][] doubleArray = new double[3][6];
double[] doubleArray = new double[3];
doubleArray[0] = (-1570.889471817);
doubleArray[1] = (-1570.889471817);
doubleArray[2] = (-1570.889471817);
String[] stringArray = new String[5];
DefaultChartDataModel defaultChartDataModel = new DefaultChartDataModel(doubleArray, doubleArray, stringArray);
CoordSystem coordSystem = new CoordSystem(defaultChartDataModel);
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
// Undeclared exception!
try { 
  coordSystemUtilities.getYAxisLine2D();
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("de.progra.charting.CoordSystemUtilities", e);
}

Test 32: 
double[][] doubleArray = new double[3][6];
double[] doubleArray = new double[2];
doubleArray[0] = (-1570.889471817);
doubleArray[1] = (-1570.889471817);
String[] stringArray = new String[5];
DefaultChartDataModel defaultChartDataModel = new DefaultChartDataModel(doubleArray, doubleArray, stringArray);
CoordSystem coordSystem = new CoordSystem(defaultChartDataModel, "", "c'c");
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
Axis axis = coordSystem.yaxis;
coordSystem.yaxis2 = axis;
// Undeclared exception!
try { 
  coordSystemUtilities.getYAxisLine2D();
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("de.progra.charting.CoordSystemUtilities", e);
}

Test 33: 
double[][] doubleArray = new double[3][6];
double[] doubleArray = new double[2];
doubleArray[0] = (-1570.889471817);
String[] stringArray = new String[5];
DefaultChartDataModel defaultChartDataModel = new DefaultChartDataModel(doubleArray, doubleArray, stringArray);
CoordSystem coordSystem = new CoordSystem(defaultChartDataModel);
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
coordSystemUtilities.computeXAxisLabelHeight();
Test 34: 
ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel();
CoordSystem coordSystem = new CoordSystem(objectChartDataModel, (String) null, "");
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
coordSystemUtilities.computeYAxisLabelWidth();
Test 35: 
ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel();
CoordSystem coordSystem = new CoordSystem(objectChartDataModel, (String) null, (String) null);
AffineTransform affineTransform = new AffineTransform((float) 0, (float) 0, 0.0F, 0.0F, (float) 1, 0.0F);
coordSystem.y2transform = affineTransform;
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
coordSystemUtilities.getSecondYAxisLine2D();
Test 36: 
ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel();
CoordSystem coordSystem = new CoordSystem(objectChartDataModel);
AffineTransform quadrantRotateInstance = AffineTransform.getQuadrantRotateInstance(20, (double) 20, 278.7917028);
coordSystem.y1transform = quadrantRotateInstance;
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
coordSystemUtilities.getXAxisLine2D();
Test 37: 
double[][] doubleArray = new double[3][6];
String[] stringArray = new String[5];
DefaultChartDataModel defaultChartDataModel = new DefaultChartDataModel(doubleArray, doubleArray[0], stringArray);
CoordSystem coordSystem = new CoordSystem(defaultChartDataModel, stringArray[2], "#2Ta`x<d2\"");
AffineTransform affineTransform = new AffineTransform((-1570.889471817), 0.0, (-2916.09), 964.329681923832, 40.0, (-1306.02151431));
coordSystem.y1transform = affineTransform;
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
coordSystemUtilities.getYAxisLine2D();

* Going to analyze the coverage criteria
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 98%
* Total number of goals: 92
* Number of covered goals: 90
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 96%
* Total number of goals: 196
* Number of covered goals: 189
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 11%
* Total number of goals: 57
* Number of covered goals: 6
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 13
* Number of covered goals: 13
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 98%
* Total number of goals: 92
* Number of covered goals: 90
* Generated 38 tests with total length 370
* Resulting test suite's coverage: 81% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 34%
* Compiling and checking tests
Going to execute: removeTestsThatDoNotCompile
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: ObjectChartDataModel arg0 = new ObjectChartDataModel();
CoordSystem coordSystem = new CoordSystem(arg0);
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
int computeRightMargin = coordSystemUtilities.computeRightMargin();
assertEquals(15, computeRightMargin);


** It was a parseable test case! 
refined test name is: testComputeRightMargin
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: ObjectChartDataModel arg0 = new ObjectChartDataModel();
CoordSystem coordSystem = new CoordSystem(arg0);
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
int computeTopMargin = coordSystemUtilities.computeTopMargin();
assertEquals(15, computeTopMargin);


** It was a parseable test case! 
refined test name is: testComputeTopMarginWithChartDataModelObject
* Compiling Tests
refined test name is: testComputeTopMarginWithExpectedValue
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
* Computation finished
