* EvoSuite 1.0.0-SNAPSHOT
* Going to generate test cases for class: de.progra.charting.CoordSystemUtilities
* Starting Client-0
* Properties loaded from /home/roham/Results-Utestgen/dataset/SF110-new-res/88_jopenchart/evosuite-files/evosuite.properties
* Connecting to master process on port 7959
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 17:42:58.415 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 17:42:58.416 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 17:42:58.422 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
[MASTER] 17:42:59.422 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 17:42:59.424 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 17:42:59.469 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 17:43:02.406 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.ZoneId
[MASTER] 17:43:02.472 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.Temporal
[MASTER] 17:43:02.472 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAccessor
[MASTER] 17:43:02.473 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalField
[MASTER] 17:43:02.473 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalUnit
[MASTER] 17:43:02.474 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAmount
[MASTER] 17:43:02.474 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.Clock
[MASTER] 17:43:02.475 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalQuery
[MASTER] 17:43:02.475 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAdjuster
[MASTER] 17:43:02.495 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.Chronology
[MASTER] 17:43:02.510 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.Era
* Finished analyzing classpath
* Generating tests for class de.progra.charting.CoordSystemUtilities
* Test criteria:
  - Branch Coverage
  - Line Coverage
  - Method-Output Coverage
  - Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 450
* Using seed 1710438173674
* Starting evolution
[Progress:>                             0%] [Cov:>                                  0%]* Initial Number of Goals in DynaMOSA = 188 / 450
[Progress:>                             0%] [Cov:======>                            18%][MASTER] 17:43:06.058 [logback-1] WARN  TestCluster - Failed to check cache for java.util.Comparator<T> : Type points to itself
[Progress:>                             1%] [Cov:===========>                       32%][Progress:>                             1%] [Cov:============>                      36%][Progress:>                             2%] [Cov:================>                  46%][Progress:>                             2%] [Cov:================>                  47%][Progress:>                             2%] [Cov:================>                  47%][Progress:>                             2%] [Cov:================>                  47%][Progress:>                             2%] [Cov:================>                  47%][Progress:>                             2%] [Cov:================>                  48%][Progress:>                             3%] [Cov:=================>                 51%][MASTER] 17:43:10.590 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.ChronoLocalDate
[Progress:>                             3%] [Cov:=================>                 51%][Progress:>                             3%] [Cov:=================>                 51%][Progress:>                             3%] [Cov:=================>                 51%][Progress:>                             3%] [Cov:=================>                 51%][Progress:>                             3%] [Cov:==================>                52%][Progress:=>                            4%] [Cov:==================>                52%][MASTER] 17:43:12.231 [logback-1] WARN  TestCluster - Failed to check cache for java.util.Enumeration<E> : Type points to itself
[Progress:=>                            4%] [Cov:==================>                52%][Progress:=>                            4%] [Cov:==================>                52%][Progress:=>                            4%] [Cov:==================>                52%][Progress:=>                            4%] [Cov:==================>                52%][Progress:=>                            4%] [Cov:==================>                52%][Progress:=>                            4%] [Cov:==================>                52%][Progress:=>                            4%] [Cov:==================>                52%][Progress:=>                            5%] [Cov:==================>                52%][Progress:=>                            5%] [Cov:==================>                53%][Progress:=>                            5%] [Cov:==================>                53%][Progress:=>                            5%] [Cov:==================>                53%][Progress:=>                            5%] [Cov:==================>                53%][Progress:=>                            5%] [Cov:==================>                53%][Progress:=>                            5%] [Cov:==================>                53%][Progress:=>                            5%] [Cov:==================>                53%][Progress:=>                            5%] [Cov:==================>                53%][Progress:=>                            5%] [Cov:==================>                53%][Progress:=>                            5%] [Cov:==================>                53%][Progress:=>                            6%] [Cov:==================>                54%][Progress:=>                            6%] [Cov:==================>                54%][Progress:=>                            6%] [Cov:==================>                54%][Progress:=>                            6%] [Cov:==================>                54%][Progress:=>                            6%] [Cov:==================>                54%][Progress:=>                            6%] [Cov:==================>                54%][Progress:=>                            6%] [Cov:==================>                54%][Progress:=>                            6%] [Cov:==================>                54%][Progress:=>                            6%] [Cov:==================>                54%][Progress:==>                           7%] [Cov:==================>                54%][Progress:==>                           7%] [Cov:==================>                54%][Progress:==>                           7%] [Cov:==================>                54%][Progress:==>                           7%] [Cov:==================>                54%][Progress:==>                           7%] [Cov:==================>                54%][Progress:==>                           7%] [Cov:==================>                54%][Progress:==>                           7%] [Cov:==================>                54%][Progress:==>                           7%] [Cov:==================>                54%][Progress:==>                           7%] [Cov:===================>               55%][Progress:==>                           7%] [Cov:===================>               55%][Progress:==>                           8%] [Cov:===================>               55%][Progress:==>                           8%] [Cov:===================>               55%][Progress:==>                           8%] [Cov:===================>               55%][Progress:==>                           8%] [Cov:===================>               55%][Progress:==>                           8%] [Cov:===================>               55%][Progress:==>                           8%] [Cov:===================>               55%][Progress:==>                           8%] [Cov:===================>               55%][Progress:==>                           8%] [Cov:===================>               55%][Progress:==>                           9%] [Cov:===================>               55%][Progress:==>                           9%] [Cov:===================>               55%][Progress:==>                           9%] [Cov:===================>               56%][Progress:==>                           9%] [Cov:===================>               56%][Progress:==>                           9%] [Cov:===================>               56%][Progress:==>                           9%] [Cov:===================>               56%][Progress:==>                           9%] [Cov:===================>               56%][Progress:==>                           9%] [Cov:===================>               56%][Progress:==>                           9%] [Cov:===================>               56%][Progress:==>                           9%] [Cov:===================>               56%][Progress:===>                          10%] [Cov:===================>               56%][Progress:===>                          10%] [Cov:===================>               56%][Progress:===>                          10%] [Cov:===================>               56%][Progress:===>                          10%] [Cov:===================>               56%][Progress:===>                          10%] [Cov:===================>               56%][Progress:===>                          10%] [Cov:===================>               56%][Progress:===>                          10%] [Cov:===================>               56%][Progress:===>                          11%] [Cov:===================>               56%][Progress:===>                          11%] [Cov:===================>               56%][Progress:===>                          11%] [Cov:===================>               56%][Progress:===>                          11%] [Cov:===================>               57%][Progress:===>                          11%] [Cov:===================>               57%][Progress:===>                          11%] [Cov:===================>               57%][Progress:===>                          12%] [Cov:===================>               57%][Progress:===>                          12%] [Cov:===================>               57%][Progress:===>                          12%] [Cov:====================>              58%][Progress:===>                          12%] [Cov:====================>              58%][Progress:===>                          12%] [Cov:====================>              58%][Progress:===>                          13%] [Cov:====================>              58%][Progress:===>                          13%] [Cov:====================>              58%][Progress:===>                          13%] [Cov:====================>              58%][Progress:====>                         14%] [Cov:====================>              58%][Progress:====>                         14%] [Cov:====================>              58%][Progress:====>                         14%] [Cov:====================>              58%][Progress:====>                         14%] [Cov:====================>              58%][Progress:====>                         14%] [Cov:====================>              58%][Progress:====>                         15%] [Cov:====================>              58%][Progress:====>                         15%] [Cov:====================>              58%][Progress:====>                         15%] [Cov:====================>              58%][Progress:====>                         15%] [Cov:====================>              58%][Progress:====>                         15%] [Cov:====================>              58%][Progress:====>                         16%] [Cov:====================>              58%][Progress:====>                         16%] [Cov:====================>              58%][Progress:====>                         16%] [Cov:====================>              58%][Progress:====>                         16%] [Cov:====================>              58%][Progress:====>                         16%] [Cov:====================>              58%][Progress:====>                         16%] [Cov:====================>              58%][Progress:====>                         16%] [Cov:====================>              58%][Progress:=====>                        17%] [Cov:====================>              58%][Progress:=====>                        17%] [Cov:====================>              58%][Progress:=====>                        17%] [Cov:====================>              59%][Progress:=====>                        18%] [Cov:====================>              59%][Progress:=====>                        18%] [Cov:====================>              59%][Progress:=====>                        18%] [Cov:====================>              59%][Progress:=====>                        18%] [Cov:====================>              59%][Progress:=====>                        18%] [Cov:====================>              59%][Progress:=====>                        19%] [Cov:====================>              59%][Progress:=====>                        19%] [Cov:====================>              59%][Progress:=====>                        19%] [Cov:====================>              59%][Progress:=====>                        19%] [Cov:====================>              59%][Progress:=====>                        19%] [Cov:=====================>             60%][Progress:=====>                        19%] [Cov:=====================>             60%][Progress:=====>                        19%] [Cov:=====================>             60%][Progress:=====>                        19%] [Cov:=====================>             60%][Progress:======>                       20%] [Cov:=====================>             60%][Progress:======>                       20%] [Cov:=====================>             60%][Progress:======>                       20%] [Cov:=====================>             60%][Progress:======>                       20%] [Cov:=====================>             60%][Progress:======>                       20%] [Cov:=====================>             60%][Progress:======>                       20%] [Cov:=====================>             60%][Progress:======>                       20%] [Cov:=====================>             60%][Progress:======>                       20%] [Cov:=====================>             60%][Progress:======>                       20%] [Cov:=====================>             60%][Progress:======>                       20%] [Cov:=====================>             60%][Progress:======>                       20%] [Cov:=====================>             60%][Progress:======>                       20%] [Cov:=====================>             60%][Progress:======>                       20%] [Cov:=====================>             60%][Progress:======>                       21%] [Cov:=====================>             60%][Progress:======>                       21%] [Cov:=====================>             60%][Progress:======>                       21%] [Cov:=====================>             60%][Progress:======>                       21%] [Cov:=====================>             61%][Progress:======>                       21%] [Cov:=====================>             61%][Progress:======>                       21%] [Cov:=====================>             61%][Progress:======>                       21%] [Cov:=====================>             61%][Progress:======>                       21%] [Cov:=====================>             61%][Progress:======>                       21%] [Cov:=====================>             61%][Progress:======>                       21%] [Cov:=====================>             61%][Progress:======>                       21%] [Cov:======================>            63%][Progress:======>                       22%] [Cov:======================>            63%][Progress:======>                       22%] [Cov:======================>            63%][Progress:======>                       22%] [Cov:======================>            63%][Progress:======>                       22%] [Cov:======================>            63%][Progress:======>                       22%] [Cov:======================>            63%][Progress:======>                       22%] [Cov:======================>            63%][Progress:======>                       23%] [Cov:======================>            63%][Progress:======>                       23%] [Cov:======================>            63%][Progress:======>                       23%] [Cov:======================>            63%][Progress:======>                       23%] [Cov:======================>            63%][Progress:======>                       23%] [Cov:======================>            63%][Progress:======>                       23%] [Cov:======================>            63%][Progress:======>                       23%] [Cov:======================>            63%][Progress:======>                       23%] [Cov:======================>            63%][Progress:======>                       23%] [Cov:======================>            63%][Progress:======>                       23%] [Cov:======================>            63%][Progress:======>                       23%] [Cov:======================>            63%][Progress:=======>                      24%] [Cov:======================>            63%][Progress:=======>                      24%] [Cov:======================>            63%][Progress:=======>                      24%] [Cov:======================>            63%][Progress:=======>                      24%] [Cov:======================>            63%][Progress:=======>                      24%] [Cov:======================>            63%][Progress:=======>                      24%] [Cov:======================>            63%][Progress:=======>                      24%] [Cov:======================>            63%][Progress:=======>                      24%] [Cov:======================>            63%][Progress:=======>                      24%] [Cov:======================>            63%][Progress:=======>                      24%] [Cov:======================>            63%][Progress:=======>                      24%] [Cov:======================>            63%][Progress:=======>                      24%] [Cov:======================>            63%][Progress:=======>                      24%] [Cov:======================>            63%][Progress:=======>                      25%] [Cov:======================>            63%][Progress:=======>                      25%] [Cov:======================>            63%][Progress:=======>                      25%] [Cov:======================>            63%][Progress:=======>                      25%] [Cov:======================>            63%][Progress:=======>                      25%] [Cov:======================>            63%][Progress:=======>                      25%] [Cov:======================>            63%][Progress:=======>                      25%] [Cov:======================>            63%][Progress:=======>                      25%] [Cov:======================>            63%][Progress:=======>                      25%] [Cov:======================>            63%][Progress:=======>                      25%] [Cov:======================>            63%][Progress:=======>                      25%] [Cov:======================>            63%][Progress:=======>                      25%] [Cov:======================>            63%][Progress:=======>                      25%] [Cov:======================>            63%][Progress:=======>                      26%] [Cov:======================>            63%][Progress:=======>                      26%] [Cov:======================>            63%][Progress:=======>                      26%] [Cov:======================>            63%][Progress:=======>                      26%] [Cov:======================>            63%][Progress:=======>                      26%] [Cov:======================>            63%][Progress:=======>                      26%] [Cov:======================>            63%][Progress:=======>                      26%] [Cov:======================>            63%][Progress:=======>                      26%] [Cov:======================>            63%][Progress:=======>                      26%] [Cov:======================>            63%][Progress:=======>                      26%] [Cov:======================>            63%][Progress:=======>                      26%] [Cov:======================>            63%][Progress:=======>                      26%] [Cov:======================>            63%][Progress:=======>                      26%] [Cov:======================>            63%][Progress:=======>                      26%] [Cov:======================>            63%][Progress:=======>                      26%] [Cov:======================>            64%][Progress:========>                     27%] [Cov:======================>            64%][Progress:========>                     27%] [Cov:======================>            64%][Progress:========>                     27%] [Cov:======================>            64%][Progress:========>                     27%] [Cov:======================>            64%][Progress:========>                     27%] [Cov:======================>            64%][Progress:========>                     27%] [Cov:======================>            64%][Progress:========>                     27%] [Cov:======================>            64%][Progress:========>                     27%] [Cov:======================>            64%][Progress:========>                     27%] [Cov:======================>            64%][Progress:========>                     28%] [Cov:======================>            64%][Progress:========>                     28%] [Cov:======================>            64%][Progress:========>                     28%] [Cov:======================>            64%][Progress:========>                     28%] [Cov:======================>            64%][Progress:========>                     28%] [Cov:======================>            64%][Progress:========>                     28%] [Cov:======================>            64%][Progress:========>                     28%] [Cov:======================>            64%][Progress:========>                     28%] [Cov:======================>            64%][Progress:========>                     28%] [Cov:======================>            64%][Progress:========>                     29%] [Cov:======================>            64%][Progress:========>                     29%] [Cov:======================>            64%][Progress:========>                     29%] [Cov:======================>            64%][Progress:========>                     29%] [Cov:======================>            64%][Progress:========>                     29%] [Cov:======================>            64%][Progress:========>                     29%] [Cov:======================>            64%][Progress:========>                     29%] [Cov:======================>            64%][Progress:========>                     29%] [Cov:======================>            64%][Progress:========>                     29%] [Cov:======================>            64%][Progress:========>                     29%] [Cov:======================>            64%][Progress:=========>                    30%] [Cov:======================>            64%][Progress:=========>                    30%] [Cov:======================>            64%][Progress:=========>                    30%] [Cov:======================>            64%][Progress:=========>                    30%] [Cov:======================>            64%][Progress:=========>                    30%] [Cov:======================>            64%][Progress:=========>                    30%] [Cov:======================>            64%][Progress:=========>                    30%] [Cov:======================>            64%][Progress:=========>                    30%] [Cov:======================>            64%][Progress:=========>                    30%] [Cov:======================>            64%][Progress:=========>                    30%] [Cov:======================>            64%][Progress:=========>                    30%] [Cov:======================>            64%][Progress:=========>                    31%] [Cov:======================>            64%][Progress:=========>                    31%] [Cov:======================>            64%][Progress:=========>                    31%] [Cov:======================>            64%][Progress:=========>                    31%] [Cov:======================>            64%][Progress:=========>                    31%] [Cov:======================>            64%][Progress:=========>                    31%] [Cov:======================>            64%][Progress:=========>                    31%] [Cov:======================>            64%][Progress:=========>                    31%] [Cov:======================>            64%][Progress:=========>                    31%] [Cov:======================>            64%][Progress:=========>                    31%] [Cov:======================>            64%][Progress:=========>                    31%] [Cov:======================>            64%][Progress:=========>                    32%] [Cov:======================>            64%][Progress:=========>                    32%] [Cov:======================>            64%][Progress:=========>                    32%] [Cov:======================>            64%][Progress:=========>                    32%] [Cov:======================>            64%][Progress:=========>                    32%] [Cov:======================>            64%][Progress:=========>                    32%] [Cov:======================>            64%][Progress:=========>                    32%] [Cov:======================>            64%][Progress:=========>                    32%] [Cov:======================>            64%][Progress:=========>                    32%] [Cov:======================>            64%][Progress:=========>                    32%] [Cov:======================>            64%][Progress:=========>                    32%] [Cov:======================>            64%][Progress:=========>                    32%] [Cov:======================>            64%][Progress:=========>                    33%] [Cov:======================>            64%][Progress:=========>                    33%] [Cov:======================>            64%][Progress:=========>                    33%] [Cov:======================>            64%][Progress:=========>                    33%] [Cov:======================>            64%][Progress:=========>                    33%] [Cov:======================>            64%][Progress:=========>                    33%] [Cov:======================>            64%][Progress:=========>                    33%] [Cov:======================>            64%][Progress:=========>                    33%] [Cov:======================>            64%][Progress:=========>                    33%] [Cov:======================>            64%][Progress:=========>                    33%] [Cov:======================>            64%][Progress:=========>                    33%] [Cov:======================>            64%][Progress:=========>                    33%] [Cov:======================>            64%][Progress:=========>                    33%] [Cov:======================>            64%][Progress:==========>                   34%] [Cov:======================>            64%][Progress:==========>                   34%] [Cov:========================>          69%][Progress:==========>                   34%] [Cov:=========================>         72%][Progress:==========>                   34%] [Cov:=========================>         72%][Progress:==========>                   34%] [Cov:=========================>         72%][Progress:==========>                   34%] [Cov:=========================>         73%][Progress:==========>                   34%] [Cov:==========================>        76%][Progress:==========>                   34%] [Cov:==========================>        76%][Progress:==========>                   34%] [Cov:==========================>        76%][Progress:==========>                   34%] [Cov:==========================>        76%][Progress:==========>                   34%] [Cov:==========================>        76%][Progress:==========>                   34%] [Cov:==========================>        76%][Progress:==========>                   35%] [Cov:==========================>        76%][Progress:==========>                   35%] [Cov:==========================>        76%][Progress:==========>                   35%] [Cov:==========================>        76%][Progress:==========>                   35%] [Cov:==========================>        76%][Progress:==========>                   35%] [Cov:==========================>        76%][Progress:==========>                   35%] [Cov:==========================>        76%][Progress:==========>                   35%] [Cov:==========================>        76%][Progress:==========>                   35%] [Cov:==========================>        76%][Progress:==========>                   35%] [Cov:==========================>        76%][Progress:==========>                   35%] [Cov:==========================>        76%][Progress:==========>                   35%] [Cov:==========================>        76%][Progress:==========>                   36%] [Cov:==========================>        76%][Progress:==========>                   36%] [Cov:==========================>        76%][Progress:==========>                   36%] [Cov:==========================>        76%][Progress:==========>                   36%] [Cov:==========================>        76%][Progress:==========>                   36%] [Cov:==========================>        76%][Progress:==========>                   36%] [Cov:==========================>        76%][Progress:==========>                   36%] [Cov:==========================>        76%][Progress:==========>                   36%] [Cov:==========================>        76%][Progress:==========>                   36%] [Cov:==========================>        76%][Progress:==========>                   36%] [Cov:==========================>        76%][Progress:==========>                   36%] [Cov:==========================>        76%][Progress:==========>                   36%] [Cov:==========================>        76%][Progress:==========>                   36%] [Cov:==========================>        76%][Progress:==========>                   36%] [Cov:==========================>        76%][Progress:==========>                   36%] [Cov:==========================>        76%][Progress:==========>                   36%] [Cov:==========================>        76%][Progress:===========>                  37%] [Cov:==========================>        76%][Progress:===========>                  37%] [Cov:==========================>        76%][Progress:===========>                  37%] [Cov:==========================>        76%][Progress:===========>                  37%] [Cov:==========================>        76%][Progress:===========>                  37%] [Cov:==========================>        76%][Progress:===========>                  37%] [Cov:==========================>        76%][Progress:===========>                  37%] [Cov:==========================>        76%][Progress:===========>                  38%] [Cov:==========================>        76%][Progress:===========>                  38%] [Cov:==========================>        76%][Progress:===========>                  38%] [Cov:==========================>        76%][Progress:===========>                  39%] [Cov:==========================>        76%][Progress:===========>                  39%] [Cov:==========================>        76%][Progress:===========>                  39%] [Cov:==========================>        76%][Progress:===========>                  39%] [Cov:==========================>        76%][Progress:===========>                  39%] [Cov:==========================>        76%][Progress:===========>                  39%] [Cov:==========================>        76%][Progress:===========>                  39%] [Cov:==========================>        76%][Progress:===========>                  39%] [Cov:==========================>        76%][Progress:===========>                  39%] [Cov:==========================>        76%][Progress:===========>                  39%] [Cov:==========================>        76%][Progress:============>                 40%] [Cov:==========================>        76%][Progress:============>                 40%] [Cov:==========================>        76%][Progress:============>                 40%] [Cov:==========================>        76%][Progress:============>                 40%] [Cov:==========================>        76%][Progress:============>                 41%] [Cov:==========================>        76%][Progress:============>                 41%] [Cov:==========================>        76%][Progress:============>                 41%] [Cov:==========================>        76%][Progress:============>                 41%] [Cov:==========================>        76%][Progress:============>                 41%] [Cov:==========================>        76%][Progress:============>                 41%] [Cov:==========================>        76%][Progress:============>                 42%] [Cov:==========================>        76%][Progress:============>                 43%] [Cov:==========================>        76%][Progress:============>                 43%] [Cov:==========================>        76%][Progress:============>                 43%] [Cov:==========================>        76%][Progress:============>                 43%] [Cov:==========================>        76%][Progress:============>                 43%] [Cov:==========================>        76%][Progress:============>                 43%] [Cov:==========================>        76%][Progress:============>                 43%] [Cov:==========================>        76%][Progress:============>                 43%] [Cov:==========================>        76%][Progress:=============>                44%] [Cov:==========================>        76%][Progress:=============>                44%] [Cov:==========================>        76%][Progress:=============>                44%] [Cov:==========================>        76%][Progress:=============>                44%] [Cov:==========================>        76%][Progress:=============>                44%] [Cov:==========================>        76%][Progress:=============>                44%] [Cov:==========================>        76%][Progress:=============>                44%] [Cov:==========================>        76%][Progress:=============>                44%] [Cov:==========================>        76%][Progress:=============>                44%] [Cov:==========================>        76%][Progress:=============>                44%] [Cov:==========================>        76%][Progress:=============>                44%] [Cov:==========================>        76%][Progress:=============>                44%] [Cov:==========================>        76%][Progress:=============>                45%] [Cov:==========================>        76%][Progress:=============>                45%] [Cov:==========================>        76%][Progress:=============>                45%] [Cov:==========================>        76%][Progress:=============>                45%] [Cov:==========================>        76%][Progress:=============>                45%] [Cov:==========================>        76%][Progress:=============>                45%] [Cov:==========================>        76%][Progress:=============>                45%] [Cov:==========================>        76%][Progress:=============>                45%] [Cov:==========================>        76%][Progress:=============>                45%] [Cov:==========================>        76%][Progress:=============>                45%] [Cov:==========================>        76%][Progress:=============>                46%] [Cov:==========================>        76%][Progress:=============>                46%] [Cov:==========================>        76%][Progress:=============>                46%] [Cov:==========================>        76%][Progress:=============>                46%] [Cov:==========================>        76%][Progress:==============>               47%] [Cov:==========================>        76%][Progress:==============>               47%] [Cov:==========================>        76%][Progress:==============>               47%] [Cov:==========================>        76%][Progress:==============>               47%] [Cov:==========================>        76%][Progress:==============>               47%] [Cov:==========================>        76%][Progress:==============>               47%] [Cov:==========================>        76%][Progress:==============>               47%] [Cov:==========================>        76%][Progress:==============>               48%] [Cov:==========================>        76%][Progress:==============>               48%] [Cov:==========================>        76%][Progress:==============>               48%] [Cov:==========================>        76%][Progress:==============>               48%] [Cov:==========================>        76%][Progress:==============>               48%] [Cov:==========================>        76%][Progress:==============>               48%] [Cov:==========================>        76%][Progress:==============>               48%] [Cov:==========================>        76%][Progress:==============>               48%] [Cov:==========================>        76%][Progress:==============>               49%] [Cov:==========================>        76%][Progress:===============>              50%] [Cov:==========================>        76%][Progress:===============>              50%] [Cov:==========================>        76%][Progress:===============>              50%] [Cov:==========================>        76%][Progress:===============>              51%] [Cov:==========================>        76%][Progress:===============>              51%] [Cov:==========================>        76%][Progress:===============>              51%] [Cov:==========================>        76%][Progress:===============>              51%] [Cov:==========================>        76%][Progress:===============>              52%] [Cov:==========================>        76%][Progress:===============>              52%] [Cov:==========================>        76%][Progress:===============>              52%] [Cov:==========================>        76%][Progress:===============>              52%] [Cov:==========================>        77%][Progress:===============>              53%] [Cov:==========================>        77%][Progress:===============>              53%] [Cov:==========================>        77%][Progress:===============>              53%] [Cov:==========================>        77%][Progress:===============>              53%] [Cov:==========================>        77%][Progress:===============>              53%] [Cov:==========================>        77%][Progress:===============>              53%] [Cov:==========================>        77%][Progress:===============>              53%] [Cov:==========================>        77%][Progress:===============>              53%] [Cov:==========================>        77%][Progress:================>             54%] [Cov:==========================>        77%][Progress:================>             54%] [Cov:==========================>        77%][Progress:================>             54%] [Cov:==========================>        77%][Progress:================>             54%] [Cov:==========================>        77%][Progress:================>             54%] [Cov:==========================>        77%][Progress:================>             54%] [Cov:==========================>        77%][Progress:================>             54%] [Cov:==========================>        77%][Progress:================>             54%] [Cov:==========================>        77%][Progress:================>             54%] [Cov:==========================>        77%][Progress:================>             54%] [Cov:==========================>        77%][Progress:================>             54%] [Cov:==========================>        77%][Progress:================>             55%] [Cov:==========================>        77%][Progress:================>             55%] [Cov:==========================>        77%][Progress:================>             55%] [Cov:==========================>        77%][Progress:================>             55%] [Cov:==========================>        77%][Progress:================>             55%] [Cov:==========================>        77%][Progress:================>             55%] [Cov:==========================>        77%][Progress:================>             55%] [Cov:==========================>        77%][Progress:================>             55%] [Cov:==========================>        77%][Progress:================>             55%] [Cov:==========================>        77%][Progress:================>             55%] [Cov:==========================>        77%][Progress:================>             55%] [Cov:==========================>        77%][Progress:================>             56%] [Cov:==========================>        77%][Progress:================>             56%] [Cov:==========================>        77%][Progress:================>             56%] [Cov:==========================>        77%][Progress:================>             56%] [Cov:==========================>        77%][Progress:================>             56%] [Cov:==========================>        77%][Progress:================>             56%] [Cov:==========================>        77%][Progress:================>             56%] [Cov:==========================>        77%][Progress:================>             56%] [Cov:==========================>        77%][Progress:=================>            59%] [Cov:==========================>        77%][Progress:=================>            59%] [Cov:==========================>        77%][Progress:=================>            59%] [Cov:==========================>        77%][Progress:=================>            59%] [Cov:==========================>        77%][Progress:=================>            59%] [Cov:==========================>        77%][Progress:=================>            59%] [Cov:==========================>        77%][Progress:=================>            59%] [Cov:==========================>        77%][Progress:=================>            59%] [Cov:==========================>        77%][Progress:=================>            59%] [Cov:==========================>        77%][Progress:=================>            59%] [Cov:==========================>        77%][Progress:==================>           60%] [Cov:==========================>        77%][Progress:==================>           60%] [Cov:==========================>        77%][Progress:==================>           60%] [Cov:==========================>        77%][Progress:==================>           60%] [Cov:==========================>        77%][Progress:==================>           60%] [Cov:==========================>        77%][Progress:==================>           60%] [Cov:==========================>        77%][Progress:==================>           60%] [Cov:==========================>        77%][Progress:==================>           60%] [Cov:==========================>        77%][Progress:==================>           60%] [Cov:==========================>        77%][Progress:==================>           60%] [Cov:==========================>        77%][Progress:==================>           60%] [Cov:==========================>        77%][Progress:==================>           61%] [Cov:==========================>        77%][Progress:==================>           61%] [Cov:==========================>        77%][Progress:==================>           61%] [Cov:==========================>        77%][Progress:==================>           61%] [Cov:===========================>       78%][Progress:==================>           61%] [Cov:===========================>       78%][Progress:==================>           61%] [Cov:===========================>       78%][Progress:==================>           61%] [Cov:===========================>       78%][Progress:==================>           61%] [Cov:===========================>       78%][Progress:==================>           61%] [Cov:===========================>       78%][Progress:==================>           61%] [Cov:===========================>       78%][Progress:==================>           62%] [Cov:===========================>       78%][Progress:==================>           62%] [Cov:===========================>       78%][Progress:==================>           62%] [Cov:===========================>       78%][Progress:==================>           63%] [Cov:===========================>       78%][Progress:==================>           63%] [Cov:===========================>       78%][Progress:==================>           63%] [Cov:===========================>       78%][Progress:==================>           63%] [Cov:===========================>       78%][Progress:==================>           63%] [Cov:===========================>       78%][Progress:==================>           63%] [Cov:===========================>       78%][Progress:==================>           63%] [Cov:===========================>       78%][Progress:==================>           63%] [Cov:===========================>       78%][Progress:==================>           63%] [Cov:===========================>       78%][Progress:===================>          64%] [Cov:===========================>       78%][Progress:===================>          64%] [Cov:===========================>       78%][Progress:===================>          65%] [Cov:===========================>       78%][Progress:===================>          65%] [Cov:===========================>       78%][Progress:===================>          66%] [Cov:===========================>       78%][Progress:===================>          66%] [Cov:===========================>       78%][Progress:===================>          66%] [Cov:===========================>       78%][Progress:===================>          66%] [Cov:===========================>       78%][Progress:===================>          66%] [Cov:===========================>       78%][Progress:===================>          66%] [Cov:===========================>       78%][Progress:===================>          66%] [Cov:===========================>       78%][Progress:===================>          66%] [Cov:===========================>       78%][Progress:===================>          66%] [Cov:===========================>       78%][Progress:===================>          66%] [Cov:===========================>       78%][Progress:===================>          66%] [Cov:===========================>       78%][Progress:===================>          66%] [Cov:===========================>       78%][Progress:===================>          66%] [Cov:===========================>       78%][Progress:===================>          66%] [Cov:===========================>       78%][Progress:===================>          66%] [Cov:===========================>       78%][Progress:====================>         67%] [Cov:===========================>       78%][Progress:====================>         67%] [Cov:===========================>       78%][Progress:====================>         67%] [Cov:===========================>       78%][Progress:====================>         67%] [Cov:===========================>       78%][Progress:====================>         67%] [Cov:===========================>       78%][Progress:====================>         67%] [Cov:===========================>       78%][Progress:====================>         67%] [Cov:===========================>       78%][Progress:====================>         67%] [Cov:===========================>       78%][Progress:====================>         67%] [Cov:===========================>       78%][Progress:====================>         67%] [Cov:===========================>       78%][Progress:====================>         67%] [Cov:===========================>       78%][Progress:====================>         67%] [Cov:===========================>       78%][Progress:====================>         67%] [Cov:===========================>       78%][Progress:====================>         67%] [Cov:===========================>       78%][Progress:====================>         67%] [Cov:===========================>       78%][Progress:====================>         67%] [Cov:===========================>       78%][Progress:====================>         68%] [Cov:===========================>       78%][Progress:====================>         68%] [Cov:===========================>       78%][Progress:====================>         68%] [Cov:===========================>       78%][Progress:====================>         68%] [Cov:===========================>       78%][Progress:====================>         68%] [Cov:===========================>       78%][Progress:====================>         68%] [Cov:===========================>       78%][Progress:====================>         68%] [Cov:===========================>       78%][Progress:====================>         68%] [Cov:===========================>       78%][Progress:====================>         68%] [Cov:===========================>       78%][Progress:====================>         68%] [Cov:===========================>       78%][Progress:====================>         68%] [Cov:===========================>       78%][Progress:====================>         69%] [Cov:===========================>       78%][Progress:====================>         69%] [Cov:===========================>       78%][Progress:====================>         69%] [Cov:===========================>       78%][Progress:====================>         69%] [Cov:===========================>       78%][Progress:====================>         69%] [Cov:===========================>       78%][Progress:====================>         69%] [Cov:===========================>       78%][Progress:====================>         69%] [Cov:===========================>       78%][Progress:====================>         69%] [Cov:===========================>       78%][Progress:====================>         69%] [Cov:===========================>       78%][Progress:====================>         69%] [Cov:===========================>       78%][Progress:====================>         69%] [Cov:===========================>       78%][Progress:====================>         69%] [Cov:===========================>       78%][Progress:====================>         69%] [Cov:===========================>       78%][Progress:=====================>        70%] [Cov:===========================>       78%][Progress:=====================>        70%] [Cov:===========================>       78%][Progress:=====================>        71%] [Cov:===========================>       78%][Progress:=====================>        71%] [Cov:===========================>       78%][Progress:=====================>        71%] [Cov:===========================>       78%][Progress:=====================>        71%] [Cov:===========================>       78%][Progress:=====================>        71%] [Cov:===========================>       78%][Progress:=====================>        71%] [Cov:===========================>       78%][Progress:=====================>        71%] [Cov:===========================>       78%][Progress:=====================>        71%] [Cov:===========================>       78%][Progress:=====================>        71%] [Cov:===========================>       78%][Progress:=====================>        71%] [Cov:===========================>       78%][Progress:=====================>        71%] [Cov:===========================>       78%][Progress:=====================>        72%] [Cov:===========================>       78%][Progress:======================>       74%] [Cov:===========================>       78%][Progress:======================>       75%] [Cov:===========================>       78%][Progress:======================>       75%] [Cov:===========================>       78%][Progress:======================>       76%] [Cov:===========================>       78%][Progress:=======================>      78%] [Cov:===========================>       78%][Progress:=======================>      79%] [Cov:===========================>       78%][Progress:=======================>      79%] [Cov:===========================>       78%][Progress:=======================>      79%] [Cov:===========================>       78%][Progress:========================>     80%] [Cov:===========================>       78%][Progress:========================>     80%] [Cov:===========================>       78%][Progress:========================>     80%] [Cov:===========================>       78%][Progress:========================>     80%] [Cov:===========================>       78%][Progress:========================>     80%] [Cov:===========================>       78%][Progress:========================>     80%] [Cov:===========================>       78%][Progress:========================>     81%] [Cov:===========================>       78%][Progress:========================>     81%] [Cov:===========================>       78%][Progress:========================>     81%] [Cov:===========================>       78%][Progress:========================>     81%] [Cov:===========================>       78%][Progress:========================>     81%] [Cov:===========================>       78%][Progress:========================>     82%] [Cov:===========================>       78%][Progress:========================>     82%] [Cov:===========================>       78%][Progress:========================>     83%] [Cov:===========================>       78%][Progress:=========================>    84%] [Cov:===========================>       78%][Progress:=========================>    85%] [Cov:===========================>       78%][Progress:=========================>    86%] [Cov:===========================>       78%][Progress:=========================>    86%] [Cov:===========================>       78%][Progress:=========================>    86%] [Cov:===========================>       78%][Progress:=========================>    86%] [Cov:===========================>       78%][Progress:=========================>    86%] [Cov:===========================>       78%][Progress:=========================>    86%] [Cov:===========================>       78%][Progress:=========================>    86%] [Cov:===========================>       78%][Progress:=========================>    86%] [Cov:===========================>       78%][Progress:=========================>    86%] [Cov:===========================>       78%][Progress:==========================>   87%] [Cov:===========================>       78%][Progress:==========================>   87%] [Cov:===========================>       78%][Progress:==========================>   87%] [Cov:===========================>       78%][Progress:==========================>   87%] [Cov:===========================>       78%][Progress:==========================>   87%] [Cov:===========================>       78%][Progress:==========================>   87%] [Cov:===========================>       78%][Progress:==========================>   87%] [Cov:===========================>       78%][Progress:==========================>   87%] [Cov:===========================>       78%][Progress:==========================>   87%] [Cov:===========================>       78%][Progress:==========================>   87%] [Cov:===========================>       78%][Progress:==========================>   87%] [Cov:===========================>       78%][Progress:==========================>   87%] [Cov:===========================>       78%][Progress:==========================>   87%] [Cov:===========================>       78%][Progress:==========================>   87%] [Cov:===========================>       78%][Progress:==========================>   89%] [Cov:===========================>       78%][Progress:==========================>   89%] [Cov:===========================>       78%][Progress:==========================>   89%] [Cov:===========================>       78%][Progress:==========================>   89%] [Cov:===========================>       78%][Progress:==========================>   89%] [Cov:===========================>       78%][Progress:==========================>   89%] [Cov:===========================>       78%][Progress:==========================>   89%] [Cov:===========================>       78%][Progress:==========================>   89%] [Cov:===========================>       78%][Progress:==========================>   89%] [Cov:===========================>       78%][Progress:==========================>   89%] [Cov:===========================>       78%][Progress:==========================>   89%] [Cov:===========================>       78%][Progress:===========================>  90%] [Cov:===========================>       78%][Progress:===========================>  90%] [Cov:===========================>       78%][Progress:===========================>  90%] [Cov:===========================>       78%][Progress:===========================>  90%] [Cov:===========================>       78%][Progress:===========================>  90%] [Cov:===========================>       78%][Progress:===========================>  90%] [Cov:===========================>       78%][Progress:===========================>  90%] [Cov:===========================>       78%][Progress:===========================>  90%] [Cov:===========================>       78%][Progress:===========================>  90%] [Cov:===========================>       78%][Progress:===========================>  90%] [Cov:===========================>       78%][Progress:===========================>  90%] [Cov:===========================>       78%][Progress:===========================>  91%] [Cov:===========================>       79%][Progress:===========================>  91%] [Cov:===========================>       79%][Progress:===========================>  91%] [Cov:===========================>       79%][Progress:===========================>  91%] [Cov:===========================>       79%][Progress:===========================>  91%] [Cov:===========================>       79%][Progress:===========================>  91%] [Cov:===========================>       79%][Progress:===========================>  91%] [Cov:===========================>       79%][Progress:===========================>  91%] [Cov:===========================>       79%][Progress:===========================>  91%] [Cov:===========================>       79%][Progress:===========================>  91%] [Cov:===========================>       79%][Progress:===========================>  92%] [Cov:===========================>       79%][Progress:===========================>  92%] [Cov:===========================>       79%][Progress:===========================>  92%] [Cov:===========================>       79%][Progress:===========================>  92%] [Cov:===========================>       79%][Progress:===========================>  92%] [Cov:===========================>       79%][Progress:===========================>  92%] [Cov:===========================>       79%][Progress:===========================>  92%] [Cov:===========================>       79%][Progress:===========================>  92%] [Cov:===========================>       79%][Progress:===========================>  92%] [Cov:===========================>       79%][Progress:===========================>  92%] [Cov:===========================>       79%][Progress:===========================>  92%] [Cov:===========================>       79%][Progress:===========================>  92%] [Cov:===========================>       79%][Progress:===========================>  92%] [Cov:===========================>       79%][Progress:===========================>  93%] [Cov:===========================>       79%][Progress:============================> 95%] [Cov:===========================>       79%][Progress:============================> 95%] [Cov:===========================>       79%][Progress:============================> 95%] [Cov:===========================>       79%][Progress:============================> 95%] [Cov:===========================>       79%][Progress:============================> 95%] [Cov:===========================>       79%][Progress:============================> 95%] [Cov:===========================>       79%][Progress:============================> 95%] [Cov:===========================>       79%][Progress:============================> 95%] [Cov:===========================>       79%][Progress:============================> 95%] [Cov:===========================>       79%][Progress:============================> 95%] [Cov:===========================>       79%][Progress:============================> 96%] [Cov:===========================>       79%][Progress:============================> 96%] [Cov:===========================>       79%][Progress:============================> 96%] [Cov:===========================>       79%][Progress:=============================>98%] [Cov:===========================>       79%][Progress:=============================>98%] [Cov:===========================>       79%][Progress:=============================>98%] [Cov:===========================>       79%][Progress:=============================>98%] [Cov:===========================>       79%][Progress:=============================>99%] [Cov:===========================>       79%][Progress:=============================>99%] [Cov:===========================>       79%][Progress:=============================>99%] [Cov:===========================>       79%][Progress:=============================>99%] [Cov:===========================>       79%][Progress:=============================>99%] [Cov:===========================>       79%][Progress:=============================>99%] [Cov:===========================>       79%][Progress:=============================>99%] [Cov:===========================>       79%][Progress:=============================>99%] [Cov:===========================>       79%][Progress:=============================>99%] [Cov:===========================>       79%][Progress:=============================>99%] [Cov:===========================>       79%][Progress:=============================>99%] [Cov:===========================>       79%][Progress:=============================>99%] [Cov:===========================>       79%][Progress:=============================>99%] [Cov:===========================>       79%][Progress:==============================100%] [Cov:===========================>       79%][Progress:==============================100%] [Cov:===========================>       79%][Progress:==============================100%] [Cov:===========================>       79%][Progress:==============================100%] [Cov:===========================>       79%][Progress:==============================100%] [Cov:===========================>       79%]
* Search finished after 202s and 694 generations, 338648 statements, best individual has fitness: 63.0
* Generated before the refinement 34 tests with total length 317
statement is: de.progra.charting.model.ObjectChartDataModel()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.progra.charting.model.ObjectChartDataModel
statement code is: ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel()
statement is: de.progra.charting.CoordSystem(Lde/progra/charting/model/ChartDataModel;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.progra.charting.CoordSystem
statement code is: CoordSystem coordSystem = new CoordSystem(arg0)
statement is: org.evosuite.testcase.statements.FieldStatement@457a926e type is: class org.evosuite.testcase.statements.FieldStatement return type class de.progra.charting.CoordSystemUtilities
statement code is: CoordSystemUtilities coordSystemUtilities = coordSystem.c
statement is: computeRightMargin()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int computeRightMargin = coordSystemUtilities.computeRightMargin()
test data is: ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel();
CoordSystem coordSystem = new CoordSystem(objectChartDataModel);
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
coordSystemUtilities.computeRightMargin();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        ObjectChartDataModel objectChartDataModel = // Title
        // Width
        // Height
        // Left Margin
        // Right Margin
        // Top Margin
        // Bottom Margin
        new ObjectChartDataModel("Example Chart", 500, 1000, 20.0, 30.0, 40.0, 50.0);
        CoordSystem coordSystem = new CoordSystem(objectChartDataModel);
        CoordSystemUtilities coordSystemUtilities = coordSystem.c;
        coordSystemUtilities.computeRightMargin();
    }
}
statement is: ObjectChartDataModel objectChartDataModel = // Title
// Width
// Height
// Left Margin
// Right Margin
// Top Margin
// Bottom Margin
new ObjectChartDataModel("Example Chart", 500, 1000, 20.0, 30.0, 40.0, 50.0), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: CoordSystem coordSystem = new CoordSystem(objectChartDataModel), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: de.progra.charting.CoordSystem(Lde/progra/charting/model/ChartDataModel;)V
statement is: CoordSystemUtilities coordSystemUtilities = coordSystem.c, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: coordSystem.c is coordSystem
CtField is: protected de.progra.charting.CoordSystemUtilities de.progra.charting.CoordSystem.c CoordSystemUtilities c
statement is: coordSystemUtilities.computeRightMargin(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: coordSystemUtilities.computeRightMargin() target is: coordSystemUtilities method is: computeRightMargin()
statement is: de.progra.charting.model.ObjectChartDataModel()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.progra.charting.model.ObjectChartDataModel
statement code is: ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel()
statement is: de.progra.charting.CoordSystem(Lde/progra/charting/model/ChartDataModel;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.progra.charting.CoordSystem
statement code is: CoordSystem coordSystem = new CoordSystem(arg0)
statement is: org.evosuite.testcase.statements.FieldStatement@7b2400bd type is: class org.evosuite.testcase.statements.FieldStatement return type class de.progra.charting.CoordSystemUtilities
statement code is: CoordSystemUtilities coordSystemUtilities = coordSystem.c
statement is: computeTopMargin()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int computeTopMargin = coordSystemUtilities.computeTopMargin()
test data is: ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel();
CoordSystem coordSystem = new CoordSystem(objectChartDataModel);
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
coordSystemUtilities.computeTopMargin();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel();
        objectChartDataModel.setWidth(1000);// instead of using a primitive value, we can use a more descriptive example like 1000

        objectChartDataModel.setHeight(500);// instead of using a primitive value, we can use a more descriptive example like 500

        CoordSystem coordSystem = new CoordSystem(objectChartDataModel);
        CoordSystemUtilities coordSystemUtilities = coordSystem.c;
        coordSystemUtilities.computeTopMargin();
    }
}
statement is: ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: objectChartDataModel.setWidth(1000)// instead of using a primitive value, we can use a more descriptive example like 1000
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: objectChartDataModel.setWidth(1000)// instead of using a primitive value, we can use a more descriptive example like 1000
 target is: objectChartDataModel method is: setWidth(int)
statement is: objectChartDataModel.setHeight(500)// instead of using a primitive value, we can use a more descriptive example like 500
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: objectChartDataModel.setHeight(500)// instead of using a primitive value, we can use a more descriptive example like 500
 target is: objectChartDataModel method is: setHeight(int)
statement is: CoordSystem coordSystem = new CoordSystem(objectChartDataModel), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: CoordSystemUtilities coordSystemUtilities = coordSystem.c, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: coordSystem.c is coordSystem
CtField is: protected de.progra.charting.CoordSystemUtilities de.progra.charting.CoordSystem.c CoordSystemUtilities c
statement is: coordSystemUtilities.computeTopMargin(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: coordSystemUtilities.computeTopMargin() target is: coordSystemUtilities method is: computeTopMargin()
TestCase is: ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel();
CoordSystem coordSystem = new CoordSystem(objectChartDataModel);

statement is: org.evosuite.testcase.statements.ArrayStatement@b7986c8e type is: class org.evosuite.testcase.statements.ArrayStatement return type class [[I
statement code is: int[][] intArray = new int[2][0]
statement is: org.evosuite.testcase.statements.ArrayStatement@5ab7a8a1 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [I
statement code is: int[] intArray = new int[2]
statement is: org.evosuite.testcase.statements.AssignmentStatement@de10a3cc type is: class org.evosuite.testcase.statements.AssignmentStatement return type class [I
statement code is: intArray[0] = intArray
statement is: org.evosuite.testcase.statements.AssignmentStatement@283745a9 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class [I
statement code is: intArray[1] = intArray[0]
statement is: org.evosuite.testcase.statements.ArrayStatement@d2febaa0 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [D
statement code is: double[] doubleArray = new double[2]
statement is: org.evosuite.testcase.statements.AssignmentStatement@2f859cdf type is: class org.evosuite.testcase.statements.AssignmentStatement return type double
statement code is: doubleArray[0] = (double) 6
statement is: org.evosuite.testcase.statements.AssignmentStatement@1ebbf040 type is: class org.evosuite.testcase.statements.AssignmentStatement return type double
statement code is: doubleArray[1] = (double) 1
statement is: org.evosuite.testcase.statements.ArrayStatement@17c4e896 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [Ljava.lang.String;
statement code is: String[] stringArray = new String[7]
statement is: de.progra.charting.model.EditableChartDataModel([[I[D[Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.progra.charting.model.EditableChartDataModel
statement code is: EditableChartDataModel editableChartDataModel = new EditableChartDataModel(arg0, arg1, arg2)
statement is: de.progra.charting.CoordSystem(Lde/progra/charting/model/ChartDataModel;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.progra.charting.CoordSystem
statement code is: CoordSystem coordSystem = new CoordSystem(arg0)
statement is: org.evosuite.testcase.statements.FieldStatement@1c97ba1b type is: class org.evosuite.testcase.statements.FieldStatement return type class de.progra.charting.CoordSystemUtilities
statement code is: CoordSystemUtilities coordSystemUtilities = coordSystem.c
statement is: computeLeftMargin()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int computeLeftMargin = coordSystemUtilities.computeLeftMargin()
test data is: int[][] intArray = new int[2][0];
int[] intArray = new int[2];
intArray[0] = intArray;
intArray[1] = intArray[0];
double[] doubleArray = new double[2];
doubleArray[0] = (double) 6;
doubleArray[1] = (double) 1;
String[] stringArray = new String[7];
EditableChartDataModel editableChartDataModel = new EditableChartDataModel(intArray, doubleArray, stringArray);
CoordSystem coordSystem = new CoordSystem(editableChartDataModel);
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
coordSystemUtilities.computeLeftMargin();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        int[][] intArray = new int[2][0];
        intArray[0] = new int[]{ 1, 2, 3 };
        intArray[1] = new int[]{ 4, 5, 6 };
        double[] doubleArray = new double[2];
        doubleArray[0] = ((double) (6.0));
        doubleArray[1] = ((double) (1.0));
        String[] stringArray = new String[7];
        stringArray[0] = "Apple";
        stringArray[1] = "Banana";
        stringArray[2] = "Orange";
        stringArray[3] = "Grape";
        stringArray[4] = "Mango";
        stringArray[5] = "Pear";
        stringArray[6] = "Watermelon";
        EditableChartDataModel editableChartDataModel = new EditableChartDataModel(intArray, doubleArray, stringArray);
        CoordSystem coordSystem = new CoordSystem(editableChartDataModel);
        CoordSystemUtilities coordSystemUtilities = coordSystem.c;
        coordSystemUtilities.computeLeftMargin();
    }
}
statement is: int[][] intArray = new int[2][0], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [2, 0] Ct is: int[][] intArray = new int[2][0] isAssignment: false Array: new int[2][0] Elements: []
lengths: [2, 0] [2, 0]
Their type are: class [[I int[][]
statement is: intArray[0] = new int[]{ 1, 2, 3 }, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : intArray[0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl int[] Assignment:new int[]{ 1, 2, 3 } Ct is: intArray[0] = new int[]{ 1, 2, 3 }
target : intArray class spoon.support.reflect.code.CtLiteralImpl
TestCase Could not be added: org.evosuite.testcase.statements.AssignmentStatement@8381bd9f
statement is: intArray[1] = new int[]{ 4, 5, 6 }, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : intArray[1] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl int[] Assignment:new int[]{ 4, 5, 6 } Ct is: intArray[1] = new int[]{ 4, 5, 6 }
target : intArray class spoon.support.reflect.code.CtLiteralImpl
statement is: double[] doubleArray = new double[2], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [2] Ct is: int[][] intArray = new int[2][0] isAssignment: false Array: new double[2] Elements: []
lengths: [2, 0] [2]
Dimension: [2] Ct is: int[] intArray = new int[2] isAssignment: false Array: new double[2] Elements: []
lengths: [2] [2]
Their type are: class [I double[]
Dimension: [2] Ct is: double[] doubleArray = new double[2] isAssignment: false Array: new double[2] Elements: []
lengths: [2] [2]
Their type are: class [D double[]
statement is: doubleArray[0] = ((double) (6.0)), class spoon.support.reflect.code.CtAssignmentImpl
Assigned : doubleArray[0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl double Assignment:((double) (6.0)) Ct is: doubleArray[0] = ((double) (6.0))
target : doubleArray class spoon.support.reflect.code.CtLiteralImpl
TestCase Could not be added: org.evosuite.testcase.statements.AssignmentStatement@fd5f50f
statement is: doubleArray[1] = ((double) (1.0)), class spoon.support.reflect.code.CtAssignmentImpl
Assigned : doubleArray[1] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl double Assignment:((double) (1.0)) Ct is: doubleArray[1] = ((double) (1.0))
target : doubleArray class spoon.support.reflect.code.CtLiteralImpl
TestCase Could not be added: org.evosuite.testcase.statements.AssignmentStatement@4d3fb6e1
statement is: String[] stringArray = new String[7], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [7] Ct is: int[][] intArray = new int[2][0] isAssignment: false Array: new String[7] Elements: []
lengths: [2, 0] [7]
Dimension: [7] Ct is: int[] intArray = new int[2] isAssignment: false Array: new String[7] Elements: []
lengths: [2] [7]
Their type are: class [I String[]
Dimension: [7] Ct is: double[] doubleArray = new double[2] isAssignment: false Array: new String[7] Elements: []
lengths: [2] [7]
Their type are: class [D String[]
Dimension: [7] Ct is: String[] stringArray = new String[7] isAssignment: false Array: new String[7] Elements: []
lengths: [7] [7]
Their type are: class [Ljava.lang.String; String[]
statement is: stringArray[0] = "Apple", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"Apple" Ct is: stringArray[0] = "Apple"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[1] = "Banana", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[1] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"Banana" Ct is: stringArray[1] = "Banana"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[2] = "Orange", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[2] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"Orange" Ct is: stringArray[2] = "Orange"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[3] = "Grape", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[3] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"Grape" Ct is: stringArray[3] = "Grape"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[4] = "Mango", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[4] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"Mango" Ct is: stringArray[4] = "Mango"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[5] = "Pear", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[5] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"Pear" Ct is: stringArray[5] = "Pear"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[6] = "Watermelon", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[6] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"Watermelon" Ct is: stringArray[6] = "Watermelon"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: EditableChartDataModel editableChartDataModel = new EditableChartDataModel(intArray, doubleArray, stringArray), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: CoordSystem coordSystem = new CoordSystem(editableChartDataModel), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: CoordSystemUtilities coordSystemUtilities = coordSystem.c, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: coordSystem.c is coordSystem
CtField is: protected de.progra.charting.CoordSystemUtilities de.progra.charting.CoordSystem.c CoordSystemUtilities c
statement is: coordSystemUtilities.computeLeftMargin(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: coordSystemUtilities.computeLeftMargin() target is: coordSystemUtilities method is: computeLeftMargin()
* this is vulnerable: double _double = 6.0
* this is vulnerable: double _double = 1.0
TestCase is: int[][] intArray = new int[2][0];
intArray[1] = intArray[0];
double[] doubleArray = new double[2];
double _double = 6.0;
double _double = 1.0;
String[] stringArray = new String[7];
EditableChartDataModel editableChartDataModel = new EditableChartDataModel(intArray, doubleArray, stringArray);
CoordSystem coordSystem = new CoordSystem(editableChartDataModel);

statement is: de.progra.charting.model.ObjectChartDataModel()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.progra.charting.model.ObjectChartDataModel
statement code is: ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel()
statement is: de.progra.charting.CoordSystem(Lde/progra/charting/model/ChartDataModel;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.progra.charting.CoordSystem
statement code is: CoordSystem coordSystem = new CoordSystem(arg0)
statement is: org.evosuite.testcase.statements.FieldStatement@77326d07 type is: class org.evosuite.testcase.statements.FieldStatement return type class de.progra.charting.CoordSystemUtilities
statement code is: CoordSystemUtilities coordSystemUtilities = coordSystem.c
statement is: computeLeftMargin()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int computeLeftMargin = coordSystemUtilities.computeLeftMargin()
test data is: ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel();
CoordSystem coordSystem = new CoordSystem(objectChartDataModel);
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
coordSystemUtilities.computeLeftMargin();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel(objectChart.getNumRows(), objectChart.getNumColumns());
        CoordSystem coordSystem = new CoordSystem(objectChartDataModel);
        CoordSystemUtilities coordSystemUtilities = coordSystem.c;
        coordSystemUtilities.computeLeftMargin();
    }
}
statement is: ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel(objectChart.getNumRows(), objectChart.getNumColumns()), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: CoordSystem coordSystem = new CoordSystem(objectChartDataModel), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: de.progra.charting.CoordSystem(Lde/progra/charting/model/ChartDataModel;)V
statement is: CoordSystemUtilities coordSystemUtilities = coordSystem.c, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: coordSystem.c is coordSystem
CtField is: protected de.progra.charting.CoordSystemUtilities de.progra.charting.CoordSystem.c CoordSystemUtilities c
statement is: coordSystemUtilities.computeLeftMargin(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: coordSystemUtilities.computeLeftMargin() target is: coordSystemUtilities method is: computeLeftMargin()
statement is: org.evosuite.testcase.statements.ArrayStatement@eede8823 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [[I
statement code is: int[][] intArray = new int[1][2]
statement is: org.evosuite.testcase.statements.ArrayStatement@14567d2f type is: class org.evosuite.testcase.statements.ArrayStatement return type class [D
statement code is: double[] doubleArray = new double[5]
statement is: org.evosuite.testcase.statements.ArrayStatement@34e0c6a0 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [Ljava.lang.String;
statement code is: String[] stringArray = new String[2]
statement is: de.progra.charting.model.EditableChartDataModel([[I[D[Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.progra.charting.model.EditableChartDataModel
statement code is: EditableChartDataModel editableChartDataModel = new EditableChartDataModel(arg0, arg1, arg2)
statement is: de.progra.charting.CoordSystem(Lde/progra/charting/model/ChartDataModel;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.progra.charting.CoordSystem
statement code is: CoordSystem coordSystem = new CoordSystem(arg0)
statement is: java.awt.Rectangle(IIII)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.awt.Rectangle
statement code is: Rectangle rectangle = new Rectangle(116, 0, 20, 0)
statement is: setBounds(Ljava/awt/Rectangle;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: coordSystem.setBounds(arg0)
statement is: org.evosuite.testcase.statements.FieldStatement@91f860a type is: class org.evosuite.testcase.statements.FieldStatement return type class de.progra.charting.CoordSystemUtilities
statement code is: CoordSystemUtilities coordSystemUtilities = coordSystem.c
statement is: getYAxisLine2D()Ljava/awt/geom/Line2D; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.awt.geom.Line2D$Double
statement code is: Line2D.Double yAxisLine2D = (Line2D.Double)coordSystemUtilities.getYAxisLine2D()
test data is: int[][] intArray = new int[1][2];
double[] doubleArray = new double[5];
String[] stringArray = new String[2];
EditableChartDataModel editableChartDataModel = new EditableChartDataModel(intArray, doubleArray, stringArray);
CoordSystem coordSystem = new CoordSystem(editableChartDataModel);
Rectangle rectangle = new Rectangle(116, 0, 20, 0);
coordSystem.setBounds(rectangle);
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
coordSystemUtilities.getYAxisLine2D();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        int[][] intArray = new int[][]{ new int[]{ 1, 2 }, new int[]{ 3, 4 } };
        double[] doubleArray = new double[]{ 1.0, 2.5, 3.1 };
        String[] stringArray = new String[]{ "hello", "world" };
        EditableChartDataModel editableChartDataModel = new EditableChartDataModel(intArray, doubleArray, stringArray);
        CoordSystem coordSystem = new CoordSystem(editableChartDataModel);
        Rectangle rectangle = new Rectangle(116, 0, 20, 0);
        coordSystem.setBounds(rectangle);
        CoordSystemUtilities coordSystemUtilities = coordSystem.c;
        Line2D yAxisLine2D = coordSystemUtilities.getYAxisLine2D();
    }
}
statement is: int[][] intArray = new int[][]{ new int[]{ 1, 2 }, new int[]{ 3, 4 } }, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [] Ct is: int[][] intArray = new int[1][2] isAssignment: false Array: new int[][]{ new int[]{ 1, 2 }, new int[]{ 3, 4 } } Elements: [new int[]{ 1, 2 }, new int[]{ 3, 4 }]
lengths: [1, 2] []
Dimension: [] Ct is: double[] doubleArray = new double[5] isAssignment: false Array: new int[][]{ new int[]{ 1, 2 }, new int[]{ 3, 4 } } Elements: [new int[]{ 1, 2 }, new int[]{ 3, 4 }]
lengths: [5] []
Dimension: [] Ct is: String[] stringArray = new String[2] isAssignment: false Array: new int[][]{ new int[]{ 1, 2 }, new int[]{ 3, 4 } } Elements: [new int[]{ 1, 2 }, new int[]{ 3, 4 }]
lengths: [2] []
statement is: double[] doubleArray = new double[]{ 1.0, 2.5, 3.1 }, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [] Ct is: int[][] intArray = new int[1][2] isAssignment: false Array: new double[]{ 1.0, 2.5, 3.1 } Elements: [1.0, 2.5, 3.1]
lengths: [1, 2] []
Dimension: [] Ct is: double[] doubleArray = new double[5] isAssignment: false Array: new double[]{ 1.0, 2.5, 3.1 } Elements: [1.0, 2.5, 3.1]
lengths: [5] []
Dimension: [] Ct is: String[] stringArray = new String[2] isAssignment: false Array: new double[]{ 1.0, 2.5, 3.1 } Elements: [1.0, 2.5, 3.1]
lengths: [2] []
statement is: String[] stringArray = new String[]{ "hello", "world" }, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [] Ct is: int[][] intArray = new int[1][2] isAssignment: false Array: new String[]{ "hello", "world" } Elements: ["hello", "world"]
lengths: [1, 2] []
Dimension: [] Ct is: double[] doubleArray = new double[5] isAssignment: false Array: new String[]{ "hello", "world" } Elements: ["hello", "world"]
lengths: [5] []
Dimension: [] Ct is: String[] stringArray = new String[2] isAssignment: false Array: new String[]{ "hello", "world" } Elements: ["hello", "world"]
lengths: [2] []
statement is: EditableChartDataModel editableChartDataModel = new EditableChartDataModel(intArray, doubleArray, stringArray), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: de.progra.charting.model.EditableChartDataModel([[I[D[Ljava/lang/String;)V
statement is: CoordSystem coordSystem = new CoordSystem(editableChartDataModel), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: de.progra.charting.CoordSystem(Lde/progra/charting/model/ChartDataModel;)V
statement is: Rectangle rectangle = new Rectangle(116, 0, 20, 0), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: coordSystem.setBounds(rectangle), class spoon.support.reflect.code.CtInvocationImpl
invocation is: coordSystem.setBounds(rectangle) target is: coordSystem method is: setBounds(Rectangle)
source statement: int _int = 116 callee: VariableReference: Statement 4, type de.progra.charting.CoordSystemindex is: 0
statement is: CoordSystemUtilities coordSystemUtilities = coordSystem.c, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: coordSystem.c is coordSystem
CtField is: protected de.progra.charting.CoordSystemUtilities de.progra.charting.CoordSystem.c CoordSystemUtilities c
statement is: Line2D yAxisLine2D = coordSystemUtilities.getYAxisLine2D(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: coordSystemUtilities.getYAxisLine2D() target is: coordSystemUtilities method is: getYAxisLine2D()
TestCase is: int _int = 116;
int _int = 0;
int _int = 20;
int _int = 0;
Rectangle rectangle = new Rectangle(_int, _int, _int, _int);

statement is: de.progra.charting.model.ObjectChartDataModel()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.progra.charting.model.ObjectChartDataModel
statement code is: ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel()
statement is: de.progra.charting.CoordSystem(Lde/progra/charting/model/ChartDataModel;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.progra.charting.CoordSystem
statement code is: CoordSystem coordSystem = new CoordSystem(arg0)
statement is: org.evosuite.testcase.statements.FieldStatement@6d2411f9 type is: class org.evosuite.testcase.statements.FieldStatement return type class de.progra.charting.CoordSystemUtilities
statement code is: CoordSystemUtilities coordSystemUtilities = coordSystem.c
statement is: getDefaultStyleContext()Ljavax/swing/text/StyleContext; type is: class org.evosuite.testcase.statements.MethodStatement return type class javax.swing.text.StyleContext
statement code is: StyleContext defaultStyleContext = StyleContext.getDefaultStyleContext()
statement is: getFont(Ljava/lang/String;II)Ljava/awt/Font; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.awt.Font
statement code is: Font font = styleContext.getFont((String) null, 20, 1)
statement is: org.evosuite.testcase.statements.AssignmentStatement@78fdc010 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.awt.Font
statement code is: coordSystem.font = font
statement is: computeLeftMargin()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int computeLeftMargin = coordSystemUtilities.computeLeftMargin()
test data is: ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel();
CoordSystem coordSystem = new CoordSystem(objectChartDataModel);
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
StyleContext defaultStyleContext = StyleContext.getDefaultStyleContext();
Font font = defaultStyleContext.getFont((String) null, 20, 1);
coordSystem.font = font;
coordSystemUtilities.computeLeftMargin();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel();
        CoordSystem coordSystem = new CoordSystem(objectChartDataModel);
        CoordSystemUtilities coordSystemUtilities = coordSystem.getCoordSystemUtilities();
        StyleContext defaultStyleContext = StyleContext.getDefaultStyleContext();
        Font font = defaultStyleContext.getFont("Arial", 16, BOLD);
        coordSystem.font = font;
        coordSystemUtilities.computeLeftMargin();
    }
}
statement is: ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: CoordSystem coordSystem = new CoordSystem(objectChartDataModel), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: CoordSystemUtilities coordSystemUtilities = coordSystem.getCoordSystemUtilities(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: coordSystem.getCoordSystemUtilities() target is: coordSystem method is: getCoordSystemUtilities()
statement is: StyleContext defaultStyleContext = StyleContext.getDefaultStyleContext(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: StyleContext.getDefaultStyleContext() target is: StyleContext method is: getDefaultStyleContext()
Matched Method is: getDefaultStyleContext()Ljavax/swing/text/StyleContext;
statement is: Font font = defaultStyleContext.getFont("Arial", 16, BOLD), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: defaultStyleContext.getFont("Arial", 16, BOLD) target is: defaultStyleContext method is: getFont(java.lang.String,int)
source statement: getDefaultStyleContext()Ljavax/swing/text/StyleContext; callee: VariableReference: Statement 3, type javax.swing.text.StyleContextindex is: 2
Matched Method is: getFont(Ljava/lang/String;II)Ljava/awt/Font;
i 2 Parameters size() 2 Num of Method Parameters: 3
statement is: coordSystem.font = font, class spoon.support.reflect.code.CtAssignmentImpl
statement is: coordSystemUtilities.computeLeftMargin(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: coordSystemUtilities.computeLeftMargin() target is: coordSystemUtilities method is: computeLeftMargin()
TestCase is: ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel();
CoordSystem coordSystem = new CoordSystem(objectChartDataModel);
StyleContext.getDefaultStyleContext();
String string = "Arial";
int _int = 16;
int _int = null;
((StyleContext) string).getFont(string, _int, _int);

statement is: org.evosuite.testcase.statements.ArrayStatement@bc2801ee type is: class org.evosuite.testcase.statements.ArrayStatement return type class [[Ljava.lang.Number;
statement code is: Number[][] numberArray = new Number[1][6]
statement is: org.evosuite.testcase.statements.ArrayStatement@ee298c1 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [Ljava.lang.Number;
statement code is: Number[] numberArray = new Number[2]
statement is: org.evosuite.testcase.statements.AssignmentStatement@3be02369 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.Number
statement code is: numberArray[0] = (Number) 20
statement is: org.evosuite.testcase.statements.AssignmentStatement@dc6b0e53 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.Number
statement code is: numberArray[1] = (Number) 1
statement is: org.evosuite.testcase.statements.AssignmentStatement@a3da89fc type is: class org.evosuite.testcase.statements.AssignmentStatement return type class [Ljava.lang.Number;
statement code is: numberArray[0] = numberArray
statement is: org.evosuite.testcase.statements.ArrayStatement@b32ba59 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [D
statement code is: double[] doubleArray = new double[2]
statement is: org.evosuite.testcase.statements.ArrayStatement@f3847a6a type is: class org.evosuite.testcase.statements.ArrayStatement return type class [Ljava.lang.String;
statement code is: String[] stringArray = new String[3]
statement is: de.progra.charting.model.DefaultChartDataModel([[Ljava/lang/Number;[D[Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.progra.charting.model.DefaultChartDataModel
statement code is: DefaultChartDataModel defaultChartDataModel = new DefaultChartDataModel(arg0, arg1, arg2)
statement is: de.progra.charting.CoordSystem(Lde/progra/charting/model/ChartDataModel;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.progra.charting.CoordSystem
statement code is: CoordSystem coordSystem = new CoordSystem(arg0)
statement is: org.evosuite.testcase.statements.FieldStatement@5f21d96d type is: class org.evosuite.testcase.statements.FieldStatement return type class de.progra.charting.CoordSystemUtilities
statement code is: CoordSystemUtilities coordSystemUtilities = coordSystem.c
statement is: computeBottomMargin()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int computeBottomMargin = coordSystemUtilities.computeBottomMargin()
test data is: Number[][] numberArray = new Number[1][6];
Number[] numberArray = new Number[2];
numberArray[0] = (Number) 20;
numberArray[1] = (Number) 1;
numberArray[0] = numberArray;
double[] doubleArray = new double[2];
String[] stringArray = new String[3];
DefaultChartDataModel defaultChartDataModel = new DefaultChartDataModel(numberArray, doubleArray, stringArray);
CoordSystem coordSystem = new CoordSystem(defaultChartDataModel);
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
coordSystemUtilities.computeBottomMargin();

* Computation finished
