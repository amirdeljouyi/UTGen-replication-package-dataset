* EvoSuite 1.0.0-SNAPSHOT
* Going to generate test cases for class: de.progra.charting.CoordSystemUtilities
* Starting Client-0
* Properties loaded from /home/roham/Results-Utestgen/dataset/SF110-new-res/88_jopenchart/evosuite-files/evosuite.properties
* Connecting to master process on port 9520
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 08:07:15.559 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 08:07:15.566 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 08:07:15.570 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
[MASTER] 08:07:16.051 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 08:07:16.053 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 08:07:16.077 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 08:07:18.108 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.ZoneId
[MASTER] 08:07:18.145 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.Temporal
[MASTER] 08:07:18.146 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAccessor
[MASTER] 08:07:18.146 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalField
[MASTER] 08:07:18.147 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalUnit
[MASTER] 08:07:18.148 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAmount
[MASTER] 08:07:18.149 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.Clock
[MASTER] 08:07:18.150 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalQuery
[MASTER] 08:07:18.151 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAdjuster
[MASTER] 08:07:18.164 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.Chronology
[MASTER] 08:07:18.174 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.Era
* Finished analyzing classpath
* Generating tests for class de.progra.charting.CoordSystemUtilities
* Test criteria:
  - Branch Coverage
  - Line Coverage
  - Method-Output Coverage
  - Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 450
* Using seed 1710403632918
* Starting evolution
[Progress:>                             0%] [Cov:>                                  0%]* Initial Number of Goals in DynaMOSA = 188 / 450
[Progress:>                             0%] [Cov:=========>                         26%][Progress:>                             0%] [Cov:===========>                       33%][Progress:>                             1%] [Cov:=============>                     38%][MASTER] 08:07:21.110 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.ChronoLocalDate
[MASTER] 08:07:22.161 [logback-1] WARN  TestCluster - Failed to check cache for java.lang.Comparable<T> : Type points to itself
[Progress:>                             1%] [Cov:==============>                    40%][Progress:>                             2%] [Cov:==============>                    40%][Progress:>                             2%] [Cov:==============>                    40%][Progress:>                             2%] [Cov:===============>                   44%][Progress:>                             2%] [Cov:===============>                   44%][Progress:>                             2%] [Cov:===============>                   44%][Progress:>                             2%] [Cov:================>                  48%][Progress:>                             2%] [Cov:================>                  48%][Progress:>                             3%] [Cov:==================>                52%][Progress:>                             3%] [Cov:==================>                52%][Progress:>                             3%] [Cov:==================>                52%][Progress:>                             3%] [Cov:==================>                52%][Progress:>                             3%] [Cov:==================>                52%][Progress:>                             3%] [Cov:==================>                52%][Progress:>                             3%] [Cov:==================>                52%][Progress:>                             3%] [Cov:==================>                52%][Progress:>                             3%] [Cov:==================>                52%][Progress:>                             3%] [Cov:==================>                52%][Progress:>                             3%] [Cov:==================>                52%][Progress:=>                            4%] [Cov:==================>                52%][Progress:=>                            4%] [Cov:==================>                52%][Progress:=>                            4%] [Cov:==================>                52%][Progress:=>                            4%] [Cov:==================>                52%][Progress:=>                            4%] [Cov:==================>                52%][Progress:=>                            4%] [Cov:==================>                52%][Progress:=>                            4%] [Cov:==================>                53%][Progress:=>                            4%] [Cov:==================>                53%][Progress:=>                            4%] [Cov:==================>                53%][Progress:=>                            4%] [Cov:==================>                53%][Progress:=>                            4%] [Cov:==================>                53%][Progress:=>                            4%] [Cov:==================>                53%][Progress:=>                            5%] [Cov:==================>                53%][Progress:=>                            5%] [Cov:==================>                53%][Progress:=>                            5%] [Cov:==================>                54%][Progress:=>                            5%] [Cov:===================>               55%][Progress:=>                            5%] [Cov:===================>               55%][Progress:=>                            5%] [Cov:===================>               55%][Progress:=>                            5%] [Cov:===================>               55%][Progress:=>                            5%] [Cov:===================>               55%][Progress:=>                            5%] [Cov:===================>               55%][Progress:=>                            5%] [Cov:===================>               55%][Progress:=>                            5%] [Cov:===================>               55%][Progress:=>                            5%] [Cov:===================>               55%][Progress:=>                            5%] [Cov:===================>               55%][Progress:=>                            5%] [Cov:===================>               55%][Progress:=>                            6%] [Cov:===================>               55%][Progress:=>                            6%] [Cov:===================>               55%][Progress:=>                            6%] [Cov:===================>               55%][Progress:=>                            6%] [Cov:===================>               55%][Progress:=>                            6%] [Cov:===================>               55%][Progress:=>                            6%] [Cov:===================>               55%][Progress:=>                            6%] [Cov:===================>               55%][Progress:=>                            6%] [Cov:===================>               55%][Progress:=>                            6%] [Cov:===================>               55%][Progress:=>                            6%] [Cov:===================>               55%][Progress:=>                            6%] [Cov:===================>               55%][Progress:=>                            6%] [Cov:===================>               55%][Progress:==>                           8%] [Cov:===================>               55%][Progress:==>                           8%] [Cov:===================>               55%][Progress:==>                           8%] [Cov:===================>               55%][Progress:==>                           8%] [Cov:===================>               55%][Progress:==>                           8%] [Cov:===================>               55%][Progress:==>                           8%] [Cov:===================>               55%][Progress:==>                           8%] [Cov:===================>               55%][Progress:==>                           8%] [Cov:===================>               55%][Progress:==>                           8%] [Cov:===================>               55%][Progress:==>                           9%] [Cov:===================>               55%][Progress:==>                           9%] [Cov:===================>               55%][Progress:==>                           9%] [Cov:===================>               55%][Progress:==>                           9%] [Cov:===================>               55%][Progress:==>                           9%] [Cov:===================>               55%][Progress:==>                           9%] [Cov:===================>               55%][Progress:==>                           9%] [Cov:===================>               55%][Progress:==>                           9%] [Cov:===================>               55%][Progress:==>                           9%] [Cov:===================>               55%][Progress:==>                           9%] [Cov:===================>               55%][Progress:==>                           9%] [Cov:===================>               55%][Progress:==>                           9%] [Cov:===================>               55%][Progress:==>                           9%] [Cov:===================>               55%][Progress:==>                           9%] [Cov:===================>               55%][Progress:==>                           9%] [Cov:===================>               55%][Progress:==>                           9%] [Cov:===================>               55%][Progress:==>                           9%] [Cov:===================>               55%][Progress:==>                           9%] [Cov:===================>               55%][Progress:===>                          10%] [Cov:===================>               55%][Progress:===>                          10%] [Cov:===================>               55%][Progress:===>                          10%] [Cov:===================>               55%][Progress:===>                          10%] [Cov:===================>               55%][Progress:===>                          10%] [Cov:===================>               55%][Progress:===>                          10%] [Cov:===================>               55%][Progress:===>                          10%] [Cov:===================>               55%][Progress:===>                          10%] [Cov:===================>               55%][Progress:===>                          10%] [Cov:===================>               55%][Progress:===>                          10%] [Cov:===================>               55%][Progress:===>                          10%] [Cov:===================>               55%][Progress:===>                          10%] [Cov:===================>               55%][Progress:===>                          10%] [Cov:====================>              58%][Progress:===>                          10%] [Cov:====================>              58%][Progress:===>                          10%] [Cov:====================>              58%][Progress:===>                          10%] [Cov:====================>              58%][Progress:===>                          11%] [Cov:====================>              58%][Progress:===>                          11%] [Cov:====================>              58%][Progress:===>                          11%] [Cov:====================>              58%][Progress:===>                          11%] [Cov:======================>            63%][Progress:===>                          11%] [Cov:=======================>           67%][Progress:===>                          11%] [Cov:=======================>           67%][Progress:===>                          11%] [Cov:=======================>           67%][Progress:===>                          12%] [Cov:=======================>           67%][Progress:===>                          12%] [Cov:=======================>           67%][MASTER] 08:07:43.507 [logback-1] WARN  TestCluster - Failed to check cache for javax.swing.RowFilter<M, I>.ComparisonType : Type points to itself
[Progress:===>                          12%] [Cov:=======================>           67%][Progress:===>                          12%] [Cov:=======================>           67%][Progress:===>                          12%] [Cov:=======================>           67%][Progress:===>                          12%] [Cov:=======================>           67%][Progress:===>                          12%] [Cov:=======================>           67%][Progress:===>                          12%] [Cov:=======================>           67%][Progress:===>                          13%] [Cov:=======================>           67%][Progress:===>                          13%] [Cov:=======================>           67%][Progress:===>                          13%] [Cov:=======================>           67%][MASTER] 08:07:45.587 [logback-1] WARN  TestCluster - Failed to check cache for java.util.Enumeration<E> : Type points to itself
[Progress:===>                          13%] [Cov:=======================>           67%][Progress:===>                          13%] [Cov:=======================>           67%][Progress:===>                          13%] [Cov:=======================>           67%][Progress:===>                          13%] [Cov:=======================>           67%][Progress:===>                          13%] [Cov:=======================>           67%][Progress:====>                         14%] [Cov:=======================>           67%][Progress:====>                         14%] [Cov:=======================>           67%][Progress:====>                         14%] [Cov:=======================>           67%][Progress:====>                         14%] [Cov:=======================>           67%][Progress:====>                         14%] [Cov:=======================>           67%][Progress:====>                         14%] [Cov:=======================>           67%][Progress:====>                         14%] [Cov:=======================>           67%][Progress:====>                         15%] [Cov:=======================>           67%][Progress:====>                         15%] [Cov:=======================>           67%][Progress:====>                         15%] [Cov:=======================>           67%][Progress:====>                         15%] [Cov:=======================>           67%][Progress:====>                         15%] [Cov:=======================>           67%][Progress:====>                         16%] [Cov:=======================>           67%][Progress:====>                         16%] [Cov:=======================>           67%][Progress:====>                         16%] [Cov:=======================>           67%][Progress:=====>                        17%] [Cov:=======================>           67%][Progress:=====>                        17%] [Cov:=======================>           67%][Progress:=====>                        17%] [Cov:=======================>           67%][Progress:=====>                        17%] [Cov:=======================>           68%][Progress:=====>                        17%] [Cov:=======================>           68%][Progress:=====>                        17%] [Cov:=======================>           68%][Progress:=====>                        17%] [Cov:=======================>           68%][Progress:=====>                        17%] [Cov:=======================>           68%][Progress:=====>                        17%] [Cov:=======================>           68%][Progress:=====>                        18%] [Cov:=======================>           68%][Progress:=====>                        18%] [Cov:=======================>           68%][Progress:=====>                        18%] [Cov:=======================>           68%][Progress:=====>                        18%] [Cov:=======================>           68%][Progress:=====>                        18%] [Cov:========================>          69%][Progress:=====>                        18%] [Cov:========================>          69%][Progress:=====>                        18%] [Cov:========================>          69%][Progress:=====>                        18%] [Cov:========================>          69%][Progress:=====>                        18%] [Cov:========================>          69%][Progress:=====>                        19%] [Cov:========================>          69%][Progress:=====>                        19%] [Cov:========================>          69%][Progress:======>                       20%] [Cov:========================>          69%][Progress:======>                       20%] [Cov:========================>          69%][Progress:======>                       20%] [Cov:========================>          69%][Progress:======>                       20%] [Cov:========================>          69%][Progress:======>                       20%] [Cov:========================>          69%][Progress:======>                       20%] [Cov:========================>          69%][Progress:======>                       20%] [Cov:========================>          69%][Progress:======>                       20%] [Cov:========================>          69%][Progress:======>                       20%] [Cov:========================>          69%][Progress:======>                       20%] [Cov:========================>          69%][Progress:======>                       20%] [Cov:========================>          69%][Progress:======>                       20%] [Cov:========================>          69%][Progress:======>                       20%] [Cov:========================>          69%][Progress:======>                       20%] [Cov:========================>          69%][Progress:======>                       20%] [Cov:========================>          69%][Progress:======>                       20%] [Cov:========================>          69%][Progress:======>                       21%] [Cov:========================>          69%][Progress:======>                       21%] [Cov:========================>          69%][Progress:======>                       21%] [Cov:========================>          69%][Progress:======>                       21%] [Cov:========================>          69%][Progress:======>                       21%] [Cov:========================>          69%][Progress:======>                       21%] [Cov:========================>          69%][Progress:======>                       21%] [Cov:========================>          69%][Progress:======>                       21%] [Cov:========================>          69%][Progress:======>                       21%] [Cov:========================>          69%][Progress:======>                       21%] [Cov:========================>          69%][Progress:======>                       21%] [Cov:========================>          69%][Progress:======>                       21%] [Cov:========================>          69%][Progress:======>                       21%] [Cov:========================>          69%][Progress:======>                       22%] [Cov:========================>          69%][Progress:======>                       22%] [Cov:========================>          69%][Progress:======>                       22%] [Cov:========================>          69%][Progress:======>                       22%] [Cov:========================>          69%][Progress:======>                       22%] [Cov:========================>          69%][Progress:======>                       22%] [Cov:========================>          69%][Progress:======>                       23%] [Cov:========================>          69%][Progress:======>                       23%] [Cov:========================>          69%][Progress:======>                       23%] [Cov:========================>          69%][Progress:======>                       23%] [Cov:========================>          69%][Progress:======>                       23%] [Cov:========================>          69%][Progress:=======>                      24%] [Cov:========================>          69%][Progress:=======>                      24%] [Cov:========================>          69%][Progress:=======>                      24%] [Cov:========================>          69%][Progress:=======>                      24%] [Cov:========================>          69%][Progress:=======>                      24%] [Cov:========================>          69%][Progress:=======>                      24%] [Cov:========================>          69%][Progress:=======>                      24%] [Cov:========================>          70%][Progress:=======>                      24%] [Cov:========================>          70%][Progress:=======>                      24%] [Cov:========================>          70%][Progress:=======>                      24%] [Cov:========================>          70%][Progress:=======>                      24%] [Cov:========================>          70%][Progress:=======>                      24%] [Cov:========================>          70%][Progress:=======>                      24%] [Cov:========================>          70%][Progress:=======>                      24%] [Cov:========================>          70%][Progress:=======>                      25%] [Cov:========================>          70%][Progress:=======>                      25%] [Cov:========================>          70%][Progress:=======>                      25%] [Cov:========================>          70%][Progress:=======>                      25%] [Cov:========================>          70%][Progress:=======>                      25%] [Cov:========================>          70%][Progress:=======>                      25%] [Cov:========================>          70%][Progress:=======>                      25%] [Cov:========================>          70%][Progress:=======>                      25%] [Cov:========================>          70%][Progress:=======>                      25%] [Cov:========================>          70%][Progress:=======>                      25%] [Cov:========================>          70%][Progress:=======>                      25%] [Cov:========================>          70%][Progress:=======>                      25%] [Cov:========================>          70%][Progress:=======>                      25%] [Cov:========================>          70%][Progress:=======>                      25%] [Cov:========================>          70%][Progress:=======>                      25%] [Cov:========================>          70%][Progress:=======>                      25%] [Cov:========================>          70%][Progress:=======>                      25%] [Cov:========================>          70%][Progress:=======>                      25%] [Cov:========================>          70%][Progress:=======>                      26%] [Cov:========================>          70%][Progress:=======>                      26%] [Cov:========================>          70%][Progress:=======>                      26%] [Cov:========================>          70%][Progress:=======>                      26%] [Cov:========================>          70%][Progress:=======>                      26%] [Cov:========================>          70%][Progress:=======>                      26%] [Cov:========================>          70%][Progress:=======>                      26%] [Cov:========================>          70%][Progress:=======>                      26%] [Cov:========================>          70%][Progress:=======>                      26%] [Cov:========================>          70%][Progress:=======>                      26%] [Cov:========================>          70%][Progress:=======>                      26%] [Cov:========================>          70%][Progress:=======>                      26%] [Cov:========================>          70%][Progress:=======>                      26%] [Cov:========================>          70%][Progress:=======>                      26%] [Cov:========================>          70%][Progress:========>                     27%] [Cov:========================>          70%][Progress:========>                     27%] [Cov:========================>          70%][Progress:========>                     27%] [Cov:========================>          70%][Progress:========>                     27%] [Cov:========================>          70%][Progress:========>                     27%] [Cov:========================>          70%][Progress:========>                     27%] [Cov:========================>          70%][Progress:========>                     27%] [Cov:========================>          70%][Progress:========>                     28%] [Cov:========================>          70%][Progress:========>                     28%] [Cov:========================>          70%][Progress:========>                     28%] [Cov:========================>          70%][Progress:========>                     28%] [Cov:========================>          70%][Progress:========>                     28%] [Cov:========================>          70%][Progress:========>                     28%] [Cov:========================>          70%][Progress:========>                     28%] [Cov:========================>          70%][Progress:========>                     28%] [Cov:========================>          70%][Progress:========>                     28%] [Cov:========================>          70%][Progress:========>                     29%] [Cov:========================>          70%][Progress:========>                     29%] [Cov:========================>          71%][Progress:========>                     29%] [Cov:========================>          71%][Progress:========>                     29%] [Cov:========================>          71%][Progress:========>                     29%] [Cov:========================>          71%][Progress:========>                     29%] [Cov:========================>          71%][Progress:========>                     29%] [Cov:========================>          71%][Progress:========>                     29%] [Cov:========================>          71%][Progress:========>                     29%] [Cov:========================>          71%][Progress:========>                     29%] [Cov:========================>          71%][Progress:========>                     29%] [Cov:========================>          71%][Progress:========>                     29%] [Cov:========================>          71%][Progress:========>                     29%] [Cov:========================>          71%][Progress:========>                     29%] [Cov:========================>          71%][Progress:========>                     29%] [Cov:========================>          71%][Progress:========>                     29%] [Cov:========================>          71%][Progress:========>                     29%] [Cov:========================>          71%][Progress:=========>                    30%] [Cov:========================>          71%][Progress:=========>                    30%] [Cov:========================>          71%][Progress:=========>                    30%] [Cov:========================>          71%][Progress:=========>                    30%] [Cov:========================>          71%][Progress:=========>                    30%] [Cov:========================>          71%][Progress:=========>                    30%] [Cov:========================>          71%][Progress:=========>                    30%] [Cov:========================>          71%][Progress:=========>                    30%] [Cov:========================>          71%][Progress:=========>                    30%] [Cov:========================>          71%][Progress:=========>                    30%] [Cov:========================>          71%][Progress:=========>                    30%] [Cov:========================>          71%][Progress:=========>                    30%] [Cov:========================>          71%][Progress:=========>                    30%] [Cov:========================>          71%][Progress:=========>                    31%] [Cov:========================>          71%][Progress:=========>                    31%] [Cov:========================>          71%][Progress:=========>                    31%] [Cov:========================>          71%][Progress:=========>                    31%] [Cov:========================>          71%][Progress:=========>                    31%] [Cov:========================>          71%][Progress:=========>                    31%] [Cov:========================>          71%][Progress:=========>                    31%] [Cov:========================>          71%][Progress:=========>                    31%] [Cov:========================>          71%][Progress:=========>                    31%] [Cov:========================>          71%][Progress:=========>                    31%] [Cov:========================>          71%][Progress:=========>                    31%] [Cov:========================>          71%][Progress:=========>                    32%] [Cov:========================>          71%][Progress:=========>                    32%] [Cov:========================>          71%][Progress:=========>                    33%] [Cov:========================>          71%][Progress:=========>                    33%] [Cov:========================>          71%][Progress:=========>                    33%] [Cov:========================>          71%][Progress:=========>                    33%] [Cov:========================>          71%][Progress:=========>                    33%] [Cov:========================>          71%][Progress:=========>                    33%] [Cov:========================>          71%][Progress:=========>                    33%] [Cov:========================>          71%][Progress:=========>                    33%] [Cov:========================>          71%][Progress:=========>                    33%] [Cov:========================>          71%][Progress:=========>                    33%] [Cov:========================>          71%][Progress:=========>                    33%] [Cov:========================>          71%][Progress:=========>                    33%] [Cov:========================>          71%][Progress:=========>                    33%] [Cov:========================>          71%][Progress:=========>                    33%] [Cov:========================>          71%][Progress:=========>                    33%] [Cov:========================>          71%][Progress:=========>                    33%] [Cov:========================>          71%][Progress:==========>                   34%] [Cov:========================>          71%][Progress:==========>                   34%] [Cov:========================>          71%][Progress:==========>                   34%] [Cov:========================>          71%][Progress:==========>                   34%] [Cov:========================>          71%][Progress:==========>                   34%] [Cov:========================>          71%][Progress:==========>                   34%] [Cov:========================>          71%][Progress:==========>                   34%] [Cov:========================>          71%][Progress:==========>                   34%] [Cov:========================>          71%][Progress:==========>                   34%] [Cov:========================>          71%][Progress:==========>                   34%] [Cov:========================>          71%][Progress:==========>                   34%] [Cov:========================>          71%][Progress:==========>                   34%] [Cov:========================>          71%][Progress:==========>                   34%] [Cov:========================>          71%][Progress:==========>                   34%] [Cov:========================>          71%][Progress:==========>                   34%] [Cov:========================>          71%][Progress:==========>                   34%] [Cov:========================>          71%][Progress:==========>                   34%] [Cov:========================>          71%][Progress:==========>                   35%] [Cov:========================>          71%][Progress:==========>                   35%] [Cov:========================>          71%][Progress:==========>                   35%] [Cov:========================>          71%][Progress:==========>                   35%] [Cov:========================>          71%][Progress:==========>                   35%] [Cov:========================>          71%][Progress:==========>                   35%] [Cov:========================>          71%][Progress:==========>                   35%] [Cov:========================>          71%][Progress:==========>                   35%] [Cov:========================>          71%][Progress:==========>                   35%] [Cov:========================>          71%][Progress:==========>                   35%] [Cov:========================>          71%][Progress:==========>                   35%] [Cov:========================>          71%][Progress:==========>                   35%] [Cov:========================>          71%][Progress:==========>                   35%] [Cov:========================>          71%][Progress:==========>                   36%] [Cov:========================>          71%][Progress:==========>                   36%] [Cov:========================>          71%][Progress:==========>                   36%] [Cov:========================>          71%][Progress:==========>                   36%] [Cov:========================>          71%][Progress:==========>                   36%] [Cov:========================>          71%][Progress:==========>                   36%] [Cov:========================>          71%][Progress:==========>                   36%] [Cov:========================>          71%][Progress:==========>                   36%] [Cov:========================>          71%][Progress:==========>                   36%] [Cov:========================>          71%][Progress:==========>                   36%] [Cov:========================>          71%][Progress:===========>                  37%] [Cov:========================>          71%][Progress:===========>                  37%] [Cov:========================>          71%][Progress:===========>                  37%] [Cov:========================>          71%][Progress:===========>                  37%] [Cov:========================>          71%][Progress:===========>                  37%] [Cov:========================>          71%][Progress:===========>                  37%] [Cov:========================>          71%][Progress:===========>                  37%] [Cov:========================>          71%][Progress:===========>                  37%] [Cov:========================>          71%][Progress:===========>                  38%] [Cov:========================>          71%][Progress:===========>                  38%] [Cov:========================>          71%][Progress:===========>                  38%] [Cov:========================>          71%][Progress:===========>                  38%] [Cov:========================>          71%][Progress:===========>                  38%] [Cov:========================>          71%][Progress:===========>                  38%] [Cov:========================>          71%][Progress:==============>               47%] [Cov:========================>          71%][Progress:==============>               47%] [Cov:========================>          71%][Progress:==============>               47%] [Cov:========================>          71%][Progress:==============>               47%] [Cov:=========================>         72%][Progress:==============>               47%] [Cov:=========================>         72%][Progress:==============>               48%] [Cov:=========================>         73%][Progress:==============>               48%] [Cov:=========================>         73%][Progress:==============>               48%] [Cov:=========================>         73%][Progress:==============>               48%] [Cov:=========================>         73%][Progress:==============>               48%] [Cov:=========================>         73%][Progress:==============>               48%] [Cov:=========================>         73%][Progress:==============>               48%] [Cov:=========================>         73%][Progress:==============>               48%] [Cov:=========================>         73%][Progress:==============>               48%] [Cov:=========================>         73%][Progress:==============>               48%] [Cov:=========================>         73%][Progress:==============>               48%] [Cov:=========================>         73%][Progress:==============>               48%] [Cov:=========================>         73%][Progress:==============>               49%] [Cov:=========================>         73%][Progress:==============>               49%] [Cov:=========================>         73%][Progress:==============>               49%] [Cov:=========================>         73%][Progress:==============>               49%] [Cov:=========================>         73%][Progress:==============>               49%] [Cov:=========================>         73%][Progress:==============>               49%] [Cov:=========================>         73%][Progress:===============>              50%] [Cov:=========================>         73%][Progress:===============>              50%] [Cov:=========================>         73%][Progress:===============>              50%] [Cov:=========================>         73%][Progress:===============>              50%] [Cov:=========================>         73%][Progress:===============>              50%] [Cov:=========================>         73%][Progress:===============>              50%] [Cov:=========================>         73%][Progress:===============>              50%] [Cov:=========================>         73%][Progress:===============>              50%] [Cov:=========================>         73%][Progress:===============>              50%] [Cov:=========================>         73%][Progress:===============>              50%] [Cov:=========================>         73%][Progress:===============>              50%] [Cov:=========================>         73%][Progress:===============>              50%] [Cov:=========================>         73%][Progress:===============>              51%] [Cov:=========================>         73%][Progress:===============>              51%] [Cov:=========================>         73%][Progress:===============>              51%] [Cov:=========================>         73%][Progress:===============>              51%] [Cov:=========================>         73%][Progress:===============>              51%] [Cov:=========================>         73%][Progress:===============>              51%] [Cov:=========================>         73%][Progress:===============>              51%] [Cov:=========================>         73%][Progress:===============>              51%] [Cov:=========================>         73%][Progress:===============>              51%] [Cov:=========================>         73%][Progress:===============>              51%] [Cov:=========================>         73%][Progress:===============>              51%] [Cov:=========================>         73%][Progress:===============>              51%] [Cov:=========================>         73%][Progress:===============>              51%] [Cov:=========================>         73%][Progress:===============>              51%] [Cov:=========================>         73%][Progress:===============>              52%] [Cov:=========================>         73%][Progress:===============>              52%] [Cov:=========================>         73%][Progress:===============>              52%] [Cov:=========================>         73%][Progress:===============>              52%] [Cov:=========================>         73%][Progress:===============>              52%] [Cov:=========================>         73%][Progress:===============>              52%] [Cov:=========================>         73%][Progress:===============>              52%] [Cov:=========================>         73%][Progress:===============>              52%] [Cov:=========================>         73%][Progress:===============>              52%] [Cov:=========================>         73%][Progress:===============>              52%] [Cov:=========================>         73%][Progress:===============>              52%] [Cov:=========================>         73%][Progress:===============>              52%] [Cov:=========================>         73%][Progress:===============>              52%] [Cov:=========================>         73%][Progress:===============>              53%] [Cov:=========================>         74%][Progress:===============>              53%] [Cov:=========================>         74%][Progress:===============>              53%] [Cov:=========================>         74%][Progress:===============>              53%] [Cov:=========================>         74%][Progress:===============>              53%] [Cov:=========================>         74%][Progress:===============>              53%] [Cov:=========================>         74%][Progress:===============>              53%] [Cov:=========================>         74%][Progress:===============>              53%] [Cov:=========================>         74%][Progress:===============>              53%] [Cov:=========================>         74%][Progress:===============>              53%] [Cov:=========================>         74%][Progress:===============>              53%] [Cov:=========================>         74%][Progress:===============>              53%] [Cov:=========================>         74%][Progress:===============>              53%] [Cov:=========================>         74%][Progress:===============>              53%] [Cov:=========================>         74%][Progress:===============>              53%] [Cov:=========================>         74%][Progress:===============>              53%] [Cov:=========================>         74%][Progress:===============>              53%] [Cov:=========================>         74%][Progress:===============>              53%] [Cov:=========================>         74%][Progress:===============>              53%] [Cov:=========================>         74%][Progress:================>             54%] [Cov:=========================>         74%][Progress:================>             54%] [Cov:=========================>         74%][Progress:================>             54%] [Cov:=========================>         74%][Progress:================>             54%] [Cov:=========================>         74%][Progress:================>             54%] [Cov:=========================>         74%][Progress:================>             54%] [Cov:=========================>         74%][Progress:================>             54%] [Cov:=========================>         74%][Progress:================>             54%] [Cov:=========================>         74%][Progress:================>             54%] [Cov:=========================>         74%][Progress:================>             54%] [Cov:=========================>         74%][Progress:================>             54%] [Cov:=========================>         74%][Progress:================>             54%] [Cov:=========================>         74%][Progress:================>             54%] [Cov:=========================>         74%][Progress:================>             55%] [Cov:=========================>         74%][Progress:================>             55%] [Cov:=========================>         74%][Progress:================>             55%] [Cov:=========================>         74%][Progress:================>             55%] [Cov:=========================>         74%][Progress:================>             55%] [Cov:==========================>        75%][Progress:================>             55%] [Cov:==========================>        76%][Progress:================>             55%] [Cov:==========================>        76%][Progress:================>             55%] [Cov:==========================>        76%][Progress:================>             55%] [Cov:==========================>        76%][Progress:================>             55%] [Cov:==========================>        77%][Progress:================>             55%] [Cov:==========================>        77%][Progress:================>             55%] [Cov:==========================>        77%][Progress:================>             55%] [Cov:==========================>        77%][Progress:================>             55%] [Cov:==========================>        77%][Progress:================>             56%] [Cov:==========================>        77%][Progress:================>             56%] [Cov:==========================>        77%][Progress:================>             56%] [Cov:==========================>        77%][Progress:================>             56%] [Cov:==========================>        77%][Progress:================>             56%] [Cov:==========================>        77%][Progress:================>             56%] [Cov:==========================>        77%][Progress:================>             56%] [Cov:==========================>        77%][Progress:================>             56%] [Cov:==========================>        77%][Progress:================>             56%] [Cov:==========================>        77%][Progress:================>             56%] [Cov:==========================>        77%][Progress:================>             56%] [Cov:==========================>        77%][Progress:================>             56%] [Cov:==========================>        77%][Progress:================>             56%] [Cov:==========================>        77%][Progress:================>             56%] [Cov:==========================>        77%][Progress:================>             56%] [Cov:==========================>        77%][Progress:=================>            57%] [Cov:==========================>        77%][Progress:=================>            57%] [Cov:==========================>        77%][Progress:=================>            57%] [Cov:==========================>        77%][Progress:=================>            57%] [Cov:==========================>        77%][Progress:=================>            57%] [Cov:==========================>        77%][Progress:=================>            57%] [Cov:==========================>        77%][Progress:=================>            57%] [Cov:==========================>        77%][Progress:=================>            57%] [Cov:==========================>        77%][Progress:=================>            57%] [Cov:==========================>        77%][Progress:=================>            57%] [Cov:==========================>        77%][Progress:=================>            57%] [Cov:==========================>        77%][Progress:=================>            57%] [Cov:==========================>        77%][Progress:=================>            58%] [Cov:==========================>        77%][Progress:=================>            58%] [Cov:==========================>        77%][Progress:=================>            58%] [Cov:==========================>        77%][Progress:=================>            58%] [Cov:==========================>        77%][Progress:=================>            58%] [Cov:==========================>        77%][Progress:=================>            58%] [Cov:==========================>        77%][Progress:=================>            58%] [Cov:==========================>        77%][Progress:=================>            58%] [Cov:==========================>        77%][Progress:=================>            58%] [Cov:==========================>        77%][Progress:=================>            58%] [Cov:==========================>        77%][Progress:=================>            58%] [Cov:==========================>        77%][Progress:=================>            58%] [Cov:==========================>        77%][Progress:=================>            58%] [Cov:==========================>        77%][Progress:=================>            58%] [Cov:==========================>        77%][Progress:=================>            58%] [Cov:==========================>        77%][Progress:=================>            58%] [Cov:==========================>        77%][Progress:=================>            58%] [Cov:==========================>        77%][Progress:=================>            58%] [Cov:==========================>        77%][Progress:=================>            59%] [Cov:==========================>        77%][Progress:=================>            59%] [Cov:==========================>        77%][Progress:=================>            59%] [Cov:===========================>       78%][Progress:=================>            59%] [Cov:===========================>       78%][Progress:=================>            59%] [Cov:===========================>       78%][Progress:=================>            59%] [Cov:===========================>       78%][Progress:=================>            59%] [Cov:===========================>       78%][Progress:=================>            59%] [Cov:===========================>       78%][Progress:=================>            59%] [Cov:===========================>       78%][Progress:=================>            59%] [Cov:===========================>       78%][Progress:=================>            59%] [Cov:===========================>       78%][Progress:=================>            59%] [Cov:===========================>       78%][Progress:=================>            59%] [Cov:===========================>       78%][Progress:==================>           60%] [Cov:===========================>       78%][Progress:==================>           60%] [Cov:===========================>       78%][Progress:==================>           60%] [Cov:===========================>       78%][Progress:==================>           60%] [Cov:===========================>       78%][Progress:==================>           60%] [Cov:===========================>       78%][Progress:==================>           60%] [Cov:===========================>       78%][Progress:==================>           60%] [Cov:===========================>       78%][Progress:==================>           60%] [Cov:===========================>       78%][Progress:==================>           62%] [Cov:===========================>       78%][Progress:==================>           63%] [Cov:===========================>       78%][Progress:==================>           63%] [Cov:===========================>       78%][Progress:==================>           63%] [Cov:===========================>       78%][Progress:==================>           63%] [Cov:===========================>       78%][Progress:==================>           63%] [Cov:===========================>       78%][Progress:==================>           63%] [Cov:===========================>       78%][Progress:==================>           63%] [Cov:===========================>       78%][Progress:==================>           63%] [Cov:===========================>       78%][Progress:==================>           63%] [Cov:===========================>       78%][Progress:==================>           63%] [Cov:===========================>       78%][Progress:==================>           63%] [Cov:===========================>       79%][Progress:==================>           63%] [Cov:===========================>       79%][Progress:==================>           63%] [Cov:===========================>       79%][Progress:==================>           63%] [Cov:===========================>       79%][Progress:==================>           63%] [Cov:===========================>       79%][Progress:==================>           63%] [Cov:===========================>       79%][Progress:==================>           63%] [Cov:===========================>       79%][Progress:==================>           63%] [Cov:===========================>       79%][Progress:==================>           63%] [Cov:===========================>       79%][Progress:==================>           63%] [Cov:===========================>       79%][Progress:==================>           63%] [Cov:===========================>       79%][Progress:==================>           63%] [Cov:===========================>       79%][Progress:==================>           63%] [Cov:===========================>       79%][Progress:===================>          64%] [Cov:===========================>       79%][Progress:===================>          64%] [Cov:===========================>       79%][Progress:===================>          64%] [Cov:===========================>       79%][Progress:===================>          64%] [Cov:===========================>       79%][Progress:===================>          64%] [Cov:===========================>       79%][Progress:===================>          64%] [Cov:===========================>       79%][Progress:===================>          64%] [Cov:===========================>       79%][Progress:===================>          64%] [Cov:===========================>       79%][Progress:===================>          64%] [Cov:===========================>       79%][Progress:===================>          64%] [Cov:===========================>       79%][Progress:===================>          64%] [Cov:===========================>       79%][Progress:===================>          64%] [Cov:===========================>       79%][Progress:===================>          64%] [Cov:===========================>       79%][Progress:===================>          64%] [Cov:============================>      80%][Progress:===================>          64%] [Cov:============================>      80%][Progress:===================>          64%] [Cov:============================>      80%][Progress:===================>          64%] [Cov:============================>      80%][Progress:===================>          65%] [Cov:============================>      80%][Progress:===================>          65%] [Cov:============================>      80%][Progress:===================>          65%] [Cov:============================>      80%][Progress:===================>          65%] [Cov:============================>      80%][Progress:===================>          65%] [Cov:============================>      80%][Progress:===================>          65%] [Cov:============================>      80%][Progress:===================>          65%] [Cov:============================>      80%][Progress:===================>          65%] [Cov:============================>      80%][Progress:===================>          65%] [Cov:============================>      80%][Progress:===================>          65%] [Cov:============================>      80%][Progress:===================>          65%] [Cov:============================>      80%][Progress:===================>          65%] [Cov:============================>      80%][Progress:===================>          65%] [Cov:============================>      80%][Progress:===================>          65%] [Cov:============================>      80%][Progress:===================>          65%] [Cov:============================>      80%][Progress:===================>          66%] [Cov:============================>      80%][Progress:===================>          66%] [Cov:============================>      80%][Progress:===================>          66%] [Cov:============================>      80%][Progress:====================>         67%] [Cov:============================>      80%][Progress:====================>         67%] [Cov:============================>      80%][Progress:====================>         68%] [Cov:============================>      80%][Progress:====================>         68%] [Cov:============================>      80%][Progress:====================>         69%] [Cov:============================>      80%][Progress:====================>         69%] [Cov:============================>      80%][Progress:=====================>        70%] [Cov:============================>      80%][Progress:=====================>        70%] [Cov:============================>      80%][Progress:=====================>        70%] [Cov:============================>      80%][Progress:=====================>        70%] [Cov:============================>      80%][Progress:=====================>        71%] [Cov:============================>      80%][Progress:=====================>        71%] [Cov:============================>      80%][Progress:=====================>        71%] [Cov:============================>      80%][Progress:=====================>        71%] [Cov:============================>      80%][Progress:=====================>        72%] [Cov:============================>      80%][Progress:=====================>        72%] [Cov:============================>      80%][Progress:=====================>        73%] [Cov:============================>      80%][Progress:=====================>        73%] [Cov:============================>      80%][Progress:=====================>        73%] [Cov:============================>      80%][Progress:=====================>        73%] [Cov:============================>      80%][Progress:=====================>        73%] [Cov:============================>      80%][Progress:======================>       74%] [Cov:============================>      80%][Progress:======================>       74%] [Cov:============================>      80%][Progress:======================>       74%] [Cov:============================>      80%][Progress:======================>       74%] [Cov:============================>      80%][Progress:======================>       75%] [Cov:============================>      80%][Progress:======================>       75%] [Cov:============================>      80%][Progress:======================>       75%] [Cov:============================>      80%][Progress:======================>       75%] [Cov:============================>      80%][Progress:======================>       75%] [Cov:============================>      80%][Progress:======================>       75%] [Cov:============================>      80%][Progress:======================>       75%] [Cov:============================>      80%][Progress:======================>       76%] [Cov:============================>      80%][Progress:=======================>      77%] [Cov:============================>      80%][Progress:=======================>      77%] [Cov:============================>      80%][Progress:=======================>      77%] [Cov:============================>      80%][Progress:=======================>      78%] [Cov:============================>      80%][Progress:=======================>      78%] [Cov:============================>      80%][Progress:=======================>      79%] [Cov:============================>      81%][Progress:=======================>      79%] [Cov:============================>      81%][Progress:=======================>      79%] [Cov:============================>      81%][Progress:=======================>      79%] [Cov:============================>      81%][Progress:=======================>      79%] [Cov:============================>      81%][Progress:=======================>      79%] [Cov:============================>      81%][Progress:=======================>      79%] [Cov:============================>      81%][Progress:=======================>      79%] [Cov:============================>      81%][Progress:=======================>      79%] [Cov:============================>      81%][Progress:=======================>      79%] [Cov:============================>      81%][Progress:=======================>      79%] [Cov:============================>      81%][Progress:=======================>      79%] [Cov:============================>      81%][Progress:=======================>      79%] [Cov:============================>      81%][Progress:=======================>      79%] [Cov:============================>      81%][Progress:========================>     80%] [Cov:============================>      81%][Progress:========================>     80%] [Cov:============================>      81%][Progress:========================>     80%] [Cov:============================>      81%][Progress:========================>     80%] [Cov:============================>      81%][Progress:========================>     80%] [Cov:============================>      81%][Progress:========================>     80%] [Cov:============================>      81%][Progress:========================>     80%] [Cov:============================>      81%][Progress:========================>     80%] [Cov:============================>      81%][Progress:========================>     80%] [Cov:============================>      81%][Progress:========================>     80%] [Cov:============================>      81%][Progress:========================>     81%] [Cov:============================>      81%][Progress:========================>     81%] [Cov:============================>      81%][Progress:========================>     81%] [Cov:============================>      81%][Progress:========================>     81%] [Cov:============================>      81%][Progress:========================>     81%] [Cov:============================>      81%][Progress:========================>     81%] [Cov:============================>      81%][Progress:========================>     81%] [Cov:============================>      81%][Progress:========================>     81%] [Cov:============================>      81%][Progress:========================>     81%] [Cov:============================>      81%][Progress:========================>     81%] [Cov:============================>      81%][Progress:========================>     81%] [Cov:============================>      81%][Progress:========================>     81%] [Cov:============================>      81%][Progress:========================>     81%] [Cov:============================>      81%][Progress:========================>     82%] [Cov:============================>      81%][Progress:========================>     82%] [Cov:============================>      81%][Progress:========================>     82%] [Cov:============================>      81%][Progress:========================>     82%] [Cov:============================>      81%][Progress:========================>     82%] [Cov:============================>      81%][Progress:========================>     82%] [Cov:============================>      81%][Progress:========================>     82%] [Cov:============================>      81%][Progress:========================>     82%] [Cov:============================>      81%][Progress:========================>     82%] [Cov:============================>      81%][Progress:========================>     82%] [Cov:============================>      81%][Progress:========================>     83%] [Cov:============================>      81%][Progress:========================>     83%] [Cov:============================>      81%][Progress:========================>     83%] [Cov:============================>      81%][Progress:========================>     83%] [Cov:============================>      81%][Progress:========================>     83%] [Cov:============================>      81%][Progress:========================>     83%] [Cov:============================>      81%][Progress:========================>     83%] [Cov:============================>      81%][Progress:========================>     83%] [Cov:============================>      81%][Progress:========================>     83%] [Cov:============================>      81%][Progress:========================>     83%] [Cov:============================>      81%][Progress:========================>     83%] [Cov:============================>      81%][Progress:=========================>    84%] [Cov:============================>      81%][Progress:=========================>    84%] [Cov:============================>      81%][Progress:=========================>    84%] [Cov:============================>      81%][Progress:=========================>    84%] [Cov:============================>      81%][Progress:=========================>    84%] [Cov:============================>      81%][Progress:=========================>    84%] [Cov:============================>      81%][Progress:=========================>    84%] [Cov:============================>      81%][Progress:=========================>    84%] [Cov:============================>      81%][Progress:=========================>    84%] [Cov:============================>      81%][Progress:=========================>    84%] [Cov:============================>      81%][Progress:=========================>    84%] [Cov:============================>      81%][Progress:=========================>    84%] [Cov:============================>      81%][Progress:=========================>    84%] [Cov:============================>      81%][Progress:=========================>    84%] [Cov:============================>      81%][Progress:=========================>    84%] [Cov:============================>      81%][Progress:=========================>    85%] [Cov:============================>      82%][Progress:=========================>    85%] [Cov:============================>      82%][Progress:=========================>    85%] [Cov:============================>      82%][Progress:=========================>    85%] [Cov:============================>      82%][Progress:=========================>    85%] [Cov:============================>      82%][Progress:=========================>    85%] [Cov:============================>      82%][Progress:=========================>    85%] [Cov:============================>      82%][Progress:=========================>    85%] [Cov:============================>      82%][Progress:=========================>    85%] [Cov:============================>      82%][Progress:=========================>    85%] [Cov:============================>      82%][Progress:=========================>    85%] [Cov:============================>      82%][Progress:=========================>    85%] [Cov:============================>      82%][Progress:=========================>    85%] [Cov:============================>      82%][Progress:=========================>    86%] [Cov:============================>      82%][Progress:=========================>    86%] [Cov:============================>      82%][Progress:=========================>    86%] [Cov:============================>      82%][Progress:=========================>    86%] [Cov:============================>      82%][Progress:=========================>    86%] [Cov:============================>      82%][Progress:=========================>    86%] [Cov:============================>      82%][Progress:=========================>    86%] [Cov:============================>      82%][Progress:=========================>    86%] [Cov:============================>      82%][Progress:=========================>    86%] [Cov:============================>      82%][Progress:=========================>    86%] [Cov:============================>      82%][Progress:=========================>    86%] [Cov:============================>      82%][Progress:=========================>    86%] [Cov:============================>      82%][Progress:==========================>   87%] [Cov:============================>      82%][Progress:==========================>   87%] [Cov:============================>      82%][Progress:==========================>   87%] [Cov:============================>      82%][Progress:==========================>   88%] [Cov:============================>      82%][Progress:==========================>   88%] [Cov:============================>      82%][Progress:==========================>   89%] [Cov:============================>      82%][Progress:==========================>   89%] [Cov:============================>      82%][Progress:===========================>  90%] [Cov:============================>      82%][Progress:===========================>  90%] [Cov:============================>      82%][Progress:===========================>  90%] [Cov:============================>      82%][Progress:===========================>  90%] [Cov:============================>      82%][Progress:===========================>  90%] [Cov:============================>      82%][Progress:===========================>  93%] [Cov:============================>      82%][Progress:===========================>  93%] [Cov:============================>      82%][Progress:===========================>  93%] [Cov:============================>      82%][Progress:===========================>  93%] [Cov:============================>      82%][Progress:===========================>  93%] [Cov:============================>      82%][Progress:===========================>  93%] [Cov:============================>      82%][Progress:===========================>  93%] [Cov:============================>      82%][Progress:===========================>  93%] [Cov:============================>      82%][Progress:===========================>  93%] [Cov:============================>      82%][Progress:===========================>  93%] [Cov:============================>      82%][Progress:===========================>  93%] [Cov:============================>      82%][Progress:============================> 94%] [Cov:============================>      82%][Progress:============================> 94%] [Cov:============================>      82%][Progress:============================> 94%] [Cov:============================>      82%][Progress:============================> 94%] [Cov:============================>      82%][Progress:============================> 94%] [Cov:============================>      82%][Progress:============================> 94%] [Cov:============================>      82%][Progress:============================> 94%] [Cov:============================>      82%][Progress:============================> 94%] [Cov:============================>      82%][Progress:============================> 94%] [Cov:============================>      82%][Progress:============================> 94%] [Cov:============================>      82%][Progress:============================> 94%] [Cov:============================>      82%][Progress:============================> 95%] [Cov:============================>      82%][Progress:============================> 95%] [Cov:============================>      82%][Progress:============================> 95%] [Cov:============================>      82%][Progress:============================> 95%] [Cov:============================>      82%][Progress:============================> 95%] [Cov:============================>      82%][Progress:============================> 95%] [Cov:============================>      82%][Progress:============================> 95%] [Cov:============================>      82%][Progress:============================> 95%] [Cov:============================>      82%][Progress:============================> 96%] [Cov:============================>      82%][Progress:============================> 96%] [Cov:============================>      82%][Progress:============================> 96%] [Cov:============================>      82%][Progress:============================> 96%] [Cov:============================>      82%][Progress:============================> 96%] [Cov:============================>      82%][Progress:============================> 96%] [Cov:============================>      82%][Progress:============================> 96%] [Cov:============================>      82%][Progress:============================> 96%] [Cov:============================>      82%][Progress:============================> 96%] [Cov:============================>      82%][Progress:============================> 96%] [Cov:============================>      82%][Progress:============================> 96%] [Cov:============================>      82%][Progress:============================> 96%] [Cov:============================>      82%][Progress:=============================>97%] [Cov:============================>      82%][Progress:=============================>97%] [Cov:============================>      82%][Progress:=============================>97%] [Cov:============================>      82%][Progress:=============================>97%] [Cov:============================>      82%][Progress:=============================>97%] [Cov:============================>      82%][Progress:=============================>97%] [Cov:============================>      82%][Progress:=============================>97%] [Cov:============================>      82%][Progress:=============================>97%] [Cov:============================>      82%][Progress:=============================>97%] [Cov:============================>      82%][Progress:=============================>97%] [Cov:============================>      82%][Progress:=============================>97%] [Cov:============================>      82%][Progress:=============================>97%] [Cov:============================>      82%][Progress:=============================>98%] [Cov:============================>      82%][Progress:=============================>98%] [Cov:============================>      82%][Progress:=============================>98%] [Cov:============================>      82%][Progress:=============================>98%] [Cov:============================>      82%][Progress:=============================>98%] [Cov:============================>      82%][Progress:=============================>98%] [Cov:============================>      82%][Progress:=============================>98%] [Cov:============================>      82%][Progress:=============================>98%] [Cov:============================>      82%][Progress:=============================>98%] [Cov:============================>      82%][Progress:=============================>98%] [Cov:============================>      82%][Progress:=============================>99%] [Cov:============================>      82%][Progress:=============================>99%] [Cov:============================>      82%][Progress:=============================>99%] [Cov:============================>      82%][Progress:=============================>99%] [Cov:============================>      82%][Progress:=============================>99%] [Cov:============================>      82%][Progress:=============================>99%] [Cov:============================>      82%][Progress:=============================>99%] [Cov:============================>      82%][Progress:=============================>99%] [Cov:============================>      82%][Progress:=============================>99%] [Cov:============================>      82%][Progress:=============================>99%] [Cov:============================>      82%][Progress:=============================>99%] [Cov:============================>      82%][Progress:=============================>99%] [Cov:============================>      82%][Progress:=============================>99%] [Cov:============================>      82%][Progress:==============================100%] [Cov:============================>      82%]
* Search finished after 202s and 834 generations, 417034 statements, best individual has fitness: 52.0
* Generated before the refinement 39 tests with total length 316
statement is: de.progra.charting.model.ObjectChartDataModel()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.progra.charting.model.ObjectChartDataModel
statement code is: ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel()
statement is: de.progra.charting.CoordSystem(Lde/progra/charting/model/ChartDataModel;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.progra.charting.CoordSystem
statement code is: CoordSystem coordSystem = new CoordSystem(arg0)
statement is: javax.swing.text.DefaultCaret()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class javax.swing.text.DefaultCaret
statement code is: DefaultCaret defaultCaret = new DefaultCaret()
statement is: setBounds(Ljava/awt/Rectangle;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: coordSystem.setBounds(arg0)
statement is: org.evosuite.testcase.statements.FieldStatement@67d7b381 type is: class org.evosuite.testcase.statements.FieldStatement return type class de.progra.charting.CoordSystemUtilities
statement code is: CoordSystemUtilities coordSystemUtilities = coordSystem.c
statement is: java.awt.image.BufferedImage(III)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.awt.image.BufferedImage
statement code is: BufferedImage bufferedImage = new BufferedImage(20, 20, 1)
statement is: setPaintLabels(Z)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: coordSystem.setPaintLabels(false)
statement is: createGraphics()Ljava/awt/Graphics2D; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.awt.Graphics2D
statement code is: Graphics2D createGraphics = bufferedImage.createGraphics()
statement is: drawXAxisTicks(Ljava/awt/Graphics2D;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: coordSystemUtilities.drawXAxisTicks(arg0)
test data is: ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel();
CoordSystem coordSystem = new CoordSystem(objectChartDataModel);
DefaultCaret defaultCaret = new DefaultCaret();
coordSystem.setBounds(defaultCaret);
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
BufferedImage bufferedImage = new BufferedImage(20, 20, 1);
coordSystem.setPaintLabels(false);
Graphics2D createGraphics = bufferedImage.createGraphics();
coordSystemUtilities.drawXAxisTicks(createGraphics);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel();
        CoordSystem coordSystem = new CoordSystem(objectChartDataModel);
        DefaultCaret defaultCaret = new DefaultCaret("Test1", 10, 20);
        coordSystem.setBounds(defaultCaret);
        CoordSystemUtilities coordSystemUtilities = coordSystem.c;
        BufferedImage bufferedImage = new BufferedImage(20, 20, 1);
        coordSystem.setPaintLabels(false);
        Graphics2D createGraphics = bufferedImage.createGraphics();
        coordSystemUtilities.drawXAxisTicks(createGraphics);
    }
}
statement is: ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: CoordSystem coordSystem = new CoordSystem(objectChartDataModel), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: DefaultCaret defaultCaret = new DefaultCaret("Test1", 10, 20), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: coordSystem.setBounds(defaultCaret), class spoon.support.reflect.code.CtInvocationImpl
invocation is: coordSystem.setBounds(defaultCaret) target is: coordSystem method is: setBounds(DefaultCaret)
source statement: de.progra.charting.CoordSystem(Lde/progra/charting/model/ChartDataModel;)V callee: VariableReference: Statement 1, type de.progra.charting.CoordSystemindex is: 1
Matched Method is: setBounds(Ljava/awt/Rectangle;)V
i 0 Parameters size() 0 Num of Method Parameters: 1
statement is: CoordSystemUtilities coordSystemUtilities = coordSystem.c, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: coordSystem.c is coordSystem
CtField is: protected de.progra.charting.CoordSystemUtilities de.progra.charting.CoordSystem.c CoordSystemUtilities c
statement is: BufferedImage bufferedImage = new BufferedImage(20, 20, 1), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: coordSystem.setPaintLabels(false), class spoon.support.reflect.code.CtInvocationImpl
invocation is: coordSystem.setPaintLabels(false) target is: coordSystem method is: setPaintLabels(boolean)
source statement: de.progra.charting.CoordSystem(Lde/progra/charting/model/ChartDataModel;)V callee: VariableReference: Statement 1, type de.progra.charting.CoordSystemindex is: 1
Matched Method is: setPaintLabels(Z)V
statement is: Graphics2D createGraphics = bufferedImage.createGraphics(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: bufferedImage.createGraphics() target is: bufferedImage method is: createGraphics()
source statement: java.awt.image.BufferedImage(III)V callee: VariableReference: Statement 5, type java.awt.image.BufferedImageindex is: 7
Matched Method is: createGraphics()Ljava/awt/Graphics2D;
statement is: coordSystemUtilities.drawXAxisTicks(createGraphics), class spoon.support.reflect.code.CtInvocationImpl
invocation is: coordSystemUtilities.drawXAxisTicks(createGraphics) target is: coordSystemUtilities method is: drawXAxisTicks(Graphics2D)
TestCase is: ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel();
CoordSystem coordSystem = new CoordSystem(objectChartDataModel);
DefaultCaret defaultCaret = null;
coordSystem.setBounds(defaultCaret);
int _int = 20;
int _int = 20;
int _int = 1;
BufferedImage bufferedImage = new BufferedImage(_int, _int, _int);
boolean _boolean = false;
coordSystem.setPaintLabels(_boolean);
((BufferedImage) _int).createGraphics();

statement is: org.evosuite.testcase.statements.ArrayStatement@2756db52 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [[D
statement code is: double[][] doubleArray = new double[1][4]
statement is: org.evosuite.testcase.statements.ArrayStatement@cbb1b5db type is: class org.evosuite.testcase.statements.ArrayStatement return type class [D
statement code is: double[] doubleArray = new double[3]
statement is: org.evosuite.testcase.statements.AssignmentStatement@ed30a3f8 type is: class org.evosuite.testcase.statements.AssignmentStatement return type double
statement code is: doubleArray[0] = 548.9736695557
statement is: org.evosuite.testcase.statements.AssignmentStatement@4303a82f type is: class org.evosuite.testcase.statements.AssignmentStatement return type double
statement code is: doubleArray[1] = 20.0
statement is: org.evosuite.testcase.statements.AssignmentStatement@d1ffb00a type is: class org.evosuite.testcase.statements.AssignmentStatement return type double
statement code is: doubleArray[2] = 20.0
statement is: org.evosuite.testcase.statements.ArrayStatement@23e3c774 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [Ljava.lang.String;
statement code is: String[] stringArray = new String[2]
statement is: de.progra.charting.model.EditableChartDataModel([[D[D[Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.progra.charting.model.EditableChartDataModel
statement code is: EditableChartDataModel editableChartDataModel = new EditableChartDataModel(arg0, arg1, arg2)
statement is: de.progra.charting.CoordSystem(Lde/progra/charting/model/ChartDataModel;Ljava/lang/String;Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.progra.charting.CoordSystem
statement code is: CoordSystem coordSystem = new CoordSystem(arg0, "8FNje^W", "8FNje^W")
statement is: org.evosuite.testcase.statements.FieldStatement@3b986a24 type is: class org.evosuite.testcase.statements.FieldStatement return type class de.progra.charting.CoordSystemUtilities
statement code is: CoordSystemUtilities coordSystemUtilities = coordSystem.c
statement is: computeLeftMargin()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int computeLeftMargin = coordSystemUtilities.computeLeftMargin()
test data is: double[][] doubleArray = new double[1][4];
double[] doubleArray = new double[3];
doubleArray[0] = 548.9736695557;
doubleArray[1] = 20.0;
doubleArray[2] = 20.0;
String[] stringArray = new String[2];
EditableChartDataModel editableChartDataModel = new EditableChartDataModel(doubleArray, doubleArray, stringArray);
CoordSystem coordSystem = new CoordSystem(editableChartDataModel, "8FNje^W", "8FNje^W");
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
coordSystemUtilities.computeLeftMargin();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        double[][] doubleArray = new double[1][4];
        double[] doubleArray = new double[3];
        doubleArray[0] = 548.97;// Changed to more descriptive value

        doubleArray[1] = 20.0;
        doubleArray[2] = 20.0;
        String[] stringArray = new String[2];
        stringArray[0] = "Apple";
        stringArray[1] = "Orange";// Changed to more descriptive values

        EditableChartDataModel editableChartDataModel = new EditableChartDataModel(doubleArray, doubleArray, stringArray);
        CoordSystem coordSystem = new CoordSystem(editableChartDataModel, "8FNje^W", "8FNje^W");
        CoordSystemUtilities coordSystemUtilities = coordSystem.c;
        coordSystemUtilities.computeLeftMargin();
    }
}
statement is: double[][] doubleArray = new double[1][4], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [1, 4] Ct is: double[][] doubleArray = new double[1][4] isAssignment: false Array: new double[1][4] Elements: []
lengths: [1, 4] [1, 4]
Their type are: class [[D double[][]
statement is: double[] doubleArray = new double[3], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [3] Ct is: double[][] doubleArray = new double[1][4] isAssignment: false Array: new double[3] Elements: []
lengths: [1, 4] [3]
Dimension: [3] Ct is: double[] doubleArray = new double[3] isAssignment: false Array: new double[3] Elements: []
lengths: [3] [3]
Their type are: class [D double[]
statement is: doubleArray[0] = 548.97// Changed to more descriptive value
, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : doubleArray[0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl double Assignment:548.97 Ct is: doubleArray[0] = 548.97// Changed to more descriptive value

target : doubleArray class spoon.support.reflect.code.CtLiteralImpl
statement is: doubleArray[1] = 20.0, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : doubleArray[1] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl double Assignment:20.0 Ct is: doubleArray[1] = 20.0
target : doubleArray class spoon.support.reflect.code.CtLiteralImpl
statement is: doubleArray[2] = 20.0, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : doubleArray[2] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl double Assignment:20.0 Ct is: doubleArray[2] = 20.0
target : doubleArray class spoon.support.reflect.code.CtLiteralImpl
statement is: String[] stringArray = new String[2], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [2] Ct is: double[][] doubleArray = new double[1][4] isAssignment: false Array: new String[2] Elements: []
lengths: [1, 4] [2]
Dimension: [2] Ct is: double[] doubleArray = new double[3] isAssignment: false Array: new String[2] Elements: []
lengths: [3] [2]
Their type are: class [D String[]
Dimension: [2] Ct is: String[] stringArray = new String[2] isAssignment: false Array: new String[2] Elements: []
lengths: [2] [2]
Their type are: class [Ljava.lang.String; String[]
statement is: stringArray[0] = "Apple", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"Apple" Ct is: stringArray[0] = "Apple"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[1] = "Orange"// Changed to more descriptive values
, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[1] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"Orange" Ct is: stringArray[1] = "Orange"// Changed to more descriptive values

target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: EditableChartDataModel editableChartDataModel = new EditableChartDataModel(doubleArray, doubleArray, stringArray), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: CoordSystem coordSystem = new CoordSystem(editableChartDataModel, "8FNje^W", "8FNje^W"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: CoordSystemUtilities coordSystemUtilities = coordSystem.c, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: coordSystem.c is coordSystem
CtField is: protected de.progra.charting.CoordSystemUtilities de.progra.charting.CoordSystem.c CoordSystemUtilities c
statement is: coordSystemUtilities.computeLeftMargin(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: coordSystemUtilities.computeLeftMargin() target is: coordSystemUtilities method is: computeLeftMargin()
TestCase is: double[][] doubleArray = new double[1][4];
double[] doubleArray = new double[3];
double _double = 548.97;
doubleArray[0] = _double;
double _double = 20.0;
doubleArray[1] = _double;
double _double = 20.0;
doubleArray[2] = _double;
String[] stringArray = new String[2];
EditableChartDataModel editableChartDataModel = new EditableChartDataModel((double[][]) doubleArray, doubleArray, stringArray);
String string = "8FNje^W";
String string = "8FNje^W";
CoordSystem coordSystem = new CoordSystem(editableChartDataModel, string, string);

statement is: de.progra.charting.model.EditableChartDataModel()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.progra.charting.model.EditableChartDataModel
statement code is: EditableChartDataModel editableChartDataModel = new EditableChartDataModel()
statement is: de.progra.charting.CoordSystem(Lde/progra/charting/model/ChartDataModel;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.progra.charting.CoordSystem
statement code is: CoordSystem coordSystem = new CoordSystem(arg0)
statement is: setManualScale(Z)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: editableChartDataModel.setManualScale(true)
statement is: org.evosuite.testcase.statements.FieldStatement@167c7b2e type is: class org.evosuite.testcase.statements.FieldStatement return type class de.progra.charting.CoordSystemUtilities
statement code is: CoordSystemUtilities coordSystemUtilities = coordSystem.c
statement is: computeLeftMargin()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int computeLeftMargin = coordSystemUtilities.computeLeftMargin()
test data is: EditableChartDataModel editableChartDataModel = new EditableChartDataModel();
CoordSystem coordSystem = new CoordSystem(editableChartDataModel);
editableChartDataModel.setManualScale(true);
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
coordSystemUtilities.computeLeftMargin();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Improved test data
        EditableChartDataModel editableChartDataModel = new EditableChartDataModel();
        CoordSystem coordSystem = new CoordSystem(editableChartDataModel);
        editableChartDataModel.setManualScale(true);
        CoordSystemUtilities coordSystemUtilities = coordSystem.computeLeftMargin();
        coordSystemUtilities.setScale(10, 50);// Set a more descriptive scale value

        coordSystemUtilities.setOriginX(-20);// Set a more representative origin X value

        coordSystemUtilities.setOriginY(40);// Set a more representative origin Y value }}

    }
}
statement is: // Improved test data
EditableChartDataModel editableChartDataModel = new EditableChartDataModel(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: CoordSystem coordSystem = new CoordSystem(editableChartDataModel), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: editableChartDataModel.setManualScale(true), class spoon.support.reflect.code.CtInvocationImpl
invocation is: editableChartDataModel.setManualScale(true) target is: editableChartDataModel method is: setManualScale(boolean)
source statement: de.progra.charting.model.EditableChartDataModel()V callee: VariableReference: Statement 0, type de.progra.charting.model.EditableChartDataModelindex is: 0
Matched Method is: setManualScale(Z)V
statement is: CoordSystemUtilities coordSystemUtilities = coordSystem.computeLeftMargin(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: coordSystem.computeLeftMargin() target is: coordSystem method is: computeLeftMargin()
statement is: coordSystemUtilities.setScale(10, 50)// Set a more descriptive scale value
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: coordSystemUtilities.setScale(10, 50)// Set a more descriptive scale value
 target is: coordSystemUtilities method is: setScale(int,int)
statement is: coordSystemUtilities.setOriginX(-20)// Set a more representative origin X value
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: coordSystemUtilities.setOriginX(-20)// Set a more representative origin X value
 target is: coordSystemUtilities method is: setOriginX(int)
statement is: coordSystemUtilities.setOriginY(40)// Set a more representative origin Y value }}
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: coordSystemUtilities.setOriginY(40)// Set a more representative origin Y value }}
 target is: coordSystemUtilities method is: setOriginY(int)
TestCase is: EditableChartDataModel editableChartDataModel = new EditableChartDataModel();
CoordSystem coordSystem = new CoordSystem(editableChartDataModel);
boolean _boolean = true;
editableChartDataModel.setManualScale(_boolean);

statement is: de.progra.charting.model.ObjectChartDataModel()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.progra.charting.model.ObjectChartDataModel
statement code is: ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel()
statement is: javax.swing.text.DefaultCaret()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class javax.swing.text.DefaultCaret
statement code is: DefaultCaret defaultCaret = new DefaultCaret()
statement is: org.evosuite.testcase.statements.FieldStatement@3caa58a1 type is: class org.evosuite.testcase.statements.FieldStatement return type class java.util.Locale
statement code is: Locale locale = Locale.GERMANY
statement is: getInstance(Ljava/util/Locale;)Ljava/text/DecimalFormatSymbols; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.text.DecimalFormatSymbols
statement code is: DecimalFormatSymbols instance = DecimalFormatSymbols.getInstance(arg0)
statement is: java.text.DecimalFormat(Ljava/lang/String;Ljava/text/DecimalFormatSymbols;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.text.DecimalFormat
statement code is: DecimalFormat decimalFormat = new DecimalFormat("0", arg1)
statement is: de.progra.charting.CoordSystem(Lde/progra/charting/model/ChartDataModel;Ljava/text/DecimalFormat;ZZZ)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.progra.charting.CoordSystem
statement code is: CoordSystem coordSystem = new CoordSystem(arg0, arg1, true, false, false)
statement is: setBounds(Ljava/awt/Rectangle;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: coordSystem.setBounds(arg0)
test data is: ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel();
DefaultCaret defaultCaret = new DefaultCaret();
Locale locale = Locale.GERMANY;
DecimalFormatSymbols instance = DecimalFormatSymbols.getInstance(locale);
DecimalFormat decimalFormat = new DecimalFormat("0", instance);
CoordSystem coordSystem = new CoordSystem(objectChartDataModel, decimalFormat, true, false, false);
coordSystem.setBounds(defaultCaret);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel();
        DefaultCaret defaultCaret = new DefaultCaret();
        Locale locale = Locale.US;
        DecimalFormatSymbols instance = DecimalFormatSymbols.getInstance(locale);
        DecimalFormat decimalFormat = new DecimalFormat("0", instance);
        CoordSystem coordSystem = new CoordSystem(objectChartDataModel, decimalFormat, true, false, false);
        coordSystem.setBounds(defaultCaret);
    }
}
statement is: ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: DefaultCaret defaultCaret = new DefaultCaret(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Locale locale = Locale.US, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: Locale.US is Locale
CtField is: public static final java.util.Locale java.util.Locale.GERMANY Locale GERMANY
statement is: DecimalFormatSymbols instance = DecimalFormatSymbols.getInstance(locale), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: DecimalFormatSymbols.getInstance(locale) target is: DecimalFormatSymbols method is: getInstance(Locale)
Matched Method is: getInstance(Ljava/util/Locale;)Ljava/text/DecimalFormatSymbols;
statement is: DecimalFormat decimalFormat = new DecimalFormat("0", instance), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: CoordSystem coordSystem = new CoordSystem(objectChartDataModel, decimalFormat, true, false, false), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: coordSystem.setBounds(defaultCaret), class spoon.support.reflect.code.CtInvocationImpl
invocation is: coordSystem.setBounds(defaultCaret) target is: coordSystem method is: setBounds(DefaultCaret)
source statement: de.progra.charting.CoordSystem(Lde/progra/charting/model/ChartDataModel;Ljava/text/DecimalFormat;ZZZ)V callee: VariableReference: Statement 5, type de.progra.charting.CoordSystemindex is: 9
Matched Method is: setBounds(Ljava/awt/Rectangle;)V
TestCase is: ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel();
DefaultCaret defaultCaret = new DefaultCaret();
Locale locale = Locale.GERMANY;
DecimalFormatSymbols instance = DecimalFormatSymbols.getInstance(locale);
String string = "0";
DecimalFormat decimalFormat = new DecimalFormat(string, instance);
boolean _boolean = true;
boolean _boolean = false;
boolean _boolean = false;
CoordSystem coordSystem = new CoordSystem(objectChartDataModel, decimalFormat, _boolean, _boolean, _boolean);
((CoordSystem) decimalFormat).setBounds(defaultCaret);

statement is: org.evosuite.testcase.statements.ArrayStatement@f49e1456 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [[D
statement code is: double[][] doubleArray = new double[3][7]
statement is: org.evosuite.testcase.statements.ArrayStatement@8a5000c2 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [D
statement code is: double[] doubleArray = new double[1]
statement is: org.evosuite.testcase.statements.AssignmentStatement@b1334a1f type is: class org.evosuite.testcase.statements.AssignmentStatement return type double
statement code is: doubleArray[0] = 1.9000000000000006
statement is: org.evosuite.testcase.statements.AssignmentStatement@1ab2578a type is: class org.evosuite.testcase.statements.AssignmentStatement return type class [D
statement code is: doubleArray[0] = doubleArray
statement is: org.evosuite.testcase.statements.AssignmentStatement@1e037e5a type is: class org.evosuite.testcase.statements.AssignmentStatement return type class [D
statement code is: doubleArray[1] = doubleArray[0]
statement is: org.evosuite.testcase.statements.AssignmentStatement@ca55b5c8 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class [D
statement code is: doubleArray[2] = doubleArray[0]
statement is: org.evosuite.testcase.statements.ArrayStatement@fe9b57bc type is: class org.evosuite.testcase.statements.ArrayStatement return type class [Ljava.lang.String;
statement code is: String[] stringArray = new String[4]
statement is: de.progra.charting.model.DefaultChartDataModel([[D[D[Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.progra.charting.model.DefaultChartDataModel
statement code is: DefaultChartDataModel defaultChartDataModel = new DefaultChartDataModel(arg0, arg0[0], arg2)
statement is: de.progra.charting.CoordSystem(Lde/progra/charting/model/ChartDataModel;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.progra.charting.CoordSystem
statement code is: CoordSystem coordSystem = new CoordSystem(arg0)
statement is: org.evosuite.testcase.statements.FieldStatement@1d13070b type is: class org.evosuite.testcase.statements.FieldStatement return type class de.progra.charting.CoordSystemUtilities
statement code is: CoordSystemUtilities coordSystemUtilities = coordSystem.c
statement is: computeBottomMargin()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int computeBottomMargin = coordSystemUtilities.computeBottomMargin()
test data is: double[][] doubleArray = new double[3][7];
double[] doubleArray = new double[1];
doubleArray[0] = 1.9000000000000006;
doubleArray[0] = doubleArray;
doubleArray[1] = doubleArray[0];
doubleArray[2] = doubleArray[0];
String[] stringArray = new String[4];
DefaultChartDataModel defaultChartDataModel = new DefaultChartDataModel(doubleArray, doubleArray[0], stringArray);
CoordSystem coordSystem = new CoordSystem(defaultChartDataModel);
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
coordSystemUtilities.computeBottomMargin();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        and = $missing$;
    }
}
statement is: and = $missing$, class spoon.support.reflect.code.CtAssignmentImpl
statement is: org.evosuite.testcase.statements.ArrayStatement@ffbedb13 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [[I
statement code is: int[][] intArray = new int[2][5]
statement is: org.evosuite.testcase.statements.ArrayStatement@3f2b0df8 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [Ljava.lang.String;
statement code is: String[] stringArray = new String[6]
statement is: de.progra.charting.model.ObjectChartDataModel([[I[Ljava/lang/Object;[Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.progra.charting.model.ObjectChartDataModel
statement code is: ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel(arg0, arg2, arg2)
statement is: de.progra.charting.CoordSystem(Lde/progra/charting/model/ChartDataModel;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.progra.charting.CoordSystem
statement code is: CoordSystem coordSystem = new CoordSystem(arg0)
statement is: org.evosuite.testcase.statements.FieldStatement@397976c7 type is: class org.evosuite.testcase.statements.FieldStatement return type class de.progra.charting.CoordSystemUtilities
statement code is: CoordSystemUtilities coordSystemUtilities = coordSystem.c
statement is: computeBottomMargin()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int computeBottomMargin = coordSystemUtilities.computeBottomMargin()
test data is: int[][] intArray = new int[2][5];
String[] stringArray = new String[6];
ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel(intArray, stringArray, stringArray);
CoordSystem coordSystem = new CoordSystem(objectChartDataModel);
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
coordSystemUtilities.computeBottomMargin();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        int[][] intArray = new int[2][5];
        String[] stringArray = new String[6];
        ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel(intArray, stringArray, stringArray);
        CoordSystem coordSystem = new CoordSystem(objectChartDataModel);
        CoordSystemUtilities coordSystemUtilities = coordSystem.c;
        coordSystemUtilities.computeBottomMargin();
    }
}
statement is: int[][] intArray = new int[2][5], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [2, 5] Ct is: int[][] intArray = new int[2][5] isAssignment: false Array: new int[2][5] Elements: []
lengths: [2, 5] [2, 5]
Their type are: class [[I int[][]
statement is: String[] stringArray = new String[6], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [6] Ct is: int[][] intArray = new int[2][5] isAssignment: false Array: new String[6] Elements: []
lengths: [2, 5] [6]
Dimension: [6] Ct is: String[] stringArray = new String[6] isAssignment: false Array: new String[6] Elements: []
lengths: [6] [6]
Their type are: class [Ljava.lang.String; String[]
statement is: ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel(intArray, stringArray, stringArray), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: CoordSystem coordSystem = new CoordSystem(objectChartDataModel), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: CoordSystemUtilities coordSystemUtilities = coordSystem.c, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: coordSystem.c is coordSystem
CtField is: protected de.progra.charting.CoordSystemUtilities de.progra.charting.CoordSystem.c CoordSystemUtilities c
statement is: coordSystemUtilities.computeBottomMargin(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: coordSystemUtilities.computeBottomMargin() target is: coordSystemUtilities method is: computeBottomMargin()
TestCase is: int[][] intArray = new int[2][5];
String[] stringArray = new String[6];
ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel(intArray, stringArray, stringArray);
CoordSystem coordSystem = new CoordSystem(objectChartDataModel);

statement is: org.evosuite.testcase.statements.ArrayStatement@4cc23a2b type is: class org.evosuite.testcase.statements.ArrayStatement return type class [[I
statement code is: int[][] intArray = new int[1][4]
statement is: org.evosuite.testcase.statements.ArrayStatement@c54f83d9 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [I
statement code is: int[] intArray = new int[8]
statement is: org.evosuite.testcase.statements.AssignmentStatement@1e3170d0 type is: class org.evosuite.testcase.statements.AssignmentStatement return type int
statement code is: intArray[1] = 50
statement is: org.evosuite.testcase.statements.AssignmentStatement@709c90c5 type is: class org.evosuite.testcase.statements.AssignmentStatement return type int
statement code is: intArray[4] = (-2952)
statement is: org.evosuite.testcase.statements.AssignmentStatement@faf0b6d type is: class org.evosuite.testcase.statements.AssignmentStatement return type class [I
statement code is: intArray[0] = intArray
statement is: org.evosuite.testcase.statements.ArrayStatement@1b9dade7 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [Ljava.lang.String;
statement code is: String[] stringArray = new String[3]
statement is: de.progra.charting.model.ObjectChartDataModel([[I[Ljava/lang/Object;[Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.progra.charting.model.ObjectChartDataModel
statement code is: ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel(arg1, arg1, arg2)
statement is: de.progra.charting.CoordSystem(Lde/progra/charting/model/ChartDataModel;Ljava/lang/String;Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.progra.charting.CoordSystem
statement code is: CoordSystem coordSystem = new CoordSystem(arg0, "de.progra.charting.model.EditableDataSet", "Gx$bDM3.0%(")
statement is: getInnerBounds()Ljava/awt/Rectangle; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.awt.Rectangle
statement code is: Rectangle innerBounds = coordSystem.getInnerBounds()
statement is: setBounds(Ljava/awt/Rectangle;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: coordSystem.setBounds(arg0)
test data is: int[][] intArray = new int[1][4];
int[] intArray = new int[8];
intArray[1] = 50;
intArray[4] = (-2952);
intArray[0] = intArray;
String[] stringArray = new String[3];
ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel(intArray, intArray, stringArray);
CoordSystem coordSystem = new CoordSystem(objectChartDataModel, "de.progra.charting.model.EditableDataSet", "Gx$bDM3.0%(");
Rectangle innerBounds = coordSystem.getInnerBounds();
coordSystem.setBounds(innerBounds);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        int[][] intArray = new int[1][4];
        int[] intArray = new int[8];
        intArray[1] = 50;
        intArray[4] = -2952;
        intArray[0] = intArray;
        String[] stringArray = new String[3];
        ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel(intArray, intArray, stringArray);
        CoordSystem coordSystem = new CoordSystem(objectChartDataModel, "de.progra.charting.model.EditableDataSet", "Gx$bDM3.0%(");
        Rectangle innerBounds = coordSystem.getInnerBounds();
        coordSystem.setBounds(innerBounds);
    }
}
statement is: int[][] intArray = new int[1][4], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [1, 4] Ct is: int[][] intArray = new int[1][4] isAssignment: false Array: new int[1][4] Elements: []
lengths: [1, 4] [1, 4]
Their type are: class [[I int[][]
statement is: int[] intArray = new int[8], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [8] Ct is: int[][] intArray = new int[1][4] isAssignment: false Array: new int[8] Elements: []
lengths: [1, 4] [8]
Dimension: [8] Ct is: int[] intArray = new int[8] isAssignment: false Array: new int[8] Elements: []
lengths: [8] [8]
Their type are: class [I int[]
statement is: intArray[1] = 50, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : intArray[1] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl int Assignment:50 Ct is: intArray[1] = 50
target : intArray class spoon.support.reflect.code.CtLiteralImpl
statement is: intArray[4] = -2952, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : intArray[4] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl int Assignment:-2952 Ct is: intArray[4] = -2952
target : intArray class spoon.support.reflect.code.CtLiteralImpl
statement is: intArray[0] = intArray, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : intArray[0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl int Assignment:intArray Ct is: intArray[0] = intArray
target : intArray class spoon.support.reflect.code.CtLiteralImpl
statement is: String[] stringArray = new String[3], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [3] Ct is: int[][] intArray = new int[1][4] isAssignment: false Array: new String[3] Elements: []
lengths: [1, 4] [3]
Dimension: [3] Ct is: int[] intArray = new int[8] isAssignment: false Array: new String[3] Elements: []
lengths: [8] [3]
Their type are: class [I String[]
Dimension: [3] Ct is: String[] stringArray = new String[3] isAssignment: false Array: new String[3] Elements: []
lengths: [3] [3]
Their type are: class [Ljava.lang.String; String[]
statement is: ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel(intArray, intArray, stringArray), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: CoordSystem coordSystem = new CoordSystem(objectChartDataModel, "de.progra.charting.model.EditableDataSet", "Gx$bDM3.0%("), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Rectangle innerBounds = coordSystem.getInnerBounds(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: coordSystem.getInnerBounds() target is: coordSystem method is: getInnerBounds()
source statement: de.progra.charting.CoordSystem(Lde/progra/charting/model/ChartDataModel;Ljava/lang/String;Ljava/lang/String;)V callee: VariableReference: Statement 7, type de.progra.charting.CoordSystemindex is: 10
Matched Method is: getInnerBounds()Ljava/awt/Rectangle;
statement is: coordSystem.setBounds(innerBounds), class spoon.support.reflect.code.CtInvocationImpl
invocation is: coordSystem.setBounds(innerBounds) target is: coordSystem method is: setBounds(Rectangle)
source statement: de.progra.charting.CoordSystem(Lde/progra/charting/model/ChartDataModel;Ljava/lang/String;Ljava/lang/String;)V callee: VariableReference: Statement 7, type de.progra.charting.CoordSystemindex is: 10
Matched Method is: setBounds(Ljava/awt/Rectangle;)V
TestCase is: int[][] intArray = new int[1][4];
int[] intArray = new int[8];
int _int = 50;
intArray[1] = _int;
intArray[4] = (-2952);
intArray[1] = _int;
String[] stringArray = new String[3];
ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel((int[][]) intArray, (Object[]) intArray, stringArray);
String string = "de.progra.charting.model.EditableDataSet";
String string = "Gx$bDM3.0%(";
CoordSystem coordSystem = new CoordSystem(objectChartDataModel, string, string);
Rectangle innerBounds = ((CoordSystem) objectChartDataModel).getInnerBounds();
((CoordSystem) objectChartDataModel).setBounds(innerBounds);

statement is: org.evosuite.testcase.statements.ArrayStatement@16d258f8 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [[I
statement code is: int[][] intArray = new int[1][5]
statement is: org.evosuite.testcase.statements.ArrayStatement@dc1276d7 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [[I
statement code is: int[][] intArray = new int[1][0]
statement is: org.evosuite.testcase.statements.ArrayStatement@b293450a type is: class org.evosuite.testcase.statements.ArrayStatement return type class [I
statement code is: int[] intArray = new int[1]
statement is: org.evosuite.testcase.statements.AssignmentStatement@416c9337 type is: class org.evosuite.testcase.statements.AssignmentStatement return type int
statement code is: intArray[0] = 2642
statement is: org.evosuite.testcase.statements.AssignmentStatement@be646c6f type is: class org.evosuite.testcase.statements.AssignmentStatement return type class [I
statement code is: intArray[0] = intArray
statement is: org.evosuite.testcase.statements.ArrayStatement@d3cd3320 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [Ljava.lang.String;
statement code is: String[] stringArray = new String[3]
statement is: de.progra.charting.model.ObjectChartDataModel([[I[Ljava/lang/Object;[Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.progra.charting.model.ObjectChartDataModel
statement code is: ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel(arg0, arg1, arg2)
statement is: de.progra.charting.CoordSystem(Lde/progra/charting/model/ChartDataModel;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.progra.charting.CoordSystem
statement code is: CoordSystem coordSystem = new CoordSystem(arg0)
statement is: org.evosuite.testcase.statements.FieldStatement@5159ea5c type is: class org.evosuite.testcase.statements.FieldStatement return type class de.progra.charting.CoordSystemUtilities
statement code is: CoordSystemUtilities coordSystemUtilities = coordSystem.c
statement is: computeXAxisLabelHeight()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int computeXAxisLabelHeight = coordSystemUtilities.computeXAxisLabelHeight()
test data is: int[][] intArray = new int[1][5];
int[][] intArray = new int[1][0];
int[] intArray = new int[1];
intArray[0] = 2642;
intArray[0] = intArray;
String[] stringArray = new String[3];
ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel(intArray, intArray, stringArray);
CoordSystem coordSystem = new CoordSystem(objectChartDataModel);
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
coordSystemUtilities.computeXAxisLabelHeight();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        int[][] intArray = new int[1][5];
        int[][] intArray = new int[1][0];
        int[] intArray = new int[1];
        intArray[0] = 1000000;
        intArray[0] = intArray;
        String[] stringArray = new String[]{ "ABC", "DEF", "XYZ" };
        ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel(1000000, 2000000, stringArray);
        CoordSystem coordSystem = new CoordSystem(objectChartDataModel);
        CoordSystemUtilities coordSystemUtilities = coordSystem.c;
        coordSystemUtilities.computeXAxisLabelHeight(1000000);
    }
}
statement is: int[][] intArray = new int[1][5], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [1, 5] Ct is: int[][] intArray = new int[1][5] isAssignment: false Array: new int[1][5] Elements: []
lengths: [1, 5] [1, 5]
Their type are: class [[I int[][]
statement is: int[][] intArray = new int[1][0], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [1, 0] Ct is: int[][] intArray = new int[1][5] isAssignment: false Array: new int[1][0] Elements: []
lengths: [1, 5] [1, 0]
Their type are: class [[I int[][]
statement is: int[] intArray = new int[1], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [1] Ct is: int[][] intArray = new int[1][5] isAssignment: false Array: new int[1] Elements: []
lengths: [1, 5] [1]
Dimension: [1] Ct is: int[][] intArray = new int[1][0] isAssignment: false Array: new int[1] Elements: []
lengths: [1, 0] [1]
Dimension: [1] Ct is: int[] intArray = new int[1] isAssignment: false Array: new int[1] Elements: []
lengths: [1] [1]
Their type are: class [I int[]
statement is: intArray[0] = 1000000, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : intArray[0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl int Assignment:1000000 Ct is: intArray[0] = 1000000
target : intArray class spoon.support.reflect.code.CtLiteralImpl
statement is: intArray[0] = intArray, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : intArray[0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl int Assignment:intArray Ct is: intArray[0] = intArray
target : intArray class spoon.support.reflect.code.CtLiteralImpl
statement is: String[] stringArray = new String[]{ "ABC", "DEF", "XYZ" }, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [] Ct is: int[][] intArray = new int[1][5] isAssignment: false Array: new String[]{ "ABC", "DEF", "XYZ" } Elements: ["ABC", "DEF", "XYZ"]
lengths: [1, 5] []
Dimension: [] Ct is: int[][] intArray = new int[1][0] isAssignment: false Array: new String[]{ "ABC", "DEF", "XYZ" } Elements: ["ABC", "DEF", "XYZ"]
lengths: [1, 0] []
Dimension: [] Ct is: int[] intArray = new int[1] isAssignment: false Array: new String[]{ "ABC", "DEF", "XYZ" } Elements: ["ABC", "DEF", "XYZ"]
lengths: [1] []
Dimension: [] Ct is: String[] stringArray = new String[3] isAssignment: false Array: new String[]{ "ABC", "DEF", "XYZ" } Elements: ["ABC", "DEF", "XYZ"]
lengths: [3] []
statement is: ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel(1000000, 2000000, stringArray), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: CoordSystem coordSystem = new CoordSystem(objectChartDataModel), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: CoordSystemUtilities coordSystemUtilities = coordSystem.c, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: coordSystem.c is coordSystem
CtField is: protected de.progra.charting.CoordSystemUtilities de.progra.charting.CoordSystem.c CoordSystemUtilities c
statement is: coordSystemUtilities.computeXAxisLabelHeight(1000000), class spoon.support.reflect.code.CtInvocationImpl
invocation is: coordSystemUtilities.computeXAxisLabelHeight(1000000) target is: coordSystemUtilities method is: computeXAxisLabelHeight(int)
TestCase is: int[][] intArray = new int[1][5];
int[][] intArray = new int[1][5];
int[] intArray = new int[1];
int _int = 1000000;
intArray[0] = _int;
stringArray = (String[]) intArray;
int _int = 1000000;
int _int = 2000000;
ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel((int[][]) _int, (Object[]) _int, stringArray);
CoordSystem coordSystem = new CoordSystem(objectChartDataModel);

statement is: org.evosuite.testcase.statements.ArrayStatement@e65a6b3b type is: class org.evosuite.testcase.statements.ArrayStatement return type class [[I
statement code is: int[][] intArray = new int[2][2]
statement is: org.evosuite.testcase.statements.ArrayStatement@d4ee27d9 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [I
statement code is: int[] intArray = new int[3]
statement is: org.evosuite.testcase.statements.AssignmentStatement@ed366197 type is: class org.evosuite.testcase.statements.AssignmentStatement return type int
statement code is: intArray[0] = (-845978407)
statement is: org.evosuite.testcase.statements.AssignmentStatement@55f0a34e type is: class org.evosuite.testcase.statements.AssignmentStatement return type int
statement code is: intArray[1] = (-845978407)
statement is: org.evosuite.testcase.statements.AssignmentStatement@9865d8c0 type is: class org.evosuite.testcase.statements.AssignmentStatement return type int
statement code is: intArray[2] = (-1777227846)
statement is: org.evosuite.testcase.statements.AssignmentStatement@bc29a448 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class [I
statement code is: intArray[0] = intArray
statement is: org.evosuite.testcase.statements.AssignmentStatement@cbfc23b9 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class [I
statement code is: intArray[1] = intArray
statement is: org.evosuite.testcase.statements.ArrayStatement@bcd086b6 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [Ljava.lang.String;
statement code is: String[] stringArray = new String[6]
statement is: de.progra.charting.model.ObjectChartDataModel([[I[Ljava/lang/Object;[Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.progra.charting.model.ObjectChartDataModel
statement code is: ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel(arg1, arg1, arg2)
statement is: de.progra.charting.CoordSystem(Lde/progra/charting/model/ChartDataModel;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.progra.charting.CoordSystem
statement code is: CoordSystem coordSystem = new CoordSystem(arg0)
statement is: org.evosuite.testcase.statements.FieldStatement@64b29896 type is: class org.evosuite.testcase.statements.FieldStatement return type class de.progra.charting.CoordSystemUtilities
statement code is: CoordSystemUtilities coordSystemUtilities = coordSystem.c
statement is: computeXAxisLabelHeight()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int computeXAxisLabelHeight = coordSystemUtilities.computeXAxisLabelHeight()
test data is: int[][] intArray = new int[2][2];
int[] intArray = new int[3];
intArray[0] = (-845978407);
intArray[1] = (-845978407);
intArray[2] = (-1777227846);
intArray[0] = intArray;
intArray[1] = intArray;
String[] stringArray = new String[6];
ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel(intArray, intArray, stringArray);
CoordSystem coordSystem = new CoordSystem(objectChartDataModel);
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
coordSystemUtilities.computeXAxisLabelHeight();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        int[][] intArray = new int[2][2];
        intArray[0] = -845978407;
        intArray[1] = -845978407;
        intArray[2] = -1777227846;
        String[] stringArray = new String[6];
        stringArray[0] = "Hello";
        stringArray[1] = "World";
        stringArray[2] = "This";
        stringArray[3] = "Is";
        stringArray[4] = "A";
        stringArray[5] = "Test";
        ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel(intArray, intArray, stringArray);
        CoordSystem coordSystem = new CoordSystem(objectChartDataModel);
        CoordSystemUtilities coordSystemUtilities = coordSystem.c;
        coordSystemUtilities.computeXAxisLabelHeight();
    }
}
statement is: int[][] intArray = new int[2][2], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [2, 2] Ct is: int[][] intArray = new int[2][2] isAssignment: false Array: new int[2][2] Elements: []
lengths: [2, 2] [2, 2]
Their type are: class [[I int[][]
statement is: intArray[0] = -845978407, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : intArray[0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl int[] Assignment:-845978407 Ct is: intArray[0] = -845978407
target : intArray class spoon.support.reflect.code.CtLiteralImpl
TestCase Could not be added: org.evosuite.testcase.statements.AssignmentStatement@502a607b
statement is: intArray[1] = -845978407, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : intArray[1] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl int[] Assignment:-845978407 Ct is: intArray[1] = -845978407
target : intArray class spoon.support.reflect.code.CtLiteralImpl
TestCase Could not be added: org.evosuite.testcase.statements.AssignmentStatement@f70e08f4
statement is: intArray[2] = -1777227846, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : intArray[2] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl int[] Assignment:-1777227846 Ct is: intArray[2] = -1777227846
target : intArray class spoon.support.reflect.code.CtLiteralImpl
TestCase Could not be added: org.evosuite.testcase.statements.AssignmentStatement@502a607b
statement is: String[] stringArray = new String[6], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [6] Ct is: int[][] intArray = new int[2][2] isAssignment: false Array: new String[6] Elements: []
lengths: [2, 2] [6]
Dimension: [6] Ct is: int[] intArray = new int[3] isAssignment: false Array: new String[6] Elements: []
lengths: [3] [6]
Their type are: class [I String[]
Dimension: [6] Ct is: String[] stringArray = new String[6] isAssignment: false Array: new String[6] Elements: []
lengths: [6] [6]
Their type are: class [Ljava.lang.String; String[]
statement is: stringArray[0] = "Hello", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"Hello" Ct is: stringArray[0] = "Hello"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[1] = "World", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[1] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"World" Ct is: stringArray[1] = "World"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[2] = "This", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[2] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"This" Ct is: stringArray[2] = "This"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[3] = "Is", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[3] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"Is" Ct is: stringArray[3] = "Is"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[4] = "A", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[4] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"A" Ct is: stringArray[4] = "A"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[5] = "Test", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[5] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"Test" Ct is: stringArray[5] = "Test"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel(intArray, intArray, stringArray), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: CoordSystem coordSystem = new CoordSystem(objectChartDataModel), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: CoordSystemUtilities coordSystemUtilities = coordSystem.c, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: coordSystem.c is coordSystem
CtField is: protected de.progra.charting.CoordSystemUtilities de.progra.charting.CoordSystem.c CoordSystemUtilities c
statement is: coordSystemUtilities.computeXAxisLabelHeight(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: coordSystemUtilities.computeXAxisLabelHeight() target is: coordSystemUtilities method is: computeXAxisLabelHeight()
TestCase is: int[][] intArray = new int[2][2];
String[] stringArray = new String[6];
ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel(intArray, intArray, stringArray);
CoordSystem coordSystem = new CoordSystem(objectChartDataModel);

statement is: org.evosuite.testcase.statements.ArrayStatement@b16166a0 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [[I
statement code is: int[][] intArray = new int[5][4]
statement is: org.evosuite.testcase.statements.ArrayStatement@80f8ad64 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [I
statement code is: int[] intArray = new int[3]
statement is: org.evosuite.testcase.statements.AssignmentStatement@9fdf9dbc type is: class org.evosuite.testcase.statements.AssignmentStatement return type int
statement code is: intArray[0] = 20
statement is: org.evosuite.testcase.statements.AssignmentStatement@cee324b2 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class [I
statement code is: intArray[0] = intArray
statement is: org.evosuite.testcase.statements.ArrayStatement@ffe65581 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [D
statement code is: double[] doubleArray = new double[3]
statement is: org.evosuite.testcase.statements.AssignmentStatement@9e06d14 type is: class org.evosuite.testcase.statements.AssignmentStatement return type double
statement code is: doubleArray[0] = (double) 20
statement is: org.evosuite.testcase.statements.AssignmentStatement@1fbe7838 type is: class org.evosuite.testcase.statements.AssignmentStatement return type double
statement code is: doubleArray[1] = 0.3
statement is: org.evosuite.testcase.statements.AssignmentStatement@ca69899f type is: class org.evosuite.testcase.statements.AssignmentStatement return type double
statement code is: doubleArray[2] = (double) 20
statement is: org.evosuite.testcase.statements.ArrayStatement@52ca1725 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [Ljava.lang.String;
statement code is: String[] stringArray = new String[5]
statement is: de.progra.charting.model.EditableChartDataModel([[I[D[Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.progra.charting.model.EditableChartDataModel
statement code is: EditableChartDataModel editableChartDataModel = new EditableChartDataModel(arg0, arg1, arg2)
statement is: de.progra.charting.CoordSystem(Lde/progra/charting/model/ChartDataModel;Ljava/lang/String;Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.progra.charting.CoordSystem
statement code is: CoordSystem coordSystem = new CoordSystem(arg0, " ", "O")
statement is: org.evosuite.testcase.statements.FieldStatement@1ca34ca0 type is: class org.evosuite.testcase.statements.FieldStatement return type class de.progra.charting.CoordSystemUtilities
statement code is: CoordSystemUtilities coordSystemUtilities = coordSystem.c
statement is: computeYAxisLabelWidth()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int computeYAxisLabelWidth = coordSystemUtilities.computeYAxisLabelWidth()
test data is: int[][] intArray = new int[5][4];
int[] intArray = new int[3];
intArray[0] = 20;
intArray[0] = intArray;
double[] doubleArray = new double[3];
doubleArray[0] = (double) 20;
doubleArray[1] = 0.3;
doubleArray[2] = (double) 20;
String[] stringArray = new String[5];
EditableChartDataModel editableChartDataModel = new EditableChartDataModel(intArray, doubleArray, stringArray);
CoordSystem coordSystem = new CoordSystem(editableChartDataModel, " ", "O");
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
coordSystemUtilities.computeYAxisLabelWidth();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        int[][] intArray = new int[5][4];
        // Changed from 20 to a more descriptive value
        intArray[0][0] = 10;
        intArray[0][1] = 20;
        intArray[0][2] = 30;
        intArray[0][3] = 40;
        // Changed from 3 to a more descriptive value
        intArray[1][0] = 5;
        intArray[1][1] = 6;
        intArray[1][2] = 7;
        intArray[1][3] = 8;
        intArray[2][0] = 9;
        intArray[2][1] = 10;
        intArray[2][2] = 11;
        intArray[2][3] = 12;
        // Changed from 5 to a more descriptive value
        int[] intArray = new int[7];
        intArray[0] = 10;
        intArray[1] = 20;
        intArray[2] = 30;
        intArray[3] = 40;
        intArray[4] = 50;
        intArray[5] = 60;
        intArray[6] = 70;
        double[] doubleArray = new double[3];
        // Changed from (double)20 to a more descriptive value
        doubleArray[0] = 10.5;
        doubleArray[1] = 0.3;
        doubleArray[2] = 20.6;
        String[] stringArray = new String[5];
        stringArray[0] = "apple";
        stringArray[1] = "banana";
        stringArray[2] = "orange";
        stringArray[3] = "grape";
        stringArray[4] = "pineapple";
        EditableChartDataModel editableChartDataModel = new EditableChartDataModel(intArray, doubleArray, stringArray);
        CoordSystem coordSystem = new CoordSystem(editableChartDataModel, " ", "O");
        CoordSystemUtilities coordSystemUtilities = coordSystem.c;
        coordSystemUtilities.computeYAxisLabelWidth();
    }
}
statement is: int[][] intArray = new int[5][4], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [5, 4] Ct is: int[][] intArray = new int[5][4] isAssignment: false Array: new int[5][4] Elements: []
lengths: [5, 4] [5, 4]
Their type are: class [[I int[][]
statement is: // Changed from 20 to a more descriptive value
intArray[0][0] = 10, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : intArray[0][0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl int Assignment:10 Ct is: // Changed from 20 to a more descriptive value
intArray[0][0] = 10
target : intArray[0] class spoon.support.reflect.code.CtLiteralImpl
statement is: intArray[0][1] = 20, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : intArray[0][1] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl int Assignment:20 Ct is: intArray[0][1] = 20
target : intArray[0] class spoon.support.reflect.code.CtLiteralImpl
statement is: intArray[0][2] = 30, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : intArray[0][2] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl int Assignment:30 Ct is: intArray[0][2] = 30
target : intArray[0] class spoon.support.reflect.code.CtLiteralImpl
statement is: intArray[0][3] = 40, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : intArray[0][3] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl int Assignment:40 Ct is: intArray[0][3] = 40
target : intArray[0] class spoon.support.reflect.code.CtLiteralImpl
statement is: // Changed from 3 to a more descriptive value
intArray[1][0] = 5, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : intArray[1][0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl int Assignment:5 Ct is: // Changed from 3 to a more descriptive value
intArray[1][0] = 5
target : intArray[1] class spoon.support.reflect.code.CtLiteralImpl
statement is: intArray[1][1] = 6, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : intArray[1][1] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl int Assignment:6 Ct is: intArray[1][1] = 6
target : intArray[1] class spoon.support.reflect.code.CtLiteralImpl
statement is: intArray[1][2] = 7, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : intArray[1][2] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl int Assignment:7 Ct is: intArray[1][2] = 7
target : intArray[1] class spoon.support.reflect.code.CtLiteralImpl
statement is: intArray[1][3] = 8, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : intArray[1][3] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl int Assignment:8 Ct is: intArray[1][3] = 8
target : intArray[1] class spoon.support.reflect.code.CtLiteralImpl
statement is: intArray[2][0] = 9, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : intArray[2][0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl int Assignment:9 Ct is: intArray[2][0] = 9
target : intArray[2] class spoon.support.reflect.code.CtLiteralImpl
statement is: intArray[2][1] = 10, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : intArray[2][1] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl int Assignment:10 Ct is: intArray[2][1] = 10
target : intArray[2] class spoon.support.reflect.code.CtLiteralImpl
statement is: intArray[2][2] = 11, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : intArray[2][2] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl int Assignment:11 Ct is: intArray[2][2] = 11
target : intArray[2] class spoon.support.reflect.code.CtLiteralImpl
statement is: intArray[2][3] = 12, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : intArray[2][3] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl int Assignment:12 Ct is: intArray[2][3] = 12
target : intArray[2] class spoon.support.reflect.code.CtLiteralImpl
statement is: // Changed from 5 to a more descriptive value
int[] intArray = new int[7], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [7] Ct is: int[][] intArray = new int[5][4] isAssignment: false Array: new int[7] Elements: []
lengths: [5, 4] [7]
Dimension: [7] Ct is: int[] intArray = new int[3] isAssignment: false Array: new int[7] Elements: []
lengths: [3] [7]
Their type are: class [I int[]
statement is: intArray[0] = 10, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : intArray[0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl int Assignment:10 Ct is: intArray[0] = 10
target : intArray class spoon.support.reflect.code.CtLiteralImpl
statement is: intArray[1] = 20, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : intArray[1] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl int Assignment:20 Ct is: intArray[1] = 20
target : intArray class spoon.support.reflect.code.CtLiteralImpl
statement is: intArray[2] = 30, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : intArray[2] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl int Assignment:30 Ct is: intArray[2] = 30
target : intArray class spoon.support.reflect.code.CtLiteralImpl
statement is: intArray[3] = 40, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : intArray[3] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl int Assignment:40 Ct is: intArray[3] = 40
target : intArray class spoon.support.reflect.code.CtLiteralImpl
statement is: intArray[4] = 50, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : intArray[4] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl int Assignment:50 Ct is: intArray[4] = 50
target : intArray class spoon.support.reflect.code.CtLiteralImpl
statement is: intArray[5] = 60, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : intArray[5] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl int Assignment:60 Ct is: intArray[5] = 60
target : intArray class spoon.support.reflect.code.CtLiteralImpl
statement is: intArray[6] = 70, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : intArray[6] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl int Assignment:70 Ct is: intArray[6] = 70
target : intArray class spoon.support.reflect.code.CtLiteralImpl
statement is: double[] doubleArray = new double[3], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [3] Ct is: int[][] intArray = new int[5][4] isAssignment: false Array: new double[3] Elements: []
lengths: [5, 4] [3]
Dimension: [3] Ct is: int[] intArray = new int[3] isAssignment: false Array: new double[3] Elements: []
lengths: [3] [3]
Their type are: class [I double[]
Dimension: [3] Ct is: double[] doubleArray = new double[3] isAssignment: false Array: new double[3] Elements: []
lengths: [3] [3]
Their type are: class [D double[]
statement is: // Changed from (double)20 to a more descriptive value
doubleArray[0] = 10.5, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : doubleArray[0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl double Assignment:10.5 Ct is: // Changed from (double)20 to a more descriptive value
doubleArray[0] = 10.5
target : doubleArray class spoon.support.reflect.code.CtLiteralImpl
TestCase Could not be added: org.evosuite.testcase.statements.AssignmentStatement@70569905
statement is: doubleArray[1] = 0.3, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : doubleArray[1] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl double Assignment:0.3 Ct is: doubleArray[1] = 0.3
target : doubleArray class spoon.support.reflect.code.CtLiteralImpl
TestCase Could not be added: org.evosuite.testcase.statements.AssignmentStatement@e707a0ac
statement is: doubleArray[2] = 20.6, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : doubleArray[2] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl double Assignment:20.6 Ct is: doubleArray[2] = 20.6
target : doubleArray class spoon.support.reflect.code.CtLiteralImpl
TestCase Could not be added: org.evosuite.testcase.statements.AssignmentStatement@46aa2691
statement is: String[] stringArray = new String[5], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [5] Ct is: int[][] intArray = new int[5][4] isAssignment: false Array: new String[5] Elements: []
lengths: [5, 4] [5]
Dimension: [5] Ct is: int[] intArray = new int[3] isAssignment: false Array: new String[5] Elements: []
lengths: [3] [5]
Their type are: class [I String[]
Dimension: [5] Ct is: double[] doubleArray = new double[3] isAssignment: false Array: new String[5] Elements: []
lengths: [3] [5]
Their type are: class [D String[]
Dimension: [5] Ct is: String[] stringArray = new String[5] isAssignment: false Array: new String[5] Elements: []
lengths: [5] [5]
Their type are: class [Ljava.lang.String; String[]
statement is: stringArray[0] = "apple", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"apple" Ct is: stringArray[0] = "apple"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[1] = "banana", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[1] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"banana" Ct is: stringArray[1] = "banana"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[2] = "orange", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[2] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"orange" Ct is: stringArray[2] = "orange"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[3] = "grape", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[3] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"grape" Ct is: stringArray[3] = "grape"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[4] = "pineapple", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[4] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"pineapple" Ct is: stringArray[4] = "pineapple"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: EditableChartDataModel editableChartDataModel = new EditableChartDataModel(intArray, doubleArray, stringArray), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: CoordSystem coordSystem = new CoordSystem(editableChartDataModel, " ", "O"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: CoordSystemUtilities coordSystemUtilities = coordSystem.c, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: coordSystem.c is coordSystem
CtField is: protected de.progra.charting.CoordSystemUtilities de.progra.charting.CoordSystem.c CoordSystemUtilities c
statement is: coordSystemUtilities.computeYAxisLabelWidth(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: coordSystemUtilities.computeYAxisLabelWidth() target is: coordSystemUtilities method is: computeYAxisLabelWidth()
* this is vulnerable: double _double = 10.5
* this is vulnerable: double _double = 0.3
* this is vulnerable: double _double = 20.6
TestCase is: int[][] intArray = new int[5][4];
int[] intArray = new int[3];
int _int = 10;
intArray[0] = _int;
int _int = 20;
intArray[0] = _int;
int _int = 30;
intArray[0] = _int;
int _int = 40;
intArray[0] = _int;
int _int = 50;
intArray[0] = _int;
int _int = 60;
intArray[0] = _int;
int _int = 70;
intArray[0] = _int;
double[] doubleArray = new double[3];
double _double = 10.5;
double _double = 0.3;
double _double = 20.6;
String[] stringArray = new String[5];
EditableChartDataModel editableChartDataModel = new EditableChartDataModel((int[][]) intArray, doubleArray, stringArray);
String string = " ";
String string = "O";
CoordSystem coordSystem = new CoordSystem(editableChartDataModel, string, string);

statement is: de.progra.charting.model.EditableChartDataModel()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.progra.charting.model.EditableChartDataModel
statement code is: EditableChartDataModel editableChartDataModel = new EditableChartDataModel()
statement is: de.progra.charting.CoordSystem(Lde/progra/charting/model/ChartDataModel;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.progra.charting.CoordSystem
statement code is: CoordSystem coordSystem = new CoordSystem(arg0)
statement is: org.evosuite.testcase.statements.FieldStatement@252ce786 type is: class org.evosuite.testcase.statements.FieldStatement return type class de.progra.charting.CoordSystemUtilities
statement code is: CoordSystemUtilities coordSystemUtilities = coordSystem.c
statement is: setMaximumColumnValue(D)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: editableChartDataModel.setMaximumColumnValue((-674.7305))
statement is: setManualScale(Z)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: editableChartDataModel.setManualScale(true)
statement is: computeYAxisLabelWidth()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int computeYAxisLabelWidth = coordSystemUtilities.computeYAxisLabelWidth()
test data is: EditableChartDataModel editableChartDataModel = new EditableChartDataModel();
CoordSystem coordSystem = new CoordSystem(editableChartDataModel);
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
editableChartDataModel.setMaximumColumnValue((-674.7305));
editableChartDataModel.setManualScale(true);
coordSystemUtilities.computeYAxisLabelWidth();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        EditableChartDataModel editableChartDataModel = new EditableChartDataModel();
        CoordSystem coordSystem = new CoordSystem(editableChartDataModel);
        CoordSystemUtilities coordSystemUtilities = coordSystem.c;
        editableChartDataModel.setMaximumColumnValue(-674.7305);// Set the maximum value of the column to -674.7305, which is a negative number. This will help in testing the functionality that deals with negative values.

        editableChartDataModel.setManualScale(true);// Set the manual scale to true, as this will ensure that the chart scales according to the user's input, even if it is outside of the normal range.

        coordSystemUtilities.computeYAxisLabelWidth();// This method computes the width of the y-axis labels and sets them appropriately based on the current scale and data. By setting this value, we can ensure that the chart scales correctly and the y-axis labels are visible. }}

    }
}
statement is: EditableChartDataModel editableChartDataModel = new EditableChartDataModel(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: CoordSystem coordSystem = new CoordSystem(editableChartDataModel), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: CoordSystemUtilities coordSystemUtilities = coordSystem.c, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: coordSystem.c is coordSystem
CtField is: protected de.progra.charting.CoordSystemUtilities de.progra.charting.CoordSystem.c CoordSystemUtilities c
statement is: editableChartDataModel.setMaximumColumnValue(-674.7305)// Set the maximum value of the column to -674.7305, which is a negative number. This will help in testing the functionality that deals with negative values.
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: editableChartDataModel.setMaximumColumnValue(-674.7305)// Set the maximum value of the column to -674.7305, which is a negative number. This will help in testing the functionality that deals with negative values.
 target is: editableChartDataModel method is: setMaximumColumnValue(double)
source statement: de.progra.charting.model.EditableChartDataModel()V callee: VariableReference: Statement 0, type de.progra.charting.model.EditableChartDataModelindex is: 0
Matched Method is: setMaximumColumnValue(D)V
i 0 Parameters size() 0 Num of Method Parameters: 1
statement is: editableChartDataModel.setManualScale(true)// Set the manual scale to true, as this will ensure that the chart scales according to the user's input, even if it is outside of the normal range.
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: editableChartDataModel.setManualScale(true)// Set the manual scale to true, as this will ensure that the chart scales according to the user's input, even if it is outside of the normal range.
 target is: editableChartDataModel method is: setManualScale(boolean)
source statement: de.progra.charting.model.EditableChartDataModel()V callee: VariableReference: Statement 0, type de.progra.charting.model.EditableChartDataModelindex is: 0
Matched Method is: setManualScale(Z)V
statement is: coordSystemUtilities.computeYAxisLabelWidth()// This method computes the width of the y-axis labels and sets them appropriately based on the current scale and data. By setting this value, we can ensure that the chart scales correctly and the y-axis labels are visible. }}
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: coordSystemUtilities.computeYAxisLabelWidth()// This method computes the width of the y-axis labels and sets them appropriately based on the current scale and data. By setting this value, we can ensure that the chart scales correctly and the y-axis labels are visible. }}
 target is: coordSystemUtilities method is: computeYAxisLabelWidth()
TestCase is: EditableChartDataModel editableChartDataModel = new EditableChartDataModel();
CoordSystem coordSystem = new CoordSystem(editableChartDataModel);
double _double = null;
editableChartDataModel.setMaximumColumnValue(_double);
boolean _boolean = true;
editableChartDataModel.setManualScale(_boolean);

statement is: de.progra.charting.model.DefaultChartDataModel()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.progra.charting.model.DefaultChartDataModel
statement code is: DefaultChartDataModel defaultChartDataModel = new DefaultChartDataModel()
statement is: de.progra.charting.CoordSystem(Lde/progra/charting/model/ChartDataModel;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.progra.charting.CoordSystem
statement code is: CoordSystem coordSystem = new CoordSystem(arg0)
statement is: org.evosuite.testcase.statements.FieldStatement@63b300df type is: class org.evosuite.testcase.statements.FieldStatement return type class de.progra.charting.CoordSystemUtilities
statement code is: CoordSystemUtilities coordSystemUtilities = coordSystem.c
statement is: setMaximumColumnValue(D)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: defaultChartDataModel.setMaximumColumnValue((-674.7305))
statement is: de.progra.charting.Axis(ILde/progra/charting/model/ChartDataModelConstraints;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.progra.charting.Axis
statement code is: Axis axis = new Axis(0, (ChartDataModelConstraints) null)
statement is: org.evosuite.testcase.statements.AssignmentStatement@ac711d19 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class de.progra.charting.Axis
statement code is: coordSystem.yaxis2 = axis
statement is: setManualScale(Z)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: defaultChartDataModel.setManualScale(true)
statement is: computeYAxisLabelWidth()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int computeYAxisLabelWidth = coordSystemUtilities.computeYAxisLabelWidth()
test data is: DefaultChartDataModel defaultChartDataModel = new DefaultChartDataModel();
CoordSystem coordSystem = new CoordSystem(defaultChartDataModel);
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
defaultChartDataModel.setMaximumColumnValue((-674.7305));
Axis axis = new Axis(0, (ChartDataModelConstraints) null);
coordSystem.yaxis2 = axis;
defaultChartDataModel.setManualScale(true);
coordSystemUtilities.computeYAxisLabelWidth();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        DefaultChartDataModel defaultChartDataModel = new DefaultChartDataModel();
        CoordSystem coordSystem = new CoordSystem(defaultChartDataModel);
        CoordSystemUtilities coordSystemUtilities = coordSystem.c;
        defaultChartDataModel.setMaximumColumnValue(100.0);
        Axis axis = new Axis(-100, ((ChartDataModelConstraints) (null)));
        coordSystem.yaxis2 = axis;
        defaultChartDataModel.setManualScale(true);
        coordSystemUtilities.computeYAxisLabelWidth();
    }
}
statement is: DefaultChartDataModel defaultChartDataModel = new DefaultChartDataModel(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: CoordSystem coordSystem = new CoordSystem(defaultChartDataModel), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: CoordSystemUtilities coordSystemUtilities = coordSystem.c, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: coordSystem.c is coordSystem
CtField is: protected de.progra.charting.CoordSystemUtilities de.progra.charting.CoordSystem.c CoordSystemUtilities c
statement is: defaultChartDataModel.setMaximumColumnValue(100.0), class spoon.support.reflect.code.CtInvocationImpl
invocation is: defaultChartDataModel.setMaximumColumnValue(100.0) target is: defaultChartDataModel method is: setMaximumColumnValue(double)
source statement: de.progra.charting.model.DefaultChartDataModel()V callee: VariableReference: Statement 0, type de.progra.charting.model.DefaultChartDataModelindex is: 0
Matched Method is: setMaximumColumnValue(D)V
statement is: Axis axis = new Axis(-100, ((ChartDataModelConstraints) (null))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: coordSystem.yaxis2 = axis, class spoon.support.reflect.code.CtAssignmentImpl
statement is: defaultChartDataModel.setManualScale(true), class spoon.support.reflect.code.CtInvocationImpl
invocation is: defaultChartDataModel.setManualScale(true) target is: defaultChartDataModel method is: setManualScale(boolean)
source statement: de.progra.charting.model.DefaultChartDataModel()V callee: VariableReference: Statement 0, type de.progra.charting.model.DefaultChartDataModelindex is: 0
Matched Method is: setManualScale(Z)V
statement is: coordSystemUtilities.computeYAxisLabelWidth(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: coordSystemUtilities.computeYAxisLabelWidth() target is: coordSystemUtilities method is: computeYAxisLabelWidth()
TestCase is: DefaultChartDataModel defaultChartDataModel = new DefaultChartDataModel();
CoordSystem coordSystem = new CoordSystem(defaultChartDataModel);
double _double = 100.0;
defaultChartDataModel.setMaximumColumnValue(_double);
Axis axis = new Axis(0, (ChartDataModelConstraints) null);
boolean _boolean = true;
defaultChartDataModel.setManualScale(_boolean);

statement is: org.evosuite.testcase.statements.ArrayStatement@5114432e type is: class org.evosuite.testcase.statements.ArrayStatement return type class [[D
statement code is: double[][] doubleArray = new double[1][5]
statement is: org.evosuite.testcase.statements.ArrayStatement@857a77ed type is: class org.evosuite.testcase.statements.ArrayStatement return type class [D
statement code is: double[] doubleArray = new double[4]
statement is: org.evosuite.testcase.statements.AssignmentStatement@4e2329eb type is: class org.evosuite.testcase.statements.AssignmentStatement return type double
statement code is: doubleArray[0] = 7.0
statement is: org.evosuite.testcase.statements.AssignmentStatement@39aee49c type is: class org.evosuite.testcase.statements.AssignmentStatement return type double
statement code is: doubleArray[1] = 15.0
statement is: org.evosuite.testcase.statements.AssignmentStatement@b769db8b type is: class org.evosuite.testcase.statements.AssignmentStatement return type double
statement code is: doubleArray[2] = 961.0
statement is: org.evosuite.testcase.statements.AssignmentStatement@eadc9b8f type is: class org.evosuite.testcase.statements.AssignmentStatement return type double
statement code is: doubleArray[3] = 3.0
statement is: org.evosuite.testcase.statements.AssignmentStatement@1bb1527a type is: class org.evosuite.testcase.statements.AssignmentStatement return type class [D
statement code is: doubleArray[0] = doubleArray
statement is: org.evosuite.testcase.statements.ArrayStatement@eddfacbc type is: class org.evosuite.testcase.statements.ArrayStatement return type class [Ljava.lang.String;
statement code is: String[] stringArray = new String[5]
statement is: de.progra.charting.model.DefaultChartDataModel([[D[D[Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.progra.charting.model.DefaultChartDataModel
statement code is: DefaultChartDataModel defaultChartDataModel = new DefaultChartDataModel(arg0, arg1, arg2)
statement is: de.progra.charting.CoordSystem(Lde/progra/charting/model/ChartDataModel;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.progra.charting.CoordSystem
statement code is: CoordSystem coordSystem = new CoordSystem(arg0)
statement is: org.evosuite.testcase.statements.FieldStatement@50b95eae type is: class org.evosuite.testcase.statements.FieldStatement return type class de.progra.charting.CoordSystemUtilities
statement code is: CoordSystemUtilities coordSystemUtilities = coordSystem.c
statement is: drawNumericalXAxisTicks(Ljava/awt/Graphics2D;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: coordSystemUtilities.drawNumericalXAxisTicks((Graphics2D) null)
test data is: double[][] doubleArray = new double[1][5];
double[] doubleArray = new double[4];
doubleArray[0] = 7.0;
doubleArray[1] = 15.0;
doubleArray[2] = 961.0;
doubleArray[3] = 3.0;
doubleArray[0] = doubleArray;
String[] stringArray = new String[5];
DefaultChartDataModel defaultChartDataModel = new DefaultChartDataModel(doubleArray, doubleArray, stringArray);
CoordSystem coordSystem = new CoordSystem(defaultChartDataModel);
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
coordSystemUtilities.drawNumericalXAxisTicks((Graphics2D) null);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        double[][] doubleArray = new double[1][5];
        double[] doubleArray = new double[4];
        doubleArray[0] = 3.14;
        doubleArray[1] = 6.28;
        doubleArray[2] = 9.42;
        doubleArray[3] = -12.56;
        doubleArray[0] = doubleArray;
        String[] stringArray = new String[5];
        stringArray[0] = "Q1 2023";
        stringArray[1] = "Q2 2023";
        stringArray[2] = "Q3 2023";
        stringArray[3] = "Q4 2023";
        stringArray[4] = "2023-Q1";
        DefaultChartDataModel defaultChartDataModel = new DefaultChartDataModel(doubleArray, doubleArray, stringArray);
        CoordSystem coordSystem = new CoordSystem(defaultChartDataModel);
        CoordSystemUtilities coordSystemUtilities = coordSystem.c;
        coordSystemUtilities.drawNumericalXAxisTicks(((Graphics2D) (null)));
    }
}
statement is: double[][] doubleArray = new double[1][5], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [1, 5] Ct is: double[][] doubleArray = new double[1][5] isAssignment: false Array: new double[1][5] Elements: []
lengths: [1, 5] [1, 5]
Their type are: class [[D double[][]
statement is: double[] doubleArray = new double[4], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [4] Ct is: double[][] doubleArray = new double[1][5] isAssignment: false Array: new double[4] Elements: []
lengths: [1, 5] [4]
Dimension: [4] Ct is: double[] doubleArray = new double[4] isAssignment: false Array: new double[4] Elements: []
lengths: [4] [4]
Their type are: class [D double[]
statement is: doubleArray[0] = 3.14, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : doubleArray[0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl double Assignment:3.14 Ct is: doubleArray[0] = 3.14
target : doubleArray class spoon.support.reflect.code.CtLiteralImpl
statement is: doubleArray[1] = 6.28, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : doubleArray[1] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl double Assignment:6.28 Ct is: doubleArray[1] = 6.28
target : doubleArray class spoon.support.reflect.code.CtLiteralImpl
statement is: doubleArray[2] = 9.42, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : doubleArray[2] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl double Assignment:9.42 Ct is: doubleArray[2] = 9.42
target : doubleArray class spoon.support.reflect.code.CtLiteralImpl
statement is: doubleArray[3] = -12.56, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : doubleArray[3] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl double Assignment:-12.56 Ct is: doubleArray[3] = -12.56
target : doubleArray class spoon.support.reflect.code.CtLiteralImpl
statement is: doubleArray[0] = doubleArray, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : doubleArray[0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl double Assignment:doubleArray Ct is: doubleArray[0] = doubleArray
target : doubleArray class spoon.support.reflect.code.CtLiteralImpl
statement is: String[] stringArray = new String[5], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [5] Ct is: double[][] doubleArray = new double[1][5] isAssignment: false Array: new String[5] Elements: []
lengths: [1, 5] [5]
Dimension: [5] Ct is: double[] doubleArray = new double[4] isAssignment: false Array: new String[5] Elements: []
lengths: [4] [5]
Their type are: class [D String[]
Dimension: [5] Ct is: String[] stringArray = new String[5] isAssignment: false Array: new String[5] Elements: []
lengths: [5] [5]
Their type are: class [Ljava.lang.String; String[]
statement is: stringArray[0] = "Q1 2023", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"Q1 2023" Ct is: stringArray[0] = "Q1 2023"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[1] = "Q2 2023", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[1] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"Q2 2023" Ct is: stringArray[1] = "Q2 2023"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[2] = "Q3 2023", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[2] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"Q3 2023" Ct is: stringArray[2] = "Q3 2023"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[3] = "Q4 2023", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[3] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"Q4 2023" Ct is: stringArray[3] = "Q4 2023"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[4] = "2023-Q1", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[4] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"2023-Q1" Ct is: stringArray[4] = "2023-Q1"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: DefaultChartDataModel defaultChartDataModel = new DefaultChartDataModel(doubleArray, doubleArray, stringArray), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: CoordSystem coordSystem = new CoordSystem(defaultChartDataModel), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: CoordSystemUtilities coordSystemUtilities = coordSystem.c, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: coordSystem.c is coordSystem
CtField is: protected de.progra.charting.CoordSystemUtilities de.progra.charting.CoordSystem.c CoordSystemUtilities c
statement is: coordSystemUtilities.drawNumericalXAxisTicks(((Graphics2D) (null))), class spoon.support.reflect.code.CtInvocationImpl
invocation is: coordSystemUtilities.drawNumericalXAxisTicks(((Graphics2D) (null))) target is: coordSystemUtilities method is: drawNumericalXAxisTicks(Graphics2D)
TestCase is: double[][] doubleArray = new double[1][5];
double[] doubleArray = new double[4];
double _double = 3.14;
doubleArray[0] = _double;
double _double = 6.28;
doubleArray[1] = _double;
double _double = 9.42;
doubleArray[2] = _double;
doubleArray[3] = 3.0;
doubleArray[0] = (double) doubleArray;
String[] stringArray = new String[5];
DefaultChartDataModel defaultChartDataModel = new DefaultChartDataModel((double[][]) doubleArray, doubleArray, stringArray);
CoordSystem coordSystem = new CoordSystem(defaultChartDataModel);

statement is: org.evosuite.testcase.statements.ArrayStatement@a4b99480 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [[I
statement code is: int[][] intArray = new int[4][9]
statement is: org.evosuite.testcase.statements.ArrayStatement@fb37cc0 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [I
statement code is: int[] intArray = new int[1]
statement is: org.evosuite.testcase.statements.AssignmentStatement@ed48d1ce type is: class org.evosuite.testcase.statements.AssignmentStatement return type int
statement code is: intArray[0] = (-920350135)
statement is: org.evosuite.testcase.statements.AssignmentStatement@f3e52814 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class [I
statement code is: intArray[0] = intArray
statement is: org.evosuite.testcase.statements.AssignmentStatement@a0fa7619 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class [I
statement code is: intArray[1] = intArray
statement is: org.evosuite.testcase.statements.AssignmentStatement@4a489231 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class [I
statement code is: intArray[2] = intArray[1]
statement is: org.evosuite.testcase.statements.AssignmentStatement@5504cd27 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class [I
statement code is: intArray[3] = intArray
statement is: org.evosuite.testcase.statements.ArrayStatement@663b885c type is: class org.evosuite.testcase.statements.ArrayStatement return type class [Ljava.lang.String;
statement code is: String[] stringArray = new String[5]
statement is: de.progra.charting.model.ObjectChartDataModel([[I[Ljava/lang/Object;[Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.progra.charting.model.ObjectChartDataModel
statement code is: ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel(arg1, arg1, arg2)
statement is: de.progra.charting.CoordSystem(Lde/progra/charting/model/ChartDataModel;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.progra.charting.CoordSystem
statement code is: CoordSystem coordSystem = new CoordSystem(arg0)
statement is: org.evosuite.testcase.statements.FieldStatement@45fb3382 type is: class org.evosuite.testcase.statements.FieldStatement return type class de.progra.charting.CoordSystemUtilities
statement code is: CoordSystemUtilities coordSystemUtilities = coordSystem.c
statement is: drawNumericalXAxisTicks(Ljava/awt/Graphics2D;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: coordSystemUtilities.drawNumericalXAxisTicks((Graphics2D) null)
test data is: int[][] intArray = new int[4][9];
int[] intArray = new int[1];
intArray[0] = (-920350135);
intArray[0] = intArray;
intArray[1] = intArray;
intArray[2] = intArray[1];
intArray[3] = intArray;
String[] stringArray = new String[5];
ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel(intArray, intArray, stringArray);
CoordSystem coordSystem = new CoordSystem(objectChartDataModel);
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
coordSystemUtilities.drawNumericalXAxisTicks((Graphics2D) null);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        int[][] intArray = new int[4][9];
        intArray[0] = 10;
        intArray[1] = -5;
        intArray[2] = 30;
        intArray[3] = -8;
        String[] stringArray = new String[5];
        stringArray[0] = "Hello";
        stringArray[1] = "World";
        stringArray[2] = "Test";
        stringArray[3] = "Data";
        ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel(intArray, intArray, stringArray);
        CoordSystem coordSystem = new CoordSystem(objectChartDataModel);
        CoordSystemUtilities coordSystemUtilities = coordSystem.c;
        coordSystemUtilities.drawNumericalXAxisTicks(((Graphics2D) (null)));
    }
}
statement is: int[][] intArray = new int[4][9], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [4, 9] Ct is: int[][] intArray = new int[4][9] isAssignment: false Array: new int[4][9] Elements: []
lengths: [4, 9] [4, 9]
Their type are: class [[I int[][]
statement is: intArray[0] = 10, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : intArray[0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl int[] Assignment:10 Ct is: intArray[0] = 10
target : intArray class spoon.support.reflect.code.CtLiteralImpl
statement is: intArray[1] = -5, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : intArray[1] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl int[] Assignment:-5 Ct is: intArray[1] = -5
target : intArray class spoon.support.reflect.code.CtLiteralImpl
statement is: intArray[2] = 30, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : intArray[2] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl int[] Assignment:30 Ct is: intArray[2] = 30
target : intArray class spoon.support.reflect.code.CtLiteralImpl
statement is: intArray[3] = -8, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : intArray[3] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl int[] Assignment:-8 Ct is: intArray[3] = -8
target : intArray class spoon.support.reflect.code.CtLiteralImpl
statement is: String[] stringArray = new String[5], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [5] Ct is: int[][] intArray = new int[4][9] isAssignment: false Array: new String[5] Elements: []
lengths: [4, 9] [5]
Dimension: [5] Ct is: int[] intArray = new int[1] isAssignment: false Array: new String[5] Elements: []
lengths: [1] [5]
Their type are: class [I String[]
Dimension: [5] Ct is: String[] stringArray = new String[5] isAssignment: false Array: new String[5] Elements: []
lengths: [5] [5]
Their type are: class [Ljava.lang.String; String[]
statement is: stringArray[0] = "Hello", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"Hello" Ct is: stringArray[0] = "Hello"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[1] = "World", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[1] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"World" Ct is: stringArray[1] = "World"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[2] = "Test", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[2] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"Test" Ct is: stringArray[2] = "Test"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[3] = "Data", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[3] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"Data" Ct is: stringArray[3] = "Data"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel(intArray, intArray, stringArray), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: CoordSystem coordSystem = new CoordSystem(objectChartDataModel), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: CoordSystemUtilities coordSystemUtilities = coordSystem.c, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: coordSystem.c is coordSystem
CtField is: protected de.progra.charting.CoordSystemUtilities de.progra.charting.CoordSystem.c CoordSystemUtilities c
statement is: coordSystemUtilities.drawNumericalXAxisTicks(((Graphics2D) (null))), class spoon.support.reflect.code.CtInvocationImpl
invocation is: coordSystemUtilities.drawNumericalXAxisTicks(((Graphics2D) (null))) target is: coordSystemUtilities method is: drawNumericalXAxisTicks(Graphics2D)
TestCase is: int[][] intArray = new int[4][9];
int[] intArray = 10;
intArray[0] = (int[]) _int;
intArray[1] = intArray;
int _int = 30;
intArray[2] = (int[]) _int;
intArray[3] = intArray;
String[] stringArray = new String[5];
ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel(intArray, intArray, stringArray);
CoordSystem coordSystem = new CoordSystem(objectChartDataModel);

statement is: de.progra.charting.model.ObjectChartDataModel()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.progra.charting.model.ObjectChartDataModel
statement code is: ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel()
statement is: de.progra.charting.CoordSystem(Lde/progra/charting/model/ChartDataModel;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.progra.charting.CoordSystem
statement code is: CoordSystem coordSystem = new CoordSystem(arg0)
statement is: javax.swing.JInternalFrame()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class javax.swing.JInternalFrame
statement code is: JInternalFrame jInternalFrame = new JInternalFrame()
statement is: getNormalBounds()Ljava/awt/Rectangle; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.awt.Rectangle
statement code is: Rectangle normalBounds = jInternalFrame.getNormalBounds()
statement is: setBounds(Ljava/awt/Rectangle;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: coordSystem.setBounds(arg0)
statement is: org.evosuite.testcase.statements.FieldStatement@7449a176 type is: class org.evosuite.testcase.statements.FieldStatement return type class de.progra.charting.CoordSystemUtilities
statement code is: CoordSystemUtilities coordSystemUtilities = coordSystem.c
statement is: java.awt.image.BufferedImage(III)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.awt.image.BufferedImage
statement code is: BufferedImage bufferedImage = new BufferedImage(20, 20, 1)
statement is: createGraphics()Ljava/awt/Graphics2D; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.awt.Graphics2D
statement code is: Graphics2D createGraphics = bufferedImage.createGraphics()
statement is: drawNumericalXAxisTicks(Ljava/awt/Graphics2D;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: coordSystemUtilities.drawNumericalXAxisTicks(arg0)
test data is: ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel();
CoordSystem coordSystem = new CoordSystem(objectChartDataModel);
JInternalFrame jInternalFrame = new JInternalFrame();
Rectangle normalBounds = jInternalFrame.getNormalBounds();
coordSystem.setBounds(normalBounds);
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
BufferedImage bufferedImage = new BufferedImage(20, 20, 1);
Graphics2D createGraphics = bufferedImage.createGraphics();
coordSystemUtilities.drawNumericalXAxisTicks(createGraphics);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel();
        CoordSystem coordSystem = new CoordSystem(objectChartDataModel);
        JInternalFrame jInternalFrame = new JInternalFrame();
        Rectangle normalBounds = new Rectangle(100, 100, 200, 200);// more descriptive and representative example of a rectangle's bounds

        coordSystem.setBounds(normalBounds);
        CoordSystemUtilities coordSystemUtilities = coordSystem.c;
        BufferedImage bufferedImage = new BufferedImage(200, 200, 1);// more descriptive and representative example of an image size

        Graphics2D createGraphics = bufferedImage.createGraphics();
        coordSystemUtilities.drawNumericalXAxisTicks(createGraphics);
    }
}
statement is: ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: CoordSystem coordSystem = new CoordSystem(objectChartDataModel), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JInternalFrame jInternalFrame = new JInternalFrame(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Rectangle normalBounds = new Rectangle(100, 100, 200, 200)// more descriptive and representative example of a rectangle's bounds
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: coordSystem.setBounds(normalBounds), class spoon.support.reflect.code.CtInvocationImpl
invocation is: coordSystem.setBounds(normalBounds) target is: coordSystem method is: setBounds(Rectangle)
source statement: de.progra.charting.CoordSystem(Lde/progra/charting/model/ChartDataModel;)V callee: VariableReference: Statement 1, type de.progra.charting.CoordSystemindex is: 1
Matched Method is: setBounds(Ljava/awt/Rectangle;)V
i 0 Parameters size() 0 Num of Method Parameters: 1
statement is: CoordSystemUtilities coordSystemUtilities = coordSystem.c, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: coordSystem.c is coordSystem
CtField is: protected de.progra.charting.CoordSystemUtilities de.progra.charting.CoordSystem.c CoordSystemUtilities c
statement is: BufferedImage bufferedImage = new BufferedImage(200, 200, 1)// more descriptive and representative example of an image size
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Graphics2D createGraphics = bufferedImage.createGraphics(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: bufferedImage.createGraphics() target is: bufferedImage method is: createGraphics()
source statement: java.awt.image.BufferedImage(III)V callee: VariableReference: Statement 6, type java.awt.image.BufferedImageindex is: 8
Matched Method is: createGraphics()Ljava/awt/Graphics2D;
statement is: coordSystemUtilities.drawNumericalXAxisTicks(createGraphics), class spoon.support.reflect.code.CtInvocationImpl
invocation is: coordSystemUtilities.drawNumericalXAxisTicks(createGraphics) target is: coordSystemUtilities method is: drawNumericalXAxisTicks(Graphics2D)
TestCase is: ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel();
CoordSystem coordSystem = new CoordSystem(objectChartDataModel);
JInternalFrame jInternalFrame = new JInternalFrame();
Rectangle rectangle = null;
coordSystem.setBounds(rectangle);
int _int = 200;
int _int = 200;
int _int = 1;
BufferedImage bufferedImage = new BufferedImage(_int, _int, _int);
((BufferedImage) _int).createGraphics();

statement is: de.progra.charting.model.ObjectChartDataModel()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.progra.charting.model.ObjectChartDataModel
statement code is: ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel()
statement is: de.progra.charting.CoordSystem(Lde/progra/charting/model/ChartDataModel;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.progra.charting.CoordSystem
statement code is: CoordSystem coordSystem = new CoordSystem(arg0)
statement is: javax.swing.JInternalFrame()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class javax.swing.JInternalFrame
statement code is: JInternalFrame jInternalFrame = new JInternalFrame()
statement is: getNormalBounds()Ljava/awt/Rectangle; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.awt.Rectangle
statement code is: Rectangle normalBounds = jInternalFrame.getNormalBounds()
statement is: setBounds(Ljava/awt/Rectangle;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: coordSystem.setBounds(arg0)
statement is: setPaintLabels(Z)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: coordSystem.setPaintLabels(false)
statement is: org.evosuite.testcase.statements.FieldStatement@2509fad5 type is: class org.evosuite.testcase.statements.FieldStatement return type class de.progra.charting.CoordSystemUtilities
statement code is: CoordSystemUtilities coordSystemUtilities = coordSystem.c
statement is: java.awt.image.BufferedImage(III)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.awt.image.BufferedImage
statement code is: BufferedImage bufferedImage = new BufferedImage(20, 20, 1)
statement is: createGraphics()Ljava/awt/Graphics2D; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.awt.Graphics2D
statement code is: Graphics2D createGraphics = bufferedImage.createGraphics()
statement is: drawNumericalXAxisTicks(Ljava/awt/Graphics2D;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: coordSystemUtilities.drawNumericalXAxisTicks(arg0)
test data is: ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel();
CoordSystem coordSystem = new CoordSystem(objectChartDataModel);
JInternalFrame jInternalFrame = new JInternalFrame();
Rectangle normalBounds = jInternalFrame.getNormalBounds();
coordSystem.setBounds(normalBounds);
coordSystem.setPaintLabels(false);
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
BufferedImage bufferedImage = new BufferedImage(20, 20, 1);
Graphics2D createGraphics = bufferedImage.createGraphics();
coordSystemUtilities.drawNumericalXAxisTicks(createGraphics);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel();
        CoordSystem coordSystem = new CoordSystem(objectChartDataModel);
        JInternalFrame jInternalFrame = new JInternalFrame("My Internal Frame", true, false, 0, 0, 500, 300);
        Rectangle normalBounds = new Rectangle(100, 100, 400, 200);
        coordSystem.setBounds(normalBounds);
        coordSystem.setPaintLabels(false);
        CoordSystemUtilities coordSystemUtilities = coordSystem.c;
        BufferedImage bufferedImage = new BufferedImage(500, 300, 1);
        Graphics2D createGraphics = bufferedImage.createGraphics();
        coordSystemUtilities.drawNumericalXAxisTicks(createGraphics);
    }
}
statement is: ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: CoordSystem coordSystem = new CoordSystem(objectChartDataModel), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JInternalFrame jInternalFrame = new JInternalFrame("My Internal Frame", true, false, 0, 0, 500, 300), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Rectangle normalBounds = new Rectangle(100, 100, 400, 200), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: coordSystem.setBounds(normalBounds), class spoon.support.reflect.code.CtInvocationImpl
invocation is: coordSystem.setBounds(normalBounds) target is: coordSystem method is: setBounds(Rectangle)
source statement: de.progra.charting.CoordSystem(Lde/progra/charting/model/ChartDataModel;)V callee: VariableReference: Statement 1, type de.progra.charting.CoordSystemindex is: 1
Matched Method is: setBounds(Ljava/awt/Rectangle;)V
i 0 Parameters size() 0 Num of Method Parameters: 1
statement is: coordSystem.setPaintLabels(false), class spoon.support.reflect.code.CtInvocationImpl
invocation is: coordSystem.setPaintLabels(false) target is: coordSystem method is: setPaintLabels(boolean)
source statement: de.progra.charting.CoordSystem(Lde/progra/charting/model/ChartDataModel;)V callee: VariableReference: Statement 1, type de.progra.charting.CoordSystemindex is: 1
Matched Method is: setPaintLabels(Z)V
statement is: CoordSystemUtilities coordSystemUtilities = coordSystem.c, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: coordSystem.c is coordSystem
CtField is: protected de.progra.charting.CoordSystemUtilities de.progra.charting.CoordSystem.c CoordSystemUtilities c
statement is: BufferedImage bufferedImage = new BufferedImage(500, 300, 1), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Graphics2D createGraphics = bufferedImage.createGraphics(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: bufferedImage.createGraphics() target is: bufferedImage method is: createGraphics()
source statement: java.awt.image.BufferedImage(III)V callee: VariableReference: Statement 7, type java.awt.image.BufferedImageindex is: 9
Matched Method is: createGraphics()Ljava/awt/Graphics2D;
statement is: coordSystemUtilities.drawNumericalXAxisTicks(createGraphics), class spoon.support.reflect.code.CtInvocationImpl
invocation is: coordSystemUtilities.drawNumericalXAxisTicks(createGraphics) target is: coordSystemUtilities method is: drawNumericalXAxisTicks(Graphics2D)
TestCase is: ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel();
CoordSystem coordSystem = new CoordSystem(objectChartDataModel);
Rectangle rectangle = null;
coordSystem.setBounds(rectangle);
boolean _boolean = false;
coordSystem.setPaintLabels(_boolean);
int _int = 500;
int _int = 300;
int _int = 1;
BufferedImage bufferedImage = new BufferedImage(_int, _int, _int);
((BufferedImage) _int).createGraphics();

statement is: org.evosuite.testcase.statements.ArrayStatement@940926b6 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [Ljava.lang.String;
statement code is: String[] stringArray = new String[6]
statement is: org.evosuite.testcase.statements.ArrayStatement@82981d40 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [[D
statement code is: double[][] doubleArray = new double[3][0]
statement is: org.evosuite.testcase.statements.ArrayStatement@12546751 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [D
statement code is: double[] doubleArray = new double[1]
statement is: org.evosuite.testcase.statements.AssignmentStatement@3e226131 type is: class org.evosuite.testcase.statements.AssignmentStatement return type double
statement code is: doubleArray[0] = 11.0
statement is: org.evosuite.testcase.statements.AssignmentStatement@30d4280e type is: class org.evosuite.testcase.statements.AssignmentStatement return type class [D
statement code is: doubleArray[0] = doubleArray
statement is: org.evosuite.testcase.statements.AssignmentStatement@990c7367 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class [D
statement code is: doubleArray[1] = doubleArray
statement is: org.evosuite.testcase.statements.AssignmentStatement@8fadb736 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class [D
statement code is: doubleArray[2] = doubleArray[0]
statement is: de.progra.charting.model.ObjectChartDataModel([[D[Ljava/lang/Object;[Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.progra.charting.model.ObjectChartDataModel
statement code is: ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel(arg1, arg1, arg2)
statement is: de.progra.charting.CoordSystem(Lde/progra/charting/model/ChartDataModel;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.progra.charting.CoordSystem
statement code is: CoordSystem coordSystem = new CoordSystem(arg0)
statement is: org.evosuite.testcase.statements.FieldStatement@f167003 type is: class org.evosuite.testcase.statements.FieldStatement return type class de.progra.charting.CoordSystemUtilities
statement code is: CoordSystemUtilities coordSystemUtilities = coordSystem.c
statement is: drawXAxisTicks(Ljava/awt/Graphics2D;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: coordSystemUtilities.drawXAxisTicks((Graphics2D) null)
test data is: String[] stringArray = new String[6];
double[][] doubleArray = new double[3][0];
double[] doubleArray = new double[1];
doubleArray[0] = 11.0;
doubleArray[0] = doubleArray;
doubleArray[1] = doubleArray;
doubleArray[2] = doubleArray[0];
ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel(doubleArray, doubleArray, stringArray);
CoordSystem coordSystem = new CoordSystem(objectChartDataModel);
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
coordSystemUtilities.drawXAxisTicks((Graphics2D) null);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        String[] stringArray = new String[]{ "Alpha", "Beta", "Gamma", "Delta", "Epsilon" };
        double[] doubleArray1 = new double[]{ 5.14, 7.28, 9.42, 10.56, 12.78 };
        double[] doubleArray2 = new double[]{ 0.5, 1.0, 2.0, 3.0, 4.0 };
        ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel(doubleArray1, doubleArray2, stringArray);
        CoordSystem coordSystem = new CoordSystem(objectChartDataModel);
        CoordSystemUtilities coordSystemUtilities = coordSystem.c;
        coordSystemUtilities.drawXAxisTicks(((Graphics2D) (null)));
    }
}
statement is: String[] stringArray = new String[]{ "Alpha", "Beta", "Gamma", "Delta", "Epsilon" }, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [] Ct is: String[] stringArray = new String[6] isAssignment: false Array: new String[]{ "Alpha", "Beta", "Gamma", "Delta", "Epsilon" } Elements: ["Alpha", "Beta", "Gamma", "Delta", "Epsilon"]
lengths: [6] []
Dimension: [] Ct is: double[][] doubleArray = new double[3][0] isAssignment: false Array: new String[]{ "Alpha", "Beta", "Gamma", "Delta", "Epsilon" } Elements: ["Alpha", "Beta", "Gamma", "Delta", "Epsilon"]
lengths: [3, 0] []
Dimension: [] Ct is: double[] doubleArray = new double[1] isAssignment: false Array: new String[]{ "Alpha", "Beta", "Gamma", "Delta", "Epsilon" } Elements: ["Alpha", "Beta", "Gamma", "Delta", "Epsilon"]
lengths: [1] []
statement is: double[] doubleArray1 = new double[]{ 5.14, 7.28, 9.42, 10.56, 12.78 }, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [] Ct is: String[] stringArray = new String[6] isAssignment: false Array: new double[]{ 5.14, 7.28, 9.42, 10.56, 12.78 } Elements: [5.14, 7.28, 9.42, 10.56, 12.78]
lengths: [6] []
Dimension: [] Ct is: double[][] doubleArray = new double[3][0] isAssignment: false Array: new double[]{ 5.14, 7.28, 9.42, 10.56, 12.78 } Elements: [5.14, 7.28, 9.42, 10.56, 12.78]
lengths: [3, 0] []
Dimension: [] Ct is: double[] doubleArray = new double[1] isAssignment: false Array: new double[]{ 5.14, 7.28, 9.42, 10.56, 12.78 } Elements: [5.14, 7.28, 9.42, 10.56, 12.78]
lengths: [1] []
statement is: double[] doubleArray2 = new double[]{ 0.5, 1.0, 2.0, 3.0, 4.0 }, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [] Ct is: String[] stringArray = new String[6] isAssignment: false Array: new double[]{ 0.5, 1.0, 2.0, 3.0, 4.0 } Elements: [0.5, 1.0, 2.0, 3.0, 4.0]
lengths: [6] []
Dimension: [] Ct is: double[][] doubleArray = new double[3][0] isAssignment: false Array: new double[]{ 0.5, 1.0, 2.0, 3.0, 4.0 } Elements: [0.5, 1.0, 2.0, 3.0, 4.0]
lengths: [3, 0] []
Dimension: [] Ct is: double[] doubleArray = new double[1] isAssignment: false Array: new double[]{ 0.5, 1.0, 2.0, 3.0, 4.0 } Elements: [0.5, 1.0, 2.0, 3.0, 4.0]
lengths: [1] []
statement is: ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel(doubleArray1, doubleArray2, stringArray), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: de.progra.charting.model.ObjectChartDataModel([[D[Ljava/lang/Object;[Ljava/lang/String;)V
statement is: CoordSystem coordSystem = new CoordSystem(objectChartDataModel), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: de.progra.charting.CoordSystem(Lde/progra/charting/model/ChartDataModel;)V
statement is: CoordSystemUtilities coordSystemUtilities = coordSystem.c, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: coordSystem.c is coordSystem
CtField is: protected de.progra.charting.CoordSystemUtilities de.progra.charting.CoordSystem.c CoordSystemUtilities c
statement is: coordSystemUtilities.drawXAxisTicks(((Graphics2D) (null))), class spoon.support.reflect.code.CtInvocationImpl
invocation is: coordSystemUtilities.drawXAxisTicks(((Graphics2D) (null))) target is: coordSystemUtilities method is: drawXAxisTicks(Graphics2D)
statement is: org.evosuite.testcase.statements.ArrayStatement@b0d84a98 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [[I
statement code is: int[][] intArray = new int[4][9]
statement is: org.evosuite.testcase.statements.ArrayStatement@5a7bb69 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [I
statement code is: int[] intArray = new int[1]
statement is: org.evosuite.testcase.statements.AssignmentStatement@2a426684 type is: class org.evosuite.testcase.statements.AssignmentStatement return type int
statement code is: intArray[0] = (-920350135)
statement is: org.evosuite.testcase.statements.AssignmentStatement@2491715e type is: class org.evosuite.testcase.statements.AssignmentStatement return type class [I
statement code is: intArray[0] = intArray
statement is: org.evosuite.testcase.statements.AssignmentStatement@57622ad9 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class [I
statement code is: intArray[1] = intArray[0]
statement is: org.evosuite.testcase.statements.AssignmentStatement@eb0b1cb3 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class [I
statement code is: intArray[2] = intArray[1]
statement is: org.evosuite.testcase.statements.AssignmentStatement@4910b619 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class [I
statement code is: intArray[3] = intArray[0]
statement is: org.evosuite.testcase.statements.ArrayStatement@bf06d9bb type is: class org.evosuite.testcase.statements.ArrayStatement return type class [Ljava.lang.String;
statement code is: String[] stringArray = new String[5]
statement is: de.progra.charting.model.ObjectChartDataModel([[I[Ljava/lang/Object;[Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.progra.charting.model.ObjectChartDataModel
statement code is: ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel(arg1, arg1, arg2)
statement is: de.progra.charting.CoordSystem(Lde/progra/charting/model/ChartDataModel;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.progra.charting.CoordSystem
statement code is: CoordSystem coordSystem = new CoordSystem(arg0)
statement is: org.evosuite.testcase.statements.FieldStatement@72689b38 type is: class org.evosuite.testcase.statements.FieldStatement return type class de.progra.charting.CoordSystemUtilities
statement code is: CoordSystemUtilities coordSystemUtilities = coordSystem.c
statement is: drawXAxisTicks(Ljava/awt/Graphics2D;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: coordSystemUtilities.drawXAxisTicks((Graphics2D) null)
test data is: int[][] intArray = new int[4][9];
int[] intArray = new int[1];
intArray[0] = (-920350135);
intArray[0] = intArray;
intArray[1] = intArray[0];
intArray[2] = intArray[1];
intArray[3] = intArray[0];
String[] stringArray = new String[5];
ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel(intArray, intArray, stringArray);
CoordSystem coordSystem = new CoordSystem(objectChartDataModel);
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
coordSystemUtilities.drawXAxisTicks((Graphics2D) null);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        int[][] intArray = new int[4][9];
        int[] intArray = new int[2];
        intArray[0] = 987654321;
        intArray[1] = -87654321;
        intArray[2] = intArray[0];
        intArray[3] = intArray[1];
        String[] stringArray = new String[5];
        stringArray[0] = "hello";
        stringArray[1] = "world";
        stringArray[2] = "foo";
        stringArray[3] = "bar";
        stringArray[4] = "baz";
        ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel(intArray, intArray, stringArray);
        CoordSystem coordSystem = new CoordSystem(objectChartDataModel);
        CoordSystemUtilities coordSystemUtilities = coordSystem.c;
        coordSystemUtilities.drawXAxisTicks(((Graphics2D) (null)));
    }
}
statement is: int[][] intArray = new int[4][9], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [4, 9] Ct is: int[][] intArray = new int[4][9] isAssignment: false Array: new int[4][9] Elements: []
lengths: [4, 9] [4, 9]
Their type are: class [[I int[][]
statement is: int[] intArray = new int[2], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [2] Ct is: int[][] intArray = new int[4][9] isAssignment: false Array: new int[2] Elements: []
lengths: [4, 9] [2]
Dimension: [2] Ct is: int[] intArray = new int[1] isAssignment: false Array: new int[2] Elements: []
lengths: [1] [2]
Their type are: class [I int[]
statement is: intArray[0] = 987654321, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : intArray[0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl int Assignment:987654321 Ct is: intArray[0] = 987654321
target : intArray class spoon.support.reflect.code.CtLiteralImpl
statement is: intArray[1] = -87654321, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : intArray[1] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl int Assignment:-87654321 Ct is: intArray[1] = -87654321
target : intArray class spoon.support.reflect.code.CtLiteralImpl
statement is: intArray[2] = intArray[0], class spoon.support.reflect.code.CtAssignmentImpl
Assigned : intArray[2] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl int Assignment:intArray[0] Ct is: intArray[2] = intArray[0]
target : intArray class spoon.support.reflect.code.CtLiteralImpl
statement is: intArray[3] = intArray[1], class spoon.support.reflect.code.CtAssignmentImpl
Assigned : intArray[3] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl int Assignment:intArray[1] Ct is: intArray[3] = intArray[1]
target : intArray class spoon.support.reflect.code.CtLiteralImpl
statement is: String[] stringArray = new String[5], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [5] Ct is: int[][] intArray = new int[4][9] isAssignment: false Array: new String[5] Elements: []
lengths: [4, 9] [5]
Dimension: [5] Ct is: int[] intArray = new int[1] isAssignment: false Array: new String[5] Elements: []
lengths: [1] [5]
Their type are: class [I String[]
Dimension: [5] Ct is: String[] stringArray = new String[5] isAssignment: false Array: new String[5] Elements: []
lengths: [5] [5]
Their type are: class [Ljava.lang.String; String[]
statement is: stringArray[0] = "hello", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"hello" Ct is: stringArray[0] = "hello"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[1] = "world", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[1] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"world" Ct is: stringArray[1] = "world"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[2] = "foo", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[2] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"foo" Ct is: stringArray[2] = "foo"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[3] = "bar", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[3] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"bar" Ct is: stringArray[3] = "bar"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[4] = "baz", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[4] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"baz" Ct is: stringArray[4] = "baz"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel(intArray, intArray, stringArray), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: CoordSystem coordSystem = new CoordSystem(objectChartDataModel), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: CoordSystemUtilities coordSystemUtilities = coordSystem.c, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: coordSystem.c is coordSystem
CtField is: protected de.progra.charting.CoordSystemUtilities de.progra.charting.CoordSystem.c CoordSystemUtilities c
statement is: coordSystemUtilities.drawXAxisTicks(((Graphics2D) (null))), class spoon.support.reflect.code.CtInvocationImpl
invocation is: coordSystemUtilities.drawXAxisTicks(((Graphics2D) (null))) target is: coordSystemUtilities method is: drawXAxisTicks(Graphics2D)
TestCase is: int[][] intArray = new int[4][9];
int[] intArray = new int[1];
int _int = 987654321;
intArray[0] = _int;
intArray[0] = _int;
intArray[0] = _int;
intArray[0] = _int;
String[] stringArray = new String[5];
ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel((int[][]) intArray, (Object[]) intArray, stringArray);
CoordSystem coordSystem = new CoordSystem(objectChartDataModel);

statement is: de.progra.charting.model.ObjectChartDataModel()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.progra.charting.model.ObjectChartDataModel
statement code is: ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel()
statement is: de.progra.charting.CoordSystem(Lde/progra/charting/model/ChartDataModel;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.progra.charting.CoordSystem
statement code is: CoordSystem coordSystem = new CoordSystem(arg0)
statement is: javax.swing.text.DefaultCaret()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class javax.swing.text.DefaultCaret
statement code is: DefaultCaret defaultCaret = new DefaultCaret()
statement is: setBounds(Ljava/awt/Rectangle;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: coordSystem.setBounds(arg0)
statement is: org.evosuite.testcase.statements.FieldStatement@5d0314ae type is: class org.evosuite.testcase.statements.FieldStatement return type class de.progra.charting.CoordSystemUtilities
statement code is: CoordSystemUtilities coordSystemUtilities = coordSystem.c
statement is: java.awt.image.BufferedImage(III)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.awt.image.BufferedImage
statement code is: BufferedImage bufferedImage = new BufferedImage(20, 20, 1)
statement is: createGraphics()Ljava/awt/Graphics2D; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.awt.Graphics2D
statement code is: Graphics2D createGraphics = bufferedImage.createGraphics()
statement is: drawXAxisTicks(Ljava/awt/Graphics2D;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: coordSystemUtilities.drawXAxisTicks(arg0)
test data is: ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel();
CoordSystem coordSystem = new CoordSystem(objectChartDataModel);
DefaultCaret defaultCaret = new DefaultCaret();
coordSystem.setBounds(defaultCaret);
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
BufferedImage bufferedImage = new BufferedImage(20, 20, 1);
Graphics2D createGraphics = bufferedImage.createGraphics();
coordSystemUtilities.drawXAxisTicks(createGraphics);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel();
        objectChartDataModel.setTitle("Object Chart");
        objectChartDataModel.setXAxisLabel("Time");
        objectChartDataModel.setYAxisLabel("Value");
        CoordSystem coordSystem = new CoordSystem(objectChartDataModel);
        coordSystem.setBounds(new Rectangle(0, 0, 100, 200));
        coordSystem.setBackgroundColor(WHITE);
        DefaultCaret defaultCaret = new DefaultCaret();
        defaultCaret.setBlinkRate(500);
        defaultCaret.setVisible(true);
        coordSystemUtilities = coordSystem.getCoordSystemUtilities();
        BufferedImage bufferedImage = new BufferedImage(20, 20, 1);
        Graphics2D createGraphics = bufferedImage.createGraphics();
        coordSystemUtilities.drawXAxisTicks(createGraphics);
    }
}
statement is: ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: objectChartDataModel.setTitle("Object Chart"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: objectChartDataModel.setTitle("Object Chart") target is: objectChartDataModel method is: setTitle(java.lang.String)
statement is: objectChartDataModel.setXAxisLabel("Time"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: objectChartDataModel.setXAxisLabel("Time") target is: objectChartDataModel method is: setXAxisLabel(java.lang.String)
statement is: objectChartDataModel.setYAxisLabel("Value"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: objectChartDataModel.setYAxisLabel("Value") target is: objectChartDataModel method is: setYAxisLabel(java.lang.String)
statement is: CoordSystem coordSystem = new CoordSystem(objectChartDataModel), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: coordSystem.setBounds(new Rectangle(0, 0, 100, 200)), class spoon.support.reflect.code.CtInvocationImpl
invocation is: coordSystem.setBounds(new Rectangle(0, 0, 100, 200)) target is: coordSystem method is: setBounds(Rectangle)
source statement: de.progra.charting.CoordSystem(Lde/progra/charting/model/ChartDataModel;)V callee: VariableReference: Statement 1, type de.progra.charting.CoordSystemindex is: 1
Matched Method is: setBounds(Ljava/awt/Rectangle;)V
i 0 Parameters size() 0 Num of Method Parameters: 1
statement is: coordSystem.setBackgroundColor(WHITE), class spoon.support.reflect.code.CtInvocationImpl
invocation is: coordSystem.setBackgroundColor(WHITE) target is: coordSystem method is: setBackgroundColor()
statement is: DefaultCaret defaultCaret = new DefaultCaret(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: defaultCaret.setBlinkRate(500), class spoon.support.reflect.code.CtInvocationImpl
invocation is: defaultCaret.setBlinkRate(500) target is: defaultCaret method is: setBlinkRate(int)
statement is: defaultCaret.setVisible(true), class spoon.support.reflect.code.CtInvocationImpl
invocation is: defaultCaret.setVisible(true) target is: defaultCaret method is: setVisible(boolean)
statement is: coordSystemUtilities = coordSystem.getCoordSystemUtilities(), class spoon.support.reflect.code.CtAssignmentImpl
statement is: BufferedImage bufferedImage = new BufferedImage(20, 20, 1), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Graphics2D createGraphics = bufferedImage.createGraphics(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: bufferedImage.createGraphics() target is: bufferedImage method is: createGraphics()
source statement: java.awt.image.BufferedImage(III)V callee: VariableReference: Statement 5, type java.awt.image.BufferedImageindex is: 8
Matched Method is: createGraphics()Ljava/awt/Graphics2D;
statement is: coordSystemUtilities.drawXAxisTicks(createGraphics), class spoon.support.reflect.code.CtInvocationImpl
invocation is: coordSystemUtilities.drawXAxisTicks(createGraphics) target is: coordSystemUtilities method is: drawXAxisTicks(Graphics2D)
TestCase is: ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel();
CoordSystem coordSystem = new CoordSystem(objectChartDataModel);
DefaultCaret defaultCaret = null;
coordSystem.setBounds(defaultCaret);
DefaultCaret defaultCaret = new DefaultCaret();
int _int = 20;
int _int = 20;
int _int = 1;
BufferedImage bufferedImage = new BufferedImage(_int, _int, _int);
((BufferedImage) _int).createGraphics();

statement is: de.progra.charting.model.DefaultChartDataModel()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.progra.charting.model.DefaultChartDataModel
statement code is: DefaultChartDataModel defaultChartDataModel = new DefaultChartDataModel()
statement is: de.progra.charting.CoordSystem(Lde/progra/charting/model/ChartDataModel;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.progra.charting.CoordSystem
statement code is: CoordSystem coordSystem = new CoordSystem(arg0)
statement is: org.evosuite.testcase.statements.FieldStatement@31746b49 type is: class org.evosuite.testcase.statements.FieldStatement return type class de.progra.charting.CoordSystemUtilities
statement code is: CoordSystemUtilities coordSystemUtilities = coordSystem.c
statement is: setMinimumColumnValue(D)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: defaultChartDataModel.setMinimumColumnValue(1)
statement is: setManualScale(Z)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: defaultChartDataModel.setManualScale(true)
statement is: drawYAxisTicks(Ljava/awt/Graphics2D;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: coordSystemUtilities.drawYAxisTicks((Graphics2D) null)
test data is: DefaultChartDataModel defaultChartDataModel = new DefaultChartDataModel();
CoordSystem coordSystem = new CoordSystem(defaultChartDataModel);
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
defaultChartDataModel.setMinimumColumnValue(1);
defaultChartDataModel.setManualScale(true);
coordSystemUtilities.drawYAxisTicks((Graphics2D) null);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        defaultChartDataModel = new DefaultChartDataModel();
        coordSystem = new CoordSystem(defaultChartDataModel);
        coordSystemUtilities = coordSystem.c;
        defaultChartDataModel.setMinimumColumnValue(1000);
        defaultChartDataModel.setManualScale(true);
        coordSystemUtilities.drawYAxisTicks(((Graphics2D) (null)));
    }
}
statement is: defaultChartDataModel = new DefaultChartDataModel(), class spoon.support.reflect.code.CtAssignmentImpl
statement is: coordSystem = new CoordSystem(defaultChartDataModel), class spoon.support.reflect.code.CtAssignmentImpl
statement is: coordSystemUtilities = coordSystem.c, class spoon.support.reflect.code.CtAssignmentImpl
statement is: defaultChartDataModel.setMinimumColumnValue(1000), class spoon.support.reflect.code.CtInvocationImpl
invocation is: defaultChartDataModel.setMinimumColumnValue(1000) target is: defaultChartDataModel method is: setMinimumColumnValue(int)
statement is: defaultChartDataModel.setManualScale(true), class spoon.support.reflect.code.CtInvocationImpl
invocation is: defaultChartDataModel.setManualScale(true) target is: defaultChartDataModel method is: setManualScale(boolean)
statement is: coordSystemUtilities.drawYAxisTicks(((Graphics2D) (null))), class spoon.support.reflect.code.CtInvocationImpl
invocation is: coordSystemUtilities.drawYAxisTicks(((Graphics2D) (null))) target is: coordSystemUtilities method is: drawYAxisTicks(Graphics2D)
statement is: de.progra.charting.model.DefaultChartDataModel()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.progra.charting.model.DefaultChartDataModel
statement code is: DefaultChartDataModel defaultChartDataModel = new DefaultChartDataModel()
statement is: de.progra.charting.CoordSystem(Lde/progra/charting/model/ChartDataModel;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.progra.charting.CoordSystem
statement code is: CoordSystem coordSystem = new CoordSystem(arg0)
statement is: org.evosuite.testcase.statements.FieldStatement@cc6b31e type is: class org.evosuite.testcase.statements.FieldStatement return type class de.progra.charting.CoordSystemUtilities
statement code is: CoordSystemUtilities coordSystemUtilities = coordSystem.c
statement is: setMaximumColumnValue(D)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: defaultChartDataModel.setMaximumColumnValue((-674.7305))
statement is: setManualScale(Z)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: defaultChartDataModel.setManualScale(true)
statement is: drawYAxisTicks(Ljava/awt/Graphics2D;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: coordSystemUtilities.drawYAxisTicks((Graphics2D) null)
test data is: DefaultChartDataModel defaultChartDataModel = new DefaultChartDataModel();
CoordSystem coordSystem = new CoordSystem(defaultChartDataModel);
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
defaultChartDataModel.setMaximumColumnValue((-674.7305));
defaultChartDataModel.setManualScale(true);
coordSystemUtilities.drawYAxisTicks((Graphics2D) null);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        DefaultChartDataModel defaultChartDataModel = new DefaultChartDataModel();
        CoordSystem coordSystem = new CoordSystem(defaultChartDataModel);
        CoordSystemUtilities coordSystemUtilities = coordSystem.c;
        defaultChartDataModel.setMaximumColumnValue(-674.7305);
        defaultChartDataModel.setManualScale(true);
        coordSystemUtilities.drawYAxisTicks(((Graphics2D) (null)));
    }
}
statement is: DefaultChartDataModel defaultChartDataModel = new DefaultChartDataModel(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: CoordSystem coordSystem = new CoordSystem(defaultChartDataModel), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: CoordSystemUtilities coordSystemUtilities = coordSystem.c, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: coordSystem.c is coordSystem
CtField is: protected de.progra.charting.CoordSystemUtilities de.progra.charting.CoordSystem.c CoordSystemUtilities c
statement is: defaultChartDataModel.setMaximumColumnValue(-674.7305), class spoon.support.reflect.code.CtInvocationImpl
invocation is: defaultChartDataModel.setMaximumColumnValue(-674.7305) target is: defaultChartDataModel method is: setMaximumColumnValue(double)
source statement: de.progra.charting.model.DefaultChartDataModel()V callee: VariableReference: Statement 0, type de.progra.charting.model.DefaultChartDataModelindex is: 0
Matched Method is: setMaximumColumnValue(D)V
i 0 Parameters size() 0 Num of Method Parameters: 1
statement is: defaultChartDataModel.setManualScale(true), class spoon.support.reflect.code.CtInvocationImpl
invocation is: defaultChartDataModel.setManualScale(true) target is: defaultChartDataModel method is: setManualScale(boolean)
source statement: de.progra.charting.model.DefaultChartDataModel()V callee: VariableReference: Statement 0, type de.progra.charting.model.DefaultChartDataModelindex is: 0
Matched Method is: setManualScale(Z)V
statement is: coordSystemUtilities.drawYAxisTicks(((Graphics2D) (null))), class spoon.support.reflect.code.CtInvocationImpl
invocation is: coordSystemUtilities.drawYAxisTicks(((Graphics2D) (null))) target is: coordSystemUtilities method is: drawYAxisTicks(Graphics2D)
TestCase is: DefaultChartDataModel defaultChartDataModel = new DefaultChartDataModel();
CoordSystem coordSystem = new CoordSystem(defaultChartDataModel);
double _double = null;
defaultChartDataModel.setMaximumColumnValue(_double);
boolean _boolean = true;
defaultChartDataModel.setManualScale(_boolean);

statement is: de.progra.charting.model.DefaultChartDataModel()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.progra.charting.model.DefaultChartDataModel
statement code is: DefaultChartDataModel defaultChartDataModel = new DefaultChartDataModel()
statement is: de.progra.charting.CoordSystem(Lde/progra/charting/model/ChartDataModel;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.progra.charting.CoordSystem
statement code is: CoordSystem coordSystem = new CoordSystem(arg0)
statement is: org.evosuite.testcase.statements.FieldStatement@58fa336d type is: class org.evosuite.testcase.statements.FieldStatement return type class de.progra.charting.CoordSystemUtilities
statement code is: CoordSystemUtilities coordSystemUtilities = coordSystem.c
statement is: de.progra.charting.Axis(ILde/progra/charting/model/ChartDataModelConstraints;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.progra.charting.Axis
statement code is: Axis axis = new Axis(0, (ChartDataModelConstraints) null)
statement is: setSecondYAxis(Lde/progra/charting/Axis;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: coordSystem.setSecondYAxis(arg0)
statement is: setMaximumColumnValue(D)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: defaultChartDataModel.setMaximumColumnValue((-674.7305))
statement is: setManualScale(Z)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: defaultChartDataModel.setManualScale(true)
statement is: drawYAxisTicks(Ljava/awt/Graphics2D;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: coordSystemUtilities.drawYAxisTicks((Graphics2D) null)
test data is: DefaultChartDataModel defaultChartDataModel = new DefaultChartDataModel();
CoordSystem coordSystem = new CoordSystem(defaultChartDataModel);
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
Axis axis = new Axis(0, (ChartDataModelConstraints) null);
coordSystem.setSecondYAxis(axis);
defaultChartDataModel.setMaximumColumnValue((-674.7305));
defaultChartDataModel.setManualScale(true);
coordSystemUtilities.drawYAxisTicks((Graphics2D) null);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        defaultChartDataModel = new DefaultChartDataModel();
        coordSystem = new CoordSystem(defaultChartDataModel);
        coordSystemUtilities = coordSystem.c;
        axis = new Axis(0, ((ChartDataModelConstraints) (null)));
        coordSystem.setSecondYAxis(axis);
        defaultChartDataModel.setMaximumColumnValue(-674.7305);
        defaultChartDataModel.setManualScale(true);
        coordSystemUtilities.drawYAxisTicks(((Graphics2D) (null)), "Y-Axis Ticks", RED);
    }
}
statement is: defaultChartDataModel = new DefaultChartDataModel(), class spoon.support.reflect.code.CtAssignmentImpl
statement is: coordSystem = new CoordSystem(defaultChartDataModel), class spoon.support.reflect.code.CtAssignmentImpl
statement is: coordSystemUtilities = coordSystem.c, class spoon.support.reflect.code.CtAssignmentImpl
statement is: axis = new Axis(0, ((ChartDataModelConstraints) (null))), class spoon.support.reflect.code.CtAssignmentImpl
statement is: coordSystem.setSecondYAxis(axis), class spoon.support.reflect.code.CtInvocationImpl
invocation is: coordSystem.setSecondYAxis(axis) target is: coordSystem method is: setSecondYAxis()
statement is: defaultChartDataModel.setMaximumColumnValue(-674.7305), class spoon.support.reflect.code.CtInvocationImpl
invocation is: defaultChartDataModel.setMaximumColumnValue(-674.7305) target is: defaultChartDataModel method is: setMaximumColumnValue(double)
statement is: defaultChartDataModel.setManualScale(true), class spoon.support.reflect.code.CtInvocationImpl
invocation is: defaultChartDataModel.setManualScale(true) target is: defaultChartDataModel method is: setManualScale(boolean)
statement is: coordSystemUtilities.drawYAxisTicks(((Graphics2D) (null)), "Y-Axis Ticks", RED), class spoon.support.reflect.code.CtInvocationImpl
invocation is: coordSystemUtilities.drawYAxisTicks(((Graphics2D) (null)), "Y-Axis Ticks", RED) target is: coordSystemUtilities method is: drawYAxisTicks(Graphics2D,java.lang.String)
statement is: de.progra.charting.model.ObjectChartDataModel()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.progra.charting.model.ObjectChartDataModel
statement code is: ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel()
statement is: de.progra.charting.CoordSystem(Lde/progra/charting/model/ChartDataModel;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.progra.charting.CoordSystem
statement code is: CoordSystem coordSystem = new CoordSystem(arg0)
statement is: org.evosuite.testcase.statements.AssignmentStatement@8c625bb2 type is: class org.evosuite.testcase.statements.AssignmentStatement return type boolean
statement code is: coordSystem.shouldPaintOnlyTick = false
statement is: javax.swing.text.DefaultCaret()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class javax.swing.text.DefaultCaret
statement code is: DefaultCaret defaultCaret = new DefaultCaret()
statement is: setBounds(Ljava/awt/Rectangle;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: coordSystem.setBounds(arg0)
statement is: org.evosuite.testcase.statements.FieldStatement@329f9b3e type is: class org.evosuite.testcase.statements.FieldStatement return type class de.progra.charting.CoordSystemUtilities
statement code is: CoordSystemUtilities coordSystemUtilities = coordSystem.c
statement is: java.awt.image.BufferedImage(III)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.awt.image.BufferedImage
statement code is: BufferedImage bufferedImage = new BufferedImage(20, 20, 1)
statement is: createGraphics()Ljava/awt/Graphics2D; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.awt.Graphics2D
statement code is: Graphics2D createGraphics = bufferedImage.createGraphics()
statement is: drawYAxisTicks(Ljava/awt/Graphics2D;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: coordSystemUtilities.drawYAxisTicks(arg0)
test data is: ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel();
CoordSystem coordSystem = new CoordSystem(objectChartDataModel);
coordSystem.shouldPaintOnlyTick = false;
DefaultCaret defaultCaret = new DefaultCaret();
coordSystem.setBounds(defaultCaret);
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
BufferedImage bufferedImage = new BufferedImage(20, 20, 1);
Graphics2D createGraphics = bufferedImage.createGraphics();
coordSystemUtilities.drawYAxisTicks(createGraphics);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel();
        CoordSystem coordSystem = new CoordSystem(objectChartDataModel);
        coordSystem.shouldPaintOnlyTick = false;
        DefaultCaret defaultCaret = new DefaultCaret();
        coordSystem.setBounds(defaultCaret);
        CoordSystemUtilities coordSystemUtilities = coordSystem.c;
        BufferedImage bufferedImage = new BufferedImage(20, 20, 1);
        Graphics2D createGraphics = bufferedImage.createGraphics();
        coordSystemUtilities.drawYAxisTicks(createGraphics);
    }
}
statement is: ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: CoordSystem coordSystem = new CoordSystem(objectChartDataModel), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: coordSystem.shouldPaintOnlyTick = false, class spoon.support.reflect.code.CtAssignmentImpl
statement is: DefaultCaret defaultCaret = new DefaultCaret(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: coordSystem.setBounds(defaultCaret), class spoon.support.reflect.code.CtInvocationImpl
invocation is: coordSystem.setBounds(defaultCaret) target is: coordSystem method is: setBounds(DefaultCaret)
source statement: de.progra.charting.CoordSystem(Lde/progra/charting/model/ChartDataModel;)V callee: VariableReference: Statement 1, type de.progra.charting.CoordSystemindex is: 1
Matched Method is: setBounds(Ljava/awt/Rectangle;)V
statement is: CoordSystemUtilities coordSystemUtilities = coordSystem.c, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: coordSystem.c is coordSystem
CtField is: protected de.progra.charting.CoordSystemUtilities de.progra.charting.CoordSystem.c CoordSystemUtilities c
statement is: BufferedImage bufferedImage = new BufferedImage(20, 20, 1), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Graphics2D createGraphics = bufferedImage.createGraphics(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: bufferedImage.createGraphics() target is: bufferedImage method is: createGraphics()
source statement: java.awt.image.BufferedImage(III)V callee: VariableReference: Statement 6, type java.awt.image.BufferedImageindex is: 7
Matched Method is: createGraphics()Ljava/awt/Graphics2D;
statement is: coordSystemUtilities.drawYAxisTicks(createGraphics), class spoon.support.reflect.code.CtInvocationImpl
invocation is: coordSystemUtilities.drawYAxisTicks(createGraphics) target is: coordSystemUtilities method is: drawYAxisTicks(Graphics2D)
TestCase is: ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel();
CoordSystem coordSystem = new CoordSystem(objectChartDataModel);
DefaultCaret defaultCaret = new DefaultCaret();
coordSystem.setBounds(defaultCaret);
int _int = 20;
int _int = 20;
int _int = 1;
BufferedImage bufferedImage = new BufferedImage(_int, _int, _int);
((BufferedImage) _int).createGraphics();

statement is: de.progra.charting.model.ObjectChartDataModel()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.progra.charting.model.ObjectChartDataModel
statement code is: ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel()
statement is: de.progra.charting.CoordSystem(Lde/progra/charting/model/ChartDataModel;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.progra.charting.CoordSystem
statement code is: CoordSystem coordSystem = new CoordSystem(arg0)
statement is: javax.swing.text.DefaultCaret()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class javax.swing.text.DefaultCaret
statement code is: DefaultCaret defaultCaret = new DefaultCaret()
statement is: setBounds(Ljava/awt/Rectangle;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: coordSystem.setBounds(arg0)
statement is: org.evosuite.testcase.statements.FieldStatement@696dca82 type is: class org.evosuite.testcase.statements.FieldStatement return type class de.progra.charting.CoordSystemUtilities
statement code is: CoordSystemUtilities coordSystemUtilities = coordSystem.c
statement is: java.awt.image.BufferedImage(III)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.awt.image.BufferedImage
statement code is: BufferedImage bufferedImage = new BufferedImage(20, 20, 1)
statement is: setPaintLabels(Z)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: coordSystem.setPaintLabels(false)
statement is: createGraphics()Ljava/awt/Graphics2D; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.awt.Graphics2D
statement code is: Graphics2D createGraphics = bufferedImage.createGraphics()
statement is: drawYAxisTicks(Ljava/awt/Graphics2D;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: coordSystemUtilities.drawYAxisTicks(arg0)
test data is: ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel();
CoordSystem coordSystem = new CoordSystem(objectChartDataModel);
DefaultCaret defaultCaret = new DefaultCaret();
coordSystem.setBounds(defaultCaret);
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
BufferedImage bufferedImage = new BufferedImage(20, 20, 1);
coordSystem.setPaintLabels(false);
Graphics2D createGraphics = bufferedImage.createGraphics();
coordSystemUtilities.drawYAxisTicks(createGraphics);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel();
        CoordSystem coordSystem = new CoordSystem(objectChartDataModel);
        DefaultCaret defaultCaret = new DefaultCaret();
        coordSystem.setBounds(defaultCaret);
        CoordSystemUtilities coordSystemUtilities = coordSystem.c;
        BufferedImage bufferedImage = new BufferedImage(100, 100, 1);
        coordSystem.setPaintLabels(false);
        Graphics2D createGraphics = bufferedImage.createGraphics();
        coordSystemUtilities.drawYAxisTicks(createGraphics);
    }
}
statement is: ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: CoordSystem coordSystem = new CoordSystem(objectChartDataModel), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: DefaultCaret defaultCaret = new DefaultCaret(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: coordSystem.setBounds(defaultCaret), class spoon.support.reflect.code.CtInvocationImpl
invocation is: coordSystem.setBounds(defaultCaret) target is: coordSystem method is: setBounds(DefaultCaret)
source statement: de.progra.charting.CoordSystem(Lde/progra/charting/model/ChartDataModel;)V callee: VariableReference: Statement 1, type de.progra.charting.CoordSystemindex is: 1
Matched Method is: setBounds(Ljava/awt/Rectangle;)V
statement is: CoordSystemUtilities coordSystemUtilities = coordSystem.c, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: coordSystem.c is coordSystem
CtField is: protected de.progra.charting.CoordSystemUtilities de.progra.charting.CoordSystem.c CoordSystemUtilities c
statement is: BufferedImage bufferedImage = new BufferedImage(100, 100, 1), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: coordSystem.setPaintLabels(false), class spoon.support.reflect.code.CtInvocationImpl
invocation is: coordSystem.setPaintLabels(false) target is: coordSystem method is: setPaintLabels(boolean)
source statement: de.progra.charting.CoordSystem(Lde/progra/charting/model/ChartDataModel;)V callee: VariableReference: Statement 1, type de.progra.charting.CoordSystemindex is: 1
Matched Method is: setPaintLabels(Z)V
statement is: Graphics2D createGraphics = bufferedImage.createGraphics(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: bufferedImage.createGraphics() target is: bufferedImage method is: createGraphics()
source statement: java.awt.image.BufferedImage(III)V callee: VariableReference: Statement 5, type java.awt.image.BufferedImageindex is: 7
Matched Method is: createGraphics()Ljava/awt/Graphics2D;
statement is: coordSystemUtilities.drawYAxisTicks(createGraphics), class spoon.support.reflect.code.CtInvocationImpl
invocation is: coordSystemUtilities.drawYAxisTicks(createGraphics) target is: coordSystemUtilities method is: drawYAxisTicks(Graphics2D)
TestCase is: ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel();
CoordSystem coordSystem = new CoordSystem(objectChartDataModel);
DefaultCaret defaultCaret = new DefaultCaret();
coordSystem.setBounds(defaultCaret);
int _int = 100;
int _int = 100;
int _int = 1;
BufferedImage bufferedImage = new BufferedImage(_int, _int, _int);
boolean _boolean = false;
coordSystem.setPaintLabels(_boolean);
((BufferedImage) _int).createGraphics();

statement is: org.evosuite.testcase.statements.ArrayStatement@3a5f96ba type is: class org.evosuite.testcase.statements.ArrayStatement return type class [[D
statement code is: double[][] doubleArray = new double[3][1]
statement is: org.evosuite.testcase.statements.ArrayStatement@43fe7854 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [D
statement code is: double[] doubleArray = new double[1]
statement is: org.evosuite.testcase.statements.AssignmentStatement@d0eacba5 type is: class org.evosuite.testcase.statements.AssignmentStatement return type double
statement code is: doubleArray[0] = (double) 1
statement is: org.evosuite.testcase.statements.AssignmentStatement@1927accc type is: class org.evosuite.testcase.statements.AssignmentStatement return type class [D
statement code is: doubleArray[0] = doubleArray
statement is: org.evosuite.testcase.statements.AssignmentStatement@a878c635 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class [D
statement code is: doubleArray[1] = doubleArray
statement is: org.evosuite.testcase.statements.AssignmentStatement@61afebf1 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class [D
statement code is: doubleArray[2] = doubleArray
statement is: org.evosuite.testcase.statements.ArrayStatement@43e98852 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [Ljava.lang.String;
statement code is: String[] stringArray = new String[8]
statement is: de.progra.charting.model.ObjectChartDataModel([[D[Ljava/lang/Object;[Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.progra.charting.model.ObjectChartDataModel
statement code is: ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel(arg1, arg1, arg2)
statement is: de.progra.charting.CoordSystem(Lde/progra/charting/model/ChartDataModel;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.progra.charting.CoordSystem
statement code is: CoordSystem coordSystem = new CoordSystem(arg0)
statement is: org.evosuite.testcase.statements.FieldStatement@58fb4ffc type is: class org.evosuite.testcase.statements.FieldStatement return type class de.progra.charting.CoordSystemUtilities
statement code is: CoordSystemUtilities coordSystemUtilities = coordSystem.c
statement is: getXAxisLine2D()Ljava/awt/geom/Line2D; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.awt.geom.Line2D
statement code is: Line2D xAxisLine2D = coordSystemUtilities.getXAxisLine2D()
test data is: double[][] doubleArray = new double[3][1];
double[] doubleArray = new double[1];
doubleArray[0] = (double) 1;
doubleArray[0] = doubleArray;
doubleArray[1] = doubleArray;
doubleArray[2] = doubleArray;
String[] stringArray = new String[8];
ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel(doubleArray, doubleArray, stringArray);
CoordSystem coordSystem = new CoordSystem(objectChartDataModel);
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
coordSystemUtilities.getXAxisLine2D();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Improved test data for the code snippet
        double[][] doubleArray = new double[][]{ new double[]{ 1, 2, 3 }, new double[]{ 4, 5, 6 }, new double[]{ 7, 8, 9 } };
        String[] stringArray = new String[]{ "apple", "banana", "cherry" };
        ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel(doubleArray, doubleArray, stringArray);
        CoordSystem coordSystem = new CoordSystem(objectChartDataModel);
        CoordSystemUtilities coordSystemUtilities = coordSystem.c;
        Line2D xAxisLine2D = coordSystemUtilities.getXAxisLine2D();
        assertEquals(xAxisLine2D.getX1(), 1, 0.001);
        assertEquals(xAxisLine2D.getY1(), 0, 0.001);
        assertEquals(xAxisLine2D.getX2(), 3, 0.001);
        assertEquals(xAxisLine2D.getY2(), 0, 0.001);
    }
}
statement is: // Improved test data for the code snippet
double[][] doubleArray = new double[][]{ new double[]{ 1, 2, 3 }, new double[]{ 4, 5, 6 }, new double[]{ 7, 8, 9 } }, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [] Ct is: double[][] doubleArray = new double[3][1] isAssignment: false Array: new double[][]{ new double[]{ 1, 2, 3 }, new double[]{ 4, 5, 6 }, new double[]{ 7, 8, 9 } } Elements: [new double[]{ 1, 2, 3 }, new double[]{ 4, 5, 6 }, new double[]{ 7, 8, 9 }]
lengths: [3, 1] []
Dimension: [] Ct is: double[] doubleArray = new double[1] isAssignment: false Array: new double[][]{ new double[]{ 1, 2, 3 }, new double[]{ 4, 5, 6 }, new double[]{ 7, 8, 9 } } Elements: [new double[]{ 1, 2, 3 }, new double[]{ 4, 5, 6 }, new double[]{ 7, 8, 9 }]
lengths: [1] []
Dimension: [] Ct is: String[] stringArray = new String[8] isAssignment: false Array: new double[][]{ new double[]{ 1, 2, 3 }, new double[]{ 4, 5, 6 }, new double[]{ 7, 8, 9 } } Elements: [new double[]{ 1, 2, 3 }, new double[]{ 4, 5, 6 }, new double[]{ 7, 8, 9 }]
lengths: [8] []
statement is: String[] stringArray = new String[]{ "apple", "banana", "cherry" }, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [] Ct is: double[][] doubleArray = new double[3][1] isAssignment: false Array: new String[]{ "apple", "banana", "cherry" } Elements: ["apple", "banana", "cherry"]
lengths: [3, 1] []
Dimension: [] Ct is: double[] doubleArray = new double[1] isAssignment: false Array: new String[]{ "apple", "banana", "cherry" } Elements: ["apple", "banana", "cherry"]
lengths: [1] []
Dimension: [] Ct is: String[] stringArray = new String[8] isAssignment: false Array: new String[]{ "apple", "banana", "cherry" } Elements: ["apple", "banana", "cherry"]
lengths: [8] []
statement is: ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel(doubleArray, doubleArray, stringArray), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: de.progra.charting.model.ObjectChartDataModel([[D[Ljava/lang/Object;[Ljava/lang/String;)V
statement is: CoordSystem coordSystem = new CoordSystem(objectChartDataModel), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: de.progra.charting.CoordSystem(Lde/progra/charting/model/ChartDataModel;)V
statement is: CoordSystemUtilities coordSystemUtilities = coordSystem.c, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: coordSystem.c is coordSystem
CtField is: protected de.progra.charting.CoordSystemUtilities de.progra.charting.CoordSystem.c CoordSystemUtilities c
statement is: Line2D xAxisLine2D = coordSystemUtilities.getXAxisLine2D(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: coordSystemUtilities.getXAxisLine2D() target is: coordSystemUtilities method is: getXAxisLine2D()
statement is: assertEquals(xAxisLine2D.getX1(), 1, 0.001), class spoon.support.reflect.code.CtInvocationImpl
invocation is: assertEquals(xAxisLine2D.getX1(), 1, 0.001) target is:  method is: assertEquals(<unknown>,int,double)
statement is: assertEquals(xAxisLine2D.getY1(), 0, 0.001), class spoon.support.reflect.code.CtInvocationImpl
invocation is: assertEquals(xAxisLine2D.getY1(), 0, 0.001) target is:  method is: assertEquals(<unknown>,int,double)
statement is: assertEquals(xAxisLine2D.getX2(), 3, 0.001), class spoon.support.reflect.code.CtInvocationImpl
invocation is: assertEquals(xAxisLine2D.getX2(), 3, 0.001) target is:  method is: assertEquals(<unknown>,int,double)
statement is: assertEquals(xAxisLine2D.getY2(), 0, 0.001), class spoon.support.reflect.code.CtInvocationImpl
invocation is: assertEquals(xAxisLine2D.getY2(), 0, 0.001) target is:  method is: assertEquals(<unknown>,int,double)
statement is: org.evosuite.testcase.statements.ArrayStatement@b13fdca6 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [[I
statement code is: int[][] intArray = new int[2][2]
statement is: org.evosuite.testcase.statements.ArrayStatement@e188ee5 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [I
statement code is: int[] intArray = new int[3]
statement is: org.evosuite.testcase.statements.AssignmentStatement@8b374600 type is: class org.evosuite.testcase.statements.AssignmentStatement return type int
statement code is: intArray[0] = (-845978407)
statement is: org.evosuite.testcase.statements.AssignmentStatement@dad0a1f type is: class org.evosuite.testcase.statements.AssignmentStatement return type int
statement code is: intArray[1] = (-1550960412)
statement is: org.evosuite.testcase.statements.AssignmentStatement@cb6c9d62 type is: class org.evosuite.testcase.statements.AssignmentStatement return type int
statement code is: intArray[2] = (-1777227846)
statement is: org.evosuite.testcase.statements.AssignmentStatement@659796a2 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class [I
statement code is: intArray[0] = intArray
statement is: org.evosuite.testcase.statements.AssignmentStatement@394ad190 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class [I
statement code is: intArray[1] = intArray
statement is: org.evosuite.testcase.statements.ArrayStatement@3d1dfcc7 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [Ljava.lang.String;
statement code is: String[] stringArray = new String[6]
statement is: de.progra.charting.model.ObjectChartDataModel([[I[Ljava/lang/Object;[Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.progra.charting.model.ObjectChartDataModel
statement code is: ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel(arg1, arg1, arg2)
statement is: de.progra.charting.CoordSystem(Lde/progra/charting/model/ChartDataModel;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.progra.charting.CoordSystem
statement code is: CoordSystem coordSystem = new CoordSystem(arg0)
statement is: org.evosuite.testcase.statements.FieldStatement@6267a9ea type is: class org.evosuite.testcase.statements.FieldStatement return type class de.progra.charting.CoordSystemUtilities
statement code is: CoordSystemUtilities coordSystemUtilities = coordSystem.c
statement is: getXAxisLine2D()Ljava/awt/geom/Line2D; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.awt.geom.Line2D
statement code is: Line2D xAxisLine2D = coordSystemUtilities.getXAxisLine2D()
test data is: int[][] intArray = new int[2][2];
int[] intArray = new int[3];
intArray[0] = (-845978407);
intArray[1] = (-1550960412);
intArray[2] = (-1777227846);
intArray[0] = intArray;
intArray[1] = intArray;
String[] stringArray = new String[6];
ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel(intArray, intArray, stringArray);
CoordSystem coordSystem = new CoordSystem(objectChartDataModel);
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
coordSystemUtilities.getXAxisLine2D();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        int[][] intArray = new int[2][2];
        int[] intArray = new int[3];
        intArray[0] = -1;
        intArray[1] = 2;
        intArray[2] = 3;
        intArray[0] = intArray;
        intArray[1] = intArray;
        String[] stringArray = new String[6];
        ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel(intArray, intArray, stringArray);
        CoordSystem coordSystem = new CoordSystem(objectChartDataModel);
        CoordSystemUtilities coordSystemUtilities = coordSystem.c;
        coordSystemUtilities.getXAxisLine2D();
    }
}
statement is: int[][] intArray = new int[2][2], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [2, 2] Ct is: int[][] intArray = new int[2][2] isAssignment: false Array: new int[2][2] Elements: []
lengths: [2, 2] [2, 2]
Their type are: class [[I int[][]
statement is: int[] intArray = new int[3], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [3] Ct is: int[][] intArray = new int[2][2] isAssignment: false Array: new int[3] Elements: []
lengths: [2, 2] [3]
Dimension: [3] Ct is: int[] intArray = new int[3] isAssignment: false Array: new int[3] Elements: []
lengths: [3] [3]
Their type are: class [I int[]
statement is: intArray[0] = -1, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : intArray[0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl int Assignment:-1 Ct is: intArray[0] = -1
target : intArray class spoon.support.reflect.code.CtLiteralImpl
statement is: intArray[1] = 2, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : intArray[1] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl int Assignment:2 Ct is: intArray[1] = 2
target : intArray class spoon.support.reflect.code.CtLiteralImpl
statement is: intArray[2] = 3, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : intArray[2] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl int Assignment:3 Ct is: intArray[2] = 3
target : intArray class spoon.support.reflect.code.CtLiteralImpl
statement is: intArray[0] = intArray, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : intArray[0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl int Assignment:intArray Ct is: intArray[0] = intArray
target : intArray class spoon.support.reflect.code.CtLiteralImpl
statement is: intArray[1] = intArray, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : intArray[1] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl int Assignment:intArray Ct is: intArray[1] = intArray
target : intArray class spoon.support.reflect.code.CtLiteralImpl
statement is: String[] stringArray = new String[6], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [6] Ct is: int[][] intArray = new int[2][2] isAssignment: false Array: new String[6] Elements: []
lengths: [2, 2] [6]
Dimension: [6] Ct is: int[] intArray = new int[3] isAssignment: false Array: new String[6] Elements: []
lengths: [3] [6]
Their type are: class [I String[]
Dimension: [6] Ct is: String[] stringArray = new String[6] isAssignment: false Array: new String[6] Elements: []
lengths: [6] [6]
Their type are: class [Ljava.lang.String; String[]
statement is: ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel(intArray, intArray, stringArray), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: CoordSystem coordSystem = new CoordSystem(objectChartDataModel), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: CoordSystemUtilities coordSystemUtilities = coordSystem.c, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: coordSystem.c is coordSystem
CtField is: protected de.progra.charting.CoordSystemUtilities de.progra.charting.CoordSystem.c CoordSystemUtilities c
statement is: coordSystemUtilities.getXAxisLine2D(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: coordSystemUtilities.getXAxisLine2D() target is: coordSystemUtilities method is: getXAxisLine2D()
TestCase is: int[][] intArray = new int[2][2];
int[] intArray = new int[3];
intArray[0] = (-845978407);
int _int = 2;
intArray[1] = _int;
int _int = 3;
intArray[2] = _int;
intArray[0] = (int) intArray;
intArray[1] = (int) intArray;
String[] stringArray = new String[6];
ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel((int[][]) intArray, (Object[]) intArray, stringArray);
CoordSystem coordSystem = new CoordSystem(objectChartDataModel);

statement is: org.evosuite.testcase.statements.ArrayStatement@4e1f2286 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [[D
statement code is: double[][] doubleArray = new double[1][1]
statement is: org.evosuite.testcase.statements.ArrayStatement@6afeb type is: class org.evosuite.testcase.statements.ArrayStatement return type class [D
statement code is: double[] doubleArray = new double[2]
statement is: org.evosuite.testcase.statements.AssignmentStatement@d8c52b5d type is: class org.evosuite.testcase.statements.AssignmentStatement return type double
statement code is: doubleArray[0] = 0.1
statement is: org.evosuite.testcase.statements.AssignmentStatement@2e3a8e4c type is: class org.evosuite.testcase.statements.AssignmentStatement return type double
statement code is: doubleArray[1] = 64.0
statement is: org.evosuite.testcase.statements.ArrayStatement@ca729c81 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [Ljava.lang.String;
statement code is: String[] stringArray = new String[2]
statement is: de.progra.charting.model.DefaultChartDataModel([[D[D[Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.progra.charting.model.DefaultChartDataModel
statement code is: DefaultChartDataModel defaultChartDataModel = new DefaultChartDataModel(arg0, arg1, arg2)
statement is: de.progra.charting.CoordSystem(Lde/progra/charting/model/ChartDataModel;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.progra.charting.CoordSystem
statement code is: CoordSystem coordSystem = new CoordSystem(arg0)
statement is: org.evosuite.testcase.statements.FieldStatement@23e1a059 type is: class org.evosuite.testcase.statements.FieldStatement return type class de.progra.charting.CoordSystemUtilities
statement code is: CoordSystemUtilities coordSystemUtilities = coordSystem.c
statement is: getYAxisLine2D()Ljava/awt/geom/Line2D; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.awt.geom.Line2D
statement code is: Line2D yAxisLine2D = coordSystemUtilities.getYAxisLine2D()
test data is: double[][] doubleArray = new double[1][1];
double[] doubleArray = new double[2];
doubleArray[0] = 0.1;
doubleArray[1] = 64.0;
String[] stringArray = new String[2];
DefaultChartDataModel defaultChartDataModel = new DefaultChartDataModel(doubleArray, doubleArray, stringArray);
CoordSystem coordSystem = new CoordSystem(defaultChartDataModel);
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
coordSystemUtilities.getYAxisLine2D();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        double[][] doubleArray = new double[1][1];
        doubleArray[0][0] = 3.14;
        double[] doubleArray = new double[2];
        doubleArray[0] = 0.1;
        doubleArray[1] = 64.0;
        String[] stringArray = new String[2];
        stringArray[0] = "Hello";
        stringArray[1] = "World";
        DefaultChartDataModel defaultChartDataModel = new DefaultChartDataModel(doubleArray, doubleArray, stringArray);
        CoordSystem coordSystem = new CoordSystem(defaultChartDataModel);
        CoordSystemUtilities coordSystemUtilities = coordSystem.getCoordinateSystemUtilities();
        coordSystemUtilities.getYAxisLine2D();
    }
}
statement is: double[][] doubleArray = new double[1][1], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [1, 1] Ct is: double[][] doubleArray = new double[1][1] isAssignment: false Array: new double[1][1] Elements: []
lengths: [1, 1] [1, 1]
Their type are: class [[D double[][]
statement is: doubleArray[0][0] = 3.14, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : doubleArray[0][0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl double Assignment:3.14 Ct is: doubleArray[0][0] = 3.14
target : doubleArray[0] class spoon.support.reflect.code.CtLiteralImpl
statement is: double[] doubleArray = new double[2], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [2] Ct is: double[][] doubleArray = new double[1][1] isAssignment: false Array: new double[2] Elements: []
lengths: [1, 1] [2]
Dimension: [2] Ct is: double[] doubleArray = new double[2] isAssignment: false Array: new double[2] Elements: []
lengths: [2] [2]
Their type are: class [D double[]
statement is: doubleArray[0] = 0.1, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : doubleArray[0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl double Assignment:0.1 Ct is: doubleArray[0] = 0.1
target : doubleArray class spoon.support.reflect.code.CtLiteralImpl
statement is: doubleArray[1] = 64.0, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : doubleArray[1] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl double Assignment:64.0 Ct is: doubleArray[1] = 64.0
target : doubleArray class spoon.support.reflect.code.CtLiteralImpl
statement is: String[] stringArray = new String[2], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [2] Ct is: double[][] doubleArray = new double[1][1] isAssignment: false Array: new String[2] Elements: []
lengths: [1, 1] [2]
Dimension: [2] Ct is: double[] doubleArray = new double[2] isAssignment: false Array: new String[2] Elements: []
lengths: [2] [2]
Their type are: class [D String[]
Dimension: [2] Ct is: String[] stringArray = new String[2] isAssignment: false Array: new String[2] Elements: []
lengths: [2] [2]
Their type are: class [Ljava.lang.String; String[]
statement is: stringArray[0] = "Hello", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"Hello" Ct is: stringArray[0] = "Hello"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[1] = "World", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[1] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"World" Ct is: stringArray[1] = "World"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: DefaultChartDataModel defaultChartDataModel = new DefaultChartDataModel(doubleArray, doubleArray, stringArray), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: CoordSystem coordSystem = new CoordSystem(defaultChartDataModel), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: CoordSystemUtilities coordSystemUtilities = coordSystem.getCoordinateSystemUtilities(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: coordSystem.getCoordinateSystemUtilities() target is: coordSystem method is: getCoordinateSystemUtilities()
statement is: coordSystemUtilities.getYAxisLine2D(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: coordSystemUtilities.getYAxisLine2D() target is: coordSystemUtilities method is: getYAxisLine2D()
TestCase is: double[][] doubleArray = new double[1][1];
double[] doubleArray = new double[2];
double _double = 0.1;
doubleArray[0] = _double;
double _double = 64.0;
doubleArray[1] = _double;
String[] stringArray = new String[2];
DefaultChartDataModel defaultChartDataModel = new DefaultChartDataModel((double[][]) doubleArray, doubleArray, stringArray);
CoordSystem coordSystem = new CoordSystem(defaultChartDataModel);

statement is: de.progra.charting.model.EditableChartDataModel()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.progra.charting.model.EditableChartDataModel
statement code is: EditableChartDataModel editableChartDataModel = new EditableChartDataModel()
statement is: de.progra.charting.CoordSystem(Lde/progra/charting/model/ChartDataModel;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.progra.charting.CoordSystem
statement code is: CoordSystem coordSystem = new CoordSystem(arg0)
statement is: org.evosuite.testcase.statements.FieldStatement@7b6b8452 type is: class org.evosuite.testcase.statements.FieldStatement return type class de.progra.charting.CoordSystemUtilities
statement code is: CoordSystemUtilities coordSystemUtilities = coordSystem.c
statement is: setMaximumColumnValue(D)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: editableChartDataModel.setMaximumColumnValue((-674.7305))
statement is: setManualScale(Z)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: editableChartDataModel.setManualScale(true)
statement is: getYAxisLine2D()Ljava/awt/geom/Line2D; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.awt.geom.Line2D
statement code is: Line2D yAxisLine2D = coordSystemUtilities.getYAxisLine2D()
test data is: EditableChartDataModel editableChartDataModel = new EditableChartDataModel();
CoordSystem coordSystem = new CoordSystem(editableChartDataModel);
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
editableChartDataModel.setMaximumColumnValue((-674.7305));
editableChartDataModel.setManualScale(true);
coordSystemUtilities.getYAxisLine2D();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        EditableChartDataModel editableChartDataModel = new EditableChartDataModel();
        CoordSystem coordSystem = new CoordSystem(editableChartDataModel);
        CoordSystemUtilities coordSystemUtilities = coordSystem.c;
        editableChartDataModel.setMaximumColumnValue(-674.7305);// improved: set a more realistic maximum column value

        editableChartDataModel.setManualScale(true);// improved: use a boolean value of true instead of the string "true"

        coordSystemUtilities.getYAxisLine2D();
    }
}
statement is: EditableChartDataModel editableChartDataModel = new EditableChartDataModel(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: CoordSystem coordSystem = new CoordSystem(editableChartDataModel), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: CoordSystemUtilities coordSystemUtilities = coordSystem.c, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: coordSystem.c is coordSystem
CtField is: protected de.progra.charting.CoordSystemUtilities de.progra.charting.CoordSystem.c CoordSystemUtilities c
statement is: editableChartDataModel.setMaximumColumnValue(-674.7305)// improved: set a more realistic maximum column value
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: editableChartDataModel.setMaximumColumnValue(-674.7305)// improved: set a more realistic maximum column value
 target is: editableChartDataModel method is: setMaximumColumnValue(double)
source statement: de.progra.charting.model.EditableChartDataModel()V callee: VariableReference: Statement 0, type de.progra.charting.model.EditableChartDataModelindex is: 0
Matched Method is: setMaximumColumnValue(D)V
i 0 Parameters size() 0 Num of Method Parameters: 1
statement is: editableChartDataModel.setManualScale(true)// improved: use a boolean value of true instead of the string "true"
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: editableChartDataModel.setManualScale(true)// improved: use a boolean value of true instead of the string "true"
 target is: editableChartDataModel method is: setManualScale(boolean)
source statement: de.progra.charting.model.EditableChartDataModel()V callee: VariableReference: Statement 0, type de.progra.charting.model.EditableChartDataModelindex is: 0
Matched Method is: setManualScale(Z)V
statement is: coordSystemUtilities.getYAxisLine2D(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: coordSystemUtilities.getYAxisLine2D() target is: coordSystemUtilities method is: getYAxisLine2D()
TestCase is: EditableChartDataModel editableChartDataModel = new EditableChartDataModel();
CoordSystem coordSystem = new CoordSystem(editableChartDataModel);
double _double = null;
editableChartDataModel.setMaximumColumnValue(_double);
boolean _boolean = true;
editableChartDataModel.setManualScale(_boolean);

statement is: de.progra.charting.model.DefaultChartDataModel()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.progra.charting.model.DefaultChartDataModel
statement code is: DefaultChartDataModel defaultChartDataModel = new DefaultChartDataModel()
statement is: de.progra.charting.CoordSystem(Lde/progra/charting/model/ChartDataModel;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.progra.charting.CoordSystem
statement code is: CoordSystem coordSystem = new CoordSystem(arg0)
statement is: org.evosuite.testcase.statements.FieldStatement@5af1fe00 type is: class org.evosuite.testcase.statements.FieldStatement return type class de.progra.charting.CoordSystemUtilities
statement code is: CoordSystemUtilities coordSystemUtilities = coordSystem.c
statement is: setMaximumColumnValue(D)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: defaultChartDataModel.setMaximumColumnValue((-674.7305))
statement is: getChartDataModelConstraints(I)Lde/progra/charting/model/ChartDataModelConstraints; type is: class org.evosuite.testcase.statements.MethodStatement return type class de.progra.charting.model.DefaultChartDataModelConstraints
statement code is: DefaultChartDataModelConstraints chartDataModelConstraints = (DefaultChartDataModelConstraints)coordSystem.getChartDataModelConstraints(1)
statement is: de.progra.charting.Axis(ILde/progra/charting/model/ChartDataModelConstraints;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.progra.charting.Axis
statement code is: Axis axis = new Axis(0, arg1)
statement is: org.evosuite.testcase.statements.AssignmentStatement@4d57f18f type is: class org.evosuite.testcase.statements.AssignmentStatement return type class de.progra.charting.Axis
statement code is: coordSystem.yaxis2 = axis
statement is: setManualScale(Z)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: defaultChartDataModel.setManualScale(true)
statement is: getYAxisLine2D()Ljava/awt/geom/Line2D; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.awt.geom.Line2D
statement code is: Line2D yAxisLine2D = coordSystemUtilities.getYAxisLine2D()
test data is: DefaultChartDataModel defaultChartDataModel = new DefaultChartDataModel();
CoordSystem coordSystem = new CoordSystem(defaultChartDataModel);
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
defaultChartDataModel.setMaximumColumnValue((-674.7305));
DefaultChartDataModelConstraints chartDataModelConstraints = (DefaultChartDataModelConstraints)coordSystem.getChartDataModelConstraints(1);
Axis axis = new Axis(0, chartDataModelConstraints);
coordSystem.yaxis2 = axis;
defaultChartDataModel.setManualScale(true);
coordSystemUtilities.getYAxisLine2D();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        DefaultChartDataModel defaultChartDataModel = new DefaultChartDataModel();
        CoordSystem coordSystem = new CoordSystem(defaultChartDataModel);
        CoordSystemUtilities coordSystemUtilities = coordSystem.c;
        // Improved test data:
        defaultChartDataModel.setMaximumColumnValue(-674.7305);
        DefaultChartDataModelConstraints chartDataModelConstraints = ((DefaultChartDataModelConstraints) (coordSystem.getChartDataModelConstraints(1)));
        Axis axis = new Axis(0, chartDataModelConstraints);
        coordSystem.yaxis2 = axis;
        defaultChartDataModel.setManualScale(true);
        coordSystemUtilities.getYAxisLine2D();
    }
}
statement is: DefaultChartDataModel defaultChartDataModel = new DefaultChartDataModel(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: CoordSystem coordSystem = new CoordSystem(defaultChartDataModel), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: CoordSystemUtilities coordSystemUtilities = coordSystem.c, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: coordSystem.c is coordSystem
CtField is: protected de.progra.charting.CoordSystemUtilities de.progra.charting.CoordSystem.c CoordSystemUtilities c
statement is: // Improved test data:
defaultChartDataModel.setMaximumColumnValue(-674.7305), class spoon.support.reflect.code.CtInvocationImpl
invocation is: // Improved test data:
defaultChartDataModel.setMaximumColumnValue(-674.7305) target is: defaultChartDataModel method is: setMaximumColumnValue(double)
source statement: de.progra.charting.model.DefaultChartDataModel()V callee: VariableReference: Statement 0, type de.progra.charting.model.DefaultChartDataModelindex is: 0
Matched Method is: setMaximumColumnValue(D)V
i 0 Parameters size() 0 Num of Method Parameters: 1
statement is: DefaultChartDataModelConstraints chartDataModelConstraints = ((DefaultChartDataModelConstraints) (coordSystem.getChartDataModelConstraints(1))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: ((DefaultChartDataModelConstraints) (coordSystem.getChartDataModelConstraints(1))) target is: coordSystem method is: getChartDataModelConstraints(int)
source statement: de.progra.charting.CoordSystem(Lde/progra/charting/model/ChartDataModel;)V callee: VariableReference: Statement 1, type de.progra.charting.CoordSystemindex is: 1
Matched Method is: getChartDataModelConstraints(I)Lde/progra/charting/model/ChartDataModelConstraints;
statement is: Axis axis = new Axis(0, chartDataModelConstraints), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: coordSystem.yaxis2 = axis, class spoon.support.reflect.code.CtAssignmentImpl
statement is: defaultChartDataModel.setManualScale(true), class spoon.support.reflect.code.CtInvocationImpl
invocation is: defaultChartDataModel.setManualScale(true) target is: defaultChartDataModel method is: setManualScale(boolean)
source statement: de.progra.charting.model.DefaultChartDataModel()V callee: VariableReference: Statement 0, type de.progra.charting.model.DefaultChartDataModelindex is: 0
Matched Method is: setManualScale(Z)V
statement is: coordSystemUtilities.getYAxisLine2D(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: coordSystemUtilities.getYAxisLine2D() target is: coordSystemUtilities method is: getYAxisLine2D()
TestCase is: DefaultChartDataModel defaultChartDataModel = new DefaultChartDataModel();
CoordSystem coordSystem = new CoordSystem(defaultChartDataModel);
double _double = null;
defaultChartDataModel.setMaximumColumnValue(_double);
int _int = 1;
DefaultChartDataModelConstraints chartDataModelConstraints = (DefaultChartDataModelConstraints)coordSystem.getChartDataModelConstraints(_int);
int _int = 0;
Axis axis = new Axis(_int, chartDataModelConstraints);
boolean _boolean = true;
defaultChartDataModel.setManualScale(_boolean);

statement is: de.progra.charting.model.ObjectChartDataModel()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.progra.charting.model.ObjectChartDataModel
statement code is: ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel()
statement is: de.progra.charting.CoordSystem(Lde/progra/charting/model/ChartDataModel;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.progra.charting.CoordSystem
statement code is: CoordSystem coordSystem = new CoordSystem(arg0)
statement is: org.evosuite.testcase.statements.FieldStatement@53073449 type is: class org.evosuite.testcase.statements.FieldStatement return type class de.progra.charting.CoordSystemUtilities
statement code is: CoordSystemUtilities coordSystemUtilities = coordSystem.c
statement is: computeXAxisLabelHeight()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int computeXAxisLabelHeight = coordSystemUtilities.computeXAxisLabelHeight()
test data is: ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel();
CoordSystem coordSystem = new CoordSystem(objectChartDataModel);
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
coordSystemUtilities.computeXAxisLabelHeight();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel();
        objectChartDataModel.setTitle("Sales Figures for the Past Year");
        objectChartDataModel.setSubtitle("Purchases made by customers in the past year");
        objectChartDataModel.setXAxisLabel("Date of Purchase");
        objectChartDataModel.setYAxisLabel("Total Sales Amount in US Dollars");
        objectChartDataModel.setLegendEnabled(false);
        objectChartDataModel.setBackgroundColor(GRAY);
        coordSystem = new CoordSystem(objectChartDataModel);
        coordSystemUtilities = coordSystem.c;
        coordSystemUtilities.computeXAxisLabelHeight();
    }
}
statement is: ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: objectChartDataModel.setTitle("Sales Figures for the Past Year"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: objectChartDataModel.setTitle("Sales Figures for the Past Year") target is: objectChartDataModel method is: setTitle(java.lang.String)
statement is: objectChartDataModel.setSubtitle("Purchases made by customers in the past year"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: objectChartDataModel.setSubtitle("Purchases made by customers in the past year") target is: objectChartDataModel method is: setSubtitle(java.lang.String)
statement is: objectChartDataModel.setXAxisLabel("Date of Purchase"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: objectChartDataModel.setXAxisLabel("Date of Purchase") target is: objectChartDataModel method is: setXAxisLabel(java.lang.String)
statement is: objectChartDataModel.setYAxisLabel("Total Sales Amount in US Dollars"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: objectChartDataModel.setYAxisLabel("Total Sales Amount in US Dollars") target is: objectChartDataModel method is: setYAxisLabel(java.lang.String)
statement is: objectChartDataModel.setLegendEnabled(false), class spoon.support.reflect.code.CtInvocationImpl
invocation is: objectChartDataModel.setLegendEnabled(false) target is: objectChartDataModel method is: setLegendEnabled(boolean)
statement is: objectChartDataModel.setBackgroundColor(GRAY), class spoon.support.reflect.code.CtInvocationImpl
invocation is: objectChartDataModel.setBackgroundColor(GRAY) target is: objectChartDataModel method is: setBackgroundColor()
statement is: coordSystem = new CoordSystem(objectChartDataModel), class spoon.support.reflect.code.CtAssignmentImpl
statement is: coordSystemUtilities = coordSystem.c, class spoon.support.reflect.code.CtAssignmentImpl
statement is: coordSystemUtilities.computeXAxisLabelHeight(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: coordSystemUtilities.computeXAxisLabelHeight() target is: coordSystemUtilities method is: computeXAxisLabelHeight()
TestCase is: ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel();

statement is: de.progra.charting.model.ObjectChartDataModel()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.progra.charting.model.ObjectChartDataModel
statement code is: ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel()
statement is: de.progra.charting.CoordSystem(Lde/progra/charting/model/ChartDataModel;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.progra.charting.CoordSystem
statement code is: CoordSystem coordSystem = new CoordSystem(arg0)
statement is: org.evosuite.testcase.statements.FieldStatement@558240ae type is: class org.evosuite.testcase.statements.FieldStatement return type class de.progra.charting.CoordSystemUtilities
statement code is: CoordSystemUtilities coordSystemUtilities = coordSystem.c
statement is: computeYAxisLabelWidth()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int computeYAxisLabelWidth = coordSystemUtilities.computeYAxisLabelWidth()
test data is: ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel();
CoordSystem coordSystem = new CoordSystem(objectChartDataModel);
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
coordSystemUtilities.computeYAxisLabelWidth();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel();
        objectChartDataModel.setXAxisLabel("Age");
        objectChartDataModel.setYAxisLabel("Height (inches)");
        CoordSystem coordSystem = new CoordSystem(objectChartDataModel);
        coordSystem.setWidth(800);
        coordSystem.setHeight(600);
        coordSystem.setMargin(50);
        CoordSystemUtilities coordSystemUtilities = coordSystem.c;
        coordSystemUtilities.computeYAxisLabelWidth();
        // Add some data points to the chart
        objectChartDataModel.addDataPoint("Jane", 18, 64);
        objectChartDataModel.addDataPoint("John", 25, 72);
        objectChartDataModel.addDataPoint("Bob", 32, 69);
    }
}
statement is: ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: objectChartDataModel.setXAxisLabel("Age"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: objectChartDataModel.setXAxisLabel("Age") target is: objectChartDataModel method is: setXAxisLabel(java.lang.String)
statement is: objectChartDataModel.setYAxisLabel("Height (inches)"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: objectChartDataModel.setYAxisLabel("Height (inches)") target is: objectChartDataModel method is: setYAxisLabel(java.lang.String)
statement is: CoordSystem coordSystem = new CoordSystem(objectChartDataModel), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: coordSystem.setWidth(800), class spoon.support.reflect.code.CtInvocationImpl
invocation is: coordSystem.setWidth(800) target is: coordSystem method is: setWidth(int)
statement is: coordSystem.setHeight(600), class spoon.support.reflect.code.CtInvocationImpl
invocation is: coordSystem.setHeight(600) target is: coordSystem method is: setHeight(int)
statement is: coordSystem.setMargin(50), class spoon.support.reflect.code.CtInvocationImpl
invocation is: coordSystem.setMargin(50) target is: coordSystem method is: setMargin(int)
statement is: CoordSystemUtilities coordSystemUtilities = coordSystem.c, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: coordSystem.c is coordSystem
CtField is: protected de.progra.charting.CoordSystemUtilities de.progra.charting.CoordSystem.c CoordSystemUtilities c
statement is: coordSystemUtilities.computeYAxisLabelWidth(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: coordSystemUtilities.computeYAxisLabelWidth() target is: coordSystemUtilities method is: computeYAxisLabelWidth()
statement is: // Add some data points to the chart
objectChartDataModel.addDataPoint("Jane", 18, 64), class spoon.support.reflect.code.CtInvocationImpl
invocation is: // Add some data points to the chart
objectChartDataModel.addDataPoint("Jane", 18, 64) target is: objectChartDataModel method is: addDataPoint(java.lang.String,int,int)
statement is: objectChartDataModel.addDataPoint("John", 25, 72), class spoon.support.reflect.code.CtInvocationImpl
invocation is: objectChartDataModel.addDataPoint("John", 25, 72) target is: objectChartDataModel method is: addDataPoint(java.lang.String,int,int)
statement is: objectChartDataModel.addDataPoint("Bob", 32, 69), class spoon.support.reflect.code.CtInvocationImpl
invocation is: objectChartDataModel.addDataPoint("Bob", 32, 69) target is: objectChartDataModel method is: addDataPoint(java.lang.String,int,int)
TestCase is: ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel();
CoordSystem coordSystem = new CoordSystem(objectChartDataModel);

statement is: de.progra.charting.model.ObjectChartDataModel()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.progra.charting.model.ObjectChartDataModel
statement code is: ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel()
statement is: de.progra.charting.CoordSystem(Lde/progra/charting/model/ChartDataModel;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.progra.charting.CoordSystem
statement code is: CoordSystem coordSystem = new CoordSystem(arg0)
statement is: org.evosuite.testcase.statements.FieldStatement@322bd83b type is: class org.evosuite.testcase.statements.FieldStatement return type class de.progra.charting.CoordSystemUtilities
statement code is: CoordSystemUtilities coordSystemUtilities = coordSystem.c
statement is: getXAxisLine2D()Ljava/awt/geom/Line2D; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.awt.geom.Line2D
statement code is: Line2D xAxisLine2D = coordSystemUtilities.getXAxisLine2D()
test data is: ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel();
CoordSystem coordSystem = new CoordSystem(objectChartDataModel);
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
coordSystemUtilities.getXAxisLine2D();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel();
        CoordSystem coordSystem = new CoordSystem(objectChartDataModel);
        CoordSystemUtilities coordSystemUtilities = coordSystem.c;
        coordSystemUtilities.getXAxisLine2D("Customer Name", "Sales", 100, "red");
    }
}
statement is: ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: CoordSystem coordSystem = new CoordSystem(objectChartDataModel), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: CoordSystemUtilities coordSystemUtilities = coordSystem.c, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: coordSystem.c is coordSystem
CtField is: protected de.progra.charting.CoordSystemUtilities de.progra.charting.CoordSystem.c CoordSystemUtilities c
statement is: coordSystemUtilities.getXAxisLine2D("Customer Name", "Sales", 100, "red"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: coordSystemUtilities.getXAxisLine2D("Customer Name", "Sales", 100, "red") target is: coordSystemUtilities method is: getXAxisLine2D(java.lang.String,java.lang.String,int,java.lang.String)
TestCase is: ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel();
CoordSystem coordSystem = new CoordSystem(objectChartDataModel);

statement is: de.progra.charting.model.ObjectChartDataModel()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.progra.charting.model.ObjectChartDataModel
statement code is: ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel()
statement is: de.progra.charting.CoordSystem(Lde/progra/charting/model/ChartDataModel;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.progra.charting.CoordSystem
statement code is: CoordSystem coordSystem = new CoordSystem(arg0)
statement is: org.evosuite.testcase.statements.FieldStatement@21cbd28c type is: class org.evosuite.testcase.statements.FieldStatement return type class de.progra.charting.CoordSystemUtilities
statement code is: CoordSystemUtilities coordSystemUtilities = coordSystem.c
statement is: computeRightMargin()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int computeRightMargin = coordSystemUtilities.computeRightMargin()
test data is: ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel();
CoordSystem coordSystem = new CoordSystem(objectChartDataModel);
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
coordSystemUtilities.computeRightMargin();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel();
        objectChartDataModel.setXAxisMinValue(-50);// Minimum value for the X-axis

        objectChartDataModel.setXAxisMaxValue(50);// Maximum value for the X-axis

        objectChartDataModel.setYAxisMinValue(-100);// Minimum value for the Y-axis

        objectChartDataModel.setYAxisMaxValue(100);// Maximum value for the Y-axis

        CoordSystem coordSystem = new CoordSystem(objectChartDataModel);
        CoordSystemUtilities coordSystemUtilities = coordSystem.c;
        coordSystemUtilities.computeRightMargin();
    }
}
statement is: ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: objectChartDataModel.setXAxisMinValue(-50)// Minimum value for the X-axis
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: objectChartDataModel.setXAxisMinValue(-50)// Minimum value for the X-axis
 target is: objectChartDataModel method is: setXAxisMinValue(int)
statement is: objectChartDataModel.setXAxisMaxValue(50)// Maximum value for the X-axis
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: objectChartDataModel.setXAxisMaxValue(50)// Maximum value for the X-axis
 target is: objectChartDataModel method is: setXAxisMaxValue(int)
statement is: objectChartDataModel.setYAxisMinValue(-100)// Minimum value for the Y-axis
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: objectChartDataModel.setYAxisMinValue(-100)// Minimum value for the Y-axis
 target is: objectChartDataModel method is: setYAxisMinValue(int)
statement is: objectChartDataModel.setYAxisMaxValue(100)// Maximum value for the Y-axis
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: objectChartDataModel.setYAxisMaxValue(100)// Maximum value for the Y-axis
 target is: objectChartDataModel method is: setYAxisMaxValue(int)
statement is: CoordSystem coordSystem = new CoordSystem(objectChartDataModel), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: CoordSystemUtilities coordSystemUtilities = coordSystem.c, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: coordSystem.c is coordSystem
CtField is: protected de.progra.charting.CoordSystemUtilities de.progra.charting.CoordSystem.c CoordSystemUtilities c
statement is: coordSystemUtilities.computeRightMargin(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: coordSystemUtilities.computeRightMargin() target is: coordSystemUtilities method is: computeRightMargin()
TestCase is: ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel();
CoordSystem coordSystem = new CoordSystem(objectChartDataModel);

statement is: de.progra.charting.model.ObjectChartDataModel()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.progra.charting.model.ObjectChartDataModel
statement code is: ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel()
statement is: de.progra.charting.CoordSystem(Lde/progra/charting/model/ChartDataModel;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.progra.charting.CoordSystem
statement code is: CoordSystem coordSystem = new CoordSystem(arg0)
statement is: org.evosuite.testcase.statements.FieldStatement@5f91698e type is: class org.evosuite.testcase.statements.FieldStatement return type class de.progra.charting.CoordSystemUtilities
statement code is: CoordSystemUtilities coordSystemUtilities = coordSystem.c
statement is: computeTopMargin()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int computeTopMargin = coordSystemUtilities.computeTopMargin()
test data is: ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel();
CoordSystem coordSystem = new CoordSystem(objectChartDataModel);
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
coordSystemUtilities.computeTopMargin();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel();
        objectChartDataModel.setTitle("CPU Utilization");
        objectChartDataModel.setXAxisLabel("Time (HH:MM)");
        objectChartDataModel.setYAxisLabel("CPU Usage (%)");
        CoordSystem coordSystem = new CoordSystem(objectChartDataModel);
        coordSystem.setTopMargin(0.1);
        CoordSystemUtilities coordSystemUtilities = coordSystem.c;
        coordSystemUtilities.computeTopMargin();
    }
}
statement is: ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: objectChartDataModel.setTitle("CPU Utilization"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: objectChartDataModel.setTitle("CPU Utilization") target is: objectChartDataModel method is: setTitle(java.lang.String)
statement is: objectChartDataModel.setXAxisLabel("Time (HH:MM)"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: objectChartDataModel.setXAxisLabel("Time (HH:MM)") target is: objectChartDataModel method is: setXAxisLabel(java.lang.String)
statement is: objectChartDataModel.setYAxisLabel("CPU Usage (%)"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: objectChartDataModel.setYAxisLabel("CPU Usage (%)") target is: objectChartDataModel method is: setYAxisLabel(java.lang.String)
statement is: CoordSystem coordSystem = new CoordSystem(objectChartDataModel), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: coordSystem.setTopMargin(0.1), class spoon.support.reflect.code.CtInvocationImpl
invocation is: coordSystem.setTopMargin(0.1) target is: coordSystem method is: setTopMargin(double)
statement is: CoordSystemUtilities coordSystemUtilities = coordSystem.c, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: coordSystem.c is coordSystem
CtField is: protected de.progra.charting.CoordSystemUtilities de.progra.charting.CoordSystem.c CoordSystemUtilities c
statement is: coordSystemUtilities.computeTopMargin(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: coordSystemUtilities.computeTopMargin() target is: coordSystemUtilities method is: computeTopMargin()
TestCase is: ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel();
CoordSystem coordSystem = new CoordSystem(objectChartDataModel);

statement is: de.progra.charting.model.EditableChartDataModel()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.progra.charting.model.EditableChartDataModel
statement code is: EditableChartDataModel editableChartDataModel = new EditableChartDataModel()
statement is: de.progra.charting.CoordSystem(Lde/progra/charting/model/ChartDataModel;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.progra.charting.CoordSystem
statement code is: CoordSystem coordSystem = new CoordSystem(arg0)
statement is: org.evosuite.testcase.statements.FieldStatement@12a2a5b9 type is: class org.evosuite.testcase.statements.FieldStatement return type class de.progra.charting.CoordSystemUtilities
statement code is: CoordSystemUtilities coordSystemUtilities = coordSystem.c
statement is: setMaximumColumnValue(D)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: editableChartDataModel.setMaximumColumnValue((-668.9678238285366))
statement is: setManualScale(Z)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: editableChartDataModel.setManualScale(true)
statement is: computeXAxisLabelHeight()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int computeXAxisLabelHeight = coordSystemUtilities.computeXAxisLabelHeight()
test data is: EditableChartDataModel editableChartDataModel = new EditableChartDataModel();
CoordSystem coordSystem = new CoordSystem(editableChartDataModel);
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
editableChartDataModel.setMaximumColumnValue((-668.9678238285366));
editableChartDataModel.setManualScale(true);
coordSystemUtilities.computeXAxisLabelHeight();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        EditableChartDataModel editableChartDataModel = new EditableChartDataModel();
        CoordSystem coordSystem = new CoordSystem(editableChartDataModel);
        CoordSystemUtilities coordSystemUtilities = coordSystem.c;
        editableChartDataModel.setMaximumColumnValue(-1000.0);
        editableChartDataModel.setManualScale(false);
        coordSystemUtilities.computeXAxisLabelHeight();
    }
}
statement is: EditableChartDataModel editableChartDataModel = new EditableChartDataModel(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: CoordSystem coordSystem = new CoordSystem(editableChartDataModel), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: CoordSystemUtilities coordSystemUtilities = coordSystem.c, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: coordSystem.c is coordSystem
CtField is: protected de.progra.charting.CoordSystemUtilities de.progra.charting.CoordSystem.c CoordSystemUtilities c
statement is: editableChartDataModel.setMaximumColumnValue(-1000.0), class spoon.support.reflect.code.CtInvocationImpl
invocation is: editableChartDataModel.setMaximumColumnValue(-1000.0) target is: editableChartDataModel method is: setMaximumColumnValue(double)
source statement: de.progra.charting.model.EditableChartDataModel()V callee: VariableReference: Statement 0, type de.progra.charting.model.EditableChartDataModelindex is: 0
Matched Method is: setMaximumColumnValue(D)V
i 0 Parameters size() 0 Num of Method Parameters: 1
statement is: editableChartDataModel.setManualScale(false), class spoon.support.reflect.code.CtInvocationImpl
invocation is: editableChartDataModel.setManualScale(false) target is: editableChartDataModel method is: setManualScale(boolean)
source statement: de.progra.charting.model.EditableChartDataModel()V callee: VariableReference: Statement 0, type de.progra.charting.model.EditableChartDataModelindex is: 0
Matched Method is: setManualScale(Z)V
statement is: coordSystemUtilities.computeXAxisLabelHeight(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: coordSystemUtilities.computeXAxisLabelHeight() target is: coordSystemUtilities method is: computeXAxisLabelHeight()
TestCase is: EditableChartDataModel editableChartDataModel = new EditableChartDataModel();
CoordSystem coordSystem = new CoordSystem(editableChartDataModel);
double _double = null;
editableChartDataModel.setMaximumColumnValue(_double);
boolean _boolean = false;
editableChartDataModel.setManualScale(_boolean);

statement is: de.progra.charting.model.ObjectChartDataModel()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.progra.charting.model.ObjectChartDataModel
statement code is: ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel()
statement is: de.progra.charting.CoordSystem(Lde/progra/charting/model/ChartDataModel;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.progra.charting.CoordSystem
statement code is: CoordSystem coordSystem = new CoordSystem(arg0)
statement is: javax.swing.text.StyleContext()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class javax.swing.text.StyleContext
statement code is: StyleContext styleContext = new StyleContext()
statement is: getFont(Ljava/lang/String;II)Ljava/awt/Font; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.awt.Font
statement code is: Font font = styleContext.getFont("/kqd-", (-1), (-715827883))
statement is: setFont(Ljava/awt/Font;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: coordSystem.setFont(arg0)
statement is: org.evosuite.testcase.statements.FieldStatement@60ae7ae type is: class org.evosuite.testcase.statements.FieldStatement return type class de.progra.charting.CoordSystemUtilities
statement code is: CoordSystemUtilities coordSystemUtilities = coordSystem.c
statement is: computeYAxisLabelWidth()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int computeYAxisLabelWidth = coordSystemUtilities.computeYAxisLabelWidth()
test data is: ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel();
CoordSystem coordSystem = new CoordSystem(objectChartDataModel);
StyleContext styleContext = new StyleContext();
Font font = styleContext.getFont("/kqd-", (-1), (-715827883));
coordSystem.setFont(font);
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
coordSystemUtilities.computeYAxisLabelWidth();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel();
        objectChartDataModel.setTitle("Monthly Sales");
        objectChartDataModel.setSubtitle("Sales of different products in January 2023");
        objectChartDataModel.addSeries("Smartphones", new int[]{ 500, 800, 1000, 1200, 1500 });
        objectChartDataModel.addSeries("Laptops", new int[]{ 2000, 4000, 6000, 8000, 10000 });
        coordSystem.setFont(new Font("Arial", Font.PLAIN, 12));
        coordSystemUtilities.computeYAxisLabelWidth();
    }
}
statement is: ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: objectChartDataModel.setTitle("Monthly Sales"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: objectChartDataModel.setTitle("Monthly Sales") target is: objectChartDataModel method is: setTitle(java.lang.String)
statement is: objectChartDataModel.setSubtitle("Sales of different products in January 2023"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: objectChartDataModel.setSubtitle("Sales of different products in January 2023") target is: objectChartDataModel method is: setSubtitle(java.lang.String)
statement is: objectChartDataModel.addSeries("Smartphones", new int[]{ 500, 800, 1000, 1200, 1500 }), class spoon.support.reflect.code.CtInvocationImpl
invocation is: objectChartDataModel.addSeries("Smartphones", new int[]{ 500, 800, 1000, 1200, 1500 }) target is: objectChartDataModel method is: addSeries(java.lang.String,int[])
statement is: objectChartDataModel.addSeries("Laptops", new int[]{ 2000, 4000, 6000, 8000, 10000 }), class spoon.support.reflect.code.CtInvocationImpl
invocation is: objectChartDataModel.addSeries("Laptops", new int[]{ 2000, 4000, 6000, 8000, 10000 }) target is: objectChartDataModel method is: addSeries(java.lang.String,int[])
statement is: coordSystem.setFont(new Font("Arial", Font.PLAIN, 12)), class spoon.support.reflect.code.CtInvocationImpl
invocation is: coordSystem.setFont(new Font("Arial", Font.PLAIN, 12)) target is: coordSystem method is: setFont(Font)
statement is: coordSystemUtilities.computeYAxisLabelWidth(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: coordSystemUtilities.computeYAxisLabelWidth() target is: coordSystemUtilities method is: computeYAxisLabelWidth()
TestCase is: ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel();

statement is: de.progra.charting.model.ObjectChartDataModel()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.progra.charting.model.ObjectChartDataModel
statement code is: ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel()
statement is: de.progra.charting.CoordSystem(Lde/progra/charting/model/ChartDataModel;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.progra.charting.CoordSystem
statement code is: CoordSystem coordSystem = new CoordSystem(arg0)
statement is: org.evosuite.testcase.statements.FieldStatement@38692541 type is: class org.evosuite.testcase.statements.FieldStatement return type class de.progra.charting.CoordSystemUtilities
statement code is: CoordSystemUtilities coordSystemUtilities = coordSystem.c
statement is: org.evosuite.testcase.statements.ArrayStatement@7b2e0ec3 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [D
statement code is: double[] doubleArray = new double[4]
statement is: java.awt.geom.AffineTransform([D)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.awt.geom.AffineTransform
statement code is: AffineTransform affineTransform = new AffineTransform(arg0)
statement is: org.evosuite.testcase.statements.AssignmentStatement@a061224c type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.awt.geom.AffineTransform
statement code is: coordSystem.y2transform = affineTransform
statement is: getSecondYAxisLine2D()Ljava/awt/geom/Line2D; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.awt.geom.Line2D$Double
statement code is: Line2D.Double secondYAxisLine2D = (Line2D.Double)coordSystemUtilities.getSecondYAxisLine2D()
test data is: ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel();
CoordSystem coordSystem = new CoordSystem(objectChartDataModel);
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
double[] doubleArray = new double[4];
AffineTransform affineTransform = new AffineTransform(doubleArray);
coordSystem.y2transform = affineTransform;
coordSystemUtilities.getSecondYAxisLine2D();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel();
        CoordSystem coordSystem = new CoordSystem(objectChartDataModel);
        CoordSystemUtilities coordSystemUtilities = coordSystem.c;
        double[] doubleArray = new double[]{ 1.2, 3.4, 5.6, 7.8 };
        AffineTransform affineTransform = new AffineTransform(doubleArray);
        coordSystem.y2transform = affineTransform;
        coordSystemUtilities.getSecondYAxisLine2D();
    }
}
statement is: ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: CoordSystem coordSystem = new CoordSystem(objectChartDataModel), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: CoordSystemUtilities coordSystemUtilities = coordSystem.c, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: coordSystem.c is coordSystem
CtField is: protected de.progra.charting.CoordSystemUtilities de.progra.charting.CoordSystem.c CoordSystemUtilities c
statement is: double[] doubleArray = new double[]{ 1.2, 3.4, 5.6, 7.8 }, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [] Ct is: double[] doubleArray = new double[4] isAssignment: false Array: new double[]{ 1.2, 3.4, 5.6, 7.8 } Elements: [1.2, 3.4, 5.6, 7.8]
lengths: [4] []
statement is: AffineTransform affineTransform = new AffineTransform(doubleArray), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: java.awt.geom.AffineTransform([D)V
statement is: coordSystem.y2transform = affineTransform, class spoon.support.reflect.code.CtAssignmentImpl
statement is: coordSystemUtilities.getSecondYAxisLine2D(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: coordSystemUtilities.getSecondYAxisLine2D() target is: coordSystemUtilities method is: getSecondYAxisLine2D()
TestCase is: ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel();
CoordSystem coordSystem = new CoordSystem(objectChartDataModel);

statement is: de.progra.charting.model.ObjectChartDataModel()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.progra.charting.model.ObjectChartDataModel
statement code is: ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel()
statement is: de.progra.charting.CoordSystem(Lde/progra/charting/model/ChartDataModel;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.progra.charting.CoordSystem
statement code is: CoordSystem coordSystem = new CoordSystem(arg0)
statement is: getInnerBounds()Ljava/awt/Rectangle; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.awt.Rectangle
statement code is: Rectangle innerBounds = coordSystem.getInnerBounds()
statement is: setBounds(Ljava/awt/Rectangle;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: coordSystem.setBounds(arg0)
statement is: org.evosuite.testcase.statements.FieldStatement@3bb4d25b type is: class org.evosuite.testcase.statements.FieldStatement return type class de.progra.charting.CoordSystemUtilities
statement code is: CoordSystemUtilities coordSystemUtilities = coordSystem.c
statement is: getYAxisLine2D()Ljava/awt/geom/Line2D; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.awt.geom.Line2D$Double
statement code is: Line2D.Double yAxisLine2D = (Line2D.Double)coordSystemUtilities.getYAxisLine2D()
test data is: ObjectChartDataModel objectChartDataModel = new ObjectChartDataModel();
CoordSystem coordSystem = new CoordSystem(objectChartDataModel);
Rectangle innerBounds = coordSystem.getInnerBounds();
coordSystem.setBounds(innerBounds);
CoordSystemUtilities coordSystemUtilities = coordSystem.c;
coordSystemUtilities.getYAxisLine2D();

* Computation finished
