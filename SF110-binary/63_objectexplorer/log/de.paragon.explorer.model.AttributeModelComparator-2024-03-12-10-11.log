* EvoSuite 1.0.0-SNAPSHOT
* Going to generate test cases for class: de.paragon.explorer.model.AttributeModelComparator
* Starting Client-0
* Properties loaded from /home/roham/Results-Utestgen/dataset/SF110-new-res/63_objectexplorer/evosuite-files/evosuite.properties
* Connecting to master process on port 5427
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 10:11:31.445 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 10:11:31.468 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.ToDoubleFunction
[MASTER] 10:11:31.470 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.ToIntFunction
[MASTER] 10:11:31.471 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.ToLongFunction
[MASTER] 10:11:32.295 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 10:11:32.303 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 10:11:32.308 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 10:11:34.449 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 10:11:34.451 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
[MASTER] 10:11:35.707 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.ZoneId
[MASTER] 10:11:35.877 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.Temporal
[MASTER] 10:11:35.879 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAccessor
[MASTER] 10:11:35.879 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalField
[MASTER] 10:11:35.880 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalUnit
[MASTER] 10:11:35.881 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAmount
[MASTER] 10:11:35.882 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.Clock
[MASTER] 10:11:35.883 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalQuery
[MASTER] 10:11:35.884 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAdjuster
[MASTER] 10:11:35.905 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.Chronology
[MASTER] 10:11:35.920 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.Era
* Finished analyzing classpath
* Generating tests for class de.paragon.explorer.model.AttributeModelComparator
* Test criteria:
  - Branch Coverage
  - Line Coverage
  - Method-Output Coverage
  - Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 51
* Using seed 1710238289138
* Starting evolution
[Progress:>                             0%] [Cov:>                                  0%]* Initial Number of Goals in DynaMOSA = 10 / 51
[MASTER] 10:11:37.060 [logback-1] WARN  TestCluster - Failed to check cache for java.lang.Comparable<T> : Type points to itself
[Progress:>                             1%] [Cov:======================>            63%][Progress:>                             2%] [Cov:======================>            63%][Progress:>                             3%] [Cov:======================>            63%][Progress:>                             3%] [Cov:======================>            63%][Progress:>                             3%] [Cov:======================>            63%][Progress:>                             3%] [Cov:======================>            63%][Progress:=>                            4%] [Cov:======================>            63%][Progress:=>                            4%] [Cov:======================>            63%][Progress:=>                            4%] [Cov:======================>            63%][Progress:=>                            4%] [Cov:======================>            63%][MASTER] 10:11:41.840 [logback-1] WARN  TestCluster - Failed to check cache for java.util.function.Function<T, R> : Type points to itself
[Progress:=>                            5%] [Cov:======================>            63%][Progress:=>                            5%] [Cov:======================>            63%][Progress:=>                            5%] [Cov:======================>            63%][Progress:=>                            5%] [Cov:======================>            63%][Progress:=>                            5%] [Cov:======================>            63%][Progress:=>                            5%] [Cov:======================>            63%][Progress:=>                            5%] [Cov:======================>            63%][Progress:=>                            6%] [Cov:======================>            63%][Progress:=>                            6%] [Cov:======================>            63%][Progress:=>                            6%] [Cov:======================>            63%][Progress:=>                            6%] [Cov:======================>            63%][Progress:=>                            6%] [Cov:======================>            63%][Progress:=>                            6%] [Cov:======================>            63%][Progress:=>                            6%] [Cov:======================>            63%][Progress:=>                            6%] [Cov:======================>            63%][Progress:==>                           7%] [Cov:======================>            63%][Progress:==>                           7%] [Cov:======================>            63%][Progress:==>                           7%] [Cov:======================>            63%][Progress:==>                           7%] [Cov:======================>            63%][Progress:==>                           7%] [Cov:======================>            63%][Progress:==>                           7%] [Cov:======================>            63%][Progress:==>                           7%] [Cov:======================>            63%][Progress:==>                           7%] [Cov:======================>            63%][Progress:==>                           7%] [Cov:======================>            63%][Progress:==>                           7%] [Cov:======================>            63%][Progress:==>                           8%] [Cov:======================>            63%][Progress:==>                           8%] [Cov:======================>            63%][Progress:==>                           8%] [Cov:======================>            63%][Progress:==>                           8%] [Cov:======================>            63%][Progress:==>                           8%] [Cov:======================>            63%][Progress:==>                           8%] [Cov:======================>            63%][Progress:==>                           8%] [Cov:======================>            63%][Progress:==>                           9%] [Cov:======================>            63%][Progress:==>                           9%] [Cov:======================>            63%][Progress:==>                           9%] [Cov:======================>            63%][Progress:==>                           9%] [Cov:======================>            63%][Progress:==>                           9%] [Cov:======================>            63%][Progress:==>                           9%] [Cov:======================>            63%][Progress:===>                          10%] [Cov:======================>            63%][Progress:===>                          10%] [Cov:======================>            63%][Progress:===>                          10%] [Cov:======================>            63%][Progress:===>                          10%] [Cov:======================>            63%][Progress:===>                          10%] [Cov:======================>            63%][Progress:===>                          10%] [Cov:======================>            63%][Progress:===>                          10%] [Cov:======================>            63%][Progress:===>                          10%] [Cov:======================>            63%][Progress:===>                          10%] [Cov:======================>            63%][Progress:===>                          10%] [Cov:======================>            63%][Progress:===>                          11%] [Cov:======================>            63%][Progress:===>                          11%] [Cov:======================>            63%][Progress:===>                          11%] [Cov:======================>            63%][Progress:===>                          11%] [Cov:======================>            63%][Progress:===>                          11%] [Cov:======================>            63%][Progress:===>                          11%] [Cov:======================>            63%][Progress:===>                          11%] [Cov:======================>            63%][Progress:===>                          11%] [Cov:======================>            63%][Progress:===>                          11%] [Cov:======================>            63%][Progress:===>                          11%] [Cov:======================>            63%][Progress:===>                          11%] [Cov:======================>            63%][Progress:===>                          11%] [Cov:======================>            63%][Progress:===>                          12%] [Cov:======================>            63%][Progress:===>                          12%] [Cov:======================>            63%][Progress:===>                          12%] [Cov:======================>            63%][Progress:===>                          12%] [Cov:======================>            63%][Progress:===>                          12%] [Cov:======================>            63%][Progress:===>                          12%] [Cov:======================>            63%][Progress:===>                          12%] [Cov:======================>            63%][Progress:===>                          12%] [Cov:======================>            63%][Progress:====>                         15%] [Cov:======================>            63%][Progress:====>                         15%] [Cov:======================>            63%][Progress:====>                         16%] [Cov:======================>            63%][Progress:====>                         16%] [Cov:======================>            63%][Progress:====>                         16%] [Cov:======================>            63%][Progress:====>                         16%] [Cov:======================>            63%][Progress:====>                         16%] [Cov:======================>            63%][Progress:====>                         16%] [Cov:======================>            63%][Progress:====>                         16%] [Cov:======================>            63%][Progress:====>                         16%] [Cov:======================>            63%][Progress:====>                         16%] [Cov:======================>            63%][Progress:====>                         16%] [Cov:======================>            63%][Progress:====>                         16%] [Cov:======================>            63%][Progress:====>                         16%] [Cov:======================>            63%][Progress:====>                         16%] [Cov:======================>            63%][Progress:====>                         16%] [Cov:======================>            63%][Progress:=====>                        17%] [Cov:======================>            63%][Progress:=====>                        17%] [Cov:======================>            63%][Progress:=====>                        17%] [Cov:======================>            63%][Progress:=====>                        17%] [Cov:======================>            63%][Progress:=====>                        17%] [Cov:======================>            63%][Progress:=====>                        17%] [Cov:======================>            63%][Progress:=====>                        17%] [Cov:======================>            63%][Progress:=====>                        17%] [Cov:======================>            63%][Progress:=====>                        17%] [Cov:======================>            63%][Progress:=====>                        17%] [Cov:======================>            63%][Progress:=====>                        17%] [Cov:======================>            63%][Progress:=====>                        17%] [Cov:======================>            63%][Progress:=====>                        17%] [Cov:======================>            63%][Progress:=====>                        18%] [Cov:======================>            63%][Progress:=====>                        18%] [Cov:======================>            63%][Progress:=====>                        18%] [Cov:======================>            63%][Progress:=====>                        18%] [Cov:========================>          69%][Progress:=====>                        18%] [Cov:============================>      82%][Progress:=====>                        18%] [Cov:==============================>    88%][Progress:=====>                        18%] [Cov:=================================> 95%][Progress:=====>                        18%] [Cov:=================================> 95%][Progress:=====>                        18%] [Cov:=================================> 97%][Progress:=====>                        18%] [Cov:=================================> 97%][Progress:=====>                        18%] [Cov:=================================> 97%][Progress:=====>                        18%] [Cov:===================================100%]
* Search finished after 19s and 118 generations, 40884 statements, best individual has fitness: 0.0
* Generated before the refinement 9 tests with total length 46
statement is: de.paragon.explorer.model.AttributeModelComparator()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.paragon.explorer.model.AttributeModelComparator
statement code is: AttributeModelComparator attributeModelComparator = new AttributeModelComparator()
statement is: de.paragon.explorer.model.StandardAttributeModel()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.paragon.explorer.model.StandardAttributeModel
statement code is: StandardAttributeModel standardAttributeModel = new StandardAttributeModel()
statement is: compare(Lde/paragon/explorer/model/AttributeModel;Lde/paragon/explorer/model/AttributeModel;)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int compare = attributeModelComparator.compare((AttributeModel) null, (AttributeModel) arg1)
test data is: AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
StandardAttributeModel standardAttributeModel = new StandardAttributeModel();
attributeModelComparator.compare((AttributeModel) null, (AttributeModel) standardAttributeModel);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
        StandardAttributeModel standardAttributeModel = new StandardAttributeModel(10, "name", 2.34);
        attributeModelComparator.compare(((AttributeModel) (null)), ((AttributeModel) (standardAttributeModel)));
    }
}
statement is: AttributeModelComparator attributeModelComparator = new AttributeModelComparator(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: StandardAttributeModel standardAttributeModel = new StandardAttributeModel(10, "name", 2.34), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: attributeModelComparator.compare(((AttributeModel) (null)), ((AttributeModel) (standardAttributeModel))), class spoon.support.reflect.code.CtInvocationImpl
invocation is: attributeModelComparator.compare(((AttributeModel) (null)), ((AttributeModel) (standardAttributeModel))) target is: attributeModelComparator method is: compare(AttributeModel,AttributeModel)
source statement: de.paragon.explorer.model.AttributeModelComparator()V callee: VariableReference: Statement 0, type de.paragon.explorer.model.AttributeModelComparatorindex is: 0
Matched Method is: compare(Lde/paragon/explorer/model/AttributeModel;Lde/paragon/explorer/model/AttributeModel;)I
i 0 Parameters size() 0 Num of Method Parameters: 2
i 1 Parameters size() 0 Num of Method Parameters: 2
TestCase is: AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
AttributeModel attributeModel = null;
StandardAttributeModel standardAttributeModel = null;
attributeModelComparator.compare(attributeModel, (AttributeModel) standardAttributeModel);

statement is: de.paragon.explorer.model.AttributeModelComparator()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.paragon.explorer.model.AttributeModelComparator
statement code is: AttributeModelComparator attributeModelComparator = new AttributeModelComparator()
statement is: de.paragon.explorer.model.StandardAttributeModel()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.paragon.explorer.model.StandardAttributeModel
statement code is: StandardAttributeModel standardAttributeModel = new StandardAttributeModel()
statement is: compare(Lde/paragon/explorer/model/AttributeModel;Lde/paragon/explorer/model/AttributeModel;)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int compare = attributeModelComparator.compare((AttributeModel) arg0, (AttributeModel) null)
test data is: AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
StandardAttributeModel standardAttributeModel = new StandardAttributeModel();
attributeModelComparator.compare((AttributeModel) standardAttributeModel, (AttributeModel) null);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
        StandardAttributeModel standardAttributeModel = new StandardAttributeModel();
        attributeModelComparator.compare(((AttributeModel) (standardAttributeModel)), ((AttributeModel) (null)));
        // Improved code
        String string1 = "Hello";// A more descriptive and representative string

        int int1 = 5;// An improved primitive value

        Double double1 = 3.14;// An improved primitive value

        char char1 = 'a';// An improved primitive value

        attributeModelComparator.compare(((AttributeModel) (standardAttributeModel)), ((AttributeModel) (null)));
    }
}
statement is: AttributeModelComparator attributeModelComparator = new AttributeModelComparator(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: StandardAttributeModel standardAttributeModel = new StandardAttributeModel(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: attributeModelComparator.compare(((AttributeModel) (standardAttributeModel)), ((AttributeModel) (null))), class spoon.support.reflect.code.CtInvocationImpl
invocation is: attributeModelComparator.compare(((AttributeModel) (standardAttributeModel)), ((AttributeModel) (null))) target is: attributeModelComparator method is: compare(AttributeModel,AttributeModel)
source statement: de.paragon.explorer.model.AttributeModelComparator()V callee: VariableReference: Statement 0, type de.paragon.explorer.model.AttributeModelComparatorindex is: 0
Matched Method is: compare(Lde/paragon/explorer/model/AttributeModel;Lde/paragon/explorer/model/AttributeModel;)I
i 1 Parameters size() 1 Num of Method Parameters: 2
statement is: // Improved code
String string1 = "Hello"// A more descriptive and representative string
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: int int1 = 5// An improved primitive value
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: Double double1 = 3.14// An improved primitive value
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: char char1 = 'a'// An improved primitive value
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: attributeModelComparator.compare(((AttributeModel) (standardAttributeModel)), ((AttributeModel) (null))), class spoon.support.reflect.code.CtInvocationImpl
invocation is: attributeModelComparator.compare(((AttributeModel) (standardAttributeModel)), ((AttributeModel) (null))) target is: attributeModelComparator method is: compare(AttributeModel,AttributeModel)
source statement: de.paragon.explorer.model.AttributeModelComparator()V callee: VariableReference: Statement 0, type de.paragon.explorer.model.AttributeModelComparatorindex is: 0
Matched Method is: compare(Lde/paragon/explorer/model/AttributeModel;Lde/paragon/explorer/model/AttributeModel;)I
i 1 Parameters size() 1 Num of Method Parameters: 2
* this is vulnerable: String string = "Hello"
* this is vulnerable: int _int = 5
* this is vulnerable: double _double = 3.14
* this is vulnerable: char _char = 'a'
TestCase is: AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
StandardAttributeModel standardAttributeModel = new StandardAttributeModel();
AttributeModel attributeModel = null;
attributeModelComparator.compare((AttributeModel) standardAttributeModel, attributeModel);
String string = "Hello";
int _int = 5;
double _double = 3.14;
char _char = 'a';
AttributeModel attributeModel = null;
attributeModelComparator.compare((AttributeModel) standardAttributeModel, attributeModel);

statement is: de.paragon.explorer.model.StandardAttributeModel()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.paragon.explorer.model.StandardAttributeModel
statement code is: StandardAttributeModel standardAttributeModel = new StandardAttributeModel()
statement is: setName(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: standardAttributeModel.setName("G{")
statement is: de.paragon.explorer.model.AttributeModelComparator()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.paragon.explorer.model.AttributeModelComparator
statement code is: AttributeModelComparator attributeModelComparator = new AttributeModelComparator()
statement is: compare(Lde/paragon/explorer/model/AttributeModel;Lde/paragon/explorer/model/AttributeModel;)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int compare = attributeModelComparator.compare((AttributeModel) arg1, (AttributeModel) arg1)
test data is: StandardAttributeModel standardAttributeModel = new StandardAttributeModel();
standardAttributeModel.setName("G{");
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
attributeModelComparator.compare((AttributeModel) standardAttributeModel, (AttributeModel) standardAttributeModel);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StandardAttributeModel standardAttributeModel = new StandardAttributeModel();
        standardAttributeModel.setName("Grape");
        AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
        attributeModelComparator.compare(((AttributeModel) (standardAttributeModel)), ((AttributeModel) (standardAttributeModel)));
    }
}
statement is: StandardAttributeModel standardAttributeModel = new StandardAttributeModel(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: standardAttributeModel.setName("Grape"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: standardAttributeModel.setName("Grape") target is: standardAttributeModel method is: setName(java.lang.String)
source statement: de.paragon.explorer.model.StandardAttributeModel()V callee: VariableReference: Statement 0, type de.paragon.explorer.model.StandardAttributeModelindex is: 0
Matched Method is: setName(Ljava/lang/String;)V
statement is: AttributeModelComparator attributeModelComparator = new AttributeModelComparator(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: attributeModelComparator.compare(((AttributeModel) (standardAttributeModel)), ((AttributeModel) (standardAttributeModel))), class spoon.support.reflect.code.CtInvocationImpl
invocation is: attributeModelComparator.compare(((AttributeModel) (standardAttributeModel)), ((AttributeModel) (standardAttributeModel))) target is: attributeModelComparator method is: compare(AttributeModel,AttributeModel)
source statement: de.paragon.explorer.model.AttributeModelComparator()V callee: VariableReference: Statement 2, type de.paragon.explorer.model.AttributeModelComparatorindex is: 3
Matched Method is: compare(Lde/paragon/explorer/model/AttributeModel;Lde/paragon/explorer/model/AttributeModel;)I
TestCase is: StandardAttributeModel standardAttributeModel = new StandardAttributeModel();
String string = "Grape";
standardAttributeModel.setName(string);
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
((AttributeModelComparator) _void).compare((AttributeModel) standardAttributeModel, (AttributeModel) standardAttributeModel);

statement is: de.paragon.explorer.model.StandardAttributeModel()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.paragon.explorer.model.StandardAttributeModel
statement code is: StandardAttributeModel standardAttributeModel = new StandardAttributeModel()
statement is: setName(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: standardAttributeModel.setName("G{")
statement is: de.paragon.explorer.model.StandardAttributeModel()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.paragon.explorer.model.StandardAttributeModel
statement code is: StandardAttributeModel standardAttributeModel = new StandardAttributeModel()
statement is: setName(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: standardAttributeModel.setName("")
statement is: de.paragon.explorer.model.AttributeModelComparator()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.paragon.explorer.model.AttributeModelComparator
statement code is: AttributeModelComparator attributeModelComparator = new AttributeModelComparator()
statement is: compare(Lde/paragon/explorer/model/AttributeModel;Lde/paragon/explorer/model/AttributeModel;)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int compare = attributeModelComparator.compare((AttributeModel) arg0, (AttributeModel) arg1)
test data is: StandardAttributeModel standardAttributeModel = new StandardAttributeModel();
standardAttributeModel.setName("G{");
StandardAttributeModel standardAttributeModel = new StandardAttributeModel();
standardAttributeModel.setName("");
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
attributeModelComparator.compare((AttributeModel) standardAttributeModel, (AttributeModel) standardAttributeModel);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StandardAttributeModel standardAttributeModel1 = new StandardAttributeModel();
        standardAttributeModel1.setName("John Smith");
        standardAttributeModel1.setAge(35);
        standardAttributeModel1.setAddress("123 Main St.");
        StandardAttributeModel standardAttributeModel2 = new StandardAttributeModel();
        standardAttributeModel2.setName("Jane Doe");
        standardAttributeModel2.setAge(28);
        standardAttributeModel2.setAddress("456 Elm St.");
        AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
        attributeModelComparator.compare(((AttributeModel) (standardAttributeModel1)), ((AttributeModel) (standardAttributeModel2)));
    }
}
statement is: StandardAttributeModel standardAttributeModel1 = new StandardAttributeModel(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: standardAttributeModel1.setName("John Smith"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: standardAttributeModel1.setName("John Smith") target is: standardAttributeModel1 method is: setName(java.lang.String)
source statement: de.paragon.explorer.model.StandardAttributeModel()V callee: VariableReference: Statement 0, type de.paragon.explorer.model.StandardAttributeModelindex is: 0
Matched Method is: setName(Ljava/lang/String;)V
statement is: standardAttributeModel1.setAge(35), class spoon.support.reflect.code.CtInvocationImpl
invocation is: standardAttributeModel1.setAge(35) target is: standardAttributeModel1 method is: setAge(int)
statement is: standardAttributeModel1.setAddress("123 Main St."), class spoon.support.reflect.code.CtInvocationImpl
invocation is: standardAttributeModel1.setAddress("123 Main St.") target is: standardAttributeModel1 method is: setAddress(java.lang.String)
statement is: StandardAttributeModel standardAttributeModel2 = new StandardAttributeModel(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: standardAttributeModel2.setName("Jane Doe"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: standardAttributeModel2.setName("Jane Doe") target is: standardAttributeModel2 method is: setName(java.lang.String)
source statement: de.paragon.explorer.model.StandardAttributeModel()V callee: VariableReference: Statement 0, type de.paragon.explorer.model.StandardAttributeModelindex is: 3
Matched Method is: setName(Ljava/lang/String;)V
statement is: standardAttributeModel2.setAge(28), class spoon.support.reflect.code.CtInvocationImpl
invocation is: standardAttributeModel2.setAge(28) target is: standardAttributeModel2 method is: setAge(int)
statement is: standardAttributeModel2.setAddress("456 Elm St."), class spoon.support.reflect.code.CtInvocationImpl
invocation is: standardAttributeModel2.setAddress("456 Elm St.") target is: standardAttributeModel2 method is: setAddress(java.lang.String)
statement is: AttributeModelComparator attributeModelComparator = new AttributeModelComparator(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: attributeModelComparator.compare(((AttributeModel) (standardAttributeModel1)), ((AttributeModel) (standardAttributeModel2))), class spoon.support.reflect.code.CtInvocationImpl
invocation is: attributeModelComparator.compare(((AttributeModel) (standardAttributeModel1)), ((AttributeModel) (standardAttributeModel2))) target is: attributeModelComparator method is: compare(AttributeModel,AttributeModel)
source statement: de.paragon.explorer.model.AttributeModelComparator()V callee: VariableReference: Statement 4, type de.paragon.explorer.model.AttributeModelComparatorindex is: 6
Matched Method is: compare(Lde/paragon/explorer/model/AttributeModel;Lde/paragon/explorer/model/AttributeModel;)I
TestCase is: StandardAttributeModel standardAttributeModel = new StandardAttributeModel();
String string = "John Smith";
standardAttributeModel.setName(string);
StandardAttributeModel standardAttributeModel = new StandardAttributeModel();
String string = "Jane Doe";
standardAttributeModel.setName(string);
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
((AttributeModelComparator) string).compare((AttributeModel) standardAttributeModel, (AttributeModel) standardAttributeModel);

statement is: de.paragon.explorer.model.StandardAttributeModel()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.paragon.explorer.model.StandardAttributeModel
statement code is: StandardAttributeModel standardAttributeModel = new StandardAttributeModel()
statement is: setName(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: standardAttributeModel.setName("tG;")
statement is: de.paragon.explorer.model.AttributeModelComparator()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.paragon.explorer.model.AttributeModelComparator
statement code is: AttributeModelComparator attributeModelComparator = new AttributeModelComparator()
statement is: de.paragon.explorer.model.AttributeModel()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.paragon.explorer.model.AttributeModel
statement code is: AttributeModel attributeModel = new AttributeModel()
statement is: setName(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: attributeModel.setName("Help")
statement is: compare(Lde/paragon/explorer/model/AttributeModel;Lde/paragon/explorer/model/AttributeModel;)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int compare = attributeModelComparator.compare(arg0, (AttributeModel) arg1)
test data is: StandardAttributeModel standardAttributeModel = new StandardAttributeModel();
standardAttributeModel.setName("tG;");
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
AttributeModel attributeModel = new AttributeModel();
attributeModel.setName("Help");
attributeModelComparator.compare(attributeModel, (AttributeModel) standardAttributeModel);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StandardAttributeModel standardAttributeModel = new StandardAttributeModel();
        standardAttributeModel.setName("Telephone");
        AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
        AttributeModel attributeModel = new AttributeModel();
        attributeModel.setName("Phone Number");
        attributeModelComparator.compare(attributeModel, ((AttributeModel) (standardAttributeModel)));
    }
}
statement is: StandardAttributeModel standardAttributeModel = new StandardAttributeModel(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: standardAttributeModel.setName("Telephone"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: standardAttributeModel.setName("Telephone") target is: standardAttributeModel method is: setName(java.lang.String)
source statement: de.paragon.explorer.model.StandardAttributeModel()V callee: VariableReference: Statement 0, type de.paragon.explorer.model.StandardAttributeModelindex is: 0
Matched Method is: setName(Ljava/lang/String;)V
statement is: AttributeModelComparator attributeModelComparator = new AttributeModelComparator(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: AttributeModel attributeModel = new AttributeModel(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: attributeModel.setName("Phone Number"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: attributeModel.setName("Phone Number") target is: attributeModel method is: setName(java.lang.String)
source statement: de.paragon.explorer.model.AttributeModel()V callee: VariableReference: Statement 3, type de.paragon.explorer.model.AttributeModelindex is: 4
Matched Method is: setName(Ljava/lang/String;)V
statement is: attributeModelComparator.compare(attributeModel, ((AttributeModel) (standardAttributeModel))), class spoon.support.reflect.code.CtInvocationImpl
invocation is: attributeModelComparator.compare(attributeModel, ((AttributeModel) (standardAttributeModel))) target is: attributeModelComparator method is: compare(AttributeModel,AttributeModel)
source statement: de.paragon.explorer.model.AttributeModelComparator()V callee: VariableReference: Statement 2, type de.paragon.explorer.model.AttributeModelComparatorindex is: 3
Matched Method is: compare(Lde/paragon/explorer/model/AttributeModel;Lde/paragon/explorer/model/AttributeModel;)I
TestCase is: StandardAttributeModel standardAttributeModel = new StandardAttributeModel();
String string = "Telephone";
standardAttributeModel.setName(string);
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
AttributeModel attributeModel = new AttributeModel();
String string = "Phone Number";
((AttributeModel) attributeModelComparator).setName(string);
((AttributeModelComparator) _void).compare(attributeModel, (AttributeModel) standardAttributeModel);

statement is: de.paragon.explorer.model.StandardAttributeModel()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.paragon.explorer.model.StandardAttributeModel
statement code is: StandardAttributeModel standardAttributeModel = new StandardAttributeModel()
statement is: setName(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: standardAttributeModel.setName("]G{")
statement is: de.paragon.explorer.model.AttributeModelComparator()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.paragon.explorer.model.AttributeModelComparator
statement code is: AttributeModelComparator attributeModelComparator = new AttributeModelComparator()
statement is: de.paragon.explorer.model.StandardAttributeModel()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.paragon.explorer.model.StandardAttributeModel
statement code is: StandardAttributeModel standardAttributeModel = new StandardAttributeModel()
statement is: setName(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: standardAttributeModel.setName("")
statement is: compare(Lde/paragon/explorer/model/AttributeModel;Lde/paragon/explorer/model/AttributeModel;)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int compare = attributeModelComparator.compare((AttributeModel) arg0, (AttributeModel) arg1)
test data is: StandardAttributeModel standardAttributeModel = new StandardAttributeModel();
standardAttributeModel.setName("]G{");
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
StandardAttributeModel standardAttributeModel = new StandardAttributeModel();
standardAttributeModel.setName("");
attributeModelComparator.compare((AttributeModel) standardAttributeModel, (AttributeModel) standardAttributeModel);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StandardAttributeModel standardAttributeModel = new StandardAttributeModel();
        standardAttributeModel.setName("John Doe");
        AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
        StandardAttributeModel standardAttributeModel = new StandardAttributeModel();
        standardAttributeModel.setName("Jane Smith");
        attributeModelComparator.compare(((AttributeModel) (standardAttributeModel)), ((AttributeModel) (standardAttributeModel)));
    }
}
statement is: StandardAttributeModel standardAttributeModel = new StandardAttributeModel(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: standardAttributeModel.setName("John Doe"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: standardAttributeModel.setName("John Doe") target is: standardAttributeModel method is: setName(java.lang.String)
source statement: de.paragon.explorer.model.StandardAttributeModel()V callee: VariableReference: Statement 0, type de.paragon.explorer.model.StandardAttributeModelindex is: 0
Matched Method is: setName(Ljava/lang/String;)V
statement is: AttributeModelComparator attributeModelComparator = new AttributeModelComparator(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: StandardAttributeModel standardAttributeModel = new StandardAttributeModel(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: standardAttributeModel.setName("Jane Smith"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: standardAttributeModel.setName("Jane Smith") target is: standardAttributeModel method is: setName(java.lang.String)
source statement: de.paragon.explorer.model.StandardAttributeModel()V callee: VariableReference: Statement 0, type de.paragon.explorer.model.StandardAttributeModelindex is: 4
Matched Method is: setName(Ljava/lang/String;)V
statement is: attributeModelComparator.compare(((AttributeModel) (standardAttributeModel)), ((AttributeModel) (standardAttributeModel))), class spoon.support.reflect.code.CtInvocationImpl
invocation is: attributeModelComparator.compare(((AttributeModel) (standardAttributeModel)), ((AttributeModel) (standardAttributeModel))) target is: attributeModelComparator method is: compare(AttributeModel,AttributeModel)
source statement: de.paragon.explorer.model.AttributeModelComparator()V callee: VariableReference: Statement 2, type de.paragon.explorer.model.AttributeModelComparatorindex is: 3
Matched Method is: compare(Lde/paragon/explorer/model/AttributeModel;Lde/paragon/explorer/model/AttributeModel;)I
TestCase is: StandardAttributeModel standardAttributeModel = new StandardAttributeModel();
String string = "John Doe";
standardAttributeModel.setName(string);
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
StandardAttributeModel standardAttributeModel = new StandardAttributeModel();
String string = "Jane Smith";
standardAttributeModel.setName(string);
((AttributeModelComparator) _void).compare((AttributeModel) standardAttributeModel, (AttributeModel) standardAttributeModel);

statement is: de.paragon.explorer.model.StandardAttributeModel()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.paragon.explorer.model.StandardAttributeModel
statement code is: StandardAttributeModel standardAttributeModel = new StandardAttributeModel()
statement is: setName(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: standardAttributeModel.setName("G{")
statement is: de.paragon.explorer.model.AttributeModelComparator()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.paragon.explorer.model.AttributeModelComparator
statement code is: AttributeModelComparator attributeModelComparator = new AttributeModelComparator()
statement is: de.paragon.explorer.model.StandardAttributeModel()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.paragon.explorer.model.StandardAttributeModel
statement code is: StandardAttributeModel standardAttributeModel = new StandardAttributeModel()
statement is: setName(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: standardAttributeModel.setName("")
statement is: compare(Lde/paragon/explorer/model/AttributeModel;Lde/paragon/explorer/model/AttributeModel;)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int compare = attributeModelComparator.compare((AttributeModel) arg0, (AttributeModel) arg1)
test data is: StandardAttributeModel standardAttributeModel = new StandardAttributeModel();
standardAttributeModel.setName("G{");
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
StandardAttributeModel standardAttributeModel = new StandardAttributeModel();
standardAttributeModel.setName("");
attributeModelComparator.compare((AttributeModel) standardAttributeModel, (AttributeModel) standardAttributeModel);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StandardAttributeModel standardAttributeModel1 = new StandardAttributeModel();
        standardAttributeModel1.setName("G{");
        AttributeModelComparator attributeModelComparator1 = new AttributeModelComparator();
        StandardAttributeModel standardAttributeModel2 = new StandardAttributeModel();
        standardAttributeModel2.setName("");
        attributeModelComparator1.compare(((AttributeModel) (standardAttributeModel1)), ((AttributeModel) (standardAttributeModel2)));
    }
}
statement is: StandardAttributeModel standardAttributeModel1 = new StandardAttributeModel(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: standardAttributeModel1.setName("G{"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: standardAttributeModel1.setName("G{") target is: standardAttributeModel1 method is: setName(java.lang.String)
source statement: de.paragon.explorer.model.StandardAttributeModel()V callee: VariableReference: Statement 0, type de.paragon.explorer.model.StandardAttributeModelindex is: 0
Matched Method is: setName(Ljava/lang/String;)V
statement is: AttributeModelComparator attributeModelComparator1 = new AttributeModelComparator(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: StandardAttributeModel standardAttributeModel2 = new StandardAttributeModel(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: standardAttributeModel2.setName(""), class spoon.support.reflect.code.CtInvocationImpl
invocation is: standardAttributeModel2.setName("") target is: standardAttributeModel2 method is: setName(java.lang.String)
source statement: de.paragon.explorer.model.StandardAttributeModel()V callee: VariableReference: Statement 0, type de.paragon.explorer.model.StandardAttributeModelindex is: 4
Matched Method is: setName(Ljava/lang/String;)V
statement is: attributeModelComparator1.compare(((AttributeModel) (standardAttributeModel1)), ((AttributeModel) (standardAttributeModel2))), class spoon.support.reflect.code.CtInvocationImpl
invocation is: attributeModelComparator1.compare(((AttributeModel) (standardAttributeModel1)), ((AttributeModel) (standardAttributeModel2))) target is: attributeModelComparator1 method is: compare(AttributeModel,AttributeModel)
source statement: de.paragon.explorer.model.AttributeModelComparator()V callee: VariableReference: Statement 2, type de.paragon.explorer.model.AttributeModelComparatorindex is: 3
Matched Method is: compare(Lde/paragon/explorer/model/AttributeModel;Lde/paragon/explorer/model/AttributeModel;)I
TestCase is: StandardAttributeModel standardAttributeModel = new StandardAttributeModel();
String string = "G{";
standardAttributeModel.setName(string);
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
StandardAttributeModel standardAttributeModel = new StandardAttributeModel();
String string = "";
standardAttributeModel.setName(string);
((AttributeModelComparator) _void).compare((AttributeModel) standardAttributeModel, (AttributeModel) standardAttributeModel);

statement is: de.paragon.explorer.model.StandardAttributeModel()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.paragon.explorer.model.StandardAttributeModel
statement code is: StandardAttributeModel standardAttributeModel = new StandardAttributeModel()
statement is: setName(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: standardAttributeModel.setName("tG;")
statement is: de.paragon.explorer.model.AttributeModelComparator()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.paragon.explorer.model.AttributeModelComparator
statement code is: AttributeModelComparator attributeModelComparator = new AttributeModelComparator()
statement is: de.paragon.explorer.model.AttributeModel()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.paragon.explorer.model.AttributeModel
statement code is: AttributeModel attributeModel = new AttributeModel()
statement is: setName(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: attributeModel.setName("Help")
statement is: compare(Lde/paragon/explorer/model/AttributeModel;Lde/paragon/explorer/model/AttributeModel;)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int compare = attributeModelComparator.compare((AttributeModel) arg0, arg1)
test data is: StandardAttributeModel standardAttributeModel = new StandardAttributeModel();
standardAttributeModel.setName("tG;");
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
AttributeModel attributeModel = new AttributeModel();
attributeModel.setName("Help");
attributeModelComparator.compare((AttributeModel) standardAttributeModel, attributeModel);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StandardAttributeModel standardAttributeModel = new StandardAttributeModel();
        standardAttributeModel.setName("Tax");
        attributeModelComparator.compare(((AttributeModel) (standardAttributeModel)), attributeModel);
    }
}
statement is: StandardAttributeModel standardAttributeModel = new StandardAttributeModel(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: standardAttributeModel.setName("Tax"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: standardAttributeModel.setName("Tax") target is: standardAttributeModel method is: setName(java.lang.String)
source statement: de.paragon.explorer.model.StandardAttributeModel()V callee: VariableReference: Statement 0, type de.paragon.explorer.model.StandardAttributeModelindex is: 0
Matched Method is: setName(Ljava/lang/String;)V
statement is: attributeModelComparator.compare(((AttributeModel) (standardAttributeModel)), attributeModel), class spoon.support.reflect.code.CtInvocationImpl
invocation is: attributeModelComparator.compare(((AttributeModel) (standardAttributeModel)), attributeModel) target is: attributeModelComparator method is: compare(AttributeModel)
TestCase is: StandardAttributeModel standardAttributeModel = new StandardAttributeModel();
String string = "Tax";
standardAttributeModel.setName(string);

statement is: de.paragon.explorer.model.StandardAttributeModel()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.paragon.explorer.model.StandardAttributeModel
statement code is: StandardAttributeModel standardAttributeModel = new StandardAttributeModel()
statement is: de.paragon.explorer.model.AttributeModelComparator()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.paragon.explorer.model.AttributeModelComparator
statement code is: AttributeModelComparator attributeModelComparator = new AttributeModelComparator()
statement is: de.paragon.explorer.model.AttributeModel()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.paragon.explorer.model.AttributeModel
statement code is: AttributeModel attributeModel = new AttributeModel()
statement is: setName(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: attributeModel.setName("")
statement is: setName(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: standardAttributeModel.setName("=qgLVcY")
statement is: compare(Lde/paragon/explorer/model/AttributeModel;Lde/paragon/explorer/model/AttributeModel;)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int compare = attributeModelComparator.compare((AttributeModel) arg0, arg1)
test data is: StandardAttributeModel standardAttributeModel = new StandardAttributeModel();
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
AttributeModel attributeModel = new AttributeModel();
attributeModel.setName("");
standardAttributeModel.setName("=qgLVcY");
attributeModelComparator.compare((AttributeModel) standardAttributeModel, attributeModel);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StandardAttributeModel standardAttributeModel = new StandardAttributeModel();
        AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
        AttributeModel attributeModel = new AttributeModel();
        attributeModel.setName("John Doe");// John Doe is a more descriptive name for this example

        standardAttributeModel.setName("Jane Doe");// Jane Doe is a more descriptive name for this example

        attributeModelComparator.compare(((AttributeModel) (standardAttributeModel)), attributeModel);
    }
}
statement is: StandardAttributeModel standardAttributeModel = new StandardAttributeModel(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: AttributeModelComparator attributeModelComparator = new AttributeModelComparator(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: AttributeModel attributeModel = new AttributeModel(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: attributeModel.setName("John Doe")// John Doe is a more descriptive name for this example
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: attributeModel.setName("John Doe")// John Doe is a more descriptive name for this example
 target is: attributeModel method is: setName(java.lang.String)
source statement: de.paragon.explorer.model.AttributeModel()V callee: VariableReference: Statement 2, type de.paragon.explorer.model.AttributeModelindex is: 2
Matched Method is: setName(Ljava/lang/String;)V
statement is: standardAttributeModel.setName("Jane Doe")// Jane Doe is a more descriptive name for this example
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: standardAttributeModel.setName("Jane Doe")// Jane Doe is a more descriptive name for this example
 target is: standardAttributeModel method is: setName(java.lang.String)
source statement: de.paragon.explorer.model.StandardAttributeModel()V callee: VariableReference: Statement 0, type de.paragon.explorer.model.StandardAttributeModelindex is: 0
Matched Method is: setName(Ljava/lang/String;)V
statement is: attributeModelComparator.compare(((AttributeModel) (standardAttributeModel)), attributeModel), class spoon.support.reflect.code.CtInvocationImpl
invocation is: attributeModelComparator.compare(((AttributeModel) (standardAttributeModel)), attributeModel) target is: attributeModelComparator method is: compare(AttributeModel,AttributeModel)
source statement: de.paragon.explorer.model.AttributeModelComparator()V callee: VariableReference: Statement 1, type de.paragon.explorer.model.AttributeModelComparatorindex is: 1
Matched Method is: compare(Lde/paragon/explorer/model/AttributeModel;Lde/paragon/explorer/model/AttributeModel;)I
TestCase is: StandardAttributeModel standardAttributeModel = new StandardAttributeModel();
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
AttributeModel attributeModel = new AttributeModel();
String string = "John Doe";
attributeModel.setName(string);
String string = "Jane Doe";
standardAttributeModel.setName(string);
attributeModelComparator.compare((AttributeModel) standardAttributeModel, attributeModel);

* test suite isTestSuite: 18
Test 0: 
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
StandardAttributeModel standardAttributeModel = new StandardAttributeModel();
attributeModelComparator.compare((AttributeModel) null, (AttributeModel) standardAttributeModel);

Test 1: 
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
StandardAttributeModel standardAttributeModel = new StandardAttributeModel();
attributeModelComparator.compare((AttributeModel) standardAttributeModel, (AttributeModel) null);
Test 2: 
StandardAttributeModel standardAttributeModel = new StandardAttributeModel();
standardAttributeModel.setName("G{");
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
attributeModelComparator.compare((AttributeModel) standardAttributeModel, (AttributeModel) standardAttributeModel);
Test 3: 
StandardAttributeModel standardAttributeModel = new StandardAttributeModel();
standardAttributeModel.setName("G{");
StandardAttributeModel standardAttributeModel = new StandardAttributeModel();
standardAttributeModel.setName("");
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
attributeModelComparator.compare((AttributeModel) standardAttributeModel, (AttributeModel) standardAttributeModel);
Test 4: 
StandardAttributeModel standardAttributeModel = new StandardAttributeModel();
standardAttributeModel.setName("tG;");
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
AttributeModel attributeModel = new AttributeModel();
attributeModel.setName("Help");
attributeModelComparator.compare(attributeModel, (AttributeModel) standardAttributeModel);
Test 5: 
StandardAttributeModel standardAttributeModel = new StandardAttributeModel();
standardAttributeModel.setName("]G{");
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
StandardAttributeModel standardAttributeModel = new StandardAttributeModel();
standardAttributeModel.setName("");
attributeModelComparator.compare((AttributeModel) standardAttributeModel, (AttributeModel) standardAttributeModel);
Test 6: 
StandardAttributeModel standardAttributeModel = new StandardAttributeModel();
standardAttributeModel.setName("G{");
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
StandardAttributeModel standardAttributeModel = new StandardAttributeModel();
standardAttributeModel.setName("");
attributeModelComparator.compare((AttributeModel) standardAttributeModel, (AttributeModel) standardAttributeModel);
Test 7: 
StandardAttributeModel standardAttributeModel = new StandardAttributeModel();
standardAttributeModel.setName("tG;");
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
AttributeModel attributeModel = new AttributeModel();
attributeModel.setName("Help");
attributeModelComparator.compare((AttributeModel) standardAttributeModel, attributeModel);
Test 8: 
StandardAttributeModel standardAttributeModel = new StandardAttributeModel();
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
AttributeModel attributeModel = new AttributeModel();
attributeModel.setName("");
standardAttributeModel.setName("=qgLVcY");
attributeModelComparator.compare((AttributeModel) standardAttributeModel, attributeModel);
Test 9: 
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
attributeModelComparator.compare((AttributeModel) null, (AttributeModel) null);

Test 10: 
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
StandardAttributeModel standardAttributeModel = new StandardAttributeModel();
attributeModelComparator.compare((AttributeModel) standardAttributeModel, (AttributeModel) null);
attributeModelComparator.compare((AttributeModel) standardAttributeModel, (AttributeModel) null);

Test 11: 
StandardAttributeModel standardAttributeModel = new StandardAttributeModel();
standardAttributeModel.setName("Grape");
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
((AttributeModelComparator)null).compare((AttributeModel) standardAttributeModel, (AttributeModel) standardAttributeModel);

Test 12: 
StandardAttributeModel standardAttributeModel = new StandardAttributeModel();
standardAttributeModel.setName("John Smith");
StandardAttributeModel standardAttributeModel = new StandardAttributeModel();
standardAttributeModel.setName("Jane Doe");
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
((AttributeModelComparator)"Jane Doe").compare((AttributeModel) standardAttributeModel, (AttributeModel) standardAttributeModel);

Test 13: 
StandardAttributeModel standardAttributeModel = new StandardAttributeModel();
standardAttributeModel.setName("Telephone");
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
AttributeModel attributeModel = new AttributeModel();
((AttributeModel) attributeModelComparator).setName("Phone Number");
((AttributeModelComparator) _void).compare(attributeModel, (AttributeModel) standardAttributeModel);

Test 14: 
StandardAttributeModel standardAttributeModel = new StandardAttributeModel();
standardAttributeModel.setName("John Doe");
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
StandardAttributeModel standardAttributeModel = new StandardAttributeModel();
standardAttributeModel.setName("Jane Smith");
((AttributeModelComparator)null).compare((AttributeModel) standardAttributeModel, (AttributeModel) standardAttributeModel);

Test 15: 
StandardAttributeModel standardAttributeModel = new StandardAttributeModel();
standardAttributeModel.setName("G{");
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
StandardAttributeModel standardAttributeModel = new StandardAttributeModel();
standardAttributeModel.setName("");
((AttributeModelComparator)null).compare((AttributeModel) standardAttributeModel, (AttributeModel) standardAttributeModel);

Test 16: 
StandardAttributeModel standardAttributeModel = new StandardAttributeModel();
standardAttributeModel.setName("Tax");

Test 17: 
StandardAttributeModel standardAttributeModel = new StandardAttributeModel();
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
AttributeModel attributeModel = new AttributeModel();
attributeModel.setName("John Doe");
standardAttributeModel.setName("Jane Doe");
attributeModelComparator.compare((AttributeModel) standardAttributeModel, attributeModel);


* Generated after the refinement and before minimization 18 tests with total length 88
* test suite isTestSuite: 18
Test 0: 
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
StandardAttributeModel standardAttributeModel = new StandardAttributeModel();
attributeModelComparator.compare((AttributeModel) null, (AttributeModel) standardAttributeModel);

Test 1: 
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
StandardAttributeModel standardAttributeModel = new StandardAttributeModel();
attributeModelComparator.compare((AttributeModel) standardAttributeModel, (AttributeModel) null);
Test 2: 
StandardAttributeModel standardAttributeModel = new StandardAttributeModel();
standardAttributeModel.setName("G{");
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
attributeModelComparator.compare((AttributeModel) standardAttributeModel, (AttributeModel) standardAttributeModel);
Test 3: 
StandardAttributeModel standardAttributeModel = new StandardAttributeModel();
standardAttributeModel.setName("G{");
StandardAttributeModel standardAttributeModel = new StandardAttributeModel();
standardAttributeModel.setName("");
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
attributeModelComparator.compare((AttributeModel) standardAttributeModel, (AttributeModel) standardAttributeModel);
Test 4: 
StandardAttributeModel standardAttributeModel = new StandardAttributeModel();
standardAttributeModel.setName("tG;");
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
AttributeModel attributeModel = new AttributeModel();
attributeModel.setName("Help");
attributeModelComparator.compare(attributeModel, (AttributeModel) standardAttributeModel);
Test 5: 
StandardAttributeModel standardAttributeModel = new StandardAttributeModel();
standardAttributeModel.setName("]G{");
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
StandardAttributeModel standardAttributeModel = new StandardAttributeModel();
standardAttributeModel.setName("");
attributeModelComparator.compare((AttributeModel) standardAttributeModel, (AttributeModel) standardAttributeModel);
Test 6: 
StandardAttributeModel standardAttributeModel = new StandardAttributeModel();
standardAttributeModel.setName("G{");
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
StandardAttributeModel standardAttributeModel = new StandardAttributeModel();
standardAttributeModel.setName("");
attributeModelComparator.compare((AttributeModel) standardAttributeModel, (AttributeModel) standardAttributeModel);
Test 7: 
StandardAttributeModel standardAttributeModel = new StandardAttributeModel();
standardAttributeModel.setName("tG;");
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
AttributeModel attributeModel = new AttributeModel();
attributeModel.setName("Help");
attributeModelComparator.compare((AttributeModel) standardAttributeModel, attributeModel);
Test 8: 
StandardAttributeModel standardAttributeModel = new StandardAttributeModel();
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
AttributeModel attributeModel = new AttributeModel();
attributeModel.setName("");
standardAttributeModel.setName("=qgLVcY");
attributeModelComparator.compare((AttributeModel) standardAttributeModel, attributeModel);
Test 9: 
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
attributeModelComparator.compare((AttributeModel) null, (AttributeModel) null);

Test 10: 
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
StandardAttributeModel standardAttributeModel = new StandardAttributeModel();
attributeModelComparator.compare((AttributeModel) standardAttributeModel, (AttributeModel) null);
attributeModelComparator.compare((AttributeModel) standardAttributeModel, (AttributeModel) null);

Test 11: 
StandardAttributeModel standardAttributeModel = new StandardAttributeModel();
standardAttributeModel.setName("Grape");
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
((AttributeModelComparator)null).compare((AttributeModel) standardAttributeModel, (AttributeModel) standardAttributeModel);

Test 12: 
StandardAttributeModel standardAttributeModel = new StandardAttributeModel();
standardAttributeModel.setName("John Smith");
StandardAttributeModel standardAttributeModel = new StandardAttributeModel();
standardAttributeModel.setName("Jane Doe");
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
((AttributeModelComparator)"Jane Doe").compare((AttributeModel) standardAttributeModel, (AttributeModel) standardAttributeModel);

Test 13: 
StandardAttributeModel standardAttributeModel = new StandardAttributeModel();
standardAttributeModel.setName("Telephone");
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
AttributeModel attributeModel = new AttributeModel();
((AttributeModel) attributeModelComparator).setName("Phone Number");
((AttributeModelComparator) _void).compare(attributeModel, (AttributeModel) standardAttributeModel);

Test 14: 
StandardAttributeModel standardAttributeModel = new StandardAttributeModel();
standardAttributeModel.setName("John Doe");
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
StandardAttributeModel standardAttributeModel = new StandardAttributeModel();
standardAttributeModel.setName("Jane Smith");
((AttributeModelComparator)null).compare((AttributeModel) standardAttributeModel, (AttributeModel) standardAttributeModel);

Test 15: 
StandardAttributeModel standardAttributeModel = new StandardAttributeModel();
standardAttributeModel.setName("G{");
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
StandardAttributeModel standardAttributeModel = new StandardAttributeModel();
standardAttributeModel.setName("");
((AttributeModelComparator)null).compare((AttributeModel) standardAttributeModel, (AttributeModel) standardAttributeModel);

Test 16: 
StandardAttributeModel standardAttributeModel = new StandardAttributeModel();
standardAttributeModel.setName("Tax");

Test 17: 
StandardAttributeModel standardAttributeModel = new StandardAttributeModel();
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
AttributeModel attributeModel = new AttributeModel();
attributeModel.setName("John Doe");
standardAttributeModel.setName("Jane Doe");
attributeModelComparator.compare((AttributeModel) standardAttributeModel, attributeModel);


* Minimizing test suite
* test suite isTestSuite: 9
Test 0: 
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
attributeModelComparator.compare((AttributeModel) null, (AttributeModel) null);

Test 1: 
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
StandardAttributeModel standardAttributeModel = new StandardAttributeModel();
attributeModelComparator.compare((AttributeModel) standardAttributeModel, (AttributeModel) null);
Test 2: 
StandardAttributeModel standardAttributeModel = new StandardAttributeModel();
standardAttributeModel.setName("G{");
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
attributeModelComparator.compare((AttributeModel) standardAttributeModel, (AttributeModel) standardAttributeModel);
Test 3: 
StandardAttributeModel standardAttributeModel = new StandardAttributeModel();
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
AttributeModel attributeModel = new AttributeModel();
attributeModel.setName("John Doe");
standardAttributeModel.setName("Jane Doe");
attributeModelComparator.compare((AttributeModel) standardAttributeModel, attributeModel);
Test 4: 
StandardAttributeModel standardAttributeModel = new StandardAttributeModel();
standardAttributeModel.setName("G{");
StandardAttributeModel standardAttributeModel = new StandardAttributeModel();
standardAttributeModel.setName("");
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
attributeModelComparator.compare((AttributeModel) standardAttributeModel, (AttributeModel) standardAttributeModel);
Test 5: 
StandardAttributeModel standardAttributeModel = new StandardAttributeModel();
standardAttributeModel.setName("]G{");
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
StandardAttributeModel standardAttributeModel = new StandardAttributeModel();
standardAttributeModel.setName("");
attributeModelComparator.compare((AttributeModel) standardAttributeModel, (AttributeModel) standardAttributeModel);
Test 6: 
StandardAttributeModel standardAttributeModel = new StandardAttributeModel();
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
AttributeModel attributeModel = new AttributeModel();
attributeModel.setName("");
standardAttributeModel.setName("=qgLVcY");
attributeModelComparator.compare((AttributeModel) standardAttributeModel, attributeModel);
Test 7: 
StandardAttributeModel standardAttributeModel = new StandardAttributeModel();
standardAttributeModel.setName("tG;");
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
AttributeModel attributeModel = new AttributeModel();
attributeModel.setName("Help");
attributeModelComparator.compare((AttributeModel) standardAttributeModel, attributeModel);
Test 8: 
StandardAttributeModel standardAttributeModel = new StandardAttributeModel();
standardAttributeModel.setName("G{");
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
StandardAttributeModel standardAttributeModel = new StandardAttributeModel();
standardAttributeModel.setName("");
attributeModelComparator.compare((AttributeModel) standardAttributeModel, (AttributeModel) standardAttributeModel);

* Going to analyze the coverage criteria
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 100%
* Total number of goals: 17
* Number of covered goals: 17
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 100%
* Total number of goals: 12
* Number of covered goals: 12
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 100%
* Total number of goals: 3
* Number of covered goals: 3
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 2
* Number of covered goals: 2
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 100%
* Total number of goals: 17
* Number of covered goals: 17
* Generated 9 tests with total length 45
* Resulting test suite's coverage: 100% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 81%
* Compiling and checking tests
Going to execute: removeTestsThatDoNotCompile
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
int compare = attributeModelComparator.compare((AttributeModel) null, (AttributeModel) null);
assertEquals((-1), compare);


** It was a parseable test case! 
refined test name is: testCompareWithNullValues
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
StandardAttributeModel arg0 = new StandardAttributeModel();
int compare = attributeModelComparator.compare((AttributeModel) arg0, (AttributeModel) null);
assertEquals((-1), compare);


** It was a parseable test case! 
refined test name is: testCompareWithNullArgumentReturnsMinusOne
* Compiling Tests
refined test name is: testCompareWithNullArgumentReturnsNegativeOne
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: StandardAttributeModel arg1 = new StandardAttributeModel();
arg1.setName("G{");
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
int compare = attributeModelComparator.compare((AttributeModel) arg1, (AttributeModel) arg1);
assertEquals(0, compare);


** It was a parseable test case! 
refined test name is: testCompareEqualInstances
* Compiling Tests
refined test name is: testCompareEqualStandardAttributeModels
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: StandardAttributeModel arg0 = new StandardAttributeModel();
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
AttributeModel arg1 = new AttributeModel();
arg1.setName("John Doe");
arg0.setName("Jane Doe");
int compare = attributeModelComparator.compare((AttributeModel) arg0, arg1);
assertEquals((-14), compare);


** It was a parseable test case! 
refined test name is: testCompareAttributeModelsUsingComparator
* Compiling Tests
refined test name is: testCompareAttributeModels
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: StandardAttributeModel arg1 = new StandardAttributeModel();
arg1.setName("G{");
StandardAttributeModel arg0 = new StandardAttributeModel();
arg0.setName("");
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
int compare = attributeModelComparator.compare((AttributeModel) arg0, (AttributeModel) arg1);
assertEquals(1, compare);


** It was a parseable test case! 
refined test name is: testComparisonOfDifferentNamedModels
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: StandardAttributeModel arg1 = new StandardAttributeModel();
arg1.setName("]G{");
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
StandardAttributeModel arg0 = new StandardAttributeModel();
arg0.setName("");
int compare = attributeModelComparator.compare((AttributeModel) arg0, (AttributeModel) arg1);
assertEquals((-3), compare);


** It was a parseable test case! 
refined test name is: testCompareReturnsNegativeValueForDifferentNames
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: StandardAttributeModel arg0 = new StandardAttributeModel();
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
AttributeModel arg1 = new AttributeModel();
arg1.setName("");
arg0.setName("=qgLVcY");
int compare = attributeModelComparator.compare((AttributeModel) arg0, arg1);
assertEquals(7, compare);


** It was a parseable test case! 
refined test name is: testCompareWithDifferentNames
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: StandardAttributeModel arg0 = new StandardAttributeModel();
arg0.setName("tG;");
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
AttributeModel arg1 = new AttributeModel();
arg1.setName("Help");
int compare = attributeModelComparator.compare((AttributeModel) arg0, arg1);
assertEquals(12, compare);


** It was a parseable test case! 
refined test name is: testCompareAttributeModelWithNameTGAndHelp
* Compiling Tests
refined test name is: testCompareAttributeModelsstandardModelBeforeHelp
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: StandardAttributeModel arg0 = new StandardAttributeModel();
arg0.setName("G{");
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
StandardAttributeModel arg1 = new StandardAttributeModel();
arg1.setName("");
int compare = attributeModelComparator.compare((AttributeModel) arg0, (AttributeModel) arg1);
assertEquals((-1), compare);


** It was a parseable test case! 
refined test name is: testCompareAttributeModelWithDifferentNames
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 10:18:32.973 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar8516508169558494719.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 10:18:32.991 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8516508169558494719.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 10:18:33.092 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar8516508169558494719.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 10:18:33.096 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8516508169558494719.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 10:18:33.174 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar8516508169558494719.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 10:18:33.176 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8516508169558494719.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 10:18:33.260 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar8516508169558494719.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 10:18:33.261 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8516508169558494719.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 10:18:33.334 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar8516508169558494719.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 10:18:33.335 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8516508169558494719.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 10:18:33.431 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar8516508169558494719.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 10:18:33.432 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8516508169558494719.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 10:18:33.514 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar8516508169558494719.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 10:18:33.515 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8516508169558494719.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 10:18:33.592 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar8516508169558494719.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 10:18:33.593 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8516508169558494719.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 10:18:33.732 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar8516508169558494719.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 10:18:33.733 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8516508169558494719.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 1 called: 0 to improve: false
** Write a test suite: 2 called: 1 to improve: false
** Write a test suite: 3 called: 2 to improve: false
** Write a test suite: 7 called: 3 to improve: false
[MASTER] 10:18:33.989 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar8516508169558494719.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 10:18:33.990 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8516508169558494719.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 1 called: 0 to improve: false
** Write a test suite: 5 called: 1 to improve: false
** Write a test suite: 6 called: 2 to improve: false
** Write a test suite: 7 called: 3 to improve: false
[MASTER] 10:18:34.209 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar8516508169558494719.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 10:18:34.211 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8516508169558494719.jar
[MASTER] 10:18:34.359 [logback-1] WARN  TimeController - Already entered in phase: INLINING. This will mess up the timing calculations.
* test suite isTestSuite: 9
Test 0: 
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
StandardAttributeModel standardAttributeModel = new StandardAttributeModel();
attributeModelComparator.compare((AttributeModel) null, (AttributeModel) standardAttributeModel);

Test 1: 
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
StandardAttributeModel standardAttributeModel = new StandardAttributeModel();
attributeModelComparator.compare((AttributeModel) standardAttributeModel, (AttributeModel) null);
Test 2: 
StandardAttributeModel standardAttributeModel = new StandardAttributeModel();
standardAttributeModel.setName("G{");
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
attributeModelComparator.compare((AttributeModel) standardAttributeModel, (AttributeModel) standardAttributeModel);
Test 3: 
StandardAttributeModel standardAttributeModel = new StandardAttributeModel();
standardAttributeModel.setName("G{");
StandardAttributeModel standardAttributeModel = new StandardAttributeModel();
standardAttributeModel.setName("");
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
attributeModelComparator.compare((AttributeModel) standardAttributeModel, (AttributeModel) standardAttributeModel);
Test 4: 
StandardAttributeModel standardAttributeModel = new StandardAttributeModel();
standardAttributeModel.setName("tG;");
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
AttributeModel attributeModel = new AttributeModel();
attributeModel.setName("Help");
attributeModelComparator.compare(attributeModel, (AttributeModel) standardAttributeModel);
Test 5: 
StandardAttributeModel standardAttributeModel = new StandardAttributeModel();
standardAttributeModel.setName("]G{");
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
StandardAttributeModel standardAttributeModel = new StandardAttributeModel();
standardAttributeModel.setName("");
attributeModelComparator.compare((AttributeModel) standardAttributeModel, (AttributeModel) standardAttributeModel);
Test 6: 
StandardAttributeModel standardAttributeModel = new StandardAttributeModel();
standardAttributeModel.setName("G{");
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
StandardAttributeModel standardAttributeModel = new StandardAttributeModel();
standardAttributeModel.setName("");
attributeModelComparator.compare((AttributeModel) standardAttributeModel, (AttributeModel) standardAttributeModel);
Test 7: 
StandardAttributeModel standardAttributeModel = new StandardAttributeModel();
standardAttributeModel.setName("tG;");
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
AttributeModel attributeModel = new AttributeModel();
attributeModel.setName("Help");
attributeModelComparator.compare((AttributeModel) standardAttributeModel, attributeModel);
Test 8: 
StandardAttributeModel standardAttributeModel = new StandardAttributeModel();
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
AttributeModel attributeModel = new AttributeModel();
attributeModel.setName("");
standardAttributeModel.setName("=qgLVcY");
attributeModelComparator.compare((AttributeModel) standardAttributeModel, attributeModel);

* Minimizing test suite
[MASTER] 10:18:36.064 [logback-1] WARN  TimeController - Already entered in phase: MINIMIZATION. This will mess up the timing calculations.
* test suite isTestSuite: 9
Test 0: 
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
StandardAttributeModel standardAttributeModel = new StandardAttributeModel();
attributeModelComparator.compare((AttributeModel) null, (AttributeModel) standardAttributeModel);

Test 1: 
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
StandardAttributeModel standardAttributeModel = new StandardAttributeModel();
attributeModelComparator.compare((AttributeModel) standardAttributeModel, (AttributeModel) null);
Test 2: 
StandardAttributeModel standardAttributeModel = new StandardAttributeModel();
standardAttributeModel.setName("G{");
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
attributeModelComparator.compare((AttributeModel) standardAttributeModel, (AttributeModel) standardAttributeModel);
Test 3: 
StandardAttributeModel standardAttributeModel = new StandardAttributeModel();
standardAttributeModel.setName("G{");
StandardAttributeModel standardAttributeModel = new StandardAttributeModel();
standardAttributeModel.setName("");
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
attributeModelComparator.compare((AttributeModel) standardAttributeModel, (AttributeModel) standardAttributeModel);
Test 4: 
StandardAttributeModel standardAttributeModel = new StandardAttributeModel();
standardAttributeModel.setName("tG;");
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
AttributeModel attributeModel = new AttributeModel();
attributeModel.setName("Help");
attributeModelComparator.compare(attributeModel, (AttributeModel) standardAttributeModel);
Test 5: 
StandardAttributeModel standardAttributeModel = new StandardAttributeModel();
standardAttributeModel.setName("]G{");
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
StandardAttributeModel standardAttributeModel = new StandardAttributeModel();
standardAttributeModel.setName("");
attributeModelComparator.compare((AttributeModel) standardAttributeModel, (AttributeModel) standardAttributeModel);
Test 6: 
StandardAttributeModel standardAttributeModel = new StandardAttributeModel();
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
AttributeModel attributeModel = new AttributeModel();
attributeModel.setName("");
standardAttributeModel.setName("=qgLVcY");
attributeModelComparator.compare((AttributeModel) standardAttributeModel, attributeModel);
Test 7: 
StandardAttributeModel standardAttributeModel = new StandardAttributeModel();
standardAttributeModel.setName("tG;");
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
AttributeModel attributeModel = new AttributeModel();
attributeModel.setName("Help");
attributeModelComparator.compare((AttributeModel) standardAttributeModel, attributeModel);
Test 8: 
StandardAttributeModel standardAttributeModel = new StandardAttributeModel();
standardAttributeModel.setName("G{");
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
StandardAttributeModel standardAttributeModel = new StandardAttributeModel();
standardAttributeModel.setName("");
attributeModelComparator.compare((AttributeModel) standardAttributeModel, (AttributeModel) standardAttributeModel);

* Going to analyze the coverage criteria
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 100%
* Total number of goals: 17
* Number of covered goals: 17
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 100%
* Total number of goals: 12
* Number of covered goals: 12
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 100%
* Total number of goals: 3
* Number of covered goals: 3
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 2
* Number of covered goals: 2
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 100%
* Total number of goals: 17
* Number of covered goals: 17
* Generated 9 tests with total length 46
* Resulting test suite's coverage: 100% (average coverage for all fitness functions)
* Generating assertions
[MASTER] 10:18:36.121 [logback-1] WARN  TimeController - Already entered in phase: COVERAGE_ANALYSIS. This will mess up the timing calculations.
* Resulting test suite's mutation score: 83%
* Compiling and checking tests
[MASTER] 10:18:36.770 [logback-1] WARN  TimeController - Already entered in phase: ASSERTION_GENERATION. This will mess up the timing calculations.
Going to execute: removeTestsThatDoNotCompile
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 10:18:37.509 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar8516508169558494719.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 10:18:37.510 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8516508169558494719.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 10:18:37.578 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar8516508169558494719.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 10:18:37.579 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8516508169558494719.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 10:18:37.635 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar8516508169558494719.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 10:18:37.636 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8516508169558494719.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 10:18:37.680 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar8516508169558494719.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 10:18:37.682 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8516508169558494719.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 10:18:37.727 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar8516508169558494719.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 10:18:37.728 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8516508169558494719.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 10:18:37.783 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar8516508169558494719.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 10:18:37.784 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8516508169558494719.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 10:18:37.841 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar8516508169558494719.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 10:18:37.842 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8516508169558494719.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 10:18:37.897 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar8516508169558494719.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 10:18:37.898 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8516508169558494719.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 10:18:37.950 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar8516508169558494719.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 10:18:37.953 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8516508169558494719.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
** Write a test suite: 1 called: 1 to improve: false
** Write a test suite: 2 called: 2 to improve: false
** Write a test suite: 3 called: 3 to improve: false
** Write a test suite: 4 called: 4 to improve: false
** Write a test suite: 5 called: 5 to improve: false
** Write a test suite: 6 called: 6 to improve: false
** Write a test suite: 7 called: 7 to improve: false
** Write a test suite: 8 called: 8 to improve: false
[MASTER] 10:18:38.081 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar8516508169558494719.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 10:18:38.082 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8516508169558494719.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
** Write a test suite: 1 called: 1 to improve: false
** Write a test suite: 2 called: 2 to improve: false
** Write a test suite: 3 called: 3 to improve: false
** Write a test suite: 4 called: 4 to improve: false
** Write a test suite: 5 called: 5 to improve: false
** Write a test suite: 6 called: 6 to improve: false
** Write a test suite: 7 called: 7 to improve: false
** Write a test suite: 8 called: 8 to improve: false
[MASTER] 10:18:38.247 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar8516508169558494719.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 10:18:38.248 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar8516508169558494719.jar
* Writing tests to file
[MASTER] 10:18:38.261 [logback-1] WARN  TimeController - Already entered in phase: JUNIT_CHECK. This will mess up the timing calculations.
* Writing JUnit test case 'AttributeModelComparator_ESTest' to evosuite-tests
** Write a test suite: 1 called: 0 to improve: false
** Write a test suite: 5 called: 1 to improve: false
** Write a test suite: 6 called: 2 to improve: false
** Write a test suite: 7 called: 3 to improve: false
* Writing JUnit test case 'AttributeModelComparator_Original_ESTest' to evosuite-tests
** Write a test suite: 0 called: 0 to improve: false
** Write a test suite: 1 called: 1 to improve: false
** Write a test suite: 2 called: 2 to improve: false
** Write a test suite: 3 called: 3 to improve: false
** Write a test suite: 4 called: 4 to improve: false
** Write a test suite: 5 called: 5 to improve: false
** Write a test suite: 6 called: 6 to improve: false
** Write a test suite: 7 called: 7 to improve: false
** Write a test suite: 8 called: 8 to improve: false
* Done!

* Computation finished
