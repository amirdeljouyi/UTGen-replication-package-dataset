* EvoSuite 1.0.0-SNAPSHOT
* Going to generate test cases for class: de.paragon.explorer.model.AttributeModelComparator
* Starting Client-0
* Properties loaded from /home/roham/Results-Utestgen/dataset/SF110-new-res/63_objectexplorer/evosuite-files/evosuite.properties
* Connecting to master process on port 16291
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 13:10:07.845 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 13:10:07.858 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.ToDoubleFunction
[MASTER] 13:10:07.859 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.ToIntFunction
[MASTER] 13:10:07.860 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.ToLongFunction
[MASTER] 13:10:08.266 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 13:10:08.271 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 13:10:08.272 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 13:10:10.346 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 13:10:10.348 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
[MASTER] 13:10:11.784 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.ZoneId
[MASTER] 13:10:11.868 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.Temporal
[MASTER] 13:10:11.869 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAccessor
[MASTER] 13:10:11.869 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalField
[MASTER] 13:10:11.870 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalUnit
[MASTER] 13:10:11.870 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAmount
[MASTER] 13:10:11.870 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.Clock
[MASTER] 13:10:11.871 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalQuery
[MASTER] 13:10:11.876 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAdjuster
[MASTER] 13:10:11.896 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.Chronology
[MASTER] 13:10:11.908 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.Era
* Finished analyzing classpath
* Generating tests for class de.paragon.explorer.model.AttributeModelComparator
* Test criteria:
  - Branch Coverage
  - Line Coverage
  - Method-Output Coverage
  - Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 51
* Using seed 1710249006066
* Starting evolution
[Progress:>                             0%] [Cov:>                                  0%]* Initial Number of Goals in DynaMOSA = 10 / 51
[MASTER] 13:10:13.059 [logback-1] WARN  TestCluster - Failed to check cache for java.lang.Comparable<T> : Type points to itself
[Progress:>                             0%] [Cov:======================>            63%][Progress:>                             1%] [Cov:======================>            63%][Progress:>                             1%] [Cov:======================>            63%][Progress:>                             1%] [Cov:======================>            63%][Progress:>                             1%] [Cov:======================>            63%][Progress:>                             1%] [Cov:======================>            63%][Progress:>                             1%] [Cov:======================>            63%][Progress:>                             1%] [Cov:======================>            63%][MASTER] 13:10:16.799 [logback-1] WARN  TestCluster - Failed to check cache for java.util.function.Function<T, R> : Type points to itself
[Progress:>                             2%] [Cov:======================>            63%][Progress:>                             2%] [Cov:======================>            63%][Progress:>                             2%] [Cov:======================>            63%][Progress:>                             2%] [Cov:======================>            63%][Progress:>                             2%] [Cov:======================>            63%][Progress:>                             2%] [Cov:======================>            63%][Progress:>                             2%] [Cov:======================>            63%][Progress:>                             2%] [Cov:======================>            63%][Progress:>                             2%] [Cov:======================>            63%][Progress:>                             2%] [Cov:======================>            63%][Progress:>                             2%] [Cov:======================>            63%][Progress:>                             3%] [Cov:======================>            63%][Progress:>                             3%] [Cov:======================>            63%][Progress:>                             3%] [Cov:======================>            63%][Progress:>                             3%] [Cov:======================>            63%][Progress:>                             3%] [Cov:======================>            63%][Progress:>                             3%] [Cov:======================>            63%][Progress:>                             3%] [Cov:============================>      80%][Progress:>                             3%] [Cov:===============================>   90%][Progress:>                             3%] [Cov:================================>  92%][Progress:>                             3%] [Cov:=================================> 95%][Progress:>                             3%] [Cov:=================================> 95%][Progress:>                             3%] [Cov:===================================100%]
* Search finished after 8s and 30 generations, 14235 statements, best individual has fitness: 0.0
* Generated before the refinement 9 tests with total length 45
statement is: de.paragon.explorer.model.AttributeModelComparator()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.paragon.explorer.model.AttributeModelComparator
statement code is: AttributeModelComparator attributeModelComparator = new AttributeModelComparator()
statement is: compare(Lde/paragon/explorer/model/AttributeModel;Lde/paragon/explorer/model/AttributeModel;)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int compare = attributeModelComparator.compare((AttributeModel) null, (AttributeModel) null)
test data is: AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
attributeModelComparator.compare((AttributeModel) null, (AttributeModel) null);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
        attributeModelComparator.compare(new AttributeModel("name", "value"), new AttributeModel("name", "value"));
    }
}
statement is: AttributeModelComparator attributeModelComparator = new AttributeModelComparator(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: attributeModelComparator.compare(new AttributeModel("name", "value"), new AttributeModel("name", "value")), class spoon.support.reflect.code.CtInvocationImpl
invocation is: attributeModelComparator.compare(new AttributeModel("name", "value"), new AttributeModel("name", "value")) target is: attributeModelComparator method is: compare(AttributeModel,AttributeModel)
source statement: de.paragon.explorer.model.AttributeModelComparator()V callee: VariableReference: Statement 0, type de.paragon.explorer.model.AttributeModelComparatorindex is: 0
Matched Method is: compare(Lde/paragon/explorer/model/AttributeModel;Lde/paragon/explorer/model/AttributeModel;)I
i 0 Parameters size() 0 Num of Method Parameters: 2
i 1 Parameters size() 0 Num of Method Parameters: 2
TestCase is: AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
AttributeModel attributeModel = null;
AttributeModel attributeModel = null;
attributeModelComparator.compare(attributeModel, attributeModel);

statement is: de.paragon.explorer.model.AttributeModelComparator()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.paragon.explorer.model.AttributeModelComparator
statement code is: AttributeModelComparator attributeModelComparator = new AttributeModelComparator()
statement is: de.paragon.explorer.model.ArrayAttributeModel()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.paragon.explorer.model.ArrayAttributeModel
statement code is: ArrayAttributeModel arrayAttributeModel = new ArrayAttributeModel()
statement is: compare(Lde/paragon/explorer/model/AttributeModel;Lde/paragon/explorer/model/AttributeModel;)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int compare = attributeModelComparator.compare((AttributeModel) arg0, (AttributeModel) null)
test data is: AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
ArrayAttributeModel arrayAttributeModel = new ArrayAttributeModel();
attributeModelComparator.compare((AttributeModel) arrayAttributeModel, (AttributeModel) null);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
        ArrayAttributeModel arrayAttributeModel = new ArrayAttributeModel();
        attributeModelComparator.compare(((AttributeModel) (arrayAttributeModel)), ((AttributeModel) (null)));
        dataType : {
        }
        nullAttributeModel = null;
        expectedResult = false;
    }
}
statement is: AttributeModelComparator attributeModelComparator = new AttributeModelComparator(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: ArrayAttributeModel arrayAttributeModel = new ArrayAttributeModel(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: attributeModelComparator.compare(((AttributeModel) (arrayAttributeModel)), ((AttributeModel) (null))), class spoon.support.reflect.code.CtInvocationImpl
invocation is: attributeModelComparator.compare(((AttributeModel) (arrayAttributeModel)), ((AttributeModel) (null))) target is: attributeModelComparator method is: compare(AttributeModel,AttributeModel)
source statement: de.paragon.explorer.model.AttributeModelComparator()V callee: VariableReference: Statement 0, type de.paragon.explorer.model.AttributeModelComparatorindex is: 0
Matched Method is: compare(Lde/paragon/explorer/model/AttributeModel;Lde/paragon/explorer/model/AttributeModel;)I
i 1 Parameters size() 1 Num of Method Parameters: 2
statement is: dataType : {
}, class spoon.support.reflect.code.CtBlockImpl
statement is: nullAttributeModel = null, class spoon.support.reflect.code.CtAssignmentImpl
statement is: expectedResult = false, class spoon.support.reflect.code.CtAssignmentImpl
TestCase is: AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
ArrayAttributeModel arrayAttributeModel = new ArrayAttributeModel();
AttributeModel attributeModel = null;
attributeModelComparator.compare((AttributeModel) arrayAttributeModel, attributeModel);

statement is: de.paragon.explorer.model.AttributeModelComparator()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.paragon.explorer.model.AttributeModelComparator
statement code is: AttributeModelComparator attributeModelComparator = new AttributeModelComparator()
statement is: de.paragon.explorer.model.AttributeModel()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.paragon.explorer.model.AttributeModel
statement code is: AttributeModel attributeModel = new AttributeModel()
statement is: setName(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: attributeModel.setName("")
statement is: compare(Lde/paragon/explorer/model/AttributeModel;Lde/paragon/explorer/model/AttributeModel;)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int compare = attributeModelComparator.compare(arg1, arg1)
test data is: AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
AttributeModel attributeModel = new AttributeModel();
attributeModel.setName("");
attributeModelComparator.compare(attributeModel, attributeModel);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
        AttributeModel attributeModel1 = new AttributeModel();
        attributeModel1.setName("john");
        attributeModelComparator.compare(attributeModel1, attributeModel1);
        AttributeModel attributeModel2 = new AttributeModel();
        attributeModel2.setName("doe");
        attributeModelComparator.compare(attributeModel2, attributeModel2);
        AttributeModel attributeModel3 = new AttributeModel();
        attributeModel3.setName("jane");
        attributeModelComparator.compare(attributeModel3, attributeModel3);
    }
}
statement is: AttributeModelComparator attributeModelComparator = new AttributeModelComparator(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: AttributeModel attributeModel1 = new AttributeModel(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: attributeModel1.setName("john"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: attributeModel1.setName("john") target is: attributeModel1 method is: setName(java.lang.String)
source statement: de.paragon.explorer.model.AttributeModel()V callee: VariableReference: Statement 1, type de.paragon.explorer.model.AttributeModelindex is: 1
Matched Method is: setName(Ljava/lang/String;)V
statement is: attributeModelComparator.compare(attributeModel1, attributeModel1), class spoon.support.reflect.code.CtInvocationImpl
invocation is: attributeModelComparator.compare(attributeModel1, attributeModel1) target is: attributeModelComparator method is: compare(AttributeModel,AttributeModel)
source statement: de.paragon.explorer.model.AttributeModelComparator()V callee: VariableReference: Statement 0, type de.paragon.explorer.model.AttributeModelComparatorindex is: 0
Matched Method is: compare(Lde/paragon/explorer/model/AttributeModel;Lde/paragon/explorer/model/AttributeModel;)I
statement is: AttributeModel attributeModel2 = new AttributeModel(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: attributeModel2.setName("doe"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: attributeModel2.setName("doe") target is: attributeModel2 method is: setName(java.lang.String)
source statement: de.paragon.explorer.model.AttributeModel()V callee: VariableReference: Statement 1, type de.paragon.explorer.model.AttributeModelindex is: 5
Matched Method is: setName(Ljava/lang/String;)V
statement is: attributeModelComparator.compare(attributeModel2, attributeModel2), class spoon.support.reflect.code.CtInvocationImpl
invocation is: attributeModelComparator.compare(attributeModel2, attributeModel2) target is: attributeModelComparator method is: compare(AttributeModel,AttributeModel)
source statement: de.paragon.explorer.model.AttributeModelComparator()V callee: VariableReference: Statement 0, type de.paragon.explorer.model.AttributeModelComparatorindex is: 0
Matched Method is: compare(Lde/paragon/explorer/model/AttributeModel;Lde/paragon/explorer/model/AttributeModel;)I
statement is: AttributeModel attributeModel3 = new AttributeModel(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: attributeModel3.setName("jane"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: attributeModel3.setName("jane") target is: attributeModel3 method is: setName(java.lang.String)
source statement: de.paragon.explorer.model.AttributeModel()V callee: VariableReference: Statement 1, type de.paragon.explorer.model.AttributeModelindex is: 9
Matched Method is: setName(Ljava/lang/String;)V
statement is: attributeModelComparator.compare(attributeModel3, attributeModel3), class spoon.support.reflect.code.CtInvocationImpl
invocation is: attributeModelComparator.compare(attributeModel3, attributeModel3) target is: attributeModelComparator method is: compare(AttributeModel,AttributeModel)
source statement: de.paragon.explorer.model.AttributeModelComparator()V callee: VariableReference: Statement 0, type de.paragon.explorer.model.AttributeModelComparatorindex is: 0
Matched Method is: compare(Lde/paragon/explorer/model/AttributeModel;Lde/paragon/explorer/model/AttributeModel;)I
TestCase is: AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
AttributeModel attributeModel = new AttributeModel();
String string = "john";
attributeModel.setName(string);
attributeModelComparator.compare(attributeModel, attributeModel);
AttributeModel attributeModel = new AttributeModel();
String string = "doe";
attributeModel.setName(string);
attributeModelComparator.compare(attributeModel, attributeModel);
AttributeModel attributeModel = new AttributeModel();
String string = "jane";
attributeModel.setName(string);
attributeModelComparator.compare(attributeModel, attributeModel);

statement is: de.paragon.explorer.model.AttributeModelComparator()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.paragon.explorer.model.AttributeModelComparator
statement code is: AttributeModelComparator attributeModelComparator = new AttributeModelComparator()
statement is: de.paragon.explorer.model.AttributeModel()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.paragon.explorer.model.AttributeModel
statement code is: AttributeModel attributeModel = new AttributeModel()
statement is: setName(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: attributeModel.setName("")
statement is: de.paragon.explorer.model.StandardAttributeModel()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.paragon.explorer.model.StandardAttributeModel
statement code is: StandardAttributeModel standardAttributeModel = new StandardAttributeModel()
statement is: setName(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: standardAttributeModel.setName("|R")
statement is: compare(Lde/paragon/explorer/model/AttributeModel;Lde/paragon/explorer/model/AttributeModel;)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int compare = attributeModelComparator.compare(arg0, (AttributeModel) arg1)
test data is: AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
AttributeModel attributeModel = new AttributeModel();
attributeModel.setName("");
StandardAttributeModel standardAttributeModel = new StandardAttributeModel();
standardAttributeModel.setName("|R");
attributeModelComparator.compare(attributeModel, (AttributeModel) standardAttributeModel);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
        AttributeModel attributeModel = new AttributeModel();
        attributeModel.setName("Favorite Book");
        StandardAttributeModel standardAttributeModel = new StandardAttributeModel();
        standardAttributeModel.setName("|R");
        attributeModelComparator.compare(attributeModel, ((AttributeModel) (standardAttributeModel)));
    }
}
statement is: AttributeModelComparator attributeModelComparator = new AttributeModelComparator(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: AttributeModel attributeModel = new AttributeModel(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: attributeModel.setName("Favorite Book"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: attributeModel.setName("Favorite Book") target is: attributeModel method is: setName(java.lang.String)
source statement: de.paragon.explorer.model.AttributeModel()V callee: VariableReference: Statement 1, type de.paragon.explorer.model.AttributeModelindex is: 1
Matched Method is: setName(Ljava/lang/String;)V
statement is: StandardAttributeModel standardAttributeModel = new StandardAttributeModel(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: standardAttributeModel.setName("|R"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: standardAttributeModel.setName("|R") target is: standardAttributeModel method is: setName(java.lang.String)
source statement: de.paragon.explorer.model.StandardAttributeModel()V callee: VariableReference: Statement 3, type de.paragon.explorer.model.StandardAttributeModelindex is: 4
Matched Method is: setName(Ljava/lang/String;)V
statement is: attributeModelComparator.compare(attributeModel, ((AttributeModel) (standardAttributeModel))), class spoon.support.reflect.code.CtInvocationImpl
invocation is: attributeModelComparator.compare(attributeModel, ((AttributeModel) (standardAttributeModel))) target is: attributeModelComparator method is: compare(AttributeModel,AttributeModel)
source statement: de.paragon.explorer.model.AttributeModelComparator()V callee: VariableReference: Statement 0, type de.paragon.explorer.model.AttributeModelComparatorindex is: 0
Matched Method is: compare(Lde/paragon/explorer/model/AttributeModel;Lde/paragon/explorer/model/AttributeModel;)I
TestCase is: AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
AttributeModel attributeModel = new AttributeModel();
String string = "Favorite Book";
attributeModel.setName(string);
StandardAttributeModel standardAttributeModel = new StandardAttributeModel();
String string = "|R";
((AttributeModel) _void).setName(string);
attributeModelComparator.compare(attributeModel, (AttributeModel) standardAttributeModel);

statement is: de.paragon.explorer.model.AttributeModelComparator()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.paragon.explorer.model.AttributeModelComparator
statement code is: AttributeModelComparator attributeModelComparator = new AttributeModelComparator()
statement is: de.paragon.explorer.model.AttributeModel()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.paragon.explorer.model.AttributeModel
statement code is: AttributeModel attributeModel = new AttributeModel()
statement is: setName(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: attributeModel.setName("e")
statement is: de.paragon.explorer.model.AttributeModel()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.paragon.explorer.model.AttributeModel
statement code is: AttributeModel attributeModel = new AttributeModel()
statement is: setName(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: attributeModel.setName("WY|7(@+")
statement is: compare(Lde/paragon/explorer/model/AttributeModel;Lde/paragon/explorer/model/AttributeModel;)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int compare = attributeModelComparator.compare(arg0, arg1)
test data is: AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
AttributeModel attributeModel = new AttributeModel();
attributeModel.setName("e");
AttributeModel attributeModel = new AttributeModel();
attributeModel.setName("WY|7(@+");
attributeModelComparator.compare(attributeModel, attributeModel);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
        AttributeModel attributeModel1 = new AttributeModel();
        attributeModel1.setName("elephant");// Changed the name from "e" to "elephant" to make it more descriptive and representative of the situation being tested.

        AttributeModel attributeModel2 = new AttributeModel();
        attributeModel2.setName("wild yak");// Changed the name from "WY|7(@+" to "wild yak" to make it more descriptive and representative of the situation being tested.

        attributeModelComparator.compare(attributeModel1, attributeModel2);
    }
}
statement is: AttributeModelComparator attributeModelComparator = new AttributeModelComparator(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: AttributeModel attributeModel1 = new AttributeModel(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: attributeModel1.setName("elephant")// Changed the name from "e" to "elephant" to make it more descriptive and representative of the situation being tested.
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: attributeModel1.setName("elephant")// Changed the name from "e" to "elephant" to make it more descriptive and representative of the situation being tested.
 target is: attributeModel1 method is: setName(java.lang.String)
source statement: de.paragon.explorer.model.AttributeModel()V callee: VariableReference: Statement 1, type de.paragon.explorer.model.AttributeModelindex is: 1
Matched Method is: setName(Ljava/lang/String;)V
statement is: AttributeModel attributeModel2 = new AttributeModel(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: attributeModel2.setName("wild yak")// Changed the name from "WY|7(@+" to "wild yak" to make it more descriptive and representative of the situation being tested.
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: attributeModel2.setName("wild yak")// Changed the name from "WY|7(@+" to "wild yak" to make it more descriptive and representative of the situation being tested.
 target is: attributeModel2 method is: setName(java.lang.String)
source statement: de.paragon.explorer.model.AttributeModel()V callee: VariableReference: Statement 1, type de.paragon.explorer.model.AttributeModelindex is: 4
Matched Method is: setName(Ljava/lang/String;)V
statement is: attributeModelComparator.compare(attributeModel1, attributeModel2), class spoon.support.reflect.code.CtInvocationImpl
invocation is: attributeModelComparator.compare(attributeModel1, attributeModel2) target is: attributeModelComparator method is: compare(AttributeModel,AttributeModel)
source statement: de.paragon.explorer.model.AttributeModelComparator()V callee: VariableReference: Statement 0, type de.paragon.explorer.model.AttributeModelComparatorindex is: 0
Matched Method is: compare(Lde/paragon/explorer/model/AttributeModel;Lde/paragon/explorer/model/AttributeModel;)I
TestCase is: AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
AttributeModel attributeModel = new AttributeModel();
String string = "elephant";
attributeModel.setName(string);
AttributeModel attributeModel = new AttributeModel();
String string = "wild yak";
attributeModel.setName(string);
attributeModelComparator.compare(attributeModel, attributeModel);

statement is: de.paragon.explorer.model.AttributeModelComparator()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.paragon.explorer.model.AttributeModelComparator
statement code is: AttributeModelComparator attributeModelComparator = new AttributeModelComparator()
statement is: de.paragon.explorer.model.AttributeModel()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.paragon.explorer.model.AttributeModel
statement code is: AttributeModel attributeModel = new AttributeModel()
statement is: setName(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: attributeModel.setName("")
statement is: de.paragon.explorer.model.AttributeModel()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.paragon.explorer.model.AttributeModel
statement code is: AttributeModel attributeModel = new AttributeModel()
statement is: setName(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: attributeModel.setName(";TM5[w3cjl")
statement is: compare(Lde/paragon/explorer/model/AttributeModel;Lde/paragon/explorer/model/AttributeModel;)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int compare = attributeModelComparator.compare(arg0, arg1)
test data is: AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
AttributeModel attributeModel = new AttributeModel();
attributeModel.setName("");
AttributeModel attributeModel = new AttributeModel();
attributeModel.setName(";TM5[w3cjl");
attributeModelComparator.compare(attributeModel, attributeModel);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
        AttributeModel attributeModel1 = new AttributeModel();
        attributeModel1.setName("Pizza");
        attributeModel1.setPrice(5.0);
        attributeModel1.setDescription("A delicious pizza with cheese, pepperoni, and tomato sauce.");
        AttributeModel attributeModel2 = new AttributeModel();
        attributeModel2.setName("Hamburger");
        attributeModel2.setPrice(4.0);
        attributeModel2.setDescription("A juicy hamburger on a toasted bun with lettuce, tomato, and cheese.");
        attributeModelComparator.compare(attributeModel1, attributeModel2);
    }
}
statement is: AttributeModelComparator attributeModelComparator = new AttributeModelComparator(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: AttributeModel attributeModel1 = new AttributeModel(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: attributeModel1.setName("Pizza"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: attributeModel1.setName("Pizza") target is: attributeModel1 method is: setName(java.lang.String)
source statement: de.paragon.explorer.model.AttributeModel()V callee: VariableReference: Statement 1, type de.paragon.explorer.model.AttributeModelindex is: 1
Matched Method is: setName(Ljava/lang/String;)V
statement is: attributeModel1.setPrice(5.0), class spoon.support.reflect.code.CtInvocationImpl
invocation is: attributeModel1.setPrice(5.0) target is: attributeModel1 method is: setPrice(double)
statement is: attributeModel1.setDescription("A delicious pizza with cheese, pepperoni, and tomato sauce."), class spoon.support.reflect.code.CtInvocationImpl
invocation is: attributeModel1.setDescription("A delicious pizza with cheese, pepperoni, and tomato sauce.") target is: attributeModel1 method is: setDescription(java.lang.String)
statement is: AttributeModel attributeModel2 = new AttributeModel(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: attributeModel2.setName("Hamburger"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: attributeModel2.setName("Hamburger") target is: attributeModel2 method is: setName(java.lang.String)
source statement: de.paragon.explorer.model.AttributeModel()V callee: VariableReference: Statement 1, type de.paragon.explorer.model.AttributeModelindex is: 4
Matched Method is: setName(Ljava/lang/String;)V
statement is: attributeModel2.setPrice(4.0), class spoon.support.reflect.code.CtInvocationImpl
invocation is: attributeModel2.setPrice(4.0) target is: attributeModel2 method is: setPrice(double)
statement is: attributeModel2.setDescription("A juicy hamburger on a toasted bun with lettuce, tomato, and cheese."), class spoon.support.reflect.code.CtInvocationImpl
invocation is: attributeModel2.setDescription("A juicy hamburger on a toasted bun with lettuce, tomato, and cheese.") target is: attributeModel2 method is: setDescription(java.lang.String)
statement is: attributeModelComparator.compare(attributeModel1, attributeModel2), class spoon.support.reflect.code.CtInvocationImpl
invocation is: attributeModelComparator.compare(attributeModel1, attributeModel2) target is: attributeModelComparator method is: compare(AttributeModel,AttributeModel)
source statement: de.paragon.explorer.model.AttributeModelComparator()V callee: VariableReference: Statement 0, type de.paragon.explorer.model.AttributeModelComparatorindex is: 0
Matched Method is: compare(Lde/paragon/explorer/model/AttributeModel;Lde/paragon/explorer/model/AttributeModel;)I
TestCase is: AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
AttributeModel attributeModel = new AttributeModel();
String string = "Pizza";
attributeModel.setName(string);
AttributeModel attributeModel = new AttributeModel();
String string = "Hamburger";
attributeModel.setName(string);
attributeModelComparator.compare(attributeModel, attributeModel);

statement is: de.paragon.explorer.model.AttributeModelComparator()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.paragon.explorer.model.AttributeModelComparator
statement code is: AttributeModelComparator attributeModelComparator = new AttributeModelComparator()
statement is: de.paragon.explorer.model.AttributeModel()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.paragon.explorer.model.AttributeModel
statement code is: AttributeModel attributeModel = new AttributeModel()
statement is: setName(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: attributeModel.setName("")
statement is: de.paragon.explorer.model.AttributeModel()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.paragon.explorer.model.AttributeModel
statement code is: AttributeModel attributeModel = new AttributeModel()
statement is: setName(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: attributeModel.setName(";TM5[w3cjl")
statement is: compare(Lde/paragon/explorer/model/AttributeModel;Lde/paragon/explorer/model/AttributeModel;)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int compare = attributeModelComparator.compare(arg0, arg1)
test data is: AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
AttributeModel attributeModel = new AttributeModel();
attributeModel.setName("");
AttributeModel attributeModel = new AttributeModel();
attributeModel.setName(";TM5[w3cjl");
attributeModelComparator.compare(attributeModel, attributeModel);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
        AttributeModel attributeModel1 = new AttributeModel();
        attributeModel1.setName("Apple");
        AttributeModel attributeModel2 = new AttributeModel();
        attributeModel2.setName("Banana");
        attributeModelComparator.compare(attributeModel1, attributeModel2);
    }
}
statement is: AttributeModelComparator attributeModelComparator = new AttributeModelComparator(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: AttributeModel attributeModel1 = new AttributeModel(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: attributeModel1.setName("Apple"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: attributeModel1.setName("Apple") target is: attributeModel1 method is: setName(java.lang.String)
source statement: de.paragon.explorer.model.AttributeModel()V callee: VariableReference: Statement 1, type de.paragon.explorer.model.AttributeModelindex is: 1
Matched Method is: setName(Ljava/lang/String;)V
statement is: AttributeModel attributeModel2 = new AttributeModel(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: attributeModel2.setName("Banana"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: attributeModel2.setName("Banana") target is: attributeModel2 method is: setName(java.lang.String)
source statement: de.paragon.explorer.model.AttributeModel()V callee: VariableReference: Statement 1, type de.paragon.explorer.model.AttributeModelindex is: 4
Matched Method is: setName(Ljava/lang/String;)V
statement is: attributeModelComparator.compare(attributeModel1, attributeModel2), class spoon.support.reflect.code.CtInvocationImpl
invocation is: attributeModelComparator.compare(attributeModel1, attributeModel2) target is: attributeModelComparator method is: compare(AttributeModel,AttributeModel)
source statement: de.paragon.explorer.model.AttributeModelComparator()V callee: VariableReference: Statement 0, type de.paragon.explorer.model.AttributeModelComparatorindex is: 0
Matched Method is: compare(Lde/paragon/explorer/model/AttributeModel;Lde/paragon/explorer/model/AttributeModel;)I
TestCase is: AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
AttributeModel attributeModel = new AttributeModel();
String string = "Apple";
attributeModel.setName(string);
AttributeModel attributeModel = new AttributeModel();
String string = "Banana";
attributeModel.setName(string);
attributeModelComparator.compare(attributeModel, attributeModel);

statement is: de.paragon.explorer.model.AttributeModelComparator()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.paragon.explorer.model.AttributeModelComparator
statement code is: AttributeModelComparator attributeModelComparator = new AttributeModelComparator()
statement is: de.paragon.explorer.model.AttributeModel()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.paragon.explorer.model.AttributeModel
statement code is: AttributeModel attributeModel = new AttributeModel()
statement is: setName(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: attributeModel.setName("e")
statement is: de.paragon.explorer.model.AttributeModel()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.paragon.explorer.model.AttributeModel
statement code is: AttributeModel attributeModel = new AttributeModel()
statement is: setName(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: attributeModel.setName("WY|7(@+")
statement is: compare(Lde/paragon/explorer/model/AttributeModel;Lde/paragon/explorer/model/AttributeModel;)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int compare = attributeModelComparator.compare(arg0, arg1)
test data is: AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
AttributeModel attributeModel = new AttributeModel();
attributeModel.setName("e");
AttributeModel attributeModel = new AttributeModel();
attributeModel.setName("WY|7(@+");
attributeModelComparator.compare(attributeModel, attributeModel);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
        AttributeModel attributeModel1 = new AttributeModel();
        attributeModel1.setName("e");// e is a common English word that means "five" in Roman numerals. This value is not particularly descriptive or representative of the situation being tested, so it has been replaced with a more descriptive and representative value.

        AttributeModel attributeModel2 = new AttributeModel();
        attributeModel2.setName("WY|7(@+");// This string does not have any particular significance in this test case, so it has been removed.

        attributeModelComparator.compare(attributeModel1, attributeModel2);
    }
}
statement is: AttributeModelComparator attributeModelComparator = new AttributeModelComparator(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: AttributeModel attributeModel1 = new AttributeModel(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: attributeModel1.setName("e")// e is a common English word that means "five" in Roman numerals. This value is not particularly descriptive or representative of the situation being tested, so it has been replaced with a more descriptive and representative value.
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: attributeModel1.setName("e")// e is a common English word that means "five" in Roman numerals. This value is not particularly descriptive or representative of the situation being tested, so it has been replaced with a more descriptive and representative value.
 target is: attributeModel1 method is: setName(java.lang.String)
source statement: de.paragon.explorer.model.AttributeModel()V callee: VariableReference: Statement 1, type de.paragon.explorer.model.AttributeModelindex is: 1
Matched Method is: setName(Ljava/lang/String;)V
statement is: AttributeModel attributeModel2 = new AttributeModel(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: attributeModel2.setName("WY|7(@+")// This string does not have any particular significance in this test case, so it has been removed.
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: attributeModel2.setName("WY|7(@+")// This string does not have any particular significance in this test case, so it has been removed.
 target is: attributeModel2 method is: setName(java.lang.String)
source statement: de.paragon.explorer.model.AttributeModel()V callee: VariableReference: Statement 1, type de.paragon.explorer.model.AttributeModelindex is: 4
Matched Method is: setName(Ljava/lang/String;)V
statement is: attributeModelComparator.compare(attributeModel1, attributeModel2), class spoon.support.reflect.code.CtInvocationImpl
invocation is: attributeModelComparator.compare(attributeModel1, attributeModel2) target is: attributeModelComparator method is: compare(AttributeModel,AttributeModel)
source statement: de.paragon.explorer.model.AttributeModelComparator()V callee: VariableReference: Statement 0, type de.paragon.explorer.model.AttributeModelComparatorindex is: 0
Matched Method is: compare(Lde/paragon/explorer/model/AttributeModel;Lde/paragon/explorer/model/AttributeModel;)I
TestCase is: AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
AttributeModel attributeModel = new AttributeModel();
String string = "e";
attributeModel.setName(string);
AttributeModel attributeModel = new AttributeModel();
String string = "WY|7(@+";
attributeModel.setName(string);
attributeModelComparator.compare(attributeModel, attributeModel);

statement is: de.paragon.explorer.model.AttributeModelComparator()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.paragon.explorer.model.AttributeModelComparator
statement code is: AttributeModelComparator attributeModelComparator = new AttributeModelComparator()
statement is: de.paragon.explorer.model.AttributeModel()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.paragon.explorer.model.AttributeModel
statement code is: AttributeModel attributeModel = new AttributeModel()
statement is: setName(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: attributeModel.setName("")
statement is: de.paragon.explorer.model.StandardAttributeModel()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.paragon.explorer.model.StandardAttributeModel
statement code is: StandardAttributeModel standardAttributeModel = new StandardAttributeModel()
statement is: setName(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: standardAttributeModel.setName("|R")
statement is: compare(Lde/paragon/explorer/model/AttributeModel;Lde/paragon/explorer/model/AttributeModel;)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int compare = attributeModelComparator.compare((AttributeModel) arg0, arg1)
test data is: AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
AttributeModel attributeModel = new AttributeModel();
attributeModel.setName("");
StandardAttributeModel standardAttributeModel = new StandardAttributeModel();
standardAttributeModel.setName("|R");
attributeModelComparator.compare((AttributeModel) standardAttributeModel, attributeModel);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Improved test data
        AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
        AttributeModel attributeModel1 = new AttributeModel();
        attributeModel1.setName("First Name");// This is a more descriptive name for the first name attribute

        StandardAttributeModel standardAttributeModel = new StandardAttributeModel();
        standardAttributeModel.setName("|R");
        attributeModelComparator.compare(((AttributeModel) (standardAttributeModel)), attributeModel1);
        // Improved test data
        AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
        AttributeModel attributeModel2 = new AttributeModel();
        attributeModel2.setName("Last Name");// This is a more descriptive name for the last name attribute

        StandardAttributeModel standardAttributeModel = new StandardAttributeModel();
        standardAttributeModel.setName("|R");
        attributeModelComparator.compare(((AttributeModel) (standardAttributeModel)), attributeModel2);
        // Improved test data
        AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
        AttributeModel attributeModel3 = new AttributeModel();
        attributeModel3.setName("Address");// This is a more descriptive name for the address attribute

        StandardAttributeModel standardAttributeModel = new StandardAttributeModel();
        standardAttributeModel.setName("|R");
        attributeModelComparator.compare(((AttributeModel) (standardAttributeModel)), attributeModel3);
    }
}
statement is: // Improved test data
AttributeModelComparator attributeModelComparator = new AttributeModelComparator(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: AttributeModel attributeModel1 = new AttributeModel(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: attributeModel1.setName("First Name")// This is a more descriptive name for the first name attribute
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: attributeModel1.setName("First Name")// This is a more descriptive name for the first name attribute
 target is: attributeModel1 method is: setName(java.lang.String)
source statement: de.paragon.explorer.model.AttributeModel()V callee: VariableReference: Statement 1, type de.paragon.explorer.model.AttributeModelindex is: 1
Matched Method is: setName(Ljava/lang/String;)V
statement is: StandardAttributeModel standardAttributeModel = new StandardAttributeModel(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: standardAttributeModel.setName("|R"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: standardAttributeModel.setName("|R") target is: standardAttributeModel method is: setName(java.lang.String)
source statement: de.paragon.explorer.model.StandardAttributeModel()V callee: VariableReference: Statement 3, type de.paragon.explorer.model.StandardAttributeModelindex is: 4
Matched Method is: setName(Ljava/lang/String;)V
statement is: attributeModelComparator.compare(((AttributeModel) (standardAttributeModel)), attributeModel1), class spoon.support.reflect.code.CtInvocationImpl
invocation is: attributeModelComparator.compare(((AttributeModel) (standardAttributeModel)), attributeModel1) target is: attributeModelComparator method is: compare(AttributeModel,AttributeModel)
source statement: de.paragon.explorer.model.AttributeModelComparator()V callee: VariableReference: Statement 0, type de.paragon.explorer.model.AttributeModelComparatorindex is: 0
Matched Method is: compare(Lde/paragon/explorer/model/AttributeModel;Lde/paragon/explorer/model/AttributeModel;)I
statement is: // Improved test data
AttributeModelComparator attributeModelComparator = new AttributeModelComparator(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: AttributeModel attributeModel2 = new AttributeModel(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: attributeModel2.setName("Last Name")// This is a more descriptive name for the last name attribute
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: attributeModel2.setName("Last Name")// This is a more descriptive name for the last name attribute
 target is: attributeModel2 method is: setName(java.lang.String)
source statement: de.paragon.explorer.model.AttributeModel()V callee: VariableReference: Statement 1, type de.paragon.explorer.model.AttributeModelindex is: 9
Matched Method is: setName(Ljava/lang/String;)V
statement is: StandardAttributeModel standardAttributeModel = new StandardAttributeModel(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: standardAttributeModel.setName("|R"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: standardAttributeModel.setName("|R") target is: standardAttributeModel method is: setName(java.lang.String)
source statement: de.paragon.explorer.model.StandardAttributeModel()V callee: VariableReference: Statement 3, type de.paragon.explorer.model.StandardAttributeModelindex is: 12
Matched Method is: setName(Ljava/lang/String;)V
statement is: attributeModelComparator.compare(((AttributeModel) (standardAttributeModel)), attributeModel2), class spoon.support.reflect.code.CtInvocationImpl
invocation is: attributeModelComparator.compare(((AttributeModel) (standardAttributeModel)), attributeModel2) target is: attributeModelComparator method is: compare(AttributeModel,AttributeModel)
source statement: de.paragon.explorer.model.AttributeModelComparator()V callee: VariableReference: Statement 0, type de.paragon.explorer.model.AttributeModelComparatorindex is: 8
Matched Method is: compare(Lde/paragon/explorer/model/AttributeModel;Lde/paragon/explorer/model/AttributeModel;)I
statement is: // Improved test data
AttributeModelComparator attributeModelComparator = new AttributeModelComparator(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: AttributeModel attributeModel3 = new AttributeModel(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: attributeModel3.setName("Address")// This is a more descriptive name for the address attribute
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: attributeModel3.setName("Address")// This is a more descriptive name for the address attribute
 target is: attributeModel3 method is: setName(java.lang.String)
source statement: de.paragon.explorer.model.AttributeModel()V callee: VariableReference: Statement 1, type de.paragon.explorer.model.AttributeModelindex is: 17
Matched Method is: setName(Ljava/lang/String;)V
statement is: StandardAttributeModel standardAttributeModel = new StandardAttributeModel(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: standardAttributeModel.setName("|R"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: standardAttributeModel.setName("|R") target is: standardAttributeModel method is: setName(java.lang.String)
source statement: de.paragon.explorer.model.StandardAttributeModel()V callee: VariableReference: Statement 3, type de.paragon.explorer.model.StandardAttributeModelindex is: 20
Matched Method is: setName(Ljava/lang/String;)V
statement is: attributeModelComparator.compare(((AttributeModel) (standardAttributeModel)), attributeModel3), class spoon.support.reflect.code.CtInvocationImpl
invocation is: attributeModelComparator.compare(((AttributeModel) (standardAttributeModel)), attributeModel3) target is: attributeModelComparator method is: compare(AttributeModel,AttributeModel)
source statement: de.paragon.explorer.model.AttributeModelComparator()V callee: VariableReference: Statement 0, type de.paragon.explorer.model.AttributeModelComparatorindex is: 16
Matched Method is: compare(Lde/paragon/explorer/model/AttributeModel;Lde/paragon/explorer/model/AttributeModel;)I
TestCase is: AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
AttributeModel attributeModel = new AttributeModel();
String string = "First Name";
attributeModel.setName(string);
StandardAttributeModel standardAttributeModel = new StandardAttributeModel();
String string = "|R";
((AttributeModel) _void).setName(string);
attributeModelComparator.compare((AttributeModel) standardAttributeModel, attributeModel);
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
AttributeModel attributeModel = new AttributeModel();
String string = "Last Name";
attributeModel.setName(string);
StandardAttributeModel standardAttributeModel = new StandardAttributeModel();
String string = "|R";
((AttributeModel) _void).setName(string);
attributeModelComparator.compare((AttributeModel) standardAttributeModel, attributeModel);
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
AttributeModel attributeModel = new AttributeModel();
String string = "Address";
attributeModel.setName(string);
StandardAttributeModel standardAttributeModel = new StandardAttributeModel();
String string = "|R";
((AttributeModel) _void).setName(string);
attributeModelComparator.compare((AttributeModel) standardAttributeModel, attributeModel);

* test suite isTestSuite: 18
Test 0: 
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
attributeModelComparator.compare((AttributeModel) null, (AttributeModel) null);

Test 1: 
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
ArrayAttributeModel arrayAttributeModel = new ArrayAttributeModel();
attributeModelComparator.compare((AttributeModel) arrayAttributeModel, (AttributeModel) null);
Test 2: 
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
AttributeModel attributeModel = new AttributeModel();
attributeModel.setName("");
attributeModelComparator.compare(attributeModel, attributeModel);
Test 3: 
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
AttributeModel attributeModel = new AttributeModel();
attributeModel.setName("");
StandardAttributeModel standardAttributeModel = new StandardAttributeModel();
standardAttributeModel.setName("|R");
attributeModelComparator.compare(attributeModel, (AttributeModel) standardAttributeModel);
Test 4: 
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
AttributeModel attributeModel = new AttributeModel();
attributeModel.setName("e");
AttributeModel attributeModel = new AttributeModel();
attributeModel.setName("WY|7(@+");
attributeModelComparator.compare(attributeModel, attributeModel);
Test 5: 
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
AttributeModel attributeModel = new AttributeModel();
attributeModel.setName("");
AttributeModel attributeModel = new AttributeModel();
attributeModel.setName(";TM5[w3cjl");
attributeModelComparator.compare(attributeModel, attributeModel);
Test 6: 
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
AttributeModel attributeModel = new AttributeModel();
attributeModel.setName("");
AttributeModel attributeModel = new AttributeModel();
attributeModel.setName(";TM5[w3cjl");
attributeModelComparator.compare(attributeModel, attributeModel);
Test 7: 
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
AttributeModel attributeModel = new AttributeModel();
attributeModel.setName("e");
AttributeModel attributeModel = new AttributeModel();
attributeModel.setName("WY|7(@+");
attributeModelComparator.compare(attributeModel, attributeModel);
Test 8: 
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
AttributeModel attributeModel = new AttributeModel();
attributeModel.setName("");
StandardAttributeModel standardAttributeModel = new StandardAttributeModel();
standardAttributeModel.setName("|R");
attributeModelComparator.compare((AttributeModel) standardAttributeModel, attributeModel);
Test 9: 
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
attributeModelComparator.compare((AttributeModel) null, (AttributeModel) null);

Test 10: 
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
ArrayAttributeModel arrayAttributeModel = new ArrayAttributeModel();
attributeModelComparator.compare((AttributeModel) arrayAttributeModel, (AttributeModel) null);

Test 11: 
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
AttributeModel attributeModel = new AttributeModel();
attributeModel.setName("john");
attributeModelComparator.compare(attributeModel, attributeModel);
AttributeModel attributeModel = new AttributeModel();
attributeModel.setName("doe");
attributeModelComparator.compare(attributeModel, attributeModel);
AttributeModel attributeModel = new AttributeModel();
String string = "jane";
attributeModel.setName(string);
attributeModelComparator.compare(attributeModel, attributeModel);

Test 12: 
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
AttributeModel attributeModel = new AttributeModel();
attributeModel.setName("Favorite Book");
StandardAttributeModel standardAttributeModel = new StandardAttributeModel();
((AttributeModel)null).setName("|R");
attributeModelComparator.compare(attributeModel, (AttributeModel) standardAttributeModel);

Test 13: 
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
AttributeModel attributeModel = new AttributeModel();
attributeModel.setName("elephant");
AttributeModel attributeModel = new AttributeModel();
attributeModel.setName("wild yak");
attributeModelComparator.compare(attributeModel, attributeModel);

Test 14: 
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
AttributeModel attributeModel = new AttributeModel();
attributeModel.setName("Pizza");
AttributeModel attributeModel = new AttributeModel();
attributeModel.setName("Hamburger");
attributeModelComparator.compare(attributeModel, attributeModel);

Test 15: 
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
AttributeModel attributeModel = new AttributeModel();
attributeModel.setName("Apple");
AttributeModel attributeModel = new AttributeModel();
attributeModel.setName("Banana");
attributeModelComparator.compare(attributeModel, attributeModel);

Test 16: 
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
AttributeModel attributeModel = new AttributeModel();
attributeModel.setName("e");
AttributeModel attributeModel = new AttributeModel();
attributeModel.setName("WY|7(@+");
attributeModelComparator.compare(attributeModel, attributeModel);

Test 17: 
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
AttributeModel attributeModel = new AttributeModel();
attributeModel.setName("First Name");
StandardAttributeModel standardAttributeModel = new StandardAttributeModel();
((AttributeModel)null).setName("|R");
attributeModelComparator.compare((AttributeModel) standardAttributeModel, attributeModel);
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
AttributeModel attributeModel = new AttributeModel();
String string = "Last Name";
attributeModel.setName(string);
StandardAttributeModel standardAttributeModel = new StandardAttributeModel();
String string = "|R";
((AttributeModel) _void).setName(string);
attributeModelComparator.compare((AttributeModel) standardAttributeModel, attributeModel);
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
AttributeModel attributeModel = new AttributeModel();
String string = "Address";
attributeModel.setName(string);
StandardAttributeModel standardAttributeModel = new StandardAttributeModel();
String string = "|R";
((AttributeModel) _void).setName(string);
attributeModelComparator.compare((AttributeModel) standardAttributeModel, attributeModel);


* Generated after the refinement and before minimization 18 tests with total length 113
* test suite isTestSuite: 18
Test 0: 
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
attributeModelComparator.compare((AttributeModel) null, (AttributeModel) null);

Test 1: 
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
ArrayAttributeModel arrayAttributeModel = new ArrayAttributeModel();
attributeModelComparator.compare((AttributeModel) arrayAttributeModel, (AttributeModel) null);
Test 2: 
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
AttributeModel attributeModel = new AttributeModel();
attributeModel.setName("");
attributeModelComparator.compare(attributeModel, attributeModel);
Test 3: 
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
AttributeModel attributeModel = new AttributeModel();
attributeModel.setName("");
StandardAttributeModel standardAttributeModel = new StandardAttributeModel();
standardAttributeModel.setName("|R");
attributeModelComparator.compare(attributeModel, (AttributeModel) standardAttributeModel);
Test 4: 
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
AttributeModel attributeModel = new AttributeModel();
attributeModel.setName("e");
AttributeModel attributeModel = new AttributeModel();
attributeModel.setName("WY|7(@+");
attributeModelComparator.compare(attributeModel, attributeModel);
Test 5: 
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
AttributeModel attributeModel = new AttributeModel();
attributeModel.setName("");
AttributeModel attributeModel = new AttributeModel();
attributeModel.setName(";TM5[w3cjl");
attributeModelComparator.compare(attributeModel, attributeModel);
Test 6: 
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
AttributeModel attributeModel = new AttributeModel();
attributeModel.setName("");
AttributeModel attributeModel = new AttributeModel();
attributeModel.setName(";TM5[w3cjl");
attributeModelComparator.compare(attributeModel, attributeModel);
Test 7: 
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
AttributeModel attributeModel = new AttributeModel();
attributeModel.setName("e");
AttributeModel attributeModel = new AttributeModel();
attributeModel.setName("WY|7(@+");
attributeModelComparator.compare(attributeModel, attributeModel);
Test 8: 
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
AttributeModel attributeModel = new AttributeModel();
attributeModel.setName("");
StandardAttributeModel standardAttributeModel = new StandardAttributeModel();
standardAttributeModel.setName("|R");
attributeModelComparator.compare((AttributeModel) standardAttributeModel, attributeModel);
Test 9: 
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
attributeModelComparator.compare((AttributeModel) null, (AttributeModel) null);

Test 10: 
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
ArrayAttributeModel arrayAttributeModel = new ArrayAttributeModel();
attributeModelComparator.compare((AttributeModel) arrayAttributeModel, (AttributeModel) null);

Test 11: 
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
AttributeModel attributeModel = new AttributeModel();
attributeModel.setName("john");
attributeModelComparator.compare(attributeModel, attributeModel);
AttributeModel attributeModel = new AttributeModel();
attributeModel.setName("doe");
attributeModelComparator.compare(attributeModel, attributeModel);
AttributeModel attributeModel = new AttributeModel();
String string = "jane";
attributeModel.setName(string);
attributeModelComparator.compare(attributeModel, attributeModel);

Test 12: 
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
AttributeModel attributeModel = new AttributeModel();
attributeModel.setName("Favorite Book");
StandardAttributeModel standardAttributeModel = new StandardAttributeModel();
((AttributeModel)null).setName("|R");
attributeModelComparator.compare(attributeModel, (AttributeModel) standardAttributeModel);

Test 13: 
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
AttributeModel attributeModel = new AttributeModel();
attributeModel.setName("elephant");
AttributeModel attributeModel = new AttributeModel();
attributeModel.setName("wild yak");
attributeModelComparator.compare(attributeModel, attributeModel);

Test 14: 
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
AttributeModel attributeModel = new AttributeModel();
attributeModel.setName("Pizza");
AttributeModel attributeModel = new AttributeModel();
attributeModel.setName("Hamburger");
attributeModelComparator.compare(attributeModel, attributeModel);

Test 15: 
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
AttributeModel attributeModel = new AttributeModel();
attributeModel.setName("Apple");
AttributeModel attributeModel = new AttributeModel();
attributeModel.setName("Banana");
attributeModelComparator.compare(attributeModel, attributeModel);

Test 16: 
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
AttributeModel attributeModel = new AttributeModel();
attributeModel.setName("e");
AttributeModel attributeModel = new AttributeModel();
attributeModel.setName("WY|7(@+");
attributeModelComparator.compare(attributeModel, attributeModel);

Test 17: 
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
AttributeModel attributeModel = new AttributeModel();
attributeModel.setName("First Name");
StandardAttributeModel standardAttributeModel = new StandardAttributeModel();
((AttributeModel)null).setName("|R");
attributeModelComparator.compare((AttributeModel) standardAttributeModel, attributeModel);
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
AttributeModel attributeModel = new AttributeModel();
String string = "Last Name";
attributeModel.setName(string);
StandardAttributeModel standardAttributeModel = new StandardAttributeModel();
String string = "|R";
((AttributeModel) _void).setName(string);
attributeModelComparator.compare((AttributeModel) standardAttributeModel, attributeModel);
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
AttributeModel attributeModel = new AttributeModel();
String string = "Address";
attributeModel.setName(string);
StandardAttributeModel standardAttributeModel = new StandardAttributeModel();
String string = "|R";
((AttributeModel) _void).setName(string);
attributeModelComparator.compare((AttributeModel) standardAttributeModel, attributeModel);


* Minimizing test suite
* test suite isTestSuite: 9
Test 0: 
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
attributeModelComparator.compare((AttributeModel) null, (AttributeModel) null);

Test 1: 
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
ArrayAttributeModel arrayAttributeModel = new ArrayAttributeModel();
attributeModelComparator.compare((AttributeModel) arrayAttributeModel, (AttributeModel) null);
Test 2: 
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
AttributeModel attributeModel = new AttributeModel();
attributeModel.setName("john");
attributeModelComparator.compare(attributeModel, attributeModel);
Test 3: 
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
AttributeModel attributeModel = new AttributeModel();
attributeModel.setName("");
StandardAttributeModel standardAttributeModel = new StandardAttributeModel();
standardAttributeModel.setName("|R");
attributeModelComparator.compare(attributeModel, (AttributeModel) standardAttributeModel);
Test 4: 
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
AttributeModel attributeModel = new AttributeModel();
attributeModel.setName("e");
AttributeModel attributeModel = new AttributeModel();
attributeModel.setName("WY|7(@+");
attributeModelComparator.compare(attributeModel, attributeModel);
Test 5: 
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
AttributeModel attributeModel = new AttributeModel();
attributeModel.setName("");
AttributeModel attributeModel = new AttributeModel();
attributeModel.setName(";TM5[w3cjl");
attributeModelComparator.compare(attributeModel, attributeModel);
Test 6: 
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
AttributeModel attributeModel = new AttributeModel();
attributeModel.setName("");
AttributeModel attributeModel = new AttributeModel();
attributeModel.setName(";TM5[w3cjl");
attributeModelComparator.compare(attributeModel, attributeModel);
Test 7: 
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
AttributeModel attributeModel = new AttributeModel();
attributeModel.setName("e");
AttributeModel attributeModel = new AttributeModel();
attributeModel.setName("WY|7(@+");
attributeModelComparator.compare(attributeModel, attributeModel);
Test 8: 
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
AttributeModel attributeModel = new AttributeModel();
attributeModel.setName("");
StandardAttributeModel standardAttributeModel = new StandardAttributeModel();
standardAttributeModel.setName("|R");
attributeModelComparator.compare((AttributeModel) standardAttributeModel, attributeModel);

* Going to analyze the coverage criteria
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 100%
* Total number of goals: 17
* Number of covered goals: 17
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 100%
* Total number of goals: 12
* Number of covered goals: 12
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 100%
* Total number of goals: 3
* Number of covered goals: 3
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 2
* Number of covered goals: 2
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 100%
* Total number of goals: 17
* Number of covered goals: 17
* Generated 9 tests with total length 45
* Resulting test suite's coverage: 100% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 81%
* Compiling and checking tests
Going to execute: removeTestsThatDoNotCompile
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
int compare = attributeModelComparator.compare((AttributeModel) null, (AttributeModel) null);
assertEquals((-1), compare);


** It was a parseable test case! 
refined test name is: testCompareNullInputs
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
ArrayAttributeModel arg0 = new ArrayAttributeModel();
int compare = attributeModelComparator.compare((AttributeModel) arg0, (AttributeModel) null);
assertEquals((-1), compare);


** It was a parseable test case! 
refined test name is: testCompareArrayWithNullAttribute
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
AttributeModel arg1 = new AttributeModel();
arg1.setName("john");
int compare = attributeModelComparator.compare(arg1, arg1);
assertEquals(0, compare);


** It was a parseable test case! 
refined test name is: testComparatorEquality
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
AttributeModel arg0 = new AttributeModel();
arg0.setName("");
StandardAttributeModel arg1 = new StandardAttributeModel();
arg1.setName("|R");
int compare = attributeModelComparator.compare(arg0, (AttributeModel) arg1);
assertEquals(1, compare);


** It was a parseable test case! 
refined test name is: testCompareDifferentType
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
AttributeModel arg0 = new AttributeModel();
arg0.setName("e");
AttributeModel arg1 = new AttributeModel();
arg1.setName("WY|7(@+");
int compare = attributeModelComparator.compare(arg0, arg1);
assertEquals((-18), compare);


** It was a parseable test case! 
refined test name is: testComparewhenAttributesAreEqualreturnsZero
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
AttributeModel arg0 = new AttributeModel();
arg0.setName("");
AttributeModel arg1 = new AttributeModel();
arg1.setName(";TM5[w3cjl");
int compare = attributeModelComparator.compare(arg0, arg1);
assertEquals((-10), compare);


** It was a parseable test case! 
refined test name is: testCompareTwoAttributeModelsByName
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
AttributeModel arg1 = new AttributeModel();
arg1.setName("");
AttributeModel arg0 = new AttributeModel();
arg0.setName(";TM5[w3cjl");
int compare = attributeModelComparator.compare(arg0, arg1);
assertEquals(10, compare);


** It was a parseable test case! 
refined test name is: testCompareDifferentNamesReturnsNegativeNumber
* Compiling Tests
refined test name is: testCompareDifferentNamesReturnsNegativeTen
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
AttributeModel arg1 = new AttributeModel();
arg1.setName("e");
AttributeModel arg0 = new AttributeModel();
arg0.setName("WY|7(@+");
int compare = attributeModelComparator.compare(arg0, arg1);
assertEquals(18, compare);


** It was a parseable test case! 
refined test name is: testCompareAttributeModelsWithDifferentNames
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
AttributeModel arg1 = new AttributeModel();
arg1.setName("");
StandardAttributeModel arg0 = new StandardAttributeModel();
arg0.setName("|R");
int compare = attributeModelComparator.compare((AttributeModel) arg0, arg1);
assertEquals((-1), compare);


** It was a parseable test case! 
refined test name is: testCompareWithDifferentNames
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 13:17:03.380 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar6097912028526755849.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 13:17:03.408 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar6097912028526755849.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 13:17:03.534 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar6097912028526755849.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 13:17:03.536 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar6097912028526755849.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 13:17:03.608 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar6097912028526755849.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 13:17:03.609 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar6097912028526755849.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
Going to execute: handleTestsThatAreUnstable
[MASTER] 13:17:03.685 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar6097912028526755849.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 13:17:03.686 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar6097912028526755849.jar
* Compiling Tests
[MASTER] 13:17:03.756 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar6097912028526755849.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 13:17:03.757 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar6097912028526755849.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 13:17:03.822 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar6097912028526755849.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 13:17:03.824 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar6097912028526755849.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 13:17:03.922 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar6097912028526755849.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 13:17:03.923 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar6097912028526755849.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 13:17:03.967 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar6097912028526755849.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 13:17:03.968 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar6097912028526755849.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 13:17:04.049 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar6097912028526755849.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 13:17:04.050 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar6097912028526755849.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 6 called: 0 to improve: false
[MASTER] 13:17:04.152 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar6097912028526755849.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 13:17:04.155 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar6097912028526755849.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 2 called: 0 to improve: false
[MASTER] 13:17:04.253 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar6097912028526755849.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 13:17:04.255 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar6097912028526755849.jar
[MASTER] 13:17:04.332 [logback-1] WARN  TimeController - Already entered in phase: INLINING. This will mess up the timing calculations.
* test suite isTestSuite: 9
Test 0: 
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
attributeModelComparator.compare((AttributeModel) null, (AttributeModel) null);

Test 1: 
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
ArrayAttributeModel arrayAttributeModel = new ArrayAttributeModel();
attributeModelComparator.compare((AttributeModel) arrayAttributeModel, (AttributeModel) null);
Test 2: 
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
AttributeModel attributeModel = new AttributeModel();
attributeModel.setName("");
attributeModelComparator.compare(attributeModel, attributeModel);
Test 3: 
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
AttributeModel attributeModel = new AttributeModel();
attributeModel.setName("");
StandardAttributeModel standardAttributeModel = new StandardAttributeModel();
standardAttributeModel.setName("|R");
attributeModelComparator.compare(attributeModel, (AttributeModel) standardAttributeModel);
Test 4: 
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
AttributeModel attributeModel = new AttributeModel();
attributeModel.setName("e");
AttributeModel attributeModel = new AttributeModel();
attributeModel.setName("WY|7(@+");
attributeModelComparator.compare(attributeModel, attributeModel);
Test 5: 
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
AttributeModel attributeModel = new AttributeModel();
attributeModel.setName("");
AttributeModel attributeModel = new AttributeModel();
attributeModel.setName(";TM5[w3cjl");
attributeModelComparator.compare(attributeModel, attributeModel);
Test 6: 
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
AttributeModel attributeModel = new AttributeModel();
attributeModel.setName("");
AttributeModel attributeModel = new AttributeModel();
attributeModel.setName(";TM5[w3cjl");
attributeModelComparator.compare(attributeModel, attributeModel);
Test 7: 
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
AttributeModel attributeModel = new AttributeModel();
attributeModel.setName("e");
AttributeModel attributeModel = new AttributeModel();
attributeModel.setName("WY|7(@+");
attributeModelComparator.compare(attributeModel, attributeModel);
Test 8: 
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
AttributeModel attributeModel = new AttributeModel();
attributeModel.setName("");
StandardAttributeModel standardAttributeModel = new StandardAttributeModel();
standardAttributeModel.setName("|R");
attributeModelComparator.compare((AttributeModel) standardAttributeModel, attributeModel);

* Minimizing test suite
* test suite isTestSuite: 9
Test 0: 
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
attributeModelComparator.compare((AttributeModel) null, (AttributeModel) null);

Test 1: 
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
ArrayAttributeModel arrayAttributeModel = new ArrayAttributeModel();
attributeModelComparator.compare((AttributeModel) arrayAttributeModel, (AttributeModel) null);
Test 2: 
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
AttributeModel attributeModel = new AttributeModel();
attributeModel.setName("");
attributeModelComparator.compare(attributeModel, attributeModel);
Test 3: 
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
AttributeModel attributeModel = new AttributeModel();
attributeModel.setName("");
StandardAttributeModel standardAttributeModel = new StandardAttributeModel();
standardAttributeModel.setName("|R");
attributeModelComparator.compare(attributeModel, (AttributeModel) standardAttributeModel);
Test 4: 
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
AttributeModel attributeModel = new AttributeModel();
attributeModel.setName("e");
AttributeModel attributeModel = new AttributeModel();
attributeModel.setName("WY|7(@+");
attributeModelComparator.compare(attributeModel, attributeModel);
Test 5: 
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
AttributeModel attributeModel = new AttributeModel();
attributeModel.setName("");
AttributeModel attributeModel = new AttributeModel();
attributeModel.setName(";TM5[w3cjl");
attributeModelComparator.compare(attributeModel, attributeModel);
Test 6: 
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
AttributeModel attributeModel = new AttributeModel();
attributeModel.setName("");
AttributeModel attributeModel = new AttributeModel();
attributeModel.setName(";TM5[w3cjl");
attributeModelComparator.compare(attributeModel, attributeModel);
Test 7: 
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
AttributeModel attributeModel = new AttributeModel();
attributeModel.setName("e");
AttributeModel attributeModel = new AttributeModel();
attributeModel.setName("WY|7(@+");
attributeModelComparator.compare(attributeModel, attributeModel);
Test 8: 
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
AttributeModel attributeModel = new AttributeModel();
attributeModel.setName("");
StandardAttributeModel standardAttributeModel = new StandardAttributeModel();
standardAttributeModel.setName("|R");
attributeModelComparator.compare((AttributeModel) standardAttributeModel, attributeModel);

[MASTER] 13:17:05.415 [logback-1] WARN  TimeController - Already entered in phase: MINIMIZATION. This will mess up the timing calculations.
* Going to analyze the coverage criteria
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 100%
* Total number of goals: 17
* Number of covered goals: 17
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 100%
* Total number of goals: 12
* Number of covered goals: 12
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 100%
* Total number of goals: 3
* Number of covered goals: 3
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 2
* Number of covered goals: 2
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 100%
* Total number of goals: 17
* Number of covered goals: 17
* Generated 9 tests with total length 45
* Resulting test suite's coverage: 100% (average coverage for all fitness functions)
* Generating assertions
[MASTER] 13:17:05.469 [logback-1] WARN  TimeController - Already entered in phase: COVERAGE_ANALYSIS. This will mess up the timing calculations.
* Resulting test suite's mutation score: 81%
* Compiling and checking tests
[MASTER] 13:17:06.673 [logback-1] WARN  TimeController - Already entered in phase: ASSERTION_GENERATION. This will mess up the timing calculations.
Going to execute: removeTestsThatDoNotCompile
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 13:17:07.474 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar6097912028526755849.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 13:17:07.475 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar6097912028526755849.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 13:17:07.519 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar6097912028526755849.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 13:17:07.520 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar6097912028526755849.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 13:17:07.567 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar6097912028526755849.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 13:17:07.568 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar6097912028526755849.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 13:17:07.623 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar6097912028526755849.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 13:17:07.625 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar6097912028526755849.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 13:17:07.670 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar6097912028526755849.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 13:17:07.672 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar6097912028526755849.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 13:17:07.723 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar6097912028526755849.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 13:17:07.724 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar6097912028526755849.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 13:17:07.776 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar6097912028526755849.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 13:17:07.777 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar6097912028526755849.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 13:17:07.862 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar6097912028526755849.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 13:17:07.862 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar6097912028526755849.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 13:17:07.925 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar6097912028526755849.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 13:17:07.927 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar6097912028526755849.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
** Write a test suite: 1 called: 1 to improve: false
** Write a test suite: 2 called: 2 to improve: false
** Write a test suite: 3 called: 3 to improve: false
** Write a test suite: 4 called: 4 to improve: false
** Write a test suite: 5 called: 5 to improve: false
** Write a test suite: 6 called: 6 to improve: false
** Write a test suite: 7 called: 7 to improve: false
** Write a test suite: 8 called: 8 to improve: false
[MASTER] 13:17:08.082 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar6097912028526755849.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 13:17:08.084 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar6097912028526755849.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
** Write a test suite: 1 called: 1 to improve: false
** Write a test suite: 2 called: 2 to improve: false
** Write a test suite: 3 called: 3 to improve: false
** Write a test suite: 4 called: 4 to improve: false
** Write a test suite: 5 called: 5 to improve: false
** Write a test suite: 6 called: 6 to improve: false
** Write a test suite: 7 called: 7 to improve: false
** Write a test suite: 8 called: 8 to improve: false
[MASTER] 13:17:08.252 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar6097912028526755849.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 13:17:08.257 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar6097912028526755849.jar
* Writing tests to file
[MASTER] 13:17:08.261 [logback-1] WARN  TimeController - Already entered in phase: JUNIT_CHECK. This will mess up the timing calculations.
* Writing JUnit test case 'AttributeModelComparator_ESTest' to evosuite-tests
** Write a test suite: 2 called: 0 to improve: false
* Writing JUnit test case 'AttributeModelComparator_Original_ESTest' to evosuite-tests
** Write a test suite: 0 called: 0 to improve: false
** Write a test suite: 1 called: 1 to improve: false
** Write a test suite: 2 called: 2 to improve: false
** Write a test suite: 3 called: 3 to improve: false
** Write a test suite: 4 called: 4 to improve: false
** Write a test suite: 5 called: 5 to improve: false
** Write a test suite: 6 called: 6 to improve: false
** Write a test suite: 7 called: 7 to improve: false
** Write a test suite: 8 called: 8 to improve: false
* Done!

* Computation finished
