* EvoSuite 1.2.1-SNAPSHOT
* Going to generate test cases for class: de.paragon.explorer.model.AttributeModelComparator
* Starting Client-0
* Properties loaded from /home/ubuntu/UTestGen/Evaluation/getting_results/dataset/SF110/63_objectexplorer/evosuite-files/evosuite.properties
* Connecting to master process on port 19082
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 03:44:49.680 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 03:44:49.692 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.ToDoubleFunction
[MASTER] 03:44:49.693 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.ToIntFunction
[MASTER] 03:44:49.694 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.ToLongFunction
[MASTER] 03:44:50.069 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 03:44:50.071 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 03:44:50.072 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 03:44:51.107 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 03:44:51.108 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
[MASTER] 03:44:51.604 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.ZoneId
[MASTER] 03:44:51.648 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.Temporal
[MASTER] 03:44:51.649 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAccessor
[MASTER] 03:44:51.649 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalField
[MASTER] 03:44:51.649 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalUnit
[MASTER] 03:44:51.649 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAmount
[MASTER] 03:44:51.649 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.Clock
[MASTER] 03:44:51.650 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalQuery
[MASTER] 03:44:51.650 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAdjuster
[MASTER] 03:44:51.660 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.Chronology
[MASTER] 03:44:51.666 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.Era
* Finished analyzing classpath
* Generating tests for class de.paragon.explorer.model.AttributeModelComparator
* Test criteria:
  - Branch Coverage
  - Line Coverage
  - Method-Output Coverage
  - Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 51
* Using seed 1709264688333
[Progress:>                             0%] [Cov:>                                  0%]* Starting evolution
* Initial Number of Goals in DynaMOSA = 10 / 51
[MASTER] 03:44:52.368 [logback-1] WARN  TestCluster - Failed to check cache for java.lang.Comparable<T> : Type points to itself
[Progress:>                             0%] [Cov:================>                  46%][Progress:>                             1%] [Cov:================>                  46%][Progress:>                             1%] [Cov:=====================>             60%][Progress:>                             1%] [Cov:======================>            63%][Progress:>                             2%] [Cov:======================>            63%][Progress:>                             2%] [Cov:======================>            63%][Progress:>                             2%] [Cov:======================>            63%][Progress:>                             2%] [Cov:======================>            63%][Progress:>                             2%] [Cov:======================>            63%][Progress:>                             2%] [Cov:======================>            63%][Progress:>                             3%] [Cov:======================>            63%][Progress:>                             3%] [Cov:======================>            63%][Progress:>                             3%] [Cov:======================>            63%][MASTER] 03:44:55.658 [logback-1] WARN  TestCluster - Failed to check cache for java.util.function.Function<T, R> : Type points to itself
[Progress:>                             3%] [Cov:======================>            63%][Progress:>                             3%] [Cov:======================>            63%][Progress:>                             3%] [Cov:======================>            63%][Progress:>                             3%] [Cov:======================>            63%][Progress:=>                            4%] [Cov:======================>            63%][Progress:=>                            4%] [Cov:======================>            63%][Progress:=>                            4%] [Cov:======================>            63%][Progress:=>                            4%] [Cov:======================>            63%][Progress:=>                            4%] [Cov:======================>            63%][Progress:=>                            4%] [Cov:======================>            63%][Progress:=>                            4%] [Cov:======================>            63%][Progress:=>                            4%] [Cov:======================>            63%][Progress:=>                            4%] [Cov:======================>            63%][Progress:=>                            5%] [Cov:======================>            63%][Progress:=>                            5%] [Cov:======================>            63%][Progress:=>                            5%] [Cov:======================>            63%][Progress:=>                            5%] [Cov:======================>            63%][Progress:=>                            5%] [Cov:======================>            63%][Progress:=>                            5%] [Cov:======================>            63%][Progress:=>                            5%] [Cov:======================>            63%][Progress:=>                            5%] [Cov:======================>            63%][Progress:=>                            5%] [Cov:======================>            63%][Progress:=>                            5%] [Cov:======================>            63%][Progress:=>                            5%] [Cov:======================>            63%][Progress:=>                            6%] [Cov:======================>            63%][Progress:=>                            6%] [Cov:=========================>         73%][Progress:=>                            6%] [Cov:============================>      82%][Progress:=>                            6%] [Cov:============================>      82%][Progress:=>                            6%] [Cov:================================>  92%][Progress:==>                           7%] [Cov:================================>  92%][Progress:==>                           7%] [Cov:===================================100%]
* Search finished after 7s and 43 generations, 13016 statements, best individual has fitness: 0.0
* Generated before the refinement 9 tests with total length 45
statement is: de.paragon.explorer.model.AttributeModelComparator()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.paragon.explorer.model.AttributeModelComparator
statement code is: AttributeModelComparator attributeModelComparator = new AttributeModelComparator()
statement is: compare(Lde/paragon/explorer/model/AttributeModel;Lde/paragon/explorer/model/AttributeModel;)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int compare = attributeModelComparator.compare((AttributeModel) null, (AttributeModel) null)
test data is: AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
attributeModelComparator.compare((AttributeModel) null, (AttributeModel) null);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
        attributeModelComparator.compare(new AttributeModel("id", "1234"), new AttributeModel("id", "1234"));
    }
}
statement is: AttributeModelComparator attributeModelComparator = new AttributeModelComparator(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: attributeModelComparator.compare(new AttributeModel("id", "1234"), new AttributeModel("id", "1234")), class spoon.support.reflect.code.CtInvocationImpl
invocation is: attributeModelComparator.compare(new AttributeModel("id", "1234"), new AttributeModel("id", "1234")) target is: attributeModelComparator method is: compare(AttributeModel,AttributeModel)
source statement: de.paragon.explorer.model.AttributeModelComparator()V callee: VariableReference: Statement 0, type de.paragon.explorer.model.AttributeModelComparatorindex is: 0
Matched Method is: compare(Lde/paragon/explorer/model/AttributeModel;Lde/paragon/explorer/model/AttributeModel;)I
i 0 Parameters size() 0 Num of Method Parameters: 2
i 1 Parameters size() 0 Num of Method Parameters: 2
TestCase is: AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
AttributeModel attributeModel = null;
AttributeModel attributeModel = null;
attributeModelComparator.compare(attributeModel, attributeModel);

statement is: de.paragon.explorer.model.AttributeModelComparator()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.paragon.explorer.model.AttributeModelComparator
statement code is: AttributeModelComparator attributeModelComparator = new AttributeModelComparator()
statement is: de.paragon.explorer.model.StandardAttributeModel()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.paragon.explorer.model.StandardAttributeModel
statement code is: StandardAttributeModel standardAttributeModel = new StandardAttributeModel()
statement is: compare(Lde/paragon/explorer/model/AttributeModel;Lde/paragon/explorer/model/AttributeModel;)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int compare = attributeModelComparator.compare((AttributeModel) arg0, (AttributeModel) null)
test data is: AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
StandardAttributeModel standardAttributeModel = new StandardAttributeModel();
attributeModelComparator.compare((AttributeModel) standardAttributeModel, (AttributeModel) null);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
        StandardAttributeModel standardAttributeModel = new StandardAttributeModel();
        attributeModelComparator.compare(((AttributeModel) (standardAttributeModel)), ((AttributeModel) (null)));
        // Improved test data
        AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
        StandardAttributeModel standardAttributeModel = new StandardAttributeModel(10, "Test String", 'c');
        attributeModelComparator.compare(((AttributeModel) (standardAttributeModel)), ((AttributeModel) (null)));
    }
}
statement is: AttributeModelComparator attributeModelComparator = new AttributeModelComparator(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: StandardAttributeModel standardAttributeModel = new StandardAttributeModel(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: attributeModelComparator.compare(((AttributeModel) (standardAttributeModel)), ((AttributeModel) (null))), class spoon.support.reflect.code.CtInvocationImpl
invocation is: attributeModelComparator.compare(((AttributeModel) (standardAttributeModel)), ((AttributeModel) (null))) target is: attributeModelComparator method is: compare(AttributeModel,AttributeModel)
source statement: de.paragon.explorer.model.AttributeModelComparator()V callee: VariableReference: Statement 0, type de.paragon.explorer.model.AttributeModelComparatorindex is: 0
Matched Method is: compare(Lde/paragon/explorer/model/AttributeModel;Lde/paragon/explorer/model/AttributeModel;)I
i 1 Parameters size() 1 Num of Method Parameters: 2
statement is: // Improved test data
AttributeModelComparator attributeModelComparator = new AttributeModelComparator(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: StandardAttributeModel standardAttributeModel = new StandardAttributeModel(10, "Test String", 'c'), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: attributeModelComparator.compare(((AttributeModel) (standardAttributeModel)), ((AttributeModel) (null))), class spoon.support.reflect.code.CtInvocationImpl
invocation is: attributeModelComparator.compare(((AttributeModel) (standardAttributeModel)), ((AttributeModel) (null))) target is: attributeModelComparator method is: compare(AttributeModel,AttributeModel)
source statement: de.paragon.explorer.model.AttributeModelComparator()V callee: VariableReference: Statement 0, type de.paragon.explorer.model.AttributeModelComparatorindex is: 4
Matched Method is: compare(Lde/paragon/explorer/model/AttributeModel;Lde/paragon/explorer/model/AttributeModel;)I
i 1 Parameters size() 1 Num of Method Parameters: 2
TestCase is: AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
StandardAttributeModel standardAttributeModel = new StandardAttributeModel();
AttributeModel attributeModel = null;
attributeModelComparator.compare((AttributeModel) standardAttributeModel, attributeModel);
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
AttributeModel attributeModel = null;
attributeModelComparator.compare((AttributeModel) standardAttributeModel, attributeModel);

statement is: de.paragon.explorer.model.StandardAttributeModel()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.paragon.explorer.model.StandardAttributeModel
statement code is: StandardAttributeModel standardAttributeModel = new StandardAttributeModel()
statement is: setName(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: standardAttributeModel.setName("")
statement is: de.paragon.explorer.model.AttributeModelComparator()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.paragon.explorer.model.AttributeModelComparator
statement code is: AttributeModelComparator attributeModelComparator = new AttributeModelComparator()
statement is: compare(Lde/paragon/explorer/model/AttributeModel;Lde/paragon/explorer/model/AttributeModel;)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int compare = attributeModelComparator.compare((AttributeModel) arg1, (AttributeModel) arg1)
test data is: StandardAttributeModel standardAttributeModel = new StandardAttributeModel();
standardAttributeModel.setName("");
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
attributeModelComparator.compare((AttributeModel) standardAttributeModel, (AttributeModel) standardAttributeModel);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StandardAttributeModel standardAttributeModel = new StandardAttributeModel();
        standardAttributeModel.setName("Test Attribute");
        attributeModelComparator.compare(((AttributeModel) (standardAttributeModel)), ((AttributeModel) (standardAttributeModel)));
    }
}
statement is: StandardAttributeModel standardAttributeModel = new StandardAttributeModel(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: standardAttributeModel.setName("Test Attribute"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: standardAttributeModel.setName("Test Attribute") target is: standardAttributeModel method is: setName(java.lang.String)
source statement: de.paragon.explorer.model.StandardAttributeModel()V callee: VariableReference: Statement 0, type de.paragon.explorer.model.StandardAttributeModelindex is: 0
Matched Method is: setName(Ljava/lang/String;)V
statement is: attributeModelComparator.compare(((AttributeModel) (standardAttributeModel)), ((AttributeModel) (standardAttributeModel))), class spoon.support.reflect.code.CtInvocationImpl
invocation is: attributeModelComparator.compare(((AttributeModel) (standardAttributeModel)), ((AttributeModel) (standardAttributeModel))) target is: attributeModelComparator method is: compare(AttributeModel,AttributeModel)
TestCase is: StandardAttributeModel standardAttributeModel = new StandardAttributeModel();
String string = "Test Attribute";
standardAttributeModel.setName(string);

statement is: de.paragon.explorer.model.StandardAttributeModel()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.paragon.explorer.model.StandardAttributeModel
statement code is: StandardAttributeModel standardAttributeModel = new StandardAttributeModel()
statement is: de.paragon.explorer.model.StandardAttributeModel()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.paragon.explorer.model.StandardAttributeModel
statement code is: StandardAttributeModel standardAttributeModel = new StandardAttributeModel()
statement is: setName(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: standardAttributeModel.setName("")
statement is: setName(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: standardAttributeModel.setName("w%yRuh")
statement is: de.paragon.explorer.model.AttributeModelComparator()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.paragon.explorer.model.AttributeModelComparator
statement code is: AttributeModelComparator attributeModelComparator = new AttributeModelComparator()
statement is: compare(Lde/paragon/explorer/model/AttributeModel;Lde/paragon/explorer/model/AttributeModel;)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int compare = attributeModelComparator.compare((AttributeModel) arg0, (AttributeModel) arg1)
test data is: StandardAttributeModel standardAttributeModel = new StandardAttributeModel();
StandardAttributeModel standardAttributeModel = new StandardAttributeModel();
standardAttributeModel.setName("");
standardAttributeModel.setName("w%yRuh");
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
attributeModelComparator.compare((AttributeModel) standardAttributeModel, (AttributeModel) standardAttributeModel);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StandardAttributeModel standardAttributeModel1 = new StandardAttributeModel();
        standardAttributeModel1.setName("Water");
        standardAttributeModel1.setDescription("A liquid substance that is essential for human survival.");
        StandardAttributeModel standardAttributeModel2 = new StandardAttributeModel();
        standardAttributeModel2.setName("Earth");
        standardAttributeModel2.setDescription("The third planet from the sun and the fifth largest planet in the solar system.");
        AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
        attributeModelComparator.compare(((AttributeModel) (standardAttributeModel1)), ((AttributeModel) (standardAttributeModel2)));
    }
}
statement is: StandardAttributeModel standardAttributeModel1 = new StandardAttributeModel(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: standardAttributeModel1.setName("Water"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: standardAttributeModel1.setName("Water") target is: standardAttributeModel1 method is: setName(java.lang.String)
source statement: de.paragon.explorer.model.StandardAttributeModel()V callee: VariableReference: Statement 0, type de.paragon.explorer.model.StandardAttributeModelindex is: 0
Matched Method is: setName(Ljava/lang/String;)V
statement is: standardAttributeModel1.setDescription("A liquid substance that is essential for human survival."), class spoon.support.reflect.code.CtInvocationImpl
invocation is: standardAttributeModel1.setDescription("A liquid substance that is essential for human survival.") target is: standardAttributeModel1 method is: setDescription(java.lang.String)
statement is: StandardAttributeModel standardAttributeModel2 = new StandardAttributeModel(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: standardAttributeModel2.setName("Earth"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: standardAttributeModel2.setName("Earth") target is: standardAttributeModel2 method is: setName(java.lang.String)
source statement: de.paragon.explorer.model.StandardAttributeModel()V callee: VariableReference: Statement 0, type de.paragon.explorer.model.StandardAttributeModelindex is: 3
Matched Method is: setName(Ljava/lang/String;)V
statement is: standardAttributeModel2.setDescription("The third planet from the sun and the fifth largest planet in the solar system."), class spoon.support.reflect.code.CtInvocationImpl
invocation is: standardAttributeModel2.setDescription("The third planet from the sun and the fifth largest planet in the solar system.") target is: standardAttributeModel2 method is: setDescription(java.lang.String)
statement is: AttributeModelComparator attributeModelComparator = new AttributeModelComparator(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: attributeModelComparator.compare(((AttributeModel) (standardAttributeModel1)), ((AttributeModel) (standardAttributeModel2))), class spoon.support.reflect.code.CtInvocationImpl
invocation is: attributeModelComparator.compare(((AttributeModel) (standardAttributeModel1)), ((AttributeModel) (standardAttributeModel2))) target is: attributeModelComparator method is: compare(AttributeModel,AttributeModel)
source statement: de.paragon.explorer.model.AttributeModelComparator()V callee: VariableReference: Statement 4, type de.paragon.explorer.model.AttributeModelComparatorindex is: 6
Matched Method is: compare(Lde/paragon/explorer/model/AttributeModel;Lde/paragon/explorer/model/AttributeModel;)I
TestCase is: StandardAttributeModel standardAttributeModel = new StandardAttributeModel();
String string = "Water";
standardAttributeModel.setName(string);
StandardAttributeModel standardAttributeModel = new StandardAttributeModel();
String string = "Earth";
standardAttributeModel.setName(string);
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
((AttributeModelComparator) string).compare((AttributeModel) standardAttributeModel, (AttributeModel) standardAttributeModel);

statement is: de.paragon.explorer.model.StandardAttributeModel()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.paragon.explorer.model.StandardAttributeModel
statement code is: StandardAttributeModel standardAttributeModel = new StandardAttributeModel()
statement is: de.paragon.explorer.model.StandardAttributeModel()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.paragon.explorer.model.StandardAttributeModel
statement code is: StandardAttributeModel standardAttributeModel = new StandardAttributeModel()
statement is: setName(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: standardAttributeModel.setName("a!mVp#T")
statement is: setName(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: standardAttributeModel.setName("l~7G")
statement is: de.paragon.explorer.model.AttributeModelComparator()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.paragon.explorer.model.AttributeModelComparator
statement code is: AttributeModelComparator attributeModelComparator = new AttributeModelComparator()
statement is: compare(Lde/paragon/explorer/model/AttributeModel;Lde/paragon/explorer/model/AttributeModel;)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int compare = attributeModelComparator.compare((AttributeModel) arg0, (AttributeModel) arg1)
test data is: StandardAttributeModel standardAttributeModel = new StandardAttributeModel();
StandardAttributeModel standardAttributeModel = new StandardAttributeModel();
standardAttributeModel.setName("a!mVp#T");
standardAttributeModel.setName("l~7G");
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
attributeModelComparator.compare((AttributeModel) standardAttributeModel, (AttributeModel) standardAttributeModel);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StandardAttributeModel standardAttributeModel = new StandardAttributeModel();
        standardAttributeModel.setName("a1234567890");// Changed to a more descriptive and representative name

        standardAttributeModel.setName("abcdefghijklmnopqrstuvwxyz");// Changed to a more descriptive and representative name

        AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
        attributeModelComparator.compare(((AttributeModel) (standardAttributeModel)), ((AttributeModel) (standardAttributeModel)));
    }
}
statement is: StandardAttributeModel standardAttributeModel = new StandardAttributeModel(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: standardAttributeModel.setName("a1234567890")// Changed to a more descriptive and representative name
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: standardAttributeModel.setName("a1234567890")// Changed to a more descriptive and representative name
 target is: standardAttributeModel method is: setName(java.lang.String)
source statement: de.paragon.explorer.model.StandardAttributeModel()V callee: VariableReference: Statement 0, type de.paragon.explorer.model.StandardAttributeModelindex is: 0
Matched Method is: setName(Ljava/lang/String;)V
statement is: standardAttributeModel.setName("abcdefghijklmnopqrstuvwxyz")// Changed to a more descriptive and representative name
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: standardAttributeModel.setName("abcdefghijklmnopqrstuvwxyz")// Changed to a more descriptive and representative name
 target is: standardAttributeModel method is: setName(java.lang.String)
source statement: de.paragon.explorer.model.StandardAttributeModel()V callee: VariableReference: Statement 0, type de.paragon.explorer.model.StandardAttributeModelindex is: 0
Matched Method is: setName(Ljava/lang/String;)V
statement is: AttributeModelComparator attributeModelComparator = new AttributeModelComparator(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: attributeModelComparator.compare(((AttributeModel) (standardAttributeModel)), ((AttributeModel) (standardAttributeModel))), class spoon.support.reflect.code.CtInvocationImpl
invocation is: attributeModelComparator.compare(((AttributeModel) (standardAttributeModel)), ((AttributeModel) (standardAttributeModel))) target is: attributeModelComparator method is: compare(AttributeModel,AttributeModel)
source statement: de.paragon.explorer.model.AttributeModelComparator()V callee: VariableReference: Statement 4, type de.paragon.explorer.model.AttributeModelComparatorindex is: 5
Matched Method is: compare(Lde/paragon/explorer/model/AttributeModel;Lde/paragon/explorer/model/AttributeModel;)I
TestCase is: StandardAttributeModel standardAttributeModel = new StandardAttributeModel();
String string = "a1234567890";
standardAttributeModel.setName(string);
String string = "abcdefghijklmnopqrstuvwxyz";
standardAttributeModel.setName(string);
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
((AttributeModelComparator) _void).compare((AttributeModel) standardAttributeModel, (AttributeModel) standardAttributeModel);

statement is: de.paragon.explorer.model.StandardAttributeModel()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.paragon.explorer.model.StandardAttributeModel
statement code is: StandardAttributeModel standardAttributeModel = new StandardAttributeModel()
statement is: de.paragon.explorer.model.StandardAttributeModel()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.paragon.explorer.model.StandardAttributeModel
statement code is: StandardAttributeModel standardAttributeModel = new StandardAttributeModel()
statement is: setName(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: standardAttributeModel.setName("")
statement is: setName(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: standardAttributeModel.setName(":QL$n=P")
statement is: de.paragon.explorer.model.AttributeModelComparator()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.paragon.explorer.model.AttributeModelComparator
statement code is: AttributeModelComparator attributeModelComparator = new AttributeModelComparator()
statement is: compare(Lde/paragon/explorer/model/AttributeModel;Lde/paragon/explorer/model/AttributeModel;)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int compare = attributeModelComparator.compare((AttributeModel) arg0, (AttributeModel) arg1)
test data is: StandardAttributeModel standardAttributeModel = new StandardAttributeModel();
StandardAttributeModel standardAttributeModel = new StandardAttributeModel();
standardAttributeModel.setName("");
standardAttributeModel.setName(":QL$n=P");
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
attributeModelComparator.compare((AttributeModel) standardAttributeModel, (AttributeModel) standardAttributeModel);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StandardAttributeModel standardAttributeModel1 = new StandardAttributeModel();
        standardAttributeModel1.setName("Name1");
        standardAttributeModel1.setValue(10);
        StandardAttributeModel standardAttributeModel2 = new StandardAttributeModel();
        standardAttributeModel2.setName("Name2");
        standardAttributeModel2.setValue(20);
        AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
        attributeModelComparator.compare(((AttributeModel) (standardAttributeModel1)), ((AttributeModel) (standardAttributeModel2)));
    }
}
statement is: StandardAttributeModel standardAttributeModel1 = new StandardAttributeModel(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: standardAttributeModel1.setName("Name1"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: standardAttributeModel1.setName("Name1") target is: standardAttributeModel1 method is: setName(java.lang.String)
source statement: de.paragon.explorer.model.StandardAttributeModel()V callee: VariableReference: Statement 0, type de.paragon.explorer.model.StandardAttributeModelindex is: 0
Matched Method is: setName(Ljava/lang/String;)V
statement is: standardAttributeModel1.setValue(10), class spoon.support.reflect.code.CtInvocationImpl
invocation is: standardAttributeModel1.setValue(10) target is: standardAttributeModel1 method is: setValue(int)
statement is: StandardAttributeModel standardAttributeModel2 = new StandardAttributeModel(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: standardAttributeModel2.setName("Name2"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: standardAttributeModel2.setName("Name2") target is: standardAttributeModel2 method is: setName(java.lang.String)
source statement: de.paragon.explorer.model.StandardAttributeModel()V callee: VariableReference: Statement 0, type de.paragon.explorer.model.StandardAttributeModelindex is: 3
Matched Method is: setName(Ljava/lang/String;)V
statement is: standardAttributeModel2.setValue(20), class spoon.support.reflect.code.CtInvocationImpl
invocation is: standardAttributeModel2.setValue(20) target is: standardAttributeModel2 method is: setValue(int)
statement is: AttributeModelComparator attributeModelComparator = new AttributeModelComparator(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: attributeModelComparator.compare(((AttributeModel) (standardAttributeModel1)), ((AttributeModel) (standardAttributeModel2))), class spoon.support.reflect.code.CtInvocationImpl
invocation is: attributeModelComparator.compare(((AttributeModel) (standardAttributeModel1)), ((AttributeModel) (standardAttributeModel2))) target is: attributeModelComparator method is: compare(AttributeModel,AttributeModel)
source statement: de.paragon.explorer.model.AttributeModelComparator()V callee: VariableReference: Statement 4, type de.paragon.explorer.model.AttributeModelComparatorindex is: 6
Matched Method is: compare(Lde/paragon/explorer/model/AttributeModel;Lde/paragon/explorer/model/AttributeModel;)I
TestCase is: StandardAttributeModel standardAttributeModel = new StandardAttributeModel();
String string = "Name1";
standardAttributeModel.setName(string);
StandardAttributeModel standardAttributeModel = new StandardAttributeModel();
String string = "Name2";
standardAttributeModel.setName(string);
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
((AttributeModelComparator) string).compare((AttributeModel) standardAttributeModel, (AttributeModel) standardAttributeModel);

statement is: de.paragon.explorer.model.StandardAttributeModel()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.paragon.explorer.model.StandardAttributeModel
statement code is: StandardAttributeModel standardAttributeModel = new StandardAttributeModel()
statement is: de.paragon.explorer.model.StandardAttributeModel()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.paragon.explorer.model.StandardAttributeModel
statement code is: StandardAttributeModel standardAttributeModel = new StandardAttributeModel()
statement is: setName(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: standardAttributeModel.setName("")
statement is: setName(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: standardAttributeModel.setName("w%yRuh")
statement is: de.paragon.explorer.model.AttributeModelComparator()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.paragon.explorer.model.AttributeModelComparator
statement code is: AttributeModelComparator attributeModelComparator = new AttributeModelComparator()
statement is: compare(Lde/paragon/explorer/model/AttributeModel;Lde/paragon/explorer/model/AttributeModel;)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int compare = attributeModelComparator.compare((AttributeModel) arg0, (AttributeModel) arg1)
test data is: StandardAttributeModel standardAttributeModel = new StandardAttributeModel();
StandardAttributeModel standardAttributeModel = new StandardAttributeModel();
standardAttributeModel.setName("");
standardAttributeModel.setName("w%yRuh");
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
attributeModelComparator.compare((AttributeModel) standardAttributeModel, (AttributeModel) standardAttributeModel);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StandardAttributeModel standardAttributeModel1 = new StandardAttributeModel();
        standardAttributeModel1.setName("John Doe");
        StandardAttributeModel standardAttributeModel2 = new StandardAttributeModel();
        standardAttributeModel2.setName("Jane Doe");
        AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
        attributeModelComparator.compare(((AttributeModel) (standardAttributeModel1)), ((AttributeModel) (standardAttributeModel2)));
    }
}
statement is: StandardAttributeModel standardAttributeModel1 = new StandardAttributeModel(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: standardAttributeModel1.setName("John Doe"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: standardAttributeModel1.setName("John Doe") target is: standardAttributeModel1 method is: setName(java.lang.String)
source statement: de.paragon.explorer.model.StandardAttributeModel()V callee: VariableReference: Statement 0, type de.paragon.explorer.model.StandardAttributeModelindex is: 0
Matched Method is: setName(Ljava/lang/String;)V
statement is: StandardAttributeModel standardAttributeModel2 = new StandardAttributeModel(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: standardAttributeModel2.setName("Jane Doe"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: standardAttributeModel2.setName("Jane Doe") target is: standardAttributeModel2 method is: setName(java.lang.String)
source statement: de.paragon.explorer.model.StandardAttributeModel()V callee: VariableReference: Statement 0, type de.paragon.explorer.model.StandardAttributeModelindex is: 3
Matched Method is: setName(Ljava/lang/String;)V
statement is: AttributeModelComparator attributeModelComparator = new AttributeModelComparator(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: attributeModelComparator.compare(((AttributeModel) (standardAttributeModel1)), ((AttributeModel) (standardAttributeModel2))), class spoon.support.reflect.code.CtInvocationImpl
invocation is: attributeModelComparator.compare(((AttributeModel) (standardAttributeModel1)), ((AttributeModel) (standardAttributeModel2))) target is: attributeModelComparator method is: compare(AttributeModel,AttributeModel)
source statement: de.paragon.explorer.model.AttributeModelComparator()V callee: VariableReference: Statement 4, type de.paragon.explorer.model.AttributeModelComparatorindex is: 6
Matched Method is: compare(Lde/paragon/explorer/model/AttributeModel;Lde/paragon/explorer/model/AttributeModel;)I
TestCase is: StandardAttributeModel standardAttributeModel = new StandardAttributeModel();
String string = "John Doe";
standardAttributeModel.setName(string);
StandardAttributeModel standardAttributeModel = new StandardAttributeModel();
String string = "Jane Doe";
standardAttributeModel.setName(string);
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
((AttributeModelComparator) string).compare((AttributeModel) standardAttributeModel, (AttributeModel) standardAttributeModel);

statement is: de.paragon.explorer.model.StandardAttributeModel()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.paragon.explorer.model.StandardAttributeModel
statement code is: StandardAttributeModel standardAttributeModel = new StandardAttributeModel()
statement is: setName(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: standardAttributeModel.setName("q")
statement is: de.paragon.explorer.model.StandardAttributeModel()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.paragon.explorer.model.StandardAttributeModel
statement code is: StandardAttributeModel standardAttributeModel = new StandardAttributeModel()
statement is: setName(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: standardAttributeModel.setName("|AF 2E@&")
statement is: de.paragon.explorer.model.AttributeModelComparator()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.paragon.explorer.model.AttributeModelComparator
statement code is: AttributeModelComparator attributeModelComparator = new AttributeModelComparator()
statement is: compare(Lde/paragon/explorer/model/AttributeModel;Lde/paragon/explorer/model/AttributeModel;)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int compare = attributeModelComparator.compare((AttributeModel) arg0, (AttributeModel) arg1)
test data is: StandardAttributeModel standardAttributeModel = new StandardAttributeModel();
standardAttributeModel.setName("q");
StandardAttributeModel standardAttributeModel = new StandardAttributeModel();
standardAttributeModel.setName("|AF 2E@&");
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
attributeModelComparator.compare((AttributeModel) standardAttributeModel, (AttributeModel) standardAttributeModel);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StandardAttributeModel standardAttributeModel = new StandardAttributeModel();
        standardAttributeModel.setName("q");// Changed to a more descriptive name

        standardAttributeModel.setName("|AF 2E@&");// Changed to a more descriptive and representative value

        AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
        attributeModelComparator.compare(((AttributeModel) (standardAttributeModel)), ((AttributeModel) (standardAttributeModel)));
    }
}
statement is: StandardAttributeModel standardAttributeModel = new StandardAttributeModel(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: standardAttributeModel.setName("q")// Changed to a more descriptive name
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: standardAttributeModel.setName("q")// Changed to a more descriptive name
 target is: standardAttributeModel method is: setName(java.lang.String)
source statement: de.paragon.explorer.model.StandardAttributeModel()V callee: VariableReference: Statement 0, type de.paragon.explorer.model.StandardAttributeModelindex is: 0
Matched Method is: setName(Ljava/lang/String;)V
statement is: standardAttributeModel.setName("|AF 2E@&")// Changed to a more descriptive and representative value
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: standardAttributeModel.setName("|AF 2E@&")// Changed to a more descriptive and representative value
 target is: standardAttributeModel method is: setName(java.lang.String)
source statement: de.paragon.explorer.model.StandardAttributeModel()V callee: VariableReference: Statement 0, type de.paragon.explorer.model.StandardAttributeModelindex is: 0
Matched Method is: setName(Ljava/lang/String;)V
statement is: AttributeModelComparator attributeModelComparator = new AttributeModelComparator(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: attributeModelComparator.compare(((AttributeModel) (standardAttributeModel)), ((AttributeModel) (standardAttributeModel))), class spoon.support.reflect.code.CtInvocationImpl
invocation is: attributeModelComparator.compare(((AttributeModel) (standardAttributeModel)), ((AttributeModel) (standardAttributeModel))) target is: attributeModelComparator method is: compare(AttributeModel,AttributeModel)
source statement: de.paragon.explorer.model.AttributeModelComparator()V callee: VariableReference: Statement 4, type de.paragon.explorer.model.AttributeModelComparatorindex is: 5
Matched Method is: compare(Lde/paragon/explorer/model/AttributeModel;Lde/paragon/explorer/model/AttributeModel;)I
TestCase is: StandardAttributeModel standardAttributeModel = new StandardAttributeModel();
String string = "q";
standardAttributeModel.setName(string);
String string = "|AF 2E@&";
standardAttributeModel.setName(string);
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
((AttributeModelComparator) _void).compare((AttributeModel) standardAttributeModel, (AttributeModel) standardAttributeModel);

statement is: de.paragon.explorer.model.StandardAttributeModel()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.paragon.explorer.model.StandardAttributeModel
statement code is: StandardAttributeModel standardAttributeModel = new StandardAttributeModel()
statement is: de.paragon.explorer.model.StandardAttributeModel()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.paragon.explorer.model.StandardAttributeModel
statement code is: StandardAttributeModel standardAttributeModel = new StandardAttributeModel()
statement is: setName(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: standardAttributeModel.setName("")
statement is: setName(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: standardAttributeModel.setName(":QL$n=P")
statement is: de.paragon.explorer.model.AttributeModelComparator()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.paragon.explorer.model.AttributeModelComparator
statement code is: AttributeModelComparator attributeModelComparator = new AttributeModelComparator()
statement is: compare(Lde/paragon/explorer/model/AttributeModel;Lde/paragon/explorer/model/AttributeModel;)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int compare = attributeModelComparator.compare((AttributeModel) arg0, (AttributeModel) arg1)
test data is: StandardAttributeModel standardAttributeModel = new StandardAttributeModel();
StandardAttributeModel standardAttributeModel = new StandardAttributeModel();
standardAttributeModel.setName("");
standardAttributeModel.setName(":QL$n=P");
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
attributeModelComparator.compare((AttributeModel) standardAttributeModel, (AttributeModel) standardAttributeModel);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StandardAttributeModel standardAttributeModel = new StandardAttributeModel();
        standardAttributeModel.setName("John Doe");
        standardAttributeModel.setName("Jane Smith");
        AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
        attributeModelComparator.compare(((AttributeModel) (standardAttributeModel)), ((AttributeModel) (standardAttributeModel)));
    }
}
statement is: StandardAttributeModel standardAttributeModel = new StandardAttributeModel(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: standardAttributeModel.setName("John Doe"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: standardAttributeModel.setName("John Doe") target is: standardAttributeModel method is: setName(java.lang.String)
source statement: de.paragon.explorer.model.StandardAttributeModel()V callee: VariableReference: Statement 0, type de.paragon.explorer.model.StandardAttributeModelindex is: 0
Matched Method is: setName(Ljava/lang/String;)V
statement is: standardAttributeModel.setName("Jane Smith"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: standardAttributeModel.setName("Jane Smith") target is: standardAttributeModel method is: setName(java.lang.String)
source statement: de.paragon.explorer.model.StandardAttributeModel()V callee: VariableReference: Statement 0, type de.paragon.explorer.model.StandardAttributeModelindex is: 0
Matched Method is: setName(Ljava/lang/String;)V
statement is: AttributeModelComparator attributeModelComparator = new AttributeModelComparator(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: attributeModelComparator.compare(((AttributeModel) (standardAttributeModel)), ((AttributeModel) (standardAttributeModel))), class spoon.support.reflect.code.CtInvocationImpl
invocation is: attributeModelComparator.compare(((AttributeModel) (standardAttributeModel)), ((AttributeModel) (standardAttributeModel))) target is: attributeModelComparator method is: compare(AttributeModel,AttributeModel)
source statement: de.paragon.explorer.model.AttributeModelComparator()V callee: VariableReference: Statement 4, type de.paragon.explorer.model.AttributeModelComparatorindex is: 5
Matched Method is: compare(Lde/paragon/explorer/model/AttributeModel;Lde/paragon/explorer/model/AttributeModel;)I
TestCase is: StandardAttributeModel standardAttributeModel = new StandardAttributeModel();
String string = "John Doe";
standardAttributeModel.setName(string);
String string = "Jane Smith";
standardAttributeModel.setName(string);
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
((AttributeModelComparator) _void).compare((AttributeModel) standardAttributeModel, (AttributeModel) standardAttributeModel);

* test suite isTestSuite: 18
Test 0: 
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
attributeModelComparator.compare((AttributeModel) null, (AttributeModel) null);

Test 1: 
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
StandardAttributeModel standardAttributeModel = new StandardAttributeModel();
attributeModelComparator.compare((AttributeModel) standardAttributeModel, (AttributeModel) null);
Test 2: 
StandardAttributeModel standardAttributeModel = new StandardAttributeModel();
standardAttributeModel.setName("");
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
attributeModelComparator.compare((AttributeModel) standardAttributeModel, (AttributeModel) standardAttributeModel);
Test 3: 
StandardAttributeModel standardAttributeModel = new StandardAttributeModel();
StandardAttributeModel standardAttributeModel = new StandardAttributeModel();
standardAttributeModel.setName("");
standardAttributeModel.setName("w%yRuh");
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
attributeModelComparator.compare((AttributeModel) standardAttributeModel, (AttributeModel) standardAttributeModel);
Test 4: 
StandardAttributeModel standardAttributeModel = new StandardAttributeModel();
StandardAttributeModel standardAttributeModel = new StandardAttributeModel();
standardAttributeModel.setName("a!mVp#T");
standardAttributeModel.setName("l~7G");
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
attributeModelComparator.compare((AttributeModel) standardAttributeModel, (AttributeModel) standardAttributeModel);
Test 5: 
StandardAttributeModel standardAttributeModel = new StandardAttributeModel();
StandardAttributeModel standardAttributeModel = new StandardAttributeModel();
standardAttributeModel.setName("");
standardAttributeModel.setName(":QL$n=P");
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
attributeModelComparator.compare((AttributeModel) standardAttributeModel, (AttributeModel) standardAttributeModel);
Test 6: 
StandardAttributeModel standardAttributeModel = new StandardAttributeModel();
StandardAttributeModel standardAttributeModel = new StandardAttributeModel();
standardAttributeModel.setName("");
standardAttributeModel.setName("w%yRuh");
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
attributeModelComparator.compare((AttributeModel) standardAttributeModel, (AttributeModel) standardAttributeModel);
Test 7: 
StandardAttributeModel standardAttributeModel = new StandardAttributeModel();
standardAttributeModel.setName("q");
StandardAttributeModel standardAttributeModel = new StandardAttributeModel();
standardAttributeModel.setName("|AF 2E@&");
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
attributeModelComparator.compare((AttributeModel) standardAttributeModel, (AttributeModel) standardAttributeModel);
Test 8: 
StandardAttributeModel standardAttributeModel = new StandardAttributeModel();
StandardAttributeModel standardAttributeModel = new StandardAttributeModel();
standardAttributeModel.setName("");
standardAttributeModel.setName(":QL$n=P");
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
attributeModelComparator.compare((AttributeModel) standardAttributeModel, (AttributeModel) standardAttributeModel);
Test 9: 
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
attributeModelComparator.compare((AttributeModel) null, (AttributeModel) null);

Test 10: 
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
StandardAttributeModel standardAttributeModel = new StandardAttributeModel();
attributeModelComparator.compare((AttributeModel) standardAttributeModel, (AttributeModel) null);
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
attributeModelComparator.compare((AttributeModel) standardAttributeModel, (AttributeModel) null);

Test 11: 
StandardAttributeModel standardAttributeModel = new StandardAttributeModel();
standardAttributeModel.setName("Test Attribute");

Test 12: 
StandardAttributeModel standardAttributeModel = new StandardAttributeModel();
standardAttributeModel.setName("Water");
StandardAttributeModel standardAttributeModel = new StandardAttributeModel();
standardAttributeModel.setName("Earth");
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
((AttributeModelComparator)"Earth").compare((AttributeModel) standardAttributeModel, (AttributeModel) standardAttributeModel);

Test 13: 
StandardAttributeModel standardAttributeModel = new StandardAttributeModel();
standardAttributeModel.setName("a1234567890");
standardAttributeModel.setName("abcdefghijklmnopqrstuvwxyz");
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
((AttributeModelComparator)null).compare((AttributeModel) standardAttributeModel, (AttributeModel) standardAttributeModel);

Test 14: 
StandardAttributeModel standardAttributeModel = new StandardAttributeModel();
standardAttributeModel.setName("Name1");
StandardAttributeModel standardAttributeModel = new StandardAttributeModel();
standardAttributeModel.setName("Name2");
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
((AttributeModelComparator)"Name2").compare((AttributeModel) standardAttributeModel, (AttributeModel) standardAttributeModel);

Test 15: 
StandardAttributeModel standardAttributeModel = new StandardAttributeModel();
standardAttributeModel.setName("John Doe");
StandardAttributeModel standardAttributeModel = new StandardAttributeModel();
standardAttributeModel.setName("Jane Doe");
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
((AttributeModelComparator)"Jane Doe").compare((AttributeModel) standardAttributeModel, (AttributeModel) standardAttributeModel);

Test 16: 
StandardAttributeModel standardAttributeModel = new StandardAttributeModel();
standardAttributeModel.setName("q");
standardAttributeModel.setName("|AF 2E@&");
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
((AttributeModelComparator)null).compare((AttributeModel) standardAttributeModel, (AttributeModel) standardAttributeModel);

Test 17: 
StandardAttributeModel standardAttributeModel = new StandardAttributeModel();
standardAttributeModel.setName("John Doe");
standardAttributeModel.setName("Jane Smith");
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
((AttributeModelComparator)null).compare((AttributeModel) standardAttributeModel, (AttributeModel) standardAttributeModel);


* Generated after the refinement and before minimization 18 tests with total length 87
* test suite isTestSuite: 18
Test 0: 
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
attributeModelComparator.compare((AttributeModel) null, (AttributeModel) null);

Test 1: 
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
StandardAttributeModel standardAttributeModel = new StandardAttributeModel();
attributeModelComparator.compare((AttributeModel) standardAttributeModel, (AttributeModel) null);
Test 2: 
StandardAttributeModel standardAttributeModel = new StandardAttributeModel();
standardAttributeModel.setName("");
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
attributeModelComparator.compare((AttributeModel) standardAttributeModel, (AttributeModel) standardAttributeModel);
Test 3: 
StandardAttributeModel standardAttributeModel = new StandardAttributeModel();
StandardAttributeModel standardAttributeModel = new StandardAttributeModel();
standardAttributeModel.setName("");
standardAttributeModel.setName("w%yRuh");
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
attributeModelComparator.compare((AttributeModel) standardAttributeModel, (AttributeModel) standardAttributeModel);
Test 4: 
StandardAttributeModel standardAttributeModel = new StandardAttributeModel();
StandardAttributeModel standardAttributeModel = new StandardAttributeModel();
standardAttributeModel.setName("a!mVp#T");
standardAttributeModel.setName("l~7G");
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
attributeModelComparator.compare((AttributeModel) standardAttributeModel, (AttributeModel) standardAttributeModel);
Test 5: 
StandardAttributeModel standardAttributeModel = new StandardAttributeModel();
StandardAttributeModel standardAttributeModel = new StandardAttributeModel();
standardAttributeModel.setName("");
standardAttributeModel.setName(":QL$n=P");
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
attributeModelComparator.compare((AttributeModel) standardAttributeModel, (AttributeModel) standardAttributeModel);
Test 6: 
StandardAttributeModel standardAttributeModel = new StandardAttributeModel();
StandardAttributeModel standardAttributeModel = new StandardAttributeModel();
standardAttributeModel.setName("");
standardAttributeModel.setName("w%yRuh");
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
attributeModelComparator.compare((AttributeModel) standardAttributeModel, (AttributeModel) standardAttributeModel);
Test 7: 
StandardAttributeModel standardAttributeModel = new StandardAttributeModel();
standardAttributeModel.setName("q");
StandardAttributeModel standardAttributeModel = new StandardAttributeModel();
standardAttributeModel.setName("|AF 2E@&");
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
attributeModelComparator.compare((AttributeModel) standardAttributeModel, (AttributeModel) standardAttributeModel);
Test 8: 
StandardAttributeModel standardAttributeModel = new StandardAttributeModel();
StandardAttributeModel standardAttributeModel = new StandardAttributeModel();
standardAttributeModel.setName("");
standardAttributeModel.setName(":QL$n=P");
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
attributeModelComparator.compare((AttributeModel) standardAttributeModel, (AttributeModel) standardAttributeModel);
Test 9: 
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
attributeModelComparator.compare((AttributeModel) null, (AttributeModel) null);

Test 10: 
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
StandardAttributeModel standardAttributeModel = new StandardAttributeModel();
attributeModelComparator.compare((AttributeModel) standardAttributeModel, (AttributeModel) null);
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
attributeModelComparator.compare((AttributeModel) standardAttributeModel, (AttributeModel) null);

Test 11: 
StandardAttributeModel standardAttributeModel = new StandardAttributeModel();
standardAttributeModel.setName("Test Attribute");

Test 12: 
StandardAttributeModel standardAttributeModel = new StandardAttributeModel();
standardAttributeModel.setName("Water");
StandardAttributeModel standardAttributeModel = new StandardAttributeModel();
standardAttributeModel.setName("Earth");
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
((AttributeModelComparator)"Earth").compare((AttributeModel) standardAttributeModel, (AttributeModel) standardAttributeModel);

Test 13: 
StandardAttributeModel standardAttributeModel = new StandardAttributeModel();
standardAttributeModel.setName("a1234567890");
standardAttributeModel.setName("abcdefghijklmnopqrstuvwxyz");
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
((AttributeModelComparator)null).compare((AttributeModel) standardAttributeModel, (AttributeModel) standardAttributeModel);

Test 14: 
StandardAttributeModel standardAttributeModel = new StandardAttributeModel();
standardAttributeModel.setName("Name1");
StandardAttributeModel standardAttributeModel = new StandardAttributeModel();
standardAttributeModel.setName("Name2");
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
((AttributeModelComparator)"Name2").compare((AttributeModel) standardAttributeModel, (AttributeModel) standardAttributeModel);

Test 15: 
StandardAttributeModel standardAttributeModel = new StandardAttributeModel();
standardAttributeModel.setName("John Doe");
StandardAttributeModel standardAttributeModel = new StandardAttributeModel();
standardAttributeModel.setName("Jane Doe");
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
((AttributeModelComparator)"Jane Doe").compare((AttributeModel) standardAttributeModel, (AttributeModel) standardAttributeModel);

Test 16: 
StandardAttributeModel standardAttributeModel = new StandardAttributeModel();
standardAttributeModel.setName("q");
standardAttributeModel.setName("|AF 2E@&");
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
((AttributeModelComparator)null).compare((AttributeModel) standardAttributeModel, (AttributeModel) standardAttributeModel);

Test 17: 
StandardAttributeModel standardAttributeModel = new StandardAttributeModel();
standardAttributeModel.setName("John Doe");
standardAttributeModel.setName("Jane Smith");
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
((AttributeModelComparator)null).compare((AttributeModel) standardAttributeModel, (AttributeModel) standardAttributeModel);


* Minimizing test suite
* test suite isTestSuite: 9
Test 0: 
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
attributeModelComparator.compare((AttributeModel) null, (AttributeModel) null);

Test 1: 
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
StandardAttributeModel standardAttributeModel = new StandardAttributeModel();
attributeModelComparator.compare((AttributeModel) standardAttributeModel, (AttributeModel) null);
Test 2: 
StandardAttributeModel standardAttributeModel = new StandardAttributeModel();
standardAttributeModel.setName("");
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
attributeModelComparator.compare((AttributeModel) standardAttributeModel, (AttributeModel) standardAttributeModel);
Test 3: 
StandardAttributeModel standardAttributeModel = new StandardAttributeModel();
StandardAttributeModel standardAttributeModel = new StandardAttributeModel();
standardAttributeModel.setName("");
standardAttributeModel.setName("w%yRuh");
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
attributeModelComparator.compare((AttributeModel) standardAttributeModel, (AttributeModel) standardAttributeModel);
Test 4: 
StandardAttributeModel standardAttributeModel = new StandardAttributeModel();
StandardAttributeModel standardAttributeModel = new StandardAttributeModel();
standardAttributeModel.setName("a!mVp#T");
standardAttributeModel.setName("l~7G");
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
attributeModelComparator.compare((AttributeModel) standardAttributeModel, (AttributeModel) standardAttributeModel);
Test 5: 
StandardAttributeModel standardAttributeModel = new StandardAttributeModel();
StandardAttributeModel standardAttributeModel = new StandardAttributeModel();
standardAttributeModel.setName("");
standardAttributeModel.setName(":QL$n=P");
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
attributeModelComparator.compare((AttributeModel) standardAttributeModel, (AttributeModel) standardAttributeModel);
Test 6: 
StandardAttributeModel standardAttributeModel = new StandardAttributeModel();
StandardAttributeModel standardAttributeModel = new StandardAttributeModel();
standardAttributeModel.setName("");
standardAttributeModel.setName(":QL$n=P");
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
attributeModelComparator.compare((AttributeModel) standardAttributeModel, (AttributeModel) standardAttributeModel);
Test 7: 
StandardAttributeModel standardAttributeModel = new StandardAttributeModel();
standardAttributeModel.setName("q");
StandardAttributeModel standardAttributeModel = new StandardAttributeModel();
standardAttributeModel.setName("|AF 2E@&");
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
attributeModelComparator.compare((AttributeModel) standardAttributeModel, (AttributeModel) standardAttributeModel);
Test 8: 
StandardAttributeModel standardAttributeModel = new StandardAttributeModel();
StandardAttributeModel standardAttributeModel = new StandardAttributeModel();
standardAttributeModel.setName("");
standardAttributeModel.setName("w%yRuh");
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
attributeModelComparator.compare((AttributeModel) standardAttributeModel, (AttributeModel) standardAttributeModel);

* Going to analyze the coverage criteria
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 100%
* Total number of goals: 17
* Number of covered goals: 17
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 100%
* Total number of goals: 12
* Number of covered goals: 12
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 100%
* Total number of goals: 3
* Number of covered goals: 3
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 2
* Number of covered goals: 2
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 100%
* Total number of goals: 17
* Number of covered goals: 17
* Generated 9 tests with total length 45
* Resulting test suite's coverage: 100% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 81%
* Compiling and checking tests
Going to execute: removeTestsThatDoNotCompile
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
int compare = attributeModelComparator.compare((AttributeModel) null, (AttributeModel) null);
assertEquals((-1), compare);


** It was a parseable test case! 
refined test name is: testCompareNullArguments
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
StandardAttributeModel arg0 = new StandardAttributeModel();
int compare = attributeModelComparator.compare((AttributeModel) arg0, (AttributeModel) null);
assertEquals((-1), compare);


** It was a parseable test case! 
refined test name is: testCompareWithNull
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: StandardAttributeModel arg1 = new StandardAttributeModel();
arg1.setName("");
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
int compare = attributeModelComparator.compare((AttributeModel) arg1, (AttributeModel) arg1);
assertEquals(0, compare);


** It was a parseable test case! 
refined test name is: testCompareEqualAttributes
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: StandardAttributeModel arg0 = new StandardAttributeModel();
StandardAttributeModel arg1 = new StandardAttributeModel();
arg0.setName("");
arg1.setName("w%yRuh");
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
int compare = attributeModelComparator.compare((AttributeModel) arg0, (AttributeModel) arg1);
assertEquals(1, compare);


** It was a parseable test case! 
refined test name is: testCompareWithNonEmptyName
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: StandardAttributeModel arg1 = new StandardAttributeModel();
StandardAttributeModel arg0 = new StandardAttributeModel();
arg0.setName("a!mVp#T");
arg1.setName("l~7G");
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
int compare = attributeModelComparator.compare((AttributeModel) arg0, (AttributeModel) arg1);
assertEquals((-11), compare);


** It was a parseable test case! 
refined test name is: testCompare
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: StandardAttributeModel arg0 = new StandardAttributeModel();
StandardAttributeModel arg1 = new StandardAttributeModel();
arg0.setName("");
arg1.setName(":QL$n=P");
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
int compare = attributeModelComparator.compare((AttributeModel) arg0, (AttributeModel) arg1);
assertEquals((-7), compare);


** It was a parseable test case! 
refined test name is: testCompareDifferentNames
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: StandardAttributeModel arg1 = new StandardAttributeModel();
StandardAttributeModel arg0 = new StandardAttributeModel();
arg1.setName("");
arg0.setName(":QL$n=P");
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
int compare = attributeModelComparator.compare((AttributeModel) arg0, (AttributeModel) arg1);
assertEquals(7, compare);


** It was a parseable test case! 
refined test name is: testCompareWithNameNotMatchingReturnsNonZero
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: StandardAttributeModel arg1 = new StandardAttributeModel();
arg1.setName("q");
StandardAttributeModel arg0 = new StandardAttributeModel();
arg0.setName("|AF 2E@&");
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
int compare = attributeModelComparator.compare((AttributeModel) arg0, (AttributeModel) arg1);
assertEquals(11, compare);


** It was a parseable test case! 
refined test name is: testCompareWithInvalidCharactersInName
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: StandardAttributeModel arg1 = new StandardAttributeModel();
StandardAttributeModel arg0 = new StandardAttributeModel();
arg1.setName("");
arg0.setName("w%yRuh");
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
int compare = attributeModelComparator.compare((AttributeModel) arg0, (AttributeModel) arg1);
assertEquals((-1), compare);


** It was a parseable test case! 
refined test name is: testCompareStandardAttributeModelsWithEmptyName
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 03:47:46.170 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar7204018492893136723.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 03:47:46.198 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7204018492893136723.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 03:47:46.275 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar7204018492893136723.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 03:47:46.277 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7204018492893136723.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 03:47:46.450 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar7204018492893136723.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 03:47:46.452 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7204018492893136723.jar
[MASTER] 03:47:46.596 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar7204018492893136723.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 03:47:46.598 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7204018492893136723.jar
[MASTER] 03:47:46.797 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar7204018492893136723.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 03:47:46.802 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7204018492893136723.jar
[MASTER] 03:47:47.041 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar7204018492893136723.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 03:47:47.046 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7204018492893136723.jar
[MASTER] 03:47:47.208 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar7204018492893136723.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 03:47:47.210 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7204018492893136723.jar
[MASTER] 03:47:47.403 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar7204018492893136723.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 03:47:47.407 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7204018492893136723.jar
[MASTER] 03:47:47.783 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar7204018492893136723.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 03:47:47.789 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7204018492893136723.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 03:47:48.057 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar7204018492893136723.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 03:47:48.059 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7204018492893136723.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 03:47:48.285 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar7204018492893136723.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 03:47:48.288 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7204018492893136723.jar
* Writing tests to file
* Writing JUnit test case 'AttributeModelComparator_ESTest' to evosuite-tests
* Done!

* Computation finished
