* EvoSuite 1.0.0-SNAPSHOT
* Going to generate test cases for class: de.paragon.explorer.model.AttributeModelComparator
* Starting Client-0
* Properties loaded from /home/roham/Results-Utestgen/dataset/SF110-new-res/63_objectexplorer/evosuite-files/evosuite.properties
* Connecting to master process on port 20630
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 18:53:00.983 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 18:53:00.997 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.ToDoubleFunction
[MASTER] 18:53:00.999 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.ToIntFunction
[MASTER] 18:53:01.000 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.ToLongFunction
[MASTER] 18:53:01.663 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 18:53:01.667 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 18:53:01.668 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 18:53:03.660 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 18:53:03.662 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
[MASTER] 18:53:04.824 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.ZoneId
[MASTER] 18:53:04.921 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.Temporal
[MASTER] 18:53:04.922 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAccessor
[MASTER] 18:53:04.922 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalField
[MASTER] 18:53:04.923 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalUnit
[MASTER] 18:53:04.923 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAmount
[MASTER] 18:53:04.923 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.Clock
[MASTER] 18:53:04.925 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalQuery
[MASTER] 18:53:04.926 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAdjuster
[MASTER] 18:53:04.948 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.Chronology
[MASTER] 18:53:04.964 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.Era
* Finished analyzing classpath
* Generating tests for class de.paragon.explorer.model.AttributeModelComparator
* Test criteria:
  - Branch Coverage
  - Line Coverage
  - Method-Output Coverage
  - Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 51
* Using seed 1710269579189
* Starting evolution
[Progress:>                             0%] [Cov:>                                  0%]* Initial Number of Goals in DynaMOSA = 10 / 51
[MASTER] 18:53:06.139 [logback-1] WARN  TestCluster - Failed to check cache for java.lang.Comparable<T> : Type points to itself
[Progress:>                             0%] [Cov:=====================>             60%][Progress:>                             1%] [Cov:=====================>             60%][Progress:>                             1%] [Cov:======================>            63%][Progress:>                             1%] [Cov:======================>            63%][Progress:>                             1%] [Cov:======================>            63%][Progress:>                             2%] [Cov:======================>            63%][Progress:>                             2%] [Cov:======================>            63%][Progress:>                             2%] [Cov:======================>            63%][Progress:>                             2%] [Cov:======================>            63%][Progress:>                             2%] [Cov:===============================>   90%][Progress:>                             2%] [Cov:=================================> 95%][Progress:>                             2%] [Cov:=================================> 97%][Progress:>                             2%] [Cov:=================================> 97%][Progress:>                             2%] [Cov:=================================> 97%][Progress:>                             2%] [Cov:===================================100%]
* Search finished after 6s and 14 generations, 7448 statements, best individual has fitness: 0.0
* Generated before the refinement 9 tests with total length 45
statement is: de.paragon.explorer.model.AttributeModelComparator()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.paragon.explorer.model.AttributeModelComparator
statement code is: AttributeModelComparator attributeModelComparator = new AttributeModelComparator()
statement is: compare(Lde/paragon/explorer/model/AttributeModel;Lde/paragon/explorer/model/AttributeModel;)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int compare = attributeModelComparator.compare((AttributeModel) null, (AttributeModel) null)
test data is: AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
attributeModelComparator.compare((AttributeModel) null, (AttributeModel) null);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
        attributeModelComparator.compare(new AttributeModel("name", "John Doe"), new AttributeModel("name", "Jane Doe"));
    }
}
statement is: AttributeModelComparator attributeModelComparator = new AttributeModelComparator(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: attributeModelComparator.compare(new AttributeModel("name", "John Doe"), new AttributeModel("name", "Jane Doe")), class spoon.support.reflect.code.CtInvocationImpl
invocation is: attributeModelComparator.compare(new AttributeModel("name", "John Doe"), new AttributeModel("name", "Jane Doe")) target is: attributeModelComparator method is: compare(AttributeModel,AttributeModel)
source statement: de.paragon.explorer.model.AttributeModelComparator()V callee: VariableReference: Statement 0, type de.paragon.explorer.model.AttributeModelComparatorindex is: 0
Matched Method is: compare(Lde/paragon/explorer/model/AttributeModel;Lde/paragon/explorer/model/AttributeModel;)I
i 0 Parameters size() 0 Num of Method Parameters: 2
i 1 Parameters size() 0 Num of Method Parameters: 2
TestCase is: AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
AttributeModel attributeModel = null;
AttributeModel attributeModel = null;
attributeModelComparator.compare(attributeModel, attributeModel);

statement is: de.paragon.explorer.model.AttributeModelComparator()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.paragon.explorer.model.AttributeModelComparator
statement code is: AttributeModelComparator attributeModelComparator = new AttributeModelComparator()
statement is: de.paragon.explorer.model.ArrayAttributeModel()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.paragon.explorer.model.ArrayAttributeModel
statement code is: ArrayAttributeModel arrayAttributeModel = new ArrayAttributeModel()
statement is: compare(Lde/paragon/explorer/model/AttributeModel;Lde/paragon/explorer/model/AttributeModel;)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int compare = attributeModelComparator.compare((AttributeModel) arg0, (AttributeModel) null)
test data is: AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
ArrayAttributeModel arrayAttributeModel = new ArrayAttributeModel();
attributeModelComparator.compare((AttributeModel) arrayAttributeModel, (AttributeModel) null);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Improved test data for the AttributeModelComparator class
        AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
        ArrayAttributeModel arrayAttributeModel = new ArrayAttributeModel(new String[]{ "apple", "banana", "cherry" });
        attributeModelComparator.compare(((AttributeModel) (arrayAttributeModel)), ((AttributeModel) (null)));
    }
}
statement is: // Improved test data for the AttributeModelComparator class
AttributeModelComparator attributeModelComparator = new AttributeModelComparator(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: ArrayAttributeModel arrayAttributeModel = new ArrayAttributeModel(new String[]{ "apple", "banana", "cherry" }), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: attributeModelComparator.compare(((AttributeModel) (arrayAttributeModel)), ((AttributeModel) (null))), class spoon.support.reflect.code.CtInvocationImpl
invocation is: attributeModelComparator.compare(((AttributeModel) (arrayAttributeModel)), ((AttributeModel) (null))) target is: attributeModelComparator method is: compare(AttributeModel,AttributeModel)
source statement: de.paragon.explorer.model.AttributeModelComparator()V callee: VariableReference: Statement 0, type de.paragon.explorer.model.AttributeModelComparatorindex is: 0
Matched Method is: compare(Lde/paragon/explorer/model/AttributeModel;Lde/paragon/explorer/model/AttributeModel;)I
i 0 Parameters size() 0 Num of Method Parameters: 2
i 1 Parameters size() 0 Num of Method Parameters: 2
TestCase is: AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
ArrayAttributeModel arrayAttributeModel = null;
AttributeModel attributeModel = null;
attributeModelComparator.compare((AttributeModel) arrayAttributeModel, attributeModel);

statement is: de.paragon.explorer.model.AttributeModelComparator()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.paragon.explorer.model.AttributeModelComparator
statement code is: AttributeModelComparator attributeModelComparator = new AttributeModelComparator()
statement is: de.paragon.explorer.model.AttributeModel()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.paragon.explorer.model.AttributeModel
statement code is: AttributeModel attributeModel = new AttributeModel()
statement is: setName(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: attributeModel.setName("?T)!~p>uNSo#vB:")
statement is: compare(Lde/paragon/explorer/model/AttributeModel;Lde/paragon/explorer/model/AttributeModel;)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int compare = attributeModelComparator.compare(arg1, arg1)
test data is: AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
AttributeModel attributeModel = new AttributeModel();
attributeModel.setName("?T)!~p>uNSo#vB:");
attributeModelComparator.compare(attributeModel, attributeModel);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
        AttributeModel attributeModel = new AttributeModel();
        attributeModel.setName("unique_name");
        attributeModelComparator.compare(attributeModel, attributeModel);
    }
}
statement is: AttributeModelComparator attributeModelComparator = new AttributeModelComparator(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: AttributeModel attributeModel = new AttributeModel(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: attributeModel.setName("unique_name"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: attributeModel.setName("unique_name") target is: attributeModel method is: setName(java.lang.String)
source statement: de.paragon.explorer.model.AttributeModel()V callee: VariableReference: Statement 1, type de.paragon.explorer.model.AttributeModelindex is: 1
Matched Method is: setName(Ljava/lang/String;)V
statement is: attributeModelComparator.compare(attributeModel, attributeModel), class spoon.support.reflect.code.CtInvocationImpl
invocation is: attributeModelComparator.compare(attributeModel, attributeModel) target is: attributeModelComparator method is: compare(AttributeModel,AttributeModel)
source statement: de.paragon.explorer.model.AttributeModelComparator()V callee: VariableReference: Statement 0, type de.paragon.explorer.model.AttributeModelComparatorindex is: 0
Matched Method is: compare(Lde/paragon/explorer/model/AttributeModel;Lde/paragon/explorer/model/AttributeModel;)I
TestCase is: AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
AttributeModel attributeModel = new AttributeModel();
String string = "unique_name";
attributeModel.setName(string);
attributeModelComparator.compare(attributeModel, attributeModel);

statement is: de.paragon.explorer.model.AttributeModelComparator()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.paragon.explorer.model.AttributeModelComparator
statement code is: AttributeModelComparator attributeModelComparator = new AttributeModelComparator()
statement is: de.paragon.explorer.model.AttributeModel()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.paragon.explorer.model.AttributeModel
statement code is: AttributeModel attributeModel = new AttributeModel()
statement is: setName(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: attributeModel.setName("?T)!~p>uNSo#vB:")
statement is: de.paragon.explorer.model.ArrayAttributeModel()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.paragon.explorer.model.ArrayAttributeModel
statement code is: ArrayAttributeModel arrayAttributeModel = new ArrayAttributeModel()
statement is: setName(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: arrayAttributeModel.setName("'g}^,@")
statement is: compare(Lde/paragon/explorer/model/AttributeModel;Lde/paragon/explorer/model/AttributeModel;)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int compare = attributeModelComparator.compare((AttributeModel) arg0, arg1)
test data is: AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
AttributeModel attributeModel = new AttributeModel();
attributeModel.setName("?T)!~p>uNSo#vB:");
ArrayAttributeModel arrayAttributeModel = new ArrayAttributeModel();
arrayAttributeModel.setName("'g}^,@");
attributeModelComparator.compare((AttributeModel) arrayAttributeModel, attributeModel);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
        AttributeModel attributeModel = new AttributeModel();
        attributeModel.setName("name");// Changed from "?T)!~p>uNSo#vB:" to a more descriptive name

        ArrayAttributeModel arrayAttributeModel = new ArrayAttributeModel();
        arrayAttributeModel.setName("address");// Changed from "'g}^,@" to a more descriptive name

        attributeModelComparator.compare(((AttributeModel) (arrayAttributeModel)), attributeModel);
    }
}
statement is: AttributeModelComparator attributeModelComparator = new AttributeModelComparator(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: AttributeModel attributeModel = new AttributeModel(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: attributeModel.setName("name")// Changed from "?T)!~p>uNSo#vB:" to a more descriptive name
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: attributeModel.setName("name")// Changed from "?T)!~p>uNSo#vB:" to a more descriptive name
 target is: attributeModel method is: setName(java.lang.String)
source statement: de.paragon.explorer.model.AttributeModel()V callee: VariableReference: Statement 1, type de.paragon.explorer.model.AttributeModelindex is: 1
Matched Method is: setName(Ljava/lang/String;)V
statement is: ArrayAttributeModel arrayAttributeModel = new ArrayAttributeModel(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: arrayAttributeModel.setName("address")// Changed from "'g}^,@" to a more descriptive name
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: arrayAttributeModel.setName("address")// Changed from "'g}^,@" to a more descriptive name
 target is: arrayAttributeModel method is: setName(java.lang.String)
source statement: de.paragon.explorer.model.ArrayAttributeModel()V callee: VariableReference: Statement 3, type de.paragon.explorer.model.ArrayAttributeModelindex is: 4
Matched Method is: setName(Ljava/lang/String;)V
statement is: attributeModelComparator.compare(((AttributeModel) (arrayAttributeModel)), attributeModel), class spoon.support.reflect.code.CtInvocationImpl
invocation is: attributeModelComparator.compare(((AttributeModel) (arrayAttributeModel)), attributeModel) target is: attributeModelComparator method is: compare(AttributeModel,AttributeModel)
source statement: de.paragon.explorer.model.AttributeModelComparator()V callee: VariableReference: Statement 0, type de.paragon.explorer.model.AttributeModelComparatorindex is: 0
Matched Method is: compare(Lde/paragon/explorer/model/AttributeModel;Lde/paragon/explorer/model/AttributeModel;)I
TestCase is: AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
AttributeModel attributeModel = new AttributeModel();
String string = "name";
attributeModel.setName(string);
ArrayAttributeModel arrayAttributeModel = new ArrayAttributeModel();
String string = "address";
((AttributeModel) _void).setName(string);
attributeModelComparator.compare((AttributeModel) arrayAttributeModel, attributeModel);

statement is: de.paragon.explorer.model.AttributeModelComparator()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.paragon.explorer.model.AttributeModelComparator
statement code is: AttributeModelComparator attributeModelComparator = new AttributeModelComparator()
statement is: de.paragon.explorer.model.AttributeModel()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.paragon.explorer.model.AttributeModel
statement code is: AttributeModel attributeModel = new AttributeModel()
statement is: setName(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: attributeModel.setName("HeV")
statement is: de.paragon.explorer.model.ArrayAttributeModel()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.paragon.explorer.model.ArrayAttributeModel
statement code is: ArrayAttributeModel arrayAttributeModel = new ArrayAttributeModel()
statement is: setName(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: arrayAttributeModel.setName("Could not read configuration file [")
statement is: compare(Lde/paragon/explorer/model/AttributeModel;Lde/paragon/explorer/model/AttributeModel;)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int compare = attributeModelComparator.compare((AttributeModel) arg0, arg1)
test data is: AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
AttributeModel attributeModel = new AttributeModel();
attributeModel.setName("HeV");
ArrayAttributeModel arrayAttributeModel = new ArrayAttributeModel();
arrayAttributeModel.setName("Could not read configuration file [");
attributeModelComparator.compare((AttributeModel) arrayAttributeModel, attributeModel);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
        AttributeModel attributeModel1 = new AttributeModel();
        attributeModel1.setName("HeV");
        ArrayAttributeModel arrayAttributeModel1 = new ArrayAttributeModel();
        arrayAttributeModel1.setName("Could not read configuration file [/Users/testuser/Downloads/config.json]");
        attributeModelComparator.compare(((AttributeModel) (arrayAttributeModel1)), attributeModel1);
    }
}
statement is: AttributeModelComparator attributeModelComparator = new AttributeModelComparator(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: AttributeModel attributeModel1 = new AttributeModel(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: attributeModel1.setName("HeV"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: attributeModel1.setName("HeV") target is: attributeModel1 method is: setName(java.lang.String)
source statement: de.paragon.explorer.model.AttributeModel()V callee: VariableReference: Statement 1, type de.paragon.explorer.model.AttributeModelindex is: 1
Matched Method is: setName(Ljava/lang/String;)V
statement is: ArrayAttributeModel arrayAttributeModel1 = new ArrayAttributeModel(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: arrayAttributeModel1.setName("Could not read configuration file [/Users/testuser/Downloads/config.json]"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: arrayAttributeModel1.setName("Could not read configuration file [/Users/testuser/Downloads/config.json]") target is: arrayAttributeModel1 method is: setName(java.lang.String)
source statement: de.paragon.explorer.model.ArrayAttributeModel()V callee: VariableReference: Statement 3, type de.paragon.explorer.model.ArrayAttributeModelindex is: 4
Matched Method is: setName(Ljava/lang/String;)V
statement is: attributeModelComparator.compare(((AttributeModel) (arrayAttributeModel1)), attributeModel1), class spoon.support.reflect.code.CtInvocationImpl
invocation is: attributeModelComparator.compare(((AttributeModel) (arrayAttributeModel1)), attributeModel1) target is: attributeModelComparator method is: compare(AttributeModel,AttributeModel)
source statement: de.paragon.explorer.model.AttributeModelComparator()V callee: VariableReference: Statement 0, type de.paragon.explorer.model.AttributeModelComparatorindex is: 0
Matched Method is: compare(Lde/paragon/explorer/model/AttributeModel;Lde/paragon/explorer/model/AttributeModel;)I
TestCase is: AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
AttributeModel attributeModel = new AttributeModel();
String string = "HeV";
attributeModel.setName(string);
ArrayAttributeModel arrayAttributeModel = new ArrayAttributeModel();
String string = "Could not read configuration file [/Users/testuser/Downloads/config.json]";
((AttributeModel) _void).setName(string);
attributeModelComparator.compare((AttributeModel) arrayAttributeModel, attributeModel);

statement is: de.paragon.explorer.model.AttributeModelComparator()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.paragon.explorer.model.AttributeModelComparator
statement code is: AttributeModelComparator attributeModelComparator = new AttributeModelComparator()
statement is: de.paragon.explorer.model.AttributeModel()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.paragon.explorer.model.AttributeModel
statement code is: AttributeModel attributeModel = new AttributeModel()
statement is: setName(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: attributeModel.setName("e$")
statement is: de.paragon.explorer.model.ArrayAttributeModel()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.paragon.explorer.model.ArrayAttributeModel
statement code is: ArrayAttributeModel arrayAttributeModel = new ArrayAttributeModel()
statement is: setName(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: arrayAttributeModel.setName("")
statement is: compare(Lde/paragon/explorer/model/AttributeModel;Lde/paragon/explorer/model/AttributeModel;)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int compare = attributeModelComparator.compare((AttributeModel) arg0, arg1)
test data is: AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
AttributeModel attributeModel = new AttributeModel();
attributeModel.setName("e$");
ArrayAttributeModel arrayAttributeModel = new ArrayAttributeModel();
arrayAttributeModel.setName("");
attributeModelComparator.compare((AttributeModel) arrayAttributeModel, attributeModel);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
        AttributeModel attributeModel = new AttributeModel();
        attributeModel.setName("email");// Changed "e$" to a more descriptive name like "email"

        ArrayAttributeModel arrayAttributeModel = new ArrayAttributeModel();
        arrayAttributeModel.setName("names");// Changed an empty string to a more descriptive name like "names"

        attributeModelComparator.compare(((AttributeModel) (arrayAttributeModel)), attributeModel);
    }
}
statement is: AttributeModelComparator attributeModelComparator = new AttributeModelComparator(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: AttributeModel attributeModel = new AttributeModel(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: attributeModel.setName("email")// Changed "e$" to a more descriptive name like "email"
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: attributeModel.setName("email")// Changed "e$" to a more descriptive name like "email"
 target is: attributeModel method is: setName(java.lang.String)
source statement: de.paragon.explorer.model.AttributeModel()V callee: VariableReference: Statement 1, type de.paragon.explorer.model.AttributeModelindex is: 1
Matched Method is: setName(Ljava/lang/String;)V
statement is: ArrayAttributeModel arrayAttributeModel = new ArrayAttributeModel(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: arrayAttributeModel.setName("names")// Changed an empty string to a more descriptive name like "names"
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: arrayAttributeModel.setName("names")// Changed an empty string to a more descriptive name like "names"
 target is: arrayAttributeModel method is: setName(java.lang.String)
source statement: de.paragon.explorer.model.ArrayAttributeModel()V callee: VariableReference: Statement 3, type de.paragon.explorer.model.ArrayAttributeModelindex is: 4
Matched Method is: setName(Ljava/lang/String;)V
statement is: attributeModelComparator.compare(((AttributeModel) (arrayAttributeModel)), attributeModel), class spoon.support.reflect.code.CtInvocationImpl
invocation is: attributeModelComparator.compare(((AttributeModel) (arrayAttributeModel)), attributeModel) target is: attributeModelComparator method is: compare(AttributeModel,AttributeModel)
source statement: de.paragon.explorer.model.AttributeModelComparator()V callee: VariableReference: Statement 0, type de.paragon.explorer.model.AttributeModelComparatorindex is: 0
Matched Method is: compare(Lde/paragon/explorer/model/AttributeModel;Lde/paragon/explorer/model/AttributeModel;)I
TestCase is: AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
AttributeModel attributeModel = new AttributeModel();
String string = "email";
attributeModel.setName(string);
ArrayAttributeModel arrayAttributeModel = new ArrayAttributeModel();
String string = "names";
((AttributeModel) _void).setName(string);
attributeModelComparator.compare((AttributeModel) arrayAttributeModel, attributeModel);

statement is: de.paragon.explorer.model.AttributeModelComparator()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.paragon.explorer.model.AttributeModelComparator
statement code is: AttributeModelComparator attributeModelComparator = new AttributeModelComparator()
statement is: de.paragon.explorer.model.AttributeModel()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.paragon.explorer.model.AttributeModel
statement code is: AttributeModel attributeModel = new AttributeModel()
statement is: setName(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: attributeModel.setName("e$")
statement is: de.paragon.explorer.model.ArrayAttributeModel()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.paragon.explorer.model.ArrayAttributeModel
statement code is: ArrayAttributeModel arrayAttributeModel = new ArrayAttributeModel()
statement is: setName(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: arrayAttributeModel.setName("")
statement is: compare(Lde/paragon/explorer/model/AttributeModel;Lde/paragon/explorer/model/AttributeModel;)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int compare = attributeModelComparator.compare(arg0, (AttributeModel) arg1)
test data is: AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
AttributeModel attributeModel = new AttributeModel();
attributeModel.setName("e$");
ArrayAttributeModel arrayAttributeModel = new ArrayAttributeModel();
arrayAttributeModel.setName("");
attributeModelComparator.compare(attributeModel, (AttributeModel) arrayAttributeModel);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
        AttributeModel employee1 = new AttributeModel("employeeId", "e$");// changed to a more descriptive value, e.g. "employeeId"

        ArrayAttributeModel salaryHistory1 = new ArrayAttributeModel("salaryHistory");// changed to a more descriptive value, e.g. "salaryHistory"

        AttributeModel employee2 = new AttributeModel("employeeId", "e$");// changed to a more descriptive value, e.g. "employeeId"

        ArrayAttributeModel salaryHistory2 = new ArrayAttributeModel("salaryHistory");// changed to a more descriptive value, e.g. "salaryHistory"

        attributeModelComparator.compare(employee1, ((AttributeModel) (salaryHistory1)));
    }
}
statement is: AttributeModelComparator attributeModelComparator = new AttributeModelComparator(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: AttributeModel employee1 = new AttributeModel("employeeId", "e$")// changed to a more descriptive value, e.g. "employeeId"
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: ArrayAttributeModel salaryHistory1 = new ArrayAttributeModel("salaryHistory")// changed to a more descriptive value, e.g. "salaryHistory"
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: AttributeModel employee2 = new AttributeModel("employeeId", "e$")// changed to a more descriptive value, e.g. "employeeId"
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: ArrayAttributeModel salaryHistory2 = new ArrayAttributeModel("salaryHistory")// changed to a more descriptive value, e.g. "salaryHistory"
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: attributeModelComparator.compare(employee1, ((AttributeModel) (salaryHistory1))), class spoon.support.reflect.code.CtInvocationImpl
invocation is: attributeModelComparator.compare(employee1, ((AttributeModel) (salaryHistory1))) target is: attributeModelComparator method is: compare(AttributeModel,AttributeModel)
source statement: de.paragon.explorer.model.AttributeModelComparator()V callee: VariableReference: Statement 0, type de.paragon.explorer.model.AttributeModelComparatorindex is: 0
Matched Method is: compare(Lde/paragon/explorer/model/AttributeModel;Lde/paragon/explorer/model/AttributeModel;)I
i 0 Parameters size() 0 Num of Method Parameters: 2
i 1 Parameters size() 0 Num of Method Parameters: 2
TestCase is: AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
AttributeModel attributeModel = null;
ArrayAttributeModel arrayAttributeModel = null;
attributeModelComparator.compare(attributeModel, (AttributeModel) arrayAttributeModel);

statement is: de.paragon.explorer.model.AttributeModelComparator()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.paragon.explorer.model.AttributeModelComparator
statement code is: AttributeModelComparator attributeModelComparator = new AttributeModelComparator()
statement is: de.paragon.explorer.model.AttributeModel()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.paragon.explorer.model.AttributeModel
statement code is: AttributeModel attributeModel = new AttributeModel()
statement is: setName(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: attributeModel.setName("e$")
statement is: de.paragon.explorer.model.ArrayAttributeModel()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.paragon.explorer.model.ArrayAttributeModel
statement code is: ArrayAttributeModel arrayAttributeModel = new ArrayAttributeModel()
statement is: setName(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: arrayAttributeModel.setName("o")
statement is: compare(Lde/paragon/explorer/model/AttributeModel;Lde/paragon/explorer/model/AttributeModel;)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int compare = attributeModelComparator.compare((AttributeModel) arg0, arg1)
test data is: AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
AttributeModel attributeModel = new AttributeModel();
attributeModel.setName("e$");
ArrayAttributeModel arrayAttributeModel = new ArrayAttributeModel();
arrayAttributeModel.setName("o");
attributeModelComparator.compare((AttributeModel) arrayAttributeModel, attributeModel);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
        AttributeModel attributeModel = new AttributeModel();
        attributeModel.setName("example_string");
        ArrayAttributeModel arrayAttributeModel = new ArrayAttributeModel();
        arrayAttributeModel.setName("example_array");
        attributeModelComparator.compare(((AttributeModel) (arrayAttributeModel)), attributeModel);
    }
}
statement is: AttributeModelComparator attributeModelComparator = new AttributeModelComparator(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: AttributeModel attributeModel = new AttributeModel(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: attributeModel.setName("example_string"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: attributeModel.setName("example_string") target is: attributeModel method is: setName(java.lang.String)
source statement: de.paragon.explorer.model.AttributeModel()V callee: VariableReference: Statement 1, type de.paragon.explorer.model.AttributeModelindex is: 1
Matched Method is: setName(Ljava/lang/String;)V
statement is: ArrayAttributeModel arrayAttributeModel = new ArrayAttributeModel(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: arrayAttributeModel.setName("example_array"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: arrayAttributeModel.setName("example_array") target is: arrayAttributeModel method is: setName(java.lang.String)
source statement: de.paragon.explorer.model.ArrayAttributeModel()V callee: VariableReference: Statement 3, type de.paragon.explorer.model.ArrayAttributeModelindex is: 4
Matched Method is: setName(Ljava/lang/String;)V
statement is: attributeModelComparator.compare(((AttributeModel) (arrayAttributeModel)), attributeModel), class spoon.support.reflect.code.CtInvocationImpl
invocation is: attributeModelComparator.compare(((AttributeModel) (arrayAttributeModel)), attributeModel) target is: attributeModelComparator method is: compare(AttributeModel,AttributeModel)
source statement: de.paragon.explorer.model.AttributeModelComparator()V callee: VariableReference: Statement 0, type de.paragon.explorer.model.AttributeModelComparatorindex is: 0
Matched Method is: compare(Lde/paragon/explorer/model/AttributeModel;Lde/paragon/explorer/model/AttributeModel;)I
TestCase is: AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
AttributeModel attributeModel = new AttributeModel();
String string = "example_string";
attributeModel.setName(string);
ArrayAttributeModel arrayAttributeModel = new ArrayAttributeModel();
String string = "example_array";
((AttributeModel) _void).setName(string);
attributeModelComparator.compare((AttributeModel) arrayAttributeModel, attributeModel);

statement is: de.paragon.explorer.model.AttributeModelComparator()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.paragon.explorer.model.AttributeModelComparator
statement code is: AttributeModelComparator attributeModelComparator = new AttributeModelComparator()
statement is: de.paragon.explorer.model.AttributeModel()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.paragon.explorer.model.AttributeModel
statement code is: AttributeModel attributeModel = new AttributeModel()
statement is: setName(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: attributeModel.setName("&7")
statement is: de.paragon.explorer.model.ArrayAttributeModel()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.paragon.explorer.model.ArrayAttributeModel
statement code is: ArrayAttributeModel arrayAttributeModel = new ArrayAttributeModel()
statement is: setName(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: arrayAttributeModel.setName("")
statement is: compare(Lde/paragon/explorer/model/AttributeModel;Lde/paragon/explorer/model/AttributeModel;)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int compare = attributeModelComparator.compare(arg0, (AttributeModel) arg1)
test data is: AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
AttributeModel attributeModel = new AttributeModel();
attributeModel.setName("&7");
ArrayAttributeModel arrayAttributeModel = new ArrayAttributeModel();
arrayAttributeModel.setName("");
attributeModelComparator.compare(attributeModel, (AttributeModel) arrayAttributeModel);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
        AttributeModel attributeModel = new AttributeModel();
        attributeModel.setName("&7");// Improved test data: changed the name of the attribute model to be more descriptive and representative of the situation being tested.

        ArrayAttributeModel arrayAttributeModel = new ArrayAttributeModel();
        arrayAttributeModel.setName("");// Removed unnecessary code

        attributeModelComparator.compare(attributeModel, ((AttributeModel) (arrayAttributeModel)));
    }
}
statement is: AttributeModelComparator attributeModelComparator = new AttributeModelComparator(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: AttributeModel attributeModel = new AttributeModel(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: attributeModel.setName("&7")// Improved test data: changed the name of the attribute model to be more descriptive and representative of the situation being tested.
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: attributeModel.setName("&7")// Improved test data: changed the name of the attribute model to be more descriptive and representative of the situation being tested.
 target is: attributeModel method is: setName(java.lang.String)
source statement: de.paragon.explorer.model.AttributeModel()V callee: VariableReference: Statement 1, type de.paragon.explorer.model.AttributeModelindex is: 1
Matched Method is: setName(Ljava/lang/String;)V
statement is: ArrayAttributeModel arrayAttributeModel = new ArrayAttributeModel(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: arrayAttributeModel.setName("")// Removed unnecessary code
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: arrayAttributeModel.setName("")// Removed unnecessary code
 target is: arrayAttributeModel method is: setName(java.lang.String)
source statement: de.paragon.explorer.model.ArrayAttributeModel()V callee: VariableReference: Statement 3, type de.paragon.explorer.model.ArrayAttributeModelindex is: 4
Matched Method is: setName(Ljava/lang/String;)V
statement is: attributeModelComparator.compare(attributeModel, ((AttributeModel) (arrayAttributeModel))), class spoon.support.reflect.code.CtInvocationImpl
invocation is: attributeModelComparator.compare(attributeModel, ((AttributeModel) (arrayAttributeModel))) target is: attributeModelComparator method is: compare(AttributeModel,AttributeModel)
source statement: de.paragon.explorer.model.AttributeModelComparator()V callee: VariableReference: Statement 0, type de.paragon.explorer.model.AttributeModelComparatorindex is: 0
Matched Method is: compare(Lde/paragon/explorer/model/AttributeModel;Lde/paragon/explorer/model/AttributeModel;)I
TestCase is: AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
AttributeModel attributeModel = new AttributeModel();
String string = "&7";
attributeModel.setName(string);
ArrayAttributeModel arrayAttributeModel = new ArrayAttributeModel();
String string = "";
((AttributeModel) _void).setName(string);
attributeModelComparator.compare(attributeModel, (AttributeModel) arrayAttributeModel);

* test suite isTestSuite: 18
Test 0: 
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
attributeModelComparator.compare((AttributeModel) null, (AttributeModel) null);

Test 1: 
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
ArrayAttributeModel arrayAttributeModel = new ArrayAttributeModel();
attributeModelComparator.compare((AttributeModel) arrayAttributeModel, (AttributeModel) null);
Test 2: 
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
AttributeModel attributeModel = new AttributeModel();
attributeModel.setName("?T)!~p>uNSo#vB:");
attributeModelComparator.compare(attributeModel, attributeModel);
Test 3: 
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
AttributeModel attributeModel = new AttributeModel();
attributeModel.setName("?T)!~p>uNSo#vB:");
ArrayAttributeModel arrayAttributeModel = new ArrayAttributeModel();
arrayAttributeModel.setName("'g}^,@");
attributeModelComparator.compare((AttributeModel) arrayAttributeModel, attributeModel);
Test 4: 
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
AttributeModel attributeModel = new AttributeModel();
attributeModel.setName("HeV");
ArrayAttributeModel arrayAttributeModel = new ArrayAttributeModel();
arrayAttributeModel.setName("Could not read configuration file [");
attributeModelComparator.compare((AttributeModel) arrayAttributeModel, attributeModel);
Test 5: 
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
AttributeModel attributeModel = new AttributeModel();
attributeModel.setName("e$");
ArrayAttributeModel arrayAttributeModel = new ArrayAttributeModel();
arrayAttributeModel.setName("");
attributeModelComparator.compare((AttributeModel) arrayAttributeModel, attributeModel);
Test 6: 
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
AttributeModel attributeModel = new AttributeModel();
attributeModel.setName("e$");
ArrayAttributeModel arrayAttributeModel = new ArrayAttributeModel();
arrayAttributeModel.setName("");
attributeModelComparator.compare(attributeModel, (AttributeModel) arrayAttributeModel);
Test 7: 
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
AttributeModel attributeModel = new AttributeModel();
attributeModel.setName("e$");
ArrayAttributeModel arrayAttributeModel = new ArrayAttributeModel();
arrayAttributeModel.setName("o");
attributeModelComparator.compare((AttributeModel) arrayAttributeModel, attributeModel);
Test 8: 
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
AttributeModel attributeModel = new AttributeModel();
attributeModel.setName("&7");
ArrayAttributeModel arrayAttributeModel = new ArrayAttributeModel();
arrayAttributeModel.setName("");
attributeModelComparator.compare(attributeModel, (AttributeModel) arrayAttributeModel);
Test 9: 
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
attributeModelComparator.compare((AttributeModel) null, (AttributeModel) null);

Test 10: 
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
attributeModelComparator.compare((AttributeModel) null, (AttributeModel) null);

Test 11: 
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
AttributeModel attributeModel = new AttributeModel();
attributeModel.setName("unique_name");
attributeModelComparator.compare(attributeModel, attributeModel);

Test 12: 
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
AttributeModel attributeModel = new AttributeModel();
attributeModel.setName("name");
ArrayAttributeModel arrayAttributeModel = new ArrayAttributeModel();
((AttributeModel)null).setName("address");
attributeModelComparator.compare((AttributeModel) arrayAttributeModel, attributeModel);

Test 13: 
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
AttributeModel attributeModel = new AttributeModel();
attributeModel.setName("HeV");
ArrayAttributeModel arrayAttributeModel = new ArrayAttributeModel();
((AttributeModel)null).setName("Could not read configuration file [/Users/testuser/Downloads/config.json]");
attributeModelComparator.compare((AttributeModel) arrayAttributeModel, attributeModel);

Test 14: 
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
AttributeModel attributeModel = new AttributeModel();
attributeModel.setName("email");
ArrayAttributeModel arrayAttributeModel = new ArrayAttributeModel();
((AttributeModel)null).setName("names");
attributeModelComparator.compare((AttributeModel) arrayAttributeModel, attributeModel);

Test 15: 
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
attributeModelComparator.compare((AttributeModel) null, (AttributeModel) null);

Test 16: 
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
AttributeModel attributeModel = new AttributeModel();
attributeModel.setName("example_string");
ArrayAttributeModel arrayAttributeModel = new ArrayAttributeModel();
((AttributeModel)null).setName("example_array");
attributeModelComparator.compare((AttributeModel) arrayAttributeModel, attributeModel);

Test 17: 
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
AttributeModel attributeModel = new AttributeModel();
attributeModel.setName("&7");
ArrayAttributeModel arrayAttributeModel = new ArrayAttributeModel();
((AttributeModel)null).setName("");
attributeModelComparator.compare(attributeModel, (AttributeModel) arrayAttributeModel);


* Generated after the refinement and before minimization 18 tests with total length 85
* test suite isTestSuite: 18
Test 0: 
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
attributeModelComparator.compare((AttributeModel) null, (AttributeModel) null);

Test 1: 
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
ArrayAttributeModel arrayAttributeModel = new ArrayAttributeModel();
attributeModelComparator.compare((AttributeModel) arrayAttributeModel, (AttributeModel) null);
Test 2: 
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
AttributeModel attributeModel = new AttributeModel();
attributeModel.setName("?T)!~p>uNSo#vB:");
attributeModelComparator.compare(attributeModel, attributeModel);
Test 3: 
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
AttributeModel attributeModel = new AttributeModel();
attributeModel.setName("?T)!~p>uNSo#vB:");
ArrayAttributeModel arrayAttributeModel = new ArrayAttributeModel();
arrayAttributeModel.setName("'g}^,@");
attributeModelComparator.compare((AttributeModel) arrayAttributeModel, attributeModel);
Test 4: 
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
AttributeModel attributeModel = new AttributeModel();
attributeModel.setName("HeV");
ArrayAttributeModel arrayAttributeModel = new ArrayAttributeModel();
arrayAttributeModel.setName("Could not read configuration file [");
attributeModelComparator.compare((AttributeModel) arrayAttributeModel, attributeModel);
Test 5: 
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
AttributeModel attributeModel = new AttributeModel();
attributeModel.setName("e$");
ArrayAttributeModel arrayAttributeModel = new ArrayAttributeModel();
arrayAttributeModel.setName("");
attributeModelComparator.compare((AttributeModel) arrayAttributeModel, attributeModel);
Test 6: 
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
AttributeModel attributeModel = new AttributeModel();
attributeModel.setName("e$");
ArrayAttributeModel arrayAttributeModel = new ArrayAttributeModel();
arrayAttributeModel.setName("");
attributeModelComparator.compare(attributeModel, (AttributeModel) arrayAttributeModel);
Test 7: 
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
AttributeModel attributeModel = new AttributeModel();
attributeModel.setName("e$");
ArrayAttributeModel arrayAttributeModel = new ArrayAttributeModel();
arrayAttributeModel.setName("o");
attributeModelComparator.compare((AttributeModel) arrayAttributeModel, attributeModel);
Test 8: 
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
AttributeModel attributeModel = new AttributeModel();
attributeModel.setName("&7");
ArrayAttributeModel arrayAttributeModel = new ArrayAttributeModel();
arrayAttributeModel.setName("");
attributeModelComparator.compare(attributeModel, (AttributeModel) arrayAttributeModel);
Test 9: 
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
attributeModelComparator.compare((AttributeModel) null, (AttributeModel) null);

Test 10: 
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
attributeModelComparator.compare((AttributeModel) null, (AttributeModel) null);

Test 11: 
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
AttributeModel attributeModel = new AttributeModel();
attributeModel.setName("unique_name");
attributeModelComparator.compare(attributeModel, attributeModel);

Test 12: 
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
AttributeModel attributeModel = new AttributeModel();
attributeModel.setName("name");
ArrayAttributeModel arrayAttributeModel = new ArrayAttributeModel();
((AttributeModel)null).setName("address");
attributeModelComparator.compare((AttributeModel) arrayAttributeModel, attributeModel);

Test 13: 
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
AttributeModel attributeModel = new AttributeModel();
attributeModel.setName("HeV");
ArrayAttributeModel arrayAttributeModel = new ArrayAttributeModel();
((AttributeModel)null).setName("Could not read configuration file [/Users/testuser/Downloads/config.json]");
attributeModelComparator.compare((AttributeModel) arrayAttributeModel, attributeModel);

Test 14: 
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
AttributeModel attributeModel = new AttributeModel();
attributeModel.setName("email");
ArrayAttributeModel arrayAttributeModel = new ArrayAttributeModel();
((AttributeModel)null).setName("names");
attributeModelComparator.compare((AttributeModel) arrayAttributeModel, attributeModel);

Test 15: 
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
attributeModelComparator.compare((AttributeModel) null, (AttributeModel) null);

Test 16: 
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
AttributeModel attributeModel = new AttributeModel();
attributeModel.setName("example_string");
ArrayAttributeModel arrayAttributeModel = new ArrayAttributeModel();
((AttributeModel)null).setName("example_array");
attributeModelComparator.compare((AttributeModel) arrayAttributeModel, attributeModel);

Test 17: 
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
AttributeModel attributeModel = new AttributeModel();
attributeModel.setName("&7");
ArrayAttributeModel arrayAttributeModel = new ArrayAttributeModel();
((AttributeModel)null).setName("");
attributeModelComparator.compare(attributeModel, (AttributeModel) arrayAttributeModel);


* Minimizing test suite
* test suite isTestSuite: 9
Test 0: 
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
attributeModelComparator.compare((AttributeModel) null, (AttributeModel) null);

Test 1: 
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
ArrayAttributeModel arrayAttributeModel = new ArrayAttributeModel();
attributeModelComparator.compare((AttributeModel) arrayAttributeModel, (AttributeModel) null);
Test 2: 
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
AttributeModel attributeModel = new AttributeModel();
attributeModel.setName("unique_name");
attributeModelComparator.compare(attributeModel, attributeModel);
Test 3: 
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
AttributeModel attributeModel = new AttributeModel();
attributeModel.setName("?T)!~p>uNSo#vB:");
ArrayAttributeModel arrayAttributeModel = new ArrayAttributeModel();
arrayAttributeModel.setName("'g}^,@");
attributeModelComparator.compare((AttributeModel) arrayAttributeModel, attributeModel);
Test 4: 
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
AttributeModel attributeModel = new AttributeModel();
attributeModel.setName("HeV");
ArrayAttributeModel arrayAttributeModel = new ArrayAttributeModel();
arrayAttributeModel.setName("Could not read configuration file [");
attributeModelComparator.compare((AttributeModel) arrayAttributeModel, attributeModel);
Test 5: 
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
AttributeModel attributeModel = new AttributeModel();
attributeModel.setName("e$");
ArrayAttributeModel arrayAttributeModel = new ArrayAttributeModel();
arrayAttributeModel.setName("");
attributeModelComparator.compare((AttributeModel) arrayAttributeModel, attributeModel);
Test 6: 
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
AttributeModel attributeModel = new AttributeModel();
attributeModel.setName("&7");
ArrayAttributeModel arrayAttributeModel = new ArrayAttributeModel();
arrayAttributeModel.setName("");
attributeModelComparator.compare(attributeModel, (AttributeModel) arrayAttributeModel);
Test 7: 
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
AttributeModel attributeModel = new AttributeModel();
attributeModel.setName("e$");
ArrayAttributeModel arrayAttributeModel = new ArrayAttributeModel();
arrayAttributeModel.setName("o");
attributeModelComparator.compare((AttributeModel) arrayAttributeModel, attributeModel);
Test 8: 
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
AttributeModel attributeModel = new AttributeModel();
attributeModel.setName("e$");
ArrayAttributeModel arrayAttributeModel = new ArrayAttributeModel();
arrayAttributeModel.setName("");
attributeModelComparator.compare(attributeModel, (AttributeModel) arrayAttributeModel);

* Going to analyze the coverage criteria
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 100%
* Total number of goals: 17
* Number of covered goals: 17
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 100%
* Total number of goals: 12
* Number of covered goals: 12
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 100%
* Total number of goals: 3
* Number of covered goals: 3
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 2
* Number of covered goals: 2
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 100%
* Total number of goals: 17
* Number of covered goals: 17
* Generated 9 tests with total length 45
* Resulting test suite's coverage: 100% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 81%
* Compiling and checking tests
Going to execute: removeTestsThatDoNotCompile
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
int compare = attributeModelComparator.compare((AttributeModel) null, (AttributeModel) null);
assertEquals((-1), compare);


** It was a parseable test case! 
refined test name is: testComparisonOfNullAttributeModels
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
ArrayAttributeModel arg0 = new ArrayAttributeModel();
int compare = attributeModelComparator.compare((AttributeModel) arg0, (AttributeModel) null);
assertEquals((-1), compare);


** It was a parseable test case! 
refined test name is: testCompareAttributeModelsWithDifferentValues
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
AttributeModel arg1 = new AttributeModel();
arg1.setName("unique_name");
int compare = attributeModelComparator.compare(arg1, arg1);
assertEquals(0, compare);


** It was a parseable test case! 
refined test name is: testCompareEqualAttributeModels
* Compiling Tests
refined test name is: testCompareIdenticalAttributeModels
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
AttributeModel arg1 = new AttributeModel();
arg1.setName("?T)!~p>uNSo#vB:");
ArrayAttributeModel arg0 = new ArrayAttributeModel();
arg0.setName("'g}^,@");
int compare = attributeModelComparator.compare((AttributeModel) arg0, arg1);
assertEquals((-24), compare);


** It was a parseable test case! 
refined test name is: testComparisonOfTwoDifferentAttributeModels
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
AttributeModel arg1 = new AttributeModel();
arg1.setName("HeV");
ArrayAttributeModel arg0 = new ArrayAttributeModel();
arg0.setName("Could not read configuration file [");
int compare = attributeModelComparator.compare((AttributeModel) arg0, arg1);
assertEquals((-5), compare);


** It was a parseable test case! 
refined test name is: testCompareWithDifferentNames
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
AttributeModel arg1 = new AttributeModel();
arg1.setName("e$");
ArrayAttributeModel arg0 = new ArrayAttributeModel();
arg0.setName("");
int compare = attributeModelComparator.compare((AttributeModel) arg0, arg1);
assertEquals(1, compare);


** It was a parseable test case! 
refined test name is: testCompareArrayAttributeModelWithDollarSignName
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
AttributeModel arg0 = new AttributeModel();
arg0.setName("&7");
ArrayAttributeModel arg1 = new ArrayAttributeModel();
arg1.setName("");
int compare = attributeModelComparator.compare(arg0, (AttributeModel) arg1);
assertEquals(2, compare);


** It was a parseable test case! 
refined test name is: testCompareAttributeModelsWithDifferentTypes
* Compiling Tests
refined test name is: testCompareDifferentTypes
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
AttributeModel arg1 = new AttributeModel();
arg1.setName("e$");
ArrayAttributeModel arg0 = new ArrayAttributeModel();
arg0.setName("o");
int compare = attributeModelComparator.compare((AttributeModel) arg0, arg1);
assertEquals(10, compare);


** It was a parseable test case! 
refined test name is: testCompareArrayAttributeWithString
* Compiling Tests
refined test name is: testCompareArrayAttributeWithString
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
AttributeModel arg0 = new AttributeModel();
arg0.setName("e$");
ArrayAttributeModel arg1 = new ArrayAttributeModel();
arg1.setName("");
int compare = attributeModelComparator.compare(arg0, (AttributeModel) arg1);
assertEquals((-1), compare);


** It was a parseable test case! 
refined test name is: testCompareDifferentNames
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 19:07:03.817 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar3074264239328746901.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 19:07:03.837 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3074264239328746901.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 19:07:03.877 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar3074264239328746901.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 19:07:03.878 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3074264239328746901.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 19:07:03.924 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar3074264239328746901.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 19:07:03.925 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3074264239328746901.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 19:07:03.968 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar3074264239328746901.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 19:07:03.969 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3074264239328746901.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 19:07:04.020 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar3074264239328746901.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 19:07:04.022 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3074264239328746901.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 19:07:04.074 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar3074264239328746901.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 19:07:04.075 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3074264239328746901.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 19:07:04.132 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar3074264239328746901.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 19:07:04.133 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3074264239328746901.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 19:07:04.190 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar3074264239328746901.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 19:07:04.191 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3074264239328746901.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 19:07:04.244 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar3074264239328746901.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 19:07:04.245 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3074264239328746901.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 2 called: 0 to improve: false
** Write a test suite: 6 called: 1 to improve: false
** Write a test suite: 7 called: 2 to improve: false
[MASTER] 19:07:04.354 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar3074264239328746901.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 19:07:04.355 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3074264239328746901.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 1 called: 0 to improve: false
** Write a test suite: 2 called: 1 to improve: false
** Write a test suite: 6 called: 2 to improve: false
[MASTER] 19:07:04.439 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar3074264239328746901.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 19:07:04.440 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3074264239328746901.jar
[MASTER] 19:07:04.558 [logback-1] WARN  TimeController - Already entered in phase: INLINING. This will mess up the timing calculations.
* test suite isTestSuite: 9
Test 0: 
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
attributeModelComparator.compare((AttributeModel) null, (AttributeModel) null);

Test 1: 
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
ArrayAttributeModel arrayAttributeModel = new ArrayAttributeModel();
attributeModelComparator.compare((AttributeModel) arrayAttributeModel, (AttributeModel) null);
Test 2: 
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
AttributeModel attributeModel = new AttributeModel();
attributeModel.setName("?T)!~p>uNSo#vB:");
attributeModelComparator.compare(attributeModel, attributeModel);
Test 3: 
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
AttributeModel attributeModel = new AttributeModel();
attributeModel.setName("?T)!~p>uNSo#vB:");
ArrayAttributeModel arrayAttributeModel = new ArrayAttributeModel();
arrayAttributeModel.setName("'g}^,@");
attributeModelComparator.compare((AttributeModel) arrayAttributeModel, attributeModel);
Test 4: 
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
AttributeModel attributeModel = new AttributeModel();
attributeModel.setName("HeV");
ArrayAttributeModel arrayAttributeModel = new ArrayAttributeModel();
arrayAttributeModel.setName("Could not read configuration file [");
attributeModelComparator.compare((AttributeModel) arrayAttributeModel, attributeModel);
Test 5: 
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
AttributeModel attributeModel = new AttributeModel();
attributeModel.setName("e$");
ArrayAttributeModel arrayAttributeModel = new ArrayAttributeModel();
arrayAttributeModel.setName("");
attributeModelComparator.compare((AttributeModel) arrayAttributeModel, attributeModel);
Test 6: 
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
AttributeModel attributeModel = new AttributeModel();
attributeModel.setName("e$");
ArrayAttributeModel arrayAttributeModel = new ArrayAttributeModel();
arrayAttributeModel.setName("");
attributeModelComparator.compare(attributeModel, (AttributeModel) arrayAttributeModel);
Test 7: 
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
AttributeModel attributeModel = new AttributeModel();
attributeModel.setName("e$");
ArrayAttributeModel arrayAttributeModel = new ArrayAttributeModel();
arrayAttributeModel.setName("o");
attributeModelComparator.compare((AttributeModel) arrayAttributeModel, attributeModel);
Test 8: 
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
AttributeModel attributeModel = new AttributeModel();
attributeModel.setName("&7");
ArrayAttributeModel arrayAttributeModel = new ArrayAttributeModel();
arrayAttributeModel.setName("");
attributeModelComparator.compare(attributeModel, (AttributeModel) arrayAttributeModel);

* Minimizing test suite
* test suite isTestSuite: 9
Test 0: 
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
attributeModelComparator.compare((AttributeModel) null, (AttributeModel) null);

Test 1: 
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
ArrayAttributeModel arrayAttributeModel = new ArrayAttributeModel();
attributeModelComparator.compare((AttributeModel) arrayAttributeModel, (AttributeModel) null);
Test 2: 
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
AttributeModel attributeModel = new AttributeModel();
attributeModel.setName("?T)!~p>uNSo#vB:");
attributeModelComparator.compare(attributeModel, attributeModel);
Test 3: 
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
AttributeModel attributeModel = new AttributeModel();
attributeModel.setName("?T)!~p>uNSo#vB:");
ArrayAttributeModel arrayAttributeModel = new ArrayAttributeModel();
arrayAttributeModel.setName("'g}^,@");
attributeModelComparator.compare((AttributeModel) arrayAttributeModel, attributeModel);
Test 4: 
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
AttributeModel attributeModel = new AttributeModel();
attributeModel.setName("HeV");
ArrayAttributeModel arrayAttributeModel = new ArrayAttributeModel();
arrayAttributeModel.setName("Could not read configuration file [");
attributeModelComparator.compare((AttributeModel) arrayAttributeModel, attributeModel);
Test 5: 
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
AttributeModel attributeModel = new AttributeModel();
attributeModel.setName("e$");
ArrayAttributeModel arrayAttributeModel = new ArrayAttributeModel();
arrayAttributeModel.setName("");
attributeModelComparator.compare((AttributeModel) arrayAttributeModel, attributeModel);
Test 6: 
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
AttributeModel attributeModel = new AttributeModel();
attributeModel.setName("&7");
ArrayAttributeModel arrayAttributeModel = new ArrayAttributeModel();
arrayAttributeModel.setName("");
attributeModelComparator.compare(attributeModel, (AttributeModel) arrayAttributeModel);
Test 7: 
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
AttributeModel attributeModel = new AttributeModel();
attributeModel.setName("e$");
ArrayAttributeModel arrayAttributeModel = new ArrayAttributeModel();
arrayAttributeModel.setName("o");
attributeModelComparator.compare((AttributeModel) arrayAttributeModel, attributeModel);
Test 8: 
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
AttributeModel attributeModel = new AttributeModel();
attributeModel.setName("e$");
ArrayAttributeModel arrayAttributeModel = new ArrayAttributeModel();
arrayAttributeModel.setName("");
attributeModelComparator.compare(attributeModel, (AttributeModel) arrayAttributeModel);

* Going to analyze the coverage criteria
* Coverage analysis for criterion BRANCH
[MASTER] 19:07:06.498 [logback-1] WARN  TimeController - Already entered in phase: MINIMIZATION. This will mess up the timing calculations.
* Coverage of criterion BRANCH: 100%
* Total number of goals: 17
* Number of covered goals: 17
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 100%
* Total number of goals: 12
* Number of covered goals: 12
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 100%
* Total number of goals: 3
* Number of covered goals: 3
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 2
* Number of covered goals: 2
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 100%
* Total number of goals: 17
* Number of covered goals: 17
* Generated 9 tests with total length 45
* Resulting test suite's coverage: 100% (average coverage for all fitness functions)
[MASTER] 19:07:06.631 [logback-1] WARN  TimeController - Already entered in phase: COVERAGE_ANALYSIS. This will mess up the timing calculations.
* Generating assertions
* Resulting test suite's mutation score: 81%
* Compiling and checking tests
[MASTER] 19:07:07.303 [logback-1] WARN  TimeController - Already entered in phase: ASSERTION_GENERATION. This will mess up the timing calculations.
Going to execute: removeTestsThatDoNotCompile
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 19:07:08.473 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar3074264239328746901.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 19:07:08.485 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3074264239328746901.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 19:07:08.555 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar3074264239328746901.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 19:07:08.556 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3074264239328746901.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 19:07:08.603 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar3074264239328746901.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 19:07:08.604 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3074264239328746901.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 19:07:08.668 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar3074264239328746901.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 19:07:08.670 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3074264239328746901.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 19:07:08.725 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar3074264239328746901.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 19:07:08.727 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3074264239328746901.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 19:07:08.860 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar3074264239328746901.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 19:07:08.861 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3074264239328746901.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 19:07:08.955 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar3074264239328746901.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 19:07:08.956 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3074264239328746901.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
Going to execute: handleTestsThatAreUnstable
[MASTER] 19:07:09.021 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar3074264239328746901.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 19:07:09.021 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3074264239328746901.jar
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 19:07:09.080 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar3074264239328746901.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 19:07:09.083 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3074264239328746901.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
** Write a test suite: 1 called: 1 to improve: false
** Write a test suite: 2 called: 2 to improve: false
** Write a test suite: 3 called: 3 to improve: false
** Write a test suite: 4 called: 4 to improve: false
** Write a test suite: 5 called: 5 to improve: false
** Write a test suite: 6 called: 6 to improve: false
** Write a test suite: 7 called: 7 to improve: false
** Write a test suite: 8 called: 8 to improve: false
[MASTER] 19:07:09.262 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar3074264239328746901.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 19:07:09.263 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3074264239328746901.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
** Write a test suite: 1 called: 1 to improve: false
** Write a test suite: 2 called: 2 to improve: false
** Write a test suite: 3 called: 3 to improve: false
** Write a test suite: 4 called: 4 to improve: false
** Write a test suite: 5 called: 5 to improve: false
** Write a test suite: 6 called: 6 to improve: false
** Write a test suite: 7 called: 7 to improve: false
** Write a test suite: 8 called: 8 to improve: false
[MASTER] 19:07:09.396 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar3074264239328746901.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 19:07:09.397 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3074264239328746901.jar
* Writing tests to file
[MASTER] 19:07:09.399 [logback-1] WARN  TimeController - Already entered in phase: JUNIT_CHECK. This will mess up the timing calculations.
* Writing JUnit test case 'AttributeModelComparator_ESTest' to evosuite-tests
** Write a test suite: 1 called: 0 to improve: false
** Write a test suite: 2 called: 1 to improve: false
** Write a test suite: 6 called: 2 to improve: false
* Writing JUnit test case 'AttributeModelComparator_Original_ESTest' to evosuite-tests
** Write a test suite: 0 called: 0 to improve: false
** Write a test suite: 1 called: 1 to improve: false
** Write a test suite: 2 called: 2 to improve: false
** Write a test suite: 3 called: 3 to improve: false
** Write a test suite: 4 called: 4 to improve: false
** Write a test suite: 5 called: 5 to improve: false
** Write a test suite: 6 called: 6 to improve: false
** Write a test suite: 7 called: 7 to improve: false
** Write a test suite: 8 called: 8 to improve: false
* Done!

* Computation finished
