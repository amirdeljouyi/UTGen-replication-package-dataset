* EvoSuite 1.0.0-SNAPSHOT
* Going to generate test cases for class: de.paragon.explorer.model.AttributeModelComparator
* Starting Client-0
* Properties loaded from /home/roham/Results-Utestgen/dataset/SF110-new-res/63_objectexplorer/evosuite-files/evosuite.properties
* Connecting to master process on port 13297
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 15:32:01.881 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 15:32:01.897 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.ToDoubleFunction
[MASTER] 15:32:01.900 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.ToIntFunction
[MASTER] 15:32:01.901 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.ToLongFunction
[MASTER] 15:32:02.514 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 15:32:02.519 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 15:32:02.520 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 15:32:04.440 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 15:32:04.454 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
[MASTER] 15:32:05.358 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.ZoneId
[MASTER] 15:32:05.429 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.Temporal
[MASTER] 15:32:05.430 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAccessor
[MASTER] 15:32:05.430 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalField
[MASTER] 15:32:05.430 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalUnit
[MASTER] 15:32:05.431 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAmount
[MASTER] 15:32:05.431 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.Clock
[MASTER] 15:32:05.432 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalQuery
[MASTER] 15:32:05.432 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAdjuster
[MASTER] 15:32:05.450 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.Chronology
[MASTER] 15:32:05.457 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.Era
* Finished analyzing classpath
* Generating tests for class de.paragon.explorer.model.AttributeModelComparator
* Test criteria:
  - Branch Coverage
  - Line Coverage
  - Method-Output Coverage
  - Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 51
* Using seed 1710257520217
* Starting evolution
[Progress:>                             0%] [Cov:>                                  0%]* Initial Number of Goals in DynaMOSA = 10 / 51
[MASTER] 15:32:06.637 [logback-1] WARN  TestCluster - Failed to check cache for java.lang.Comparable<T> : Type points to itself
[MASTER] 15:32:07.721 [logback-1] WARN  TestCluster - Failed to check cache for java.util.function.Function<T, R> : Type points to itself
[Progress:>                             0%] [Cov:================>                  48%][Progress:>                             1%] [Cov:================>                  48%][Progress:>                             1%] [Cov:================>                  48%][Progress:>                             1%] [Cov:================>                  48%][Progress:>                             1%] [Cov:================>                  48%][Progress:>                             1%] [Cov:======================>            63%][Progress:>                             1%] [Cov:===============================>   90%][Progress:>                             2%] [Cov:===============================>   90%][Progress:>                             2%] [Cov:===============================>   90%][Progress:>                             2%] [Cov:================================>  92%][Progress:>                             2%] [Cov:=================================> 95%][Progress:>                             2%] [Cov:=================================> 95%][Progress:>                             3%] [Cov:=================================> 95%][Progress:>                             3%] [Cov:=================================> 95%][Progress:>                             3%] [Cov:=================================> 95%][Progress:>                             3%] [Cov:=================================> 95%][Progress:>                             3%] [Cov:=================================> 95%][Progress:>                             3%] [Cov:=================================> 97%][Progress:>                             3%] [Cov:=================================> 97%][Progress:>                             3%] [Cov:===================================100%]
* Search finished after 7s and 19 generations, 13549 statements, best individual has fitness: 0.0
* Generated before the refinement 9 tests with total length 46
statement is: de.paragon.explorer.model.AttributeModelComparator()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.paragon.explorer.model.AttributeModelComparator
statement code is: AttributeModelComparator attributeModelComparator = new AttributeModelComparator()
statement is: de.paragon.explorer.model.ArrayAttributeModel()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.paragon.explorer.model.ArrayAttributeModel
statement code is: ArrayAttributeModel arrayAttributeModel = new ArrayAttributeModel()
statement is: compare(Lde/paragon/explorer/model/AttributeModel;Lde/paragon/explorer/model/AttributeModel;)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int compare = attributeModelComparator.compare((AttributeModel) null, (AttributeModel) arg1)
test data is: AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
ArrayAttributeModel arrayAttributeModel = new ArrayAttributeModel();
attributeModelComparator.compare((AttributeModel) null, (AttributeModel) arrayAttributeModel);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Improved test data
        AttributeModel attributeModel1 = new AttributeModel();
        attributeModel1.setName("name");
        attributeModel1.setType(String.class);
        ArrayAttributeModel arrayAttributeModel = new ArrayAttributeModel();
        arrayAttributeModel.setName("array");
        arrayAttributeModel.setType(String[].class);
        AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
        attributeModelComparator.compare(((AttributeModel) (null)), ((AttributeModel) (arrayAttributeModel)));
    }
}
statement is: // Improved test data
AttributeModel attributeModel1 = new AttributeModel(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: attributeModel1.setName("name"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: attributeModel1.setName("name") target is: attributeModel1 method is: setName(java.lang.String)
statement is: attributeModel1.setType(String.class), class spoon.support.reflect.code.CtInvocationImpl
invocation is: attributeModel1.setType(String.class) target is: attributeModel1 method is: setType(java.lang.Class)
statement is: ArrayAttributeModel arrayAttributeModel = new ArrayAttributeModel(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: arrayAttributeModel.setName("array"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: arrayAttributeModel.setName("array") target is: arrayAttributeModel method is: setName(java.lang.String)
statement is: arrayAttributeModel.setType(String[].class), class spoon.support.reflect.code.CtInvocationImpl
invocation is: arrayAttributeModel.setType(String[].class) target is: arrayAttributeModel method is: setType(java.lang.Class)
statement is: AttributeModelComparator attributeModelComparator = new AttributeModelComparator(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: attributeModelComparator.compare(((AttributeModel) (null)), ((AttributeModel) (arrayAttributeModel))), class spoon.support.reflect.code.CtInvocationImpl
invocation is: attributeModelComparator.compare(((AttributeModel) (null)), ((AttributeModel) (arrayAttributeModel))) target is: attributeModelComparator method is: compare(AttributeModel,AttributeModel)
source statement: de.paragon.explorer.model.AttributeModelComparator()V callee: VariableReference: Statement 0, type de.paragon.explorer.model.AttributeModelComparatorindex is: 1
Matched Method is: compare(Lde/paragon/explorer/model/AttributeModel;Lde/paragon/explorer/model/AttributeModel;)I
i 1 Parameters size() 1 Num of Method Parameters: 2
TestCase is: ArrayAttributeModel arrayAttributeModel = new ArrayAttributeModel();
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
ArrayAttributeModel arrayAttributeModel = null;
((AttributeModelComparator) arrayAttributeModel).compare((AttributeModel) arrayAttributeModel, (AttributeModel) arrayAttributeModel);

statement is: de.paragon.explorer.model.AttributeModelComparator()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.paragon.explorer.model.AttributeModelComparator
statement code is: AttributeModelComparator attributeModelComparator = new AttributeModelComparator()
statement is: de.paragon.explorer.model.AttributeModel()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.paragon.explorer.model.AttributeModel
statement code is: AttributeModel attributeModel = new AttributeModel()
statement is: compare(Lde/paragon/explorer/model/AttributeModel;Lde/paragon/explorer/model/AttributeModel;)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int compare = attributeModelComparator.compare(arg0, (AttributeModel) null)
test data is: AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
AttributeModel attributeModel = new AttributeModel();
attributeModelComparator.compare(attributeModel, (AttributeModel) null);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
        AttributeModel attributeModel1 = new AttributeModel();
        attributeModel1.setId(1234);
        attributeModel1.setName("John Doe");
        attributeModel1.setAge(30);
        attributeModel1.setGender("Male");
        // Comparing to a null object
        attributeModelComparator.compare(attributeModel1, ((AttributeModel) (null)));
    }
}
statement is: AttributeModelComparator attributeModelComparator = new AttributeModelComparator(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: AttributeModel attributeModel1 = new AttributeModel(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: attributeModel1.setId(1234), class spoon.support.reflect.code.CtInvocationImpl
invocation is: attributeModel1.setId(1234) target is: attributeModel1 method is: setId(int)
statement is: attributeModel1.setName("John Doe"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: attributeModel1.setName("John Doe") target is: attributeModel1 method is: setName(java.lang.String)
statement is: attributeModel1.setAge(30), class spoon.support.reflect.code.CtInvocationImpl
invocation is: attributeModel1.setAge(30) target is: attributeModel1 method is: setAge(int)
statement is: attributeModel1.setGender("Male"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: attributeModel1.setGender("Male") target is: attributeModel1 method is: setGender(java.lang.String)
statement is: // Comparing to a null object
attributeModelComparator.compare(attributeModel1, ((AttributeModel) (null))), class spoon.support.reflect.code.CtInvocationImpl
invocation is: // Comparing to a null object
attributeModelComparator.compare(attributeModel1, ((AttributeModel) (null))) target is: attributeModelComparator method is: compare(AttributeModel,AttributeModel)
source statement: de.paragon.explorer.model.AttributeModelComparator()V callee: VariableReference: Statement 0, type de.paragon.explorer.model.AttributeModelComparatorindex is: 0
Matched Method is: compare(Lde/paragon/explorer/model/AttributeModel;Lde/paragon/explorer/model/AttributeModel;)I
i 1 Parameters size() 1 Num of Method Parameters: 2
TestCase is: AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
AttributeModel attributeModel = new AttributeModel();
AttributeModel attributeModel = null;
attributeModelComparator.compare(attributeModel, attributeModel);

statement is: de.paragon.explorer.model.AttributeModelComparator()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.paragon.explorer.model.AttributeModelComparator
statement code is: AttributeModelComparator attributeModelComparator = new AttributeModelComparator()
statement is: de.paragon.explorer.model.AttributeModel()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.paragon.explorer.model.AttributeModel
statement code is: AttributeModel attributeModel = new AttributeModel()
statement is: setName(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: attributeModel.setName("")
statement is: compare(Lde/paragon/explorer/model/AttributeModel;Lde/paragon/explorer/model/AttributeModel;)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int compare = attributeModelComparator.compare(arg1, arg1)
test data is: AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
AttributeModel attributeModel = new AttributeModel();
attributeModel.setName("");
attributeModelComparator.compare(attributeModel, attributeModel);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
        AttributeModel attributeModel1 = new AttributeModel();
        attributeModel1.setName("Test1");
        attributeModelComparator.compare(attributeModel1, attributeModel1);
        AttributeModel attributeModel2 = new AttributeModel();
        attributeModel2.setName("Test2");
        attributeModelComparator.compare(attributeModel2, attributeModel2);
    }
}
statement is: AttributeModelComparator attributeModelComparator = new AttributeModelComparator(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: AttributeModel attributeModel1 = new AttributeModel(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: attributeModel1.setName("Test1"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: attributeModel1.setName("Test1") target is: attributeModel1 method is: setName(java.lang.String)
source statement: de.paragon.explorer.model.AttributeModel()V callee: VariableReference: Statement 1, type de.paragon.explorer.model.AttributeModelindex is: 1
Matched Method is: setName(Ljava/lang/String;)V
statement is: attributeModelComparator.compare(attributeModel1, attributeModel1), class spoon.support.reflect.code.CtInvocationImpl
invocation is: attributeModelComparator.compare(attributeModel1, attributeModel1) target is: attributeModelComparator method is: compare(AttributeModel,AttributeModel)
source statement: de.paragon.explorer.model.AttributeModelComparator()V callee: VariableReference: Statement 0, type de.paragon.explorer.model.AttributeModelComparatorindex is: 0
Matched Method is: compare(Lde/paragon/explorer/model/AttributeModel;Lde/paragon/explorer/model/AttributeModel;)I
statement is: AttributeModel attributeModel2 = new AttributeModel(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: attributeModel2.setName("Test2"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: attributeModel2.setName("Test2") target is: attributeModel2 method is: setName(java.lang.String)
source statement: de.paragon.explorer.model.AttributeModel()V callee: VariableReference: Statement 1, type de.paragon.explorer.model.AttributeModelindex is: 5
Matched Method is: setName(Ljava/lang/String;)V
statement is: attributeModelComparator.compare(attributeModel2, attributeModel2), class spoon.support.reflect.code.CtInvocationImpl
invocation is: attributeModelComparator.compare(attributeModel2, attributeModel2) target is: attributeModelComparator method is: compare(AttributeModel,AttributeModel)
source statement: de.paragon.explorer.model.AttributeModelComparator()V callee: VariableReference: Statement 0, type de.paragon.explorer.model.AttributeModelComparatorindex is: 0
Matched Method is: compare(Lde/paragon/explorer/model/AttributeModel;Lde/paragon/explorer/model/AttributeModel;)I
TestCase is: AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
AttributeModel attributeModel = new AttributeModel();
String string = "Test1";
attributeModel.setName(string);
attributeModelComparator.compare(attributeModel, attributeModel);
AttributeModel attributeModel = new AttributeModel();
String string = "Test2";
attributeModel.setName(string);
attributeModelComparator.compare(attributeModel, attributeModel);

statement is: de.paragon.explorer.model.AttributeModelComparator()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.paragon.explorer.model.AttributeModelComparator
statement code is: AttributeModelComparator attributeModelComparator = new AttributeModelComparator()
statement is: de.paragon.explorer.model.AttributeModel()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.paragon.explorer.model.AttributeModel
statement code is: AttributeModel attributeModel = new AttributeModel()
statement is: setName(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: attributeModel.setName("")
statement is: de.paragon.explorer.model.AttributeModel()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.paragon.explorer.model.AttributeModel
statement code is: AttributeModel attributeModel = new AttributeModel()
statement is: setName(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: attributeModel.setName("*")
statement is: compare(Lde/paragon/explorer/model/AttributeModel;Lde/paragon/explorer/model/AttributeModel;)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int compare = attributeModelComparator.compare(arg0, arg1)
test data is: AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
AttributeModel attributeModel = new AttributeModel();
attributeModel.setName("");
AttributeModel attributeModel = new AttributeModel();
attributeModel.setName("*");
attributeModelComparator.compare(attributeModel, attributeModel);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
        AttributeModel attributeModel1 = new AttributeModel();
        attributeModel1.setName("color");
        attributeModel1.setValue("red");
        AttributeModel attributeModel2 = new AttributeModel();
        attributeModel2.setName("size");
        attributeModel2.setValue("medium");
        attributeModelComparator.compare(attributeModel1, attributeModel2);
    }
}
statement is: AttributeModelComparator attributeModelComparator = new AttributeModelComparator(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: AttributeModel attributeModel1 = new AttributeModel(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: attributeModel1.setName("color"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: attributeModel1.setName("color") target is: attributeModel1 method is: setName(java.lang.String)
source statement: de.paragon.explorer.model.AttributeModel()V callee: VariableReference: Statement 1, type de.paragon.explorer.model.AttributeModelindex is: 1
Matched Method is: setName(Ljava/lang/String;)V
statement is: attributeModel1.setValue("red"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: attributeModel1.setValue("red") target is: attributeModel1 method is: setValue(java.lang.String)
statement is: AttributeModel attributeModel2 = new AttributeModel(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: attributeModel2.setName("size"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: attributeModel2.setName("size") target is: attributeModel2 method is: setName(java.lang.String)
source statement: de.paragon.explorer.model.AttributeModel()V callee: VariableReference: Statement 1, type de.paragon.explorer.model.AttributeModelindex is: 4
Matched Method is: setName(Ljava/lang/String;)V
statement is: attributeModel2.setValue("medium"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: attributeModel2.setValue("medium") target is: attributeModel2 method is: setValue(java.lang.String)
statement is: attributeModelComparator.compare(attributeModel1, attributeModel2), class spoon.support.reflect.code.CtInvocationImpl
invocation is: attributeModelComparator.compare(attributeModel1, attributeModel2) target is: attributeModelComparator method is: compare(AttributeModel,AttributeModel)
source statement: de.paragon.explorer.model.AttributeModelComparator()V callee: VariableReference: Statement 0, type de.paragon.explorer.model.AttributeModelComparatorindex is: 0
Matched Method is: compare(Lde/paragon/explorer/model/AttributeModel;Lde/paragon/explorer/model/AttributeModel;)I
TestCase is: AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
AttributeModel attributeModel = new AttributeModel();
String string = "color";
attributeModel.setName(string);
AttributeModel attributeModel = new AttributeModel();
String string = "size";
attributeModel.setName(string);
attributeModelComparator.compare(attributeModel, attributeModel);

statement is: de.paragon.explorer.model.AttributeModelComparator()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.paragon.explorer.model.AttributeModelComparator
statement code is: AttributeModelComparator attributeModelComparator = new AttributeModelComparator()
statement is: de.paragon.explorer.model.AttributeModel()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.paragon.explorer.model.AttributeModel
statement code is: AttributeModel attributeModel = new AttributeModel()
statement is: setName(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: attributeModel.setName("m")
statement is: de.paragon.explorer.model.AttributeModel()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.paragon.explorer.model.AttributeModel
statement code is: AttributeModel attributeModel = new AttributeModel()
statement is: setName(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: attributeModel.setName("DW *")
statement is: compare(Lde/paragon/explorer/model/AttributeModel;Lde/paragon/explorer/model/AttributeModel;)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int compare = attributeModelComparator.compare(arg0, arg1)
test data is: AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
AttributeModel attributeModel = new AttributeModel();
attributeModel.setName("m");
AttributeModel attributeModel = new AttributeModel();
attributeModel.setName("DW *");
attributeModelComparator.compare(attributeModel, attributeModel);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
        AttributeModel attributeModel = new AttributeModel();
        attributeModel.setName("m");
        AttributeModel attributeModel = new AttributeModel();
        attributeModel.setName("DW *");
        attributeModelComparator.compare(attributeModel, attributeModel);
    }
}
statement is: AttributeModelComparator attributeModelComparator = new AttributeModelComparator(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: AttributeModel attributeModel = new AttributeModel(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: attributeModel.setName("m"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: attributeModel.setName("m") target is: attributeModel method is: setName(java.lang.String)
source statement: de.paragon.explorer.model.AttributeModel()V callee: VariableReference: Statement 1, type de.paragon.explorer.model.AttributeModelindex is: 1
Matched Method is: setName(Ljava/lang/String;)V
statement is: AttributeModel attributeModel = new AttributeModel(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: attributeModel.setName("DW *"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: attributeModel.setName("DW *") target is: attributeModel method is: setName(java.lang.String)
source statement: de.paragon.explorer.model.AttributeModel()V callee: VariableReference: Statement 1, type de.paragon.explorer.model.AttributeModelindex is: 4
Matched Method is: setName(Ljava/lang/String;)V
statement is: attributeModelComparator.compare(attributeModel, attributeModel), class spoon.support.reflect.code.CtInvocationImpl
invocation is: attributeModelComparator.compare(attributeModel, attributeModel) target is: attributeModelComparator method is: compare(AttributeModel,AttributeModel)
source statement: de.paragon.explorer.model.AttributeModelComparator()V callee: VariableReference: Statement 0, type de.paragon.explorer.model.AttributeModelComparatorindex is: 0
Matched Method is: compare(Lde/paragon/explorer/model/AttributeModel;Lde/paragon/explorer/model/AttributeModel;)I
TestCase is: AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
AttributeModel attributeModel = new AttributeModel();
String string = "m";
attributeModel.setName(string);
AttributeModel attributeModel = new AttributeModel();
String string = "DW *";
attributeModel.setName(string);
attributeModelComparator.compare(attributeModel, attributeModel);

statement is: de.paragon.explorer.model.AttributeModelComparator()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.paragon.explorer.model.AttributeModelComparator
statement code is: AttributeModelComparator attributeModelComparator = new AttributeModelComparator()
statement is: de.paragon.explorer.model.AttributeModel()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.paragon.explorer.model.AttributeModel
statement code is: AttributeModel attributeModel = new AttributeModel()
statement is: setName(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: attributeModel.setName("")
statement is: de.paragon.explorer.model.AttributeModel()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.paragon.explorer.model.AttributeModel
statement code is: AttributeModel attributeModel = new AttributeModel()
statement is: setName(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: attributeModel.setName("X:S+")
statement is: compare(Lde/paragon/explorer/model/AttributeModel;Lde/paragon/explorer/model/AttributeModel;)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int compare = attributeModelComparator.compare(arg0, arg1)
test data is: AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
AttributeModel attributeModel = new AttributeModel();
attributeModel.setName("");
AttributeModel attributeModel = new AttributeModel();
attributeModel.setName("X:S+");
attributeModelComparator.compare(attributeModel, attributeModel);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Improved test data
        AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
        AttributeModel attributeModel1 = new AttributeModel();
        attributeModel1.setName("X:S+");
        attributeModel1.setDescription("This is a test model for the X feature.");
        attributeModel1.setValue(50);
        AttributeModel attributeModel2 = new AttributeModel();
        attributeModel2.setName("Y:S+");
        attributeModel2.setDescription("This is a test model for the Y feature.");
        attributeModel2.setValue(100);
        attributeModelComparator.compare(attributeModel1, attributeModel2);
    }
}
statement is: // Improved test data
AttributeModelComparator attributeModelComparator = new AttributeModelComparator(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: AttributeModel attributeModel1 = new AttributeModel(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: attributeModel1.setName("X:S+"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: attributeModel1.setName("X:S+") target is: attributeModel1 method is: setName(java.lang.String)
source statement: de.paragon.explorer.model.AttributeModel()V callee: VariableReference: Statement 1, type de.paragon.explorer.model.AttributeModelindex is: 1
Matched Method is: setName(Ljava/lang/String;)V
statement is: attributeModel1.setDescription("This is a test model for the X feature."), class spoon.support.reflect.code.CtInvocationImpl
invocation is: attributeModel1.setDescription("This is a test model for the X feature.") target is: attributeModel1 method is: setDescription(java.lang.String)
statement is: attributeModel1.setValue(50), class spoon.support.reflect.code.CtInvocationImpl
invocation is: attributeModel1.setValue(50) target is: attributeModel1 method is: setValue(int)
statement is: AttributeModel attributeModel2 = new AttributeModel(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: attributeModel2.setName("Y:S+"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: attributeModel2.setName("Y:S+") target is: attributeModel2 method is: setName(java.lang.String)
source statement: de.paragon.explorer.model.AttributeModel()V callee: VariableReference: Statement 1, type de.paragon.explorer.model.AttributeModelindex is: 4
Matched Method is: setName(Ljava/lang/String;)V
statement is: attributeModel2.setDescription("This is a test model for the Y feature."), class spoon.support.reflect.code.CtInvocationImpl
invocation is: attributeModel2.setDescription("This is a test model for the Y feature.") target is: attributeModel2 method is: setDescription(java.lang.String)
statement is: attributeModel2.setValue(100), class spoon.support.reflect.code.CtInvocationImpl
invocation is: attributeModel2.setValue(100) target is: attributeModel2 method is: setValue(int)
statement is: attributeModelComparator.compare(attributeModel1, attributeModel2), class spoon.support.reflect.code.CtInvocationImpl
invocation is: attributeModelComparator.compare(attributeModel1, attributeModel2) target is: attributeModelComparator method is: compare(AttributeModel,AttributeModel)
source statement: de.paragon.explorer.model.AttributeModelComparator()V callee: VariableReference: Statement 0, type de.paragon.explorer.model.AttributeModelComparatorindex is: 0
Matched Method is: compare(Lde/paragon/explorer/model/AttributeModel;Lde/paragon/explorer/model/AttributeModel;)I
TestCase is: AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
AttributeModel attributeModel = new AttributeModel();
String string = "X:S+";
attributeModel.setName(string);
AttributeModel attributeModel = new AttributeModel();
String string = "Y:S+";
attributeModel.setName(string);
attributeModelComparator.compare(attributeModel, attributeModel);

statement is: de.paragon.explorer.model.AttributeModelComparator()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.paragon.explorer.model.AttributeModelComparator
statement code is: AttributeModelComparator attributeModelComparator = new AttributeModelComparator()
statement is: de.paragon.explorer.model.AttributeModel()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.paragon.explorer.model.AttributeModel
statement code is: AttributeModel attributeModel = new AttributeModel()
statement is: setName(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: attributeModel.setName("")
statement is: de.paragon.explorer.model.AttributeModel()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.paragon.explorer.model.AttributeModel
statement code is: AttributeModel attributeModel = new AttributeModel()
statement is: setName(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: attributeModel.setName("*")
statement is: compare(Lde/paragon/explorer/model/AttributeModel;Lde/paragon/explorer/model/AttributeModel;)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int compare = attributeModelComparator.compare(arg0, arg1)
test data is: AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
AttributeModel attributeModel = new AttributeModel();
attributeModel.setName("");
AttributeModel attributeModel = new AttributeModel();
attributeModel.setName("*");
attributeModelComparator.compare(attributeModel, attributeModel);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
        // First set of attributes
        AttributeModel attributeModel1 = new AttributeModel();
        attributeModel1.setName("name");
        attributeModel1.setType(String.class);
        // Second set of attributes
        AttributeModel attributeModel2 = new AttributeModel();
        attributeModel2.setName("age");
        attributeModel2.setType(Integer.class);
        // Third set of attributes
        AttributeModel attributeModel3 = new AttributeModel();
        attributeModel3.setName("gender");
        attributeModel3.setType(String.class);
        // Fourth set of attributes
        AttributeModel attributeModel4 = new AttributeModel();
        attributeModel4.setName("country");
        attributeModel4.setType(String.class);
        // Compare the first two sets of attributes
        attributeModelComparator.compare(attributeModel1, attributeModel2);
        // Compare the third set of attributes with itself
        attributeModelComparator.compare(attributeModel3, attributeModel3);
        // Compare the fourth set of attributes with a different set of attributes that have the same name but different types
        AttributeModel attributeModel5 = new AttributeModel();
        attributeModel5.setName("country");
        attributeModel5.setType(Double.class);
        attributeModelComparator.compare(attributeModel4, attributeModel5);
    }
}
statement is: AttributeModelComparator attributeModelComparator = new AttributeModelComparator(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: // First set of attributes
AttributeModel attributeModel1 = new AttributeModel(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: attributeModel1.setName("name"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: attributeModel1.setName("name") target is: attributeModel1 method is: setName(java.lang.String)
source statement: de.paragon.explorer.model.AttributeModel()V callee: VariableReference: Statement 1, type de.paragon.explorer.model.AttributeModelindex is: 1
Matched Method is: setName(Ljava/lang/String;)V
statement is: attributeModel1.setType(String.class), class spoon.support.reflect.code.CtInvocationImpl
invocation is: attributeModel1.setType(String.class) target is: attributeModel1 method is: setType(java.lang.Class)
statement is: // Second set of attributes
AttributeModel attributeModel2 = new AttributeModel(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: attributeModel2.setName("age"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: attributeModel2.setName("age") target is: attributeModel2 method is: setName(java.lang.String)
source statement: de.paragon.explorer.model.AttributeModel()V callee: VariableReference: Statement 1, type de.paragon.explorer.model.AttributeModelindex is: 4
Matched Method is: setName(Ljava/lang/String;)V
statement is: attributeModel2.setType(Integer.class), class spoon.support.reflect.code.CtInvocationImpl
invocation is: attributeModel2.setType(Integer.class) target is: attributeModel2 method is: setType(java.lang.Class)
statement is: // Third set of attributes
AttributeModel attributeModel3 = new AttributeModel(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: attributeModel3.setName("gender"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: attributeModel3.setName("gender") target is: attributeModel3 method is: setName(java.lang.String)
source statement: de.paragon.explorer.model.AttributeModel()V callee: VariableReference: Statement 1, type de.paragon.explorer.model.AttributeModelindex is: 7
Matched Method is: setName(Ljava/lang/String;)V
statement is: attributeModel3.setType(String.class), class spoon.support.reflect.code.CtInvocationImpl
invocation is: attributeModel3.setType(String.class) target is: attributeModel3 method is: setType(java.lang.Class)
statement is: // Fourth set of attributes
AttributeModel attributeModel4 = new AttributeModel(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: attributeModel4.setName("country"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: attributeModel4.setName("country") target is: attributeModel4 method is: setName(java.lang.String)
source statement: de.paragon.explorer.model.AttributeModel()V callee: VariableReference: Statement 1, type de.paragon.explorer.model.AttributeModelindex is: 10
Matched Method is: setName(Ljava/lang/String;)V
statement is: attributeModel4.setType(String.class), class spoon.support.reflect.code.CtInvocationImpl
invocation is: attributeModel4.setType(String.class) target is: attributeModel4 method is: setType(java.lang.Class)
statement is: // Compare the first two sets of attributes
attributeModelComparator.compare(attributeModel1, attributeModel2), class spoon.support.reflect.code.CtInvocationImpl
invocation is: // Compare the first two sets of attributes
attributeModelComparator.compare(attributeModel1, attributeModel2) target is: attributeModelComparator method is: compare(AttributeModel,AttributeModel)
source statement: de.paragon.explorer.model.AttributeModelComparator()V callee: VariableReference: Statement 0, type de.paragon.explorer.model.AttributeModelComparatorindex is: 0
Matched Method is: compare(Lde/paragon/explorer/model/AttributeModel;Lde/paragon/explorer/model/AttributeModel;)I
statement is: // Compare the third set of attributes with itself
attributeModelComparator.compare(attributeModel3, attributeModel3), class spoon.support.reflect.code.CtInvocationImpl
invocation is: // Compare the third set of attributes with itself
attributeModelComparator.compare(attributeModel3, attributeModel3) target is: attributeModelComparator method is: compare(AttributeModel,AttributeModel)
source statement: de.paragon.explorer.model.AttributeModelComparator()V callee: VariableReference: Statement 0, type de.paragon.explorer.model.AttributeModelComparatorindex is: 0
Matched Method is: compare(Lde/paragon/explorer/model/AttributeModel;Lde/paragon/explorer/model/AttributeModel;)I
statement is: // Compare the fourth set of attributes with a different set of attributes that have the same name but different types
AttributeModel attributeModel5 = new AttributeModel(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: attributeModel5.setName("country"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: attributeModel5.setName("country") target is: attributeModel5 method is: setName(java.lang.String)
source statement: de.paragon.explorer.model.AttributeModel()V callee: VariableReference: Statement 1, type de.paragon.explorer.model.AttributeModelindex is: 15
Matched Method is: setName(Ljava/lang/String;)V
statement is: attributeModel5.setType(Double.class), class spoon.support.reflect.code.CtInvocationImpl
invocation is: attributeModel5.setType(Double.class) target is: attributeModel5 method is: setType(java.lang.Class)
statement is: attributeModelComparator.compare(attributeModel4, attributeModel5), class spoon.support.reflect.code.CtInvocationImpl
invocation is: attributeModelComparator.compare(attributeModel4, attributeModel5) target is: attributeModelComparator method is: compare(AttributeModel,AttributeModel)
source statement: de.paragon.explorer.model.AttributeModelComparator()V callee: VariableReference: Statement 0, type de.paragon.explorer.model.AttributeModelComparatorindex is: 0
Matched Method is: compare(Lde/paragon/explorer/model/AttributeModel;Lde/paragon/explorer/model/AttributeModel;)I
TestCase is: AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
AttributeModel attributeModel = new AttributeModel();
String string = "name";
attributeModel.setName(string);
AttributeModel attributeModel = new AttributeModel();
String string = "age";
attributeModel.setName(string);
AttributeModel attributeModel = new AttributeModel();
String string = "gender";
attributeModel.setName(string);
AttributeModel attributeModel = new AttributeModel();
String string = "country";
attributeModel.setName(string);
attributeModelComparator.compare(attributeModel, attributeModel);
attributeModelComparator.compare(attributeModel, attributeModel);
AttributeModel attributeModel = new AttributeModel();
String string = "country";
attributeModel.setName(string);
attributeModelComparator.compare(attributeModel, attributeModel);

statement is: de.paragon.explorer.model.AttributeModelComparator()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.paragon.explorer.model.AttributeModelComparator
statement code is: AttributeModelComparator attributeModelComparator = new AttributeModelComparator()
statement is: de.paragon.explorer.model.AttributeModel()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.paragon.explorer.model.AttributeModel
statement code is: AttributeModel attributeModel = new AttributeModel()
statement is: setName(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: attributeModel.setName("X!Z;A[}%r'p6")
statement is: de.paragon.explorer.model.ArrayAttributeModel()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.paragon.explorer.model.ArrayAttributeModel
statement code is: ArrayAttributeModel arrayAttributeModel = new ArrayAttributeModel()
statement is: setName(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: arrayAttributeModel.setName("X:S+")
statement is: compare(Lde/paragon/explorer/model/AttributeModel;Lde/paragon/explorer/model/AttributeModel;)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int compare = attributeModelComparator.compare((AttributeModel) arg0, arg1)
test data is: AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
AttributeModel attributeModel = new AttributeModel();
attributeModel.setName("X!Z;A[}%r'p6");
ArrayAttributeModel arrayAttributeModel = new ArrayAttributeModel();
arrayAttributeModel.setName("X:S+");
attributeModelComparator.compare((AttributeModel) arrayAttributeModel, attributeModel);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
        AttributeModel attributeModel = new AttributeModel();
        attributeModel.setName("X!Z;A[}%r'p6");
        ArrayAttributeModel arrayAttributeModel = new ArrayAttributeModel();
        arrayAttributeModel.setName("X:S+");
        attributeModelComparator.compare(((AttributeModel) (arrayAttributeModel)), attributeModel);
    }
}
statement is: AttributeModelComparator attributeModelComparator = new AttributeModelComparator(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: AttributeModel attributeModel = new AttributeModel(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: attributeModel.setName("X!Z;A[}%r'p6"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: attributeModel.setName("X!Z;A[}%r'p6") target is: attributeModel method is: setName(java.lang.String)
source statement: de.paragon.explorer.model.AttributeModel()V callee: VariableReference: Statement 1, type de.paragon.explorer.model.AttributeModelindex is: 1
Matched Method is: setName(Ljava/lang/String;)V
statement is: ArrayAttributeModel arrayAttributeModel = new ArrayAttributeModel(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: arrayAttributeModel.setName("X:S+"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: arrayAttributeModel.setName("X:S+") target is: arrayAttributeModel method is: setName(java.lang.String)
source statement: de.paragon.explorer.model.ArrayAttributeModel()V callee: VariableReference: Statement 3, type de.paragon.explorer.model.ArrayAttributeModelindex is: 4
Matched Method is: setName(Ljava/lang/String;)V
statement is: attributeModelComparator.compare(((AttributeModel) (arrayAttributeModel)), attributeModel), class spoon.support.reflect.code.CtInvocationImpl
invocation is: attributeModelComparator.compare(((AttributeModel) (arrayAttributeModel)), attributeModel) target is: attributeModelComparator method is: compare(AttributeModel,AttributeModel)
source statement: de.paragon.explorer.model.AttributeModelComparator()V callee: VariableReference: Statement 0, type de.paragon.explorer.model.AttributeModelComparatorindex is: 0
Matched Method is: compare(Lde/paragon/explorer/model/AttributeModel;Lde/paragon/explorer/model/AttributeModel;)I
TestCase is: AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
AttributeModel attributeModel = new AttributeModel();
String string = "X!Z;A[}%r'p6";
attributeModel.setName(string);
ArrayAttributeModel arrayAttributeModel = new ArrayAttributeModel();
String string = "X:S+";
((AttributeModel) _void).setName(string);
attributeModelComparator.compare((AttributeModel) arrayAttributeModel, attributeModel);

statement is: de.paragon.explorer.model.AttributeModelComparator()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.paragon.explorer.model.AttributeModelComparator
statement code is: AttributeModelComparator attributeModelComparator = new AttributeModelComparator()
statement is: de.paragon.explorer.model.AttributeModel()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.paragon.explorer.model.AttributeModel
statement code is: AttributeModel attributeModel = new AttributeModel()
statement is: setName(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: attributeModel.setName("")
statement is: de.paragon.explorer.model.AttributeModel()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.paragon.explorer.model.AttributeModel
statement code is: AttributeModel attributeModel = new AttributeModel()
statement is: setName(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: attributeModel.setName("X:S+")
statement is: compare(Lde/paragon/explorer/model/AttributeModel;Lde/paragon/explorer/model/AttributeModel;)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int compare = attributeModelComparator.compare(arg0, arg1)
test data is: AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
AttributeModel attributeModel = new AttributeModel();
attributeModel.setName("");
AttributeModel attributeModel = new AttributeModel();
attributeModel.setName("X:S+");
attributeModelComparator.compare(attributeModel, attributeModel);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
        AttributeModel attributeModel = new AttributeModel();
        attributeModel.setName("X");
        AttributeModel attributeModel = new AttributeModel();
        attributeModel.setName("S+");
        attributeModelComparator.compare(attributeModel, attributeModel);
    }
}
statement is: AttributeModelComparator attributeModelComparator = new AttributeModelComparator(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: AttributeModel attributeModel = new AttributeModel(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: attributeModel.setName("X"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: attributeModel.setName("X") target is: attributeModel method is: setName(java.lang.String)
source statement: de.paragon.explorer.model.AttributeModel()V callee: VariableReference: Statement 1, type de.paragon.explorer.model.AttributeModelindex is: 1
Matched Method is: setName(Ljava/lang/String;)V
statement is: AttributeModel attributeModel = new AttributeModel(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: attributeModel.setName("S+"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: attributeModel.setName("S+") target is: attributeModel method is: setName(java.lang.String)
source statement: de.paragon.explorer.model.AttributeModel()V callee: VariableReference: Statement 1, type de.paragon.explorer.model.AttributeModelindex is: 4
Matched Method is: setName(Ljava/lang/String;)V
statement is: attributeModelComparator.compare(attributeModel, attributeModel), class spoon.support.reflect.code.CtInvocationImpl
invocation is: attributeModelComparator.compare(attributeModel, attributeModel) target is: attributeModelComparator method is: compare(AttributeModel,AttributeModel)
source statement: de.paragon.explorer.model.AttributeModelComparator()V callee: VariableReference: Statement 0, type de.paragon.explorer.model.AttributeModelComparatorindex is: 0
Matched Method is: compare(Lde/paragon/explorer/model/AttributeModel;Lde/paragon/explorer/model/AttributeModel;)I
TestCase is: AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
AttributeModel attributeModel = new AttributeModel();
String string = "X";
attributeModel.setName(string);
AttributeModel attributeModel = new AttributeModel();
String string = "S+";
attributeModel.setName(string);
attributeModelComparator.compare(attributeModel, attributeModel);

* test suite isTestSuite: 18
Test 0: 
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
ArrayAttributeModel arrayAttributeModel = new ArrayAttributeModel();
attributeModelComparator.compare((AttributeModel) null, (AttributeModel) arrayAttributeModel);

Test 1: 
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
AttributeModel attributeModel = new AttributeModel();
attributeModelComparator.compare(attributeModel, (AttributeModel) null);
Test 2: 
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
AttributeModel attributeModel = new AttributeModel();
attributeModel.setName("");
attributeModelComparator.compare(attributeModel, attributeModel);
Test 3: 
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
AttributeModel attributeModel = new AttributeModel();
attributeModel.setName("");
AttributeModel attributeModel = new AttributeModel();
attributeModel.setName("*");
attributeModelComparator.compare(attributeModel, attributeModel);
Test 4: 
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
AttributeModel attributeModel = new AttributeModel();
attributeModel.setName("m");
AttributeModel attributeModel = new AttributeModel();
attributeModel.setName("DW *");
attributeModelComparator.compare(attributeModel, attributeModel);
Test 5: 
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
AttributeModel attributeModel = new AttributeModel();
attributeModel.setName("");
AttributeModel attributeModel = new AttributeModel();
attributeModel.setName("X:S+");
attributeModelComparator.compare(attributeModel, attributeModel);
Test 6: 
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
AttributeModel attributeModel = new AttributeModel();
attributeModel.setName("");
AttributeModel attributeModel = new AttributeModel();
attributeModel.setName("*");
attributeModelComparator.compare(attributeModel, attributeModel);
Test 7: 
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
AttributeModel attributeModel = new AttributeModel();
attributeModel.setName("X!Z;A[}%r'p6");
ArrayAttributeModel arrayAttributeModel = new ArrayAttributeModel();
arrayAttributeModel.setName("X:S+");
attributeModelComparator.compare((AttributeModel) arrayAttributeModel, attributeModel);
Test 8: 
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
AttributeModel attributeModel = new AttributeModel();
attributeModel.setName("");
AttributeModel attributeModel = new AttributeModel();
attributeModel.setName("X:S+");
attributeModelComparator.compare(attributeModel, attributeModel);
Test 9: 
ArrayAttributeModel arrayAttributeModel = new ArrayAttributeModel();
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
((AttributeModelComparator) arrayAttributeModel).compare((AttributeModel) arrayAttributeModel, (AttributeModel) null);

Test 10: 
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
AttributeModel attributeModel = new AttributeModel();
attributeModelComparator.compare(attributeModel, (AttributeModel) null);

Test 11: 
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
AttributeModel attributeModel = new AttributeModel();
attributeModel.setName("Test1");
attributeModelComparator.compare(attributeModel, attributeModel);
AttributeModel attributeModel = new AttributeModel();
attributeModel.setName("Test2");
attributeModelComparator.compare(attributeModel, attributeModel);

Test 12: 
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
AttributeModel attributeModel = new AttributeModel();
attributeModel.setName("color");
AttributeModel attributeModel = new AttributeModel();
attributeModel.setName("size");
attributeModelComparator.compare(attributeModel, attributeModel);

Test 13: 
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
AttributeModel attributeModel = new AttributeModel();
attributeModel.setName("m");
AttributeModel attributeModel = new AttributeModel();
attributeModel.setName("DW *");
attributeModelComparator.compare(attributeModel, attributeModel);

Test 14: 
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
AttributeModel attributeModel = new AttributeModel();
attributeModel.setName("X:S+");
AttributeModel attributeModel = new AttributeModel();
attributeModel.setName("Y:S+");
attributeModelComparator.compare(attributeModel, attributeModel);

Test 15: 
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
AttributeModel attributeModel = new AttributeModel();
attributeModel.setName("name");
AttributeModel attributeModel = new AttributeModel();
attributeModel.setName("age");
AttributeModel attributeModel = new AttributeModel();
attributeModel.setName("gender");
AttributeModel attributeModel = new AttributeModel();
attributeModel.setName("country");
attributeModelComparator.compare(attributeModel, attributeModel);
attributeModelComparator.compare(attributeModel, attributeModel);
AttributeModel attributeModel = new AttributeModel();
String string = "country";
attributeModel.setName(string);
attributeModelComparator.compare(attributeModel, attributeModel);

Test 16: 
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
AttributeModel attributeModel = new AttributeModel();
attributeModel.setName("X!Z;A[}%r'p6");
ArrayAttributeModel arrayAttributeModel = new ArrayAttributeModel();
((AttributeModel)null).setName("X:S+");
attributeModelComparator.compare((AttributeModel) arrayAttributeModel, attributeModel);

Test 17: 
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
AttributeModel attributeModel = new AttributeModel();
attributeModel.setName("X");
AttributeModel attributeModel = new AttributeModel();
attributeModel.setName("S+");
attributeModelComparator.compare(attributeModel, attributeModel);


* Generated after the refinement and before minimization 18 tests with total length 104
* test suite isTestSuite: 18
Test 0: 
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
ArrayAttributeModel arrayAttributeModel = new ArrayAttributeModel();
attributeModelComparator.compare((AttributeModel) null, (AttributeModel) arrayAttributeModel);

Test 1: 
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
AttributeModel attributeModel = new AttributeModel();
attributeModelComparator.compare(attributeModel, (AttributeModel) null);
Test 2: 
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
AttributeModel attributeModel = new AttributeModel();
attributeModel.setName("");
attributeModelComparator.compare(attributeModel, attributeModel);
Test 3: 
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
AttributeModel attributeModel = new AttributeModel();
attributeModel.setName("");
AttributeModel attributeModel = new AttributeModel();
attributeModel.setName("*");
attributeModelComparator.compare(attributeModel, attributeModel);
Test 4: 
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
AttributeModel attributeModel = new AttributeModel();
attributeModel.setName("m");
AttributeModel attributeModel = new AttributeModel();
attributeModel.setName("DW *");
attributeModelComparator.compare(attributeModel, attributeModel);
Test 5: 
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
AttributeModel attributeModel = new AttributeModel();
attributeModel.setName("");
AttributeModel attributeModel = new AttributeModel();
attributeModel.setName("X:S+");
attributeModelComparator.compare(attributeModel, attributeModel);
Test 6: 
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
AttributeModel attributeModel = new AttributeModel();
attributeModel.setName("");
AttributeModel attributeModel = new AttributeModel();
attributeModel.setName("*");
attributeModelComparator.compare(attributeModel, attributeModel);
Test 7: 
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
AttributeModel attributeModel = new AttributeModel();
attributeModel.setName("X!Z;A[}%r'p6");
ArrayAttributeModel arrayAttributeModel = new ArrayAttributeModel();
arrayAttributeModel.setName("X:S+");
attributeModelComparator.compare((AttributeModel) arrayAttributeModel, attributeModel);
Test 8: 
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
AttributeModel attributeModel = new AttributeModel();
attributeModel.setName("");
AttributeModel attributeModel = new AttributeModel();
attributeModel.setName("X:S+");
attributeModelComparator.compare(attributeModel, attributeModel);
Test 9: 
ArrayAttributeModel arrayAttributeModel = new ArrayAttributeModel();
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
((AttributeModelComparator) arrayAttributeModel).compare((AttributeModel) arrayAttributeModel, (AttributeModel) null);

Test 10: 
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
AttributeModel attributeModel = new AttributeModel();
attributeModelComparator.compare(attributeModel, (AttributeModel) null);

Test 11: 
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
AttributeModel attributeModel = new AttributeModel();
attributeModel.setName("Test1");
attributeModelComparator.compare(attributeModel, attributeModel);
AttributeModel attributeModel = new AttributeModel();
attributeModel.setName("Test2");
attributeModelComparator.compare(attributeModel, attributeModel);

Test 12: 
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
AttributeModel attributeModel = new AttributeModel();
attributeModel.setName("color");
AttributeModel attributeModel = new AttributeModel();
attributeModel.setName("size");
attributeModelComparator.compare(attributeModel, attributeModel);

Test 13: 
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
AttributeModel attributeModel = new AttributeModel();
attributeModel.setName("m");
AttributeModel attributeModel = new AttributeModel();
attributeModel.setName("DW *");
attributeModelComparator.compare(attributeModel, attributeModel);

Test 14: 
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
AttributeModel attributeModel = new AttributeModel();
attributeModel.setName("X:S+");
AttributeModel attributeModel = new AttributeModel();
attributeModel.setName("Y:S+");
attributeModelComparator.compare(attributeModel, attributeModel);

Test 15: 
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
AttributeModel attributeModel = new AttributeModel();
attributeModel.setName("name");
AttributeModel attributeModel = new AttributeModel();
attributeModel.setName("age");
AttributeModel attributeModel = new AttributeModel();
attributeModel.setName("gender");
AttributeModel attributeModel = new AttributeModel();
attributeModel.setName("country");
attributeModelComparator.compare(attributeModel, attributeModel);
attributeModelComparator.compare(attributeModel, attributeModel);
AttributeModel attributeModel = new AttributeModel();
String string = "country";
attributeModel.setName(string);
attributeModelComparator.compare(attributeModel, attributeModel);

Test 16: 
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
AttributeModel attributeModel = new AttributeModel();
attributeModel.setName("X!Z;A[}%r'p6");
ArrayAttributeModel arrayAttributeModel = new ArrayAttributeModel();
((AttributeModel)null).setName("X:S+");
attributeModelComparator.compare((AttributeModel) arrayAttributeModel, attributeModel);

Test 17: 
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
AttributeModel attributeModel = new AttributeModel();
attributeModel.setName("X");
AttributeModel attributeModel = new AttributeModel();
attributeModel.setName("S+");
attributeModelComparator.compare(attributeModel, attributeModel);


* Minimizing test suite
* test suite isTestSuite: 9
Test 0: 
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
ArrayAttributeModel arrayAttributeModel = new ArrayAttributeModel();
attributeModelComparator.compare((AttributeModel) null, (AttributeModel) arrayAttributeModel);

Test 1: 
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
AttributeModel attributeModel = new AttributeModel();
attributeModelComparator.compare(attributeModel, (AttributeModel) null);
Test 2: 
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
AttributeModel attributeModel = new AttributeModel();
attributeModel.setName("Test1");
attributeModelComparator.compare(attributeModel, attributeModel);
Test 3: 
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
AttributeModel attributeModel = new AttributeModel();
attributeModel.setName("");
AttributeModel attributeModel = new AttributeModel();
attributeModel.setName("*");
attributeModelComparator.compare(attributeModel, attributeModel);
Test 4: 
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
AttributeModel attributeModel = new AttributeModel();
attributeModel.setName("m");
AttributeModel attributeModel = new AttributeModel();
attributeModel.setName("DW *");
attributeModelComparator.compare(attributeModel, attributeModel);
Test 5: 
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
AttributeModel attributeModel = new AttributeModel();
attributeModel.setName("");
AttributeModel attributeModel = new AttributeModel();
attributeModel.setName("X:S+");
attributeModelComparator.compare(attributeModel, attributeModel);
Test 6: 
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
AttributeModel attributeModel = new AttributeModel();
attributeModel.setName("");
AttributeModel attributeModel = new AttributeModel();
attributeModel.setName("*");
attributeModelComparator.compare(attributeModel, attributeModel);
Test 7: 
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
AttributeModel attributeModel = new AttributeModel();
attributeModel.setName("X!Z;A[}%r'p6");
ArrayAttributeModel arrayAttributeModel = new ArrayAttributeModel();
arrayAttributeModel.setName("X:S+");
attributeModelComparator.compare((AttributeModel) arrayAttributeModel, attributeModel);
Test 8: 
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
AttributeModel attributeModel = new AttributeModel();
attributeModel.setName("");
AttributeModel attributeModel = new AttributeModel();
attributeModel.setName("X:S+");
attributeModelComparator.compare(attributeModel, attributeModel);

* Going to analyze the coverage criteria
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 100%
* Total number of goals: 17
* Number of covered goals: 17
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 100%
* Total number of goals: 12
* Number of covered goals: 12
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 100%
* Total number of goals: 3
* Number of covered goals: 3
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 2
* Number of covered goals: 2
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 100%
* Total number of goals: 17
* Number of covered goals: 17
* Generated 9 tests with total length 46
* Resulting test suite's coverage: 100% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 83%
* Compiling and checking tests
Going to execute: removeTestsThatDoNotCompile
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
ArrayAttributeModel arg1 = new ArrayAttributeModel();
int compare = attributeModelComparator.compare((AttributeModel) null, (AttributeModel) arg1);
assertEquals((-1), compare);


** It was a parseable test case! 
refined test name is: testCompareNullAndNonNullInstances
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
AttributeModel arg0 = new AttributeModel();
int compare = attributeModelComparator.compare(arg0, (AttributeModel) null);
assertEquals((-1), compare);


** It was a parseable test case! 
refined test name is: testCompareWithNullShouldReturnMinusOne
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
AttributeModel arg1 = new AttributeModel();
arg1.setName("Test1");
int compare = attributeModelComparator.compare(arg1, arg1);
assertEquals(0, compare);


** It was a parseable test case! 
refined test name is: testCompareAttributesEqualAttributesReturnsZero
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
AttributeModel arg0 = new AttributeModel();
arg0.setName("");
AttributeModel arg1 = new AttributeModel();
arg1.setName("*");
int compare = attributeModelComparator.compare(arg0, arg1);
assertEquals((-1), compare);


** It was a parseable test case! 
refined test name is: testCompareAttributeModelsWithDifferentNames
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
AttributeModel arg1 = new AttributeModel();
arg1.setName("m");
AttributeModel arg0 = new AttributeModel();
arg0.setName("DW *");
int compare = attributeModelComparator.compare(arg0, arg1);
assertEquals((-9), compare);


** It was a parseable test case! 
refined test name is: testCompareAttributeModelByName
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
AttributeModel arg0 = new AttributeModel();
arg0.setName("");
AttributeModel arg1 = new AttributeModel();
arg1.setName("X:S+");
int compare = attributeModelComparator.compare(arg0, arg1);
assertEquals(1, compare);


** It was a parseable test case! 
refined test name is: testCompareAttributeModelsWithEmptyNames
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
AttributeModel arg1 = new AttributeModel();
arg1.setName("");
AttributeModel arg0 = new AttributeModel();
arg0.setName("*");
int compare = attributeModelComparator.compare(arg0, arg1);
assertEquals(1, compare);


** It was a parseable test case! 
refined test name is: testCompareAttributeModelsWithDifferentNames
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
AttributeModel arg1 = new AttributeModel();
arg1.setName("X!Z;A[}%r'p6");
ArrayAttributeModel arg0 = new ArrayAttributeModel();
arg0.setName("X:S+");
int compare = attributeModelComparator.compare((AttributeModel) arg0, arg1);
assertEquals(25, compare);


** It was a parseable test case! 
refined test name is: testCompareAttributeModelsWithDifferentNames
* Compiling Tests
refined test name is: testCompareWithInvalidAttributeName
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
AttributeModel arg1 = new AttributeModel();
arg1.setName("");
AttributeModel arg0 = new AttributeModel();
arg0.setName("X:S+");
int compare = attributeModelComparator.compare(arg0, arg1);
assertEquals((-1), compare);


** It was a parseable test case! 
refined test name is: testCompareAttributeModelsWithDifferentNames
* Compiling Tests
refined test name is: testCompareAttributeModelsWithDifferentNames
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 15:40:20.694 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar3653598659548703072.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 15:40:20.717 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3653598659548703072.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 15:40:20.776 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar3653598659548703072.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
[MASTER] 15:40:20.777 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3653598659548703072.jar
* Compiling Tests
[MASTER] 15:40:20.862 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar3653598659548703072.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 15:40:20.863 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3653598659548703072.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 15:40:20.917 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar3653598659548703072.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 15:40:20.918 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3653598659548703072.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 15:40:20.966 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar3653598659548703072.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 15:40:20.967 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3653598659548703072.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 15:40:21.049 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar3653598659548703072.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 15:40:21.051 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3653598659548703072.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 15:40:21.103 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar3653598659548703072.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 15:40:21.105 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3653598659548703072.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 15:40:21.184 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar3653598659548703072.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 15:40:21.185 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3653598659548703072.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 15:40:21.236 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar3653598659548703072.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 15:40:21.237 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3653598659548703072.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 7 called: 0 to improve: false
** Write a test suite: 8 called: 1 to improve: false
[MASTER] 15:40:21.426 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar3653598659548703072.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 15:40:21.428 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3653598659548703072.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
** Write a test suite: 1 called: 1 to improve: false
[MASTER] 15:40:21.605 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar3653598659548703072.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 15:40:21.607 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3653598659548703072.jar
[MASTER] 15:40:21.706 [logback-1] WARN  TimeController - Already entered in phase: INLINING. This will mess up the timing calculations.
* test suite isTestSuite: 9
Test 0: 
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
ArrayAttributeModel arrayAttributeModel = new ArrayAttributeModel();
attributeModelComparator.compare((AttributeModel) null, (AttributeModel) arrayAttributeModel);

Test 1: 
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
AttributeModel attributeModel = new AttributeModel();
attributeModelComparator.compare(attributeModel, (AttributeModel) null);
Test 2: 
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
AttributeModel attributeModel = new AttributeModel();
attributeModel.setName("");
attributeModelComparator.compare(attributeModel, attributeModel);
Test 3: 
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
AttributeModel attributeModel = new AttributeModel();
attributeModel.setName("");
AttributeModel attributeModel = new AttributeModel();
attributeModel.setName("*");
attributeModelComparator.compare(attributeModel, attributeModel);
Test 4: 
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
AttributeModel attributeModel = new AttributeModel();
attributeModel.setName("m");
AttributeModel attributeModel = new AttributeModel();
attributeModel.setName("DW *");
attributeModelComparator.compare(attributeModel, attributeModel);
Test 5: 
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
AttributeModel attributeModel = new AttributeModel();
attributeModel.setName("");
AttributeModel attributeModel = new AttributeModel();
attributeModel.setName("X:S+");
attributeModelComparator.compare(attributeModel, attributeModel);
Test 6: 
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
AttributeModel attributeModel = new AttributeModel();
attributeModel.setName("");
AttributeModel attributeModel = new AttributeModel();
attributeModel.setName("*");
attributeModelComparator.compare(attributeModel, attributeModel);
Test 7: 
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
AttributeModel attributeModel = new AttributeModel();
attributeModel.setName("X!Z;A[}%r'p6");
ArrayAttributeModel arrayAttributeModel = new ArrayAttributeModel();
arrayAttributeModel.setName("X:S+");
attributeModelComparator.compare((AttributeModel) arrayAttributeModel, attributeModel);
Test 8: 
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
AttributeModel attributeModel = new AttributeModel();
attributeModel.setName("");
AttributeModel attributeModel = new AttributeModel();
attributeModel.setName("X:S+");
attributeModelComparator.compare(attributeModel, attributeModel);

* Minimizing test suite
* test suite isTestSuite: 9
Test 0: 
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
ArrayAttributeModel arrayAttributeModel = new ArrayAttributeModel();
attributeModelComparator.compare((AttributeModel) null, (AttributeModel) arrayAttributeModel);

Test 1: 
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
AttributeModel attributeModel = new AttributeModel();
attributeModelComparator.compare(attributeModel, (AttributeModel) null);
Test 2: 
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
AttributeModel attributeModel = new AttributeModel();
attributeModel.setName("");
attributeModelComparator.compare(attributeModel, attributeModel);
Test 3: 
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
AttributeModel attributeModel = new AttributeModel();
attributeModel.setName("");
AttributeModel attributeModel = new AttributeModel();
attributeModel.setName("*");
attributeModelComparator.compare(attributeModel, attributeModel);
Test 4: 
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
AttributeModel attributeModel = new AttributeModel();
attributeModel.setName("m");
AttributeModel attributeModel = new AttributeModel();
attributeModel.setName("DW *");
attributeModelComparator.compare(attributeModel, attributeModel);
Test 5: 
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
AttributeModel attributeModel = new AttributeModel();
attributeModel.setName("");
AttributeModel attributeModel = new AttributeModel();
attributeModel.setName("X:S+");
attributeModelComparator.compare(attributeModel, attributeModel);
Test 6: 
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
AttributeModel attributeModel = new AttributeModel();
attributeModel.setName("");
AttributeModel attributeModel = new AttributeModel();
attributeModel.setName("*");
attributeModelComparator.compare(attributeModel, attributeModel);
Test 7: 
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
AttributeModel attributeModel = new AttributeModel();
attributeModel.setName("X!Z;A[}%r'p6");
ArrayAttributeModel arrayAttributeModel = new ArrayAttributeModel();
arrayAttributeModel.setName("X:S+");
attributeModelComparator.compare((AttributeModel) arrayAttributeModel, attributeModel);
Test 8: 
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
AttributeModel attributeModel = new AttributeModel();
attributeModel.setName("");
AttributeModel attributeModel = new AttributeModel();
attributeModel.setName("X:S+");
attributeModelComparator.compare(attributeModel, attributeModel);

[MASTER] 15:40:23.679 [logback-1] WARN  TimeController - Already entered in phase: MINIMIZATION. This will mess up the timing calculations.
* Going to analyze the coverage criteria
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 100%
* Total number of goals: 17
* Number of covered goals: 17
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 100%
* Total number of goals: 12
* Number of covered goals: 12
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 100%
* Total number of goals: 3
* Number of covered goals: 3
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 2
* Number of covered goals: 2
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 100%
* Total number of goals: 17
* Number of covered goals: 17
* Generated 9 tests with total length 46
* Resulting test suite's coverage: 100% (average coverage for all fitness functions)
* Generating assertions
[MASTER] 15:40:23.740 [logback-1] WARN  TimeController - Already entered in phase: COVERAGE_ANALYSIS. This will mess up the timing calculations.
* Resulting test suite's mutation score: 83%
* Compiling and checking tests
[MASTER] 15:40:24.816 [logback-1] WARN  TimeController - Already entered in phase: ASSERTION_GENERATION. This will mess up the timing calculations.
Going to execute: removeTestsThatDoNotCompile
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 15:40:25.262 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar3653598659548703072.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 15:40:25.272 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3653598659548703072.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 15:40:25.331 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar3653598659548703072.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 15:40:25.333 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3653598659548703072.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 15:40:25.393 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar3653598659548703072.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 15:40:25.394 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3653598659548703072.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 15:40:25.448 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar3653598659548703072.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 15:40:25.450 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3653598659548703072.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 15:40:25.495 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar3653598659548703072.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 15:40:25.496 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3653598659548703072.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 15:40:25.541 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar3653598659548703072.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 15:40:25.553 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3653598659548703072.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 15:40:25.601 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar3653598659548703072.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 15:40:25.602 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3653598659548703072.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 15:40:25.651 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar3653598659548703072.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 15:40:25.653 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3653598659548703072.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 15:40:25.703 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar3653598659548703072.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 15:40:25.705 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3653598659548703072.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
** Write a test suite: 1 called: 1 to improve: false
** Write a test suite: 2 called: 2 to improve: false
** Write a test suite: 3 called: 3 to improve: false
** Write a test suite: 4 called: 4 to improve: false
** Write a test suite: 5 called: 5 to improve: false
** Write a test suite: 6 called: 6 to improve: false
** Write a test suite: 7 called: 7 to improve: false
** Write a test suite: 8 called: 8 to improve: false
[MASTER] 15:40:25.823 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar3653598659548703072.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 15:40:25.824 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3653598659548703072.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
** Write a test suite: 1 called: 1 to improve: false
** Write a test suite: 2 called: 2 to improve: false
** Write a test suite: 3 called: 3 to improve: false
** Write a test suite: 4 called: 4 to improve: false
** Write a test suite: 5 called: 5 to improve: false
** Write a test suite: 6 called: 6 to improve: false
** Write a test suite: 7 called: 7 to improve: false
** Write a test suite: 8 called: 8 to improve: false
[MASTER] 15:40:25.951 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar3653598659548703072.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 15:40:25.952 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3653598659548703072.jar
* Writing tests to file
[MASTER] 15:40:25.954 [logback-1] WARN  TimeController - Already entered in phase: JUNIT_CHECK. This will mess up the timing calculations.
* Writing JUnit test case 'AttributeModelComparator_ESTest' to evosuite-tests
** Write a test suite: 0 called: 0 to improve: false
** Write a test suite: 1 called: 1 to improve: false
* Writing JUnit test case 'AttributeModelComparator_Original_ESTest' to evosuite-tests
** Write a test suite: 0 called: 0 to improve: false
** Write a test suite: 1 called: 1 to improve: false
** Write a test suite: 2 called: 2 to improve: false
** Write a test suite: 3 called: 3 to improve: false
** Write a test suite: 4 called: 4 to improve: false
** Write a test suite: 5 called: 5 to improve: false
** Write a test suite: 6 called: 6 to improve: false
** Write a test suite: 7 called: 7 to improve: false
** Write a test suite: 8 called: 8 to improve: false
* Done!

* Computation finished
