* EvoSuite 1.0.0-SNAPSHOT
* Going to generate test cases for class: de.paragon.explorer.model.AttributeModelComparator
* Starting Client-0
* Properties loaded from /home/roham/Results-Utestgen/dataset/SF110-new-res/63_objectexplorer/evosuite-files/evosuite.properties
* Connecting to master process on port 5749
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 18:19:29.831 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 18:19:29.841 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.ToDoubleFunction
[MASTER] 18:19:29.842 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.ToIntFunction
[MASTER] 18:19:29.843 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.ToLongFunction
[MASTER] 18:19:30.272 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 18:19:30.277 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 18:19:30.278 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 18:19:31.965 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 18:19:31.967 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
[MASTER] 18:19:33.213 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.ZoneId
[MASTER] 18:19:33.296 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.Temporal
[MASTER] 18:19:33.297 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAccessor
[MASTER] 18:19:33.298 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalField
[MASTER] 18:19:33.299 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalUnit
[MASTER] 18:19:33.299 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAmount
[MASTER] 18:19:33.300 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.Clock
[MASTER] 18:19:33.301 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalQuery
[MASTER] 18:19:33.302 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAdjuster
[MASTER] 18:19:33.320 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.Chronology
[MASTER] 18:19:33.331 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.Era
* Finished analyzing classpath
* Generating tests for class de.paragon.explorer.model.AttributeModelComparator
* Test criteria:
  - Branch Coverage
  - Line Coverage
  - Method-Output Coverage
  - Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 51
* Using seed 1710267568453
* Starting evolution
[Progress:>                             0%] [Cov:>                                  0%]* Initial Number of Goals in DynaMOSA = 10 / 51
[MASTER] 18:19:34.413 [logback-1] WARN  TestCluster - Failed to check cache for java.lang.Comparable<T> : Type points to itself
[Progress:>                             0%] [Cov:================>                  48%][Progress:>                             0%] [Cov:================>                  48%][Progress:>                             1%] [Cov:======================>            63%][Progress:>                             1%] [Cov:======================>            63%][Progress:>                             1%] [Cov:======================>            63%][Progress:>                             1%] [Cov:======================>            63%][Progress:>                             1%] [Cov:======================>            63%][Progress:>                             1%] [Cov:======================>            63%][Progress:>                             1%] [Cov:======================>            63%][Progress:>                             1%] [Cov:======================>            63%][Progress:>                             1%] [Cov:======================>            63%][Progress:>                             2%] [Cov:======================>            63%][Progress:>                             2%] [Cov:======================>            63%][Progress:>                             2%] [Cov:======================>            63%][Progress:>                             2%] [Cov:======================>            63%][Progress:>                             2%] [Cov:======================>            63%][Progress:>                             2%] [Cov:======================>            63%][Progress:>                             2%] [Cov:======================>            63%][Progress:>                             2%] [Cov:======================>            63%][Progress:>                             2%] [Cov:======================>            63%][Progress:>                             2%] [Cov:======================>            63%][Progress:>                             2%] [Cov:======================>            63%][Progress:>                             2%] [Cov:======================>            63%][Progress:>                             2%] [Cov:======================>            63%][Progress:>                             2%] [Cov:======================>            63%][Progress:>                             2%] [Cov:======================>            63%][Progress:>                             3%] [Cov:======================>            63%][Progress:>                             3%] [Cov:======================>            63%][Progress:>                             3%] [Cov:======================>            63%][Progress:>                             3%] [Cov:======================>            63%][Progress:>                             3%] [Cov:======================>            63%][Progress:>                             3%] [Cov:======================>            63%][Progress:>                             3%] [Cov:======================>            63%][Progress:>                             3%] [Cov:======================>            63%][Progress:>                             3%] [Cov:======================>            63%][Progress:>                             3%] [Cov:==========================>        76%][Progress:>                             3%] [Cov:==========================>        76%][Progress:>                             3%] [Cov:============================>      82%][Progress:>                             3%] [Cov:==============================>    88%][Progress:>                             3%] [Cov:=================================> 95%][Progress:>                             3%] [Cov:=================================> 95%][Progress:>                             3%] [Cov:=================================> 97%][MASTER] 18:19:42.054 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.ChronoLocalDate
[Progress:=>                            4%] [Cov:===================================100%]
* Search finished after 8s and 42 generations, 12211 statements, best individual has fitness: 0.0
* Generated before the refinement 9 tests with total length 45
statement is: de.paragon.explorer.model.AttributeModelComparator()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.paragon.explorer.model.AttributeModelComparator
statement code is: AttributeModelComparator attributeModelComparator = new AttributeModelComparator()
statement is: compare(Lde/paragon/explorer/model/AttributeModel;Lde/paragon/explorer/model/AttributeModel;)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int compare = attributeModelComparator.compare((AttributeModel) null, (AttributeModel) null)
test data is: AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
attributeModelComparator.compare((AttributeModel) null, (AttributeModel) null);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
        attributeModelComparator.compare(new AttributeModel("id", "1234"), new AttributeModel("name", "John"));
    }
}
statement is: AttributeModelComparator attributeModelComparator = new AttributeModelComparator(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: attributeModelComparator.compare(new AttributeModel("id", "1234"), new AttributeModel("name", "John")), class spoon.support.reflect.code.CtInvocationImpl
invocation is: attributeModelComparator.compare(new AttributeModel("id", "1234"), new AttributeModel("name", "John")) target is: attributeModelComparator method is: compare(AttributeModel,AttributeModel)
source statement: de.paragon.explorer.model.AttributeModelComparator()V callee: VariableReference: Statement 0, type de.paragon.explorer.model.AttributeModelComparatorindex is: 0
Matched Method is: compare(Lde/paragon/explorer/model/AttributeModel;Lde/paragon/explorer/model/AttributeModel;)I
i 0 Parameters size() 0 Num of Method Parameters: 2
i 1 Parameters size() 0 Num of Method Parameters: 2
TestCase is: AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
AttributeModel attributeModel = null;
AttributeModel attributeModel = null;
attributeModelComparator.compare(attributeModel, attributeModel);

statement is: de.paragon.explorer.model.AttributeModelComparator()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.paragon.explorer.model.AttributeModelComparator
statement code is: AttributeModelComparator attributeModelComparator = new AttributeModelComparator()
statement is: de.paragon.explorer.model.AttributeModel()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.paragon.explorer.model.AttributeModel
statement code is: AttributeModel attributeModel = new AttributeModel()
statement is: compare(Lde/paragon/explorer/model/AttributeModel;Lde/paragon/explorer/model/AttributeModel;)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int compare = attributeModelComparator.compare(arg0, (AttributeModel) null)
test data is: AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
AttributeModel attributeModel = new AttributeModel();
attributeModelComparator.compare(attributeModel, (AttributeModel) null);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
        AttributeModel attributeModel = new AttributeModel();
        attributeModel.setId(123456789);
        attributeModel.setName("Test Name");
        attributeModel.setDescription("This is a test description.");
        attributeModel.setType(STRING);
        attributeModelComparator.compare(attributeModel, ((AttributeModel) (null)));
    }
}
statement is: AttributeModelComparator attributeModelComparator = new AttributeModelComparator(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: AttributeModel attributeModel = new AttributeModel(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: attributeModel.setId(123456789), class spoon.support.reflect.code.CtInvocationImpl
invocation is: attributeModel.setId(123456789) target is: attributeModel method is: setId(int)
statement is: attributeModel.setName("Test Name"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: attributeModel.setName("Test Name") target is: attributeModel method is: setName(java.lang.String)
statement is: attributeModel.setDescription("This is a test description."), class spoon.support.reflect.code.CtInvocationImpl
invocation is: attributeModel.setDescription("This is a test description.") target is: attributeModel method is: setDescription(java.lang.String)
statement is: attributeModel.setType(STRING), class spoon.support.reflect.code.CtInvocationImpl
invocation is: attributeModel.setType(STRING) target is: attributeModel method is: setType()
statement is: attributeModelComparator.compare(attributeModel, ((AttributeModel) (null))), class spoon.support.reflect.code.CtInvocationImpl
invocation is: attributeModelComparator.compare(attributeModel, ((AttributeModel) (null))) target is: attributeModelComparator method is: compare(AttributeModel,AttributeModel)
source statement: de.paragon.explorer.model.AttributeModelComparator()V callee: VariableReference: Statement 0, type de.paragon.explorer.model.AttributeModelComparatorindex is: 0
Matched Method is: compare(Lde/paragon/explorer/model/AttributeModel;Lde/paragon/explorer/model/AttributeModel;)I
i 1 Parameters size() 1 Num of Method Parameters: 2
TestCase is: AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
AttributeModel attributeModel = new AttributeModel();
AttributeModel attributeModel = null;
attributeModelComparator.compare(attributeModel, attributeModel);

statement is: de.paragon.explorer.model.StandardAttributeModel()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.paragon.explorer.model.StandardAttributeModel
statement code is: StandardAttributeModel standardAttributeModel = new StandardAttributeModel()
statement is: setName(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: standardAttributeModel.setName("8DqLu}")
statement is: de.paragon.explorer.model.AttributeModelComparator()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.paragon.explorer.model.AttributeModelComparator
statement code is: AttributeModelComparator attributeModelComparator = new AttributeModelComparator()
statement is: compare(Lde/paragon/explorer/model/AttributeModel;Lde/paragon/explorer/model/AttributeModel;)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int compare = attributeModelComparator.compare((AttributeModel) arg1, (AttributeModel) arg1)
test data is: StandardAttributeModel standardAttributeModel = new StandardAttributeModel();
standardAttributeModel.setName("8DqLu}");
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
attributeModelComparator.compare((AttributeModel) standardAttributeModel, (AttributeModel) standardAttributeModel);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StandardAttributeModel standardAttributeModel = new StandardAttributeModel();
        standardAttributeModel.setName("8DqLu}");
        AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
        attributeModelComparator.compare(((AttributeModel) (standardAttributeModel)), ((AttributeModel) (standardAttributeModel)));
    }
}
statement is: StandardAttributeModel standardAttributeModel = new StandardAttributeModel(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: standardAttributeModel.setName("8DqLu}"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: standardAttributeModel.setName("8DqLu}") target is: standardAttributeModel method is: setName(java.lang.String)
source statement: de.paragon.explorer.model.StandardAttributeModel()V callee: VariableReference: Statement 0, type de.paragon.explorer.model.StandardAttributeModelindex is: 0
Matched Method is: setName(Ljava/lang/String;)V
statement is: AttributeModelComparator attributeModelComparator = new AttributeModelComparator(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: attributeModelComparator.compare(((AttributeModel) (standardAttributeModel)), ((AttributeModel) (standardAttributeModel))), class spoon.support.reflect.code.CtInvocationImpl
invocation is: attributeModelComparator.compare(((AttributeModel) (standardAttributeModel)), ((AttributeModel) (standardAttributeModel))) target is: attributeModelComparator method is: compare(AttributeModel,AttributeModel)
source statement: de.paragon.explorer.model.AttributeModelComparator()V callee: VariableReference: Statement 2, type de.paragon.explorer.model.AttributeModelComparatorindex is: 3
Matched Method is: compare(Lde/paragon/explorer/model/AttributeModel;Lde/paragon/explorer/model/AttributeModel;)I
TestCase is: StandardAttributeModel standardAttributeModel = new StandardAttributeModel();
String string = "8DqLu}";
standardAttributeModel.setName(string);
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
((AttributeModelComparator) _void).compare((AttributeModel) standardAttributeModel, (AttributeModel) standardAttributeModel);

statement is: de.paragon.explorer.model.StandardAttributeModel()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.paragon.explorer.model.StandardAttributeModel
statement code is: StandardAttributeModel standardAttributeModel = new StandardAttributeModel()
statement is: setName(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: standardAttributeModel.setName("8DqLu}")
statement is: de.paragon.explorer.model.ArrayAttributeModel()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.paragon.explorer.model.ArrayAttributeModel
statement code is: ArrayAttributeModel arrayAttributeModel = new ArrayAttributeModel()
statement is: setName(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: arrayAttributeModel.setName("")
statement is: de.paragon.explorer.model.AttributeModelComparator()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.paragon.explorer.model.AttributeModelComparator
statement code is: AttributeModelComparator attributeModelComparator = new AttributeModelComparator()
statement is: compare(Lde/paragon/explorer/model/AttributeModel;Lde/paragon/explorer/model/AttributeModel;)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int compare = attributeModelComparator.compare((AttributeModel) arg0, (AttributeModel) arg1)
test data is: StandardAttributeModel standardAttributeModel = new StandardAttributeModel();
standardAttributeModel.setName("8DqLu}");
ArrayAttributeModel arrayAttributeModel = new ArrayAttributeModel();
arrayAttributeModel.setName("");
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
attributeModelComparator.compare((AttributeModel) arrayAttributeModel, (AttributeModel) standardAttributeModel);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StandardAttributeModel standardAttributeModel = new StandardAttributeModel();
        standardAttributeModel.setName("Employee");
        ArrayAttributeModel arrayAttributeModel = new ArrayAttributeModel();
        arrayAttributeModel.setName("Departments");
        arrayAttributeModel.add(new Department());
        arrayAttributeModel.add(new Department());
        arrayAttributeModel.add(new Department());
        arrayAttributeModel.add(new Department());
        AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
        attributeModelComparator.compare(((AttributeModel) (arrayAttributeModel)), ((AttributeModel) (standardAttributeModel)));
    }
}
statement is: StandardAttributeModel standardAttributeModel = new StandardAttributeModel(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: standardAttributeModel.setName("Employee"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: standardAttributeModel.setName("Employee") target is: standardAttributeModel method is: setName(java.lang.String)
source statement: de.paragon.explorer.model.StandardAttributeModel()V callee: VariableReference: Statement 0, type de.paragon.explorer.model.StandardAttributeModelindex is: 0
Matched Method is: setName(Ljava/lang/String;)V
statement is: ArrayAttributeModel arrayAttributeModel = new ArrayAttributeModel(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: arrayAttributeModel.setName("Departments"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: arrayAttributeModel.setName("Departments") target is: arrayAttributeModel method is: setName(java.lang.String)
source statement: de.paragon.explorer.model.ArrayAttributeModel()V callee: VariableReference: Statement 2, type de.paragon.explorer.model.ArrayAttributeModelindex is: 3
Matched Method is: setName(Ljava/lang/String;)V
statement is: arrayAttributeModel.add(new Department()), class spoon.support.reflect.code.CtInvocationImpl
invocation is: arrayAttributeModel.add(new Department()) target is: arrayAttributeModel method is: add(Department)
statement is: arrayAttributeModel.add(new Department()), class spoon.support.reflect.code.CtInvocationImpl
invocation is: arrayAttributeModel.add(new Department()) target is: arrayAttributeModel method is: add(Department)
statement is: arrayAttributeModel.add(new Department()), class spoon.support.reflect.code.CtInvocationImpl
invocation is: arrayAttributeModel.add(new Department()) target is: arrayAttributeModel method is: add(Department)
statement is: arrayAttributeModel.add(new Department()), class spoon.support.reflect.code.CtInvocationImpl
invocation is: arrayAttributeModel.add(new Department()) target is: arrayAttributeModel method is: add(Department)
statement is: AttributeModelComparator attributeModelComparator = new AttributeModelComparator(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: attributeModelComparator.compare(((AttributeModel) (arrayAttributeModel)), ((AttributeModel) (standardAttributeModel))), class spoon.support.reflect.code.CtInvocationImpl
invocation is: attributeModelComparator.compare(((AttributeModel) (arrayAttributeModel)), ((AttributeModel) (standardAttributeModel))) target is: attributeModelComparator method is: compare(AttributeModel,AttributeModel)
source statement: de.paragon.explorer.model.AttributeModelComparator()V callee: VariableReference: Statement 4, type de.paragon.explorer.model.AttributeModelComparatorindex is: 6
Matched Method is: compare(Lde/paragon/explorer/model/AttributeModel;Lde/paragon/explorer/model/AttributeModel;)I
TestCase is: StandardAttributeModel standardAttributeModel = new StandardAttributeModel();
String string = "Employee";
standardAttributeModel.setName(string);
ArrayAttributeModel arrayAttributeModel = new ArrayAttributeModel();
String string = "Departments";
((AttributeModel) _void).setName(string);
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
((AttributeModelComparator) string).compare((AttributeModel) arrayAttributeModel, (AttributeModel) standardAttributeModel);

statement is: de.paragon.explorer.model.StandardAttributeModel()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.paragon.explorer.model.StandardAttributeModel
statement code is: StandardAttributeModel standardAttributeModel = new StandardAttributeModel()
statement is: setName(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: standardAttributeModel.setName("{s")
statement is: de.paragon.explorer.model.ArrayAttributeModel()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.paragon.explorer.model.ArrayAttributeModel
statement code is: ArrayAttributeModel arrayAttributeModel = new ArrayAttributeModel()
statement is: setName(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: arrayAttributeModel.setName("eu}j")
statement is: de.paragon.explorer.model.AttributeModelComparator()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.paragon.explorer.model.AttributeModelComparator
statement code is: AttributeModelComparator attributeModelComparator = new AttributeModelComparator()
statement is: compare(Lde/paragon/explorer/model/AttributeModel;Lde/paragon/explorer/model/AttributeModel;)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int compare = attributeModelComparator.compare((AttributeModel) arg0, (AttributeModel) arg1)
test data is: StandardAttributeModel standardAttributeModel = new StandardAttributeModel();
standardAttributeModel.setName("{s");
ArrayAttributeModel arrayAttributeModel = new ArrayAttributeModel();
arrayAttributeModel.setName("eu}j");
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
attributeModelComparator.compare((AttributeModel) arrayAttributeModel, (AttributeModel) standardAttributeModel);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StandardAttributeModel standardAttributeModel = new StandardAttributeModel();
        standardAttributeModel.setName("John");
        ArrayAttributeModel arrayAttributeModel = new ArrayAttributeModel();
        arrayAttributeModel.setName("Jane");
        AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
        attributeModelComparator.compare(((AttributeModel) (arrayAttributeModel)), ((AttributeModel) (standardAttributeModel)));
    }
}
statement is: StandardAttributeModel standardAttributeModel = new StandardAttributeModel(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: standardAttributeModel.setName("John"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: standardAttributeModel.setName("John") target is: standardAttributeModel method is: setName(java.lang.String)
source statement: de.paragon.explorer.model.StandardAttributeModel()V callee: VariableReference: Statement 0, type de.paragon.explorer.model.StandardAttributeModelindex is: 0
Matched Method is: setName(Ljava/lang/String;)V
statement is: ArrayAttributeModel arrayAttributeModel = new ArrayAttributeModel(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: arrayAttributeModel.setName("Jane"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: arrayAttributeModel.setName("Jane") target is: arrayAttributeModel method is: setName(java.lang.String)
source statement: de.paragon.explorer.model.ArrayAttributeModel()V callee: VariableReference: Statement 2, type de.paragon.explorer.model.ArrayAttributeModelindex is: 3
Matched Method is: setName(Ljava/lang/String;)V
statement is: AttributeModelComparator attributeModelComparator = new AttributeModelComparator(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: attributeModelComparator.compare(((AttributeModel) (arrayAttributeModel)), ((AttributeModel) (standardAttributeModel))), class spoon.support.reflect.code.CtInvocationImpl
invocation is: attributeModelComparator.compare(((AttributeModel) (arrayAttributeModel)), ((AttributeModel) (standardAttributeModel))) target is: attributeModelComparator method is: compare(AttributeModel,AttributeModel)
source statement: de.paragon.explorer.model.AttributeModelComparator()V callee: VariableReference: Statement 4, type de.paragon.explorer.model.AttributeModelComparatorindex is: 6
Matched Method is: compare(Lde/paragon/explorer/model/AttributeModel;Lde/paragon/explorer/model/AttributeModel;)I
TestCase is: StandardAttributeModel standardAttributeModel = new StandardAttributeModel();
String string = "John";
standardAttributeModel.setName(string);
ArrayAttributeModel arrayAttributeModel = new ArrayAttributeModel();
String string = "Jane";
((AttributeModel) _void).setName(string);
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
((AttributeModelComparator) string).compare((AttributeModel) arrayAttributeModel, (AttributeModel) standardAttributeModel);

statement is: de.paragon.explorer.model.StandardAttributeModel()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.paragon.explorer.model.StandardAttributeModel
statement code is: StandardAttributeModel standardAttributeModel = new StandardAttributeModel()
statement is: setName(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: standardAttributeModel.setName("")
statement is: de.paragon.explorer.model.ArrayAttributeModel()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.paragon.explorer.model.ArrayAttributeModel
statement code is: ArrayAttributeModel arrayAttributeModel = new ArrayAttributeModel()
statement is: setName(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: arrayAttributeModel.setName("eu}j")
statement is: de.paragon.explorer.model.AttributeModelComparator()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.paragon.explorer.model.AttributeModelComparator
statement code is: AttributeModelComparator attributeModelComparator = new AttributeModelComparator()
statement is: compare(Lde/paragon/explorer/model/AttributeModel;Lde/paragon/explorer/model/AttributeModel;)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int compare = attributeModelComparator.compare((AttributeModel) arg0, (AttributeModel) arg1)
test data is: StandardAttributeModel standardAttributeModel = new StandardAttributeModel();
standardAttributeModel.setName("");
ArrayAttributeModel arrayAttributeModel = new ArrayAttributeModel();
arrayAttributeModel.setName("eu}j");
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
attributeModelComparator.compare((AttributeModel) standardAttributeModel, (AttributeModel) arrayAttributeModel);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StandardAttributeModel standardAttributeModel = new StandardAttributeModel();
        standardAttributeModel.setName("John Doe");
        standardAttributeModel.setAge(30);
        standardAttributeModel.setGender("Male");
        ArrayAttributeModel arrayAttributeModel = new ArrayAttributeModel();
        arrayAttributeModel.setName("Jane Doe");
        arrayAttributeModel.setAge(25);
        arrayAttributeModel.setGender("Female");
        AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
        attributeModelComparator.compare(((AttributeModel) (standardAttributeModel)), ((AttributeModel) (arrayAttributeModel)));
    }
}
statement is: StandardAttributeModel standardAttributeModel = new StandardAttributeModel(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: standardAttributeModel.setName("John Doe"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: standardAttributeModel.setName("John Doe") target is: standardAttributeModel method is: setName(java.lang.String)
source statement: de.paragon.explorer.model.StandardAttributeModel()V callee: VariableReference: Statement 0, type de.paragon.explorer.model.StandardAttributeModelindex is: 0
Matched Method is: setName(Ljava/lang/String;)V
statement is: standardAttributeModel.setAge(30), class spoon.support.reflect.code.CtInvocationImpl
invocation is: standardAttributeModel.setAge(30) target is: standardAttributeModel method is: setAge(int)
statement is: standardAttributeModel.setGender("Male"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: standardAttributeModel.setGender("Male") target is: standardAttributeModel method is: setGender(java.lang.String)
statement is: ArrayAttributeModel arrayAttributeModel = new ArrayAttributeModel(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: arrayAttributeModel.setName("Jane Doe"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: arrayAttributeModel.setName("Jane Doe") target is: arrayAttributeModel method is: setName(java.lang.String)
source statement: de.paragon.explorer.model.ArrayAttributeModel()V callee: VariableReference: Statement 2, type de.paragon.explorer.model.ArrayAttributeModelindex is: 3
Matched Method is: setName(Ljava/lang/String;)V
statement is: arrayAttributeModel.setAge(25), class spoon.support.reflect.code.CtInvocationImpl
invocation is: arrayAttributeModel.setAge(25) target is: arrayAttributeModel method is: setAge(int)
statement is: arrayAttributeModel.setGender("Female"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: arrayAttributeModel.setGender("Female") target is: arrayAttributeModel method is: setGender(java.lang.String)
statement is: AttributeModelComparator attributeModelComparator = new AttributeModelComparator(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: attributeModelComparator.compare(((AttributeModel) (standardAttributeModel)), ((AttributeModel) (arrayAttributeModel))), class spoon.support.reflect.code.CtInvocationImpl
invocation is: attributeModelComparator.compare(((AttributeModel) (standardAttributeModel)), ((AttributeModel) (arrayAttributeModel))) target is: attributeModelComparator method is: compare(AttributeModel,AttributeModel)
source statement: de.paragon.explorer.model.AttributeModelComparator()V callee: VariableReference: Statement 4, type de.paragon.explorer.model.AttributeModelComparatorindex is: 6
Matched Method is: compare(Lde/paragon/explorer/model/AttributeModel;Lde/paragon/explorer/model/AttributeModel;)I
TestCase is: StandardAttributeModel standardAttributeModel = new StandardAttributeModel();
String string = "John Doe";
standardAttributeModel.setName(string);
ArrayAttributeModel arrayAttributeModel = new ArrayAttributeModel();
String string = "Jane Doe";
((AttributeModel) _void).setName(string);
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
((AttributeModelComparator) string).compare((AttributeModel) standardAttributeModel, (AttributeModel) arrayAttributeModel);

statement is: de.paragon.explorer.model.StandardAttributeModel()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.paragon.explorer.model.StandardAttributeModel
statement code is: StandardAttributeModel standardAttributeModel = new StandardAttributeModel()
statement is: setName(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: standardAttributeModel.setName("8DqLu}")
statement is: de.paragon.explorer.model.AttributeModel()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.paragon.explorer.model.AttributeModel
statement code is: AttributeModel attributeModel = new AttributeModel()
statement is: setName(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: attributeModel.setName("")
statement is: de.paragon.explorer.model.AttributeModelComparator()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.paragon.explorer.model.AttributeModelComparator
statement code is: AttributeModelComparator attributeModelComparator = new AttributeModelComparator()
statement is: compare(Lde/paragon/explorer/model/AttributeModel;Lde/paragon/explorer/model/AttributeModel;)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int compare = attributeModelComparator.compare((AttributeModel) arg0, arg1)
test data is: StandardAttributeModel standardAttributeModel = new StandardAttributeModel();
standardAttributeModel.setName("8DqLu}");
AttributeModel attributeModel = new AttributeModel();
attributeModel.setName("");
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
attributeModelComparator.compare((AttributeModel) standardAttributeModel, attributeModel);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StandardAttributeModel standardAttributeModel = new StandardAttributeModel();
        standardAttributeModel.setName("8DqLu}");// This name is not descriptive and does not accurately represent the type of data being tested.

        AttributeModel attributeModel = new AttributeModel();
        attributeModel.setName("unique_identifier");// This name is more descriptive and accurately represents the purpose of the data being tested.

        AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
        attributeModelComparator.compare(((AttributeModel) (standardAttributeModel)), attributeModel);
    }
}
statement is: StandardAttributeModel standardAttributeModel = new StandardAttributeModel(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: standardAttributeModel.setName("8DqLu}")// This name is not descriptive and does not accurately represent the type of data being tested.
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: standardAttributeModel.setName("8DqLu}")// This name is not descriptive and does not accurately represent the type of data being tested.
 target is: standardAttributeModel method is: setName(java.lang.String)
source statement: de.paragon.explorer.model.StandardAttributeModel()V callee: VariableReference: Statement 0, type de.paragon.explorer.model.StandardAttributeModelindex is: 0
Matched Method is: setName(Ljava/lang/String;)V
statement is: AttributeModel attributeModel = new AttributeModel(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: attributeModel.setName("unique_identifier")// This name is more descriptive and accurately represents the purpose of the data being tested.
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: attributeModel.setName("unique_identifier")// This name is more descriptive and accurately represents the purpose of the data being tested.
 target is: attributeModel method is: setName(java.lang.String)
source statement: de.paragon.explorer.model.AttributeModel()V callee: VariableReference: Statement 2, type de.paragon.explorer.model.AttributeModelindex is: 3
Matched Method is: setName(Ljava/lang/String;)V
statement is: AttributeModelComparator attributeModelComparator = new AttributeModelComparator(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: attributeModelComparator.compare(((AttributeModel) (standardAttributeModel)), attributeModel), class spoon.support.reflect.code.CtInvocationImpl
invocation is: attributeModelComparator.compare(((AttributeModel) (standardAttributeModel)), attributeModel) target is: attributeModelComparator method is: compare(AttributeModel,AttributeModel)
source statement: de.paragon.explorer.model.AttributeModelComparator()V callee: VariableReference: Statement 4, type de.paragon.explorer.model.AttributeModelComparatorindex is: 6
Matched Method is: compare(Lde/paragon/explorer/model/AttributeModel;Lde/paragon/explorer/model/AttributeModel;)I
TestCase is: StandardAttributeModel standardAttributeModel = new StandardAttributeModel();
String string = "8DqLu}";
standardAttributeModel.setName(string);
AttributeModel attributeModel = new AttributeModel();
String string = "unique_identifier";
((AttributeModel) _void).setName(string);
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
((AttributeModelComparator) string).compare((AttributeModel) standardAttributeModel, attributeModel);

statement is: de.paragon.explorer.model.StandardAttributeModel()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.paragon.explorer.model.StandardAttributeModel
statement code is: StandardAttributeModel standardAttributeModel = new StandardAttributeModel()
statement is: setName(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: standardAttributeModel.setName("eu}j")
statement is: de.paragon.explorer.model.ArrayAttributeModel()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.paragon.explorer.model.ArrayAttributeModel
statement code is: ArrayAttributeModel arrayAttributeModel = new ArrayAttributeModel()
statement is: setName(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: arrayAttributeModel.setName("c$bU")
statement is: de.paragon.explorer.model.AttributeModelComparator()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.paragon.explorer.model.AttributeModelComparator
statement code is: AttributeModelComparator attributeModelComparator = new AttributeModelComparator()
statement is: compare(Lde/paragon/explorer/model/AttributeModel;Lde/paragon/explorer/model/AttributeModel;)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int compare = attributeModelComparator.compare((AttributeModel) arg0, (AttributeModel) arg1)
test data is: StandardAttributeModel standardAttributeModel = new StandardAttributeModel();
standardAttributeModel.setName("eu}j");
ArrayAttributeModel arrayAttributeModel = new ArrayAttributeModel();
arrayAttributeModel.setName("c$bU");
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
attributeModelComparator.compare((AttributeModel) standardAttributeModel, (AttributeModel) arrayAttributeModel);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StandardAttributeModel standardAttributeModel = new StandardAttributeModel();
        standardAttributeModel.setName("EU-J");
        ArrayAttributeModel arrayAttributeModel = new ArrayAttributeModel();
        arrayAttributeModel.setName("C$BU");
        AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
        attributeModelComparator.compare(((AttributeModel) (standardAttributeModel)), ((AttributeModel) (arrayAttributeModel)));
    }
}
statement is: StandardAttributeModel standardAttributeModel = new StandardAttributeModel(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: standardAttributeModel.setName("EU-J"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: standardAttributeModel.setName("EU-J") target is: standardAttributeModel method is: setName(java.lang.String)
source statement: de.paragon.explorer.model.StandardAttributeModel()V callee: VariableReference: Statement 0, type de.paragon.explorer.model.StandardAttributeModelindex is: 0
Matched Method is: setName(Ljava/lang/String;)V
statement is: ArrayAttributeModel arrayAttributeModel = new ArrayAttributeModel(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: arrayAttributeModel.setName("C$BU"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: arrayAttributeModel.setName("C$BU") target is: arrayAttributeModel method is: setName(java.lang.String)
source statement: de.paragon.explorer.model.ArrayAttributeModel()V callee: VariableReference: Statement 2, type de.paragon.explorer.model.ArrayAttributeModelindex is: 3
Matched Method is: setName(Ljava/lang/String;)V
statement is: AttributeModelComparator attributeModelComparator = new AttributeModelComparator(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: attributeModelComparator.compare(((AttributeModel) (standardAttributeModel)), ((AttributeModel) (arrayAttributeModel))), class spoon.support.reflect.code.CtInvocationImpl
invocation is: attributeModelComparator.compare(((AttributeModel) (standardAttributeModel)), ((AttributeModel) (arrayAttributeModel))) target is: attributeModelComparator method is: compare(AttributeModel,AttributeModel)
source statement: de.paragon.explorer.model.AttributeModelComparator()V callee: VariableReference: Statement 4, type de.paragon.explorer.model.AttributeModelComparatorindex is: 6
Matched Method is: compare(Lde/paragon/explorer/model/AttributeModel;Lde/paragon/explorer/model/AttributeModel;)I
TestCase is: StandardAttributeModel standardAttributeModel = new StandardAttributeModel();
String string = "EU-J";
standardAttributeModel.setName(string);
ArrayAttributeModel arrayAttributeModel = new ArrayAttributeModel();
String string = "C$BU";
((AttributeModel) _void).setName(string);
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
((AttributeModelComparator) string).compare((AttributeModel) standardAttributeModel, (AttributeModel) arrayAttributeModel);

statement is: de.paragon.explorer.model.StandardAttributeModel()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.paragon.explorer.model.StandardAttributeModel
statement code is: StandardAttributeModel standardAttributeModel = new StandardAttributeModel()
statement is: setName(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: standardAttributeModel.setName("")
statement is: de.paragon.explorer.model.ArrayAttributeModel()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.paragon.explorer.model.ArrayAttributeModel
statement code is: ArrayAttributeModel arrayAttributeModel = new ArrayAttributeModel()
statement is: setName(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: arrayAttributeModel.setName("eu}j")
statement is: de.paragon.explorer.model.AttributeModelComparator()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.paragon.explorer.model.AttributeModelComparator
statement code is: AttributeModelComparator attributeModelComparator = new AttributeModelComparator()
statement is: compare(Lde/paragon/explorer/model/AttributeModel;Lde/paragon/explorer/model/AttributeModel;)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int compare = attributeModelComparator.compare((AttributeModel) arg0, (AttributeModel) arg1)
test data is: StandardAttributeModel standardAttributeModel = new StandardAttributeModel();
standardAttributeModel.setName("");
ArrayAttributeModel arrayAttributeModel = new ArrayAttributeModel();
arrayAttributeModel.setName("eu}j");
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
attributeModelComparator.compare((AttributeModel) arrayAttributeModel, (AttributeModel) standardAttributeModel);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StandardAttributeModel standardAttributeModel = new StandardAttributeModel();
        standardAttributeModel.setName("John");
        ArrayAttributeModel arrayAttributeModel = new ArrayAttributeModel();
        arrayAttributeModel.setName("Jane");
        AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
        attributeModelComparator.compare(((AttributeModel) (arrayAttributeModel)), ((AttributeModel) (standardAttributeModel)));
    }
}
statement is: StandardAttributeModel standardAttributeModel = new StandardAttributeModel(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: standardAttributeModel.setName("John"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: standardAttributeModel.setName("John") target is: standardAttributeModel method is: setName(java.lang.String)
source statement: de.paragon.explorer.model.StandardAttributeModel()V callee: VariableReference: Statement 0, type de.paragon.explorer.model.StandardAttributeModelindex is: 0
Matched Method is: setName(Ljava/lang/String;)V
statement is: ArrayAttributeModel arrayAttributeModel = new ArrayAttributeModel(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: arrayAttributeModel.setName("Jane"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: arrayAttributeModel.setName("Jane") target is: arrayAttributeModel method is: setName(java.lang.String)
source statement: de.paragon.explorer.model.ArrayAttributeModel()V callee: VariableReference: Statement 2, type de.paragon.explorer.model.ArrayAttributeModelindex is: 3
Matched Method is: setName(Ljava/lang/String;)V
statement is: AttributeModelComparator attributeModelComparator = new AttributeModelComparator(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: attributeModelComparator.compare(((AttributeModel) (arrayAttributeModel)), ((AttributeModel) (standardAttributeModel))), class spoon.support.reflect.code.CtInvocationImpl
invocation is: attributeModelComparator.compare(((AttributeModel) (arrayAttributeModel)), ((AttributeModel) (standardAttributeModel))) target is: attributeModelComparator method is: compare(AttributeModel,AttributeModel)
source statement: de.paragon.explorer.model.AttributeModelComparator()V callee: VariableReference: Statement 4, type de.paragon.explorer.model.AttributeModelComparatorindex is: 6
Matched Method is: compare(Lde/paragon/explorer/model/AttributeModel;Lde/paragon/explorer/model/AttributeModel;)I
TestCase is: StandardAttributeModel standardAttributeModel = new StandardAttributeModel();
String string = "John";
standardAttributeModel.setName(string);
ArrayAttributeModel arrayAttributeModel = new ArrayAttributeModel();
String string = "Jane";
((AttributeModel) _void).setName(string);
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
((AttributeModelComparator) string).compare((AttributeModel) arrayAttributeModel, (AttributeModel) standardAttributeModel);

* test suite isTestSuite: 18
Test 0: 
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
attributeModelComparator.compare((AttributeModel) null, (AttributeModel) null);

Test 1: 
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
AttributeModel attributeModel = new AttributeModel();
attributeModelComparator.compare(attributeModel, (AttributeModel) null);
Test 2: 
StandardAttributeModel standardAttributeModel = new StandardAttributeModel();
standardAttributeModel.setName("8DqLu}");
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
attributeModelComparator.compare((AttributeModel) standardAttributeModel, (AttributeModel) standardAttributeModel);
Test 3: 
StandardAttributeModel standardAttributeModel = new StandardAttributeModel();
standardAttributeModel.setName("8DqLu}");
ArrayAttributeModel arrayAttributeModel = new ArrayAttributeModel();
arrayAttributeModel.setName("");
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
attributeModelComparator.compare((AttributeModel) arrayAttributeModel, (AttributeModel) standardAttributeModel);
Test 4: 
StandardAttributeModel standardAttributeModel = new StandardAttributeModel();
standardAttributeModel.setName("{s");
ArrayAttributeModel arrayAttributeModel = new ArrayAttributeModel();
arrayAttributeModel.setName("eu}j");
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
attributeModelComparator.compare((AttributeModel) arrayAttributeModel, (AttributeModel) standardAttributeModel);
Test 5: 
StandardAttributeModel standardAttributeModel = new StandardAttributeModel();
standardAttributeModel.setName("");
ArrayAttributeModel arrayAttributeModel = new ArrayAttributeModel();
arrayAttributeModel.setName("eu}j");
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
attributeModelComparator.compare((AttributeModel) standardAttributeModel, (AttributeModel) arrayAttributeModel);
Test 6: 
StandardAttributeModel standardAttributeModel = new StandardAttributeModel();
standardAttributeModel.setName("8DqLu}");
AttributeModel attributeModel = new AttributeModel();
attributeModel.setName("");
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
attributeModelComparator.compare((AttributeModel) standardAttributeModel, attributeModel);
Test 7: 
StandardAttributeModel standardAttributeModel = new StandardAttributeModel();
standardAttributeModel.setName("eu}j");
ArrayAttributeModel arrayAttributeModel = new ArrayAttributeModel();
arrayAttributeModel.setName("c$bU");
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
attributeModelComparator.compare((AttributeModel) standardAttributeModel, (AttributeModel) arrayAttributeModel);
Test 8: 
StandardAttributeModel standardAttributeModel = new StandardAttributeModel();
standardAttributeModel.setName("");
ArrayAttributeModel arrayAttributeModel = new ArrayAttributeModel();
arrayAttributeModel.setName("eu}j");
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
attributeModelComparator.compare((AttributeModel) arrayAttributeModel, (AttributeModel) standardAttributeModel);
Test 9: 
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
attributeModelComparator.compare((AttributeModel) null, (AttributeModel) null);

Test 10: 
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
AttributeModel attributeModel = new AttributeModel();
attributeModelComparator.compare(attributeModel, (AttributeModel) null);

Test 11: 
StandardAttributeModel standardAttributeModel = new StandardAttributeModel();
standardAttributeModel.setName("8DqLu}");
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
((AttributeModelComparator)null).compare((AttributeModel) standardAttributeModel, (AttributeModel) standardAttributeModel);

Test 12: 
StandardAttributeModel standardAttributeModel = new StandardAttributeModel();
standardAttributeModel.setName("Employee");
ArrayAttributeModel arrayAttributeModel = new ArrayAttributeModel();
String string = "Departments";
((AttributeModel)null).setName("Departments");
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
((AttributeModelComparator) string).compare((AttributeModel) arrayAttributeModel, (AttributeModel) standardAttributeModel);

Test 13: 
StandardAttributeModel standardAttributeModel = new StandardAttributeModel();
standardAttributeModel.setName("John");
ArrayAttributeModel arrayAttributeModel = new ArrayAttributeModel();
String string = "Jane";
((AttributeModel)null).setName("Jane");
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
((AttributeModelComparator) string).compare((AttributeModel) arrayAttributeModel, (AttributeModel) standardAttributeModel);

Test 14: 
StandardAttributeModel standardAttributeModel = new StandardAttributeModel();
standardAttributeModel.setName("John Doe");
ArrayAttributeModel arrayAttributeModel = new ArrayAttributeModel();
String string = "Jane Doe";
((AttributeModel)null).setName("Jane Doe");
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
((AttributeModelComparator) string).compare((AttributeModel) standardAttributeModel, (AttributeModel) arrayAttributeModel);

Test 15: 
StandardAttributeModel standardAttributeModel = new StandardAttributeModel();
standardAttributeModel.setName("8DqLu}");
AttributeModel attributeModel = new AttributeModel();
String string = "unique_identifier";
((AttributeModel)null).setName("unique_identifier");
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
((AttributeModelComparator) string).compare((AttributeModel) standardAttributeModel, attributeModel);

Test 16: 
StandardAttributeModel standardAttributeModel = new StandardAttributeModel();
standardAttributeModel.setName("EU-J");
ArrayAttributeModel arrayAttributeModel = new ArrayAttributeModel();
String string = "C$BU";
((AttributeModel)null).setName("C$BU");
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
((AttributeModelComparator) string).compare((AttributeModel) standardAttributeModel, (AttributeModel) arrayAttributeModel);

Test 17: 
StandardAttributeModel standardAttributeModel = new StandardAttributeModel();
standardAttributeModel.setName("John");
ArrayAttributeModel arrayAttributeModel = new ArrayAttributeModel();
String string = "Jane";
((AttributeModel)null).setName("Jane");
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
((AttributeModelComparator) string).compare((AttributeModel) arrayAttributeModel, (AttributeModel) standardAttributeModel);


* Generated after the refinement and before minimization 18 tests with total length 96
* test suite isTestSuite: 18
Test 0: 
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
attributeModelComparator.compare((AttributeModel) null, (AttributeModel) null);

Test 1: 
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
AttributeModel attributeModel = new AttributeModel();
attributeModelComparator.compare(attributeModel, (AttributeModel) null);
Test 2: 
StandardAttributeModel standardAttributeModel = new StandardAttributeModel();
standardAttributeModel.setName("8DqLu}");
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
attributeModelComparator.compare((AttributeModel) standardAttributeModel, (AttributeModel) standardAttributeModel);
Test 3: 
StandardAttributeModel standardAttributeModel = new StandardAttributeModel();
standardAttributeModel.setName("8DqLu}");
ArrayAttributeModel arrayAttributeModel = new ArrayAttributeModel();
arrayAttributeModel.setName("");
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
attributeModelComparator.compare((AttributeModel) arrayAttributeModel, (AttributeModel) standardAttributeModel);
Test 4: 
StandardAttributeModel standardAttributeModel = new StandardAttributeModel();
standardAttributeModel.setName("{s");
ArrayAttributeModel arrayAttributeModel = new ArrayAttributeModel();
arrayAttributeModel.setName("eu}j");
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
attributeModelComparator.compare((AttributeModel) arrayAttributeModel, (AttributeModel) standardAttributeModel);
Test 5: 
StandardAttributeModel standardAttributeModel = new StandardAttributeModel();
standardAttributeModel.setName("");
ArrayAttributeModel arrayAttributeModel = new ArrayAttributeModel();
arrayAttributeModel.setName("eu}j");
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
attributeModelComparator.compare((AttributeModel) standardAttributeModel, (AttributeModel) arrayAttributeModel);
Test 6: 
StandardAttributeModel standardAttributeModel = new StandardAttributeModel();
standardAttributeModel.setName("8DqLu}");
AttributeModel attributeModel = new AttributeModel();
attributeModel.setName("");
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
attributeModelComparator.compare((AttributeModel) standardAttributeModel, attributeModel);
Test 7: 
StandardAttributeModel standardAttributeModel = new StandardAttributeModel();
standardAttributeModel.setName("eu}j");
ArrayAttributeModel arrayAttributeModel = new ArrayAttributeModel();
arrayAttributeModel.setName("c$bU");
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
attributeModelComparator.compare((AttributeModel) standardAttributeModel, (AttributeModel) arrayAttributeModel);
Test 8: 
StandardAttributeModel standardAttributeModel = new StandardAttributeModel();
standardAttributeModel.setName("");
ArrayAttributeModel arrayAttributeModel = new ArrayAttributeModel();
arrayAttributeModel.setName("eu}j");
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
attributeModelComparator.compare((AttributeModel) arrayAttributeModel, (AttributeModel) standardAttributeModel);
Test 9: 
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
attributeModelComparator.compare((AttributeModel) null, (AttributeModel) null);

Test 10: 
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
AttributeModel attributeModel = new AttributeModel();
attributeModelComparator.compare(attributeModel, (AttributeModel) null);

Test 11: 
StandardAttributeModel standardAttributeModel = new StandardAttributeModel();
standardAttributeModel.setName("8DqLu}");
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
((AttributeModelComparator)null).compare((AttributeModel) standardAttributeModel, (AttributeModel) standardAttributeModel);

Test 12: 
StandardAttributeModel standardAttributeModel = new StandardAttributeModel();
standardAttributeModel.setName("Employee");
ArrayAttributeModel arrayAttributeModel = new ArrayAttributeModel();
String string = "Departments";
((AttributeModel)null).setName("Departments");
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
((AttributeModelComparator) string).compare((AttributeModel) arrayAttributeModel, (AttributeModel) standardAttributeModel);

Test 13: 
StandardAttributeModel standardAttributeModel = new StandardAttributeModel();
standardAttributeModel.setName("John");
ArrayAttributeModel arrayAttributeModel = new ArrayAttributeModel();
String string = "Jane";
((AttributeModel)null).setName("Jane");
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
((AttributeModelComparator) string).compare((AttributeModel) arrayAttributeModel, (AttributeModel) standardAttributeModel);

Test 14: 
StandardAttributeModel standardAttributeModel = new StandardAttributeModel();
standardAttributeModel.setName("John Doe");
ArrayAttributeModel arrayAttributeModel = new ArrayAttributeModel();
String string = "Jane Doe";
((AttributeModel)null).setName("Jane Doe");
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
((AttributeModelComparator) string).compare((AttributeModel) standardAttributeModel, (AttributeModel) arrayAttributeModel);

Test 15: 
StandardAttributeModel standardAttributeModel = new StandardAttributeModel();
standardAttributeModel.setName("8DqLu}");
AttributeModel attributeModel = new AttributeModel();
String string = "unique_identifier";
((AttributeModel)null).setName("unique_identifier");
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
((AttributeModelComparator) string).compare((AttributeModel) standardAttributeModel, attributeModel);

Test 16: 
StandardAttributeModel standardAttributeModel = new StandardAttributeModel();
standardAttributeModel.setName("EU-J");
ArrayAttributeModel arrayAttributeModel = new ArrayAttributeModel();
String string = "C$BU";
((AttributeModel)null).setName("C$BU");
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
((AttributeModelComparator) string).compare((AttributeModel) standardAttributeModel, (AttributeModel) arrayAttributeModel);

Test 17: 
StandardAttributeModel standardAttributeModel = new StandardAttributeModel();
standardAttributeModel.setName("John");
ArrayAttributeModel arrayAttributeModel = new ArrayAttributeModel();
String string = "Jane";
((AttributeModel)null).setName("Jane");
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
((AttributeModelComparator) string).compare((AttributeModel) arrayAttributeModel, (AttributeModel) standardAttributeModel);


* Minimizing test suite
* test suite isTestSuite: 9
Test 0: 
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
attributeModelComparator.compare((AttributeModel) null, (AttributeModel) null);

Test 1: 
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
AttributeModel attributeModel = new AttributeModel();
attributeModelComparator.compare(attributeModel, (AttributeModel) null);
Test 2: 
StandardAttributeModel standardAttributeModel = new StandardAttributeModel();
standardAttributeModel.setName("8DqLu}");
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
attributeModelComparator.compare((AttributeModel) standardAttributeModel, (AttributeModel) standardAttributeModel);
Test 3: 
StandardAttributeModel standardAttributeModel = new StandardAttributeModel();
standardAttributeModel.setName("8DqLu}");
ArrayAttributeModel arrayAttributeModel = new ArrayAttributeModel();
arrayAttributeModel.setName("");
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
attributeModelComparator.compare((AttributeModel) arrayAttributeModel, (AttributeModel) standardAttributeModel);
Test 4: 
StandardAttributeModel standardAttributeModel = new StandardAttributeModel();
standardAttributeModel.setName("{s");
ArrayAttributeModel arrayAttributeModel = new ArrayAttributeModel();
arrayAttributeModel.setName("eu}j");
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
attributeModelComparator.compare((AttributeModel) arrayAttributeModel, (AttributeModel) standardAttributeModel);
Test 5: 
StandardAttributeModel standardAttributeModel = new StandardAttributeModel();
standardAttributeModel.setName("");
ArrayAttributeModel arrayAttributeModel = new ArrayAttributeModel();
arrayAttributeModel.setName("eu}j");
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
attributeModelComparator.compare((AttributeModel) standardAttributeModel, (AttributeModel) arrayAttributeModel);
Test 6: 
StandardAttributeModel standardAttributeModel = new StandardAttributeModel();
standardAttributeModel.setName("");
ArrayAttributeModel arrayAttributeModel = new ArrayAttributeModel();
arrayAttributeModel.setName("eu}j");
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
attributeModelComparator.compare((AttributeModel) arrayAttributeModel, (AttributeModel) standardAttributeModel);
Test 7: 
StandardAttributeModel standardAttributeModel = new StandardAttributeModel();
standardAttributeModel.setName("eu}j");
ArrayAttributeModel arrayAttributeModel = new ArrayAttributeModel();
arrayAttributeModel.setName("c$bU");
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
attributeModelComparator.compare((AttributeModel) standardAttributeModel, (AttributeModel) arrayAttributeModel);
Test 8: 
StandardAttributeModel standardAttributeModel = new StandardAttributeModel();
standardAttributeModel.setName("8DqLu}");
AttributeModel attributeModel = new AttributeModel();
attributeModel.setName("");
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
attributeModelComparator.compare((AttributeModel) standardAttributeModel, attributeModel);

* Going to analyze the coverage criteria
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 100%
* Total number of goals: 17
* Number of covered goals: 17
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 100%
* Total number of goals: 12
* Number of covered goals: 12
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 100%
* Total number of goals: 3
* Number of covered goals: 3
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 2
* Number of covered goals: 2
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 100%
* Total number of goals: 17
* Number of covered goals: 17
* Generated 9 tests with total length 45
* Resulting test suite's coverage: 100% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 81%
* Compiling and checking tests
Going to execute: removeTestsThatDoNotCompile
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
int compare = attributeModelComparator.compare((AttributeModel) null, (AttributeModel) null);
assertEquals((-1), compare);


** It was a parseable test case! 
refined test name is: testCompareNullAttributes
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
AttributeModel arg0 = new AttributeModel();
int compare = attributeModelComparator.compare(arg0, (AttributeModel) null);
assertEquals((-1), compare);


** It was a parseable test case! 
refined test name is: testCompareToNullValue
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: StandardAttributeModel arg1 = new StandardAttributeModel();
arg1.setName("8DqLu}");
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
int compare = attributeModelComparator.compare((AttributeModel) arg1, (AttributeModel) arg1);
assertEquals(0, compare);


** It was a parseable test case! 
refined test name is: testCompareTwoIdenticalStandardAttributes
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: StandardAttributeModel arg1 = new StandardAttributeModel();
arg1.setName("8DqLu}");
ArrayAttributeModel arg0 = new ArrayAttributeModel();
arg0.setName("");
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
int compare = attributeModelComparator.compare((AttributeModel) arg0, (AttributeModel) arg1);
assertEquals((-6), compare);


** It was a parseable test case! 
refined test name is: testCompareModelsWithDifferentNames
* Compiling Tests
refined test name is: testCompareStandardAttributeWithArrayAttribute
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: StandardAttributeModel arg1 = new StandardAttributeModel();
arg1.setName("{s");
ArrayAttributeModel arg0 = new ArrayAttributeModel();
arg0.setName("eu}j");
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
int compare = attributeModelComparator.compare((AttributeModel) arg0, (AttributeModel) arg1);
assertEquals((-22), compare);


** It was a parseable test case! 
refined test name is: testCompareDifferentInstancesWithSameName
* Compiling Tests
refined test name is: testCompareStandardAttributeAndArrayAttribute
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: StandardAttributeModel arg0 = new StandardAttributeModel();
arg0.setName("");
ArrayAttributeModel arg1 = new ArrayAttributeModel();
arg1.setName("eu}j");
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
int compare = attributeModelComparator.compare((AttributeModel) arg0, (AttributeModel) arg1);
assertEquals(1, compare);


** It was a parseable test case! 
refined test name is: testCompareStandardAndArrayAttributeModels
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: StandardAttributeModel arg1 = new StandardAttributeModel();
arg1.setName("");
ArrayAttributeModel arg0 = new ArrayAttributeModel();
arg0.setName("eu}j");
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
int compare = attributeModelComparator.compare((AttributeModel) arg0, (AttributeModel) arg1);
assertEquals((-1), compare);


** It was a parseable test case! 
refined test name is: testCompareDifferentNamesReturnsMinusOne
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: StandardAttributeModel arg0 = new StandardAttributeModel();
arg0.setName("eu}j");
ArrayAttributeModel arg1 = new ArrayAttributeModel();
arg1.setName("c$bU");
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
int compare = attributeModelComparator.compare((AttributeModel) arg0, (AttributeModel) arg1);
assertEquals(2, compare);


** It was a parseable test case! 
refined test name is: testCompareStandardAndArrayAttributes
* Compiling Tests
refined test name is: testComparestandardAndArrayAttributesreturns2
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: StandardAttributeModel arg0 = new StandardAttributeModel();
arg0.setName("8DqLu}");
AttributeModel arg1 = new AttributeModel();
arg1.setName("");
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
int compare = attributeModelComparator.compare((AttributeModel) arg0, arg1);
assertEquals(6, compare);


** It was a parseable test case! 
refined test name is: testCompareAttributesByName
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 18:34:31.665 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/tmp/EvoSuite_pathingJar177901154966863934.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 18:34:31.689 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar177901154966863934.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 18:34:31.740 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/tmp/EvoSuite_pathingJar177901154966863934.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 18:34:31.741 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar177901154966863934.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 18:34:31.809 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/tmp/EvoSuite_pathingJar177901154966863934.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 18:34:31.810 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar177901154966863934.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 18:34:31.863 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/tmp/EvoSuite_pathingJar177901154966863934.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 18:34:31.864 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar177901154966863934.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 18:34:31.912 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/tmp/EvoSuite_pathingJar177901154966863934.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 18:34:31.913 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar177901154966863934.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 18:34:31.959 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/tmp/EvoSuite_pathingJar177901154966863934.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 18:34:31.959 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar177901154966863934.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 18:34:32.004 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/tmp/EvoSuite_pathingJar177901154966863934.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 18:34:32.005 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar177901154966863934.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 18:34:32.049 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/tmp/EvoSuite_pathingJar177901154966863934.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 18:34:32.050 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar177901154966863934.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 18:34:32.095 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/tmp/EvoSuite_pathingJar177901154966863934.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 18:34:32.095 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar177901154966863934.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 3 called: 0 to improve: false
** Write a test suite: 4 called: 1 to improve: false
** Write a test suite: 7 called: 2 to improve: false
[MASTER] 18:34:32.216 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/tmp/EvoSuite_pathingJar177901154966863934.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 18:34:32.217 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar177901154966863934.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 1 called: 0 to improve: false
** Write a test suite: 4 called: 1 to improve: false
** Write a test suite: 5 called: 2 to improve: false
[MASTER] 18:34:32.371 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/tmp/EvoSuite_pathingJar177901154966863934.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 18:34:32.373 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar177901154966863934.jar
[MASTER] 18:34:32.446 [logback-1] WARN  TimeController - Already entered in phase: INLINING. This will mess up the timing calculations.
* test suite isTestSuite: 9
Test 0: 
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
attributeModelComparator.compare((AttributeModel) null, (AttributeModel) null);

Test 1: 
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
AttributeModel attributeModel = new AttributeModel();
attributeModelComparator.compare(attributeModel, (AttributeModel) null);
Test 2: 
StandardAttributeModel standardAttributeModel = new StandardAttributeModel();
standardAttributeModel.setName("8DqLu}");
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
attributeModelComparator.compare((AttributeModel) standardAttributeModel, (AttributeModel) standardAttributeModel);
Test 3: 
StandardAttributeModel standardAttributeModel = new StandardAttributeModel();
standardAttributeModel.setName("8DqLu}");
ArrayAttributeModel arrayAttributeModel = new ArrayAttributeModel();
arrayAttributeModel.setName("");
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
attributeModelComparator.compare((AttributeModel) arrayAttributeModel, (AttributeModel) standardAttributeModel);
Test 4: 
StandardAttributeModel standardAttributeModel = new StandardAttributeModel();
standardAttributeModel.setName("{s");
ArrayAttributeModel arrayAttributeModel = new ArrayAttributeModel();
arrayAttributeModel.setName("eu}j");
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
attributeModelComparator.compare((AttributeModel) arrayAttributeModel, (AttributeModel) standardAttributeModel);
Test 5: 
StandardAttributeModel standardAttributeModel = new StandardAttributeModel();
standardAttributeModel.setName("");
ArrayAttributeModel arrayAttributeModel = new ArrayAttributeModel();
arrayAttributeModel.setName("eu}j");
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
attributeModelComparator.compare((AttributeModel) standardAttributeModel, (AttributeModel) arrayAttributeModel);
Test 6: 
StandardAttributeModel standardAttributeModel = new StandardAttributeModel();
standardAttributeModel.setName("8DqLu}");
AttributeModel attributeModel = new AttributeModel();
attributeModel.setName("");
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
attributeModelComparator.compare((AttributeModel) standardAttributeModel, attributeModel);
Test 7: 
StandardAttributeModel standardAttributeModel = new StandardAttributeModel();
standardAttributeModel.setName("eu}j");
ArrayAttributeModel arrayAttributeModel = new ArrayAttributeModel();
arrayAttributeModel.setName("c$bU");
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
attributeModelComparator.compare((AttributeModel) standardAttributeModel, (AttributeModel) arrayAttributeModel);
Test 8: 
StandardAttributeModel standardAttributeModel = new StandardAttributeModel();
standardAttributeModel.setName("");
ArrayAttributeModel arrayAttributeModel = new ArrayAttributeModel();
arrayAttributeModel.setName("eu}j");
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
attributeModelComparator.compare((AttributeModel) arrayAttributeModel, (AttributeModel) standardAttributeModel);

* Minimizing test suite
* test suite isTestSuite: 9
Test 0: 
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
attributeModelComparator.compare((AttributeModel) null, (AttributeModel) null);

Test 1: 
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
AttributeModel attributeModel = new AttributeModel();
attributeModelComparator.compare(attributeModel, (AttributeModel) null);
Test 2: 
StandardAttributeModel standardAttributeModel = new StandardAttributeModel();
standardAttributeModel.setName("8DqLu}");
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
attributeModelComparator.compare((AttributeModel) standardAttributeModel, (AttributeModel) standardAttributeModel);
Test 3: 
StandardAttributeModel standardAttributeModel = new StandardAttributeModel();
standardAttributeModel.setName("8DqLu}");
ArrayAttributeModel arrayAttributeModel = new ArrayAttributeModel();
arrayAttributeModel.setName("");
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
attributeModelComparator.compare((AttributeModel) arrayAttributeModel, (AttributeModel) standardAttributeModel);
Test 4: 
StandardAttributeModel standardAttributeModel = new StandardAttributeModel();
standardAttributeModel.setName("{s");
ArrayAttributeModel arrayAttributeModel = new ArrayAttributeModel();
arrayAttributeModel.setName("eu}j");
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
attributeModelComparator.compare((AttributeModel) arrayAttributeModel, (AttributeModel) standardAttributeModel);
Test 5: 
StandardAttributeModel standardAttributeModel = new StandardAttributeModel();
standardAttributeModel.setName("");
ArrayAttributeModel arrayAttributeModel = new ArrayAttributeModel();
arrayAttributeModel.setName("eu}j");
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
attributeModelComparator.compare((AttributeModel) standardAttributeModel, (AttributeModel) arrayAttributeModel);
Test 6: 
StandardAttributeModel standardAttributeModel = new StandardAttributeModel();
standardAttributeModel.setName("");
ArrayAttributeModel arrayAttributeModel = new ArrayAttributeModel();
arrayAttributeModel.setName("eu}j");
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
attributeModelComparator.compare((AttributeModel) arrayAttributeModel, (AttributeModel) standardAttributeModel);
Test 7: 
StandardAttributeModel standardAttributeModel = new StandardAttributeModel();
standardAttributeModel.setName("eu}j");
ArrayAttributeModel arrayAttributeModel = new ArrayAttributeModel();
arrayAttributeModel.setName("c$bU");
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
attributeModelComparator.compare((AttributeModel) standardAttributeModel, (AttributeModel) arrayAttributeModel);
Test 8: 
StandardAttributeModel standardAttributeModel = new StandardAttributeModel();
standardAttributeModel.setName("8DqLu}");
AttributeModel attributeModel = new AttributeModel();
attributeModel.setName("");
AttributeModelComparator attributeModelComparator = new AttributeModelComparator();
attributeModelComparator.compare((AttributeModel) standardAttributeModel, attributeModel);

[MASTER] 18:34:33.619 [logback-1] WARN  TimeController - Already entered in phase: MINIMIZATION. This will mess up the timing calculations.
* Going to analyze the coverage criteria
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 100%
* Total number of goals: 17
* Number of covered goals: 17
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 100%
* Total number of goals: 12
* Number of covered goals: 12
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 100%
* Total number of goals: 3
* Number of covered goals: 3
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 2
* Number of covered goals: 2
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 100%
* Total number of goals: 17
* Number of covered goals: 17
* Generated 9 tests with total length 45
* Resulting test suite's coverage: 100% (average coverage for all fitness functions)
* Generating assertions
[MASTER] 18:34:33.677 [logback-1] WARN  TimeController - Already entered in phase: COVERAGE_ANALYSIS. This will mess up the timing calculations.
* Resulting test suite's mutation score: 81%
* Compiling and checking tests
[MASTER] 18:34:34.958 [logback-1] WARN  TimeController - Already entered in phase: ASSERTION_GENERATION. This will mess up the timing calculations.
Going to execute: removeTestsThatDoNotCompile
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 18:34:35.556 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/tmp/EvoSuite_pathingJar177901154966863934.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 18:34:35.556 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar177901154966863934.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 18:34:35.601 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/tmp/EvoSuite_pathingJar177901154966863934.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 18:34:35.602 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar177901154966863934.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 18:34:35.645 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/tmp/EvoSuite_pathingJar177901154966863934.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 18:34:35.646 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar177901154966863934.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 18:34:35.698 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/tmp/EvoSuite_pathingJar177901154966863934.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 18:34:35.699 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar177901154966863934.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 18:34:35.746 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/tmp/EvoSuite_pathingJar177901154966863934.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 18:34:35.748 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar177901154966863934.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 18:34:35.801 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/tmp/EvoSuite_pathingJar177901154966863934.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 18:34:35.802 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar177901154966863934.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 18:34:35.853 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/tmp/EvoSuite_pathingJar177901154966863934.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 18:34:35.854 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar177901154966863934.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 18:34:35.916 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/tmp/EvoSuite_pathingJar177901154966863934.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 18:34:35.917 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar177901154966863934.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 18:34:35.967 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/tmp/EvoSuite_pathingJar177901154966863934.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 18:34:35.968 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar177901154966863934.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
** Write a test suite: 1 called: 1 to improve: false
** Write a test suite: 2 called: 2 to improve: false
** Write a test suite: 3 called: 3 to improve: false
** Write a test suite: 4 called: 4 to improve: false
** Write a test suite: 5 called: 5 to improve: false
** Write a test suite: 6 called: 6 to improve: false
** Write a test suite: 7 called: 7 to improve: false
** Write a test suite: 8 called: 8 to improve: false
[MASTER] 18:34:36.109 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/tmp/EvoSuite_pathingJar177901154966863934.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 18:34:36.110 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar177901154966863934.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
** Write a test suite: 1 called: 1 to improve: false
** Write a test suite: 2 called: 2 to improve: false
** Write a test suite: 3 called: 3 to improve: false
** Write a test suite: 4 called: 4 to improve: false
** Write a test suite: 5 called: 5 to improve: false
** Write a test suite: 6 called: 6 to improve: false
** Write a test suite: 7 called: 7 to improve: false
** Write a test suite: 8 called: 8 to improve: false
[MASTER] 18:34:36.223 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/tmp/EvoSuite_pathingJar177901154966863934.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 18:34:36.223 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar177901154966863934.jar
* Writing tests to file
[MASTER] 18:34:36.226 [logback-1] WARN  TimeController - Already entered in phase: JUNIT_CHECK. This will mess up the timing calculations.
* Writing JUnit test case 'AttributeModelComparator_ESTest' to evosuite-tests
** Write a test suite: 1 called: 0 to improve: false
** Write a test suite: 4 called: 1 to improve: false
** Write a test suite: 5 called: 2 to improve: false
* Writing JUnit test case 'AttributeModelComparator_Original_ESTest' to evosuite-tests
** Write a test suite: 0 called: 0 to improve: false
** Write a test suite: 1 called: 1 to improve: false
** Write a test suite: 2 called: 2 to improve: false
** Write a test suite: 3 called: 3 to improve: false
** Write a test suite: 4 called: 4 to improve: false
** Write a test suite: 5 called: 5 to improve: false
** Write a test suite: 6 called: 6 to improve: false
** Write a test suite: 7 called: 7 to improve: false
** Write a test suite: 8 called: 8 to improve: false
* Done!

* Computation finished
