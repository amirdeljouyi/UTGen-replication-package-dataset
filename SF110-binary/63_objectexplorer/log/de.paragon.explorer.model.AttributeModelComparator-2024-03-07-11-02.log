* EvoSuite 1.2.0
* WARNING - Generating JUnit 5 tests with the option to use a separate classloader will result in not runnable tests. Set either -Dtest_format=JUNIT4 or -Duse_separate_classloader=false
* Going to generate test cases for class: de.paragon.explorer.model.AttributeModelComparator
* Starting Client-0
* Properties loaded from /home/roham/Results-Utestgen/dataset/SF110-ES-res/63_objectexplorer/evosuite-files/evosuite.properties
* Connecting to master process on port 2788
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 11:02:33.751 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 11:02:33.757 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.ToDoubleFunction
[MASTER] 11:02:33.758 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.ToIntFunction
[MASTER] 11:02:33.759 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.ToLongFunction
[MASTER] 11:02:33.988 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 11:02:33.990 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 11:02:33.991 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 11:02:35.072 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 11:02:35.073 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
[MASTER] 11:02:35.689 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.ZoneId
[MASTER] 11:02:35.745 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.Temporal
[MASTER] 11:02:35.746 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAccessor
[MASTER] 11:02:35.747 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalField
[MASTER] 11:02:35.747 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalUnit
[MASTER] 11:02:35.748 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAmount
[MASTER] 11:02:35.748 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.Clock
[MASTER] 11:02:35.749 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalQuery
[MASTER] 11:02:35.749 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAdjuster
[MASTER] 11:02:35.762 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.Chronology
[MASTER] 11:02:35.769 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.Era
* Finished analyzing classpath
* Generating tests for class de.paragon.explorer.model.AttributeModelComparator
* Test criteria:
  - Branch Coverage
  - Line Coverage
  - Method-Output Coverage
  - Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 51
* Using seed 1709809352882
* Starting evolution
[Progress:>                             0%] [Cov:>                                  0%]* Initial Number of Goals in DynaMOSA = 10 / 51
[MASTER] 11:02:36.338 [logback-1] WARN  TestCluster - Failed to check cache for java.lang.Comparable<T> : Type points to itself
[MASTER] 11:02:36.936 [logback-1] WARN  TestCluster - Failed to check cache for java.util.function.Function<T, R> : Type points to itself
[Progress:>                             1%] [Cov:======================>            63%][Progress:>                             1%] [Cov:======================>            63%][Progress:>                             1%] [Cov:======================>            63%][Progress:>                             1%] [Cov:======================>            63%][Progress:>                             1%] [Cov:======================>            63%][Progress:>                             1%] [Cov:======================>            63%][Progress:>                             1%] [Cov:======================>            63%][Progress:>                             2%] [Cov:======================>            63%][Progress:>                             2%] [Cov:======================>            63%][Progress:>                             2%] [Cov:======================>            63%][Progress:>                             2%] [Cov:======================>            63%][Progress:>                             2%] [Cov:======================>            63%][Progress:>                             2%] [Cov:======================>            63%][Progress:>                             2%] [Cov:======================>            63%][Progress:>                             2%] [Cov:======================>            63%][Progress:>                             2%] [Cov:======================>            63%][Progress:>                             2%] [Cov:======================>            63%][Progress:>                             2%] [Cov:======================>            63%][MASTER] 11:02:38.967 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.ChronoLocalDate
[Progress:>                             2%] [Cov:======================>            63%][Progress:>                             2%] [Cov:======================>            63%][Progress:>                             2%] [Cov:======================>            63%][Progress:>                             2%] [Cov:======================>            63%][Progress:>                             2%] [Cov:======================>            63%][Progress:>                             3%] [Cov:======================>            63%][Progress:>                             3%] [Cov:======================>            63%][Progress:>                             3%] [Cov:======================>            63%][Progress:>                             3%] [Cov:======================>            63%][Progress:>                             3%] [Cov:======================>            63%][Progress:>                             3%] [Cov:======================>            63%][Progress:>                             3%] [Cov:======================>            63%][Progress:>                             3%] [Cov:======================>            63%][Progress:>                             3%] [Cov:======================>            63%][Progress:>                             3%] [Cov:======================>            63%][Progress:>                             3%] [Cov:======================>            63%][Progress:>                             3%] [Cov:======================>            63%][Progress:>                             3%] [Cov:============================>      80%][Progress:>                             3%] [Cov:===============================>   90%][Progress:>                             3%] [Cov:================================>  92%][Progress:>                             3%] [Cov:=================================> 95%][Progress:>                             3%] [Cov:=================================> 95%][Progress:>                             3%] [Cov:=================================> 95%][Progress:>                             3%] [Cov:=================================> 95%][Progress:>                             3%] [Cov:=================================> 95%][Progress:>                             3%] [Cov:=================================> 95%][Progress:=>                            4%] [Cov:=================================> 95%][Progress:=>                            4%] [Cov:=================================> 95%][Progress:=>                            4%] [Cov:===================================100%]
* Search finished after 4s and 46 generations, 19699 statements, best individual has fitness: 0.0
* Minimizing test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 100%
* Total number of goals: 17
* Number of covered goals: 17
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 100%
* Total number of goals: 12
* Number of covered goals: 12
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 100%
* Total number of goals: 3
* Number of covered goals: 3
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 2
* Number of covered goals: 2
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 100%
* Total number of goals: 17
* Number of covered goals: 17
* Generated 9 tests with total length 45
* Resulting test suite's coverage: 100% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 81%
* Compiling and checking tests
* Writing tests to file
* Writing JUnit test case 'AttributeModelComparator_ESTest' to evosuite-tests
* Done!

* Computation finished
