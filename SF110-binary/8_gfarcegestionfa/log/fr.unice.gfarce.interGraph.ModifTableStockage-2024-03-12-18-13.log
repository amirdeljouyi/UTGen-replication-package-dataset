* EvoSuite 1.0.0-SNAPSHOT
* Going to generate test cases for class: fr.unice.gfarce.interGraph.ModifTableStockage
* Starting Client-0
* Properties loaded from /home/roham/Results-Utestgen/dataset/SF110-new-res/8_gfarcegestionfa/evosuite-files/evosuite.properties
* Connecting to master process on port 19384
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 18:13:10.712 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 18:13:10.718 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 18:13:10.720 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 18:13:11.625 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 18:13:11.664 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 18:13:11.666 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
[MASTER] 18:13:13.017 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.ZoneId
[MASTER] 18:13:13.447 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.Temporal
[MASTER] 18:13:13.448 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAccessor
[MASTER] 18:13:13.448 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalField
[MASTER] 18:13:13.450 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalUnit
[MASTER] 18:13:13.450 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAmount
[MASTER] 18:13:13.450 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.Clock
[MASTER] 18:13:13.452 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalQuery
[MASTER] 18:13:13.453 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAdjuster
[MASTER] 18:13:13.580 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.Chronology
[MASTER] 18:13:13.593 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.Era
* Finished analyzing classpath
* Generating tests for class fr.unice.gfarce.interGraph.ModifTableStockage
* Test criteria:
  - Branch Coverage
  - Line Coverage
  - Method-Output Coverage
  - Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 495
* Using seed 1710267187983
* Starting evolution
[Progress:>                             0%] [Cov:>                                  0%]* Initial Number of Goals in DynaMOSA = 115 / 495
[Progress:>                             0%] [Cov:============>                      35%][Progress:>                             1%] [Cov:============>                      35%][Progress:>                             1%] [Cov:==============>                    41%][Progress:>                             2%] [Cov:==============>                    42%][Progress:>                             2%] [Cov:==================>                54%][Progress:>                             2%] [Cov:===================>               56%][Progress:>                             2%] [Cov:===================>               56%][Progress:>                             3%] [Cov:===================>               56%][Progress:>                             3%] [Cov:===================>               56%][Progress:>                             3%] [Cov:===================>               56%][Progress:=>                            4%] [Cov:===================>               57%][Progress:=>                            4%] [Cov:====================>              58%][Progress:=>                            4%] [Cov:====================>              58%][Progress:=>                            4%] [Cov:====================>              58%][Progress:=>                            5%] [Cov:=====================>             61%][Progress:=>                            5%] [Cov:=====================>             61%][Progress:=>                            5%] [Cov:=====================>             61%][Progress:=>                            5%] [Cov:=====================>             61%][Progress:=>                            5%] [Cov:=====================>             61%][Progress:=>                            6%] [Cov:=====================>             61%][Progress:=>                            6%] [Cov:======================>            63%][Progress:=>                            6%] [Cov:======================>            63%][Progress:==>                           7%] [Cov:======================>            63%][Progress:==>                           7%] [Cov:======================>            63%][Progress:==>                           7%] [Cov:======================>            63%][Progress:==>                           8%] [Cov:======================>            63%][Progress:==>                           8%] [Cov:======================>            63%][Progress:==>                           8%] [Cov:======================>            63%][Progress:==>                           8%] [Cov:======================>            63%][Progress:==>                           8%] [Cov:======================>            63%][Progress:==>                           9%] [Cov:======================>            63%][Progress:==>                           9%] [Cov:======================>            63%][Progress:==>                           9%] [Cov:======================>            63%][Progress:==>                           9%] [Cov:======================>            63%][Progress:==>                           9%] [Cov:======================>            63%][Progress:==>                           9%] [Cov:======================>            63%][Progress:==>                           9%] [Cov:======================>            63%][Progress:===>                          10%] [Cov:======================>            63%][Progress:===>                          10%] [Cov:======================>            63%][Progress:===>                          10%] [Cov:======================>            63%][Progress:===>                          10%] [Cov:======================>            63%][Progress:===>                          10%] [Cov:======================>            63%][Progress:===>                          11%] [Cov:======================>            63%][Progress:===>                          11%] [Cov:======================>            63%][Progress:===>                          11%] [Cov:======================>            63%][Progress:===>                          11%] [Cov:======================>            63%][Progress:===>                          11%] [Cov:======================>            63%][Progress:===>                          12%] [Cov:======================>            63%][Progress:===>                          12%] [Cov:==========================>        75%][Progress:===>                          12%] [Cov:==========================>        75%][Progress:===>                          12%] [Cov:==========================>        75%][Progress:===>                          12%] [Cov:==========================>        75%][Progress:===>                          12%] [Cov:==========================>        75%][Progress:===>                          12%] [Cov:==========================>        75%][Progress:===>                          12%] [Cov:==========================>        75%][Progress:===>                          12%] [Cov:==========================>        75%][Progress:===>                          13%] [Cov:==========================>        75%][Progress:===>                          13%] [Cov:==========================>        75%][Progress:===>                          13%] [Cov:==========================>        75%][Progress:===>                          13%] [Cov:==========================>        75%][Progress:===>                          13%] [Cov:==========================>        75%][Progress:====>                         14%] [Cov:==========================>        75%][Progress:====>                         14%] [Cov:==========================>        75%][Progress:====>                         14%] [Cov:==========================>        75%][Progress:====>                         14%] [Cov:==========================>        75%][Progress:====>                         15%] [Cov:==========================>        77%][Progress:====>                         15%] [Cov:==========================>        77%][Progress:====>                         15%] [Cov:==========================>        77%][Progress:====>                         15%] [Cov:==========================>        77%][Progress:====>                         15%] [Cov:==========================>        77%][Progress:====>                         15%] [Cov:==========================>        77%][Progress:====>                         15%] [Cov:==========================>        77%][Progress:====>                         16%] [Cov:==========================>        77%][Progress:====>                         16%] [Cov:==========================>        77%][Progress:====>                         16%] [Cov:==========================>        77%][Progress:====>                         16%] [Cov:==========================>        77%][Progress:====>                         16%] [Cov:==========================>        77%][Progress:====>                         16%] [Cov:==========================>        77%][Progress:=====>                        17%] [Cov:==========================>        77%][Progress:=====>                        17%] [Cov:==========================>        77%][Progress:=====>                        17%] [Cov:==========================>        77%][Progress:=====>                        17%] [Cov:==========================>        77%][Progress:=====>                        17%] [Cov:==========================>        77%][Progress:=====>                        17%] [Cov:==========================>        77%][Progress:=====>                        18%] [Cov:==========================>        77%][Progress:=====>                        18%] [Cov:==========================>        77%][Progress:=====>                        18%] [Cov:==========================>        77%][Progress:=====>                        18%] [Cov:==========================>        77%][Progress:=====>                        18%] [Cov:==========================>        77%][Progress:=====>                        19%] [Cov:==========================>        77%][Progress:=====>                        19%] [Cov:==========================>        77%][Progress:=====>                        19%] [Cov:==========================>        77%][Progress:=====>                        19%] [Cov:==========================>        77%][Progress:=====>                        19%] [Cov:==========================>        77%][Progress:=====>                        19%] [Cov:==========================>        77%][Progress:=====>                        19%] [Cov:==========================>        77%][Progress:======>                       20%] [Cov:==========================>        77%][Progress:======>                       20%] [Cov:==========================>        77%][Progress:======>                       20%] [Cov:==========================>        77%][Progress:======>                       21%] [Cov:==========================>        77%][Progress:======>                       21%] [Cov:==========================>        77%][Progress:======>                       21%] [Cov:==========================>        77%][Progress:======>                       21%] [Cov:==========================>        77%][Progress:======>                       21%] [Cov:==========================>        77%][Progress:======>                       21%] [Cov:==========================>        77%][Progress:======>                       21%] [Cov:==========================>        77%][Progress:======>                       21%] [Cov:==========================>        77%][Progress:======>                       21%] [Cov:==========================>        77%][Progress:======>                       21%] [Cov:==========================>        77%][Progress:======>                       21%] [Cov:============================>      80%][Progress:======>                       22%] [Cov:============================>      80%][Progress:======>                       23%] [Cov:============================>      80%][Progress:======>                       23%] [Cov:============================>      80%][Progress:======>                       23%] [Cov:============================>      80%][Progress:======>                       23%] [Cov:============================>      80%][Progress:======>                       23%] [Cov:============================>      80%][Progress:======>                       23%] [Cov:============================>      80%][Progress:======>                       23%] [Cov:============================>      80%][Progress:=======>                      24%] [Cov:============================>      80%][Progress:=======>                      24%] [Cov:============================>      80%][Progress:=======>                      24%] [Cov:============================>      80%][Progress:=======>                      24%] [Cov:============================>      80%][Progress:=======>                      24%] [Cov:============================>      80%][Progress:=======>                      24%] [Cov:============================>      80%][Progress:=======>                      24%] [Cov:============================>      80%][Progress:=======>                      25%] [Cov:============================>      80%][Progress:=======>                      25%] [Cov:============================>      80%][Progress:=======>                      25%] [Cov:============================>      80%][Progress:=======>                      25%] [Cov:============================>      80%][Progress:=======>                      25%] [Cov:============================>      80%][Progress:=======>                      25%] [Cov:============================>      80%][Progress:=======>                      25%] [Cov:============================>      80%][Progress:=======>                      25%] [Cov:============================>      80%][Progress:=======>                      25%] [Cov:============================>      80%][Progress:=======>                      26%] [Cov:============================>      80%][Progress:=======>                      26%] [Cov:============================>      80%][Progress:=======>                      26%] [Cov:============================>      80%][Progress:=======>                      26%] [Cov:============================>      80%][Progress:=======>                      26%] [Cov:============================>      80%][Progress:=======>                      26%] [Cov:============================>      80%][Progress:=======>                      26%] [Cov:============================>      80%][Progress:========>                     27%] [Cov:============================>      80%][Progress:========>                     27%] [Cov:============================>      80%][Progress:========>                     27%] [Cov:============================>      80%][Progress:========>                     27%] [Cov:============================>      80%][Progress:========>                     27%] [Cov:============================>      80%][Progress:========>                     27%] [Cov:============================>      80%][Progress:========>                     28%] [Cov:============================>      80%][Progress:========>                     29%] [Cov:============================>      80%][Progress:========>                     29%] [Cov:============================>      80%][Progress:========>                     29%] [Cov:============================>      80%][Progress:========>                     29%] [Cov:============================>      80%][Progress:========>                     29%] [Cov:============================>      80%][Progress:========>                     29%] [Cov:============================>      80%][Progress:========>                     29%] [Cov:============================>      80%][Progress:========>                     29%] [Cov:============================>      80%][Progress:=========>                    30%] [Cov:============================>      80%][Progress:=========>                    30%] [Cov:============================>      80%][Progress:=========>                    30%] [Cov:============================>      80%][Progress:=========>                    30%] [Cov:============================>      80%][Progress:=========>                    30%] [Cov:============================>      80%][Progress:=========>                    30%] [Cov:============================>      80%][Progress:=========>                    30%] [Cov:============================>      80%][Progress:=========>                    30%] [Cov:============================>      80%][Progress:=========>                    30%] [Cov:============================>      80%][Progress:=========>                    31%] [Cov:============================>      80%][Progress:=========>                    31%] [Cov:============================>      80%][Progress:=========>                    31%] [Cov:============================>      80%][Progress:=========>                    31%] [Cov:============================>      80%][Progress:=========>                    31%] [Cov:============================>      80%][Progress:=========>                    31%] [Cov:============================>      80%][Progress:=========>                    31%] [Cov:============================>      80%][Progress:=========>                    32%] [Cov:============================>      80%][Progress:=========>                    32%] [Cov:============================>      80%][Progress:=========>                    32%] [Cov:============================>      80%][Progress:=========>                    32%] [Cov:============================>      80%][Progress:=========>                    32%] [Cov:============================>      80%][Progress:=========>                    32%] [Cov:============================>      80%][Progress:=========>                    32%] [Cov:============================>      80%][Progress:=========>                    32%] [Cov:============================>      80%][Progress:=========>                    33%] [Cov:============================>      80%][Progress:=========>                    33%] [Cov:============================>      80%][Progress:=========>                    33%] [Cov:============================>      80%][Progress:=========>                    33%] [Cov:============================>      80%][Progress:=========>                    33%] [Cov:============================>      80%][Progress:=========>                    33%] [Cov:============================>      80%][Progress:=========>                    33%] [Cov:============================>      80%][Progress:=========>                    33%] [Cov:============================>      80%][Progress:==========>                   34%] [Cov:============================>      80%][Progress:==========>                   34%] [Cov:============================>      80%][Progress:==========>                   34%] [Cov:============================>      80%][Progress:==========>                   34%] [Cov:============================>      80%][Progress:==========>                   34%] [Cov:============================>      80%][Progress:==========>                   34%] [Cov:============================>      80%][Progress:==========>                   35%] [Cov:============================>      80%][Progress:==========>                   35%] [Cov:============================>      80%][Progress:==========>                   35%] [Cov:============================>      80%][Progress:==========>                   35%] [Cov:============================>      80%][Progress:==========>                   35%] [Cov:============================>      80%][Progress:==========>                   36%] [Cov:============================>      80%][Progress:==========>                   36%] [Cov:============================>      80%][Progress:==========>                   36%] [Cov:============================>      80%][Progress:==========>                   36%] [Cov:============================>      80%][Progress:==========>                   36%] [Cov:============================>      80%][Progress:==========>                   36%] [Cov:============================>      80%][Progress:===========>                  37%] [Cov:============================>      80%][Progress:===========>                  37%] [Cov:============================>      80%][Progress:===========>                  37%] [Cov:============================>      80%][Progress:===========>                  37%] [Cov:============================>      80%][Progress:===========>                  38%] [Cov:============================>      80%][Progress:===========>                  38%] [Cov:============================>      80%][Progress:===========>                  38%] [Cov:============================>      80%][Progress:===========>                  38%] [Cov:============================>      80%][Progress:===========>                  38%] [Cov:============================>      80%][Progress:===========>                  38%] [Cov:============================>      80%][Progress:===========>                  39%] [Cov:============================>      80%][Progress:===========>                  39%] [Cov:============================>      80%][Progress:===========>                  39%] [Cov:============================>      80%][Progress:===========>                  39%] [Cov:============================>      80%][Progress:============>                 40%] [Cov:============================>      80%][Progress:============>                 40%] [Cov:============================>      80%][Progress:============>                 40%] [Cov:============================>      80%][Progress:============>                 40%] [Cov:============================>      80%][Progress:============>                 40%] [Cov:============================>      80%][Progress:============>                 41%] [Cov:============================>      80%][Progress:============>                 41%] [Cov:============================>      80%][Progress:============>                 41%] [Cov:============================>      80%][Progress:============>                 41%] [Cov:============================>      80%][Progress:============>                 41%] [Cov:============================>      80%][Progress:============>                 41%] [Cov:============================>      80%][Progress:============>                 41%] [Cov:============================>      80%][Progress:============>                 42%] [Cov:============================>      80%][Progress:============>                 42%] [Cov:============================>      80%][Progress:============>                 42%] [Cov:============================>      80%][Progress:============>                 42%] [Cov:============================>      80%][Progress:============>                 43%] [Cov:============================>      80%][Progress:============>                 43%] [Cov:============================>      80%][Progress:============>                 43%] [Cov:============================>      80%][Progress:=============>                44%] [Cov:============================>      80%][Progress:=============>                44%] [Cov:============================>      80%][Progress:=============>                44%] [Cov:============================>      80%][Progress:=============>                44%] [Cov:============================>      80%][Progress:=============>                44%] [Cov:============================>      80%][Progress:=============>                44%] [Cov:============================>      80%][Progress:=============>                45%] [Cov:============================>      80%][Progress:=============>                45%] [Cov:============================>      80%][Progress:=============>                45%] [Cov:============================>      80%][Progress:=============>                45%] [Cov:============================>      80%][Progress:=============>                45%] [Cov:============================>      80%][Progress:=============>                46%] [Cov:============================>      80%][Progress:=============>                46%] [Cov:============================>      80%][Progress:=============>                46%] [Cov:============================>      80%][Progress:=============>                46%] [Cov:============================>      80%][Progress:=============>                46%] [Cov:============================>      80%][Progress:=============>                46%] [Cov:============================>      80%][Progress:=============>                46%] [Cov:============================>      80%][Progress:==============>               47%] [Cov:============================>      80%][Progress:==============>               47%] [Cov:============================>      80%][Progress:==============>               47%] [Cov:============================>      81%][Progress:==============>               47%] [Cov:============================>      81%][Progress:==============>               48%] [Cov:============================>      81%][Progress:==============>               48%] [Cov:============================>      81%][Progress:==============>               48%] [Cov:============================>      81%][Progress:==============>               48%] [Cov:============================>      81%][Progress:==============>               49%] [Cov:============================>      81%][Progress:==============>               49%] [Cov:============================>      81%][Progress:==============>               49%] [Cov:============================>      81%][Progress:==============>               49%] [Cov:============================>      81%][Progress:==============>               49%] [Cov:============================>      81%][Progress:===============>              50%] [Cov:============================>      81%][Progress:===============>              50%] [Cov:============================>      81%][Progress:===============>              51%] [Cov:============================>      81%][Progress:===============>              51%] [Cov:============================>      81%][Progress:===============>              51%] [Cov:============================>      81%][Progress:===============>              52%] [Cov:============================>      81%][Progress:===============>              52%] [Cov:============================>      81%][Progress:===============>              52%] [Cov:============================>      81%][Progress:===============>              52%] [Cov:============================>      81%][Progress:===============>              52%] [Cov:============================>      81%][Progress:===============>              53%] [Cov:============================>      81%][Progress:===============>              53%] [Cov:============================>      81%][Progress:===============>              53%] [Cov:============================>      81%][Progress:===============>              53%] [Cov:============================>      81%][Progress:================>             54%] [Cov:============================>      81%][Progress:================>             54%] [Cov:============================>      81%][Progress:================>             54%] [Cov:============================>      81%][Progress:================>             54%] [Cov:============================>      81%][Progress:================>             55%] [Cov:============================>      81%][Progress:================>             55%] [Cov:============================>      81%][Progress:================>             55%] [Cov:============================>      81%][Progress:================>             55%] [Cov:============================>      81%][Progress:================>             56%] [Cov:============================>      81%][Progress:================>             56%] [Cov:============================>      81%][Progress:================>             56%] [Cov:============================>      81%][Progress:================>             56%] [Cov:============================>      81%][Progress:=================>            57%] [Cov:============================>      81%][Progress:=================>            57%] [Cov:============================>      81%][Progress:=================>            57%] [Cov:============================>      81%][Progress:=================>            57%] [Cov:============================>      81%][Progress:=================>            57%] [Cov:============================>      81%][Progress:=================>            58%] [Cov:============================>      81%][Progress:=================>            58%] [Cov:============================>      81%][Progress:=================>            58%] [Cov:============================>      81%][Progress:=================>            58%] [Cov:============================>      81%][Progress:=================>            58%] [Cov:============================>      81%][Progress:=================>            58%] [Cov:============================>      81%][Progress:=================>            59%] [Cov:============================>      81%][Progress:=================>            59%] [Cov:============================>      81%][Progress:=================>            59%] [Cov:============================>      81%][Progress:=================>            59%] [Cov:============================>      81%][Progress:=================>            59%] [Cov:============================>      81%][Progress:=================>            59%] [Cov:============================>      81%][Progress:==================>           60%] [Cov:============================>      81%][Progress:==================>           60%] [Cov:============================>      81%][Progress:==================>           60%] [Cov:============================>      81%][Progress:==================>           61%] [Cov:============================>      81%][Progress:==================>           61%] [Cov:============================>      81%][Progress:==================>           61%] [Cov:============================>      81%][Progress:==================>           62%] [Cov:============================>      81%][Progress:==================>           62%] [Cov:============================>      81%][Progress:==================>           62%] [Cov:============================>      81%][Progress:==================>           62%] [Cov:============================>      81%][Progress:==================>           62%] [Cov:============================>      81%][Progress:==================>           62%] [Cov:============================>      81%][Progress:==================>           63%] [Cov:============================>      81%][Progress:==================>           63%] [Cov:============================>      81%][Progress:==================>           63%] [Cov:============================>      81%][Progress:==================>           63%] [Cov:============================>      81%][Progress:===================>          64%] [Cov:============================>      81%][Progress:===================>          64%] [Cov:============================>      81%][Progress:===================>          64%] [Cov:============================>      81%][Progress:===================>          64%] [Cov:============================>      81%][Progress:===================>          65%] [Cov:============================>      81%][Progress:===================>          65%] [Cov:============================>      81%][Progress:===================>          65%] [Cov:============================>      81%][Progress:===================>          65%] [Cov:============================>      81%][Progress:===================>          65%] [Cov:============================>      81%][Progress:===================>          66%] [Cov:============================>      81%][Progress:===================>          66%] [Cov:============================>      81%][Progress:===================>          66%] [Cov:============================>      81%][Progress:===================>          66%] [Cov:============================>      81%][Progress:===================>          66%] [Cov:============================>      81%][Progress:====================>         67%] [Cov:============================>      81%][Progress:====================>         67%] [Cov:============================>      81%][Progress:====================>         67%] [Cov:============================>      81%][Progress:====================>         67%] [Cov:============================>      81%][Progress:====================>         67%] [Cov:============================>      81%][Progress:====================>         68%] [Cov:============================>      81%][Progress:====================>         68%] [Cov:============================>      81%][Progress:====================>         68%] [Cov:============================>      81%][Progress:====================>         68%] [Cov:============================>      81%][Progress:====================>         69%] [Cov:============================>      81%][Progress:====================>         69%] [Cov:============================>      81%][Progress:====================>         69%] [Cov:============================>      81%][Progress:====================>         69%] [Cov:============================>      81%][Progress:=====================>        70%] [Cov:============================>      81%][Progress:=====================>        70%] [Cov:============================>      81%][Progress:=====================>        70%] [Cov:============================>      81%][Progress:=====================>        70%] [Cov:============================>      81%][Progress:=====================>        70%] [Cov:============================>      81%][Progress:=====================>        71%] [Cov:============================>      81%][Progress:=====================>        71%] [Cov:============================>      81%][Progress:=====================>        71%] [Cov:============================>      81%][Progress:=====================>        71%] [Cov:============================>      81%][Progress:=====================>        71%] [Cov:============================>      81%][Progress:=====================>        71%] [Cov:============================>      81%][Progress:=====================>        71%] [Cov:============================>      81%][Progress:=====================>        72%] [Cov:============================>      81%][Progress:=====================>        72%] [Cov:============================>      81%][Progress:=====================>        72%] [Cov:============================>      81%][Progress:=====================>        73%] [Cov:============================>      81%][Progress:=====================>        73%] [Cov:============================>      81%][Progress:=====================>        73%] [Cov:============================>      81%][Progress:======================>       74%] [Cov:============================>      81%][Progress:======================>       74%] [Cov:============================>      81%][Progress:======================>       74%] [Cov:============================>      81%][Progress:======================>       74%] [Cov:============================>      81%][Progress:======================>       74%] [Cov:============================>      81%][Progress:======================>       75%] [Cov:============================>      81%][Progress:======================>       75%] [Cov:============================>      81%][Progress:======================>       75%] [Cov:============================>      81%][Progress:======================>       75%] [Cov:============================>      81%][Progress:======================>       75%] [Cov:============================>      81%][Progress:======================>       76%] [Cov:============================>      81%][Progress:======================>       76%] [Cov:============================>      81%][Progress:======================>       76%] [Cov:============================>      81%][Progress:======================>       76%] [Cov:============================>      81%][Progress:=======================>      77%] [Cov:============================>      81%][Progress:=======================>      77%] [Cov:============================>      81%][Progress:=======================>      77%] [Cov:============================>      81%][Progress:=======================>      77%] [Cov:============================>      81%][Progress:=======================>      77%] [Cov:============================>      81%][Progress:=======================>      78%] [Cov:============================>      81%][Progress:=======================>      78%] [Cov:============================>      81%][Progress:=======================>      78%] [Cov:============================>      81%][Progress:=======================>      78%] [Cov:============================>      81%][Progress:=======================>      79%] [Cov:============================>      81%][Progress:=======================>      79%] [Cov:============================>      81%][Progress:=======================>      79%] [Cov:============================>      81%][Progress:=======================>      79%] [Cov:============================>      81%][Progress:=======================>      79%] [Cov:============================>      81%][Progress:========================>     80%] [Cov:============================>      81%][Progress:========================>     80%] [Cov:============================>      81%][Progress:========================>     80%] [Cov:============================>      81%][Progress:========================>     81%] [Cov:============================>      81%][Progress:========================>     81%] [Cov:============================>      82%][Progress:========================>     81%] [Cov:============================>      82%][Progress:========================>     81%] [Cov:============================>      82%][Progress:========================>     81%] [Cov:============================>      82%][Progress:========================>     81%] [Cov:============================>      82%][Progress:========================>     82%] [Cov:============================>      82%][Progress:========================>     82%] [Cov:============================>      82%][Progress:========================>     82%] [Cov:============================>      82%][Progress:========================>     82%] [Cov:============================>      82%][Progress:========================>     82%] [Cov:============================>      82%][Progress:========================>     82%] [Cov:============================>      82%][Progress:========================>     82%] [Cov:============================>      82%][Progress:========================>     83%] [Cov:============================>      82%][Progress:========================>     83%] [Cov:============================>      82%][Progress:========================>     83%] [Cov:============================>      82%][Progress:========================>     83%] [Cov:============================>      82%][Progress:========================>     83%] [Cov:============================>      82%][Progress:=========================>    84%] [Cov:============================>      82%][Progress:=========================>    84%] [Cov:============================>      82%][Progress:=========================>    84%] [Cov:============================>      82%][Progress:=========================>    84%] [Cov:============================>      82%][Progress:=========================>    84%] [Cov:============================>      82%][Progress:=========================>    84%] [Cov:============================>      82%][Progress:=========================>    85%] [Cov:============================>      82%][Progress:=========================>    85%] [Cov:============================>      82%][Progress:=========================>    85%] [Cov:============================>      82%][Progress:=========================>    85%] [Cov:============================>      82%][Progress:=========================>    85%] [Cov:============================>      82%][Progress:=========================>    85%] [Cov:============================>      82%][Progress:=========================>    86%] [Cov:============================>      82%][Progress:=========================>    86%] [Cov:============================>      82%][Progress:=========================>    86%] [Cov:============================>      82%][Progress:=========================>    86%] [Cov:============================>      82%][Progress:=========================>    86%] [Cov:============================>      82%][Progress:==========================>   87%] [Cov:============================>      82%][Progress:==========================>   87%] [Cov:============================>      82%][Progress:==========================>   87%] [Cov:============================>      82%][Progress:==========================>   87%] [Cov:============================>      82%][Progress:==========================>   87%] [Cov:============================>      82%][Progress:==========================>   87%] [Cov:============================>      82%][Progress:==========================>   87%] [Cov:============================>      82%][Progress:==========================>   88%] [Cov:============================>      82%][Progress:==========================>   88%] [Cov:============================>      82%][Progress:==========================>   88%] [Cov:============================>      82%][Progress:==========================>   88%] [Cov:============================>      82%][Progress:==========================>   88%] [Cov:============================>      82%][Progress:==========================>   88%] [Cov:============================>      82%][Progress:==========================>   89%] [Cov:============================>      82%][Progress:==========================>   89%] [Cov:============================>      82%][Progress:===========================>  90%] [Cov:============================>      82%][Progress:===========================>  90%] [Cov:============================>      82%][Progress:===========================>  90%] [Cov:============================>      82%][Progress:===========================>  90%] [Cov:============================>      82%][Progress:===========================>  91%] [Cov:============================>      82%][Progress:===========================>  91%] [Cov:============================>      82%][Progress:===========================>  91%] [Cov:============================>      82%][Progress:===========================>  91%] [Cov:============================>      82%][Progress:===========================>  91%] [Cov:============================>      82%][Progress:===========================>  92%] [Cov:============================>      82%][Progress:===========================>  92%] [Cov:============================>      82%][Progress:===========================>  92%] [Cov:============================>      82%][Progress:===========================>  92%] [Cov:============================>      82%][Progress:===========================>  92%] [Cov:============================>      82%][Progress:===========================>  92%] [Cov:============================>      82%][Progress:===========================>  93%] [Cov:============================>      82%][Progress:===========================>  93%] [Cov:============================>      82%][Progress:===========================>  93%] [Cov:============================>      82%][Progress:===========================>  93%] [Cov:============================>      82%][Progress:===========================>  93%] [Cov:============================>      82%][Progress:===========================>  93%] [Cov:============================>      82%][Progress:============================> 94%] [Cov:============================>      82%][Progress:============================> 94%] [Cov:============================>      82%][Progress:============================> 94%] [Cov:============================>      82%][Progress:============================> 94%] [Cov:============================>      82%][Progress:============================> 94%] [Cov:============================>      82%][Progress:============================> 94%] [Cov:============================>      82%][Progress:============================> 95%] [Cov:============================>      82%][Progress:============================> 95%] [Cov:============================>      82%][Progress:============================> 95%] [Cov:============================>      82%][Progress:============================> 95%] [Cov:============================>      82%][Progress:============================> 95%] [Cov:============================>      82%][Progress:============================> 95%] [Cov:============================>      82%][Progress:============================> 96%] [Cov:============================>      82%][Progress:============================> 96%] [Cov:============================>      82%][Progress:============================> 96%] [Cov:============================>      82%][Progress:============================> 96%] [Cov:============================>      82%][Progress:============================> 96%] [Cov:============================>      82%][Progress:============================> 96%] [Cov:============================>      82%][Progress:============================> 96%] [Cov:============================>      82%][Progress:=============================>97%] [Cov:============================>      82%][Progress:=============================>97%] [Cov:============================>      82%][Progress:=============================>97%] [Cov:============================>      82%][Progress:=============================>97%] [Cov:============================>      82%][Progress:=============================>97%] [Cov:============================>      82%][Progress:=============================>97%] [Cov:============================>      82%][Progress:=============================>97%] [Cov:============================>      82%][Progress:=============================>98%] [Cov:============================>      82%][Progress:=============================>98%] [Cov:============================>      82%][Progress:=============================>98%] [Cov:============================>      82%][Progress:=============================>98%] [Cov:============================>      82%][Progress:=============================>98%] [Cov:============================>      82%][Progress:=============================>98%] [Cov:============================>      82%][Progress:=============================>98%] [Cov:============================>      82%][Progress:=============================>99%] [Cov:============================>      82%][Progress:=============================>99%] [Cov:============================>      82%][Progress:=============================>99%] [Cov:============================>      82%][Progress:==============================100%] [Cov:============================>      82%][Progress:==============================100%] [Cov:============================>      82%][Progress:==============================100%] [Cov:============================>      82%][Progress:==============================100%] [Cov:============================>      82%][Progress:==============================100%] [Cov:============================>      82%][Progress:==============================100%] [Cov:============================>      82%][Progress:==============================100%] [Cov:============================>      82%][Progress:==============================100%] [Cov:============================>      82%]
* Search finished after 101s and 518 generations, 236498 statements, best individual has fitness: 72.0
* Generated before the refinement 25 tests with total length 148
statement is: fr.unice.gfarce.interGraph.TableStockage()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class fr.unice.gfarce.interGraph.TableStockage
statement code is: TableStockage tableStockage = new TableStockage()
statement is: fr.unice.gfarce.interGraph.ModifTableStockage(Lfr/unice/gfarce/interGraph/TableStockage;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class fr.unice.gfarce.interGraph.ModifTableStockage
statement code is: ModifTableStockage modifTableStockage = new ModifTableStockage(arg0)
statement is: colonneMail()Lfr/unice/gfarce/interGraph/TableStockage; type is: class org.evosuite.testcase.statements.MethodStatement return type class fr.unice.gfarce.interGraph.TableStockage
statement code is: TableStockage colonneMail = modifTableStockage.colonneMail()
test data is: TableStockage tableStockage = new TableStockage();
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
modifTableStockage.colonneMail();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Before:
        TableStockage tableStockage = new TableStockage();
        ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
        modifTableStockage.colonneMail();
        // After:
        TableStockage tableStockage = new TableStockage("example@email.com");// email address as string

        ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
        modifTableStockage.colonneMail();
    }
}
statement is: // Before:
TableStockage tableStockage = new TableStockage(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: modifTableStockage.colonneMail(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: modifTableStockage.colonneMail() target is: modifTableStockage method is: colonneMail()
source statement: fr.unice.gfarce.interGraph.ModifTableStockage(Lfr/unice/gfarce/interGraph/TableStockage;)V callee: VariableReference: Statement 1, type fr.unice.gfarce.interGraph.ModifTableStockageindex is: 1
Matched Method is: colonneMail()Lfr/unice/gfarce/interGraph/TableStockage;
statement is: // After:
TableStockage tableStockage = new TableStockage("example@email.com")// email address as string
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: modifTableStockage.colonneMail(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: modifTableStockage.colonneMail() target is: modifTableStockage method is: colonneMail()
source statement: fr.unice.gfarce.interGraph.ModifTableStockage(Lfr/unice/gfarce/interGraph/TableStockage;)V callee: VariableReference: Statement 1, type fr.unice.gfarce.interGraph.ModifTableStockageindex is: 3
Matched Method is: colonneMail()Lfr/unice/gfarce/interGraph/TableStockage;
TestCase is: TableStockage tableStockage = new TableStockage();
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
modifTableStockage.colonneMail();
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
modifTableStockage.colonneMail();

statement is: org.evosuite.testcase.statements.ArrayStatement@70ae644f type is: class org.evosuite.testcase.statements.ArrayStatement return type class [Ljava.lang.String;
statement code is: String[] stringArray = new String[2]
statement is: org.evosuite.testcase.statements.ArrayStatement@f007278 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [[Ljava.lang.Object;
statement code is: Object[][] objectArray = new Object[1][1]
statement is: org.evosuite.testcase.statements.AssignmentStatement@657dd8c6 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class [Ljava.lang.Object;
statement code is: objectArray[0] = (Object[]) stringArray
statement is: fr.unice.gfarce.interGraph.TableStockage([Ljava/lang/String;[[Ljava/lang/Object;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class fr.unice.gfarce.interGraph.TableStockage
statement code is: TableStockage tableStockage = new TableStockage(arg0, arg1)
statement is: fr.unice.gfarce.interGraph.ModifTableStockage(Lfr/unice/gfarce/interGraph/TableStockage;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class fr.unice.gfarce.interGraph.ModifTableStockage
statement code is: ModifTableStockage modifTableStockage = new ModifTableStockage(arg0)
statement is: Class<Boolean> class = Boolean.class type is: class org.evosuite.testcase.statements.ClassPrimitiveStatement return type java.lang.Class<java.lang.Boolean>
statement code is: Class<Boolean> class = Boolean.class
statement is: ajouterColonne(Ljava/lang/String;Ljava/lang/Class;)Lfr/unice/gfarce/interGraph/TableStockage; type is: class org.evosuite.testcase.statements.MethodStatement return type class fr.unice.gfarce.interGraph.TableStockage
statement code is: TableStockage ajouterColonne = modifTableStockage.ajouterColonne("~A", arg1)
test data is: String[] stringArray = new String[2];
Object[][] objectArray = new Object[1][1];
objectArray[0] = (Object[]) stringArray;
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
Class<Boolean> class = Boolean.class;
modifTableStockage.ajouterColonne("~A", class);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        String[] stringArray = new String[]{ "apple", "banana", "cherry" };
        Object[][] objectArray = new Object[][]{ new Object[]{ 1, 2.0, 'a' }, new Object[]{ 3, 4.0, 'b' } };
        TableStockage tableStockage = new TableStockage(stringArray, objectArray);
        ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
        Class<Boolean> $missing$ = Boolean.class;
        modifTableStockage.ajouterColonne("~A", $missing$);
    }
}
statement is: String[] stringArray = new String[]{ "apple", "banana", "cherry" }, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [] Ct is: String[] stringArray = new String[2] isAssignment: false Array: new String[]{ "apple", "banana", "cherry" } Elements: ["apple", "banana", "cherry"]
lengths: [2] []
Dimension: [] Ct is: Object[][] objectArray = new Object[1][1] isAssignment: false Array: new String[]{ "apple", "banana", "cherry" } Elements: ["apple", "banana", "cherry"]
lengths: [1, 1] []
statement is: Object[][] objectArray = new Object[][]{ new Object[]{ 1, 2.0, 'a' }, new Object[]{ 3, 4.0, 'b' } }, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [] Ct is: String[] stringArray = new String[2] isAssignment: false Array: new Object[][]{ new Object[]{ 1, 2.0, 'a' }, new Object[]{ 3, 4.0, 'b' } } Elements: [new Object[]{ 1, 2.0, 'a' }, new Object[]{ 3, 4.0, 'b' }]
lengths: [2] []
Dimension: [] Ct is: Object[][] objectArray = new Object[1][1] isAssignment: false Array: new Object[][]{ new Object[]{ 1, 2.0, 'a' }, new Object[]{ 3, 4.0, 'b' } } Elements: [new Object[]{ 1, 2.0, 'a' }, new Object[]{ 3, 4.0, 'b' }]
lengths: [1, 1] []
statement is: TableStockage tableStockage = new TableStockage(stringArray, objectArray), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: fr.unice.gfarce.interGraph.TableStockage([Ljava/lang/String;[[Ljava/lang/Object;)V
statement is: ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: fr.unice.gfarce.interGraph.ModifTableStockage(Lfr/unice/gfarce/interGraph/TableStockage;)V
statement is: Class<Boolean> $missing$ = Boolean.class, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: Boolean.class is Boolean
statement is: modifTableStockage.ajouterColonne("~A", $missing$), class spoon.support.reflect.code.CtInvocationImpl
invocation is: modifTableStockage.ajouterColonne("~A", $missing$) target is: modifTableStockage method is: ajouterColonne(java.lang.String,java.lang.Class)
statement is: fr.unice.gfarce.interGraph.TableStockage()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class fr.unice.gfarce.interGraph.TableStockage
statement code is: TableStockage tableStockage = new TableStockage()
statement is: fr.unice.gfarce.interGraph.ModifTableStockage(Lfr/unice/gfarce/interGraph/TableStockage;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class fr.unice.gfarce.interGraph.ModifTableStockage
statement code is: ModifTableStockage modifTableStockage = new ModifTableStockage(arg0)
statement is: ajouterLigne()Lfr/unice/gfarce/interGraph/TableStockage; type is: class org.evosuite.testcase.statements.MethodStatement return type class fr.unice.gfarce.interGraph.TableStockage
statement code is: TableStockage ajouterLigne = modifTableStockage.ajouterLigne()
test data is: TableStockage tableStockage = new TableStockage();
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
modifTableStockage.ajouterLigne();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        TableStockage tableStockage = new TableStockage();
        ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
        modifTableStockage.ajouterLigne();
        // Changement de la valeur primitive "1" en une chaîne plus descriptive pour mieux représenter la situation
        int idProduit = 1;
        String nomProduit = "Télévision LED 4K";
        double prixUnitaire = 600.0;
        double quantiteStock = 5.0;
        modifTableStockage.ajouterLigne(idProduit, nomProduit, prixUnitaire, quantiteStock);
        // Changement de la valeur primitive "2" en une chaîne plus descriptive pour mieux représenter la situation
        int idFournisseur = 2;
        String nomFournisseur = "Apple";
        modifTableStockage.ajouterLigne(idProduit, nomFournisseur);
        // Changement de la valeur primitive "3" en une chaîne plus descriptive pour mieux représenter la situation
        int idCategorie = 3;
        String nomCategorie = "Electronique";
        modifTableStockage.ajouterLigne(idProduit, nomCategorie);
    }
}
statement is: TableStockage tableStockage = new TableStockage(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: modifTableStockage.ajouterLigne(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: modifTableStockage.ajouterLigne() target is: modifTableStockage method is: ajouterLigne()
source statement: fr.unice.gfarce.interGraph.ModifTableStockage(Lfr/unice/gfarce/interGraph/TableStockage;)V callee: VariableReference: Statement 1, type fr.unice.gfarce.interGraph.ModifTableStockageindex is: 1
Matched Method is: ajouterLigne()Lfr/unice/gfarce/interGraph/TableStockage;
statement is: // Changement de la valeur primitive "1" en une chaîne plus descriptive pour mieux représenter la situation
int idProduit = 1, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: String nomProduit = "Télévision LED 4K", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: double prixUnitaire = 600.0, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: double quantiteStock = 5.0, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: modifTableStockage.ajouterLigne(idProduit, nomProduit, prixUnitaire, quantiteStock), class spoon.support.reflect.code.CtInvocationImpl
invocation is: modifTableStockage.ajouterLigne(idProduit, nomProduit, prixUnitaire, quantiteStock) target is: modifTableStockage method is: ajouterLigne(int,java.lang.String,double,double)
statement is: // Changement de la valeur primitive "2" en une chaîne plus descriptive pour mieux représenter la situation
int idFournisseur = 2, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: String nomFournisseur = "Apple", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: modifTableStockage.ajouterLigne(idProduit, nomFournisseur), class spoon.support.reflect.code.CtInvocationImpl
invocation is: modifTableStockage.ajouterLigne(idProduit, nomFournisseur) target is: modifTableStockage method is: ajouterLigne(int,java.lang.String)
statement is: // Changement de la valeur primitive "3" en une chaîne plus descriptive pour mieux représenter la situation
int idCategorie = 3, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: String nomCategorie = "Electronique", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: modifTableStockage.ajouterLigne(idProduit, nomCategorie), class spoon.support.reflect.code.CtInvocationImpl
invocation is: modifTableStockage.ajouterLigne(idProduit, nomCategorie) target is: modifTableStockage method is: ajouterLigne(int,java.lang.String)
* this is vulnerable: int _int = 1
* this is vulnerable: String string = "T\u00E9l\u00E9vision LED 4K"
* this is vulnerable: double _double = 600.0
* this is vulnerable: double _double = 5.0
* this is vulnerable: int _int = 2
* this is vulnerable: String string = "Apple"
* this is vulnerable: int _int = 3
* this is vulnerable: String string = "Electronique"
TestCase is: TableStockage tableStockage = new TableStockage();
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
modifTableStockage.ajouterLigne();
int _int = 1;
String string = "T\u00E9l\u00E9vision LED 4K";
double _double = 600.0;
double _double = 5.0;
int _int = 2;
String string = "Apple";
int _int = 3;
String string = "Electronique";

statement is: org.evosuite.testcase.statements.ArrayStatement@17432bb7 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [Ljava.lang.String;
statement code is: String[] stringArray = new String[3]
statement is: org.evosuite.testcase.statements.AssignmentStatement@ab6990bb type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.String
statement code is: stringArray[0] = " |sZDipI:>hCfgZ"
statement is: org.evosuite.testcase.statements.ArrayStatement@5610bb29 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [[Ljava.lang.Object;
statement code is: Object[][] objectArray = new Object[1][1]
statement is: org.evosuite.testcase.statements.AssignmentStatement@3bbd0671 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class [Ljava.lang.Object;
statement code is: objectArray[0] = (Object[]) stringArray
statement is: fr.unice.gfarce.interGraph.TableStockage([Ljava/lang/String;[[Ljava/lang/Object;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class fr.unice.gfarce.interGraph.TableStockage
statement code is: TableStockage tableStockage = new TableStockage(arg0, arg1)
statement is: fr.unice.gfarce.interGraph.ModifTableStockage(Lfr/unice/gfarce/interGraph/TableStockage;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class fr.unice.gfarce.interGraph.ModifTableStockage
statement code is: ModifTableStockage modifTableStockage = new ModifTableStockage(arg0)
statement is: ajouterLigne()Lfr/unice/gfarce/interGraph/TableStockage; type is: class org.evosuite.testcase.statements.MethodStatement return type class fr.unice.gfarce.interGraph.TableStockage
statement code is: TableStockage ajouterLigne = modifTableStockage.ajouterLigne()
test data is: String[] stringArray = new String[3];
stringArray[0] = " |sZDipI:>hCfgZ";
Object[][] objectArray = new Object[1][1];
objectArray[0] = (Object[]) stringArray;
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
modifTableStockage.ajouterLigne();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        String[] stringArray = new String[]{ "apple", "banana", "cherry" };
        Object[][] objectArray = new Object[][]{ new Object[]{ 1, 2.0, "red" }, new Object[]{ 2, 3.5, "green" }, new Object[]{ 3, 4.0, "yellow" } };
        TableStockage tableStockage = new TableStockage(stringArray, objectArray);
        ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
        modifTableStockage.ajouterLigne();
    }
}
statement is: String[] stringArray = new String[]{ "apple", "banana", "cherry" }, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [] Ct is: String[] stringArray = new String[3] isAssignment: false Array: new String[]{ "apple", "banana", "cherry" } Elements: ["apple", "banana", "cherry"]
lengths: [3] []
Dimension: [] Ct is: Object[][] objectArray = new Object[1][1] isAssignment: false Array: new String[]{ "apple", "banana", "cherry" } Elements: ["apple", "banana", "cherry"]
lengths: [1, 1] []
statement is: Object[][] objectArray = new Object[][]{ new Object[]{ 1, 2.0, "red" }, new Object[]{ 2, 3.5, "green" }, new Object[]{ 3, 4.0, "yellow" } }, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [] Ct is: String[] stringArray = new String[3] isAssignment: false Array: new Object[][]{ new Object[]{ 1, 2.0, "red" }, new Object[]{ 2, 3.5, "green" }, new Object[]{ 3, 4.0, "yellow" } } Elements: [new Object[]{ 1, 2.0, "red" }, new Object[]{ 2, 3.5, "green" }, new Object[]{ 3, 4.0, "yellow" }]
lengths: [3] []
Dimension: [] Ct is: Object[][] objectArray = new Object[1][1] isAssignment: false Array: new Object[][]{ new Object[]{ 1, 2.0, "red" }, new Object[]{ 2, 3.5, "green" }, new Object[]{ 3, 4.0, "yellow" } } Elements: [new Object[]{ 1, 2.0, "red" }, new Object[]{ 2, 3.5, "green" }, new Object[]{ 3, 4.0, "yellow" }]
lengths: [1, 1] []
statement is: TableStockage tableStockage = new TableStockage(stringArray, objectArray), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: fr.unice.gfarce.interGraph.TableStockage([Ljava/lang/String;[[Ljava/lang/Object;)V
statement is: ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: fr.unice.gfarce.interGraph.ModifTableStockage(Lfr/unice/gfarce/interGraph/TableStockage;)V
statement is: modifTableStockage.ajouterLigne(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: modifTableStockage.ajouterLigne() target is: modifTableStockage method is: ajouterLigne()
statement is: org.evosuite.testcase.statements.ArrayStatement@721f4562 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [Ljava.lang.String;
statement code is: String[] stringArray = new String[3]
statement is: org.evosuite.testcase.statements.ArrayStatement@6b6ce1f1 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [[Ljava.lang.Object;
statement code is: Object[][] objectArray = new Object[4][9]
statement is: fr.unice.gfarce.interGraph.TableStockage([Ljava/lang/String;[[Ljava/lang/Object;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class fr.unice.gfarce.interGraph.TableStockage
statement code is: TableStockage tableStockage = new TableStockage(arg0, arg1)
statement is: Class<Object> class = Object.class type is: class org.evosuite.testcase.statements.ClassPrimitiveStatement return type java.lang.Class<java.lang.Object>
statement code is: Class<Object> class = Object.class
statement is: setColumnClass(ILjava/lang/Class;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: tableStockage.setColumnClass(2, arg1)
statement is: fr.unice.gfarce.interGraph.ModifTableStockage(Lfr/unice/gfarce/interGraph/TableStockage;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class fr.unice.gfarce.interGraph.ModifTableStockage
statement code is: ModifTableStockage modifTableStockage = new ModifTableStockage(arg0)
statement is: ajouterLigne()Lfr/unice/gfarce/interGraph/TableStockage; type is: class org.evosuite.testcase.statements.MethodStatement return type class fr.unice.gfarce.interGraph.TableStockage
statement code is: TableStockage ajouterLigne = modifTableStockage.ajouterLigne()
test data is: String[] stringArray = new String[3];
Object[][] objectArray = new Object[4][9];
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
Class<Object> class = Object.class;
tableStockage.setColumnClass(2, class);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
modifTableStockage.ajouterLigne();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        String[] stringArray = new String[]{ "Apple", "Banana", "Orange" };
        Object[][] objectArray = new Object[][]{ new Object[]{ 1, "Red", 20 }, new Object[]{ 2, "Yellow", 30 }, new Object[]{ 3, "Green", 40 } };
        TableStockage tableStockage = new TableStockage(stringArray, objectArray);
        Class<String> $missing$ = String.class;
        tableStockage.setColumnClass(2, $missing$);
        ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
        modifTableStockage.ajouterLigne();
    }
}
statement is: String[] stringArray = new String[]{ "Apple", "Banana", "Orange" }, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [] Ct is: String[] stringArray = new String[3] isAssignment: false Array: new String[]{ "Apple", "Banana", "Orange" } Elements: ["Apple", "Banana", "Orange"]
lengths: [3] []
Dimension: [] Ct is: Object[][] objectArray = new Object[4][9] isAssignment: false Array: new String[]{ "Apple", "Banana", "Orange" } Elements: ["Apple", "Banana", "Orange"]
lengths: [4, 9] []
statement is: Object[][] objectArray = new Object[][]{ new Object[]{ 1, "Red", 20 }, new Object[]{ 2, "Yellow", 30 }, new Object[]{ 3, "Green", 40 } }, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [] Ct is: String[] stringArray = new String[3] isAssignment: false Array: new Object[][]{ new Object[]{ 1, "Red", 20 }, new Object[]{ 2, "Yellow", 30 }, new Object[]{ 3, "Green", 40 } } Elements: [new Object[]{ 1, "Red", 20 }, new Object[]{ 2, "Yellow", 30 }, new Object[]{ 3, "Green", 40 }]
lengths: [3] []
Dimension: [] Ct is: Object[][] objectArray = new Object[4][9] isAssignment: false Array: new Object[][]{ new Object[]{ 1, "Red", 20 }, new Object[]{ 2, "Yellow", 30 }, new Object[]{ 3, "Green", 40 } } Elements: [new Object[]{ 1, "Red", 20 }, new Object[]{ 2, "Yellow", 30 }, new Object[]{ 3, "Green", 40 }]
lengths: [4, 9] []
statement is: TableStockage tableStockage = new TableStockage(stringArray, objectArray), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: fr.unice.gfarce.interGraph.TableStockage([Ljava/lang/String;[[Ljava/lang/Object;)V
statement is: Class<String> $missing$ = String.class, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: String.class is String
statement is: tableStockage.setColumnClass(2, $missing$), class spoon.support.reflect.code.CtInvocationImpl
invocation is: tableStockage.setColumnClass(2, $missing$) target is: tableStockage method is: setColumnClass(int,java.lang.Class)
statement is: ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: fr.unice.gfarce.interGraph.ModifTableStockage(Lfr/unice/gfarce/interGraph/TableStockage;)V
statement is: modifTableStockage.ajouterLigne(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: modifTableStockage.ajouterLigne() target is: modifTableStockage method is: ajouterLigne()
statement is: fr.unice.gfarce.interGraph.TableStockage(II)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class fr.unice.gfarce.interGraph.TableStockage
statement code is: TableStockage tableStockage = new TableStockage(41, 41)
statement is: fr.unice.gfarce.interGraph.ModifTableStockage(Lfr/unice/gfarce/interGraph/TableStockage;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class fr.unice.gfarce.interGraph.ModifTableStockage
statement code is: ModifTableStockage modifTableStockage = new ModifTableStockage(arg0)
statement is: supprimerColonne(I)Lfr/unice/gfarce/interGraph/TableStockage; type is: class org.evosuite.testcase.statements.MethodStatement return type class fr.unice.gfarce.interGraph.TableStockage
statement code is: TableStockage supprimerColonne = modifTableStockage.supprimerColonne(8)
test data is: TableStockage tableStockage = new TableStockage(41, 41);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
modifTableStockage.supprimerColonne(8);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        TableStockage tableStockage = new TableStockage("Nom du produit", "Prix");
        ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
        modifTableStockage.supprimerColonne("Prix");
    }
}
statement is: TableStockage tableStockage = new TableStockage("Nom du produit", "Prix"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: modifTableStockage.supprimerColonne("Prix"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: modifTableStockage.supprimerColonne("Prix") target is: modifTableStockage method is: supprimerColonne(java.lang.String)
source statement: fr.unice.gfarce.interGraph.ModifTableStockage(Lfr/unice/gfarce/interGraph/TableStockage;)V callee: VariableReference: Statement 1, type fr.unice.gfarce.interGraph.ModifTableStockageindex is: 3
Matched Method is: supprimerColonne(I)Lfr/unice/gfarce/interGraph/TableStockage;
TestCase is: String string = "Nom du produit";
String string = "Prix";
TableStockage tableStockage = new TableStockage((int) string, (int) string);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
String string = "Prix";
((ModifTableStockage) string).supprimerColonne((int) string);

statement is: fr.unice.gfarce.interGraph.TableStockage(II)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class fr.unice.gfarce.interGraph.TableStockage
statement code is: TableStockage tableStockage = new TableStockage(26, 26)
statement is: fr.unice.gfarce.interGraph.ModifTableStockage(Lfr/unice/gfarce/interGraph/TableStockage;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class fr.unice.gfarce.interGraph.ModifTableStockage
statement code is: ModifTableStockage modifTableStockage = new ModifTableStockage(arg0)
statement is: colonneMail()Lfr/unice/gfarce/interGraph/TableStockage; type is: class org.evosuite.testcase.statements.MethodStatement return type class fr.unice.gfarce.interGraph.TableStockage
statement code is: TableStockage colonneMail = modifTableStockage.colonneMail()
statement is: supprimerColonne(I)Lfr/unice/gfarce/interGraph/TableStockage; type is: class org.evosuite.testcase.statements.MethodStatement return type class fr.unice.gfarce.interGraph.TableStockage
statement code is: TableStockage supprimerColonne = modifTableStockage.supprimerColonne(26)
test data is: TableStockage tableStockage = new TableStockage(26, 26);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
modifTableStockage.colonneMail();
modifTableStockage.supprimerColonne(26);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Test data for the TableStockage class
        TableStockage tableStockage = new TableStockage("mail", 100, "nom");
        ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
        modifTableStockage.colonneMail();
        modifTableStockage.supprimerColonne("last_name");
    }
}
statement is: // Test data for the TableStockage class
TableStockage tableStockage = new TableStockage("mail", 100, "nom"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: fr.unice.gfarce.interGraph.ModifTableStockage(Lfr/unice/gfarce/interGraph/TableStockage;)V
statement is: modifTableStockage.colonneMail(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: modifTableStockage.colonneMail() target is: modifTableStockage method is: colonneMail()
statement is: modifTableStockage.supprimerColonne("last_name"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: modifTableStockage.supprimerColonne("last_name") target is: modifTableStockage method is: supprimerColonne(java.lang.String)
statement is: org.evosuite.testcase.statements.ArrayStatement@40e76a80 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [Ljava.lang.String;
statement code is: String[] stringArray = new String[14]
statement is: org.evosuite.testcase.statements.ArrayStatement@68ccb282 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [[Ljava.lang.Object;
statement code is: Object[][] objectArray = new Object[1][8]
statement is: org.evosuite.testcase.statements.AssignmentStatement@17e7910c type is: class org.evosuite.testcase.statements.AssignmentStatement return type class [Ljava.lang.Object;
statement code is: objectArray[0] = (Object[]) stringArray
statement is: fr.unice.gfarce.interGraph.TableStockage([Ljava/lang/String;[[Ljava/lang/Object;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class fr.unice.gfarce.interGraph.TableStockage
statement code is: TableStockage tableStockage = new TableStockage(arg0, arg1)
statement is: fr.unice.gfarce.interGraph.ModifTableStockage(Lfr/unice/gfarce/interGraph/TableStockage;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class fr.unice.gfarce.interGraph.ModifTableStockage
statement code is: ModifTableStockage modifTableStockage = new ModifTableStockage(arg0)
statement is: ajouterLigne()Lfr/unice/gfarce/interGraph/TableStockage; type is: class org.evosuite.testcase.statements.MethodStatement return type class fr.unice.gfarce.interGraph.TableStockage
statement code is: TableStockage ajouterLigne = modifTableStockage.ajouterLigne()
statement is: supprimerLigne(I)Lfr/unice/gfarce/interGraph/TableStockage; type is: class org.evosuite.testcase.statements.MethodStatement return type class fr.unice.gfarce.interGraph.TableStockage
statement code is: TableStockage supprimerLigne = modifTableStockage.supprimerLigne(1)
test data is: String[] stringArray = new String[14];
Object[][] objectArray = new Object[1][8];
objectArray[0] = (Object[]) stringArray;
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
modifTableStockage.ajouterLigne();
modifTableStockage.supprimerLigne(1);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        String[] stringArray = new String[14];
        Object[][] objectArray = new Object[1][8];
        objectArray[0] = ((Object[]) (stringArray));
        TableStockage tableStockage = new TableStockage(stringArray, objectArray);
        ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
        modifTableStockage.ajouterLigne("John", "Doe", 30, true);
        modifTableStockage.supprimerLigne(2);
    }
}
statement is: String[] stringArray = new String[14], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [14] Ct is: String[] stringArray = new String[14] isAssignment: false Array: new String[14] Elements: []
lengths: [14] [14]
Their type are: class [Ljava.lang.String; String[]
statement is: Object[][] objectArray = new Object[1][8], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [1, 8] Ct is: String[] stringArray = new String[14] isAssignment: false Array: new Object[1][8] Elements: []
lengths: [14] [1, 8]
Dimension: [1, 8] Ct is: Object[][] objectArray = new Object[1][8] isAssignment: false Array: new Object[1][8] Elements: []
lengths: [1, 8] [1, 8]
Their type are: class [[Ljava.lang.Object; Object[][]
statement is: objectArray[0] = ((Object[]) (stringArray)), class spoon.support.reflect.code.CtAssignmentImpl
Assigned : objectArray[0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl Object[] Assignment:((Object[]) (stringArray)) Ct is: objectArray[0] = ((Object[]) (stringArray))
target : objectArray class spoon.support.reflect.code.CtLiteralImpl
statement is: TableStockage tableStockage = new TableStockage(stringArray, objectArray), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: modifTableStockage.ajouterLigne("John", "Doe", 30, true), class spoon.support.reflect.code.CtInvocationImpl
invocation is: modifTableStockage.ajouterLigne("John", "Doe", 30, true) target is: modifTableStockage method is: ajouterLigne(java.lang.String,java.lang.String,int,boolean)
statement is: modifTableStockage.supprimerLigne(2), class spoon.support.reflect.code.CtInvocationImpl
invocation is: modifTableStockage.supprimerLigne(2) target is: modifTableStockage method is: supprimerLigne(int)
source statement: fr.unice.gfarce.interGraph.ModifTableStockage(Lfr/unice/gfarce/interGraph/TableStockage;)V callee: VariableReference: Statement 4, type fr.unice.gfarce.interGraph.ModifTableStockageindex is: 4
Matched Method is: supprimerLigne(I)Lfr/unice/gfarce/interGraph/TableStockage;
TestCase is: String[] stringArray = new String[14];
Object[][] objectArray = new Object[1][8];
objectArray[0] = (Object[]) stringArray;
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
int _int = 2;
modifTableStockage.supprimerLigne(_int);

statement is: fr.unice.gfarce.interGraph.TableStockage(II)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class fr.unice.gfarce.interGraph.TableStockage
statement code is: TableStockage tableStockage = new TableStockage(41, 41)
statement is: fr.unice.gfarce.interGraph.ModifTableStockage(Lfr/unice/gfarce/interGraph/TableStockage;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class fr.unice.gfarce.interGraph.ModifTableStockage
statement code is: ModifTableStockage modifTableStockage = new ModifTableStockage(arg0)
statement is: supprimerLigne(I)Lfr/unice/gfarce/interGraph/TableStockage; type is: class org.evosuite.testcase.statements.MethodStatement return type class fr.unice.gfarce.interGraph.TableStockage
statement code is: TableStockage supprimerLigne = modifTableStockage.supprimerLigne(8)
test data is: TableStockage tableStockage = new TableStockage(41, 41);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
modifTableStockage.supprimerLigne(8);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        TableStockage tableStockage = new TableStockage("A1", "B1");
        ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
        modifTableStockage.supprimerLigne("C8");
    }
}
statement is: TableStockage tableStockage = new TableStockage("A1", "B1"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: modifTableStockage.supprimerLigne("C8"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: modifTableStockage.supprimerLigne("C8") target is: modifTableStockage method is: supprimerLigne(java.lang.String)
source statement: fr.unice.gfarce.interGraph.ModifTableStockage(Lfr/unice/gfarce/interGraph/TableStockage;)V callee: VariableReference: Statement 1, type fr.unice.gfarce.interGraph.ModifTableStockageindex is: 3
Matched Method is: supprimerLigne(I)Lfr/unice/gfarce/interGraph/TableStockage;
TestCase is: String string = "A1";
String string = "B1";
TableStockage tableStockage = new TableStockage((int) string, (int) string);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
String string = "C8";
((ModifTableStockage) string).supprimerLigne((int) string);

statement is: fr.unice.gfarce.interGraph.TableStockage(II)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class fr.unice.gfarce.interGraph.TableStockage
statement code is: TableStockage tableStockage = new TableStockage(34, 34)
statement is: fr.unice.gfarce.interGraph.ModifTableStockage(Lfr/unice/gfarce/interGraph/TableStockage;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class fr.unice.gfarce.interGraph.ModifTableStockage
statement code is: ModifTableStockage modifTableStockage = new ModifTableStockage(arg0)
statement is: separerColonne(I)Lfr/unice/gfarce/interGraph/TableStockage; type is: class org.evosuite.testcase.statements.MethodStatement return type class fr.unice.gfarce.interGraph.TableStockage
statement code is: TableStockage separerColonne = modifTableStockage.separerColonne(32)
test data is: TableStockage tableStockage = new TableStockage(34, 34);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
modifTableStockage.separerColonne(32);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        TableStockage tableStockage = new TableStockage("Office", "Coffre");
        ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
        modifTableStockage.separerColonne("Chemin de l'entrée");
    }
}
statement is: TableStockage tableStockage = new TableStockage("Office", "Coffre"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: modifTableStockage.separerColonne("Chemin de l'entrée"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: modifTableStockage.separerColonne("Chemin de l'entrée") target is: modifTableStockage method is: separerColonne(java.lang.String)
source statement: fr.unice.gfarce.interGraph.ModifTableStockage(Lfr/unice/gfarce/interGraph/TableStockage;)V callee: VariableReference: Statement 1, type fr.unice.gfarce.interGraph.ModifTableStockageindex is: 3
Matched Method is: separerColonne(I)Lfr/unice/gfarce/interGraph/TableStockage;
TestCase is: String string = "Office";
String string = "Coffre";
TableStockage tableStockage = new TableStockage((int) string, (int) string);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
String string = "Chemin de l'entr\u00E9e";
((ModifTableStockage) string).separerColonne((int) string);

statement is: org.evosuite.testcase.statements.ArrayStatement@d1d752cf type is: class org.evosuite.testcase.statements.ArrayStatement return type class [Ljava.lang.String;
statement code is: String[] stringArray = new String[4]
statement is: org.evosuite.testcase.statements.AssignmentStatement@af4f06ea type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.String
statement code is: stringArray[1] = "X.s\"2"
statement is: org.evosuite.testcase.statements.ArrayStatement@7466bc84 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [[Ljava.lang.Object;
statement code is: Object[][] objectArray = new Object[9][7]
statement is: org.evosuite.testcase.statements.AssignmentStatement@48a49e8 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class [Ljava.lang.Object;
statement code is: objectArray[0] = (Object[]) stringArray
statement is: fr.unice.gfarce.interGraph.TableStockage([Ljava/lang/String;[[Ljava/lang/Object;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class fr.unice.gfarce.interGraph.TableStockage
statement code is: TableStockage tableStockage = new TableStockage(arg0, arg1)
statement is: fr.unice.gfarce.interGraph.ModifTableStockage(Lfr/unice/gfarce/interGraph/TableStockage;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class fr.unice.gfarce.interGraph.ModifTableStockage
statement code is: ModifTableStockage modifTableStockage = new ModifTableStockage(arg0)
statement is: separerColonne(I)Lfr/unice/gfarce/interGraph/TableStockage; type is: class org.evosuite.testcase.statements.MethodStatement return type class fr.unice.gfarce.interGraph.TableStockage
statement code is: TableStockage separerColonne = modifTableStockage.separerColonne(1)
test data is: String[] stringArray = new String[4];
stringArray[1] = "X.s\"2";
Object[][] objectArray = new Object[9][7];
objectArray[0] = (Object[]) stringArray;
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
modifTableStockage.separerColonne(1);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        String[] stringArray = new String[]{ "apple", "banana", "orange", "grape" };
        Object[][] objectArray = new Object[][]{ new Object[]{ "apple", 10, true }, new Object[]{ "banana", 20, false }, new Object[]{ "orange", 30, true }, new Object[]{ "grape", 40, false } };
        TableStockage tableStockage = new TableStockage(stringArray, objectArray);
        ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
        modifTableStockage.separerColonne(1);
    }
}
statement is: String[] stringArray = new String[]{ "apple", "banana", "orange", "grape" }, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [] Ct is: String[] stringArray = new String[4] isAssignment: false Array: new String[]{ "apple", "banana", "orange", "grape" } Elements: ["apple", "banana", "orange", "grape"]
lengths: [4] []
Dimension: [] Ct is: Object[][] objectArray = new Object[9][7] isAssignment: false Array: new String[]{ "apple", "banana", "orange", "grape" } Elements: ["apple", "banana", "orange", "grape"]
lengths: [9, 7] []
statement is: Object[][] objectArray = new Object[][]{ new Object[]{ "apple", 10, true }, new Object[]{ "banana", 20, false }, new Object[]{ "orange", 30, true }, new Object[]{ "grape", 40, false } }, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [] Ct is: String[] stringArray = new String[4] isAssignment: false Array: new Object[][]{ new Object[]{ "apple", 10, true }, new Object[]{ "banana", 20, false }, new Object[]{ "orange", 30, true }, new Object[]{ "grape", 40, false } } Elements: [new Object[]{ "apple", 10, true }, new Object[]{ "banana", 20, false }, new Object[]{ "orange", 30, true }, new Object[]{ "grape", 40, false }]
lengths: [4] []
Dimension: [] Ct is: Object[][] objectArray = new Object[9][7] isAssignment: false Array: new Object[][]{ new Object[]{ "apple", 10, true }, new Object[]{ "banana", 20, false }, new Object[]{ "orange", 30, true }, new Object[]{ "grape", 40, false } } Elements: [new Object[]{ "apple", 10, true }, new Object[]{ "banana", 20, false }, new Object[]{ "orange", 30, true }, new Object[]{ "grape", 40, false }]
lengths: [9, 7] []
statement is: TableStockage tableStockage = new TableStockage(stringArray, objectArray), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: fr.unice.gfarce.interGraph.TableStockage([Ljava/lang/String;[[Ljava/lang/Object;)V
statement is: ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: fr.unice.gfarce.interGraph.ModifTableStockage(Lfr/unice/gfarce/interGraph/TableStockage;)V
statement is: modifTableStockage.separerColonne(1), class spoon.support.reflect.code.CtInvocationImpl
invocation is: modifTableStockage.separerColonne(1) target is: modifTableStockage method is: separerColonne(int)
statement is: org.evosuite.testcase.statements.ArrayStatement@752efbf type is: class org.evosuite.testcase.statements.ArrayStatement return type class [Ljava.lang.String;
statement code is: String[] stringArray = new String[5]
statement is: org.evosuite.testcase.statements.AssignmentStatement@87e2bbb0 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.String
statement code is: stringArray[0] = ""
statement is: org.evosuite.testcase.statements.ArrayStatement@5527043c type is: class org.evosuite.testcase.statements.ArrayStatement return type class [[Ljava.lang.Object;
statement code is: Object[][] objectArray = new Object[5][1]
statement is: org.evosuite.testcase.statements.ArrayStatement@571aaa5f type is: class org.evosuite.testcase.statements.ArrayStatement return type class [Ljava.lang.Object;
statement code is: Object[] objectArray = new Object[5]
statement is: org.evosuite.testcase.statements.AssignmentStatement@a70a641a type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.Object
statement code is: objectArray[0] = (Object) "Rgu9M>$W ]Iw(Cgix"
statement is: org.evosuite.testcase.statements.AssignmentStatement@f3d81c7c type is: class org.evosuite.testcase.statements.AssignmentStatement return type class [Ljava.lang.Object;
statement code is: objectArray[0] = objectArray
statement is: org.evosuite.testcase.statements.AssignmentStatement@341412eb type is: class org.evosuite.testcase.statements.AssignmentStatement return type class [Ljava.lang.Object;
statement code is: objectArray[1] = (Object[]) stringArray
statement is: org.evosuite.testcase.statements.AssignmentStatement@98e68d26 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class [Ljava.lang.Object;
statement code is: objectArray[2] = (Object[]) stringArray
statement is: org.evosuite.testcase.statements.AssignmentStatement@5ba6688e type is: class org.evosuite.testcase.statements.AssignmentStatement return type class [Ljava.lang.Object;
statement code is: objectArray[3] = (Object[]) stringArray
statement is: org.evosuite.testcase.statements.AssignmentStatement@e65b0b type is: class org.evosuite.testcase.statements.AssignmentStatement return type class [Ljava.lang.Object;
statement code is: objectArray[4] = (Object[]) stringArray
statement is: fr.unice.gfarce.interGraph.TableStockage([Ljava/lang/String;[[Ljava/lang/Object;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class fr.unice.gfarce.interGraph.TableStockage
statement code is: TableStockage tableStockage = new TableStockage(arg0, arg1)
statement is: fr.unice.gfarce.interGraph.ModifTableStockage(Lfr/unice/gfarce/interGraph/TableStockage;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class fr.unice.gfarce.interGraph.ModifTableStockage
statement code is: ModifTableStockage modifTableStockage = new ModifTableStockage(arg0)
statement is: separerColonne(I)Lfr/unice/gfarce/interGraph/TableStockage; type is: class org.evosuite.testcase.statements.MethodStatement return type class fr.unice.gfarce.interGraph.TableStockage
statement code is: TableStockage separerColonne = modifTableStockage.separerColonne(0)
test data is: String[] stringArray = new String[5];
stringArray[0] = "";
Object[][] objectArray = new Object[5][1];
Object[] objectArray = new Object[5];
objectArray[0] = (Object) "Rgu9M>$W ]Iw(Cgix";
objectArray[0] = objectArray;
objectArray[1] = (Object[]) stringArray;
objectArray[2] = (Object[]) stringArray;
objectArray[3] = (Object[]) stringArray;
objectArray[4] = (Object[]) stringArray;
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
modifTableStockage.separerColonne(0);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        String[] stringArray = new String[5];
        stringArray[0] = "Apple";
        stringArray[1] = "Banana";
        stringArray[2] = "Orange";
        stringArray[3] = "Grape";
        stringArray[4] = "Mango";
        Object[][] objectArray = new Object[5][1];
        objectArray[0] = ((Object) ("Rgu9M>$W ]Iw(Cgix"));
        objectArray[1] = ((Object[]) (stringArray));
        objectArray[2] = ((Object[]) (stringArray));
        objectArray[3] = ((Object[]) (stringArray));
        objectArray[4] = ((Object[]) (stringArray));
        TableStockage tableStockage = new TableStockage(stringArray, objectArray);
        ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
        modifTableStockage.separerColonne(0);
    }
}
statement is: String[] stringArray = new String[5], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [5] Ct is: String[] stringArray = new String[5] isAssignment: false Array: new String[5] Elements: []
lengths: [5] [5]
Their type are: class [Ljava.lang.String; String[]
statement is: stringArray[0] = "Apple", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"Apple" Ct is: stringArray[0] = "Apple"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[1] = "Banana", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[1] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"Banana" Ct is: stringArray[1] = "Banana"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[2] = "Orange", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[2] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"Orange" Ct is: stringArray[2] = "Orange"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[3] = "Grape", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[3] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"Grape" Ct is: stringArray[3] = "Grape"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[4] = "Mango", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[4] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"Mango" Ct is: stringArray[4] = "Mango"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: Object[][] objectArray = new Object[5][1], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [5, 1] Ct is: String[] stringArray = new String[5] isAssignment: false Array: new Object[5][1] Elements: []
lengths: [5] [5, 1]
Dimension: [5, 1] Ct is: Object[][] objectArray = new Object[5][1] isAssignment: false Array: new Object[5][1] Elements: []
lengths: [5, 1] [5, 1]
Their type are: class [[Ljava.lang.Object; Object[][]
statement is: objectArray[0] = ((Object) ("Rgu9M>$W ]Iw(Cgix")), class spoon.support.reflect.code.CtAssignmentImpl
Assigned : objectArray[0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl Object[] Assignment:((Object) ("Rgu9M>$W ]Iw(Cgix")) Ct is: objectArray[0] = ((Object) ("Rgu9M>$W ]Iw(Cgix"))
target : objectArray class spoon.support.reflect.code.CtLiteralImpl
TestCase Could not be added: org.evosuite.testcase.statements.AssignmentStatement@9ea7d642
statement is: objectArray[1] = ((Object[]) (stringArray)), class spoon.support.reflect.code.CtAssignmentImpl
Assigned : objectArray[1] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl Object[] Assignment:((Object[]) (stringArray)) Ct is: objectArray[1] = ((Object[]) (stringArray))
target : objectArray class spoon.support.reflect.code.CtLiteralImpl
TestCase Could not be added: org.evosuite.testcase.statements.AssignmentStatement@324c5273
statement is: objectArray[2] = ((Object[]) (stringArray)), class spoon.support.reflect.code.CtAssignmentImpl
Assigned : objectArray[2] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl Object[] Assignment:((Object[]) (stringArray)) Ct is: objectArray[2] = ((Object[]) (stringArray))
target : objectArray class spoon.support.reflect.code.CtLiteralImpl
TestCase Could not be added: org.evosuite.testcase.statements.AssignmentStatement@d5926123
statement is: objectArray[3] = ((Object[]) (stringArray)), class spoon.support.reflect.code.CtAssignmentImpl
Assigned : objectArray[3] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl Object[] Assignment:((Object[]) (stringArray)) Ct is: objectArray[3] = ((Object[]) (stringArray))
target : objectArray class spoon.support.reflect.code.CtLiteralImpl
TestCase Could not be added: org.evosuite.testcase.statements.AssignmentStatement@7d4297f6
statement is: objectArray[4] = ((Object[]) (stringArray)), class spoon.support.reflect.code.CtAssignmentImpl
Assigned : objectArray[4] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl Object[] Assignment:((Object[]) (stringArray)) Ct is: objectArray[4] = ((Object[]) (stringArray))
target : objectArray class spoon.support.reflect.code.CtLiteralImpl
TestCase Could not be added: org.evosuite.testcase.statements.AssignmentStatement@7c9165ef
statement is: TableStockage tableStockage = new TableStockage(stringArray, objectArray), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: modifTableStockage.separerColonne(0), class spoon.support.reflect.code.CtInvocationImpl
invocation is: modifTableStockage.separerColonne(0) target is: modifTableStockage method is: separerColonne(int)
source statement: fr.unice.gfarce.interGraph.ModifTableStockage(Lfr/unice/gfarce/interGraph/TableStockage;)V callee: VariableReference: Statement 11, type fr.unice.gfarce.interGraph.ModifTableStockageindex is: 14
Matched Method is: separerColonne(I)Lfr/unice/gfarce/interGraph/TableStockage;
* this is vulnerable: String string = "Rgu9M>$W ]Iw(Cgix"
TestCase is: String[] stringArray = new String[5];
String string = "Apple";
stringArray[0] = string;
String string = "Banana";
stringArray[0] = string;
String string = "Orange";
stringArray[0] = string;
String string = "Grape";
stringArray[0] = string;
String string = "Mango";
stringArray[0] = string;
Object[][] objectArray = new Object[5][1];
String string = "Rgu9M>$W ]Iw(Cgix";
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
int _int = 0;
((ModifTableStockage) objectArray).separerColonne(_int);

statement is: org.evosuite.testcase.statements.ArrayStatement@15005b33 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [Ljava.lang.String;
statement code is: String[] stringArray = new String[8]
statement is: org.evosuite.testcase.statements.AssignmentStatement@793763bf type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.String
statement code is: stringArray[1] = "Envoyer E-Mail a:"
statement is: org.evosuite.testcase.statements.ArrayStatement@d4186dce type is: class org.evosuite.testcase.statements.ArrayStatement return type class [Ljava.lang.String;
statement code is: String[] stringArray = new String[4]
statement is: org.evosuite.testcase.statements.AssignmentStatement@4c778701 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.String
statement code is: stringArray[1] = "e0^a*p/&xbrqc"
statement is: org.evosuite.testcase.statements.ArrayStatement@4e8ab27d type is: class org.evosuite.testcase.statements.ArrayStatement return type class [[Ljava.lang.Object;
statement code is: Object[][] objectArray = new Object[4][4]
statement is: org.evosuite.testcase.statements.AssignmentStatement@70d5a284 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class [Ljava.lang.Object;
statement code is: objectArray[0] = (Object[]) stringArray
statement is: org.evosuite.testcase.statements.AssignmentStatement@4c346829 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class [Ljava.lang.Object;
statement code is: objectArray[1] = (Object[]) stringArray
statement is: fr.unice.gfarce.interGraph.TableStockage([Ljava/lang/String;[[Ljava/lang/Object;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class fr.unice.gfarce.interGraph.TableStockage
statement code is: TableStockage tableStockage = new TableStockage(arg0, arg1)
statement is: fr.unice.gfarce.interGraph.ModifTableStockage(Lfr/unice/gfarce/interGraph/TableStockage;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class fr.unice.gfarce.interGraph.ModifTableStockage
statement code is: ModifTableStockage modifTableStockage = new ModifTableStockage(arg0)
statement is: separerColonne(I)Lfr/unice/gfarce/interGraph/TableStockage; type is: class org.evosuite.testcase.statements.MethodStatement return type class fr.unice.gfarce.interGraph.TableStockage
statement code is: TableStockage separerColonne = modifTableStockage.separerColonne(1)
test data is: String[] stringArray = new String[8];
stringArray[1] = "Envoyer E-Mail a:";
String[] stringArray = new String[4];
stringArray[1] = "e0^a*p/&xbrqc";
Object[][] objectArray = new Object[4][4];
objectArray[0] = (Object[]) stringArray;
objectArray[1] = (Object[]) stringArray;
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
modifTableStockage.separerColonne(1);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        String[] stringArray = new String[8];
        stringArray[1] = "Send E-Mail to:";
        Object[][] objectArray = new Object[4][4];
        objectArray[0] = ((Object[]) (stringArray));
        objectArray[1] = ((Object[]) (stringArray));
        TableStockage tableStockage = new TableStockage(stringArray, objectArray);
        ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
        modifTableStockage.separerColonne(1);
    }
}
statement is: String[] stringArray = new String[8], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [8] Ct is: String[] stringArray = new String[8] isAssignment: false Array: new String[8] Elements: []
lengths: [8] [8]
Their type are: class [Ljava.lang.String; String[]
statement is: stringArray[1] = "Send E-Mail to:", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[1] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"Send E-Mail to:" Ct is: stringArray[1] = "Send E-Mail to:"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: Object[][] objectArray = new Object[4][4], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [4, 4] Ct is: String[] stringArray = new String[8] isAssignment: false Array: new Object[4][4] Elements: []
lengths: [8] [4, 4]
Dimension: [4, 4] Ct is: String[] stringArray = new String[4] isAssignment: false Array: new Object[4][4] Elements: []
lengths: [4] [4, 4]
Dimension: [4, 4] Ct is: Object[][] objectArray = new Object[4][4] isAssignment: false Array: new Object[4][4] Elements: []
lengths: [4, 4] [4, 4]
Their type are: class [[Ljava.lang.Object; Object[][]
statement is: objectArray[0] = ((Object[]) (stringArray)), class spoon.support.reflect.code.CtAssignmentImpl
Assigned : objectArray[0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl Object[] Assignment:((Object[]) (stringArray)) Ct is: objectArray[0] = ((Object[]) (stringArray))
target : objectArray class spoon.support.reflect.code.CtLiteralImpl
TestCase Could not be added: org.evosuite.testcase.statements.AssignmentStatement@6739fd19
statement is: objectArray[1] = ((Object[]) (stringArray)), class spoon.support.reflect.code.CtAssignmentImpl
Assigned : objectArray[1] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl Object[] Assignment:((Object[]) (stringArray)) Ct is: objectArray[1] = ((Object[]) (stringArray))
target : objectArray class spoon.support.reflect.code.CtLiteralImpl
TestCase Could not be added: org.evosuite.testcase.statements.AssignmentStatement@bb1dfc67
statement is: TableStockage tableStockage = new TableStockage(stringArray, objectArray), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: modifTableStockage.separerColonne(1), class spoon.support.reflect.code.CtInvocationImpl
invocation is: modifTableStockage.separerColonne(1) target is: modifTableStockage method is: separerColonne(int)
source statement: fr.unice.gfarce.interGraph.ModifTableStockage(Lfr/unice/gfarce/interGraph/TableStockage;)V callee: VariableReference: Statement 8, type fr.unice.gfarce.interGraph.ModifTableStockageindex is: 5
Matched Method is: separerColonne(I)Lfr/unice/gfarce/interGraph/TableStockage;
TestCase Could not be added: separerColonne(I)Lfr/unice/gfarce/interGraph/TableStockage;
* this is vulnerable: int _int = 1
TestCase is: String[] stringArray = new String[8];
String string = "Send E-Mail to:";
stringArray[1] = string;
Object[][] objectArray = new Object[4][4];
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
int _int = 1;

statement is: fr.unice.gfarce.interGraph.TableStockage()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class fr.unice.gfarce.interGraph.TableStockage
statement code is: TableStockage tableStockage = new TableStockage()
statement is: fr.unice.gfarce.interGraph.ModifTableStockage(Lfr/unice/gfarce/interGraph/TableStockage;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class fr.unice.gfarce.interGraph.ModifTableStockage
statement code is: ModifTableStockage modifTableStockage = new ModifTableStockage(arg0)
statement is: fusionnerColonnes(I)Lfr/unice/gfarce/interGraph/TableStockage; type is: class org.evosuite.testcase.statements.MethodStatement return type class fr.unice.gfarce.interGraph.TableStockage
statement code is: TableStockage fusionnerColonnes = modifTableStockage.fusionnerColonnes(0)
test data is: TableStockage tableStockage = new TableStockage();
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
modifTableStockage.fusionnerColonnes(0);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        TableStockage tableStockage = new TableStockage();
        ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
        modifTableStockage.fusionnerColonnes("ID");
    }
}
statement is: TableStockage tableStockage = new TableStockage(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: modifTableStockage.fusionnerColonnes("ID"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: modifTableStockage.fusionnerColonnes("ID") target is: modifTableStockage method is: fusionnerColonnes(java.lang.String)
source statement: fr.unice.gfarce.interGraph.ModifTableStockage(Lfr/unice/gfarce/interGraph/TableStockage;)V callee: VariableReference: Statement 1, type fr.unice.gfarce.interGraph.ModifTableStockageindex is: 1
Matched Method is: fusionnerColonnes(I)Lfr/unice/gfarce/interGraph/TableStockage;
TestCase is: TableStockage tableStockage = new TableStockage();
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
String string = "ID";
modifTableStockage.fusionnerColonnes((int) string);

statement is: org.evosuite.testcase.statements.ArrayStatement@6fe5e023 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [Ljava.lang.String;
statement code is: String[] stringArray = new String[4]
statement is: org.evosuite.testcase.statements.ArrayStatement@e598111e type is: class org.evosuite.testcase.statements.ArrayStatement return type class [[Ljava.lang.Object;
statement code is: Object[][] objectArray = new Object[1][1]
statement is: org.evosuite.testcase.statements.AssignmentStatement@15628420 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class [Ljava.lang.Object;
statement code is: objectArray[0] = (Object[]) stringArray
statement is: fr.unice.gfarce.interGraph.TableStockage([Ljava/lang/String;[[Ljava/lang/Object;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class fr.unice.gfarce.interGraph.TableStockage
statement code is: TableStockage tableStockage = new TableStockage(arg0, arg1)
statement is: fr.unice.gfarce.interGraph.ModifTableStockage(Lfr/unice/gfarce/interGraph/TableStockage;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class fr.unice.gfarce.interGraph.ModifTableStockage
statement code is: ModifTableStockage modifTableStockage = new ModifTableStockage(arg0)
statement is: Class<Boolean> class = Boolean.class type is: class org.evosuite.testcase.statements.ClassPrimitiveStatement return type java.lang.Class<java.lang.Boolean>
statement code is: Class<Boolean> class = Boolean.class
statement is: setColumnClass(ILjava/lang/Class;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: tableStockage.setColumnClass(0, arg1)
statement is: fusionnerColonnes(I)Lfr/unice/gfarce/interGraph/TableStockage; type is: class org.evosuite.testcase.statements.MethodStatement return type class fr.unice.gfarce.interGraph.TableStockage
statement code is: TableStockage fusionnerColonnes = modifTableStockage.fusionnerColonnes(0)
test data is: String[] stringArray = new String[4];
Object[][] objectArray = new Object[1][1];
objectArray[0] = (Object[]) stringArray;
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
Class<Boolean> class = Boolean.class;
tableStockage.setColumnClass(0, class);
modifTableStockage.fusionnerColonnes(0);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        String[] stringArray = new String[]{ "Apple", "Banana", "Orange" };
        Object[][] objectArray = new Object[][]{ new Object[]{ 1, 2.0, "true" }, new Object[]{ 3, 4.5, "false" } };
        tableStockage.setColumnClass(0, Integer.class);
        tableStockage.setColumnClass(1, Double.class);
        tableStockage.setColumnClass(2, Boolean.class);
        modifTableStockage.fusionnerColonnes(0);
    }
}
statement is: String[] stringArray = new String[]{ "Apple", "Banana", "Orange" }, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [] Ct is: String[] stringArray = new String[4] isAssignment: false Array: new String[]{ "Apple", "Banana", "Orange" } Elements: ["Apple", "Banana", "Orange"]
lengths: [4] []
Dimension: [] Ct is: Object[][] objectArray = new Object[1][1] isAssignment: false Array: new String[]{ "Apple", "Banana", "Orange" } Elements: ["Apple", "Banana", "Orange"]
lengths: [1, 1] []
statement is: Object[][] objectArray = new Object[][]{ new Object[]{ 1, 2.0, "true" }, new Object[]{ 3, 4.5, "false" } }, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [] Ct is: String[] stringArray = new String[4] isAssignment: false Array: new Object[][]{ new Object[]{ 1, 2.0, "true" }, new Object[]{ 3, 4.5, "false" } } Elements: [new Object[]{ 1, 2.0, "true" }, new Object[]{ 3, 4.5, "false" }]
lengths: [4] []
Dimension: [] Ct is: Object[][] objectArray = new Object[1][1] isAssignment: false Array: new Object[][]{ new Object[]{ 1, 2.0, "true" }, new Object[]{ 3, 4.5, "false" } } Elements: [new Object[]{ 1, 2.0, "true" }, new Object[]{ 3, 4.5, "false" }]
lengths: [1, 1] []
statement is: tableStockage.setColumnClass(0, Integer.class), class spoon.support.reflect.code.CtInvocationImpl
invocation is: tableStockage.setColumnClass(0, Integer.class) target is: tableStockage method is: setColumnClass(int,java.lang.Class)
statement is: tableStockage.setColumnClass(1, Double.class), class spoon.support.reflect.code.CtInvocationImpl
invocation is: tableStockage.setColumnClass(1, Double.class) target is: tableStockage method is: setColumnClass(int,java.lang.Class)
statement is: tableStockage.setColumnClass(2, Boolean.class), class spoon.support.reflect.code.CtInvocationImpl
invocation is: tableStockage.setColumnClass(2, Boolean.class) target is: tableStockage method is: setColumnClass(int,java.lang.Class)
statement is: modifTableStockage.fusionnerColonnes(0), class spoon.support.reflect.code.CtInvocationImpl
invocation is: modifTableStockage.fusionnerColonnes(0) target is: modifTableStockage method is: fusionnerColonnes(int)
statement is: org.evosuite.testcase.statements.ArrayStatement@e47fb4c9 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [Ljava.lang.String;
statement code is: String[] stringArray = new String[2]
statement is: org.evosuite.testcase.statements.ArrayStatement@7ab88a02 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [[Ljava.lang.Object;
statement code is: Object[][] objectArray = new Object[4][2]
statement is: fr.unice.gfarce.interGraph.TableStockage([Ljava/lang/String;[[Ljava/lang/Object;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class fr.unice.gfarce.interGraph.TableStockage
statement code is: TableStockage tableStockage = new TableStockage(arg0, arg1)
statement is: fr.unice.gfarce.interGraph.ModifTableStockage(Lfr/unice/gfarce/interGraph/TableStockage;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class fr.unice.gfarce.interGraph.ModifTableStockage
statement code is: ModifTableStockage modifTableStockage = new ModifTableStockage(arg0)
statement is: Class<Boolean> class = Boolean.class type is: class org.evosuite.testcase.statements.ClassPrimitiveStatement return type java.lang.Class<java.lang.Boolean>
statement code is: Class<Boolean> class = Boolean.class
statement is: setColumnClass(ILjava/lang/Class;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: tableStockage.setColumnClass(1, arg1)
statement is: fusionnerColonnes(I)Lfr/unice/gfarce/interGraph/TableStockage; type is: class org.evosuite.testcase.statements.MethodStatement return type class fr.unice.gfarce.interGraph.TableStockage
statement code is: TableStockage fusionnerColonnes = modifTableStockage.fusionnerColonnes(0)
test data is: String[] stringArray = new String[2];
Object[][] objectArray = new Object[4][2];
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
Class<Boolean> class = Boolean.class;
tableStockage.setColumnClass(1, class);
modifTableStockage.fusionnerColonnes(0);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        String[] stringArray = new String[]{ "Apple", "Banana", "Cherry" };
        Object[][] objectArray = new Object[][]{ new Object[]{ "Red", 12 }, new Object[]{ "Yellow", 34 }, new Object[]{ "Red", 67 } };
        TableStockage tableStockage = new TableStockage(stringArray, objectArray);
        ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
        Class<Boolean> $missing$ = Boolean.class;
        tableStockage.setColumnClass(1, $missing$);
        modifTableStockage.fusionnerColonnes(0);
    }
}
statement is: String[] stringArray = new String[]{ "Apple", "Banana", "Cherry" }, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [] Ct is: String[] stringArray = new String[2] isAssignment: false Array: new String[]{ "Apple", "Banana", "Cherry" } Elements: ["Apple", "Banana", "Cherry"]
lengths: [2] []
Dimension: [] Ct is: Object[][] objectArray = new Object[4][2] isAssignment: false Array: new String[]{ "Apple", "Banana", "Cherry" } Elements: ["Apple", "Banana", "Cherry"]
lengths: [4, 2] []
statement is: Object[][] objectArray = new Object[][]{ new Object[]{ "Red", 12 }, new Object[]{ "Yellow", 34 }, new Object[]{ "Red", 67 } }, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [] Ct is: String[] stringArray = new String[2] isAssignment: false Array: new Object[][]{ new Object[]{ "Red", 12 }, new Object[]{ "Yellow", 34 }, new Object[]{ "Red", 67 } } Elements: [new Object[]{ "Red", 12 }, new Object[]{ "Yellow", 34 }, new Object[]{ "Red", 67 }]
lengths: [2] []
Dimension: [] Ct is: Object[][] objectArray = new Object[4][2] isAssignment: false Array: new Object[][]{ new Object[]{ "Red", 12 }, new Object[]{ "Yellow", 34 }, new Object[]{ "Red", 67 } } Elements: [new Object[]{ "Red", 12 }, new Object[]{ "Yellow", 34 }, new Object[]{ "Red", 67 }]
lengths: [4, 2] []
statement is: TableStockage tableStockage = new TableStockage(stringArray, objectArray), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: fr.unice.gfarce.interGraph.TableStockage([Ljava/lang/String;[[Ljava/lang/Object;)V
statement is: ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: fr.unice.gfarce.interGraph.ModifTableStockage(Lfr/unice/gfarce/interGraph/TableStockage;)V
statement is: Class<Boolean> $missing$ = Boolean.class, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: Boolean.class is Boolean
statement is: tableStockage.setColumnClass(1, $missing$), class spoon.support.reflect.code.CtInvocationImpl
invocation is: tableStockage.setColumnClass(1, $missing$) target is: tableStockage method is: setColumnClass(int,java.lang.Class)
statement is: modifTableStockage.fusionnerColonnes(0), class spoon.support.reflect.code.CtInvocationImpl
invocation is: modifTableStockage.fusionnerColonnes(0) target is: modifTableStockage method is: fusionnerColonnes(int)
statement is: org.evosuite.testcase.statements.ArrayStatement@5e800800 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [Ljava.lang.String;
statement code is: String[] stringArray = new String[3]
statement is: org.evosuite.testcase.statements.AssignmentStatement@ec9eb3e3 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.String
statement code is: stringArray[1] = "Envoyer E-Mail a:"
statement is: org.evosuite.testcase.statements.AssignmentStatement@832391a9 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.String
statement code is: stringArray[2] = "Envoyer E-Mail a:"
statement is: org.evosuite.testcase.statements.ArrayStatement@9fd6e7f8 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [[Ljava.lang.Object;
statement code is: Object[][] objectArray = new Object[1][5]
statement is: org.evosuite.testcase.statements.AssignmentStatement@b2c88707 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class [Ljava.lang.Object;
statement code is: objectArray[0] = (Object[]) stringArray
statement is: fr.unice.gfarce.interGraph.TableStockage([Ljava/lang/String;[[Ljava/lang/Object;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class fr.unice.gfarce.interGraph.TableStockage
statement code is: TableStockage tableStockage = new TableStockage(arg0, arg1)
statement is: fr.unice.gfarce.interGraph.ModifTableStockage(Lfr/unice/gfarce/interGraph/TableStockage;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class fr.unice.gfarce.interGraph.ModifTableStockage
statement code is: ModifTableStockage modifTableStockage = new ModifTableStockage(arg0)
statement is: fusionnerColonnes(I)Lfr/unice/gfarce/interGraph/TableStockage; type is: class org.evosuite.testcase.statements.MethodStatement return type class fr.unice.gfarce.interGraph.TableStockage
statement code is: TableStockage fusionnerColonnes = modifTableStockage.fusionnerColonnes(1)
test data is: String[] stringArray = new String[3];
stringArray[1] = "Envoyer E-Mail a:";
stringArray[2] = "Envoyer E-Mail a:";
Object[][] objectArray = new Object[1][5];
objectArray[0] = (Object[]) stringArray;
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
modifTableStockage.fusionnerColonnes(1);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        String[] stringArray = new String[3];
        stringArray[0] = "John Doe";
        stringArray[1] = "Jane Doe";
        stringArray[2] = "Bob Smith";
        Object[][] objectArray = new Object[1][5];
        objectArray[0] = ((Object[]) (stringArray));
        TableStockage tableStockage = new TableStockage(stringArray, objectArray);
        ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
        modifTableStockage.fusionnerColonnes(1);
    }
}
statement is: String[] stringArray = new String[3], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [3] Ct is: String[] stringArray = new String[3] isAssignment: false Array: new String[3] Elements: []
lengths: [3] [3]
Their type are: class [Ljava.lang.String; String[]
statement is: stringArray[0] = "John Doe", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"John Doe" Ct is: stringArray[0] = "John Doe"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[1] = "Jane Doe", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[1] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"Jane Doe" Ct is: stringArray[1] = "Jane Doe"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[2] = "Bob Smith", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[2] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"Bob Smith" Ct is: stringArray[2] = "Bob Smith"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: Object[][] objectArray = new Object[1][5], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [1, 5] Ct is: String[] stringArray = new String[3] isAssignment: false Array: new Object[1][5] Elements: []
lengths: [3] [1, 5]
Dimension: [1, 5] Ct is: Object[][] objectArray = new Object[1][5] isAssignment: false Array: new Object[1][5] Elements: []
lengths: [1, 5] [1, 5]
Their type are: class [[Ljava.lang.Object; Object[][]
statement is: objectArray[0] = ((Object[]) (stringArray)), class spoon.support.reflect.code.CtAssignmentImpl
Assigned : objectArray[0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl Object[] Assignment:((Object[]) (stringArray)) Ct is: objectArray[0] = ((Object[]) (stringArray))
target : objectArray class spoon.support.reflect.code.CtLiteralImpl
TestCase Could not be added: org.evosuite.testcase.statements.AssignmentStatement@1f5da85a
statement is: TableStockage tableStockage = new TableStockage(stringArray, objectArray), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: modifTableStockage.fusionnerColonnes(1), class spoon.support.reflect.code.CtInvocationImpl
invocation is: modifTableStockage.fusionnerColonnes(1) target is: modifTableStockage method is: fusionnerColonnes(int)
source statement: fr.unice.gfarce.interGraph.ModifTableStockage(Lfr/unice/gfarce/interGraph/TableStockage;)V callee: VariableReference: Statement 6, type fr.unice.gfarce.interGraph.ModifTableStockageindex is: 8
Matched Method is: fusionnerColonnes(I)Lfr/unice/gfarce/interGraph/TableStockage;
TestCase is: String[] stringArray = new String[3];
stringArray[1] = "Envoyer E-Mail a:";
String string = "Jane Doe";
stringArray[1] = string;
String string = "Bob Smith";
stringArray[2] = string;
Object[][] objectArray = new Object[1][5];
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
int _int = 1;
((ModifTableStockage) objectArray).fusionnerColonnes(_int);

statement is: org.evosuite.testcase.statements.ArrayStatement@cbf451c3 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [Ljava.lang.String;
statement code is: String[] stringArray = new String[4]
statement is: org.evosuite.testcase.statements.AssignmentStatement@8c33f647 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.String
statement code is: stringArray[1] = "Xs\"2"
statement is: org.evosuite.testcase.statements.AssignmentStatement@36c3d9c6 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.String
statement code is: stringArray[2] = "Xs\"2"
statement is: org.evosuite.testcase.statements.ArrayStatement@8a020ea3 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [[Ljava.lang.Object;
statement code is: Object[][] objectArray = new Object[9][7]
statement is: org.evosuite.testcase.statements.AssignmentStatement@26c7179a type is: class org.evosuite.testcase.statements.AssignmentStatement return type class [Ljava.lang.Object;
statement code is: objectArray[0] = (Object[]) stringArray
statement is: fr.unice.gfarce.interGraph.TableStockage([Ljava/lang/String;[[Ljava/lang/Object;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class fr.unice.gfarce.interGraph.TableStockage
statement code is: TableStockage tableStockage = new TableStockage(arg0, arg1)
statement is: fr.unice.gfarce.interGraph.ModifTableStockage(Lfr/unice/gfarce/interGraph/TableStockage;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class fr.unice.gfarce.interGraph.ModifTableStockage
statement code is: ModifTableStockage modifTableStockage = new ModifTableStockage(arg0)
statement is: fusionnerColonnes(I)Lfr/unice/gfarce/interGraph/TableStockage; type is: class org.evosuite.testcase.statements.MethodStatement return type class fr.unice.gfarce.interGraph.TableStockage
statement code is: TableStockage fusionnerColonnes = modifTableStockage.fusionnerColonnes(1)
test data is: String[] stringArray = new String[4];
stringArray[1] = "Xs\"2";
stringArray[2] = "Xs\"2";
Object[][] objectArray = new Object[9][7];
objectArray[0] = (Object[]) stringArray;
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
modifTableStockage.fusionnerColonnes(1);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        String[] stringArray = new String[4];
        stringArray[0] = "A";
        stringArray[1] = "B";
        stringArray[2] = "C";
        stringArray[3] = "D";
        Object[][] objectArray = new Object[9][7];
        objectArray[0] = ((Object[]) (stringArray));
        TableStockage tableStockage = new TableStockage(stringArray, objectArray);
        ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
        modifTableStockage.fusionnerColonnes(1);
    }
}
statement is: String[] stringArray = new String[4], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [4] Ct is: String[] stringArray = new String[4] isAssignment: false Array: new String[4] Elements: []
lengths: [4] [4]
Their type are: class [Ljava.lang.String; String[]
statement is: stringArray[0] = "A", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"A" Ct is: stringArray[0] = "A"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[1] = "B", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[1] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"B" Ct is: stringArray[1] = "B"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[2] = "C", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[2] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"C" Ct is: stringArray[2] = "C"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[3] = "D", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[3] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"D" Ct is: stringArray[3] = "D"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: Object[][] objectArray = new Object[9][7], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [9, 7] Ct is: String[] stringArray = new String[4] isAssignment: false Array: new Object[9][7] Elements: []
lengths: [4] [9, 7]
Dimension: [9, 7] Ct is: Object[][] objectArray = new Object[9][7] isAssignment: false Array: new Object[9][7] Elements: []
lengths: [9, 7] [9, 7]
Their type are: class [[Ljava.lang.Object; Object[][]
statement is: objectArray[0] = ((Object[]) (stringArray)), class spoon.support.reflect.code.CtAssignmentImpl
Assigned : objectArray[0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl Object[] Assignment:((Object[]) (stringArray)) Ct is: objectArray[0] = ((Object[]) (stringArray))
target : objectArray class spoon.support.reflect.code.CtLiteralImpl
TestCase Could not be added: org.evosuite.testcase.statements.AssignmentStatement@7d47adbb
statement is: TableStockage tableStockage = new TableStockage(stringArray, objectArray), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: modifTableStockage.fusionnerColonnes(1), class spoon.support.reflect.code.CtInvocationImpl
invocation is: modifTableStockage.fusionnerColonnes(1) target is: modifTableStockage method is: fusionnerColonnes(int)
source statement: fr.unice.gfarce.interGraph.ModifTableStockage(Lfr/unice/gfarce/interGraph/TableStockage;)V callee: VariableReference: Statement 6, type fr.unice.gfarce.interGraph.ModifTableStockageindex is: 9
Matched Method is: fusionnerColonnes(I)Lfr/unice/gfarce/interGraph/TableStockage;
TestCase is: String[] stringArray = new String[4];
stringArray[1] = "Xs\"2";
String string = "B";
stringArray[1] = string;
String string = "C";
stringArray[2] = string;
stringArray[1] = string;
Object[][] objectArray = new Object[9][7];
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
int _int = 1;
((ModifTableStockage) stringArray[1]).fusionnerColonnes(_int);

statement is: fr.unice.gfarce.interGraph.TableStockage()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class fr.unice.gfarce.interGraph.TableStockage
statement code is: TableStockage tableStockage = new TableStockage()
statement is: fr.unice.gfarce.interGraph.ModifTableStockage(Lfr/unice/gfarce/interGraph/TableStockage;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class fr.unice.gfarce.interGraph.ModifTableStockage
statement code is: ModifTableStockage modifTableStockage = new ModifTableStockage(arg0)
statement is: selectMail()Lfr/unice/gfarce/interGraph/TableStockage; type is: class org.evosuite.testcase.statements.MethodStatement return type class fr.unice.gfarce.interGraph.TableStockage
statement code is: TableStockage selectMail = modifTableStockage.selectMail()
test data is: TableStockage tableStockage = new TableStockage();
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
modifTableStockage.selectMail();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        TableStockage tableStockage = new TableStockage();
        ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
        modifTableStockage.selectMail();
        // The following values are more descriptive and representative of the situation being tested
        String[] emails = new String[]{ "abc@example.com", "def@example.com", "ghi@example.com" };
        int[] ids = new int[]{ 1, 2, 3 };
        modifTableStockage.insertMail(emails);
        modifTableStockage.updateMail(ids);
    }
}
statement is: TableStockage tableStockage = new TableStockage(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: modifTableStockage.selectMail(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: modifTableStockage.selectMail() target is: modifTableStockage method is: selectMail()
source statement: fr.unice.gfarce.interGraph.ModifTableStockage(Lfr/unice/gfarce/interGraph/TableStockage;)V callee: VariableReference: Statement 1, type fr.unice.gfarce.interGraph.ModifTableStockageindex is: 1
Matched Method is: selectMail()Lfr/unice/gfarce/interGraph/TableStockage;
statement is: // The following values are more descriptive and representative of the situation being tested
String[] emails = new String[]{ "abc@example.com", "def@example.com", "ghi@example.com" }, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
statement is: int[] ids = new int[]{ 1, 2, 3 }, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
statement is: modifTableStockage.insertMail(emails), class spoon.support.reflect.code.CtInvocationImpl
invocation is: modifTableStockage.insertMail(emails) target is: modifTableStockage method is: insertMail(java.lang.String[])
statement is: modifTableStockage.updateMail(ids), class spoon.support.reflect.code.CtInvocationImpl
invocation is: modifTableStockage.updateMail(ids) target is: modifTableStockage method is: updateMail(int[])
TestCase is: TableStockage tableStockage = new TableStockage();
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
modifTableStockage.selectMail();

statement is: org.evosuite.testcase.statements.ArrayStatement@7f65585d type is: class org.evosuite.testcase.statements.ArrayStatement return type class [Ljava.lang.String;
statement code is: String[] stringArray = new String[1]
statement is: org.evosuite.testcase.statements.AssignmentStatement@e10a0478 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.String
statement code is: stringArray[0] = "Envoyer E-Mail a:"
statement is: org.evosuite.testcase.statements.ArrayStatement@6c8feca type is: class org.evosuite.testcase.statements.ArrayStatement return type class [[Ljava.lang.Object;
statement code is: Object[][] objectArray = new Object[0][7]
statement is: fr.unice.gfarce.interGraph.TableStockage([Ljava/lang/String;[[Ljava/lang/Object;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class fr.unice.gfarce.interGraph.TableStockage
statement code is: TableStockage tableStockage = new TableStockage(arg0, arg1)
statement is: fr.unice.gfarce.interGraph.ModifTableStockage(Lfr/unice/gfarce/interGraph/TableStockage;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class fr.unice.gfarce.interGraph.ModifTableStockage
statement code is: ModifTableStockage modifTableStockage = new ModifTableStockage(arg0)
statement is: selectMail()Lfr/unice/gfarce/interGraph/TableStockage; type is: class org.evosuite.testcase.statements.MethodStatement return type class fr.unice.gfarce.interGraph.TableStockage
statement code is: TableStockage selectMail = modifTableStockage.selectMail()
test data is: String[] stringArray = new String[1];
stringArray[0] = "Envoyer E-Mail a:";
Object[][] objectArray = new Object[0][7];
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
modifTableStockage.selectMail();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        String[] stringArray = new String[1];
        stringArray[0] = "Envoyer E-Mail a:";
        Object[][] objectArray = new Object[2][7];
        objectArray[0] = new Object[]{ 1, "John Doe", "john.doe@example.com", "847-555-1234", "Bonjour John!", "Votre E-Mail a été envoyé avec succès!" };
        objectArray[1] = new Object[]{ 2, "Jane Doe", "jane.doe@example.com", "807-555-1234", "Bonjour Jane!", "Votre E-Mail a été envoyé avec succès!" };
        TableStockage tableStockage = new TableStockage(stringArray, objectArray);
        ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
        modifTableStockage.selectMail();
    }
}
statement is: String[] stringArray = new String[1], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [1] Ct is: String[] stringArray = new String[1] isAssignment: false Array: new String[1] Elements: []
lengths: [1] [1]
Their type are: class [Ljava.lang.String; String[]
statement is: stringArray[0] = "Envoyer E-Mail a:", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"Envoyer E-Mail a:" Ct is: stringArray[0] = "Envoyer E-Mail a:"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: Object[][] objectArray = new Object[2][7], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [2, 7] Ct is: String[] stringArray = new String[1] isAssignment: false Array: new Object[2][7] Elements: []
lengths: [1] [2, 7]
Dimension: [2, 7] Ct is: Object[][] objectArray = new Object[0][7] isAssignment: false Array: new Object[2][7] Elements: []
lengths: [0, 7] [2, 7]
Their type are: class [[Ljava.lang.Object; Object[][]
statement is: objectArray[0] = new Object[]{ 1, "John Doe", "john.doe@example.com", "847-555-1234", "Bonjour John!", "Votre E-Mail a été envoyé avec succès!" }, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : objectArray[0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl Object[] Assignment:new Object[]{ 1, "John Doe", "john.doe@example.com", "847-555-1234", "Bonjour John!", "Votre E-Mail a été envoyé avec succès!" } Ct is: objectArray[0] = new Object[]{ 1, "John Doe", "john.doe@example.com", "847-555-1234", "Bonjour John!", "Votre E-Mail a été envoyé avec succès!" }
target : objectArray class spoon.support.reflect.code.CtLiteralImpl
statement is: objectArray[1] = new Object[]{ 2, "Jane Doe", "jane.doe@example.com", "807-555-1234", "Bonjour Jane!", "Votre E-Mail a été envoyé avec succès!" }, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : objectArray[1] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl Object[] Assignment:new Object[]{ 2, "Jane Doe", "jane.doe@example.com", "807-555-1234", "Bonjour Jane!", "Votre E-Mail a été envoyé avec succès!" } Ct is: objectArray[1] = new Object[]{ 2, "Jane Doe", "jane.doe@example.com", "807-555-1234", "Bonjour Jane!", "Votre E-Mail a été envoyé avec succès!" }
target : objectArray class spoon.support.reflect.code.CtLiteralImpl
statement is: TableStockage tableStockage = new TableStockage(stringArray, objectArray), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: modifTableStockage.selectMail(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: modifTableStockage.selectMail() target is: modifTableStockage method is: selectMail()
source statement: fr.unice.gfarce.interGraph.ModifTableStockage(Lfr/unice/gfarce/interGraph/TableStockage;)V callee: VariableReference: Statement 4, type fr.unice.gfarce.interGraph.ModifTableStockageindex is: 5
Matched Method is: selectMail()Lfr/unice/gfarce/interGraph/TableStockage;
TestCase is: String[] stringArray = new String[1];
String string = "Envoyer E-Mail a:";
stringArray[0] = string;
Object[][] objectArray = new Object[0][7];
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
((ModifTableStockage) tableStockage).selectMail();

statement is: org.evosuite.testcase.statements.ArrayStatement@4f69b579 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [Ljava.lang.String;
statement code is: String[] stringArray = new String[3]
statement is: org.evosuite.testcase.statements.AssignmentStatement@5e997f0b type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.String
statement code is: stringArray[0] = " |sZDipI:>hCfgZ"
statement is: org.evosuite.testcase.statements.ArrayStatement@5199cf3b type is: class org.evosuite.testcase.statements.ArrayStatement return type class [[Ljava.lang.Object;
statement code is: Object[][] objectArray = new Object[4][9]
statement is: fr.unice.gfarce.interGraph.TableStockage([Ljava/lang/String;[[Ljava/lang/Object;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class fr.unice.gfarce.interGraph.TableStockage
statement code is: TableStockage tableStockage = new TableStockage(arg0, arg1)
statement is: fr.unice.gfarce.interGraph.ModifTableStockage(Lfr/unice/gfarce/interGraph/TableStockage;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class fr.unice.gfarce.interGraph.ModifTableStockage
statement code is: ModifTableStockage modifTableStockage = new ModifTableStockage(arg0)
statement is: selectMail()Lfr/unice/gfarce/interGraph/TableStockage; type is: class org.evosuite.testcase.statements.MethodStatement return type class fr.unice.gfarce.interGraph.TableStockage
statement code is: TableStockage selectMail = modifTableStockage.selectMail()
test data is: String[] stringArray = new String[3];
stringArray[0] = " |sZDipI:>hCfgZ";
Object[][] objectArray = new Object[4][9];
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
modifTableStockage.selectMail();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        String[] stringArray = new String[3];
        stringArray[0] = "Banana";
        Object[][] objectArray = new Object[4][9];
        objectArray[0][0] = "Apple";
        objectArray[1][5] = 5.6;
        TableStockage tableStockage = new TableStockage(stringArray, objectArray);
        ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
        modifTableStockage.selectMail();
    }
}
statement is: String[] stringArray = new String[3], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [3] Ct is: String[] stringArray = new String[3] isAssignment: false Array: new String[3] Elements: []
lengths: [3] [3]
Their type are: class [Ljava.lang.String; String[]
statement is: stringArray[0] = "Banana", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"Banana" Ct is: stringArray[0] = "Banana"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: Object[][] objectArray = new Object[4][9], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [4, 9] Ct is: String[] stringArray = new String[3] isAssignment: false Array: new Object[4][9] Elements: []
lengths: [3] [4, 9]
Dimension: [4, 9] Ct is: Object[][] objectArray = new Object[4][9] isAssignment: false Array: new Object[4][9] Elements: []
lengths: [4, 9] [4, 9]
Their type are: class [[Ljava.lang.Object; Object[][]
statement is: objectArray[0][0] = "Apple", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : objectArray[0][0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl Object Assignment:"Apple" Ct is: objectArray[0][0] = "Apple"
target : objectArray[0] class spoon.support.reflect.code.CtLiteralImpl
statement is: objectArray[1][5] = 5.6, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : objectArray[1][5] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl Object Assignment:5.6 Ct is: objectArray[1][5] = 5.6
target : objectArray[1] class spoon.support.reflect.code.CtLiteralImpl
statement is: TableStockage tableStockage = new TableStockage(stringArray, objectArray), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: modifTableStockage.selectMail(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: modifTableStockage.selectMail() target is: modifTableStockage method is: selectMail()
source statement: fr.unice.gfarce.interGraph.ModifTableStockage(Lfr/unice/gfarce/interGraph/TableStockage;)V callee: VariableReference: Statement 4, type fr.unice.gfarce.interGraph.ModifTableStockageindex is: 5
Matched Method is: selectMail()Lfr/unice/gfarce/interGraph/TableStockage;
TestCase is: String[] stringArray = new String[3];
String string = "Banana";
stringArray[0] = string;
Object[][] objectArray = new Object[4][9];
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
((ModifTableStockage) tableStockage).selectMail();

statement is: org.evosuite.testcase.statements.ArrayStatement@87c0f340 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [Ljava.lang.String;
statement code is: String[] stringArray = new String[4]
statement is: org.evosuite.testcase.statements.AssignmentStatement@92dc8fb5 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.String
statement code is: stringArray[0] = "Envoyer E-Mail a:"
statement is: org.evosuite.testcase.statements.ArrayStatement@7ad02ead type is: class org.evosuite.testcase.statements.ArrayStatement return type class [[Ljava.lang.Object;
statement code is: Object[][] objectArray = new Object[1][8]
statement is: fr.unice.gfarce.interGraph.TableStockage([Ljava/lang/String;[[Ljava/lang/Object;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class fr.unice.gfarce.interGraph.TableStockage
statement code is: TableStockage tableStockage = new TableStockage(arg0, arg1)
statement is: fr.unice.gfarce.interGraph.ModifTableStockage(Lfr/unice/gfarce/interGraph/TableStockage;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class fr.unice.gfarce.interGraph.ModifTableStockage
statement code is: ModifTableStockage modifTableStockage = new ModifTableStockage(arg0)
statement is: selectMail()Lfr/unice/gfarce/interGraph/TableStockage; type is: class org.evosuite.testcase.statements.MethodStatement return type class fr.unice.gfarce.interGraph.TableStockage
statement code is: TableStockage selectMail = modifTableStockage.selectMail()
test data is: String[] stringArray = new String[4];
stringArray[0] = "Envoyer E-Mail a:";
Object[][] objectArray = new Object[1][8];
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
modifTableStockage.selectMail();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        String[] stringArray = new String[]{ "Envoyer E-Mail a:", "email@example.com", "1234567890", "Envoyer SMS a:" };
        Object[][] objectArray = new Object[][]{ new Object[]{ null, null, null } };
        TableStockage tableStockage = new TableStockage(stringArray, objectArray);
        ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
        modifTableStockage.selectMail();
    }
}
statement is: String[] stringArray = new String[]{ "Envoyer E-Mail a:", "email@example.com", "1234567890", "Envoyer SMS a:" }, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [] Ct is: String[] stringArray = new String[4] isAssignment: false Array: new String[]{ "Envoyer E-Mail a:", "email@example.com", "1234567890", "Envoyer SMS a:" } Elements: ["Envoyer E-Mail a:", "email@example.com", "1234567890", "Envoyer SMS a:"]
lengths: [4] []
Dimension: [] Ct is: Object[][] objectArray = new Object[1][8] isAssignment: false Array: new String[]{ "Envoyer E-Mail a:", "email@example.com", "1234567890", "Envoyer SMS a:" } Elements: ["Envoyer E-Mail a:", "email@example.com", "1234567890", "Envoyer SMS a:"]
lengths: [1, 8] []
statement is: Object[][] objectArray = new Object[][]{ new Object[]{ null, null, null } }, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [] Ct is: String[] stringArray = new String[4] isAssignment: false Array: new Object[][]{ new Object[]{ null, null, null } } Elements: [new Object[]{ null, null, null }]
lengths: [4] []
Dimension: [] Ct is: Object[][] objectArray = new Object[1][8] isAssignment: false Array: new Object[][]{ new Object[]{ null, null, null } } Elements: [new Object[]{ null, null, null }]
lengths: [1, 8] []
statement is: TableStockage tableStockage = new TableStockage(stringArray, objectArray), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: fr.unice.gfarce.interGraph.TableStockage([Ljava/lang/String;[[Ljava/lang/Object;)V
statement is: ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: fr.unice.gfarce.interGraph.ModifTableStockage(Lfr/unice/gfarce/interGraph/TableStockage;)V
statement is: modifTableStockage.selectMail(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: modifTableStockage.selectMail() target is: modifTableStockage method is: selectMail()
statement is: fr.unice.gfarce.interGraph.TableStockage()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class fr.unice.gfarce.interGraph.TableStockage
statement code is: TableStockage tableStockage = new TableStockage()
statement is: fr.unice.gfarce.interGraph.ModifTableStockage(Lfr/unice/gfarce/interGraph/TableStockage;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class fr.unice.gfarce.interGraph.ModifTableStockage
statement code is: ModifTableStockage modifTableStockage = new ModifTableStockage(arg0)
statement is: Class<Boolean> class = Boolean.class type is: class org.evosuite.testcase.statements.ClassPrimitiveStatement return type java.lang.Class<java.lang.Boolean>
statement code is: Class<Boolean> class = Boolean.class
statement is: ajouterColonne(Ljava/lang/String;Ljava/lang/Class;)Lfr/unice/gfarce/interGraph/TableStockage; type is: class org.evosuite.testcase.statements.MethodStatement return type class fr.unice.gfarce.interGraph.TableStockage
statement code is: TableStockage ajouterColonne = modifTableStockage.ajouterColonne("AG~`2%mk", arg1)
statement is: supprimerColonne(I)Lfr/unice/gfarce/interGraph/TableStockage; type is: class org.evosuite.testcase.statements.MethodStatement return type class fr.unice.gfarce.interGraph.TableStockage
statement code is: TableStockage supprimerColonne = modifTableStockage.supprimerColonne(0)
test data is: TableStockage tableStockage = new TableStockage();
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
Class<Boolean> class = Boolean.class;
modifTableStockage.ajouterColonne("AG~`2%mk", class);
modifTableStockage.supprimerColonne(0);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        TableStockage tableStockage = new TableStockage();
        ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
        Class<Boolean> $missing$ = Boolean.class;
        modifTableStockage.ajouterColonne("is_featured", $missing$);// is_featured is a more descriptive name for the column

        modifTableStockage.supprimerColonne("id");// id is not necessary in this case as it's not being used for anything }}

    }
}
statement is: TableStockage tableStockage = new TableStockage(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Class<Boolean> $missing$ = Boolean.class, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: Boolean.class is Boolean
statement is: modifTableStockage.ajouterColonne("is_featured", $missing$)// is_featured is a more descriptive name for the column
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: modifTableStockage.ajouterColonne("is_featured", $missing$)// is_featured is a more descriptive name for the column
 target is: modifTableStockage method is: ajouterColonne(java.lang.String,java.lang.Class)
source statement: fr.unice.gfarce.interGraph.ModifTableStockage(Lfr/unice/gfarce/interGraph/TableStockage;)V callee: VariableReference: Statement 1, type fr.unice.gfarce.interGraph.ModifTableStockageindex is: 1
Matched Method is: ajouterColonne(Ljava/lang/String;Ljava/lang/Class;)Lfr/unice/gfarce/interGraph/TableStockage;
i 1 Parameters size() 1 Num of Method Parameters: 2
statement is: modifTableStockage.supprimerColonne("id")// id is not necessary in this case as it's not being used for anything }}
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: modifTableStockage.supprimerColonne("id")// id is not necessary in this case as it's not being used for anything }}
 target is: modifTableStockage method is: supprimerColonne(java.lang.String)
source statement: fr.unice.gfarce.interGraph.ModifTableStockage(Lfr/unice/gfarce/interGraph/TableStockage;)V callee: VariableReference: Statement 1, type fr.unice.gfarce.interGraph.ModifTableStockageindex is: 1
Matched Method is: supprimerColonne(I)Lfr/unice/gfarce/interGraph/TableStockage;
TestCase is: TableStockage tableStockage = new TableStockage();
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
String string = "is_featured";
Class<Boolean> class = null;
modifTableStockage.ajouterColonne(string, class);
String string = "id";
modifTableStockage.supprimerColonne((int) string);

statement is: org.evosuite.testcase.statements.ArrayStatement@3ab77b15 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [Ljava.lang.String;
statement code is: String[] stringArray = new String[2]
statement is: org.evosuite.testcase.statements.AssignmentStatement@7b1b8489 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.String
statement code is: stringArray[1] = " |sZDi-pI:>hCfgZ"
statement is: org.evosuite.testcase.statements.ArrayStatement@b123e2 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [[Ljava.lang.Object;
statement code is: Object[][] objectArray = new Object[1][1]
statement is: org.evosuite.testcase.statements.AssignmentStatement@dffb1e77 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class [Ljava.lang.Object;
statement code is: objectArray[0] = (Object[]) stringArray
statement is: fr.unice.gfarce.interGraph.TableStockage([Ljava/lang/String;[[Ljava/lang/Object;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class fr.unice.gfarce.interGraph.TableStockage
statement code is: TableStockage tableStockage = new TableStockage(arg0, arg1)
statement is: fr.unice.gfarce.interGraph.ModifTableStockage(Lfr/unice/gfarce/interGraph/TableStockage;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class fr.unice.gfarce.interGraph.ModifTableStockage
statement code is: ModifTableStockage modifTableStockage = new ModifTableStockage(arg0)
statement is: supprimerLigne(I)Lfr/unice/gfarce/interGraph/TableStockage; type is: class org.evosuite.testcase.statements.MethodStatement return type class fr.unice.gfarce.interGraph.TableStockage
statement code is: TableStockage supprimerLigne = modifTableStockage.supprimerLigne(0)
statement is: separerColonne(I)Lfr/unice/gfarce/interGraph/TableStockage; type is: class org.evosuite.testcase.statements.MethodStatement return type class fr.unice.gfarce.interGraph.TableStockage
statement code is: TableStockage separerColonne = modifTableStockage.separerColonne(1)
test data is: String[] stringArray = new String[2];
stringArray[1] = " |sZDi-pI:>hCfgZ";
Object[][] objectArray = new Object[1][1];
objectArray[0] = (Object[]) stringArray;
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
modifTableStockage.supprimerLigne(0);
modifTableStockage.separerColonne(1);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        String[] stringArray = new String[2];
        stringArray[0] = "This is a test string";
        stringArray[1] = "Another test string";
        Object[][] objectArray = new Object[1][1];
        objectArray[0] = ((Object[]) (stringArray));
        TableStockage tableStockage = new TableStockage(stringArray, objectArray);
        ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
        modifTableStockage.supprimerLigne(0);
        modifTableStockage.separerColonne(1);
    }
}
statement is: String[] stringArray = new String[2], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [2] Ct is: String[] stringArray = new String[2] isAssignment: false Array: new String[2] Elements: []
lengths: [2] [2]
Their type are: class [Ljava.lang.String; String[]
statement is: stringArray[0] = "This is a test string", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"This is a test string" Ct is: stringArray[0] = "This is a test string"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[1] = "Another test string", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[1] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"Another test string" Ct is: stringArray[1] = "Another test string"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: Object[][] objectArray = new Object[1][1], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [1, 1] Ct is: String[] stringArray = new String[2] isAssignment: false Array: new Object[1][1] Elements: []
lengths: [2] [1, 1]
Dimension: [1, 1] Ct is: Object[][] objectArray = new Object[1][1] isAssignment: false Array: new Object[1][1] Elements: []
lengths: [1, 1] [1, 1]
Their type are: class [[Ljava.lang.Object; Object[][]
statement is: objectArray[0] = ((Object[]) (stringArray)), class spoon.support.reflect.code.CtAssignmentImpl
Assigned : objectArray[0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl Object[] Assignment:((Object[]) (stringArray)) Ct is: objectArray[0] = ((Object[]) (stringArray))
target : objectArray class spoon.support.reflect.code.CtLiteralImpl
TestCase Could not be added: org.evosuite.testcase.statements.AssignmentStatement@240cc8c
statement is: TableStockage tableStockage = new TableStockage(stringArray, objectArray), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: modifTableStockage.supprimerLigne(0), class spoon.support.reflect.code.CtInvocationImpl
invocation is: modifTableStockage.supprimerLigne(0) target is: modifTableStockage method is: supprimerLigne(int)
source statement: fr.unice.gfarce.interGraph.ModifTableStockage(Lfr/unice/gfarce/interGraph/TableStockage;)V callee: VariableReference: Statement 5, type fr.unice.gfarce.interGraph.ModifTableStockageindex is: 7
Matched Method is: supprimerLigne(I)Lfr/unice/gfarce/interGraph/TableStockage;
statement is: modifTableStockage.separerColonne(1), class spoon.support.reflect.code.CtInvocationImpl
invocation is: modifTableStockage.separerColonne(1) target is: modifTableStockage method is: separerColonne(int)
source statement: fr.unice.gfarce.interGraph.ModifTableStockage(Lfr/unice/gfarce/interGraph/TableStockage;)V callee: VariableReference: Statement 5, type fr.unice.gfarce.interGraph.ModifTableStockageindex is: 7
Matched Method is: separerColonne(I)Lfr/unice/gfarce/interGraph/TableStockage;
TestCase is: String[] stringArray = new String[2];
String string = "This is a test string";
stringArray[1] = string;
String string = "Another test string";
stringArray[1] = string;
Object[][] objectArray = new Object[1][1];
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
int _int = 0;
((ModifTableStockage) objectArray).supprimerLigne(_int);
int _int = 1;
((ModifTableStockage) objectArray).separerColonne(_int);

statement is: fr.unice.gfarce.interGraph.TableStockage(II)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class fr.unice.gfarce.interGraph.TableStockage
statement code is: TableStockage tableStockage = new TableStockage(2138, 0)
statement is: fr.unice.gfarce.interGraph.ModifTableStockage(Lfr/unice/gfarce/interGraph/TableStockage;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class fr.unice.gfarce.interGraph.ModifTableStockage
statement code is: ModifTableStockage modifTableStockage = new ModifTableStockage(arg0)
statement is: supprimerLigne(I)Lfr/unice/gfarce/interGraph/TableStockage; type is: class org.evosuite.testcase.statements.MethodStatement return type class fr.unice.gfarce.interGraph.TableStockage
statement code is: TableStockage supprimerLigne = modifTableStockage.supprimerLigne(0)
test data is: TableStockage tableStockage = new TableStockage(2138, 0);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
modifTableStockage.supprimerLigne(0);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        TableStockage tableStockage = new TableStockage(2138, 0);
        ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
        modifTableStockage.supprimerLigne(0);
    }
}
statement is: TableStockage tableStockage = new TableStockage(2138, 0), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: modifTableStockage.supprimerLigne(0), class spoon.support.reflect.code.CtInvocationImpl
invocation is: modifTableStockage.supprimerLigne(0) target is: modifTableStockage method is: supprimerLigne(int)
source statement: fr.unice.gfarce.interGraph.ModifTableStockage(Lfr/unice/gfarce/interGraph/TableStockage;)V callee: VariableReference: Statement 1, type fr.unice.gfarce.interGraph.ModifTableStockageindex is: 3
Matched Method is: supprimerLigne(I)Lfr/unice/gfarce/interGraph/TableStockage;
TestCase is: int _int = 2138;
int _int = 0;
TableStockage tableStockage = new TableStockage(_int, _int);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
int _int = 0;
((ModifTableStockage) _int).supprimerLigne(_int);

* test suite isTestSuite: 42
Test 0: 
TableStockage tableStockage = new TableStockage();
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
modifTableStockage.colonneMail();
Test 1: 
String[] stringArray = new String[2];
Object[][] objectArray = new Object[1][1];
objectArray[0] = (Object[]) stringArray;
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
Class<Boolean> class = Boolean.class;
modifTableStockage.ajouterColonne("~A", class);
Test 2: 
TableStockage tableStockage = new TableStockage();
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
// Undeclared exception!
try { 
  modifTableStockage.ajouterLigne();
  fail("Expecting exception: HeadlessException");

} catch(HeadlessException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("java.awt.GraphicsEnvironment", e);
}

Test 3: 
String[] stringArray = new String[3];
stringArray[0] = " |sZDipI:>hCfgZ";
Object[][] objectArray = new Object[1][1];
objectArray[0] = (Object[]) stringArray;
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
modifTableStockage.ajouterLigne();
Test 4: 
String[] stringArray = new String[3];
Object[][] objectArray = new Object[4][9];
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
Class<Object> class = Object.class;
tableStockage.setColumnClass(2, class);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
modifTableStockage.ajouterLigne();
Test 5: 
TableStockage tableStockage = new TableStockage(41, 41);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
modifTableStockage.supprimerColonne(8);
Test 6: 
TableStockage tableStockage = new TableStockage(26, 26);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
modifTableStockage.colonneMail();
modifTableStockage.supprimerColonne(26);
Test 7: 
String[] stringArray = new String[14];
Object[][] objectArray = new Object[1][8];
objectArray[0] = (Object[]) stringArray;
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
modifTableStockage.ajouterLigne();
modifTableStockage.supprimerLigne(1);
Test 8: 
TableStockage tableStockage = new TableStockage(41, 41);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
modifTableStockage.supprimerLigne(8);
Test 9: 
TableStockage tableStockage = new TableStockage(34, 34);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
// Undeclared exception!
try { 
  modifTableStockage.separerColonne(32);
  fail("Expecting exception: HeadlessException");

} catch(HeadlessException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("java.awt.GraphicsEnvironment", e);
}

Test 10: 
String[] stringArray = new String[4];
stringArray[1] = "X.s\"2";
Object[][] objectArray = new Object[9][7];
objectArray[0] = (Object[]) stringArray;
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
// Undeclared exception!
try { 
  modifTableStockage.separerColonne(1);
  fail("Expecting exception: HeadlessException");

} catch(HeadlessException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("java.awt.GraphicsEnvironment", e);
}

Test 11: 
String[] stringArray = new String[5];
stringArray[0] = "";
Object[][] objectArray = new Object[5][1];
Object[] objectArray = new Object[5];
objectArray[0] = (Object) "Rgu9M>$W ]Iw(Cgix";
objectArray[0] = objectArray;
objectArray[1] = (Object[]) stringArray;
objectArray[2] = (Object[]) stringArray;
objectArray[3] = (Object[]) stringArray;
objectArray[4] = (Object[]) stringArray;
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
modifTableStockage.separerColonne(0);
Test 12: 
String[] stringArray = new String[8];
stringArray[1] = "Envoyer E-Mail a:";
String[] stringArray = new String[4];
stringArray[1] = "e0^a*p/&xbrqc";
Object[][] objectArray = new Object[4][4];
objectArray[0] = (Object[]) stringArray;
objectArray[1] = (Object[]) stringArray;
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
// Undeclared exception!
try { 
  modifTableStockage.separerColonne(1);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
}

Test 13: 
TableStockage tableStockage = new TableStockage();
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
// Undeclared exception!
try { 
  modifTableStockage.fusionnerColonnes(0);
  fail("Expecting exception: HeadlessException");

} catch(HeadlessException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("java.awt.GraphicsEnvironment", e);
}

Test 14: 
String[] stringArray = new String[4];
Object[][] objectArray = new Object[1][1];
objectArray[0] = (Object[]) stringArray;
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
Class<Boolean> class = Boolean.class;
tableStockage.setColumnClass(0, class);
// Undeclared exception!
try { 
  modifTableStockage.fusionnerColonnes(0);
  fail("Expecting exception: HeadlessException");

} catch(HeadlessException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("java.awt.GraphicsEnvironment", e);
}

Test 15: 
String[] stringArray = new String[2];
Object[][] objectArray = new Object[4][2];
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
Class<Boolean> class = Boolean.class;
tableStockage.setColumnClass(1, class);
// Undeclared exception!
try { 
  modifTableStockage.fusionnerColonnes(0);
  fail("Expecting exception: HeadlessException");

} catch(HeadlessException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("java.awt.GraphicsEnvironment", e);
}

Test 16: 
String[] stringArray = new String[3];
stringArray[1] = "Envoyer E-Mail a:";
stringArray[2] = "Envoyer E-Mail a:";
Object[][] objectArray = new Object[1][5];
objectArray[0] = (Object[]) stringArray;
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
modifTableStockage.fusionnerColonnes(1);
Test 17: 
String[] stringArray = new String[4];
stringArray[1] = "Xs\"2";
stringArray[2] = "Xs\"2";
Object[][] objectArray = new Object[9][7];
objectArray[0] = (Object[]) stringArray;
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
// Undeclared exception!
try { 
  modifTableStockage.fusionnerColonnes(1);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.evosuite.runtime.System", e);
}

Test 18: 
TableStockage tableStockage = new TableStockage();
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
// Undeclared exception!
try { 
  modifTableStockage.selectMail();
  fail("Expecting exception: HeadlessException");

} catch(HeadlessException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("java.awt.GraphicsEnvironment", e);
}

Test 19: 
String[] stringArray = new String[1];
stringArray[0] = "Envoyer E-Mail a:";
Object[][] objectArray = new Object[0][7];
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
modifTableStockage.selectMail();
Test 20: 
String[] stringArray = new String[3];
stringArray[0] = " |sZDipI:>hCfgZ";
Object[][] objectArray = new Object[4][9];
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
// Undeclared exception!
try { 
  modifTableStockage.selectMail();
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
}

Test 21: 
String[] stringArray = new String[4];
stringArray[0] = "Envoyer E-Mail a:";
Object[][] objectArray = new Object[1][8];
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
// Undeclared exception!
try { 
  modifTableStockage.selectMail();
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("fr.unice.gfarce.interGraph.ModifTableStockage", e);
}

Test 22: 
TableStockage tableStockage = new TableStockage();
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
Class<Boolean> class = Boolean.class;
modifTableStockage.ajouterColonne("AG~`2%mk", class);
modifTableStockage.supprimerColonne(0);
Test 23: 
String[] stringArray = new String[2];
stringArray[1] = " |sZDi-pI:>hCfgZ";
Object[][] objectArray = new Object[1][1];
objectArray[0] = (Object[]) stringArray;
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
modifTableStockage.supprimerLigne(0);
modifTableStockage.separerColonne(1);
Test 24: 
TableStockage tableStockage = new TableStockage(2138, 0);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
modifTableStockage.supprimerLigne(0);
Test 25: 
TableStockage tableStockage = new TableStockage();
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
modifTableStockage.colonneMail();
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
modifTableStockage.colonneMail();

Test 26: 
TableStockage tableStockage = new TableStockage();
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
modifTableStockage.ajouterLigne();

Test 27: 
String string = "Prix";
TableStockage tableStockage = new TableStockage((int) "Nom du produit", (int) "Prix");
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
String string = "Prix";
((ModifTableStockage) string).supprimerColonne((int) string);

Test 28: 
String[] stringArray = new String[14];
Object[][] objectArray = new Object[1][8];
objectArray[0] = (Object[]) stringArray;
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
modifTableStockage.supprimerLigne(2);

Test 29: 
String string = "B1";
TableStockage tableStockage = new TableStockage((int) "A1", (int) "B1");
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
String string = "C8";
((ModifTableStockage) string).supprimerLigne((int) string);

Test 30: 
String string = "Coffre";
TableStockage tableStockage = new TableStockage((int) "Office", (int) "Coffre");
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
String string = "Chemin de l'entr\u00E9e";
((ModifTableStockage) string).separerColonne((int) string);

Test 31: 
String[] stringArray = new String[5];
stringArray[0] = "Apple";
stringArray[0] = "Banana";
stringArray[0] = "Orange";
stringArray[0] = "Grape";
stringArray[0] = "Mango";
Object[][] objectArray = new Object[5][1];
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
int _int = 0;
((ModifTableStockage) objectArray).separerColonne(_int);

Test 32: 
String[] stringArray = new String[8];
stringArray[1] = "Send E-Mail to:";
Object[][] objectArray = new Object[4][4];
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);

Test 33: 
TableStockage tableStockage = new TableStockage();
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
modifTableStockage.fusionnerColonnes((int) "ID");

Test 34: 
String[] stringArray = new String[3];
stringArray[1] = "Envoyer E-Mail a:";
stringArray[1] = "Jane Doe";
stringArray[2] = "Bob Smith";
Object[][] objectArray = new Object[1][5];
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
((ModifTableStockage) objectArray).fusionnerColonnes(1);

Test 35: 
String[] stringArray = new String[4];
stringArray[1] = "Xs\"2";
stringArray[1] = "B";
stringArray[2] = "C";
stringArray[1] = "B";
Object[][] objectArray = new Object[9][7];
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
((ModifTableStockage)"B").fusionnerColonnes(1);

Test 36: 
TableStockage tableStockage = new TableStockage();
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
modifTableStockage.selectMail();

Test 37: 
String[] stringArray = new String[1];
stringArray[0] = "Envoyer E-Mail a:";
Object[][] objectArray = new Object[0][7];
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
((ModifTableStockage) tableStockage).selectMail();

Test 38: 
String[] stringArray = new String[3];
stringArray[0] = "Banana";
Object[][] objectArray = new Object[4][9];
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
((ModifTableStockage) tableStockage).selectMail();

Test 39: 
TableStockage tableStockage = new TableStockage();
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
modifTableStockage.ajouterColonne("is_featured", (Class<?>) null);
modifTableStockage.supprimerColonne((int) "id");

Test 40: 
String[] stringArray = new String[2];
stringArray[1] = "This is a test string";
stringArray[1] = "Another test string";
Object[][] objectArray = new Object[1][1];
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
int _int = 0;
((ModifTableStockage) objectArray).supprimerLigne(_int);
int _int = 1;
((ModifTableStockage) objectArray).separerColonne(_int);

Test 41: 
TableStockage tableStockage = new TableStockage(2138, 0);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
((ModifTableStockage)0).supprimerLigne(0);


* Generated after the refinement and before minimization 42 tests with total length 245
* test suite isTestSuite: 42
Test 0: 
TableStockage tableStockage = new TableStockage();
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
modifTableStockage.colonneMail();
Test 1: 
String[] stringArray = new String[2];
Object[][] objectArray = new Object[1][1];
objectArray[0] = (Object[]) stringArray;
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
Class<Boolean> class = Boolean.class;
modifTableStockage.ajouterColonne("~A", class);
Test 2: 
TableStockage tableStockage = new TableStockage();
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
// Undeclared exception!
try { 
  modifTableStockage.ajouterLigne();
  fail("Expecting exception: HeadlessException");

} catch(HeadlessException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("java.awt.GraphicsEnvironment", e);
}

Test 3: 
String[] stringArray = new String[3];
stringArray[0] = " |sZDipI:>hCfgZ";
Object[][] objectArray = new Object[1][1];
objectArray[0] = (Object[]) stringArray;
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
modifTableStockage.ajouterLigne();
Test 4: 
String[] stringArray = new String[3];
Object[][] objectArray = new Object[4][9];
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
Class<Object> class = Object.class;
tableStockage.setColumnClass(2, class);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
modifTableStockage.ajouterLigne();
Test 5: 
TableStockage tableStockage = new TableStockage(41, 41);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
modifTableStockage.supprimerColonne(8);
Test 6: 
TableStockage tableStockage = new TableStockage(26, 26);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
modifTableStockage.colonneMail();
modifTableStockage.supprimerColonne(26);
Test 7: 
String[] stringArray = new String[14];
Object[][] objectArray = new Object[1][8];
objectArray[0] = (Object[]) stringArray;
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
modifTableStockage.ajouterLigne();
modifTableStockage.supprimerLigne(1);
Test 8: 
TableStockage tableStockage = new TableStockage(41, 41);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
modifTableStockage.supprimerLigne(8);
Test 9: 
TableStockage tableStockage = new TableStockage(34, 34);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
// Undeclared exception!
try { 
  modifTableStockage.separerColonne(32);
  fail("Expecting exception: HeadlessException");

} catch(HeadlessException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("java.awt.GraphicsEnvironment", e);
}

Test 10: 
String[] stringArray = new String[4];
stringArray[1] = "X.s\"2";
Object[][] objectArray = new Object[9][7];
objectArray[0] = (Object[]) stringArray;
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
// Undeclared exception!
try { 
  modifTableStockage.separerColonne(1);
  fail("Expecting exception: HeadlessException");

} catch(HeadlessException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("java.awt.GraphicsEnvironment", e);
}

Test 11: 
String[] stringArray = new String[5];
stringArray[0] = "";
Object[][] objectArray = new Object[5][1];
Object[] objectArray = new Object[5];
objectArray[0] = (Object) "Rgu9M>$W ]Iw(Cgix";
objectArray[0] = objectArray;
objectArray[1] = (Object[]) stringArray;
objectArray[2] = (Object[]) stringArray;
objectArray[3] = (Object[]) stringArray;
objectArray[4] = (Object[]) stringArray;
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
modifTableStockage.separerColonne(0);
Test 12: 
String[] stringArray = new String[8];
stringArray[1] = "Envoyer E-Mail a:";
String[] stringArray = new String[4];
stringArray[1] = "e0^a*p/&xbrqc";
Object[][] objectArray = new Object[4][4];
objectArray[0] = (Object[]) stringArray;
objectArray[1] = (Object[]) stringArray;
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
// Undeclared exception!
try { 
  modifTableStockage.separerColonne(1);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
}

Test 13: 
TableStockage tableStockage = new TableStockage();
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
// Undeclared exception!
try { 
  modifTableStockage.fusionnerColonnes(0);
  fail("Expecting exception: HeadlessException");

} catch(HeadlessException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("java.awt.GraphicsEnvironment", e);
}

Test 14: 
String[] stringArray = new String[4];
Object[][] objectArray = new Object[1][1];
objectArray[0] = (Object[]) stringArray;
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
Class<Boolean> class = Boolean.class;
tableStockage.setColumnClass(0, class);
// Undeclared exception!
try { 
  modifTableStockage.fusionnerColonnes(0);
  fail("Expecting exception: HeadlessException");

} catch(HeadlessException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("java.awt.GraphicsEnvironment", e);
}

Test 15: 
String[] stringArray = new String[2];
Object[][] objectArray = new Object[4][2];
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
Class<Boolean> class = Boolean.class;
tableStockage.setColumnClass(1, class);
// Undeclared exception!
try { 
  modifTableStockage.fusionnerColonnes(0);
  fail("Expecting exception: HeadlessException");

} catch(HeadlessException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("java.awt.GraphicsEnvironment", e);
}

Test 16: 
String[] stringArray = new String[3];
stringArray[1] = "Envoyer E-Mail a:";
stringArray[2] = "Envoyer E-Mail a:";
Object[][] objectArray = new Object[1][5];
objectArray[0] = (Object[]) stringArray;
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
modifTableStockage.fusionnerColonnes(1);
Test 17: 
String[] stringArray = new String[4];
stringArray[1] = "Xs\"2";
stringArray[2] = "Xs\"2";
Object[][] objectArray = new Object[9][7];
objectArray[0] = (Object[]) stringArray;
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
// Undeclared exception!
try { 
  modifTableStockage.fusionnerColonnes(1);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.evosuite.runtime.System", e);
}

Test 18: 
TableStockage tableStockage = new TableStockage();
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
// Undeclared exception!
try { 
  modifTableStockage.selectMail();
  fail("Expecting exception: HeadlessException");

} catch(HeadlessException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("java.awt.GraphicsEnvironment", e);
}

Test 19: 
String[] stringArray = new String[1];
stringArray[0] = "Envoyer E-Mail a:";
Object[][] objectArray = new Object[0][7];
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
modifTableStockage.selectMail();
Test 20: 
String[] stringArray = new String[3];
stringArray[0] = " |sZDipI:>hCfgZ";
Object[][] objectArray = new Object[4][9];
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
// Undeclared exception!
try { 
  modifTableStockage.selectMail();
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
}

Test 21: 
String[] stringArray = new String[4];
stringArray[0] = "Envoyer E-Mail a:";
Object[][] objectArray = new Object[1][8];
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
// Undeclared exception!
try { 
  modifTableStockage.selectMail();
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("fr.unice.gfarce.interGraph.ModifTableStockage", e);
}

Test 22: 
TableStockage tableStockage = new TableStockage();
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
Class<Boolean> class = Boolean.class;
modifTableStockage.ajouterColonne("AG~`2%mk", class);
modifTableStockage.supprimerColonne(0);
Test 23: 
String[] stringArray = new String[2];
stringArray[1] = " |sZDi-pI:>hCfgZ";
Object[][] objectArray = new Object[1][1];
objectArray[0] = (Object[]) stringArray;
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
modifTableStockage.supprimerLigne(0);
modifTableStockage.separerColonne(1);
Test 24: 
TableStockage tableStockage = new TableStockage(2138, 0);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
modifTableStockage.supprimerLigne(0);
Test 25: 
TableStockage tableStockage = new TableStockage();
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
modifTableStockage.colonneMail();
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
modifTableStockage.colonneMail();

Test 26: 
TableStockage tableStockage = new TableStockage();
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
modifTableStockage.ajouterLigne();

Test 27: 
String string = "Prix";
TableStockage tableStockage = new TableStockage((int) "Nom du produit", (int) "Prix");
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
String string = "Prix";
((ModifTableStockage) string).supprimerColonne((int) string);

Test 28: 
String[] stringArray = new String[14];
Object[][] objectArray = new Object[1][8];
objectArray[0] = (Object[]) stringArray;
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
modifTableStockage.supprimerLigne(2);

Test 29: 
String string = "B1";
TableStockage tableStockage = new TableStockage((int) "A1", (int) "B1");
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
String string = "C8";
((ModifTableStockage) string).supprimerLigne((int) string);

Test 30: 
String string = "Coffre";
TableStockage tableStockage = new TableStockage((int) "Office", (int) "Coffre");
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
String string = "Chemin de l'entr\u00E9e";
((ModifTableStockage) string).separerColonne((int) string);

Test 31: 
String[] stringArray = new String[5];
stringArray[0] = "Apple";
stringArray[0] = "Banana";
stringArray[0] = "Orange";
stringArray[0] = "Grape";
stringArray[0] = "Mango";
Object[][] objectArray = new Object[5][1];
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
int _int = 0;
((ModifTableStockage) objectArray).separerColonne(_int);

Test 32: 
String[] stringArray = new String[8];
stringArray[1] = "Send E-Mail to:";
Object[][] objectArray = new Object[4][4];
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);

Test 33: 
TableStockage tableStockage = new TableStockage();
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
modifTableStockage.fusionnerColonnes((int) "ID");

Test 34: 
String[] stringArray = new String[3];
stringArray[1] = "Envoyer E-Mail a:";
stringArray[1] = "Jane Doe";
stringArray[2] = "Bob Smith";
Object[][] objectArray = new Object[1][5];
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
((ModifTableStockage) objectArray).fusionnerColonnes(1);

Test 35: 
String[] stringArray = new String[4];
stringArray[1] = "Xs\"2";
stringArray[1] = "B";
stringArray[2] = "C";
stringArray[1] = "B";
Object[][] objectArray = new Object[9][7];
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
((ModifTableStockage)"B").fusionnerColonnes(1);

Test 36: 
TableStockage tableStockage = new TableStockage();
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
modifTableStockage.selectMail();

Test 37: 
String[] stringArray = new String[1];
stringArray[0] = "Envoyer E-Mail a:";
Object[][] objectArray = new Object[0][7];
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
((ModifTableStockage) tableStockage).selectMail();

Test 38: 
String[] stringArray = new String[3];
stringArray[0] = "Banana";
Object[][] objectArray = new Object[4][9];
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
((ModifTableStockage) tableStockage).selectMail();

Test 39: 
TableStockage tableStockage = new TableStockage();
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
modifTableStockage.ajouterColonne("is_featured", (Class<?>) null);
modifTableStockage.supprimerColonne((int) "id");

Test 40: 
String[] stringArray = new String[2];
stringArray[1] = "This is a test string";
stringArray[1] = "Another test string";
Object[][] objectArray = new Object[1][1];
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
int _int = 0;
((ModifTableStockage) objectArray).supprimerLigne(_int);
int _int = 1;
((ModifTableStockage) objectArray).separerColonne(_int);

Test 41: 
TableStockage tableStockage = new TableStockage(2138, 0);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
((ModifTableStockage)0).supprimerLigne(0);


* Minimizing test suite
* test suite isTestSuite: 24
Test 0: 
TableStockage tableStockage = new TableStockage(26, 26);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
modifTableStockage.colonneMail();
modifTableStockage.supprimerColonne(26);
Test 1: 
TableStockage tableStockage = new TableStockage();
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
// Undeclared exception!
try { 
  modifTableStockage.ajouterLigne();
  fail("Expecting exception: HeadlessException");

} catch(HeadlessException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("java.awt.GraphicsEnvironment", e);
}

Test 2: 
String[] stringArray = new String[3];
stringArray[0] = " |sZDipI:>hCfgZ";
Object[][] objectArray = new Object[1][1];
objectArray[0] = (Object[]) stringArray;
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
modifTableStockage.ajouterLigne();
Test 3: 
String[] stringArray = new String[3];
Object[][] objectArray = new Object[4][9];
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
Class<Object> class = Object.class;
tableStockage.setColumnClass(2, class);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
modifTableStockage.ajouterLigne();
Test 4: 
TableStockage tableStockage = new TableStockage(41, 41);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
modifTableStockage.supprimerColonne(8);
Test 5: 
TableStockage tableStockage = new TableStockage(2138, 0);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
modifTableStockage.supprimerLigne(0);
Test 6: 
TableStockage tableStockage = new TableStockage(41, 41);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
modifTableStockage.supprimerLigne(8);
Test 7: 
TableStockage tableStockage = new TableStockage(34, 34);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
// Undeclared exception!
try { 
  modifTableStockage.separerColonne(32);
  fail("Expecting exception: HeadlessException");

} catch(HeadlessException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("java.awt.GraphicsEnvironment", e);
}

Test 8: 
String[] stringArray = new String[4];
stringArray[1] = "X.s\"2";
Object[][] objectArray = new Object[9][7];
objectArray[0] = (Object[]) stringArray;
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
// Undeclared exception!
try { 
  modifTableStockage.separerColonne(1);
  fail("Expecting exception: HeadlessException");

} catch(HeadlessException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("java.awt.GraphicsEnvironment", e);
}

Test 9: 
String[] stringArray = new String[5];
stringArray[0] = "";
Object[][] objectArray = new Object[5][1];
Object[] objectArray = new Object[5];
objectArray[0] = (Object) "Rgu9M>$W ]Iw(Cgix";
objectArray[0] = objectArray;
objectArray[1] = (Object[]) stringArray;
objectArray[2] = (Object[]) stringArray;
objectArray[3] = (Object[]) stringArray;
objectArray[4] = (Object[]) stringArray;
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
modifTableStockage.separerColonne(0);
Test 10: 
String[] stringArray = new String[8];
stringArray[1] = "Envoyer E-Mail a:";
String[] stringArray = new String[4];
stringArray[1] = "e0^a*p/&xbrqc";
Object[][] objectArray = new Object[4][4];
objectArray[0] = (Object[]) stringArray;
objectArray[1] = (Object[]) stringArray;
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
// Undeclared exception!
try { 
  modifTableStockage.separerColonne(1);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
}

Test 11: 
TableStockage tableStockage = new TableStockage();
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
// Undeclared exception!
try { 
  modifTableStockage.fusionnerColonnes(0);
  fail("Expecting exception: HeadlessException");

} catch(HeadlessException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("java.awt.GraphicsEnvironment", e);
}

Test 12: 
String[] stringArray = new String[4];
Object[][] objectArray = new Object[1][1];
objectArray[0] = (Object[]) stringArray;
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
Class<Boolean> class = Boolean.class;
tableStockage.setColumnClass(0, class);
// Undeclared exception!
try { 
  modifTableStockage.fusionnerColonnes(0);
  fail("Expecting exception: HeadlessException");

} catch(HeadlessException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("java.awt.GraphicsEnvironment", e);
}

Test 13: 
String[] stringArray = new String[2];
Object[][] objectArray = new Object[4][2];
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
Class<Boolean> class = Boolean.class;
tableStockage.setColumnClass(1, class);
// Undeclared exception!
try { 
  modifTableStockage.fusionnerColonnes(0);
  fail("Expecting exception: HeadlessException");

} catch(HeadlessException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("java.awt.GraphicsEnvironment", e);
}

Test 14: 
String[] stringArray = new String[3];
stringArray[1] = "Envoyer E-Mail a:";
stringArray[2] = "Envoyer E-Mail a:";
Object[][] objectArray = new Object[1][5];
objectArray[0] = (Object[]) stringArray;
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
modifTableStockage.fusionnerColonnes(1);
Test 15: 
String[] stringArray = new String[4];
stringArray[1] = "Xs\"2";
stringArray[2] = "Xs\"2";
Object[][] objectArray = new Object[9][7];
objectArray[0] = (Object[]) stringArray;
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
// Undeclared exception!
try { 
  modifTableStockage.fusionnerColonnes(1);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.evosuite.runtime.System", e);
}

Test 16: 
TableStockage tableStockage = new TableStockage();
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
// Undeclared exception!
try { 
  modifTableStockage.selectMail();
  fail("Expecting exception: HeadlessException");

} catch(HeadlessException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("java.awt.GraphicsEnvironment", e);
}

Test 17: 
String[] stringArray = new String[1];
stringArray[0] = "Envoyer E-Mail a:";
Object[][] objectArray = new Object[0][7];
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
modifTableStockage.selectMail();
Test 18: 
String[] stringArray = new String[3];
stringArray[0] = " |sZDipI:>hCfgZ";
Object[][] objectArray = new Object[4][9];
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
// Undeclared exception!
try { 
  modifTableStockage.selectMail();
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
}

Test 19: 
String[] stringArray = new String[4];
stringArray[0] = "Envoyer E-Mail a:";
Object[][] objectArray = new Object[1][8];
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
// Undeclared exception!
try { 
  modifTableStockage.selectMail();
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("fr.unice.gfarce.interGraph.ModifTableStockage", e);
}

Test 20: 
String[] stringArray = new String[2];
Object[][] objectArray = new Object[1][1];
objectArray[0] = (Object[]) stringArray;
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
Class<Boolean> class = Boolean.class;
modifTableStockage.ajouterColonne("~A", class);
Test 21: 
TableStockage tableStockage = new TableStockage();
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
modifTableStockage.colonneMail();
Test 22: 
String[] stringArray = new String[2];
stringArray[1] = " |sZDi-pI:>hCfgZ";
Object[][] objectArray = new Object[1][1];
objectArray[0] = (Object[]) stringArray;
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
modifTableStockage.supprimerLigne(0);
modifTableStockage.separerColonne(1);
Test 23: 
TableStockage tableStockage = new TableStockage();
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
Class<Boolean> class = Boolean.class;
modifTableStockage.ajouterColonne("AG~`2%mk", class);
modifTableStockage.supprimerColonne(0);

* Going to analyze the coverage criteria
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 91%
* Total number of goals: 123
* Number of covered goals: 112
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 91%
* Total number of goals: 184
* Number of covered goals: 167
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 41%
* Total number of goals: 56
* Number of covered goals: 23
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 9
* Number of covered goals: 9
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 91%
* Total number of goals: 123
* Number of covered goals: 112
* Generated 24 tests with total length 141
* Resulting test suite's coverage: 83% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 49%
* Compiling and checking tests
Going to execute: removeTestsThatDoNotCompile
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: TableStockage arg0 = new TableStockage(26, 26);
ModifTableStockage modifTableStockage = new ModifTableStockage(arg0);
TableStockage colonneMail = modifTableStockage.colonneMail();
assertEquals(27, colonneMail.getColumnCount());

TableStockage supprimerColonne = modifTableStockage.supprimerColonne(26);
assertEquals(25, supprimerColonne.getRowCount());


** It was a parseable test case! 
refined test name is: testAddColumnAndRemoveColumn
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: TableStockage arg0 = new TableStockage();
ModifTableStockage modifTableStockage = new ModifTableStockage(arg0);
// Undeclared exception!
try { 
  modifTableStockage.ajouterLigne();
  fail("Expecting exception: HeadlessException");

} catch(HeadlessException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("java.awt.GraphicsEnvironment", e);
}


** It was a parseable test case! 
refined test name is: testAjouterLigneThrowsHeadlessException
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: TableStockage arg0 = new TableStockage(41, 41);
ModifTableStockage modifTableStockage = new ModifTableStockage(arg0);
TableStockage supprimerColonne = modifTableStockage.supprimerColonne(8);
assertEquals(40, supprimerColonne.getColumnCount());
assertEquals(40, supprimerColonne.getRowCount());


** It was a parseable test case! 
refined test name is: testSupprimerColonne
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: TableStockage arg0 = new TableStockage(2138, 0);
ModifTableStockage modifTableStockage = new ModifTableStockage(arg0);
TableStockage supprimerLigne = modifTableStockage.supprimerLigne(0);
assertEquals(0, supprimerLigne.getColumnCount());
assertEquals(2136, supprimerLigne.getRowCount());


** It was a parseable test case! 
refined test name is: testSuppressionLigneWithValidIndex
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: TableStockage arg0 = new TableStockage(41, 41);
ModifTableStockage modifTableStockage = new ModifTableStockage(arg0);
TableStockage supprimerLigne = modifTableStockage.supprimerLigne(8);
assertEquals(39, supprimerLigne.getRowCount());


** It was a parseable test case! 
refined test name is: testDeleteLineFromTable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: TableStockage arg0 = new TableStockage(34, 34);
ModifTableStockage modifTableStockage = new ModifTableStockage(arg0);
// Undeclared exception!
try { 
  modifTableStockage.separerColonne(32);
  fail("Expecting exception: HeadlessException");

} catch(HeadlessException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("java.awt.GraphicsEnvironment", e);
}


** It was a parseable test case! 
refined test name is: testSeparerColonnethrowsHeadlessException
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: TableStockage arg0 = new TableStockage();
ModifTableStockage modifTableStockage = new ModifTableStockage(arg0);
// Undeclared exception!
try { 
  modifTableStockage.fusionnerColonnes(0);
  fail("Expecting exception: HeadlessException");

} catch(HeadlessException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("java.awt.GraphicsEnvironment", e);
}


** It was a parseable test case! 
refined test name is: testFusionnerColonnesthrowsHeadlessException
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: TableStockage arg0 = new TableStockage();
ModifTableStockage modifTableStockage = new ModifTableStockage(arg0);
// Undeclared exception!
try { 
  modifTableStockage.selectMail();
  fail("Expecting exception: HeadlessException");

} catch(HeadlessException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("java.awt.GraphicsEnvironment", e);
}


** It was a parseable test case! 
refined test name is: testSelectMailThrowsHeadlessException
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: TableStockage arg0 = new TableStockage();
ModifTableStockage modifTableStockage = new ModifTableStockage(arg0);
TableStockage colonneMail = modifTableStockage.colonneMail();
assertEquals(1, colonneMail.getColumnCount());
assertEquals(0, colonneMail.getRowCount());


** It was a parseable test case! 
refined test name is: testColonneMailReturnsCorrectTableStockageObject
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: TableStockage arg0 = new TableStockage();
ModifTableStockage modifTableStockage = new ModifTableStockage(arg0);
Class<Boolean> arg1 = Boolean.class;
TableStockage ajouterColonne = modifTableStockage.ajouterColonne("AG~`2%mk", arg1);
assertEquals(0, ajouterColonne.getRowCount());
assertEquals(1, ajouterColonne.getColumnCount());

TableStockage supprimerColonne = modifTableStockage.supprimerColonne(0);
assertEquals(0, supprimerColonne.getRowCount());
assertEquals(0, supprimerColonne.getColumnCount());


** It was a parseable test case! 
refined test name is: testAddAndRemoveColumns
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 18:38:24.397 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/tmp/EvoSuite_pathingJar2438403451439826324.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 18:38:24.434 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2438403451439826324.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 18:38:24.502 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/tmp/EvoSuite_pathingJar2438403451439826324.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 18:38:24.507 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2438403451439826324.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
Going to execute: handleTestsThatAreUnstable
[MASTER] 18:38:24.609 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/tmp/EvoSuite_pathingJar2438403451439826324.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 18:38:24.610 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2438403451439826324.jar
* Compiling Tests
[MASTER] 18:38:24.854 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/tmp/EvoSuite_pathingJar2438403451439826324.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 18:38:24.855 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2438403451439826324.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 18:38:24.994 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/tmp/EvoSuite_pathingJar2438403451439826324.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 18:38:24.995 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2438403451439826324.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 18:38:25.063 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/tmp/EvoSuite_pathingJar2438403451439826324.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 18:38:25.064 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2438403451439826324.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 18:38:25.124 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/tmp/EvoSuite_pathingJar2438403451439826324.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 18:38:25.126 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2438403451439826324.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 18:38:25.178 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/tmp/EvoSuite_pathingJar2438403451439826324.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 18:38:25.179 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2438403451439826324.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 18:38:25.229 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/tmp/EvoSuite_pathingJar2438403451439826324.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 18:38:25.230 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2438403451439826324.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 18:38:25.302 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/tmp/EvoSuite_pathingJar2438403451439826324.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 18:38:25.303 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2438403451439826324.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 18:38:25.581 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/tmp/EvoSuite_pathingJar2438403451439826324.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 18:38:25.582 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2438403451439826324.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 18:38:25.818 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/tmp/EvoSuite_pathingJar2438403451439826324.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 18:38:25.819 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2438403451439826324.jar
[MASTER] 18:38:26.230 [logback-1] WARN  TimeController - Already entered in phase: INLINING. This will mess up the timing calculations.
* test suite isTestSuite: 25
Test 0: 
TableStockage tableStockage = new TableStockage();
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
modifTableStockage.colonneMail();
Test 1: 
String[] stringArray = new String[2];
Object[][] objectArray = new Object[1][1];
objectArray[0] = (Object[]) stringArray;
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
Class<Boolean> class = Boolean.class;
modifTableStockage.ajouterColonne("~A", class);
Test 2: 
TableStockage tableStockage = new TableStockage();
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
// Undeclared exception!
try { 
  modifTableStockage.ajouterLigne();
  fail("Expecting exception: HeadlessException");

} catch(HeadlessException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("java.awt.GraphicsEnvironment", e);
}

Test 3: 
String[] stringArray = new String[3];
stringArray[0] = " |sZDipI:>hCfgZ";
Object[][] objectArray = new Object[1][1];
objectArray[0] = (Object[]) stringArray;
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
modifTableStockage.ajouterLigne();
Test 4: 
String[] stringArray = new String[3];
Object[][] objectArray = new Object[4][9];
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
Class<Object> class = Object.class;
tableStockage.setColumnClass(2, class);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
modifTableStockage.ajouterLigne();
Test 5: 
TableStockage tableStockage = new TableStockage(41, 41);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
modifTableStockage.supprimerColonne(8);
Test 6: 
TableStockage tableStockage = new TableStockage(26, 26);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
modifTableStockage.colonneMail();
modifTableStockage.supprimerColonne(26);
Test 7: 
String[] stringArray = new String[14];
Object[][] objectArray = new Object[1][8];
objectArray[0] = (Object[]) stringArray;
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
modifTableStockage.ajouterLigne();
modifTableStockage.supprimerLigne(1);
Test 8: 
TableStockage tableStockage = new TableStockage(41, 41);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
modifTableStockage.supprimerLigne(8);
Test 9: 
TableStockage tableStockage = new TableStockage(34, 34);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
// Undeclared exception!
try { 
  modifTableStockage.separerColonne(32);
  fail("Expecting exception: HeadlessException");

} catch(HeadlessException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("java.awt.GraphicsEnvironment", e);
}

Test 10: 
String[] stringArray = new String[4];
stringArray[1] = "X.s\"2";
Object[][] objectArray = new Object[9][7];
objectArray[0] = (Object[]) stringArray;
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
// Undeclared exception!
try { 
  modifTableStockage.separerColonne(1);
  fail("Expecting exception: HeadlessException");

} catch(HeadlessException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("java.awt.GraphicsEnvironment", e);
}

Test 11: 
String[] stringArray = new String[5];
stringArray[0] = "";
Object[][] objectArray = new Object[5][1];
Object[] objectArray = new Object[5];
objectArray[0] = (Object) "Rgu9M>$W ]Iw(Cgix";
objectArray[0] = objectArray;
objectArray[1] = (Object[]) stringArray;
objectArray[2] = (Object[]) stringArray;
objectArray[3] = (Object[]) stringArray;
objectArray[4] = (Object[]) stringArray;
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
modifTableStockage.separerColonne(0);
Test 12: 
String[] stringArray = new String[8];
stringArray[1] = "Envoyer E-Mail a:";
String[] stringArray = new String[4];
stringArray[1] = "e0^a*p/&xbrqc";
Object[][] objectArray = new Object[4][4];
objectArray[0] = (Object[]) stringArray;
objectArray[1] = (Object[]) stringArray;
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
// Undeclared exception!
try { 
  modifTableStockage.separerColonne(1);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
}

Test 13: 
TableStockage tableStockage = new TableStockage();
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
// Undeclared exception!
try { 
  modifTableStockage.fusionnerColonnes(0);
  fail("Expecting exception: HeadlessException");

} catch(HeadlessException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("java.awt.GraphicsEnvironment", e);
}

Test 14: 
String[] stringArray = new String[4];
Object[][] objectArray = new Object[1][1];
objectArray[0] = (Object[]) stringArray;
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
Class<Boolean> class = Boolean.class;
tableStockage.setColumnClass(0, class);
// Undeclared exception!
try { 
  modifTableStockage.fusionnerColonnes(0);
  fail("Expecting exception: HeadlessException");

} catch(HeadlessException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("java.awt.GraphicsEnvironment", e);
}

Test 15: 
String[] stringArray = new String[2];
Object[][] objectArray = new Object[4][2];
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
Class<Boolean> class = Boolean.class;
tableStockage.setColumnClass(1, class);
// Undeclared exception!
try { 
  modifTableStockage.fusionnerColonnes(0);
  fail("Expecting exception: HeadlessException");

} catch(HeadlessException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("java.awt.GraphicsEnvironment", e);
}

Test 16: 
String[] stringArray = new String[3];
stringArray[1] = "Envoyer E-Mail a:";
stringArray[2] = "Envoyer E-Mail a:";
Object[][] objectArray = new Object[1][5];
objectArray[0] = (Object[]) stringArray;
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
modifTableStockage.fusionnerColonnes(1);
Test 17: 
String[] stringArray = new String[4];
stringArray[1] = "Xs\"2";
stringArray[2] = "Xs\"2";
Object[][] objectArray = new Object[9][7];
objectArray[0] = (Object[]) stringArray;
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
// Undeclared exception!
try { 
  modifTableStockage.fusionnerColonnes(1);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.evosuite.runtime.System", e);
}

Test 18: 
TableStockage tableStockage = new TableStockage();
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
// Undeclared exception!
try { 
  modifTableStockage.selectMail();
  fail("Expecting exception: HeadlessException");

} catch(HeadlessException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("java.awt.GraphicsEnvironment", e);
}

Test 19: 
String[] stringArray = new String[1];
stringArray[0] = "Envoyer E-Mail a:";
Object[][] objectArray = new Object[0][7];
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
modifTableStockage.selectMail();
Test 20: 
String[] stringArray = new String[3];
stringArray[0] = " |sZDipI:>hCfgZ";
Object[][] objectArray = new Object[4][9];
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
// Undeclared exception!
try { 
  modifTableStockage.selectMail();
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
}

Test 21: 
String[] stringArray = new String[4];
stringArray[0] = "Envoyer E-Mail a:";
Object[][] objectArray = new Object[1][8];
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
// Undeclared exception!
try { 
  modifTableStockage.selectMail();
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("fr.unice.gfarce.interGraph.ModifTableStockage", e);
}

Test 22: 
TableStockage tableStockage = new TableStockage();
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
Class<Boolean> class = Boolean.class;
modifTableStockage.ajouterColonne("AG~`2%mk", class);
modifTableStockage.supprimerColonne(0);
Test 23: 
String[] stringArray = new String[2];
stringArray[1] = " |sZDi-pI:>hCfgZ";
Object[][] objectArray = new Object[1][1];
objectArray[0] = (Object[]) stringArray;
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
modifTableStockage.supprimerLigne(0);
modifTableStockage.separerColonne(1);
Test 24: 
TableStockage tableStockage = new TableStockage(2138, 0);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
modifTableStockage.supprimerLigne(0);

* Minimizing test suite
[MASTER] 18:38:30.759 [logback-1] WARN  TimeController - Already entered in phase: MINIMIZATION. This will mess up the timing calculations.
* test suite isTestSuite: 24
Test 0: 
TableStockage tableStockage = new TableStockage();
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
modifTableStockage.colonneMail();
Test 1: 
TableStockage tableStockage = new TableStockage(26, 26);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
modifTableStockage.colonneMail();
modifTableStockage.supprimerColonne(26);
Test 2: 
TableStockage tableStockage = new TableStockage();
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
// Undeclared exception!
try { 
  modifTableStockage.ajouterLigne();
  fail("Expecting exception: HeadlessException");

} catch(HeadlessException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("java.awt.GraphicsEnvironment", e);
}

Test 3: 
String[] stringArray = new String[3];
stringArray[0] = " |sZDipI:>hCfgZ";
Object[][] objectArray = new Object[1][1];
objectArray[0] = (Object[]) stringArray;
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
modifTableStockage.ajouterLigne();
Test 4: 
String[] stringArray = new String[3];
Object[][] objectArray = new Object[4][9];
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
Class<Object> class = Object.class;
tableStockage.setColumnClass(2, class);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
modifTableStockage.ajouterLigne();
Test 5: 
TableStockage tableStockage = new TableStockage(41, 41);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
modifTableStockage.supprimerColonne(8);
Test 6: 
TableStockage tableStockage = new TableStockage(2138, 0);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
modifTableStockage.supprimerLigne(0);
Test 7: 
TableStockage tableStockage = new TableStockage(41, 41);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
modifTableStockage.supprimerLigne(8);
Test 8: 
TableStockage tableStockage = new TableStockage(34, 34);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
// Undeclared exception!
try { 
  modifTableStockage.separerColonne(32);
  fail("Expecting exception: HeadlessException");

} catch(HeadlessException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("java.awt.GraphicsEnvironment", e);
}

Test 9: 
String[] stringArray = new String[4];
stringArray[1] = "X.s\"2";
Object[][] objectArray = new Object[9][7];
objectArray[0] = (Object[]) stringArray;
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
// Undeclared exception!
try { 
  modifTableStockage.separerColonne(1);
  fail("Expecting exception: HeadlessException");

} catch(HeadlessException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("java.awt.GraphicsEnvironment", e);
}

Test 10: 
String[] stringArray = new String[5];
stringArray[0] = "";
Object[][] objectArray = new Object[5][1];
Object[] objectArray = new Object[5];
objectArray[0] = (Object) "Rgu9M>$W ]Iw(Cgix";
objectArray[0] = objectArray;
objectArray[1] = (Object[]) stringArray;
objectArray[2] = (Object[]) stringArray;
objectArray[3] = (Object[]) stringArray;
objectArray[4] = (Object[]) stringArray;
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
modifTableStockage.separerColonne(0);
Test 11: 
String[] stringArray = new String[8];
stringArray[1] = "Envoyer E-Mail a:";
String[] stringArray = new String[4];
stringArray[1] = "e0^a*p/&xbrqc";
Object[][] objectArray = new Object[4][4];
objectArray[0] = (Object[]) stringArray;
objectArray[1] = (Object[]) stringArray;
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
// Undeclared exception!
try { 
  modifTableStockage.separerColonne(1);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
}

Test 12: 
TableStockage tableStockage = new TableStockage();
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
// Undeclared exception!
try { 
  modifTableStockage.fusionnerColonnes(0);
  fail("Expecting exception: HeadlessException");

} catch(HeadlessException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("java.awt.GraphicsEnvironment", e);
}

Test 13: 
String[] stringArray = new String[4];
Object[][] objectArray = new Object[1][1];
objectArray[0] = (Object[]) stringArray;
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
Class<Boolean> class = Boolean.class;
tableStockage.setColumnClass(0, class);
// Undeclared exception!
try { 
  modifTableStockage.fusionnerColonnes(0);
  fail("Expecting exception: HeadlessException");

} catch(HeadlessException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("java.awt.GraphicsEnvironment", e);
}

Test 14: 
String[] stringArray = new String[2];
Object[][] objectArray = new Object[4][2];
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
Class<Boolean> class = Boolean.class;
tableStockage.setColumnClass(1, class);
// Undeclared exception!
try { 
  modifTableStockage.fusionnerColonnes(0);
  fail("Expecting exception: HeadlessException");

} catch(HeadlessException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("java.awt.GraphicsEnvironment", e);
}

Test 15: 
String[] stringArray = new String[3];
stringArray[1] = "Envoyer E-Mail a:";
stringArray[2] = "Envoyer E-Mail a:";
Object[][] objectArray = new Object[1][5];
objectArray[0] = (Object[]) stringArray;
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
modifTableStockage.fusionnerColonnes(1);
Test 16: 
String[] stringArray = new String[4];
stringArray[1] = "Xs\"2";
stringArray[2] = "Xs\"2";
Object[][] objectArray = new Object[9][7];
objectArray[0] = (Object[]) stringArray;
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
// Undeclared exception!
try { 
  modifTableStockage.fusionnerColonnes(1);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.evosuite.runtime.System", e);
}

Test 17: 
TableStockage tableStockage = new TableStockage();
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
// Undeclared exception!
try { 
  modifTableStockage.selectMail();
  fail("Expecting exception: HeadlessException");

} catch(HeadlessException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("java.awt.GraphicsEnvironment", e);
}

Test 18: 
String[] stringArray = new String[1];
stringArray[0] = "Envoyer E-Mail a:";
Object[][] objectArray = new Object[0][7];
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
modifTableStockage.selectMail();
Test 19: 
String[] stringArray = new String[3];
stringArray[0] = " |sZDipI:>hCfgZ";
Object[][] objectArray = new Object[4][9];
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
// Undeclared exception!
try { 
  modifTableStockage.selectMail();
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
}

Test 20: 
String[] stringArray = new String[4];
stringArray[0] = "Envoyer E-Mail a:";
Object[][] objectArray = new Object[1][8];
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
// Undeclared exception!
try { 
  modifTableStockage.selectMail();
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("fr.unice.gfarce.interGraph.ModifTableStockage", e);
}

Test 21: 
TableStockage tableStockage = new TableStockage();
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
Class<Boolean> class = Boolean.class;
modifTableStockage.ajouterColonne("AG~`2%mk", class);
modifTableStockage.supprimerColonne(0);
Test 22: 
String[] stringArray = new String[2];
Object[][] objectArray = new Object[1][1];
objectArray[0] = (Object[]) stringArray;
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
Class<Boolean> class = Boolean.class;
modifTableStockage.ajouterColonne("~A", class);
Test 23: 
String[] stringArray = new String[2];
stringArray[1] = " |sZDi-pI:>hCfgZ";
Object[][] objectArray = new Object[1][1];
objectArray[0] = (Object[]) stringArray;
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
modifTableStockage.supprimerLigne(0);
modifTableStockage.separerColonne(1);

* Going to analyze the coverage criteria
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 91%
* Total number of goals: 123
* Number of covered goals: 112
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 91%
* Total number of goals: 184
* Number of covered goals: 167
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 41%
* Total number of goals: 56
* Number of covered goals: 23
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 9
* Number of covered goals: 9
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 91%
* Total number of goals: 123
* Number of covered goals: 112
* Generated 24 tests with total length 141
* Resulting test suite's coverage: 83% (average coverage for all fitness functions)
* Generating assertions
[MASTER] 18:38:30.854 [logback-1] WARN  TimeController - Already entered in phase: COVERAGE_ANALYSIS. This will mess up the timing calculations.
* Resulting test suite's mutation score: 49%
* Compiling and checking tests
[MASTER] 18:38:39.901 [logback-1] WARN  TimeController - Already entered in phase: ASSERTION_GENERATION. This will mess up the timing calculations.
Going to execute: removeTestsThatDoNotCompile
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 18:38:41.291 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/tmp/EvoSuite_pathingJar2438403451439826324.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 18:38:41.292 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2438403451439826324.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 18:38:41.354 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/tmp/EvoSuite_pathingJar2438403451439826324.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 18:38:41.354 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2438403451439826324.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 18:38:41.390 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/tmp/EvoSuite_pathingJar2438403451439826324.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 18:38:41.391 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2438403451439826324.jar
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 18:38:41.459 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/tmp/EvoSuite_pathingJar2438403451439826324.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 18:38:41.460 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2438403451439826324.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 18:38:41.543 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/tmp/EvoSuite_pathingJar2438403451439826324.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 18:38:41.544 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2438403451439826324.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 18:38:41.615 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/tmp/EvoSuite_pathingJar2438403451439826324.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 18:38:41.616 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2438403451439826324.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 18:38:41.668 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/tmp/EvoSuite_pathingJar2438403451439826324.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 18:38:41.669 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2438403451439826324.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 18:38:41.704 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/tmp/EvoSuite_pathingJar2438403451439826324.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 18:38:41.706 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2438403451439826324.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 18:38:41.743 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/tmp/EvoSuite_pathingJar2438403451439826324.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 18:38:41.744 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2438403451439826324.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 18:38:41.781 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/tmp/EvoSuite_pathingJar2438403451439826324.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 18:38:41.782 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2438403451439826324.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
** Write a test suite: 1 called: 1 to improve: false
** Write a test suite: 2 called: 2 to improve: false
** Write a test suite: 3 called: 3 to improve: false
** Write a test suite: 4 called: 4 to improve: false
** Write a test suite: 5 called: 5 to improve: false
** Write a test suite: 6 called: 6 to improve: false
** Write a test suite: 7 called: 7 to improve: false
** Write a test suite: 8 called: 8 to improve: false
** Write a test suite: 9 called: 9 to improve: false
[MASTER] 18:38:42.119 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/tmp/EvoSuite_pathingJar2438403451439826324.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 18:38:42.120 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2438403451439826324.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
** Write a test suite: 1 called: 1 to improve: false
** Write a test suite: 2 called: 2 to improve: false
** Write a test suite: 3 called: 3 to improve: false
** Write a test suite: 4 called: 4 to improve: false
** Write a test suite: 5 called: 5 to improve: false
** Write a test suite: 6 called: 6 to improve: false
** Write a test suite: 7 called: 7 to improve: false
** Write a test suite: 8 called: 8 to improve: false
** Write a test suite: 9 called: 9 to improve: false
[MASTER] 18:38:42.333 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/tmp/EvoSuite_pathingJar2438403451439826324.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 18:38:42.334 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2438403451439826324.jar
* Writing tests to file
[MASTER] 18:38:42.337 [logback-1] WARN  TimeController - Already entered in phase: JUNIT_CHECK. This will mess up the timing calculations.
* Writing JUnit test case 'ModifTableStockage_ESTest' to evosuite-tests
* Writing JUnit test case 'ModifTableStockage_Original_ESTest' to evosuite-tests
** Write a test suite: 0 called: 0 to improve: false
** Write a test suite: 1 called: 1 to improve: false
** Write a test suite: 2 called: 2 to improve: false
** Write a test suite: 3 called: 3 to improve: false
** Write a test suite: 4 called: 4 to improve: false
** Write a test suite: 5 called: 5 to improve: false
** Write a test suite: 6 called: 6 to improve: false
** Write a test suite: 7 called: 7 to improve: false
** Write a test suite: 8 called: 8 to improve: false
** Write a test suite: 9 called: 9 to improve: false
* Done!

* Computation finished
