* EvoSuite 1.0.0-SNAPSHOT
* Going to generate test cases for class: fr.unice.gfarce.interGraph.ModifTableStockage
* Starting Client-0
* Properties loaded from /home/roham/Results-Utestgen/dataset/SF110-new-res/8_gfarcegestionfa/evosuite-files/evosuite.properties
* Connecting to master process on port 14357
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 08:47:25.728 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 08:47:25.732 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 08:47:25.733 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 08:47:27.381 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 08:47:27.473 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 08:47:27.474 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
[MASTER] 08:47:29.582 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.ZoneId
[MASTER] 08:47:30.375 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.Temporal
[MASTER] 08:47:30.377 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAccessor
[MASTER] 08:47:30.378 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalField
[MASTER] 08:47:30.384 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalUnit
[MASTER] 08:47:30.386 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAmount
[MASTER] 08:47:30.387 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.Clock
[MASTER] 08:47:30.389 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalQuery
[MASTER] 08:47:30.390 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAdjuster
[MASTER] 08:47:30.599 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.Chronology
[MASTER] 08:47:30.629 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.Era
* Finished analyzing classpath
* Generating tests for class fr.unice.gfarce.interGraph.ModifTableStockage
* Test criteria:
  - Branch Coverage
  - Line Coverage
  - Method-Output Coverage
  - Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 495
* Using seed 1710319642300
* Starting evolution
[Progress:>                             0%] [Cov:>                                  0%]* Initial Number of Goals in DynaMOSA = 115 / 495
[Progress:>                             0%] [Cov:==============>                    41%][Progress:>                             0%] [Cov:==================>                53%][Progress:>                             1%] [Cov:===================>               57%][Progress:>                             1%] [Cov:=====================>             60%][Progress:>                             2%] [Cov:=====================>             61%][Progress:>                             2%] [Cov:=====================>             61%][Progress:>                             2%] [Cov:=====================>             61%][Progress:>                             2%] [Cov:=====================>             61%][Progress:>                             2%] [Cov:=====================>             61%][Progress:>                             2%] [Cov:=====================>             61%][Progress:>                             3%] [Cov:=====================>             61%][Progress:>                             3%] [Cov:=====================>             62%][Progress:>                             3%] [Cov:=====================>             62%][Progress:>                             3%] [Cov:=========================>         74%][Progress:>                             3%] [Cov:=========================>         74%][Progress:=>                            4%] [Cov:=========================>         74%][Progress:=>                            4%] [Cov:=========================>         74%][Progress:=>                            4%] [Cov:=========================>         74%][Progress:=>                            5%] [Cov:=========================>         74%][Progress:=>                            5%] [Cov:=========================>         74%][Progress:=>                            5%] [Cov:=========================>         74%][Progress:=>                            5%] [Cov:=========================>         74%][Progress:=>                            5%] [Cov:=========================>         74%][Progress:=>                            5%] [Cov:=========================>         74%][Progress:=>                            6%] [Cov:=========================>         74%][Progress:=>                            6%] [Cov:=========================>         74%][Progress:=>                            6%] [Cov:==========================>        75%][Progress:=>                            6%] [Cov:==========================>        75%][Progress:=>                            6%] [Cov:==========================>        75%][Progress:=>                            6%] [Cov:==========================>        75%][Progress:=>                            6%] [Cov:==========================>        75%][Progress:==>                           7%] [Cov:==========================>        75%][Progress:==>                           7%] [Cov:==========================>        75%][Progress:==>                           7%] [Cov:==========================>        75%][Progress:==>                           7%] [Cov:==========================>        75%][Progress:==>                           7%] [Cov:==========================>        75%][Progress:==>                           7%] [Cov:==========================>        75%][Progress:==>                           7%] [Cov:==========================>        75%][Progress:==>                           8%] [Cov:==========================>        75%][Progress:==>                           8%] [Cov:==========================>        75%][Progress:==>                           8%] [Cov:==========================>        75%][Progress:==>                           8%] [Cov:==========================>        75%][Progress:==>                           8%] [Cov:==========================>        75%][Progress:==>                           8%] [Cov:==========================>        75%][Progress:==>                           9%] [Cov:===========================>       78%][Progress:==>                           9%] [Cov:===========================>       78%][Progress:==>                           9%] [Cov:===========================>       78%][Progress:==>                           9%] [Cov:===========================>       78%][Progress:==>                           9%] [Cov:===========================>       79%][Progress:==>                           9%] [Cov:===========================>       79%][Progress:==>                           9%] [Cov:===========================>       79%][Progress:===>                          11%] [Cov:===========================>       79%][Progress:===>                          11%] [Cov:===========================>       79%][Progress:===>                          11%] [Cov:===========================>       79%][Progress:===>                          11%] [Cov:===========================>       79%][Progress:===>                          11%] [Cov:===========================>       79%][Progress:===>                          11%] [Cov:===========================>       79%][Progress:===>                          11%] [Cov:===========================>       79%][Progress:===>                          12%] [Cov:===========================>       79%][Progress:===>                          12%] [Cov:===========================>       79%][Progress:===>                          12%] [Cov:===========================>       79%][Progress:===>                          12%] [Cov:===========================>       79%][Progress:===>                          12%] [Cov:===========================>       79%][Progress:===>                          13%] [Cov:===========================>       79%][Progress:===>                          13%] [Cov:===========================>       79%][Progress:===>                          13%] [Cov:===========================>       79%][Progress:===>                          13%] [Cov:===========================>       79%][Progress:===>                          13%] [Cov:===========================>       79%][Progress:===>                          13%] [Cov:===========================>       79%][Progress:===>                          13%] [Cov:===========================>       79%][Progress:====>                         14%] [Cov:===========================>       79%][Progress:====>                         14%] [Cov:===========================>       79%][Progress:====>                         14%] [Cov:===========================>       79%][Progress:====>                         14%] [Cov:===========================>       79%][Progress:====>                         14%] [Cov:===========================>       79%][Progress:====>                         14%] [Cov:===========================>       79%][Progress:====>                         14%] [Cov:===========================>       79%][Progress:====>                         15%] [Cov:===========================>       79%][Progress:====>                         15%] [Cov:===========================>       79%][Progress:====>                         15%] [Cov:===========================>       79%][Progress:====>                         15%] [Cov:===========================>       79%][Progress:====>                         15%] [Cov:===========================>       79%][Progress:====>                         15%] [Cov:============================>      80%][Progress:====>                         15%] [Cov:============================>      80%][Progress:====>                         16%] [Cov:============================>      80%][Progress:====>                         16%] [Cov:============================>      80%][Progress:====>                         16%] [Cov:============================>      80%][Progress:====>                         16%] [Cov:============================>      80%][Progress:====>                         16%] [Cov:============================>      80%][Progress:====>                         16%] [Cov:============================>      80%][Progress:=====>                        17%] [Cov:============================>      80%][Progress:=====>                        17%] [Cov:============================>      80%][Progress:=====>                        17%] [Cov:============================>      80%][Progress:=====>                        17%] [Cov:============================>      80%][Progress:=====>                        17%] [Cov:============================>      80%][Progress:=====>                        17%] [Cov:============================>      80%][Progress:=====>                        17%] [Cov:============================>      80%][Progress:=====>                        17%] [Cov:============================>      80%][Progress:=====>                        18%] [Cov:============================>      80%][Progress:=====>                        18%] [Cov:============================>      80%][Progress:=====>                        18%] [Cov:============================>      80%][Progress:=====>                        18%] [Cov:============================>      80%][Progress:=====>                        18%] [Cov:============================>      80%][Progress:=====>                        19%] [Cov:============================>      80%][Progress:=====>                        19%] [Cov:============================>      80%][Progress:=====>                        19%] [Cov:============================>      80%][Progress:=====>                        19%] [Cov:============================>      80%][Progress:=====>                        19%] [Cov:============================>      80%][Progress:======>                       20%] [Cov:============================>      80%][Progress:======>                       20%] [Cov:============================>      80%][Progress:======>                       20%] [Cov:============================>      80%][Progress:======>                       20%] [Cov:============================>      80%][Progress:======>                       20%] [Cov:============================>      80%][Progress:======>                       21%] [Cov:============================>      80%][Progress:======>                       21%] [Cov:============================>      80%][Progress:======>                       21%] [Cov:============================>      80%][Progress:======>                       21%] [Cov:============================>      80%][Progress:======>                       21%] [Cov:============================>      80%][Progress:======>                       21%] [Cov:============================>      80%][Progress:======>                       22%] [Cov:============================>      80%][Progress:======>                       22%] [Cov:============================>      80%][Progress:======>                       22%] [Cov:============================>      80%][Progress:======>                       22%] [Cov:============================>      80%][Progress:======>                       22%] [Cov:============================>      80%][Progress:======>                       22%] [Cov:============================>      80%][Progress:======>                       22%] [Cov:============================>      80%][Progress:======>                       23%] [Cov:============================>      80%][Progress:======>                       23%] [Cov:============================>      80%][Progress:======>                       23%] [Cov:============================>      80%][Progress:======>                       23%] [Cov:============================>      80%][Progress:=======>                      24%] [Cov:============================>      80%][Progress:=======>                      24%] [Cov:============================>      80%][Progress:=======>                      24%] [Cov:============================>      80%][Progress:=======>                      24%] [Cov:============================>      80%][Progress:=======>                      24%] [Cov:============================>      80%][Progress:=======>                      24%] [Cov:============================>      80%][Progress:=======>                      25%] [Cov:============================>      80%][Progress:=======>                      25%] [Cov:============================>      80%][Progress:=======>                      25%] [Cov:============================>      80%][Progress:=======>                      25%] [Cov:============================>      80%][Progress:=======>                      25%] [Cov:============================>      80%][Progress:=======>                      26%] [Cov:============================>      80%][Progress:=======>                      26%] [Cov:============================>      80%][Progress:=======>                      26%] [Cov:============================>      80%][Progress:=======>                      26%] [Cov:============================>      80%][Progress:=======>                      26%] [Cov:============================>      80%][Progress:=======>                      26%] [Cov:============================>      80%][Progress:========>                     27%] [Cov:============================>      80%][Progress:========>                     27%] [Cov:============================>      80%][Progress:========>                     27%] [Cov:============================>      80%][Progress:========>                     27%] [Cov:============================>      80%][Progress:========>                     27%] [Cov:============================>      80%][Progress:========>                     27%] [Cov:============================>      80%][Progress:========>                     28%] [Cov:============================>      80%][Progress:========>                     28%] [Cov:============================>      80%][Progress:========>                     28%] [Cov:============================>      80%][Progress:========>                     28%] [Cov:============================>      80%][Progress:========>                     28%] [Cov:============================>      80%][Progress:========>                     28%] [Cov:============================>      80%][Progress:========>                     29%] [Cov:============================>      80%][Progress:========>                     29%] [Cov:============================>      80%][Progress:========>                     29%] [Cov:============================>      80%][Progress:========>                     29%] [Cov:============================>      80%][Progress:========>                     29%] [Cov:============================>      80%][Progress:========>                     29%] [Cov:============================>      80%][Progress:=========>                    30%] [Cov:============================>      80%][Progress:=========>                    30%] [Cov:============================>      80%][Progress:=========>                    30%] [Cov:============================>      80%][Progress:=========>                    30%] [Cov:============================>      80%][Progress:=========>                    30%] [Cov:============================>      80%][Progress:=========>                    31%] [Cov:============================>      80%][Progress:=========>                    31%] [Cov:============================>      80%][Progress:=========>                    31%] [Cov:============================>      80%][Progress:=========>                    31%] [Cov:============================>      80%][Progress:=========>                    31%] [Cov:============================>      80%][Progress:=========>                    31%] [Cov:============================>      80%][Progress:=========>                    32%] [Cov:============================>      80%][Progress:=========>                    32%] [Cov:============================>      80%][Progress:=========>                    32%] [Cov:============================>      80%][Progress:=========>                    32%] [Cov:============================>      80%][Progress:=========>                    32%] [Cov:============================>      80%][Progress:=========>                    33%] [Cov:============================>      80%][Progress:=========>                    33%] [Cov:============================>      80%][Progress:=========>                    33%] [Cov:============================>      80%][Progress:=========>                    33%] [Cov:============================>      80%][Progress:=========>                    33%] [Cov:============================>      80%][Progress:=========>                    33%] [Cov:============================>      80%][Progress:=========>                    33%] [Cov:============================>      80%][Progress:==========>                   34%] [Cov:============================>      80%][Progress:==========>                   34%] [Cov:============================>      80%][Progress:==========>                   34%] [Cov:============================>      80%][Progress:==========>                   34%] [Cov:============================>      80%][Progress:==========>                   34%] [Cov:============================>      80%][Progress:==========>                   34%] [Cov:============================>      80%][Progress:==========>                   34%] [Cov:============================>      80%][Progress:==========>                   34%] [Cov:============================>      80%][Progress:==========>                   35%] [Cov:============================>      80%][Progress:==========>                   35%] [Cov:============================>      80%][Progress:==========>                   36%] [Cov:============================>      80%][Progress:==========>                   36%] [Cov:============================>      80%][Progress:===========>                  37%] [Cov:============================>      80%][Progress:===========>                  37%] [Cov:============================>      80%][Progress:===========>                  37%] [Cov:============================>      80%][Progress:===========>                  37%] [Cov:============================>      80%][Progress:===========>                  38%] [Cov:============================>      80%][Progress:===========>                  38%] [Cov:============================>      80%][Progress:===========>                  38%] [Cov:============================>      80%][Progress:===========>                  38%] [Cov:============================>      80%][Progress:===========>                  38%] [Cov:============================>      80%][Progress:===========>                  39%] [Cov:============================>      80%][Progress:===========>                  39%] [Cov:============================>      80%][Progress:===========>                  39%] [Cov:============================>      80%][Progress:===========>                  39%] [Cov:============================>      80%][Progress:===========>                  39%] [Cov:============================>      80%][Progress:===========>                  39%] [Cov:============================>      80%][Progress:============>                 40%] [Cov:============================>      80%][Progress:============>                 40%] [Cov:============================>      80%][Progress:============>                 40%] [Cov:============================>      80%][Progress:============>                 40%] [Cov:============================>      80%][Progress:============>                 40%] [Cov:============================>      80%][Progress:============>                 40%] [Cov:============================>      80%][Progress:============>                 41%] [Cov:============================>      80%][Progress:============>                 41%] [Cov:============================>      80%][Progress:============>                 41%] [Cov:============================>      80%][Progress:============>                 41%] [Cov:============================>      80%][Progress:============>                 41%] [Cov:============================>      80%][Progress:============>                 42%] [Cov:============================>      80%][Progress:============>                 42%] [Cov:============================>      80%][Progress:============>                 42%] [Cov:============================>      80%][Progress:============>                 42%] [Cov:============================>      80%][Progress:============>                 42%] [Cov:============================>      80%][Progress:============>                 43%] [Cov:============================>      80%][Progress:============>                 43%] [Cov:============================>      80%][Progress:============>                 43%] [Cov:============================>      80%][Progress:============>                 43%] [Cov:============================>      80%][Progress:=============>                44%] [Cov:============================>      80%][Progress:=============>                44%] [Cov:============================>      80%][Progress:=============>                44%] [Cov:============================>      80%][Progress:=============>                44%] [Cov:============================>      80%][Progress:=============>                44%] [Cov:============================>      80%][Progress:=============>                45%] [Cov:============================>      80%][Progress:=============>                45%] [Cov:============================>      80%][Progress:=============>                45%] [Cov:============================>      80%][Progress:=============>                45%] [Cov:============================>      80%][Progress:=============>                45%] [Cov:============================>      80%][Progress:=============>                46%] [Cov:============================>      80%][Progress:=============>                46%] [Cov:============================>      80%][Progress:=============>                46%] [Cov:============================>      80%][Progress:=============>                46%] [Cov:============================>      80%][Progress:=============>                46%] [Cov:============================>      80%][Progress:=============>                46%] [Cov:============================>      80%][Progress:==============>               47%] [Cov:============================>      80%][Progress:==============>               47%] [Cov:============================>      80%][Progress:==============>               47%] [Cov:============================>      80%][Progress:==============>               47%] [Cov:============================>      80%][Progress:==============>               47%] [Cov:============================>      80%][Progress:==============>               47%] [Cov:============================>      80%][Progress:==============>               47%] [Cov:============================>      80%][Progress:==============>               47%] [Cov:============================>      80%][Progress:==============>               48%] [Cov:============================>      80%][Progress:==============>               48%] [Cov:============================>      80%][Progress:==============>               48%] [Cov:============================>      80%][Progress:==============>               48%] [Cov:============================>      80%][Progress:==============>               48%] [Cov:============================>      80%][Progress:==============>               48%] [Cov:============================>      80%][Progress:==============>               48%] [Cov:============================>      80%][Progress:==============>               48%] [Cov:============================>      80%][Progress:==============>               49%] [Cov:============================>      80%][Progress:==============>               49%] [Cov:============================>      80%][Progress:==============>               49%] [Cov:============================>      80%][Progress:==============>               49%] [Cov:============================>      80%][Progress:==============>               49%] [Cov:============================>      80%][Progress:==============>               49%] [Cov:============================>      80%][Progress:==============>               49%] [Cov:============================>      80%][Progress:===============>              50%] [Cov:============================>      80%][Progress:===============>              50%] [Cov:============================>      80%][Progress:===============>              50%] [Cov:============================>      80%][Progress:===============>              50%] [Cov:============================>      80%][Progress:===============>              50%] [Cov:============================>      80%][Progress:===============>              50%] [Cov:============================>      80%][Progress:===============>              50%] [Cov:============================>      80%][Progress:===============>              50%] [Cov:============================>      80%][Progress:===============>              50%] [Cov:============================>      80%][Progress:===============>              51%] [Cov:============================>      80%][Progress:===============>              51%] [Cov:============================>      80%][Progress:===============>              51%] [Cov:============================>      80%][Progress:===============>              51%] [Cov:============================>      80%][Progress:===============>              51%] [Cov:============================>      80%][Progress:===============>              51%] [Cov:============================>      80%][Progress:===============>              51%] [Cov:============================>      81%][Progress:===============>              52%] [Cov:============================>      81%][Progress:===============>              52%] [Cov:============================>      81%][Progress:===============>              52%] [Cov:============================>      81%][Progress:===============>              53%] [Cov:============================>      81%][Progress:===============>              53%] [Cov:============================>      81%][Progress:===============>              53%] [Cov:============================>      81%][Progress:================>             54%] [Cov:============================>      81%][Progress:================>             54%] [Cov:============================>      81%][Progress:================>             54%] [Cov:============================>      81%][Progress:================>             54%] [Cov:============================>      81%][Progress:================>             54%] [Cov:============================>      81%][Progress:================>             55%] [Cov:============================>      81%][Progress:================>             55%] [Cov:============================>      81%][Progress:================>             55%] [Cov:============================>      81%][Progress:================>             56%] [Cov:============================>      81%][Progress:================>             56%] [Cov:============================>      81%][Progress:=================>            57%] [Cov:============================>      81%][Progress:=================>            57%] [Cov:============================>      81%][Progress:=================>            58%] [Cov:============================>      81%][Progress:=================>            58%] [Cov:============================>      81%][Progress:=================>            58%] [Cov:============================>      81%][Progress:=================>            58%] [Cov:============================>      81%][Progress:=================>            59%] [Cov:============================>      81%][Progress:=================>            59%] [Cov:============================>      81%][Progress:=================>            59%] [Cov:============================>      81%][Progress:=================>            59%] [Cov:============================>      81%][Progress:==================>           60%] [Cov:============================>      81%][Progress:==================>           60%] [Cov:============================>      81%][Progress:==================>           60%] [Cov:============================>      81%][Progress:==================>           60%] [Cov:============================>      81%][Progress:==================>           60%] [Cov:============================>      81%][Progress:==================>           61%] [Cov:============================>      81%][Progress:==================>           61%] [Cov:============================>      81%][Progress:==================>           61%] [Cov:============================>      81%][Progress:==================>           61%] [Cov:============================>      81%][Progress:==================>           61%] [Cov:============================>      81%][Progress:==================>           61%] [Cov:============================>      81%][Progress:==================>           62%] [Cov:============================>      81%][Progress:==================>           62%] [Cov:============================>      81%][Progress:==================>           62%] [Cov:============================>      81%][Progress:==================>           63%] [Cov:============================>      81%][Progress:==================>           63%] [Cov:============================>      81%][Progress:==================>           63%] [Cov:============================>      81%][Progress:===================>          64%] [Cov:============================>      81%][Progress:===================>          64%] [Cov:============================>      81%][Progress:===================>          64%] [Cov:============================>      81%][Progress:===================>          64%] [Cov:============================>      81%][Progress:===================>          66%] [Cov:============================>      81%][Progress:===================>          66%] [Cov:============================>      81%][Progress:===================>          66%] [Cov:============================>      81%][Progress:===================>          66%] [Cov:============================>      81%][Progress:====================>         67%] [Cov:============================>      81%][Progress:====================>         67%] [Cov:============================>      81%][Progress:====================>         67%] [Cov:============================>      81%][Progress:====================>         68%] [Cov:============================>      81%][Progress:====================>         69%] [Cov:============================>      81%][Progress:=====================>        70%] [Cov:============================>      81%][Progress:=====================>        70%] [Cov:============================>      81%][Progress:=====================>        71%] [Cov:============================>      81%][Progress:=====================>        72%] [Cov:============================>      81%][Progress:=====================>        73%] [Cov:============================>      81%][Progress:======================>       74%] [Cov:============================>      81%][Progress:======================>       74%] [Cov:============================>      81%][Progress:======================>       74%] [Cov:============================>      81%][Progress:======================>       75%] [Cov:============================>      81%][Progress:======================>       75%] [Cov:============================>      81%][Progress:======================>       76%] [Cov:============================>      81%][Progress:=======================>      77%] [Cov:============================>      81%][Progress:=======================>      78%] [Cov:============================>      81%][Progress:=======================>      78%] [Cov:============================>      81%][Progress:=======================>      78%] [Cov:============================>      81%][Progress:=======================>      79%] [Cov:============================>      81%][Progress:=======================>      79%] [Cov:============================>      81%][Progress:========================>     81%] [Cov:============================>      81%][Progress:========================>     81%] [Cov:============================>      81%][Progress:========================>     82%] [Cov:============================>      81%][Progress:========================>     82%] [Cov:============================>      81%][Progress:========================>     83%] [Cov:============================>      81%][Progress:========================>     83%] [Cov:============================>      81%][Progress:========================>     83%] [Cov:============================>      81%][Progress:=========================>    84%] [Cov:============================>      81%][Progress:=========================>    84%] [Cov:============================>      81%][Progress:=========================>    85%] [Cov:============================>      81%][Progress:=========================>    85%] [Cov:============================>      81%][Progress:=========================>    86%] [Cov:============================>      81%][Progress:=========================>    86%] [Cov:============================>      81%][Progress:==========================>   87%] [Cov:============================>      81%][Progress:==========================>   87%] [Cov:============================>      81%][Progress:==========================>   88%] [Cov:============================>      81%][Progress:==========================>   89%] [Cov:============================>      81%][Progress:==========================>   89%] [Cov:============================>      81%][Progress:===========================>  90%] [Cov:============================>      81%][Progress:===========================>  90%] [Cov:============================>      81%][Progress:===========================>  91%] [Cov:============================>      81%][Progress:===========================>  92%] [Cov:============================>      81%][Progress:===========================>  93%] [Cov:============================>      81%][Progress:===========================>  93%] [Cov:============================>      81%][Progress:============================> 94%] [Cov:============================>      81%][Progress:============================> 95%] [Cov:============================>      81%][Progress:============================> 95%] [Cov:============================>      81%][Progress:============================> 96%] [Cov:============================>      81%][Progress:============================> 96%] [Cov:============================>      81%][Progress:============================> 96%] [Cov:============================>      81%][Progress:=============================>97%] [Cov:============================>      81%][Progress:=============================>97%] [Cov:============================>      81%][Progress:=============================>97%] [Cov:============================>      81%][Progress:=============================>97%] [Cov:============================>      81%][Progress:=============================>97%] [Cov:============================>      81%][Progress:=============================>98%] [Cov:============================>      81%][Progress:=============================>99%] [Cov:============================>      81%][Progress:=============================>99%] [Cov:============================>      81%][Progress:=============================>99%] [Cov:============================>      81%][Progress:=============================>99%] [Cov:============================>      81%][Progress:=============================>99%] [Cov:============================>      81%][Progress:==============================100%] [Cov:============================>      81%][Progress:==============================100%] [Cov:============================>      81%][Progress:==============================100%] [Cov:============================>      81%]
* Search finished after 201s and 406 generations, 199675 statements, best individual has fitness: 81.0
* Generated before the refinement 23 tests with total length 135
statement is: fr.unice.gfarce.interGraph.TableStockage()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class fr.unice.gfarce.interGraph.TableStockage
statement code is: TableStockage tableStockage = new TableStockage()
statement is: fr.unice.gfarce.interGraph.ModifTableStockage(Lfr/unice/gfarce/interGraph/TableStockage;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class fr.unice.gfarce.interGraph.ModifTableStockage
statement code is: ModifTableStockage modifTableStockage = new ModifTableStockage(arg0)
statement is: ajouterLigne()Lfr/unice/gfarce/interGraph/TableStockage; type is: class org.evosuite.testcase.statements.MethodStatement return type class fr.unice.gfarce.interGraph.TableStockage
statement code is: TableStockage ajouterLigne = modifTableStockage.ajouterLigne()
test data is: TableStockage tableStockage = new TableStockage();
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
modifTableStockage.ajouterLigne();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        TableStockage tableStockage = new TableStockage();
        ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
        modifTableStockage.ajouterLigne();
        // Changing the primitive values and strings to more descriptive examples:
        int id = 1;// The ID of the line being added.

        String nom = "Produit1";// The name of the product being added.

        double prix = 20.5;// The price of the product being added.

        // Adding the line to the table stockage:
        modifTableStockage.ajouterLigne(id, nom, prix);
    }
}
statement is: TableStockage tableStockage = new TableStockage(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: modifTableStockage.ajouterLigne(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: modifTableStockage.ajouterLigne() target is: modifTableStockage method is: ajouterLigne()
source statement: fr.unice.gfarce.interGraph.ModifTableStockage(Lfr/unice/gfarce/interGraph/TableStockage;)V callee: VariableReference: Statement 1, type fr.unice.gfarce.interGraph.ModifTableStockageindex is: 1
Matched Method is: ajouterLigne()Lfr/unice/gfarce/interGraph/TableStockage;
statement is: // Changing the primitive values and strings to more descriptive examples:
int id = 1// The ID of the line being added.
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: String nom = "Produit1"// The name of the product being added.
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: double prix = 20.5// The price of the product being added.
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: // Adding the line to the table stockage:
modifTableStockage.ajouterLigne(id, nom, prix), class spoon.support.reflect.code.CtInvocationImpl
invocation is: // Adding the line to the table stockage:
modifTableStockage.ajouterLigne(id, nom, prix) target is: modifTableStockage method is: ajouterLigne(int,java.lang.String,double)
* this is vulnerable: int _int = 1
* this is vulnerable: String string = "Produit1"
* this is vulnerable: double _double = 20.5
TestCase is: TableStockage tableStockage = new TableStockage();
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
modifTableStockage.ajouterLigne();
int _int = 1;
String string = "Produit1";
double _double = 20.5;

statement is: org.evosuite.testcase.statements.ArrayStatement@51b3ea27 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [Ljava.lang.String;
statement code is: String[] stringArray = new String[1]
statement is: org.evosuite.testcase.statements.AssignmentStatement@9978de1 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.String
statement code is: stringArray[0] = "PAS DE COLONNE"
statement is: org.evosuite.testcase.statements.ArrayStatement@903e9187 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [[Ljava.lang.Object;
statement code is: Object[][] objectArray = new Object[6][4]
statement is: org.evosuite.testcase.statements.AssignmentStatement@19c470f6 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class [Ljava.lang.Object;
statement code is: objectArray[0] = (Object[]) stringArray
statement is: fr.unice.gfarce.interGraph.TableStockage([Ljava/lang/String;[[Ljava/lang/Object;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class fr.unice.gfarce.interGraph.TableStockage
statement code is: TableStockage tableStockage = new TableStockage(arg0, arg1)
statement is: fr.unice.gfarce.interGraph.ModifTableStockage(Lfr/unice/gfarce/interGraph/TableStockage;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class fr.unice.gfarce.interGraph.ModifTableStockage
statement code is: ModifTableStockage modifTableStockage = new ModifTableStockage(arg0)
statement is: ajouterLigne()Lfr/unice/gfarce/interGraph/TableStockage; type is: class org.evosuite.testcase.statements.MethodStatement return type class fr.unice.gfarce.interGraph.TableStockage
statement code is: TableStockage ajouterLigne = modifTableStockage.ajouterLigne()
test data is: String[] stringArray = new String[1];
stringArray[0] = "PAS DE COLONNE";
Object[][] objectArray = new Object[6][4];
objectArray[0] = (Object[]) stringArray;
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
modifTableStockage.ajouterLigne();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        String[] stringArray = new String[1];
        stringArray[0] = "PAS DE COLONNE";// This string is not very descriptive, let's change it to something more representative.

        objectArray[0] = ((Object[]) (stringArray));// The data type of the array elements is not specified, let's add a cast to make it more clear.

        TableStockage tableStockage = new TableStockage(stringArray, objectArray);// The name "tableStockage" is not descriptive enough, let's change it to something more representative.

        ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);// The name "modifTableStockage" is not descriptive enough, let's change it to something more representative.

        modifTableStockage.ajouterLigne();// This method call is not very descriptive, let's add a comment to explain what the code does. }}

    }
}
statement is: String[] stringArray = new String[1], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [1] Ct is: String[] stringArray = new String[1] isAssignment: false Array: new String[1] Elements: []
lengths: [1] [1]
Their type are: class [Ljava.lang.String; String[]
statement is: stringArray[0] = "PAS DE COLONNE"// This string is not very descriptive, let's change it to something more representative.
, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"PAS DE COLONNE" Ct is: stringArray[0] = "PAS DE COLONNE"// This string is not very descriptive, let's change it to something more representative.

target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: objectArray[0] = ((Object[]) (stringArray))// The data type of the array elements is not specified, let's add a cast to make it more clear.
, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : objectArray[0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl null Assignment:((Object[]) (stringArray)) Ct is: objectArray[0] = ((Object[]) (stringArray))// The data type of the array elements is not specified, let's add a cast to make it more clear.

target : objectArray class spoon.support.reflect.code.CtLiteralImpl
statement is: TableStockage tableStockage = new TableStockage(stringArray, objectArray)// The name "tableStockage" is not descriptive enough, let's change it to something more representative.
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage)// The name "modifTableStockage" is not descriptive enough, let's change it to something more representative.
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: modifTableStockage.ajouterLigne()// This method call is not very descriptive, let's add a comment to explain what the code does. }}
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: modifTableStockage.ajouterLigne()// This method call is not very descriptive, let's add a comment to explain what the code does. }}
 target is: modifTableStockage method is: ajouterLigne()
source statement: fr.unice.gfarce.interGraph.ModifTableStockage(Lfr/unice/gfarce/interGraph/TableStockage;)V callee: VariableReference: Statement 5, type fr.unice.gfarce.interGraph.ModifTableStockageindex is: 4
Matched Method is: ajouterLigne()Lfr/unice/gfarce/interGraph/TableStockage;
TestCase Could not be added: ajouterLigne()Lfr/unice/gfarce/interGraph/TableStockage;
TestCase is: String[] stringArray = new String[1];
String string = "PAS DE COLONNE";
objectArray = (Object[][]) string;
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);

statement is: org.evosuite.testcase.statements.ArrayStatement@d5c9311c type is: class org.evosuite.testcase.statements.ArrayStatement return type class [Ljava.lang.String;
statement code is: String[] stringArray = new String[4]
statement is: org.evosuite.testcase.statements.ArrayStatement@9f8cc8d1 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [[Ljava.lang.Object;
statement code is: Object[][] objectArray = new Object[2][8]
statement is: fr.unice.gfarce.interGraph.TableStockage([Ljava/lang/String;[[Ljava/lang/Object;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class fr.unice.gfarce.interGraph.TableStockage
statement code is: TableStockage tableStockage = new TableStockage(arg0, arg1)
statement is: fr.unice.gfarce.interGraph.ModifTableStockage(Lfr/unice/gfarce/interGraph/TableStockage;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class fr.unice.gfarce.interGraph.ModifTableStockage
statement code is: ModifTableStockage modifTableStockage = new ModifTableStockage(arg0)
statement is: Class<Object> class = Object.class type is: class org.evosuite.testcase.statements.ClassPrimitiveStatement return type java.lang.Class<java.lang.Object>
statement code is: Class<Object> class = Object.class
statement is: setColumnClass(ILjava/lang/Class;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: tableStockage.setColumnClass(1, arg1)
statement is: ajouterLigne()Lfr/unice/gfarce/interGraph/TableStockage; type is: class org.evosuite.testcase.statements.MethodStatement return type class fr.unice.gfarce.interGraph.TableStockage
statement code is: TableStockage ajouterLigne = modifTableStockage.ajouterLigne()
test data is: String[] stringArray = new String[4];
Object[][] objectArray = new Object[2][8];
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
Class<Object> class = Object.class;
tableStockage.setColumnClass(1, class);
modifTableStockage.ajouterLigne();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        String[] stringArray = new String[4];
        Object[][] objectArray = new Object[2][8];
        TableStockage tableStockage = new TableStockage(stringArray, objectArray);
        ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
        Class<Object> $missing$ = Object.class;
        tableStockage.setColumnClass(1, $missing$);
        modifTableStockage.ajouterLigne();
        // Modified data:
        String[] stringArrayModified = new String[]{ "Alice", "Bob", "Charlie", "David" };
        Object[][] objectArrayModified = new Object[][]{ new Object[]{ "Product1", 10, "2022-01-01", "In stock" }, new Object[]{ "Product2", 5, "2022-01-01", "Out of stock" } };
        TableStockage tableStockageModified = new TableStockage(stringArrayModified, objectArrayModified);
        modifTableStockage.modifierLigne(tableStockageModified);
    }
}
statement is: String[] stringArray = new String[4], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [4] Ct is: String[] stringArray = new String[4] isAssignment: false Array: new String[4] Elements: []
lengths: [4] [4]
Their type are: class [Ljava.lang.String; String[]
statement is: Object[][] objectArray = new Object[2][8], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [2, 8] Ct is: String[] stringArray = new String[4] isAssignment: false Array: new Object[2][8] Elements: []
lengths: [4] [2, 8]
Dimension: [2, 8] Ct is: Object[][] objectArray = new Object[2][8] isAssignment: false Array: new Object[2][8] Elements: []
lengths: [2, 8] [2, 8]
Their type are: class [[Ljava.lang.Object; Object[][]
statement is: TableStockage tableStockage = new TableStockage(stringArray, objectArray), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Class<Object> $missing$ = Object.class, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: Object.class is Object
statement is: tableStockage.setColumnClass(1, $missing$), class spoon.support.reflect.code.CtInvocationImpl
invocation is: tableStockage.setColumnClass(1, $missing$) target is: tableStockage method is: setColumnClass(int,java.lang.Class)
source statement: fr.unice.gfarce.interGraph.TableStockage([Ljava/lang/String;[[Ljava/lang/Object;)V callee: VariableReference: Statement 2, type fr.unice.gfarce.interGraph.TableStockageindex is: 2
Matched Method is: setColumnClass(ILjava/lang/Class;)V
i 1 Parameters size() 1 Num of Method Parameters: 2
statement is: modifTableStockage.ajouterLigne(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: modifTableStockage.ajouterLigne() target is: modifTableStockage method is: ajouterLigne()
source statement: fr.unice.gfarce.interGraph.ModifTableStockage(Lfr/unice/gfarce/interGraph/TableStockage;)V callee: VariableReference: Statement 3, type fr.unice.gfarce.interGraph.ModifTableStockageindex is: 3
Matched Method is: ajouterLigne()Lfr/unice/gfarce/interGraph/TableStockage;
statement is: // Modified data:
String[] stringArrayModified = new String[]{ "Alice", "Bob", "Charlie", "David" }, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [] Ct is: String[] stringArray = new String[4] isAssignment: false Array: new String[]{ "Alice", "Bob", "Charlie", "David" } Elements: ["Alice", "Bob", "Charlie", "David"]
lengths: [4] []
Dimension: [] Ct is: Object[][] objectArray = new Object[2][8] isAssignment: false Array: new String[]{ "Alice", "Bob", "Charlie", "David" } Elements: ["Alice", "Bob", "Charlie", "David"]
lengths: [2, 8] []
statement is: Object[][] objectArrayModified = new Object[][]{ new Object[]{ "Product1", 10, "2022-01-01", "In stock" }, new Object[]{ "Product2", 5, "2022-01-01", "Out of stock" } }, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [] Ct is: String[] stringArray = new String[4] isAssignment: false Array: new Object[][]{ new Object[]{ "Product1", 10, "2022-01-01", "In stock" }, new Object[]{ "Product2", 5, "2022-01-01", "Out of stock" } } Elements: [new Object[]{ "Product1", 10, "2022-01-01", "In stock" }, new Object[]{ "Product2", 5, "2022-01-01", "Out of stock" }]
lengths: [4] []
Dimension: [] Ct is: Object[][] objectArray = new Object[2][8] isAssignment: false Array: new Object[][]{ new Object[]{ "Product1", 10, "2022-01-01", "In stock" }, new Object[]{ "Product2", 5, "2022-01-01", "Out of stock" } } Elements: [new Object[]{ "Product1", 10, "2022-01-01", "In stock" }, new Object[]{ "Product2", 5, "2022-01-01", "Out of stock" }]
lengths: [2, 8] []
statement is: TableStockage tableStockageModified = new TableStockage(stringArrayModified, objectArrayModified), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: modifTableStockage.modifierLigne(tableStockageModified), class spoon.support.reflect.code.CtInvocationImpl
invocation is: modifTableStockage.modifierLigne(tableStockageModified) target is: modifTableStockage method is: modifierLigne(TableStockage)
TestCase is: String[] stringArray = new String[4];
Object[][] objectArray = new Object[2][8];
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
int _int = 1;
Class<Object> class = null;
tableStockage.setColumnClass(_int, class);
modifTableStockage.ajouterLigne();
TableStockage tableStockage = new TableStockage(stringArray, objectArray);

statement is: org.evosuite.testcase.statements.ArrayStatement@e7c4783b type is: class org.evosuite.testcase.statements.ArrayStatement return type class [Ljava.lang.String;
statement code is: String[] stringArray = new String[4]
statement is: org.evosuite.testcase.statements.ArrayStatement@385610e2 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [[Ljava.lang.Object;
statement code is: Object[][] objectArray = new Object[2][8]
statement is: fr.unice.gfarce.interGraph.TableStockage([Ljava/lang/String;[[Ljava/lang/Object;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class fr.unice.gfarce.interGraph.TableStockage
statement code is: TableStockage tableStockage = new TableStockage(arg0, arg1)
statement is: fr.unice.gfarce.interGraph.ModifTableStockage(Lfr/unice/gfarce/interGraph/TableStockage;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class fr.unice.gfarce.interGraph.ModifTableStockage
statement code is: ModifTableStockage modifTableStockage = new ModifTableStockage(arg0)
statement is: supprimerColonne(I)Lfr/unice/gfarce/interGraph/TableStockage; type is: class org.evosuite.testcase.statements.MethodStatement return type class fr.unice.gfarce.interGraph.TableStockage
statement code is: TableStockage supprimerColonne = modifTableStockage.supprimerColonne(1)
test data is: String[] stringArray = new String[4];
Object[][] objectArray = new Object[2][8];
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
modifTableStockage.supprimerColonne(1);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Improved test data
        String[] stringArray = new String[]{ "apple", "banana", "orange", "grape" };
        Object[][] objectArray = new Object[][]{ new Object[]{ "name", "age", "gender" }, new Object[]{ "John", 25, "male" }, new Object[]{ "Jane", 30, "female" } };
        TableStockage tableStockage = new TableStockage(stringArray, objectArray);
        ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
        modifTableStockage.supprimerColonne(1);
    }
}
statement is: // Improved test data
String[] stringArray = new String[]{ "apple", "banana", "orange", "grape" }, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [] Ct is: String[] stringArray = new String[4] isAssignment: false Array: new String[]{ "apple", "banana", "orange", "grape" } Elements: ["apple", "banana", "orange", "grape"]
lengths: [4] []
Dimension: [] Ct is: Object[][] objectArray = new Object[2][8] isAssignment: false Array: new String[]{ "apple", "banana", "orange", "grape" } Elements: ["apple", "banana", "orange", "grape"]
lengths: [2, 8] []
statement is: Object[][] objectArray = new Object[][]{ new Object[]{ "name", "age", "gender" }, new Object[]{ "John", 25, "male" }, new Object[]{ "Jane", 30, "female" } }, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [] Ct is: String[] stringArray = new String[4] isAssignment: false Array: new Object[][]{ new Object[]{ "name", "age", "gender" }, new Object[]{ "John", 25, "male" }, new Object[]{ "Jane", 30, "female" } } Elements: [new Object[]{ "name", "age", "gender" }, new Object[]{ "John", 25, "male" }, new Object[]{ "Jane", 30, "female" }]
lengths: [4] []
Dimension: [] Ct is: Object[][] objectArray = new Object[2][8] isAssignment: false Array: new Object[][]{ new Object[]{ "name", "age", "gender" }, new Object[]{ "John", 25, "male" }, new Object[]{ "Jane", 30, "female" } } Elements: [new Object[]{ "name", "age", "gender" }, new Object[]{ "John", 25, "male" }, new Object[]{ "Jane", 30, "female" }]
lengths: [2, 8] []
statement is: TableStockage tableStockage = new TableStockage(stringArray, objectArray), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: fr.unice.gfarce.interGraph.TableStockage([Ljava/lang/String;[[Ljava/lang/Object;)V
statement is: ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: fr.unice.gfarce.interGraph.ModifTableStockage(Lfr/unice/gfarce/interGraph/TableStockage;)V
statement is: modifTableStockage.supprimerColonne(1), class spoon.support.reflect.code.CtInvocationImpl
invocation is: modifTableStockage.supprimerColonne(1) target is: modifTableStockage method is: supprimerColonne(int)
statement is: fr.unice.gfarce.interGraph.TableStockage(II)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class fr.unice.gfarce.interGraph.TableStockage
statement code is: TableStockage tableStockage = new TableStockage(2, 0)
statement is: fr.unice.gfarce.interGraph.ModifTableStockage(Lfr/unice/gfarce/interGraph/TableStockage;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class fr.unice.gfarce.interGraph.ModifTableStockage
statement code is: ModifTableStockage modifTableStockage = new ModifTableStockage(arg0)
statement is: colonneMail()Lfr/unice/gfarce/interGraph/TableStockage; type is: class org.evosuite.testcase.statements.MethodStatement return type class fr.unice.gfarce.interGraph.TableStockage
statement code is: TableStockage colonneMail = modifTableStockage.colonneMail()
statement is: supprimerColonne(I)Lfr/unice/gfarce/interGraph/TableStockage; type is: class org.evosuite.testcase.statements.MethodStatement return type class fr.unice.gfarce.interGraph.TableStockage
statement code is: TableStockage supprimerColonne = modifTableStockage.supprimerColonne(0)
test data is: TableStockage tableStockage = new TableStockage(2, 0);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
modifTableStockage.colonneMail();
modifTableStockage.supprimerColonne(0);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        TableStockage tableStockage = new TableStockage("customer_data", "id", 2, 0);
        ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
        modifTableStockage.colonneMail();
        modifTableStockage.supprimerColonne("email");
    }
}
statement is: TableStockage tableStockage = new TableStockage("customer_data", "id", 2, 0), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: fr.unice.gfarce.interGraph.ModifTableStockage(Lfr/unice/gfarce/interGraph/TableStockage;)V
statement is: modifTableStockage.colonneMail(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: modifTableStockage.colonneMail() target is: modifTableStockage method is: colonneMail()
statement is: modifTableStockage.supprimerColonne("email"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: modifTableStockage.supprimerColonne("email") target is: modifTableStockage method is: supprimerColonne(java.lang.String)
statement is: org.evosuite.testcase.statements.ArrayStatement@67d295a4 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [Ljava.lang.String;
statement code is: String[] stringArray = new String[4]
statement is: org.evosuite.testcase.statements.ArrayStatement@d828f3fa type is: class org.evosuite.testcase.statements.ArrayStatement return type class [[Ljava.lang.Object;
statement code is: Object[][] objectArray = new Object[2][8]
statement is: fr.unice.gfarce.interGraph.TableStockage([Ljava/lang/String;[[Ljava/lang/Object;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class fr.unice.gfarce.interGraph.TableStockage
statement code is: TableStockage tableStockage = new TableStockage(arg0, arg1)
statement is: fr.unice.gfarce.interGraph.ModifTableStockage(Lfr/unice/gfarce/interGraph/TableStockage;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class fr.unice.gfarce.interGraph.ModifTableStockage
statement code is: ModifTableStockage modifTableStockage = new ModifTableStockage(arg0)
statement is: supprimerLigne(I)Lfr/unice/gfarce/interGraph/TableStockage; type is: class org.evosuite.testcase.statements.MethodStatement return type class fr.unice.gfarce.interGraph.TableStockage
statement code is: TableStockage supprimerLigne = modifTableStockage.supprimerLigne(1)
test data is: String[] stringArray = new String[4];
Object[][] objectArray = new Object[2][8];
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
modifTableStockage.supprimerLigne(1);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        String[] stringArray = new String[]{ "apple", "banana", "cherry", "orange" };
        Object[][] objectArray = new Object[][]{ new Object[]{ "apple", 2, true }, new Object[]{ "banana", 3, false }, new Object[]{ "cherry", 4, true }, new Object[]{ "orange", 5, false } };
        TableStockage tableStockage = new TableStockage(stringArray, objectArray);
        ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
        modifTableStockage.supprimerLigne(1);
    }
}
statement is: String[] stringArray = new String[]{ "apple", "banana", "cherry", "orange" }, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [] Ct is: String[] stringArray = new String[4] isAssignment: false Array: new String[]{ "apple", "banana", "cherry", "orange" } Elements: ["apple", "banana", "cherry", "orange"]
lengths: [4] []
Dimension: [] Ct is: Object[][] objectArray = new Object[2][8] isAssignment: false Array: new String[]{ "apple", "banana", "cherry", "orange" } Elements: ["apple", "banana", "cherry", "orange"]
lengths: [2, 8] []
statement is: Object[][] objectArray = new Object[][]{ new Object[]{ "apple", 2, true }, new Object[]{ "banana", 3, false }, new Object[]{ "cherry", 4, true }, new Object[]{ "orange", 5, false } }, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [] Ct is: String[] stringArray = new String[4] isAssignment: false Array: new Object[][]{ new Object[]{ "apple", 2, true }, new Object[]{ "banana", 3, false }, new Object[]{ "cherry", 4, true }, new Object[]{ "orange", 5, false } } Elements: [new Object[]{ "apple", 2, true }, new Object[]{ "banana", 3, false }, new Object[]{ "cherry", 4, true }, new Object[]{ "orange", 5, false }]
lengths: [4] []
Dimension: [] Ct is: Object[][] objectArray = new Object[2][8] isAssignment: false Array: new Object[][]{ new Object[]{ "apple", 2, true }, new Object[]{ "banana", 3, false }, new Object[]{ "cherry", 4, true }, new Object[]{ "orange", 5, false } } Elements: [new Object[]{ "apple", 2, true }, new Object[]{ "banana", 3, false }, new Object[]{ "cherry", 4, true }, new Object[]{ "orange", 5, false }]
lengths: [2, 8] []
statement is: TableStockage tableStockage = new TableStockage(stringArray, objectArray), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: fr.unice.gfarce.interGraph.TableStockage([Ljava/lang/String;[[Ljava/lang/Object;)V
statement is: ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: fr.unice.gfarce.interGraph.ModifTableStockage(Lfr/unice/gfarce/interGraph/TableStockage;)V
statement is: modifTableStockage.supprimerLigne(1), class spoon.support.reflect.code.CtInvocationImpl
invocation is: modifTableStockage.supprimerLigne(1) target is: modifTableStockage method is: supprimerLigne(int)
statement is: fr.unice.gfarce.interGraph.TableStockage(II)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class fr.unice.gfarce.interGraph.TableStockage
statement code is: TableStockage tableStockage = new TableStockage(2253, 0)
statement is: fr.unice.gfarce.interGraph.ModifTableStockage(Lfr/unice/gfarce/interGraph/TableStockage;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class fr.unice.gfarce.interGraph.ModifTableStockage
statement code is: ModifTableStockage modifTableStockage = new ModifTableStockage(arg0)
statement is: supprimerLigne(I)Lfr/unice/gfarce/interGraph/TableStockage; type is: class org.evosuite.testcase.statements.MethodStatement return type class fr.unice.gfarce.interGraph.TableStockage
statement code is: TableStockage supprimerLigne = modifTableStockage.supprimerLigne(2233)
test data is: TableStockage tableStockage = new TableStockage(2253, 0);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
modifTableStockage.supprimerLigne(2233);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Creates a new TableStockage object with two arguments (id and nombreColonnes)
        TableStockage tableStockage = new TableStockage(2253, 0);// This line creates a new TableStockage object with an id of 2253 and nombreColonnes set to 0.

        ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);// Creates a new ModifTableStockage object with a TableStockage argument

        modifTableStockage.supprimerLigne(2233);// Calls the supprimerLigne method on the modifTableStockage object with an integer argument (2233) }}

    }
}
statement is: // Creates a new TableStockage object with two arguments (id and nombreColonnes)
TableStockage tableStockage = new TableStockage(2253, 0)// This line creates a new TableStockage object with an id of 2253 and nombreColonnes set to 0.
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage)// Creates a new ModifTableStockage object with a TableStockage argument
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: modifTableStockage.supprimerLigne(2233)// Calls the supprimerLigne method on the modifTableStockage object with an integer argument (2233) }}
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: modifTableStockage.supprimerLigne(2233)// Calls the supprimerLigne method on the modifTableStockage object with an integer argument (2233) }}
 target is: modifTableStockage method is: supprimerLigne(int)
source statement: fr.unice.gfarce.interGraph.ModifTableStockage(Lfr/unice/gfarce/interGraph/TableStockage;)V callee: VariableReference: Statement 1, type fr.unice.gfarce.interGraph.ModifTableStockageindex is: 3
Matched Method is: supprimerLigne(I)Lfr/unice/gfarce/interGraph/TableStockage;
TestCase is: int _int = 2253;
int _int = 0;
TableStockage tableStockage = new TableStockage(_int, _int);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
int _int = 2233;
((ModifTableStockage) _int).supprimerLigne(_int);

statement is: fr.unice.gfarce.interGraph.TableStockage(II)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class fr.unice.gfarce.interGraph.TableStockage
statement code is: TableStockage tableStockage = new TableStockage(2253, 2253)
statement is: fr.unice.gfarce.interGraph.ModifTableStockage(Lfr/unice/gfarce/interGraph/TableStockage;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class fr.unice.gfarce.interGraph.ModifTableStockage
statement code is: ModifTableStockage modifTableStockage = new ModifTableStockage(arg0)
statement is: supprimerLigne(I)Lfr/unice/gfarce/interGraph/TableStockage; type is: class org.evosuite.testcase.statements.MethodStatement return type class fr.unice.gfarce.interGraph.TableStockage
statement code is: TableStockage supprimerLigne = modifTableStockage.supprimerLigne((-8176))
test data is: TableStockage tableStockage = new TableStockage(2253, 2253);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
modifTableStockage.supprimerLigne((-8176));

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        TableStockage tableStockage = new TableStockage(2253, 2253);
        ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
        modifTableStockage.supprimerLigne(-8176);
    }
}
statement is: TableStockage tableStockage = new TableStockage(2253, 2253), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: modifTableStockage.supprimerLigne(-8176), class spoon.support.reflect.code.CtInvocationImpl
invocation is: modifTableStockage.supprimerLigne(-8176) target is: modifTableStockage method is: supprimerLigne(int)
source statement: fr.unice.gfarce.interGraph.ModifTableStockage(Lfr/unice/gfarce/interGraph/TableStockage;)V callee: VariableReference: Statement 1, type fr.unice.gfarce.interGraph.ModifTableStockageindex is: 3
Matched Method is: supprimerLigne(I)Lfr/unice/gfarce/interGraph/TableStockage;
i 0 Parameters size() 0 Num of Method Parameters: 1
TestCase is: int _int = 2253;
int _int = 2253;
TableStockage tableStockage = new TableStockage(_int, _int);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
int _int = null;
((ModifTableStockage) _int).supprimerLigne(_int);

statement is: fr.unice.gfarce.interGraph.TableStockage(II)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class fr.unice.gfarce.interGraph.TableStockage
statement code is: TableStockage tableStockage = new TableStockage(1154, 1281)
statement is: fr.unice.gfarce.interGraph.ModifTableStockage(Lfr/unice/gfarce/interGraph/TableStockage;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class fr.unice.gfarce.interGraph.ModifTableStockage
statement code is: ModifTableStockage modifTableStockage = new ModifTableStockage(arg0)
statement is: separerColonne(I)Lfr/unice/gfarce/interGraph/TableStockage; type is: class org.evosuite.testcase.statements.MethodStatement return type class fr.unice.gfarce.interGraph.TableStockage
statement code is: TableStockage separerColonne = modifTableStockage.separerColonne(1154)
test data is: TableStockage tableStockage = new TableStockage(1154, 1281);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
modifTableStockage.separerColonne(1154);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        TableStockage tableStockage = new TableStockage("Inventory", "Products");
        ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
        modifTableStockage.separerColonne("ProductID");
    }
}
statement is: TableStockage tableStockage = new TableStockage("Inventory", "Products"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: modifTableStockage.separerColonne("ProductID"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: modifTableStockage.separerColonne("ProductID") target is: modifTableStockage method is: separerColonne(java.lang.String)
source statement: fr.unice.gfarce.interGraph.ModifTableStockage(Lfr/unice/gfarce/interGraph/TableStockage;)V callee: VariableReference: Statement 1, type fr.unice.gfarce.interGraph.ModifTableStockageindex is: 3
Matched Method is: separerColonne(I)Lfr/unice/gfarce/interGraph/TableStockage;
TestCase is: String string = "Inventory";
String string = "Products";
TableStockage tableStockage = new TableStockage((int) string, (int) string);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
String string = "ProductID";
((ModifTableStockage) string).separerColonne((int) string);

statement is: org.evosuite.testcase.statements.ArrayStatement@603bfbcc type is: class org.evosuite.testcase.statements.ArrayStatement return type class [Ljava.lang.String;
statement code is: String[] stringArray = new String[4]
statement is: org.evosuite.testcase.statements.AssignmentStatement@4eca6e8f type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.String
statement code is: stringArray[1] = "9|%SZ"
statement is: org.evosuite.testcase.statements.ArrayStatement@2c509eef type is: class org.evosuite.testcase.statements.ArrayStatement return type class [[Ljava.lang.Object;
statement code is: Object[][] objectArray = new Object[2][8]
statement is: org.evosuite.testcase.statements.AssignmentStatement@6271c637 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class [Ljava.lang.Object;
statement code is: objectArray[0] = (Object[]) stringArray
statement is: fr.unice.gfarce.interGraph.TableStockage([Ljava/lang/String;[[Ljava/lang/Object;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class fr.unice.gfarce.interGraph.TableStockage
statement code is: TableStockage tableStockage = new TableStockage(arg0, arg1)
statement is: fr.unice.gfarce.interGraph.ModifTableStockage(Lfr/unice/gfarce/interGraph/TableStockage;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class fr.unice.gfarce.interGraph.ModifTableStockage
statement code is: ModifTableStockage modifTableStockage = new ModifTableStockage(arg0)
statement is: separerColonne(I)Lfr/unice/gfarce/interGraph/TableStockage; type is: class org.evosuite.testcase.statements.MethodStatement return type class fr.unice.gfarce.interGraph.TableStockage
statement code is: TableStockage separerColonne = modifTableStockage.separerColonne(1)
test data is: String[] stringArray = new String[4];
stringArray[1] = "9|%SZ";
Object[][] objectArray = new Object[2][8];
objectArray[0] = (Object[]) stringArray;
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
modifTableStockage.separerColonne(1);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        String[] stringArray = new String[4];
        stringArray[1] = "9|%SZ";
        Object[][] objectArray = new Object[2][8];
        objectArray[0] = ((Object[]) (stringArray));
        TableStockage tableStockage = new TableStockage(stringArray, objectArray);
        ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
        modifTableStockage.separerColonne(1);
    }
}
statement is: String[] stringArray = new String[4], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [4] Ct is: String[] stringArray = new String[4] isAssignment: false Array: new String[4] Elements: []
lengths: [4] [4]
Their type are: class [Ljava.lang.String; String[]
statement is: stringArray[1] = "9|%SZ", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[1] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"9|%SZ" Ct is: stringArray[1] = "9|%SZ"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: Object[][] objectArray = new Object[2][8], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [2, 8] Ct is: String[] stringArray = new String[4] isAssignment: false Array: new Object[2][8] Elements: []
lengths: [4] [2, 8]
Dimension: [2, 8] Ct is: Object[][] objectArray = new Object[2][8] isAssignment: false Array: new Object[2][8] Elements: []
lengths: [2, 8] [2, 8]
Their type are: class [[Ljava.lang.Object; Object[][]
statement is: objectArray[0] = ((Object[]) (stringArray)), class spoon.support.reflect.code.CtAssignmentImpl
Assigned : objectArray[0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl Object[] Assignment:((Object[]) (stringArray)) Ct is: objectArray[0] = ((Object[]) (stringArray))
target : objectArray class spoon.support.reflect.code.CtLiteralImpl
TestCase Could not be added: org.evosuite.testcase.statements.AssignmentStatement@c684a7b4
statement is: TableStockage tableStockage = new TableStockage(stringArray, objectArray), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: modifTableStockage.separerColonne(1), class spoon.support.reflect.code.CtInvocationImpl
invocation is: modifTableStockage.separerColonne(1) target is: modifTableStockage method is: separerColonne(int)
source statement: fr.unice.gfarce.interGraph.ModifTableStockage(Lfr/unice/gfarce/interGraph/TableStockage;)V callee: VariableReference: Statement 5, type fr.unice.gfarce.interGraph.ModifTableStockageindex is: 5
Matched Method is: separerColonne(I)Lfr/unice/gfarce/interGraph/TableStockage;
TestCase is: String[] stringArray = new String[4];
String string = "9|%SZ";
stringArray[1] = string;
Object[][] objectArray = new Object[2][8];
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
int _int = 1;
modifTableStockage.separerColonne(_int);

statement is: org.evosuite.testcase.statements.ArrayStatement@daa0354c type is: class org.evosuite.testcase.statements.ArrayStatement return type class [Ljava.lang.String;
statement code is: String[] stringArray = new String[7]
statement is: org.evosuite.testcase.statements.AssignmentStatement@e1dde297 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.String
statement code is: stringArray[2] = "PAS SEPARABLE"
statement is: org.evosuite.testcase.statements.ArrayStatement@710be0f8 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [[Ljava.lang.Object;
statement code is: Object[][] objectArray = new Object[3][4]
statement is: org.evosuite.testcase.statements.AssignmentStatement@a0bfe21e type is: class org.evosuite.testcase.statements.AssignmentStatement return type class [Ljava.lang.Object;
statement code is: objectArray[0] = (Object[]) stringArray
statement is: org.evosuite.testcase.statements.AssignmentStatement@cf846c78 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class [Ljava.lang.Object;
statement code is: objectArray[1] = (Object[]) stringArray
statement is: org.evosuite.testcase.statements.AssignmentStatement@c7d81fbc type is: class org.evosuite.testcase.statements.AssignmentStatement return type class [Ljava.lang.Object;
statement code is: objectArray[2] = (Object[]) stringArray
statement is: fr.unice.gfarce.interGraph.TableStockage([Ljava/lang/String;[[Ljava/lang/Object;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class fr.unice.gfarce.interGraph.TableStockage
statement code is: TableStockage tableStockage = new TableStockage(arg0, arg1)
statement is: fr.unice.gfarce.interGraph.ModifTableStockage(Lfr/unice/gfarce/interGraph/TableStockage;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class fr.unice.gfarce.interGraph.ModifTableStockage
statement code is: ModifTableStockage modifTableStockage = new ModifTableStockage(arg0)
statement is: separerColonne(I)Lfr/unice/gfarce/interGraph/TableStockage; type is: class org.evosuite.testcase.statements.MethodStatement return type class fr.unice.gfarce.interGraph.TableStockage
statement code is: TableStockage separerColonne = modifTableStockage.separerColonne(2)
test data is: String[] stringArray = new String[7];
stringArray[2] = "PAS SEPARABLE";
Object[][] objectArray = new Object[3][4];
objectArray[0] = (Object[]) stringArray;
objectArray[1] = (Object[]) stringArray;
objectArray[2] = (Object[]) stringArray;
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
modifTableStockage.separerColonne(2);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        String[] stringArray = new String[7];
        stringArray[0] = "CADASTRÉ";
        stringArray[1] = "PAS SEPARABLE";
        stringArray[2] = "SEPARABLE";
        stringArray[3] = "PAS SEPARABLE";
        stringArray[4] = "SEPARABLE";
        stringArray[5] = "PAS SEPARABLE";
        stringArray[6] = "SEPARABLE";
        Object[][] objectArray = new Object[3][4];
        objectArray[0] = ((Object[]) (stringArray));
        objectArray[1] = ((Object[]) (stringArray));
        objectArray[2] = ((Object[]) (stringArray));
        TableStockage tableStockage = new TableStockage(stringArray, objectArray);
        ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
        modifTableStockage.separerColonne(2);
    }
}
statement is: String[] stringArray = new String[7], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [7] Ct is: String[] stringArray = new String[7] isAssignment: false Array: new String[7] Elements: []
lengths: [7] [7]
Their type are: class [Ljava.lang.String; String[]
statement is: stringArray[0] = "CADASTRÉ", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"CADASTRÉ" Ct is: stringArray[0] = "CADASTRÉ"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[1] = "PAS SEPARABLE", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[1] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"PAS SEPARABLE" Ct is: stringArray[1] = "PAS SEPARABLE"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[2] = "SEPARABLE", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[2] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"SEPARABLE" Ct is: stringArray[2] = "SEPARABLE"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[3] = "PAS SEPARABLE", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[3] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"PAS SEPARABLE" Ct is: stringArray[3] = "PAS SEPARABLE"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[4] = "SEPARABLE", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[4] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"SEPARABLE" Ct is: stringArray[4] = "SEPARABLE"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[5] = "PAS SEPARABLE", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[5] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"PAS SEPARABLE" Ct is: stringArray[5] = "PAS SEPARABLE"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[6] = "SEPARABLE", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[6] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"SEPARABLE" Ct is: stringArray[6] = "SEPARABLE"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: Object[][] objectArray = new Object[3][4], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [3, 4] Ct is: String[] stringArray = new String[7] isAssignment: false Array: new Object[3][4] Elements: []
lengths: [7] [3, 4]
Dimension: [3, 4] Ct is: Object[][] objectArray = new Object[3][4] isAssignment: false Array: new Object[3][4] Elements: []
lengths: [3, 4] [3, 4]
Their type are: class [[Ljava.lang.Object; Object[][]
statement is: objectArray[0] = ((Object[]) (stringArray)), class spoon.support.reflect.code.CtAssignmentImpl
Assigned : objectArray[0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl Object[] Assignment:((Object[]) (stringArray)) Ct is: objectArray[0] = ((Object[]) (stringArray))
target : objectArray class spoon.support.reflect.code.CtLiteralImpl
TestCase Could not be added: org.evosuite.testcase.statements.AssignmentStatement@5d672e29
statement is: objectArray[1] = ((Object[]) (stringArray)), class spoon.support.reflect.code.CtAssignmentImpl
Assigned : objectArray[1] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl Object[] Assignment:((Object[]) (stringArray)) Ct is: objectArray[1] = ((Object[]) (stringArray))
target : objectArray class spoon.support.reflect.code.CtLiteralImpl
TestCase Could not be added: org.evosuite.testcase.statements.AssignmentStatement@1a64b663
statement is: objectArray[2] = ((Object[]) (stringArray)), class spoon.support.reflect.code.CtAssignmentImpl
Assigned : objectArray[2] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl Object[] Assignment:((Object[]) (stringArray)) Ct is: objectArray[2] = ((Object[]) (stringArray))
target : objectArray class spoon.support.reflect.code.CtLiteralImpl
TestCase Could not be added: org.evosuite.testcase.statements.AssignmentStatement@ad4fe475
statement is: TableStockage tableStockage = new TableStockage(stringArray, objectArray), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: modifTableStockage.separerColonne(2), class spoon.support.reflect.code.CtInvocationImpl
invocation is: modifTableStockage.separerColonne(2) target is: modifTableStockage method is: separerColonne(int)
source statement: fr.unice.gfarce.interGraph.ModifTableStockage(Lfr/unice/gfarce/interGraph/TableStockage;)V callee: VariableReference: Statement 7, type fr.unice.gfarce.interGraph.ModifTableStockageindex is: 17
Matched Method is: separerColonne(I)Lfr/unice/gfarce/interGraph/TableStockage;
TestCase is: String[] stringArray = new String[7];
String string = "CADASTR\u00C9";
stringArray[2] = string;
String string = "PAS SEPARABLE";
stringArray[2] = string;
String string = "SEPARABLE";
stringArray[2] = string;
String string = "PAS SEPARABLE";
stringArray[2] = string;
String string = "SEPARABLE";
stringArray[2] = string;
String string = "PAS SEPARABLE";
stringArray[2] = string;
String string = "SEPARABLE";
stringArray[2] = string;
Object[][] objectArray = new Object[3][4];
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
int _int = 2;
((ModifTableStockage) string).separerColonne(_int);

statement is: org.evosuite.testcase.statements.ArrayStatement@465786ca type is: class org.evosuite.testcase.statements.ArrayStatement return type class [Ljava.lang.String;
statement code is: String[] stringArray = new String[7]
statement is: org.evosuite.testcase.statements.AssignmentStatement@c076f121 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.String
statement code is: stringArray[0] = " 9]KYN1]vi;"
statement is: org.evosuite.testcase.statements.ArrayStatement@4aecfb4b type is: class org.evosuite.testcase.statements.ArrayStatement return type class [[Ljava.lang.Object;
statement code is: Object[][] objectArray = new Object[9][8]
statement is: org.evosuite.testcase.statements.AssignmentStatement@fcd80acc type is: class org.evosuite.testcase.statements.AssignmentStatement return type class [Ljava.lang.Object;
statement code is: objectArray[0] = (Object[]) stringArray
statement is: org.evosuite.testcase.statements.ArrayStatement@3f3afe32 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [Ljava.lang.String;
statement code is: String[] stringArray = new String[3]
statement is: org.evosuite.testcase.statements.AssignmentStatement@58293f02 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.String
statement code is: stringArray[0] = "k`O}0&47ZS/F"
statement is: fr.unice.gfarce.interGraph.TableStockage([Ljava/lang/String;[[Ljava/lang/Object;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class fr.unice.gfarce.interGraph.TableStockage
statement code is: TableStockage tableStockage = new TableStockage(arg0, arg1)
statement is: fr.unice.gfarce.interGraph.ModifTableStockage(Lfr/unice/gfarce/interGraph/TableStockage;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class fr.unice.gfarce.interGraph.ModifTableStockage
statement code is: ModifTableStockage modifTableStockage = new ModifTableStockage(arg0)
statement is: separerColonne(I)Lfr/unice/gfarce/interGraph/TableStockage; type is: class org.evosuite.testcase.statements.MethodStatement return type class fr.unice.gfarce.interGraph.TableStockage
statement code is: TableStockage separerColonne = modifTableStockage.separerColonne(0)
test data is: String[] stringArray = new String[7];
stringArray[0] = " 9]KYN1]vi;";
Object[][] objectArray = new Object[9][8];
objectArray[0] = (Object[]) stringArray;
String[] stringArray = new String[3];
stringArray[0] = "k`O}0&47ZS/F";
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
modifTableStockage.separerColonne(0);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        String[] stringArray = new String[7];
        stringArray[0] = "ABC";
        Object[][] objectArray = new Object[9][8];
        objectArray[0] = ((Object[]) (stringArray));
        String[] stringArray = new String[3];
        stringArray[0] = "XYZ";
        TableStockage tableStockage = new TableStockage(stringArray, objectArray);
        ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
        modifTableStockage.separerColonne(0);
    }
}
statement is: String[] stringArray = new String[7], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [7] Ct is: String[] stringArray = new String[7] isAssignment: false Array: new String[7] Elements: []
lengths: [7] [7]
Their type are: class [Ljava.lang.String; String[]
statement is: stringArray[0] = "ABC", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"ABC" Ct is: stringArray[0] = "ABC"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: Object[][] objectArray = new Object[9][8], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [9, 8] Ct is: String[] stringArray = new String[7] isAssignment: false Array: new Object[9][8] Elements: []
lengths: [7] [9, 8]
Dimension: [9, 8] Ct is: Object[][] objectArray = new Object[9][8] isAssignment: false Array: new Object[9][8] Elements: []
lengths: [9, 8] [9, 8]
Their type are: class [[Ljava.lang.Object; Object[][]
statement is: objectArray[0] = ((Object[]) (stringArray)), class spoon.support.reflect.code.CtAssignmentImpl
Assigned : objectArray[0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl Object[] Assignment:((Object[]) (stringArray)) Ct is: objectArray[0] = ((Object[]) (stringArray))
target : objectArray class spoon.support.reflect.code.CtLiteralImpl
TestCase Could not be added: org.evosuite.testcase.statements.AssignmentStatement@7866a9b2
statement is: String[] stringArray = new String[3], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [3] Ct is: String[] stringArray = new String[7] isAssignment: false Array: new String[3] Elements: []
lengths: [7] [3]
Their type are: class [Ljava.lang.String; String[]
statement is: stringArray[0] = "XYZ", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"XYZ" Ct is: stringArray[0] = "XYZ"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: TableStockage tableStockage = new TableStockage(stringArray, objectArray), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: modifTableStockage.separerColonne(0), class spoon.support.reflect.code.CtInvocationImpl
invocation is: modifTableStockage.separerColonne(0) target is: modifTableStockage method is: separerColonne(int)
source statement: fr.unice.gfarce.interGraph.ModifTableStockage(Lfr/unice/gfarce/interGraph/TableStockage;)V callee: VariableReference: Statement 7, type fr.unice.gfarce.interGraph.ModifTableStockageindex is: 8
Matched Method is: separerColonne(I)Lfr/unice/gfarce/interGraph/TableStockage;
TestCase is: String[] stringArray = new String[7];
String string = "ABC";
stringArray[0] = string;
Object[][] objectArray = new Object[9][8];
String[] stringArray = new String[7];
String string = "XYZ";
stringArray[0] = string;
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
int _int = 0;
((ModifTableStockage) tableStockage).separerColonne(_int);

statement is: org.evosuite.testcase.statements.ArrayStatement@e285ecf2 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [Ljava.lang.String;
statement code is: String[] stringArray = new String[7]
statement is: org.evosuite.testcase.statements.AssignmentStatement@a2d5f033 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.String
statement code is: stringArray[0] = " 9]KYN1]vi;"
statement is: org.evosuite.testcase.statements.ArrayStatement@8fc400b0 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [[Ljava.lang.Object;
statement code is: Object[][] objectArray = new Object[9][8]
statement is: org.evosuite.testcase.statements.AssignmentStatement@593e6c71 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class [Ljava.lang.Object;
statement code is: objectArray[0] = (Object[]) stringArray
statement is: org.evosuite.testcase.statements.ArrayStatement@95d335c0 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [Ljava.lang.Object;
statement code is: Object[] objectArray = new Object[25]
statement is: org.evosuite.testcase.statements.AssignmentStatement@9ca1a677 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.Object
statement code is: objectArray[0] = (Object) "k`O}0&47ZS/F"
statement is: org.evosuite.testcase.statements.AssignmentStatement@98433366 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class [Ljava.lang.Object;
statement code is: objectArray[1] = objectArray
statement is: fr.unice.gfarce.interGraph.TableStockage([Ljava/lang/String;[[Ljava/lang/Object;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class fr.unice.gfarce.interGraph.TableStockage
statement code is: TableStockage tableStockage = new TableStockage(arg0, arg1)
statement is: fr.unice.gfarce.interGraph.ModifTableStockage(Lfr/unice/gfarce/interGraph/TableStockage;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class fr.unice.gfarce.interGraph.ModifTableStockage
statement code is: ModifTableStockage modifTableStockage = new ModifTableStockage(arg0)
statement is: separerColonne(I)Lfr/unice/gfarce/interGraph/TableStockage; type is: class org.evosuite.testcase.statements.MethodStatement return type class fr.unice.gfarce.interGraph.TableStockage
statement code is: TableStockage separerColonne = modifTableStockage.separerColonne(0)
test data is: String[] stringArray = new String[7];
stringArray[0] = " 9]KYN1]vi;";
Object[][] objectArray = new Object[9][8];
objectArray[0] = (Object[]) stringArray;
Object[] objectArray = new Object[25];
objectArray[0] = (Object) "k`O}0&47ZS/F";
objectArray[1] = objectArray;
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
modifTableStockage.separerColonne(0);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        String[] stringArray = new String[7];
        stringArray[0] = "9]KYN1]vi;";// Changed the value of the first element to a more descriptive and representative value.

        Object[][] objectArray = new Object[9][8];
        objectArray[0] = ((Object[]) (stringArray));
        Object[] objectArray = new Object[25];
        objectArray[0] = ((Object) ("k`O}0&47ZS/F"));// Changed the value of the first element to a more descriptive and representative value.

        objectArray[1] = objectArray;
        TableStockage tableStockage = new TableStockage(stringArray, objectArray);
        ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
        modifTableStockage.separerColonne(0);// Changed the value of the argument to a more descriptive and representative value. }}

    }
}
statement is: String[] stringArray = new String[7], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [7] Ct is: String[] stringArray = new String[7] isAssignment: false Array: new String[7] Elements: []
lengths: [7] [7]
Their type are: class [Ljava.lang.String; String[]
statement is: stringArray[0] = "9]KYN1]vi;"// Changed the value of the first element to a more descriptive and representative value.
, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"9]KYN1]vi;" Ct is: stringArray[0] = "9]KYN1]vi;"// Changed the value of the first element to a more descriptive and representative value.

target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: Object[][] objectArray = new Object[9][8], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [9, 8] Ct is: String[] stringArray = new String[7] isAssignment: false Array: new Object[9][8] Elements: []
lengths: [7] [9, 8]
Dimension: [9, 8] Ct is: Object[][] objectArray = new Object[9][8] isAssignment: false Array: new Object[9][8] Elements: []
lengths: [9, 8] [9, 8]
Their type are: class [[Ljava.lang.Object; Object[][]
statement is: objectArray[0] = ((Object[]) (stringArray)), class spoon.support.reflect.code.CtAssignmentImpl
Assigned : objectArray[0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl Object[] Assignment:((Object[]) (stringArray)) Ct is: objectArray[0] = ((Object[]) (stringArray))
target : objectArray class spoon.support.reflect.code.CtLiteralImpl
TestCase Could not be added: org.evosuite.testcase.statements.AssignmentStatement@9603850f
statement is: Object[] objectArray = new Object[25], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [25] Ct is: String[] stringArray = new String[7] isAssignment: false Array: new Object[25] Elements: []
lengths: [7] [25]
Their type are: class [Ljava.lang.String; Object[]
Dimension: [25] Ct is: Object[][] objectArray = new Object[9][8] isAssignment: false Array: new Object[25] Elements: []
lengths: [9, 8] [25]
Dimension: [25] Ct is: Object[] objectArray = new Object[25] isAssignment: false Array: new Object[25] Elements: []
lengths: [25] [25]
Their type are: class [Ljava.lang.Object; Object[]
statement is: objectArray[0] = ((Object) ("k`O}0&47ZS/F"))// Changed the value of the first element to a more descriptive and representative value.
, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : objectArray[0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl Object Assignment:((Object) ("k`O}0&47ZS/F")) Ct is: objectArray[0] = ((Object) ("k`O}0&47ZS/F"))// Changed the value of the first element to a more descriptive and representative value.

target : objectArray class spoon.support.reflect.code.CtLiteralImpl
statement is: objectArray[1] = objectArray, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : objectArray[1] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl Object Assignment:objectArray Ct is: objectArray[1] = objectArray
target : objectArray class spoon.support.reflect.code.CtLiteralImpl
statement is: TableStockage tableStockage = new TableStockage(stringArray, objectArray), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: modifTableStockage.separerColonne(0)// Changed the value of the argument to a more descriptive and representative value. }}
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: modifTableStockage.separerColonne(0)// Changed the value of the argument to a more descriptive and representative value. }}
 target is: modifTableStockage method is: separerColonne(int)
source statement: fr.unice.gfarce.interGraph.ModifTableStockage(Lfr/unice/gfarce/interGraph/TableStockage;)V callee: VariableReference: Statement 8, type fr.unice.gfarce.interGraph.ModifTableStockageindex is: 9
Matched Method is: separerColonne(I)Lfr/unice/gfarce/interGraph/TableStockage;
TestCase is: String[] stringArray = new String[7];
String string = "9]KYN1]vi;";
stringArray[0] = string;
Object[][] objectArray = new Object[9][8];
Object[] objectArray = new Object[25];
String string = "k`O}0&47ZS/F";
objectArray[0] = (Object) string;
objectArray[0] = (Object) objectArray;
TableStockage tableStockage = new TableStockage(stringArray, (Object[][]) objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
int _int = 0;
((ModifTableStockage) tableStockage).separerColonne(_int);

statement is: fr.unice.gfarce.interGraph.TableStockage()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class fr.unice.gfarce.interGraph.TableStockage
statement code is: TableStockage tableStockage = new TableStockage()
statement is: fr.unice.gfarce.interGraph.ModifTableStockage(Lfr/unice/gfarce/interGraph/TableStockage;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class fr.unice.gfarce.interGraph.ModifTableStockage
statement code is: ModifTableStockage modifTableStockage = new ModifTableStockage(arg0)
statement is: fusionnerColonnes(I)Lfr/unice/gfarce/interGraph/TableStockage; type is: class org.evosuite.testcase.statements.MethodStatement return type class fr.unice.gfarce.interGraph.TableStockage
statement code is: TableStockage fusionnerColonnes = modifTableStockage.fusionnerColonnes(742)
test data is: TableStockage tableStockage = new TableStockage();
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
modifTableStockage.fusionnerColonnes(742);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        TableStockage tableStockage = new TableStockage();
        ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
        modifTableStockage.fusionnerColonnes("colonne1");
    }
}
statement is: TableStockage tableStockage = new TableStockage(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: modifTableStockage.fusionnerColonnes("colonne1"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: modifTableStockage.fusionnerColonnes("colonne1") target is: modifTableStockage method is: fusionnerColonnes(java.lang.String)
source statement: fr.unice.gfarce.interGraph.ModifTableStockage(Lfr/unice/gfarce/interGraph/TableStockage;)V callee: VariableReference: Statement 1, type fr.unice.gfarce.interGraph.ModifTableStockageindex is: 1
Matched Method is: fusionnerColonnes(I)Lfr/unice/gfarce/interGraph/TableStockage;
TestCase is: TableStockage tableStockage = new TableStockage();
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
String string = "colonne1";
modifTableStockage.fusionnerColonnes((int) string);

statement is: fr.unice.gfarce.interGraph.TableStockage(II)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class fr.unice.gfarce.interGraph.TableStockage
statement code is: TableStockage tableStockage = new TableStockage(4864, 4864)
statement is: Class<Boolean> class = Boolean.class type is: class org.evosuite.testcase.statements.ClassPrimitiveStatement return type java.lang.Class<java.lang.Boolean>
statement code is: Class<Boolean> class = Boolean.class
statement is: setColumnClass(ILjava/lang/Class;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: tableStockage.setColumnClass(187, arg1)
statement is: fr.unice.gfarce.interGraph.ModifTableStockage(Lfr/unice/gfarce/interGraph/TableStockage;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class fr.unice.gfarce.interGraph.ModifTableStockage
statement code is: ModifTableStockage modifTableStockage = new ModifTableStockage(arg0)
statement is: fusionnerColonnes(I)Lfr/unice/gfarce/interGraph/TableStockage; type is: class org.evosuite.testcase.statements.MethodStatement return type class fr.unice.gfarce.interGraph.TableStockage
statement code is: TableStockage fusionnerColonnes = modifTableStockage.fusionnerColonnes(187)
test data is: TableStockage tableStockage = new TableStockage(4864, 4864);
Class<Boolean> class = Boolean.class;
tableStockage.setColumnClass(187, class);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
modifTableStockage.fusionnerColonnes(187);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        TableStockage tableStockage = new TableStockage(4864, 4864);
        Class<Boolean> $missing$ = Boolean.class;
        tableStockage.setColumnClass(187, $missing$);
        ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
        modifTableStockage.fusionnerColonnes("ID");
    }
}
statement is: TableStockage tableStockage = new TableStockage(4864, 4864), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Class<Boolean> $missing$ = Boolean.class, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: Boolean.class is Boolean
statement is: tableStockage.setColumnClass(187, $missing$), class spoon.support.reflect.code.CtInvocationImpl
invocation is: tableStockage.setColumnClass(187, $missing$) target is: tableStockage method is: setColumnClass(int,java.lang.Class)
source statement: fr.unice.gfarce.interGraph.TableStockage(II)V callee: VariableReference: Statement 0, type fr.unice.gfarce.interGraph.TableStockageindex is: 2
Matched Method is: setColumnClass(ILjava/lang/Class;)V
i 1 Parameters size() 1 Num of Method Parameters: 2
statement is: ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: modifTableStockage.fusionnerColonnes("ID"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: modifTableStockage.fusionnerColonnes("ID") target is: modifTableStockage method is: fusionnerColonnes(java.lang.String)
source statement: fr.unice.gfarce.interGraph.ModifTableStockage(Lfr/unice/gfarce/interGraph/TableStockage;)V callee: VariableReference: Statement 3, type fr.unice.gfarce.interGraph.ModifTableStockageindex is: 6
Matched Method is: fusionnerColonnes(I)Lfr/unice/gfarce/interGraph/TableStockage;
TestCase is: int _int = 4864;
int _int = 4864;
TableStockage tableStockage = new TableStockage(_int, _int);
int _int = 187;
Class<Boolean> class = null;
((TableStockage) _int).setColumnClass(_int, class);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
String string = "ID";
((ModifTableStockage) _int).fusionnerColonnes((int) string);

statement is: org.evosuite.testcase.statements.ArrayStatement@276c3c9 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [Ljava.lang.String;
statement code is: String[] stringArray = new String[4]
statement is: org.evosuite.testcase.statements.AssignmentStatement@7dd2c0ea type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.String
statement code is: stringArray[1] = "9|%SZ"
statement is: org.evosuite.testcase.statements.AssignmentStatement@e6f8e2c5 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.String
statement code is: stringArray[2] = "NnlB*s6eHruEmc"
statement is: org.evosuite.testcase.statements.ArrayStatement@6daddc2f type is: class org.evosuite.testcase.statements.ArrayStatement return type class [[Ljava.lang.Object;
statement code is: Object[][] objectArray = new Object[2][8]
statement is: org.evosuite.testcase.statements.AssignmentStatement@91e829f1 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class [Ljava.lang.Object;
statement code is: objectArray[0] = (Object[]) stringArray
statement is: org.evosuite.testcase.statements.AssignmentStatement@c8102a9a type is: class org.evosuite.testcase.statements.AssignmentStatement return type class [Ljava.lang.Object;
statement code is: objectArray[1] = (Object[]) stringArray
statement is: fr.unice.gfarce.interGraph.TableStockage([Ljava/lang/String;[[Ljava/lang/Object;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class fr.unice.gfarce.interGraph.TableStockage
statement code is: TableStockage tableStockage = new TableStockage(arg0, arg1)
statement is: fr.unice.gfarce.interGraph.ModifTableStockage(Lfr/unice/gfarce/interGraph/TableStockage;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class fr.unice.gfarce.interGraph.ModifTableStockage
statement code is: ModifTableStockage modifTableStockage = new ModifTableStockage(arg0)
statement is: fusionnerColonnes(I)Lfr/unice/gfarce/interGraph/TableStockage; type is: class org.evosuite.testcase.statements.MethodStatement return type class fr.unice.gfarce.interGraph.TableStockage
statement code is: TableStockage fusionnerColonnes = modifTableStockage.fusionnerColonnes(1)
test data is: String[] stringArray = new String[4];
stringArray[1] = "9|%SZ";
stringArray[2] = "NnlB*s6eHruEmc";
Object[][] objectArray = new Object[2][8];
objectArray[0] = (Object[]) stringArray;
objectArray[1] = (Object[]) stringArray;
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
modifTableStockage.fusionnerColonnes(1);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        String[] stringArray = new String[4];
        stringArray[0] = "123456789";// more descriptive value for the first element of the array

        stringArray[1] = "9|%SZ";
        stringArray[2] = "NnlB*s6eHruEmc";
        Object[][] objectArray = new Object[2][8];
        objectArray[0] = ((Object[]) (stringArray));
        objectArray[1] = ((Object[]) (stringArray));
        TableStockage tableStockage = new TableStockage(stringArray, objectArray);
        ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
        modifTableStockage.fusionnerColonnes(1);
    }
}
statement is: String[] stringArray = new String[4], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [4] Ct is: String[] stringArray = new String[4] isAssignment: false Array: new String[4] Elements: []
lengths: [4] [4]
Their type are: class [Ljava.lang.String; String[]
statement is: stringArray[0] = "123456789"// more descriptive value for the first element of the array
, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"123456789" Ct is: stringArray[0] = "123456789"// more descriptive value for the first element of the array

target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[1] = "9|%SZ", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[1] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"9|%SZ" Ct is: stringArray[1] = "9|%SZ"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[2] = "NnlB*s6eHruEmc", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[2] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"NnlB*s6eHruEmc" Ct is: stringArray[2] = "NnlB*s6eHruEmc"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: Object[][] objectArray = new Object[2][8], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [2, 8] Ct is: String[] stringArray = new String[4] isAssignment: false Array: new Object[2][8] Elements: []
lengths: [4] [2, 8]
Dimension: [2, 8] Ct is: Object[][] objectArray = new Object[2][8] isAssignment: false Array: new Object[2][8] Elements: []
lengths: [2, 8] [2, 8]
Their type are: class [[Ljava.lang.Object; Object[][]
statement is: objectArray[0] = ((Object[]) (stringArray)), class spoon.support.reflect.code.CtAssignmentImpl
Assigned : objectArray[0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl Object[] Assignment:((Object[]) (stringArray)) Ct is: objectArray[0] = ((Object[]) (stringArray))
target : objectArray class spoon.support.reflect.code.CtLiteralImpl
TestCase Could not be added: org.evosuite.testcase.statements.AssignmentStatement@a7185f0b
statement is: objectArray[1] = ((Object[]) (stringArray)), class spoon.support.reflect.code.CtAssignmentImpl
Assigned : objectArray[1] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl Object[] Assignment:((Object[]) (stringArray)) Ct is: objectArray[1] = ((Object[]) (stringArray))
target : objectArray class spoon.support.reflect.code.CtLiteralImpl
TestCase Could not be added: org.evosuite.testcase.statements.AssignmentStatement@c02b3178
statement is: TableStockage tableStockage = new TableStockage(stringArray, objectArray), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: modifTableStockage.fusionnerColonnes(1), class spoon.support.reflect.code.CtInvocationImpl
invocation is: modifTableStockage.fusionnerColonnes(1) target is: modifTableStockage method is: fusionnerColonnes(int)
source statement: fr.unice.gfarce.interGraph.ModifTableStockage(Lfr/unice/gfarce/interGraph/TableStockage;)V callee: VariableReference: Statement 7, type fr.unice.gfarce.interGraph.ModifTableStockageindex is: 8
Matched Method is: fusionnerColonnes(I)Lfr/unice/gfarce/interGraph/TableStockage;
TestCase is: String[] stringArray = new String[4];
stringArray[1] = "9|%SZ";
String string = "9|%SZ";
stringArray[1] = string;
String string = "NnlB*s6eHruEmc";
stringArray[2] = string;
Object[][] objectArray = new Object[2][8];
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
int _int = 1;
((ModifTableStockage) tableStockage).fusionnerColonnes(_int);

statement is: fr.unice.gfarce.interGraph.TableStockage()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class fr.unice.gfarce.interGraph.TableStockage
statement code is: TableStockage tableStockage = new TableStockage()
statement is: fr.unice.gfarce.interGraph.ModifTableStockage(Lfr/unice/gfarce/interGraph/TableStockage;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class fr.unice.gfarce.interGraph.ModifTableStockage
statement code is: ModifTableStockage modifTableStockage = new ModifTableStockage(arg0)
statement is: selectMail()Lfr/unice/gfarce/interGraph/TableStockage; type is: class org.evosuite.testcase.statements.MethodStatement return type class fr.unice.gfarce.interGraph.TableStockage
statement code is: TableStockage selectMail = modifTableStockage.selectMail()
test data is: TableStockage tableStockage = new TableStockage();
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
modifTableStockage.selectMail();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        TableStockage tableStockage = new TableStockage("my_database", "my_table");
        ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
        modifTableStockage.selectMail(10);// selecting 10 mails from the table }}

    }
}
statement is: TableStockage tableStockage = new TableStockage("my_database", "my_table"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: fr.unice.gfarce.interGraph.ModifTableStockage(Lfr/unice/gfarce/interGraph/TableStockage;)V
statement is: modifTableStockage.selectMail(10)// selecting 10 mails from the table }}
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: modifTableStockage.selectMail(10)// selecting 10 mails from the table }}
 target is: modifTableStockage method is: selectMail(int)
statement is: org.evosuite.testcase.statements.ArrayStatement@62799df9 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [Ljava.lang.String;
statement code is: String[] stringArray = new String[7]
statement is: org.evosuite.testcase.statements.AssignmentStatement@75995c03 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.String
statement code is: stringArray[0] = "Envoyer E-Mail a:"
statement is: org.evosuite.testcase.statements.ArrayStatement@9f4c20d2 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [[Ljava.lang.Object;
statement code is: Object[][] objectArray = new Object[0][4]
statement is: fr.unice.gfarce.interGraph.TableStockage([Ljava/lang/String;[[Ljava/lang/Object;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class fr.unice.gfarce.interGraph.TableStockage
statement code is: TableStockage tableStockage = new TableStockage(arg0, arg1)
statement is: fr.unice.gfarce.interGraph.ModifTableStockage(Lfr/unice/gfarce/interGraph/TableStockage;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class fr.unice.gfarce.interGraph.ModifTableStockage
statement code is: ModifTableStockage modifTableStockage = new ModifTableStockage(arg0)
statement is: selectMail()Lfr/unice/gfarce/interGraph/TableStockage; type is: class org.evosuite.testcase.statements.MethodStatement return type class fr.unice.gfarce.interGraph.TableStockage
statement code is: TableStockage selectMail = modifTableStockage.selectMail()
test data is: String[] stringArray = new String[7];
stringArray[0] = "Envoyer E-Mail a:";
Object[][] objectArray = new Object[0][4];
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
modifTableStockage.selectMail();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        String[] stringArray = new String[7];
        stringArray[0] = "Envoyer E-Mail à:";
        Object[][] objectArray = new Object[2][4];
        objectArray[0][0] = "John Doe";
        objectArray[0][1] = "john.doe@example.com";
        objectArray[0][2] = "Hello John, I hope you're doing well.";
        objectArray[1][0] = "Jane Smith";
        objectArray[1][1] = "jane.smith@example.com";
        objectArray[1][2] = "Hello Jane, I hope you're doing well too.";
        TableStockage tableStockage = new TableStockage(stringArray, objectArray);
        ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
        modifTableStockage.selectMail();
    }
}
statement is: String[] stringArray = new String[7], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [7] Ct is: String[] stringArray = new String[7] isAssignment: false Array: new String[7] Elements: []
lengths: [7] [7]
Their type are: class [Ljava.lang.String; String[]
statement is: stringArray[0] = "Envoyer E-Mail à:", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"Envoyer E-Mail à:" Ct is: stringArray[0] = "Envoyer E-Mail à:"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: Object[][] objectArray = new Object[2][4], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [2, 4] Ct is: String[] stringArray = new String[7] isAssignment: false Array: new Object[2][4] Elements: []
lengths: [7] [2, 4]
Dimension: [2, 4] Ct is: Object[][] objectArray = new Object[0][4] isAssignment: false Array: new Object[2][4] Elements: []
lengths: [0, 4] [2, 4]
Their type are: class [[Ljava.lang.Object; Object[][]
statement is: objectArray[0][0] = "John Doe", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : objectArray[0][0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl Object Assignment:"John Doe" Ct is: objectArray[0][0] = "John Doe"
target : objectArray[0] class spoon.support.reflect.code.CtLiteralImpl
statement is: objectArray[0][1] = "john.doe@example.com", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : objectArray[0][1] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl Object Assignment:"john.doe@example.com" Ct is: objectArray[0][1] = "john.doe@example.com"
target : objectArray[0] class spoon.support.reflect.code.CtLiteralImpl
statement is: objectArray[0][2] = "Hello John, I hope you're doing well.", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : objectArray[0][2] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl Object Assignment:"Hello John, I hope you're doing well." Ct is: objectArray[0][2] = "Hello John, I hope you're doing well."
target : objectArray[0] class spoon.support.reflect.code.CtLiteralImpl
statement is: objectArray[1][0] = "Jane Smith", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : objectArray[1][0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl Object Assignment:"Jane Smith" Ct is: objectArray[1][0] = "Jane Smith"
target : objectArray[1] class spoon.support.reflect.code.CtLiteralImpl
statement is: objectArray[1][1] = "jane.smith@example.com", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : objectArray[1][1] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl Object Assignment:"jane.smith@example.com" Ct is: objectArray[1][1] = "jane.smith@example.com"
target : objectArray[1] class spoon.support.reflect.code.CtLiteralImpl
statement is: objectArray[1][2] = "Hello Jane, I hope you're doing well too.", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : objectArray[1][2] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl Object Assignment:"Hello Jane, I hope you're doing well too." Ct is: objectArray[1][2] = "Hello Jane, I hope you're doing well too."
target : objectArray[1] class spoon.support.reflect.code.CtLiteralImpl
statement is: TableStockage tableStockage = new TableStockage(stringArray, objectArray), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: modifTableStockage.selectMail(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: modifTableStockage.selectMail() target is: modifTableStockage method is: selectMail()
source statement: fr.unice.gfarce.interGraph.ModifTableStockage(Lfr/unice/gfarce/interGraph/TableStockage;)V callee: VariableReference: Statement 4, type fr.unice.gfarce.interGraph.ModifTableStockageindex is: 5
Matched Method is: selectMail()Lfr/unice/gfarce/interGraph/TableStockage;
TestCase is: String[] stringArray = new String[7];
String string = "Envoyer E-Mail \u00E0:";
stringArray[0] = string;
Object[][] objectArray = new Object[0][4];
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
((ModifTableStockage) tableStockage).selectMail();

statement is: fr.unice.gfarce.interGraph.TableStockage()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class fr.unice.gfarce.interGraph.TableStockage
statement code is: TableStockage tableStockage = new TableStockage()
statement is: fr.unice.gfarce.interGraph.ModifTableStockage(Lfr/unice/gfarce/interGraph/TableStockage;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class fr.unice.gfarce.interGraph.ModifTableStockage
statement code is: ModifTableStockage modifTableStockage = new ModifTableStockage(arg0)
statement is: Class<Object> class = Object.class type is: class org.evosuite.testcase.statements.ClassPrimitiveStatement return type java.lang.Class<java.lang.Object>
statement code is: Class<Object> class = Object.class
statement is: ajouterColonne(Ljava/lang/String;Ljava/lang/Class;)Lfr/unice/gfarce/interGraph/TableStockage; type is: class org.evosuite.testcase.statements.MethodStatement return type class fr.unice.gfarce.interGraph.TableStockage
statement code is: TableStockage ajouterColonne = modifTableStockage.ajouterColonne("Le mail sera envoye a toute la liste", arg1)
test data is: TableStockage tableStockage = new TableStockage();
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
Class<Object> class = Object.class;
modifTableStockage.ajouterColonne("Le mail sera envoye a toute la liste", class);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        TableStockage tableStockage = new TableStockage();
        ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
        Class<String> $missing$ = String.class;
        modifTableStockage.ajouterColonne("emailAddresses", $missing$);
    }
}
statement is: TableStockage tableStockage = new TableStockage(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Class<String> $missing$ = String.class, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: String.class is String
statement is: modifTableStockage.ajouterColonne("emailAddresses", $missing$), class spoon.support.reflect.code.CtInvocationImpl
invocation is: modifTableStockage.ajouterColonne("emailAddresses", $missing$) target is: modifTableStockage method is: ajouterColonne(java.lang.String,java.lang.Class)
source statement: fr.unice.gfarce.interGraph.ModifTableStockage(Lfr/unice/gfarce/interGraph/TableStockage;)V callee: VariableReference: Statement 1, type fr.unice.gfarce.interGraph.ModifTableStockageindex is: 1
Matched Method is: ajouterColonne(Ljava/lang/String;Ljava/lang/Class;)Lfr/unice/gfarce/interGraph/TableStockage;
i 1 Parameters size() 1 Num of Method Parameters: 2
TestCase is: TableStockage tableStockage = new TableStockage();
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
String string = "emailAddresses";
Class<Object> class = null;
modifTableStockage.ajouterColonne(string, class);

statement is: org.evosuite.testcase.statements.ArrayStatement@e07bf240 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [Ljava.lang.String;
statement code is: String[] stringArray = new String[2]
statement is: org.evosuite.testcase.statements.ArrayStatement@a1ef96d1 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [[Ljava.lang.Object;
statement code is: Object[][] objectArray = new Object[8][0]
statement is: org.evosuite.testcase.statements.AssignmentStatement@1f20bfc type is: class org.evosuite.testcase.statements.AssignmentStatement return type class [Ljava.lang.Object;
statement code is: objectArray[0] = (Object[]) stringArray
statement is: org.evosuite.testcase.statements.AssignmentStatement@2eaa40db type is: class org.evosuite.testcase.statements.AssignmentStatement return type class [Ljava.lang.Object;
statement code is: objectArray[1] = (Object[]) stringArray
statement is: org.evosuite.testcase.statements.AssignmentStatement@4aeb6ee1 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class [Ljava.lang.Object;
statement code is: objectArray[2] = (Object[]) stringArray
statement is: org.evosuite.testcase.statements.AssignmentStatement@24b15416 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class [Ljava.lang.Object;
statement code is: objectArray[3] = (Object[]) stringArray
statement is: org.evosuite.testcase.statements.AssignmentStatement@a2851100 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class [Ljava.lang.Object;
statement code is: objectArray[4] = (Object[]) stringArray
statement is: org.evosuite.testcase.statements.AssignmentStatement@ce6972b3 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class [Ljava.lang.Object;
statement code is: objectArray[5] = (Object[]) stringArray
statement is: org.evosuite.testcase.statements.AssignmentStatement@a30ea42d type is: class org.evosuite.testcase.statements.AssignmentStatement return type class [Ljava.lang.Object;
statement code is: objectArray[6] = (Object[]) stringArray
statement is: org.evosuite.testcase.statements.AssignmentStatement@905eee1f type is: class org.evosuite.testcase.statements.AssignmentStatement return type class [Ljava.lang.Object;
statement code is: objectArray[7] = (Object[]) stringArray
statement is: fr.unice.gfarce.interGraph.TableStockage([Ljava/lang/String;[[Ljava/lang/Object;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class fr.unice.gfarce.interGraph.TableStockage
statement code is: TableStockage tableStockage = new TableStockage(arg0, arg1)
statement is: fr.unice.gfarce.interGraph.ModifTableStockage(Lfr/unice/gfarce/interGraph/TableStockage;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class fr.unice.gfarce.interGraph.ModifTableStockage
statement code is: ModifTableStockage modifTableStockage = new ModifTableStockage(arg0)
statement is: Class<Object> class = Object.class type is: class org.evosuite.testcase.statements.ClassPrimitiveStatement return type java.lang.Class<java.lang.Object>
statement code is: Class<Object> class = Object.class
statement is: ajouterColonne(Ljava/lang/String;Ljava/lang/Class;)Lfr/unice/gfarce/interGraph/TableStockage; type is: class org.evosuite.testcase.statements.MethodStatement return type class fr.unice.gfarce.interGraph.TableStockage
statement code is: TableStockage ajouterColonne = modifTableStockage.ajouterColonne("PAS DE COLONNE", arg1)
test data is: String[] stringArray = new String[2];
Object[][] objectArray = new Object[8][0];
objectArray[0] = (Object[]) stringArray;
objectArray[1] = (Object[]) stringArray;
objectArray[2] = (Object[]) stringArray;
objectArray[3] = (Object[]) stringArray;
objectArray[4] = (Object[]) stringArray;
objectArray[5] = (Object[]) stringArray;
objectArray[6] = (Object[]) stringArray;
objectArray[7] = (Object[]) stringArray;
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
Class<Object> class = Object.class;
modifTableStockage.ajouterColonne("PAS DE COLONNE", class);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        String[] stringArray = new String[]{ "Titre1", "Titre2", "Titre3" };
        Object[][] objectArray = new Object[8][0];
        objectArray[0] = ((Object[]) (stringArray));
        objectArray[1] = ((Object[]) (stringArray));
        objectArray[2] = ((Object[]) (stringArray));
        objectArray[3] = ((Object[]) (stringArray));
        objectArray[4] = ((Object[]) (stringArray));
        objectArray[5] = ((Object[]) (stringArray));
        objectArray[6] = ((Object[]) (stringArray));
        objectArray[7] = ((Object[]) (stringArray));
        TableStockage tableStockage = new TableStockage(stringArray, objectArray);
        ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
        Class<Object> $missing$ = Object.class;
        modifTableStockage.ajouterColonne("Nom de la colonne", $missing$);
    }
}
statement is: String[] stringArray = new String[]{ "Titre1", "Titre2", "Titre3" }, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [] Ct is: String[] stringArray = new String[2] isAssignment: false Array: new String[]{ "Titre1", "Titre2", "Titre3" } Elements: ["Titre1", "Titre2", "Titre3"]
lengths: [2] []
Dimension: [] Ct is: Object[][] objectArray = new Object[8][0] isAssignment: false Array: new String[]{ "Titre1", "Titre2", "Titre3" } Elements: ["Titre1", "Titre2", "Titre3"]
lengths: [8, 0] []
statement is: Object[][] objectArray = new Object[8][0], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [8, 0] Ct is: String[] stringArray = new String[2] isAssignment: false Array: new Object[8][0] Elements: []
lengths: [2] [8, 0]
Dimension: [8, 0] Ct is: Object[][] objectArray = new Object[8][0] isAssignment: false Array: new Object[8][0] Elements: []
lengths: [8, 0] [8, 0]
Their type are: class [[Ljava.lang.Object; Object[][]
statement is: objectArray[0] = ((Object[]) (stringArray)), class spoon.support.reflect.code.CtAssignmentImpl
Assigned : objectArray[0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl Object[] Assignment:((Object[]) (stringArray)) Ct is: objectArray[0] = ((Object[]) (stringArray))
target : objectArray class spoon.support.reflect.code.CtLiteralImpl
TestCase Could not be added: org.evosuite.testcase.statements.AssignmentStatement@e64deb65
statement is: objectArray[1] = ((Object[]) (stringArray)), class spoon.support.reflect.code.CtAssignmentImpl
Assigned : objectArray[1] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl Object[] Assignment:((Object[]) (stringArray)) Ct is: objectArray[1] = ((Object[]) (stringArray))
target : objectArray class spoon.support.reflect.code.CtLiteralImpl
TestCase Could not be added: org.evosuite.testcase.statements.AssignmentStatement@2dc346da
statement is: objectArray[2] = ((Object[]) (stringArray)), class spoon.support.reflect.code.CtAssignmentImpl
Assigned : objectArray[2] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl Object[] Assignment:((Object[]) (stringArray)) Ct is: objectArray[2] = ((Object[]) (stringArray))
target : objectArray class spoon.support.reflect.code.CtLiteralImpl
TestCase Could not be added: org.evosuite.testcase.statements.AssignmentStatement@600fbef3
statement is: objectArray[3] = ((Object[]) (stringArray)), class spoon.support.reflect.code.CtAssignmentImpl
Assigned : objectArray[3] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl Object[] Assignment:((Object[]) (stringArray)) Ct is: objectArray[3] = ((Object[]) (stringArray))
target : objectArray class spoon.support.reflect.code.CtLiteralImpl
TestCase Could not be added: org.evosuite.testcase.statements.AssignmentStatement@453a2297
statement is: objectArray[4] = ((Object[]) (stringArray)), class spoon.support.reflect.code.CtAssignmentImpl
Assigned : objectArray[4] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl Object[] Assignment:((Object[]) (stringArray)) Ct is: objectArray[4] = ((Object[]) (stringArray))
target : objectArray class spoon.support.reflect.code.CtLiteralImpl
TestCase Could not be added: org.evosuite.testcase.statements.AssignmentStatement@aabc6121
statement is: objectArray[5] = ((Object[]) (stringArray)), class spoon.support.reflect.code.CtAssignmentImpl
Assigned : objectArray[5] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl Object[] Assignment:((Object[]) (stringArray)) Ct is: objectArray[5] = ((Object[]) (stringArray))
target : objectArray class spoon.support.reflect.code.CtLiteralImpl
TestCase Could not be added: org.evosuite.testcase.statements.AssignmentStatement@b574d6ed
statement is: objectArray[6] = ((Object[]) (stringArray)), class spoon.support.reflect.code.CtAssignmentImpl
Assigned : objectArray[6] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl Object[] Assignment:((Object[]) (stringArray)) Ct is: objectArray[6] = ((Object[]) (stringArray))
target : objectArray class spoon.support.reflect.code.CtLiteralImpl
TestCase Could not be added: org.evosuite.testcase.statements.AssignmentStatement@7a2f2357
statement is: objectArray[7] = ((Object[]) (stringArray)), class spoon.support.reflect.code.CtAssignmentImpl
Assigned : objectArray[7] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl Object[] Assignment:((Object[]) (stringArray)) Ct is: objectArray[7] = ((Object[]) (stringArray))
target : objectArray class spoon.support.reflect.code.CtLiteralImpl
TestCase Could not be added: org.evosuite.testcase.statements.AssignmentStatement@4de7faf3
statement is: TableStockage tableStockage = new TableStockage(stringArray, objectArray), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: fr.unice.gfarce.interGraph.TableStockage([Ljava/lang/String;[[Ljava/lang/Object;)V
statement is: ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: fr.unice.gfarce.interGraph.ModifTableStockage(Lfr/unice/gfarce/interGraph/TableStockage;)V
statement is: Class<Object> $missing$ = Object.class, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: Object.class is Object
statement is: modifTableStockage.ajouterColonne("Nom de la colonne", $missing$), class spoon.support.reflect.code.CtInvocationImpl
invocation is: modifTableStockage.ajouterColonne("Nom de la colonne", $missing$) target is: modifTableStockage method is: ajouterColonne(java.lang.String,java.lang.Class)
TestCase is: Object[][] objectArray = new Object[8][0];

statement is: fr.unice.gfarce.interGraph.TableStockage()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class fr.unice.gfarce.interGraph.TableStockage
statement code is: TableStockage tableStockage = new TableStockage()
statement is: fr.unice.gfarce.interGraph.ModifTableStockage(Lfr/unice/gfarce/interGraph/TableStockage;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class fr.unice.gfarce.interGraph.ModifTableStockage
statement code is: ModifTableStockage modifTableStockage = new ModifTableStockage(arg0)
statement is: colonneMail()Lfr/unice/gfarce/interGraph/TableStockage; type is: class org.evosuite.testcase.statements.MethodStatement return type class fr.unice.gfarce.interGraph.TableStockage
statement code is: TableStockage colonneMail = modifTableStockage.colonneMail()
test data is: TableStockage tableStockage = new TableStockage();
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
modifTableStockage.colonneMail();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        TableStockage tableStockage = new TableStockage();
        ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
        modifTableStockage.colonneMail("john.doe@example.com");
    }
}
statement is: TableStockage tableStockage = new TableStockage(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: modifTableStockage.colonneMail("john.doe@example.com"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: modifTableStockage.colonneMail("john.doe@example.com") target is: modifTableStockage method is: colonneMail(java.lang.String)
TestCase is: TableStockage tableStockage = new TableStockage();
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);

statement is: fr.unice.gfarce.interGraph.TableStockage(II)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class fr.unice.gfarce.interGraph.TableStockage
statement code is: TableStockage tableStockage = new TableStockage(2, 0)
statement is: fr.unice.gfarce.interGraph.ModifTableStockage(Lfr/unice/gfarce/interGraph/TableStockage;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class fr.unice.gfarce.interGraph.ModifTableStockage
statement code is: ModifTableStockage modifTableStockage = new ModifTableStockage(arg0)
statement is: supprimerLigne(I)Lfr/unice/gfarce/interGraph/TableStockage; type is: class org.evosuite.testcase.statements.MethodStatement return type class fr.unice.gfarce.interGraph.TableStockage
statement code is: TableStockage supprimerLigne = modifTableStockage.supprimerLigne(2)
statement is: colonneMail()Lfr/unice/gfarce/interGraph/TableStockage; type is: class org.evosuite.testcase.statements.MethodStatement return type class fr.unice.gfarce.interGraph.TableStockage
statement code is: TableStockage colonneMail = modifTableStockage.colonneMail()
statement is: supprimerColonne(I)Lfr/unice/gfarce/interGraph/TableStockage; type is: class org.evosuite.testcase.statements.MethodStatement return type class fr.unice.gfarce.interGraph.TableStockage
statement code is: TableStockage supprimerColonne = modifTableStockage.supprimerColonne(0)
test data is: TableStockage tableStockage = new TableStockage(2, 0);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
modifTableStockage.supprimerLigne(2);
modifTableStockage.colonneMail();
modifTableStockage.supprimerColonne(0);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        TableStockage tableStockage = new TableStockage(2, 0);
        ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
        modifTableStockage.supprimerLigne(2);
        modifTableStockage.colonneMail();
        modifTableStockage.supprimerColonne(0);
    }
}
statement is: TableStockage tableStockage = new TableStockage(2, 0), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: modifTableStockage.supprimerLigne(2), class spoon.support.reflect.code.CtInvocationImpl
invocation is: modifTableStockage.supprimerLigne(2) target is: modifTableStockage method is: supprimerLigne(int)
source statement: fr.unice.gfarce.interGraph.ModifTableStockage(Lfr/unice/gfarce/interGraph/TableStockage;)V callee: VariableReference: Statement 1, type fr.unice.gfarce.interGraph.ModifTableStockageindex is: 3
Matched Method is: supprimerLigne(I)Lfr/unice/gfarce/interGraph/TableStockage;
statement is: modifTableStockage.colonneMail(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: modifTableStockage.colonneMail() target is: modifTableStockage method is: colonneMail()
source statement: fr.unice.gfarce.interGraph.ModifTableStockage(Lfr/unice/gfarce/interGraph/TableStockage;)V callee: VariableReference: Statement 1, type fr.unice.gfarce.interGraph.ModifTableStockageindex is: 3
Matched Method is: colonneMail()Lfr/unice/gfarce/interGraph/TableStockage;
statement is: modifTableStockage.supprimerColonne(0), class spoon.support.reflect.code.CtInvocationImpl
invocation is: modifTableStockage.supprimerColonne(0) target is: modifTableStockage method is: supprimerColonne(int)
source statement: fr.unice.gfarce.interGraph.ModifTableStockage(Lfr/unice/gfarce/interGraph/TableStockage;)V callee: VariableReference: Statement 1, type fr.unice.gfarce.interGraph.ModifTableStockageindex is: 3
Matched Method is: supprimerColonne(I)Lfr/unice/gfarce/interGraph/TableStockage;
TestCase is: int _int = 2;
int _int = 0;
TableStockage tableStockage = new TableStockage(_int, _int);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
int _int = 2;
((ModifTableStockage) _int).supprimerLigne(_int);
((ModifTableStockage) _int).colonneMail();
int _int = 0;
((ModifTableStockage) _int).supprimerColonne(_int);

statement is: org.evosuite.testcase.statements.ArrayStatement@7b00a330 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [Ljava.lang.String;
statement code is: String[] stringArray = new String[4]
statement is: org.evosuite.testcase.statements.AssignmentStatement@cafe3ea2 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.String
statement code is: stringArray[0] = "wtp"
statement is: org.evosuite.testcase.statements.AssignmentStatement@98fbb2ba type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.String
statement code is: stringArray[1] = "QA}"
statement is: org.evosuite.testcase.statements.AssignmentStatement@e70f73fb type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.String
statement code is: stringArray[2] = "Envoyer E-Mail a:"
statement is: org.evosuite.testcase.statements.ArrayStatement@e1d6376d type is: class org.evosuite.testcase.statements.ArrayStatement return type class [[Ljava.lang.Object;
statement code is: Object[][] objectArray = new Object[3][5]
statement is: fr.unice.gfarce.interGraph.TableStockage([Ljava/lang/String;[[Ljava/lang/Object;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class fr.unice.gfarce.interGraph.TableStockage
statement code is: TableStockage tableStockage = new TableStockage(arg0, arg1)
statement is: fr.unice.gfarce.interGraph.ModifTableStockage(Lfr/unice/gfarce/interGraph/TableStockage;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class fr.unice.gfarce.interGraph.ModifTableStockage
statement code is: ModifTableStockage modifTableStockage = new ModifTableStockage(arg0)
statement is: selectMail()Lfr/unice/gfarce/interGraph/TableStockage; type is: class org.evosuite.testcase.statements.MethodStatement return type class fr.unice.gfarce.interGraph.TableStockage
statement code is: TableStockage selectMail = modifTableStockage.selectMail()
test data is: String[] stringArray = new String[4];
stringArray[0] = "wtp";
stringArray[1] = "QA}";
stringArray[2] = "Envoyer E-Mail a:";
Object[][] objectArray = new Object[3][5];
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
modifTableStockage.selectMail();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        String[] stringArray = new String[4];
        stringArray[0] = "wtp";
        stringArray[1] = "QA}";
        stringArray[2] = "Envoyer E-Mail a:";
        Object[][] objectArray = new Object[3][5];
        objectArray[0][0] = 1;
        objectArray[0][1] = "John Doe";
        objectArray[0][2] = "johndoe@example.com";
        objectArray[0][3] = "Hello World";
        objectArray[0][4] = new Date();
        objectArray[1][0] = 2;
        objectArray[1][1] = "Jane Doe";
        objectArray[1][2] = "janedoe@example.com";
        objectArray[1][3] = "Hello World 2";
        objectArray[1][4] = new Date();
        objectArray[2][0] = 3;
        objectArray[2][1] = "Jim Brown";
        objectArray[2][2] = "jimbrown@example.com";
        objectArray[2][3] = "Hello World 3";
        objectArray[2][4] = new Date();
        TableStockage tableStockage = new TableStockage(stringArray, objectArray);
        ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
        modifTableStockage.selectMail();
    }
}
statement is: String[] stringArray = new String[4], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [4] Ct is: String[] stringArray = new String[4] isAssignment: false Array: new String[4] Elements: []
lengths: [4] [4]
Their type are: class [Ljava.lang.String; String[]
statement is: stringArray[0] = "wtp", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"wtp" Ct is: stringArray[0] = "wtp"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[1] = "QA}", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[1] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"QA}" Ct is: stringArray[1] = "QA}"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[2] = "Envoyer E-Mail a:", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[2] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"Envoyer E-Mail a:" Ct is: stringArray[2] = "Envoyer E-Mail a:"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: Object[][] objectArray = new Object[3][5], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [3, 5] Ct is: String[] stringArray = new String[4] isAssignment: false Array: new Object[3][5] Elements: []
lengths: [4] [3, 5]
Dimension: [3, 5] Ct is: Object[][] objectArray = new Object[3][5] isAssignment: false Array: new Object[3][5] Elements: []
lengths: [3, 5] [3, 5]
Their type are: class [[Ljava.lang.Object; Object[][]
statement is: objectArray[0][0] = 1, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : objectArray[0][0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl Object Assignment:1 Ct is: objectArray[0][0] = 1
target : objectArray[0] class spoon.support.reflect.code.CtLiteralImpl
statement is: objectArray[0][1] = "John Doe", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : objectArray[0][1] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl Object Assignment:"John Doe" Ct is: objectArray[0][1] = "John Doe"
target : objectArray[0] class spoon.support.reflect.code.CtLiteralImpl
statement is: objectArray[0][2] = "johndoe@example.com", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : objectArray[0][2] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl Object Assignment:"johndoe@example.com" Ct is: objectArray[0][2] = "johndoe@example.com"
target : objectArray[0] class spoon.support.reflect.code.CtLiteralImpl
statement is: objectArray[0][3] = "Hello World", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : objectArray[0][3] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl Object Assignment:"Hello World" Ct is: objectArray[0][3] = "Hello World"
target : objectArray[0] class spoon.support.reflect.code.CtLiteralImpl
statement is: objectArray[0][4] = new Date(), class spoon.support.reflect.code.CtAssignmentImpl
Assigned : objectArray[0][4] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl Object Assignment:new Date() Ct is: objectArray[0][4] = new Date()
target : objectArray[0] class spoon.support.reflect.code.CtLiteralImpl
statement is: objectArray[1][0] = 2, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : objectArray[1][0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl Object Assignment:2 Ct is: objectArray[1][0] = 2
target : objectArray[1] class spoon.support.reflect.code.CtLiteralImpl
statement is: objectArray[1][1] = "Jane Doe", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : objectArray[1][1] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl Object Assignment:"Jane Doe" Ct is: objectArray[1][1] = "Jane Doe"
target : objectArray[1] class spoon.support.reflect.code.CtLiteralImpl
statement is: objectArray[1][2] = "janedoe@example.com", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : objectArray[1][2] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl Object Assignment:"janedoe@example.com" Ct is: objectArray[1][2] = "janedoe@example.com"
target : objectArray[1] class spoon.support.reflect.code.CtLiteralImpl
statement is: objectArray[1][3] = "Hello World 2", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : objectArray[1][3] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl Object Assignment:"Hello World 2" Ct is: objectArray[1][3] = "Hello World 2"
target : objectArray[1] class spoon.support.reflect.code.CtLiteralImpl
statement is: objectArray[1][4] = new Date(), class spoon.support.reflect.code.CtAssignmentImpl
Assigned : objectArray[1][4] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl Object Assignment:new Date() Ct is: objectArray[1][4] = new Date()
target : objectArray[1] class spoon.support.reflect.code.CtLiteralImpl
statement is: objectArray[2][0] = 3, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : objectArray[2][0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl Object Assignment:3 Ct is: objectArray[2][0] = 3
target : objectArray[2] class spoon.support.reflect.code.CtLiteralImpl
statement is: objectArray[2][1] = "Jim Brown", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : objectArray[2][1] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl Object Assignment:"Jim Brown" Ct is: objectArray[2][1] = "Jim Brown"
target : objectArray[2] class spoon.support.reflect.code.CtLiteralImpl
statement is: objectArray[2][2] = "jimbrown@example.com", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : objectArray[2][2] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl Object Assignment:"jimbrown@example.com" Ct is: objectArray[2][2] = "jimbrown@example.com"
target : objectArray[2] class spoon.support.reflect.code.CtLiteralImpl
statement is: objectArray[2][3] = "Hello World 3", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : objectArray[2][3] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl Object Assignment:"Hello World 3" Ct is: objectArray[2][3] = "Hello World 3"
target : objectArray[2] class spoon.support.reflect.code.CtLiteralImpl
statement is: objectArray[2][4] = new Date(), class spoon.support.reflect.code.CtAssignmentImpl
Assigned : objectArray[2][4] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl Object Assignment:new Date() Ct is: objectArray[2][4] = new Date()
target : objectArray[2] class spoon.support.reflect.code.CtLiteralImpl
statement is: TableStockage tableStockage = new TableStockage(stringArray, objectArray), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: modifTableStockage.selectMail(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: modifTableStockage.selectMail() target is: modifTableStockage method is: selectMail()
source statement: fr.unice.gfarce.interGraph.ModifTableStockage(Lfr/unice/gfarce/interGraph/TableStockage;)V callee: VariableReference: Statement 6, type fr.unice.gfarce.interGraph.ModifTableStockageindex is: 9
Matched Method is: selectMail()Lfr/unice/gfarce/interGraph/TableStockage;
TestCase is: String[] stringArray = new String[4];
String string = "wtp";
stringArray[0] = string;
String string = "QA}";
stringArray[1] = string;
String string = "Envoyer E-Mail a:";
stringArray[2] = string;
Object[][] objectArray = new Object[3][5];
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
((ModifTableStockage) stringArray[2]).selectMail();

* test suite isTestSuite: 42
Test 0: 
TableStockage tableStockage = new TableStockage();
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
// Undeclared exception!
try { 
  modifTableStockage.ajouterLigne();
  fail("Expecting exception: HeadlessException");

} catch(HeadlessException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("java.awt.GraphicsEnvironment", e);
}

Test 1: 
String[] stringArray = new String[1];
stringArray[0] = "PAS DE COLONNE";
Object[][] objectArray = new Object[6][4];
objectArray[0] = (Object[]) stringArray;
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
modifTableStockage.ajouterLigne();
Test 2: 
String[] stringArray = new String[4];
Object[][] objectArray = new Object[2][8];
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
Class<Object> class = Object.class;
tableStockage.setColumnClass(1, class);
modifTableStockage.ajouterLigne();
Test 3: 
String[] stringArray = new String[4];
Object[][] objectArray = new Object[2][8];
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
modifTableStockage.supprimerColonne(1);
Test 4: 
TableStockage tableStockage = new TableStockage(2, 0);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
modifTableStockage.colonneMail();
modifTableStockage.supprimerColonne(0);
Test 5: 
String[] stringArray = new String[4];
Object[][] objectArray = new Object[2][8];
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
modifTableStockage.supprimerLigne(1);
Test 6: 
TableStockage tableStockage = new TableStockage(2253, 0);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
modifTableStockage.supprimerLigne(2233);
Test 7: 
TableStockage tableStockage = new TableStockage(2253, 2253);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
// Undeclared exception!
try { 
  modifTableStockage.supprimerLigne((-8176));
  fail("Expecting exception: ArrayIndexOutOfBoundsException");

} catch(ArrayIndexOutOfBoundsException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 8: 
TableStockage tableStockage = new TableStockage(1154, 1281);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
// Undeclared exception!
try { 
  modifTableStockage.separerColonne(1154);
  fail("Expecting exception: HeadlessException");

} catch(HeadlessException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("java.awt.GraphicsEnvironment", e);
}

Test 9: 
String[] stringArray = new String[4];
stringArray[1] = "9|%SZ";
Object[][] objectArray = new Object[2][8];
objectArray[0] = (Object[]) stringArray;
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
// Undeclared exception!
try { 
  modifTableStockage.separerColonne(1);
  fail("Expecting exception: HeadlessException");

} catch(HeadlessException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("java.awt.GraphicsEnvironment", e);
}

Test 10: 
String[] stringArray = new String[7];
stringArray[2] = "PAS SEPARABLE";
Object[][] objectArray = new Object[3][4];
objectArray[0] = (Object[]) stringArray;
objectArray[1] = (Object[]) stringArray;
objectArray[2] = (Object[]) stringArray;
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
modifTableStockage.separerColonne(2);
Test 11: 
String[] stringArray = new String[7];
stringArray[0] = " 9]KYN1]vi;";
Object[][] objectArray = new Object[9][8];
objectArray[0] = (Object[]) stringArray;
String[] stringArray = new String[3];
stringArray[0] = "k`O}0&47ZS/F";
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
// Undeclared exception!
try { 
  modifTableStockage.separerColonne(0);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
}

Test 12: 
String[] stringArray = new String[7];
stringArray[0] = " 9]KYN1]vi;";
Object[][] objectArray = new Object[9][8];
objectArray[0] = (Object[]) stringArray;
Object[] objectArray = new Object[25];
objectArray[0] = (Object) "k`O}0&47ZS/F";
objectArray[1] = objectArray;
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
// Undeclared exception!
try { 
  modifTableStockage.separerColonne(0);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
}

Test 13: 
TableStockage tableStockage = new TableStockage();
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
// Undeclared exception!
try { 
  modifTableStockage.fusionnerColonnes(742);
  fail("Expecting exception: HeadlessException");

} catch(HeadlessException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("java.awt.GraphicsEnvironment", e);
}

Test 14: 
TableStockage tableStockage = new TableStockage(4864, 4864);
Class<Boolean> class = Boolean.class;
tableStockage.setColumnClass(187, class);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
// Undeclared exception!
try { 
  modifTableStockage.fusionnerColonnes(187);
  fail("Expecting exception: HeadlessException");

} catch(HeadlessException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("java.awt.GraphicsEnvironment", e);
}

Test 15: 
String[] stringArray = new String[4];
stringArray[1] = "9|%SZ";
stringArray[2] = "NnlB*s6eHruEmc";
Object[][] objectArray = new Object[2][8];
objectArray[0] = (Object[]) stringArray;
objectArray[1] = (Object[]) stringArray;
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
modifTableStockage.fusionnerColonnes(1);
Test 16: 
TableStockage tableStockage = new TableStockage();
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
// Undeclared exception!
try { 
  modifTableStockage.selectMail();
  fail("Expecting exception: HeadlessException");

} catch(HeadlessException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("java.awt.GraphicsEnvironment", e);
}

Test 17: 
String[] stringArray = new String[7];
stringArray[0] = "Envoyer E-Mail a:";
Object[][] objectArray = new Object[0][4];
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
modifTableStockage.selectMail();
Test 18: 
TableStockage tableStockage = new TableStockage();
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
Class<Object> class = Object.class;
modifTableStockage.ajouterColonne("Le mail sera envoye a toute la liste", class);
Test 19: 
String[] stringArray = new String[2];
Object[][] objectArray = new Object[8][0];
objectArray[0] = (Object[]) stringArray;
objectArray[1] = (Object[]) stringArray;
objectArray[2] = (Object[]) stringArray;
objectArray[3] = (Object[]) stringArray;
objectArray[4] = (Object[]) stringArray;
objectArray[5] = (Object[]) stringArray;
objectArray[6] = (Object[]) stringArray;
objectArray[7] = (Object[]) stringArray;
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
Class<Object> class = Object.class;
modifTableStockage.ajouterColonne("PAS DE COLONNE", class);
Test 20: 
TableStockage tableStockage = new TableStockage();
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
modifTableStockage.colonneMail();
Test 21: 
TableStockage tableStockage = new TableStockage(2, 0);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
modifTableStockage.supprimerLigne(2);
modifTableStockage.colonneMail();
modifTableStockage.supprimerColonne(0);
Test 22: 
String[] stringArray = new String[4];
stringArray[0] = "wtp";
stringArray[1] = "QA}";
stringArray[2] = "Envoyer E-Mail a:";
Object[][] objectArray = new Object[3][5];
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
// Undeclared exception!
try { 
  modifTableStockage.selectMail();
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("fr.unice.gfarce.interGraph.ModifTableStockage", e);
}

Test 23: 
TableStockage tableStockage = new TableStockage();
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
modifTableStockage.ajouterLigne();

Test 24: 
String[] stringArray = new String[1];
stringArray = "PAS DE COLONNE";
TableStockage tableStockage = new TableStockage(stringArray, (Object[][]) "PAS DE COLONNE");
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);

Test 25: 
String[] stringArray = new String[4];
Object[][] objectArray = new Object[2][8];
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
tableStockage.setColumnClass(1, (Class<?>) null);
modifTableStockage.ajouterLigne();
TableStockage tableStockage = new TableStockage(stringArray, objectArray);

Test 26: 
TableStockage tableStockage = new TableStockage(2253, 0);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
((ModifTableStockage)0).supprimerLigne(2233);

Test 27: 
TableStockage tableStockage = new TableStockage(2253, 2253);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
((ModifTableStockage)2253).supprimerLigne((int) (Integer) null);

Test 28: 
String string = "Products";
TableStockage tableStockage = new TableStockage((int) "Inventory", (int) "Products");
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
String string = "ProductID";
((ModifTableStockage) string).separerColonne((int) string);

Test 29: 
String[] stringArray = new String[4];
stringArray[1] = "9|%SZ";
Object[][] objectArray = new Object[2][8];
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
modifTableStockage.separerColonne(1);

Test 30: 
String[] stringArray = new String[7];
stringArray[2] = "CADASTR\u00C9";
stringArray[2] = "PAS SEPARABLE";
stringArray[2] = "SEPARABLE";
String string = "PAS SEPARABLE";
stringArray[2] = "PAS SEPARABLE";
stringArray[2] = "SEPARABLE";
stringArray[2] = "PAS SEPARABLE";
stringArray[2] = "SEPARABLE";
Object[][] objectArray = new Object[3][4];
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
int _int = 2;
((ModifTableStockage) string).separerColonne(_int);

Test 31: 
String[] stringArray = new String[7];
stringArray[0] = "ABC";
Object[][] objectArray = new Object[9][8];
String[] stringArray = new String[7];
stringArray[0] = "XYZ";
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
((ModifTableStockage) tableStockage).separerColonne(0);

Test 32: 
String[] stringArray = new String[7];
stringArray[0] = "9]KYN1]vi;";
Object[][] objectArray = new Object[9][8];
Object[] objectArray = new Object[25];
objectArray[0] = (Object) "k`O}0&47ZS/F";
objectArray[0] = (Object) objectArray;
TableStockage tableStockage = new TableStockage(stringArray, (Object[][]) objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
int _int = 0;
((ModifTableStockage) tableStockage).separerColonne(_int);

Test 33: 
TableStockage tableStockage = new TableStockage();
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
modifTableStockage.fusionnerColonnes((int) "colonne1");

Test 34: 
TableStockage tableStockage = new TableStockage(4864, 4864);
int _int = 187;
((TableStockage)4864).setColumnClass(187, (Class<?>) null);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
String string = "ID";
((ModifTableStockage) _int).fusionnerColonnes((int) string);

Test 35: 
String[] stringArray = new String[4];
stringArray[1] = "9|%SZ";
stringArray[1] = "9|%SZ";
stringArray[2] = "NnlB*s6eHruEmc";
Object[][] objectArray = new Object[2][8];
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
((ModifTableStockage) tableStockage).fusionnerColonnes(1);

Test 36: 
String[] stringArray = new String[7];
stringArray[0] = "Envoyer E-Mail \u00E0:";
Object[][] objectArray = new Object[0][4];
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
((ModifTableStockage) tableStockage).selectMail();

Test 37: 
TableStockage tableStockage = new TableStockage();
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
modifTableStockage.ajouterColonne("emailAddresses", (Class<?>) null);

Test 38: 
Object[][] objectArray = new Object[8][0];

Test 39: 
TableStockage tableStockage = new TableStockage();
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);

Test 40: 
int _int = 0;
TableStockage tableStockage = new TableStockage(2, 0);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
((ModifTableStockage)0).supprimerLigne(2);
((ModifTableStockage) _int).colonneMail();
int _int = 0;
((ModifTableStockage) _int).supprimerColonne(_int);

Test 41: 
String[] stringArray = new String[4];
stringArray[0] = "wtp";
stringArray[1] = "QA}";
stringArray[2] = "Envoyer E-Mail a:";
Object[][] objectArray = new Object[3][5];
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
((ModifTableStockage)"Envoyer E-Mail a:").selectMail();


* Generated after the refinement and before minimization 42 tests with total length 242
* test suite isTestSuite: 42
Test 0: 
TableStockage tableStockage = new TableStockage();
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
// Undeclared exception!
try { 
  modifTableStockage.ajouterLigne();
  fail("Expecting exception: HeadlessException");

} catch(HeadlessException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("java.awt.GraphicsEnvironment", e);
}

Test 1: 
String[] stringArray = new String[1];
stringArray[0] = "PAS DE COLONNE";
Object[][] objectArray = new Object[6][4];
objectArray[0] = (Object[]) stringArray;
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
modifTableStockage.ajouterLigne();
Test 2: 
String[] stringArray = new String[4];
Object[][] objectArray = new Object[2][8];
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
Class<Object> class = Object.class;
tableStockage.setColumnClass(1, class);
modifTableStockage.ajouterLigne();
Test 3: 
String[] stringArray = new String[4];
Object[][] objectArray = new Object[2][8];
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
modifTableStockage.supprimerColonne(1);
Test 4: 
TableStockage tableStockage = new TableStockage(2, 0);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
modifTableStockage.colonneMail();
modifTableStockage.supprimerColonne(0);
Test 5: 
String[] stringArray = new String[4];
Object[][] objectArray = new Object[2][8];
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
modifTableStockage.supprimerLigne(1);
Test 6: 
TableStockage tableStockage = new TableStockage(2253, 0);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
modifTableStockage.supprimerLigne(2233);
Test 7: 
TableStockage tableStockage = new TableStockage(2253, 2253);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
// Undeclared exception!
try { 
  modifTableStockage.supprimerLigne((-8176));
  fail("Expecting exception: ArrayIndexOutOfBoundsException");

} catch(ArrayIndexOutOfBoundsException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 8: 
TableStockage tableStockage = new TableStockage(1154, 1281);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
// Undeclared exception!
try { 
  modifTableStockage.separerColonne(1154);
  fail("Expecting exception: HeadlessException");

} catch(HeadlessException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("java.awt.GraphicsEnvironment", e);
}

Test 9: 
String[] stringArray = new String[4];
stringArray[1] = "9|%SZ";
Object[][] objectArray = new Object[2][8];
objectArray[0] = (Object[]) stringArray;
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
// Undeclared exception!
try { 
  modifTableStockage.separerColonne(1);
  fail("Expecting exception: HeadlessException");

} catch(HeadlessException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("java.awt.GraphicsEnvironment", e);
}

Test 10: 
String[] stringArray = new String[7];
stringArray[2] = "PAS SEPARABLE";
Object[][] objectArray = new Object[3][4];
objectArray[0] = (Object[]) stringArray;
objectArray[1] = (Object[]) stringArray;
objectArray[2] = (Object[]) stringArray;
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
modifTableStockage.separerColonne(2);
Test 11: 
String[] stringArray = new String[7];
stringArray[0] = " 9]KYN1]vi;";
Object[][] objectArray = new Object[9][8];
objectArray[0] = (Object[]) stringArray;
String[] stringArray = new String[3];
stringArray[0] = "k`O}0&47ZS/F";
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
// Undeclared exception!
try { 
  modifTableStockage.separerColonne(0);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
}

Test 12: 
String[] stringArray = new String[7];
stringArray[0] = " 9]KYN1]vi;";
Object[][] objectArray = new Object[9][8];
objectArray[0] = (Object[]) stringArray;
Object[] objectArray = new Object[25];
objectArray[0] = (Object) "k`O}0&47ZS/F";
objectArray[1] = objectArray;
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
// Undeclared exception!
try { 
  modifTableStockage.separerColonne(0);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
}

Test 13: 
TableStockage tableStockage = new TableStockage();
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
// Undeclared exception!
try { 
  modifTableStockage.fusionnerColonnes(742);
  fail("Expecting exception: HeadlessException");

} catch(HeadlessException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("java.awt.GraphicsEnvironment", e);
}

Test 14: 
TableStockage tableStockage = new TableStockage(4864, 4864);
Class<Boolean> class = Boolean.class;
tableStockage.setColumnClass(187, class);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
// Undeclared exception!
try { 
  modifTableStockage.fusionnerColonnes(187);
  fail("Expecting exception: HeadlessException");

} catch(HeadlessException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("java.awt.GraphicsEnvironment", e);
}

Test 15: 
String[] stringArray = new String[4];
stringArray[1] = "9|%SZ";
stringArray[2] = "NnlB*s6eHruEmc";
Object[][] objectArray = new Object[2][8];
objectArray[0] = (Object[]) stringArray;
objectArray[1] = (Object[]) stringArray;
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
modifTableStockage.fusionnerColonnes(1);
Test 16: 
TableStockage tableStockage = new TableStockage();
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
// Undeclared exception!
try { 
  modifTableStockage.selectMail();
  fail("Expecting exception: HeadlessException");

} catch(HeadlessException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("java.awt.GraphicsEnvironment", e);
}

Test 17: 
String[] stringArray = new String[7];
stringArray[0] = "Envoyer E-Mail a:";
Object[][] objectArray = new Object[0][4];
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
modifTableStockage.selectMail();
Test 18: 
TableStockage tableStockage = new TableStockage();
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
Class<Object> class = Object.class;
modifTableStockage.ajouterColonne("Le mail sera envoye a toute la liste", class);
Test 19: 
String[] stringArray = new String[2];
Object[][] objectArray = new Object[8][0];
objectArray[0] = (Object[]) stringArray;
objectArray[1] = (Object[]) stringArray;
objectArray[2] = (Object[]) stringArray;
objectArray[3] = (Object[]) stringArray;
objectArray[4] = (Object[]) stringArray;
objectArray[5] = (Object[]) stringArray;
objectArray[6] = (Object[]) stringArray;
objectArray[7] = (Object[]) stringArray;
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
Class<Object> class = Object.class;
modifTableStockage.ajouterColonne("PAS DE COLONNE", class);
Test 20: 
TableStockage tableStockage = new TableStockage();
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
modifTableStockage.colonneMail();
Test 21: 
TableStockage tableStockage = new TableStockage(2, 0);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
modifTableStockage.supprimerLigne(2);
modifTableStockage.colonneMail();
modifTableStockage.supprimerColonne(0);
Test 22: 
String[] stringArray = new String[4];
stringArray[0] = "wtp";
stringArray[1] = "QA}";
stringArray[2] = "Envoyer E-Mail a:";
Object[][] objectArray = new Object[3][5];
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
// Undeclared exception!
try { 
  modifTableStockage.selectMail();
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("fr.unice.gfarce.interGraph.ModifTableStockage", e);
}

Test 23: 
TableStockage tableStockage = new TableStockage();
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
modifTableStockage.ajouterLigne();

Test 24: 
String[] stringArray = new String[1];
stringArray = "PAS DE COLONNE";
TableStockage tableStockage = new TableStockage(stringArray, (Object[][]) "PAS DE COLONNE");
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);

Test 25: 
String[] stringArray = new String[4];
Object[][] objectArray = new Object[2][8];
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
tableStockage.setColumnClass(1, (Class<?>) null);
modifTableStockage.ajouterLigne();
TableStockage tableStockage = new TableStockage(stringArray, objectArray);

Test 26: 
TableStockage tableStockage = new TableStockage(2253, 0);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
((ModifTableStockage)0).supprimerLigne(2233);

Test 27: 
TableStockage tableStockage = new TableStockage(2253, 2253);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
((ModifTableStockage)2253).supprimerLigne((int) (Integer) null);

Test 28: 
String string = "Products";
TableStockage tableStockage = new TableStockage((int) "Inventory", (int) "Products");
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
String string = "ProductID";
((ModifTableStockage) string).separerColonne((int) string);

Test 29: 
String[] stringArray = new String[4];
stringArray[1] = "9|%SZ";
Object[][] objectArray = new Object[2][8];
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
modifTableStockage.separerColonne(1);

Test 30: 
String[] stringArray = new String[7];
stringArray[2] = "CADASTR\u00C9";
stringArray[2] = "PAS SEPARABLE";
stringArray[2] = "SEPARABLE";
String string = "PAS SEPARABLE";
stringArray[2] = "PAS SEPARABLE";
stringArray[2] = "SEPARABLE";
stringArray[2] = "PAS SEPARABLE";
stringArray[2] = "SEPARABLE";
Object[][] objectArray = new Object[3][4];
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
int _int = 2;
((ModifTableStockage) string).separerColonne(_int);

Test 31: 
String[] stringArray = new String[7];
stringArray[0] = "ABC";
Object[][] objectArray = new Object[9][8];
String[] stringArray = new String[7];
stringArray[0] = "XYZ";
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
((ModifTableStockage) tableStockage).separerColonne(0);

Test 32: 
String[] stringArray = new String[7];
stringArray[0] = "9]KYN1]vi;";
Object[][] objectArray = new Object[9][8];
Object[] objectArray = new Object[25];
objectArray[0] = (Object) "k`O}0&47ZS/F";
objectArray[0] = (Object) objectArray;
TableStockage tableStockage = new TableStockage(stringArray, (Object[][]) objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
int _int = 0;
((ModifTableStockage) tableStockage).separerColonne(_int);

Test 33: 
TableStockage tableStockage = new TableStockage();
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
modifTableStockage.fusionnerColonnes((int) "colonne1");

Test 34: 
TableStockage tableStockage = new TableStockage(4864, 4864);
int _int = 187;
((TableStockage)4864).setColumnClass(187, (Class<?>) null);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
String string = "ID";
((ModifTableStockage) _int).fusionnerColonnes((int) string);

Test 35: 
String[] stringArray = new String[4];
stringArray[1] = "9|%SZ";
stringArray[1] = "9|%SZ";
stringArray[2] = "NnlB*s6eHruEmc";
Object[][] objectArray = new Object[2][8];
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
((ModifTableStockage) tableStockage).fusionnerColonnes(1);

Test 36: 
String[] stringArray = new String[7];
stringArray[0] = "Envoyer E-Mail \u00E0:";
Object[][] objectArray = new Object[0][4];
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
((ModifTableStockage) tableStockage).selectMail();

Test 37: 
TableStockage tableStockage = new TableStockage();
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
modifTableStockage.ajouterColonne("emailAddresses", (Class<?>) null);

Test 38: 
Object[][] objectArray = new Object[8][0];

Test 39: 
TableStockage tableStockage = new TableStockage();
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);

Test 40: 
int _int = 0;
TableStockage tableStockage = new TableStockage(2, 0);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
((ModifTableStockage)0).supprimerLigne(2);
((ModifTableStockage) _int).colonneMail();
int _int = 0;
((ModifTableStockage) _int).supprimerColonne(_int);

Test 41: 
String[] stringArray = new String[4];
stringArray[0] = "wtp";
stringArray[1] = "QA}";
stringArray[2] = "Envoyer E-Mail a:";
Object[][] objectArray = new Object[3][5];
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
((ModifTableStockage)"Envoyer E-Mail a:").selectMail();


* Minimizing test suite
* test suite isTestSuite: 23
Test 0: 
TableStockage tableStockage = new TableStockage();
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
modifTableStockage.ajouterColonne("emailAddresses", (Class<?>) null);
Test 1: 
String[] stringArray = new String[2];
Object[][] objectArray = new Object[8][0];
objectArray[0] = (Object[]) stringArray;
objectArray[1] = (Object[]) stringArray;
objectArray[2] = (Object[]) stringArray;
objectArray[3] = (Object[]) stringArray;
objectArray[4] = (Object[]) stringArray;
objectArray[5] = (Object[]) stringArray;
objectArray[6] = (Object[]) stringArray;
objectArray[7] = (Object[]) stringArray;
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
Class<Object> class = Object.class;
modifTableStockage.ajouterColonne("PAS DE COLONNE", class);
Test 2: 
TableStockage tableStockage = new TableStockage();
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
// Undeclared exception!
try { 
  modifTableStockage.ajouterLigne();
  fail("Expecting exception: HeadlessException");

} catch(HeadlessException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("java.awt.GraphicsEnvironment", e);
}

Test 3: 
String[] stringArray = new String[1];
stringArray[0] = "PAS DE COLONNE";
Object[][] objectArray = new Object[6][4];
objectArray[0] = (Object[]) stringArray;
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
modifTableStockage.ajouterLigne();
Test 4: 
String[] stringArray = new String[4];
Object[][] objectArray = new Object[2][8];
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
Class<Object> class = Object.class;
tableStockage.setColumnClass(1, class);
modifTableStockage.ajouterLigne();
Test 5: 
TableStockage tableStockage = new TableStockage(2, 0);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
modifTableStockage.colonneMail();
modifTableStockage.supprimerColonne(0);
Test 6: 
String[] stringArray = new String[4];
Object[][] objectArray = new Object[2][8];
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
modifTableStockage.supprimerColonne(1);
Test 7: 
TableStockage tableStockage = new TableStockage(2253, 0);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
modifTableStockage.supprimerLigne(2233);
Test 8: 
TableStockage tableStockage = new TableStockage(2253, 2253);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
// Undeclared exception!
try { 
  modifTableStockage.supprimerLigne((-8176));
  fail("Expecting exception: ArrayIndexOutOfBoundsException");

} catch(ArrayIndexOutOfBoundsException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 9: 
String[] stringArray = new String[4];
Object[][] objectArray = new Object[2][8];
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
modifTableStockage.supprimerLigne(1);
Test 10: 
String[] stringArray = new String[4];
Object[][] objectArray = new Object[2][8];
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
// Undeclared exception!
try { 
  modifTableStockage.separerColonne(1);
  fail("Expecting exception: HeadlessException");

} catch(HeadlessException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("java.awt.GraphicsEnvironment", e);
}

Test 11: 
String[] stringArray = new String[4];
stringArray[1] = "9|%SZ";
Object[][] objectArray = new Object[2][8];
objectArray[0] = (Object[]) stringArray;
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
// Undeclared exception!
try { 
  modifTableStockage.separerColonne(1);
  fail("Expecting exception: HeadlessException");

} catch(HeadlessException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("java.awt.GraphicsEnvironment", e);
}

Test 12: 
String[] stringArray = new String[7];
stringArray[2] = "PAS SEPARABLE";
Object[][] objectArray = new Object[3][4];
objectArray[0] = (Object[]) stringArray;
objectArray[1] = (Object[]) stringArray;
objectArray[2] = (Object[]) stringArray;
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
modifTableStockage.separerColonne(2);
Test 13: 
String[] stringArray = new String[7];
stringArray[0] = " 9]KYN1]vi;";
Object[][] objectArray = new Object[9][8];
objectArray[0] = (Object[]) stringArray;
String[] stringArray = new String[3];
stringArray[0] = "k`O}0&47ZS/F";
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
// Undeclared exception!
try { 
  modifTableStockage.separerColonne(0);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
}

Test 14: 
String[] stringArray = new String[7];
stringArray[0] = " 9]KYN1]vi;";
Object[][] objectArray = new Object[9][8];
objectArray[0] = (Object[]) stringArray;
Object[] objectArray = new Object[25];
objectArray[0] = (Object) "k`O}0&47ZS/F";
objectArray[1] = objectArray;
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
// Undeclared exception!
try { 
  modifTableStockage.separerColonne(0);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
}

Test 15: 
TableStockage tableStockage = new TableStockage();
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
// Undeclared exception!
try { 
  modifTableStockage.fusionnerColonnes(742);
  fail("Expecting exception: HeadlessException");

} catch(HeadlessException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("java.awt.GraphicsEnvironment", e);
}

Test 16: 
TableStockage tableStockage = new TableStockage(4864, 4864);
Class<Boolean> class = Boolean.class;
tableStockage.setColumnClass(187, class);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
// Undeclared exception!
try { 
  modifTableStockage.fusionnerColonnes(187);
  fail("Expecting exception: HeadlessException");

} catch(HeadlessException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("java.awt.GraphicsEnvironment", e);
}

Test 17: 
String[] stringArray = new String[4];
stringArray[1] = "9|%SZ";
stringArray[2] = "NnlB*s6eHruEmc";
Object[][] objectArray = new Object[2][8];
objectArray[0] = (Object[]) stringArray;
objectArray[1] = (Object[]) stringArray;
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
modifTableStockage.fusionnerColonnes(1);
Test 18: 
TableStockage tableStockage = new TableStockage();
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
// Undeclared exception!
try { 
  modifTableStockage.selectMail();
  fail("Expecting exception: HeadlessException");

} catch(HeadlessException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("java.awt.GraphicsEnvironment", e);
}

Test 19: 
String[] stringArray = new String[7];
stringArray[0] = "Envoyer E-Mail a:";
Object[][] objectArray = new Object[0][4];
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
modifTableStockage.selectMail();
Test 20: 
String[] stringArray = new String[4];
stringArray[0] = "wtp";
stringArray[1] = "QA}";
stringArray[2] = "Envoyer E-Mail a:";
Object[][] objectArray = new Object[3][5];
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
// Undeclared exception!
try { 
  modifTableStockage.selectMail();
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("fr.unice.gfarce.interGraph.ModifTableStockage", e);
}

Test 21: 
TableStockage tableStockage = new TableStockage();
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
modifTableStockage.colonneMail();
Test 22: 
TableStockage tableStockage = new TableStockage(2, 0);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
modifTableStockage.supprimerLigne(2);
modifTableStockage.colonneMail();
modifTableStockage.supprimerColonne(0);

* Going to analyze the coverage criteria
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 89%
* Total number of goals: 123
* Number of covered goals: 110
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 90%
* Total number of goals: 184
* Number of covered goals: 165
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 39%
* Total number of goals: 56
* Number of covered goals: 22
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 9
* Number of covered goals: 9
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 89%
* Total number of goals: 123
* Number of covered goals: 110
* Generated 23 tests with total length 136
* Resulting test suite's coverage: 81% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 48%
* Compiling and checking tests
Going to execute: removeTestsThatDoNotCompile
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: TableStockage arg0 = new TableStockage();
ModifTableStockage modifTableStockage = new ModifTableStockage(arg0);
TableStockage ajouterColonne = modifTableStockage.ajouterColonne("emailAddresses", (Class<?>) null);
assertEquals(1, ajouterColonne.getColumnCount());
assertEquals(0, ajouterColonne.getRowCount());


** It was a parseable test case! 
refined test name is: testAjouterColonneEmailAddresses
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: TableStockage arg0 = new TableStockage();
ModifTableStockage modifTableStockage = new ModifTableStockage(arg0);
// Undeclared exception!
try { 
  modifTableStockage.ajouterLigne();
  fail("Expecting exception: HeadlessException");

} catch(HeadlessException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("java.awt.GraphicsEnvironment", e);
}


** It was a parseable test case! 
refined test name is: testAddRowToTableWithHeadlessModeEnabled
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: TableStockage arg0 = new TableStockage(2, 0);
ModifTableStockage modifTableStockage = new ModifTableStockage(arg0);
modifTableStockage.colonneMail();
TableStockage supprimerColonne = modifTableStockage.supprimerColonne(0);
assertNotSame(supprimerColonne, arg0);


** It was a parseable test case! 
refined test name is: testModifTableStockageAddAndDeleteColumn
* Compiling Tests
refined test name is: testAddAndDeleteColumn
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: TableStockage arg0 = new TableStockage(2253, 0);
ModifTableStockage modifTableStockage = new ModifTableStockage(arg0);
TableStockage supprimerLigne = modifTableStockage.supprimerLigne(2233);
assertEquals(0, supprimerLigne.getColumnCount());
assertEquals(2251, supprimerLigne.getRowCount());


** It was a parseable test case! 
refined test name is: testDeleteLastRow
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: TableStockage arg0 = new TableStockage(2253, 2253);
ModifTableStockage modifTableStockage = new ModifTableStockage(arg0);
// Undeclared exception!
try { 
  modifTableStockage.supprimerLigne((-8176));
  fail("Expecting exception: ArrayIndexOutOfBoundsException");

} catch(ArrayIndexOutOfBoundsException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}


** It was a parseable test case! 
refined test name is: testDeleteLineFromTable
* Compiling Tests
refined test name is: testSupprimerLigneException
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: TableStockage arg0 = new TableStockage();
ModifTableStockage modifTableStockage = new ModifTableStockage(arg0);
// Undeclared exception!
try { 
  modifTableStockage.fusionnerColonnes(742);
  fail("Expecting exception: HeadlessException");

} catch(HeadlessException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("java.awt.GraphicsEnvironment", e);
}


** It was a parseable test case! 
refined test name is: testFusionnerColonnesInvalidIndex
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: TableStockage arg0 = new TableStockage(4864, 4864);
Class<Boolean> arg1 = Boolean.class;
arg0.setColumnClass(187, arg1);
ModifTableStockage modifTableStockage = new ModifTableStockage(arg0);
// Undeclared exception!
try { 
  modifTableStockage.fusionnerColonnes(187);
  fail("Expecting exception: HeadlessException");

} catch(HeadlessException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("java.awt.GraphicsEnvironment", e);
}


** It was a parseable test case! 
refined test name is: testFusionnerColonnesThrowsHeadlessException
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: TableStockage arg0 = new TableStockage();
ModifTableStockage modifTableStockage = new ModifTableStockage(arg0);
// Undeclared exception!
try { 
  modifTableStockage.selectMail();
  fail("Expecting exception: HeadlessException");

} catch(HeadlessException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("java.awt.GraphicsEnvironment", e);
}


** It was a parseable test case! 
refined test name is: testSelectMailThrowsHeadlessException
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: TableStockage arg0 = new TableStockage();
ModifTableStockage modifTableStockage = new ModifTableStockage(arg0);
TableStockage colonneMail = modifTableStockage.colonneMail();
assertEquals(1, colonneMail.getColumnCount());
assertEquals(0, colonneMail.getRowCount());


** It was a parseable test case! 
refined test name is: testColonneMailRetourneTableVide
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: TableStockage arg0 = new TableStockage(2, 0);
ModifTableStockage modifTableStockage = new ModifTableStockage(arg0);
modifTableStockage.supprimerLigne(2);
modifTableStockage.colonneMail();
TableStockage supprimerColonne = modifTableStockage.supprimerColonne(0);
assertEquals(0, supprimerColonne.getRowCount());


** It was a parseable test case! 
refined test name is: testSuppressionLigneAndSuppressionColonne
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 09:20:18.022 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/tmp/EvoSuite_pathingJar6474184746012738616.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 09:20:18.065 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar6474184746012738616.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 09:20:18.259 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/tmp/EvoSuite_pathingJar6474184746012738616.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 09:20:18.261 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar6474184746012738616.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 09:20:18.304 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/tmp/EvoSuite_pathingJar6474184746012738616.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 09:20:18.305 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar6474184746012738616.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 09:20:18.407 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/tmp/EvoSuite_pathingJar6474184746012738616.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 09:20:18.407 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar6474184746012738616.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 09:20:18.520 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/tmp/EvoSuite_pathingJar6474184746012738616.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 09:20:18.521 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar6474184746012738616.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 09:20:18.578 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/tmp/EvoSuite_pathingJar6474184746012738616.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 09:20:18.579 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar6474184746012738616.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 09:20:18.704 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/tmp/EvoSuite_pathingJar6474184746012738616.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 09:20:18.705 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar6474184746012738616.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 09:20:18.776 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/tmp/EvoSuite_pathingJar6474184746012738616.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 09:20:18.778 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar6474184746012738616.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 09:20:18.838 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/tmp/EvoSuite_pathingJar6474184746012738616.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 09:20:18.840 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar6474184746012738616.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 09:20:18.905 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/tmp/EvoSuite_pathingJar6474184746012738616.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 09:20:18.907 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar6474184746012738616.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 2 called: 0 to improve: false
** Write a test suite: 4 called: 1 to improve: false
[MASTER] 09:20:19.225 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/tmp/EvoSuite_pathingJar6474184746012738616.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 09:20:19.226 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar6474184746012738616.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 5 called: 0 to improve: false
** Write a test suite: 7 called: 1 to improve: false
[MASTER] 09:20:19.575 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/tmp/EvoSuite_pathingJar6474184746012738616.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 09:20:19.576 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar6474184746012738616.jar
[MASTER] 09:20:20.019 [logback-1] WARN  TimeController - Already entered in phase: INLINING. This will mess up the timing calculations.
* test suite isTestSuite: 23
Test 0: 
TableStockage tableStockage = new TableStockage();
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
// Undeclared exception!
try { 
  modifTableStockage.ajouterLigne();
  fail("Expecting exception: HeadlessException");

} catch(HeadlessException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("java.awt.GraphicsEnvironment", e);
}

Test 1: 
String[] stringArray = new String[1];
stringArray[0] = "PAS DE COLONNE";
Object[][] objectArray = new Object[6][4];
objectArray[0] = (Object[]) stringArray;
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
modifTableStockage.ajouterLigne();
Test 2: 
String[] stringArray = new String[4];
Object[][] objectArray = new Object[2][8];
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
Class<Object> class = Object.class;
tableStockage.setColumnClass(1, class);
modifTableStockage.ajouterLigne();
Test 3: 
String[] stringArray = new String[4];
Object[][] objectArray = new Object[2][8];
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
modifTableStockage.supprimerColonne(1);
Test 4: 
TableStockage tableStockage = new TableStockage(2, 0);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
modifTableStockage.colonneMail();
modifTableStockage.supprimerColonne(0);
Test 5: 
String[] stringArray = new String[4];
Object[][] objectArray = new Object[2][8];
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
modifTableStockage.supprimerLigne(1);
Test 6: 
TableStockage tableStockage = new TableStockage(2253, 0);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
modifTableStockage.supprimerLigne(2233);
Test 7: 
TableStockage tableStockage = new TableStockage(2253, 2253);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
// Undeclared exception!
try { 
  modifTableStockage.supprimerLigne((-8176));
  fail("Expecting exception: ArrayIndexOutOfBoundsException");

} catch(ArrayIndexOutOfBoundsException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 8: 
TableStockage tableStockage = new TableStockage(1154, 1281);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
// Undeclared exception!
try { 
  modifTableStockage.separerColonne(1154);
  fail("Expecting exception: HeadlessException");

} catch(HeadlessException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("java.awt.GraphicsEnvironment", e);
}

Test 9: 
String[] stringArray = new String[4];
stringArray[1] = "9|%SZ";
Object[][] objectArray = new Object[2][8];
objectArray[0] = (Object[]) stringArray;
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
// Undeclared exception!
try { 
  modifTableStockage.separerColonne(1);
  fail("Expecting exception: HeadlessException");

} catch(HeadlessException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("java.awt.GraphicsEnvironment", e);
}

Test 10: 
String[] stringArray = new String[7];
stringArray[2] = "PAS SEPARABLE";
Object[][] objectArray = new Object[3][4];
objectArray[0] = (Object[]) stringArray;
objectArray[1] = (Object[]) stringArray;
objectArray[2] = (Object[]) stringArray;
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
modifTableStockage.separerColonne(2);
Test 11: 
String[] stringArray = new String[7];
stringArray[0] = " 9]KYN1]vi;";
Object[][] objectArray = new Object[9][8];
objectArray[0] = (Object[]) stringArray;
String[] stringArray = new String[3];
stringArray[0] = "k`O}0&47ZS/F";
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
// Undeclared exception!
try { 
  modifTableStockage.separerColonne(0);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
}

Test 12: 
String[] stringArray = new String[7];
stringArray[0] = " 9]KYN1]vi;";
Object[][] objectArray = new Object[9][8];
objectArray[0] = (Object[]) stringArray;
Object[] objectArray = new Object[25];
objectArray[0] = (Object) "k`O}0&47ZS/F";
objectArray[1] = objectArray;
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
// Undeclared exception!
try { 
  modifTableStockage.separerColonne(0);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
}

Test 13: 
TableStockage tableStockage = new TableStockage();
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
// Undeclared exception!
try { 
  modifTableStockage.fusionnerColonnes(742);
  fail("Expecting exception: HeadlessException");

} catch(HeadlessException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("java.awt.GraphicsEnvironment", e);
}

Test 14: 
TableStockage tableStockage = new TableStockage(4864, 4864);
Class<Boolean> class = Boolean.class;
tableStockage.setColumnClass(187, class);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
// Undeclared exception!
try { 
  modifTableStockage.fusionnerColonnes(187);
  fail("Expecting exception: HeadlessException");

} catch(HeadlessException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("java.awt.GraphicsEnvironment", e);
}

Test 15: 
String[] stringArray = new String[4];
stringArray[1] = "9|%SZ";
stringArray[2] = "NnlB*s6eHruEmc";
Object[][] objectArray = new Object[2][8];
objectArray[0] = (Object[]) stringArray;
objectArray[1] = (Object[]) stringArray;
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
modifTableStockage.fusionnerColonnes(1);
Test 16: 
TableStockage tableStockage = new TableStockage();
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
// Undeclared exception!
try { 
  modifTableStockage.selectMail();
  fail("Expecting exception: HeadlessException");

} catch(HeadlessException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("java.awt.GraphicsEnvironment", e);
}

Test 17: 
String[] stringArray = new String[7];
stringArray[0] = "Envoyer E-Mail a:";
Object[][] objectArray = new Object[0][4];
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
modifTableStockage.selectMail();
Test 18: 
TableStockage tableStockage = new TableStockage();
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
Class<Object> class = Object.class;
modifTableStockage.ajouterColonne("Le mail sera envoye a toute la liste", class);
Test 19: 
String[] stringArray = new String[2];
Object[][] objectArray = new Object[8][0];
objectArray[0] = (Object[]) stringArray;
objectArray[1] = (Object[]) stringArray;
objectArray[2] = (Object[]) stringArray;
objectArray[3] = (Object[]) stringArray;
objectArray[4] = (Object[]) stringArray;
objectArray[5] = (Object[]) stringArray;
objectArray[6] = (Object[]) stringArray;
objectArray[7] = (Object[]) stringArray;
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
Class<Object> class = Object.class;
modifTableStockage.ajouterColonne("PAS DE COLONNE", class);
Test 20: 
TableStockage tableStockage = new TableStockage();
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
modifTableStockage.colonneMail();
Test 21: 
TableStockage tableStockage = new TableStockage(2, 0);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
modifTableStockage.supprimerLigne(2);
modifTableStockage.colonneMail();
modifTableStockage.supprimerColonne(0);
Test 22: 
String[] stringArray = new String[4];
stringArray[0] = "wtp";
stringArray[1] = "QA}";
stringArray[2] = "Envoyer E-Mail a:";
Object[][] objectArray = new Object[3][5];
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
// Undeclared exception!
try { 
  modifTableStockage.selectMail();
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("fr.unice.gfarce.interGraph.ModifTableStockage", e);
}


* Minimizing test suite
[MASTER] 09:20:24.326 [logback-1] WARN  TimeController - Already entered in phase: MINIMIZATION. This will mess up the timing calculations.
* test suite isTestSuite: 23
Test 0: 
TableStockage tableStockage = new TableStockage();
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
modifTableStockage.colonneMail();
Test 1: 
String[] stringArray = new String[2];
Object[][] objectArray = new Object[8][0];
objectArray[0] = (Object[]) stringArray;
objectArray[1] = (Object[]) stringArray;
objectArray[2] = (Object[]) stringArray;
objectArray[3] = (Object[]) stringArray;
objectArray[4] = (Object[]) stringArray;
objectArray[5] = (Object[]) stringArray;
objectArray[6] = (Object[]) stringArray;
objectArray[7] = (Object[]) stringArray;
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
Class<Object> class = Object.class;
modifTableStockage.ajouterColonne("PAS DE COLONNE", class);
Test 2: 
TableStockage tableStockage = new TableStockage();
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
// Undeclared exception!
try { 
  modifTableStockage.ajouterLigne();
  fail("Expecting exception: HeadlessException");

} catch(HeadlessException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("java.awt.GraphicsEnvironment", e);
}

Test 3: 
String[] stringArray = new String[1];
stringArray[0] = "PAS DE COLONNE";
Object[][] objectArray = new Object[6][4];
objectArray[0] = (Object[]) stringArray;
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
modifTableStockage.ajouterLigne();
Test 4: 
String[] stringArray = new String[4];
Object[][] objectArray = new Object[2][8];
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
Class<Object> class = Object.class;
tableStockage.setColumnClass(1, class);
modifTableStockage.ajouterLigne();
Test 5: 
TableStockage tableStockage = new TableStockage(2, 0);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
modifTableStockage.colonneMail();
modifTableStockage.supprimerColonne(0);
Test 6: 
String[] stringArray = new String[4];
Object[][] objectArray = new Object[2][8];
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
modifTableStockage.supprimerColonne(1);
Test 7: 
TableStockage tableStockage = new TableStockage(2253, 0);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
modifTableStockage.supprimerLigne(2233);
Test 8: 
TableStockage tableStockage = new TableStockage(2253, 2253);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
// Undeclared exception!
try { 
  modifTableStockage.supprimerLigne((-8176));
  fail("Expecting exception: ArrayIndexOutOfBoundsException");

} catch(ArrayIndexOutOfBoundsException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 9: 
String[] stringArray = new String[4];
Object[][] objectArray = new Object[2][8];
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
modifTableStockage.supprimerLigne(1);
Test 10: 
TableStockage tableStockage = new TableStockage(1154, 1281);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
// Undeclared exception!
try { 
  modifTableStockage.separerColonne(1154);
  fail("Expecting exception: HeadlessException");

} catch(HeadlessException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("java.awt.GraphicsEnvironment", e);
}

Test 11: 
String[] stringArray = new String[4];
stringArray[1] = "9|%SZ";
Object[][] objectArray = new Object[2][8];
objectArray[0] = (Object[]) stringArray;
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
// Undeclared exception!
try { 
  modifTableStockage.separerColonne(1);
  fail("Expecting exception: HeadlessException");

} catch(HeadlessException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("java.awt.GraphicsEnvironment", e);
}

Test 12: 
String[] stringArray = new String[7];
stringArray[2] = "PAS SEPARABLE";
Object[][] objectArray = new Object[3][4];
objectArray[0] = (Object[]) stringArray;
objectArray[1] = (Object[]) stringArray;
objectArray[2] = (Object[]) stringArray;
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
modifTableStockage.separerColonne(2);
Test 13: 
String[] stringArray = new String[7];
stringArray[0] = " 9]KYN1]vi;";
Object[][] objectArray = new Object[9][8];
objectArray[0] = (Object[]) stringArray;
String[] stringArray = new String[3];
stringArray[0] = "k`O}0&47ZS/F";
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
// Undeclared exception!
try { 
  modifTableStockage.separerColonne(0);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
}

Test 14: 
String[] stringArray = new String[7];
stringArray[0] = " 9]KYN1]vi;";
Object[][] objectArray = new Object[9][8];
objectArray[0] = (Object[]) stringArray;
Object[] objectArray = new Object[25];
objectArray[0] = (Object) "k`O}0&47ZS/F";
objectArray[1] = objectArray;
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
// Undeclared exception!
try { 
  modifTableStockage.separerColonne(0);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
}

Test 15: 
TableStockage tableStockage = new TableStockage();
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
// Undeclared exception!
try { 
  modifTableStockage.fusionnerColonnes(742);
  fail("Expecting exception: HeadlessException");

} catch(HeadlessException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("java.awt.GraphicsEnvironment", e);
}

Test 16: 
TableStockage tableStockage = new TableStockage(4864, 4864);
Class<Boolean> class = Boolean.class;
tableStockage.setColumnClass(187, class);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
// Undeclared exception!
try { 
  modifTableStockage.fusionnerColonnes(187);
  fail("Expecting exception: HeadlessException");

} catch(HeadlessException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("java.awt.GraphicsEnvironment", e);
}

Test 17: 
String[] stringArray = new String[4];
stringArray[1] = "9|%SZ";
stringArray[2] = "NnlB*s6eHruEmc";
Object[][] objectArray = new Object[2][8];
objectArray[0] = (Object[]) stringArray;
objectArray[1] = (Object[]) stringArray;
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
modifTableStockage.fusionnerColonnes(1);
Test 18: 
TableStockage tableStockage = new TableStockage();
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
// Undeclared exception!
try { 
  modifTableStockage.selectMail();
  fail("Expecting exception: HeadlessException");

} catch(HeadlessException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("java.awt.GraphicsEnvironment", e);
}

Test 19: 
String[] stringArray = new String[7];
stringArray[0] = "Envoyer E-Mail a:";
Object[][] objectArray = new Object[0][4];
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
modifTableStockage.selectMail();
Test 20: 
String[] stringArray = new String[4];
stringArray[0] = "wtp";
stringArray[1] = "QA}";
stringArray[2] = "Envoyer E-Mail a:";
Object[][] objectArray = new Object[3][5];
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
// Undeclared exception!
try { 
  modifTableStockage.selectMail();
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("fr.unice.gfarce.interGraph.ModifTableStockage", e);
}

Test 21: 
TableStockage tableStockage = new TableStockage();
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
Class<Object> class = Object.class;
modifTableStockage.ajouterColonne("Le mail sera envoye a toute la liste", class);
Test 22: 
TableStockage tableStockage = new TableStockage(2, 0);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
modifTableStockage.supprimerLigne(2);
modifTableStockage.colonneMail();
modifTableStockage.supprimerColonne(0);

* Going to analyze the coverage criteria
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 89%
* Total number of goals: 123
* Number of covered goals: 110
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 90%
* Total number of goals: 184
* Number of covered goals: 165
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 39%
* Total number of goals: 56
* Number of covered goals: 22
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 9
* Number of covered goals: 9
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 89%
* Total number of goals: 123
* Number of covered goals: 110
* Generated 23 tests with total length 135
* Resulting test suite's coverage: 81% (average coverage for all fitness functions)
[MASTER] 09:20:24.404 [logback-1] WARN  TimeController - Already entered in phase: COVERAGE_ANALYSIS. This will mess up the timing calculations.
* Generating assertions
* Resulting test suite's mutation score: 46%
* Compiling and checking tests
Going to execute: removeTestsThatDoNotCompile
[MASTER] 09:20:35.768 [logback-1] WARN  TimeController - Already entered in phase: ASSERTION_GENERATION. This will mess up the timing calculations.
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 09:20:37.068 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/tmp/EvoSuite_pathingJar6474184746012738616.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 09:20:37.069 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar6474184746012738616.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 09:20:37.119 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/tmp/EvoSuite_pathingJar6474184746012738616.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 09:20:37.120 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar6474184746012738616.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 09:20:37.167 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/tmp/EvoSuite_pathingJar6474184746012738616.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 09:20:37.169 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar6474184746012738616.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 09:20:37.277 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/tmp/EvoSuite_pathingJar6474184746012738616.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 09:20:37.278 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar6474184746012738616.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 09:20:37.385 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/tmp/EvoSuite_pathingJar6474184746012738616.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 09:20:37.386 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar6474184746012738616.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 09:20:37.433 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/tmp/EvoSuite_pathingJar6474184746012738616.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 09:20:37.434 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar6474184746012738616.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 09:20:37.524 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/tmp/EvoSuite_pathingJar6474184746012738616.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 09:20:37.525 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar6474184746012738616.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 09:20:37.607 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/tmp/EvoSuite_pathingJar6474184746012738616.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 09:20:37.608 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar6474184746012738616.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 09:20:37.648 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/tmp/EvoSuite_pathingJar6474184746012738616.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 09:20:37.649 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar6474184746012738616.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 09:20:37.690 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/tmp/EvoSuite_pathingJar6474184746012738616.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 09:20:37.691 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar6474184746012738616.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 09:20:37.730 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/tmp/EvoSuite_pathingJar6474184746012738616.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 09:20:37.731 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar6474184746012738616.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
** Write a test suite: 1 called: 1 to improve: false
** Write a test suite: 2 called: 2 to improve: false
** Write a test suite: 3 called: 3 to improve: false
** Write a test suite: 4 called: 4 to improve: false
** Write a test suite: 5 called: 5 to improve: false
** Write a test suite: 6 called: 6 to improve: false
** Write a test suite: 7 called: 7 to improve: false
** Write a test suite: 8 called: 8 to improve: false
** Write a test suite: 9 called: 9 to improve: false
** Write a test suite: 10 called: 10 to improve: false
[MASTER] 09:20:38.007 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/tmp/EvoSuite_pathingJar6474184746012738616.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 09:20:38.008 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar6474184746012738616.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
** Write a test suite: 1 called: 1 to improve: false
** Write a test suite: 2 called: 2 to improve: false
** Write a test suite: 3 called: 3 to improve: false
** Write a test suite: 4 called: 4 to improve: false
** Write a test suite: 5 called: 5 to improve: false
** Write a test suite: 6 called: 6 to improve: false
** Write a test suite: 7 called: 7 to improve: false
** Write a test suite: 8 called: 8 to improve: false
** Write a test suite: 9 called: 9 to improve: false
** Write a test suite: 10 called: 10 to improve: false
[MASTER] 09:20:38.324 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/tmp/EvoSuite_pathingJar6474184746012738616.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 09:20:38.325 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar6474184746012738616.jar
* Writing tests to file
[MASTER] 09:20:38.327 [logback-1] WARN  TimeController - Already entered in phase: JUNIT_CHECK. This will mess up the timing calculations.
* Writing JUnit test case 'ModifTableStockage_ESTest' to evosuite-tests
** Write a test suite: 5 called: 0 to improve: false
** Write a test suite: 7 called: 1 to improve: false
* Writing JUnit test case 'ModifTableStockage_Original_ESTest' to evosuite-tests
** Write a test suite: 0 called: 0 to improve: false
** Write a test suite: 1 called: 1 to improve: false
** Write a test suite: 2 called: 2 to improve: false
** Write a test suite: 3 called: 3 to improve: false
** Write a test suite: 4 called: 4 to improve: false
** Write a test suite: 5 called: 5 to improve: false
** Write a test suite: 6 called: 6 to improve: false
** Write a test suite: 7 called: 7 to improve: false
** Write a test suite: 8 called: 8 to improve: false
** Write a test suite: 9 called: 9 to improve: false
** Write a test suite: 10 called: 10 to improve: false
* Done!

* Computation finished
