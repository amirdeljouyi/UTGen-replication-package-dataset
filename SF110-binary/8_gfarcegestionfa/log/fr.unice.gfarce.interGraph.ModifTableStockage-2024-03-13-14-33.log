* EvoSuite 1.0.0-SNAPSHOT
* Going to generate test cases for class: fr.unice.gfarce.interGraph.ModifTableStockage
* Starting Client-0
* Properties loaded from /home/roham/Results-Utestgen/dataset/SF110-new-res/8_gfarcegestionfa/evosuite-files/evosuite.properties
* Connecting to master process on port 15158
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 14:33:14.620 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 14:33:14.624 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 14:33:14.625 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 14:33:15.601 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 14:33:15.644 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 14:33:15.645 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
[MASTER] 14:33:17.055 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.ZoneId
[MASTER] 14:33:17.528 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.Temporal
[MASTER] 14:33:17.529 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAccessor
[MASTER] 14:33:17.529 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalField
[MASTER] 14:33:17.530 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalUnit
[MASTER] 14:33:17.530 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAmount
[MASTER] 14:33:17.530 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.Clock
[MASTER] 14:33:17.531 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalQuery
[MASTER] 14:33:17.532 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAdjuster
[MASTER] 14:33:17.688 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.Chronology
[MASTER] 14:33:17.700 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.Era
* Finished analyzing classpath
* Generating tests for class fr.unice.gfarce.interGraph.ModifTableStockage
* Test criteria:
  - Branch Coverage
  - Line Coverage
  - Method-Output Coverage
  - Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 495
* Using seed 1710340391393
* Starting evolution
[Progress:>                             0%] [Cov:>                                  0%]* Initial Number of Goals in DynaMOSA = 115 / 495
[Progress:>                             0%] [Cov:=================>                 50%][Progress:>                             0%] [Cov:===================>               55%][Progress:>                             1%] [Cov:===================>               55%][Progress:>                             1%] [Cov:===================>               56%][Progress:>                             1%] [Cov:=====================>             60%][Progress:>                             1%] [Cov:=====================>             60%][Progress:>                             2%] [Cov:=====================>             60%][Progress:>                             2%] [Cov:=====================>             60%][Progress:>                             2%] [Cov:=====================>             60%][Progress:>                             2%] [Cov:=====================>             60%][Progress:>                             2%] [Cov:=====================>             61%][Progress:>                             2%] [Cov:=====================>             61%][Progress:>                             2%] [Cov:=====================>             61%][Progress:>                             3%] [Cov:=====================>             61%][Progress:>                             3%] [Cov:=====================>             61%][Progress:>                             3%] [Cov:=====================>             61%][Progress:>                             3%] [Cov:=====================>             61%][Progress:>                             3%] [Cov:=====================>             61%][Progress:>                             3%] [Cov:=====================>             61%][Progress:>                             3%] [Cov:=====================>             61%][Progress:>                             3%] [Cov:=====================>             61%][Progress:>                             3%] [Cov:=====================>             61%][Progress:>                             3%] [Cov:=====================>             61%][Progress:>                             3%] [Cov:=====================>             61%][Progress:=>                            4%] [Cov:=====================>             62%][Progress:=>                            4%] [Cov:=====================>             62%][Progress:=>                            4%] [Cov:=====================>             62%][Progress:=>                            4%] [Cov:=====================>             62%][Progress:=>                            4%] [Cov:=====================>             62%][Progress:=>                            4%] [Cov:=====================>             62%][Progress:=>                            4%] [Cov:=====================>             62%][Progress:=>                            4%] [Cov:=====================>             62%][Progress:=>                            4%] [Cov:=====================>             62%][Progress:=>                            4%] [Cov:=====================>             62%][Progress:=>                            4%] [Cov:=====================>             62%][Progress:=>                            5%] [Cov:=====================>             62%][Progress:=>                            5%] [Cov:=====================>             62%][Progress:=>                            5%] [Cov:=====================>             62%][Progress:=>                            5%] [Cov:=====================>             62%][Progress:=>                            5%] [Cov:=====================>             62%][Progress:=>                            5%] [Cov:=====================>             62%][Progress:=>                            5%] [Cov:=====================>             62%][Progress:=>                            5%] [Cov:=====================>             62%][Progress:=>                            5%] [Cov:=====================>             62%][Progress:=>                            5%] [Cov:=====================>             62%][Progress:=>                            6%] [Cov:=====================>             62%][Progress:=>                            6%] [Cov:=====================>             62%][Progress:=>                            6%] [Cov:=====================>             62%][Progress:=>                            6%] [Cov:==========================>        75%][Progress:=>                            6%] [Cov:==========================>        75%][Progress:=>                            6%] [Cov:==========================>        75%][Progress:=>                            6%] [Cov:==========================>        75%][Progress:=>                            6%] [Cov:==========================>        75%][Progress:=>                            6%] [Cov:==========================>        75%][Progress:=>                            6%] [Cov:==========================>        75%][Progress:=>                            6%] [Cov:==========================>        75%][Progress:=>                            6%] [Cov:==========================>        75%][Progress:=>                            6%] [Cov:==========================>        75%][Progress:=>                            6%] [Cov:==========================>        75%][Progress:=>                            6%] [Cov:==========================>        75%][Progress:==>                           7%] [Cov:==========================>        75%][Progress:==>                           7%] [Cov:==========================>        75%][Progress:==>                           7%] [Cov:==========================>        75%][Progress:==>                           7%] [Cov:==========================>        75%][Progress:==>                           7%] [Cov:==========================>        75%][Progress:==>                           7%] [Cov:==========================>        75%][Progress:==>                           7%] [Cov:==========================>        75%][Progress:==>                           7%] [Cov:==========================>        75%][Progress:==>                           7%] [Cov:==========================>        75%][Progress:==>                           7%] [Cov:==========================>        75%][Progress:==>                           7%] [Cov:==========================>        75%][Progress:==>                           7%] [Cov:==========================>        75%][Progress:==>                           7%] [Cov:==========================>        75%][Progress:==>                           7%] [Cov:==========================>        75%][Progress:==>                           8%] [Cov:==========================>        75%][Progress:==>                           8%] [Cov:==========================>        75%][Progress:==>                           8%] [Cov:==========================>        75%][Progress:==>                           8%] [Cov:==========================>        75%][Progress:==>                           8%] [Cov:==========================>        75%][Progress:==>                           8%] [Cov:==========================>        75%][Progress:==>                           8%] [Cov:==========================>        75%][Progress:==>                           8%] [Cov:==========================>        75%][Progress:==>                           8%] [Cov:==========================>        75%][Progress:==>                           8%] [Cov:==========================>        75%][Progress:==>                           8%] [Cov:==========================>        75%][Progress:==>                           8%] [Cov:==========================>        75%][Progress:==>                           8%] [Cov:==========================>        75%][Progress:==>                           8%] [Cov:==========================>        75%][Progress:==>                           8%] [Cov:==========================>        75%][Progress:==>                           9%] [Cov:==========================>        75%][Progress:==>                           9%] [Cov:==========================>        75%][Progress:==>                           9%] [Cov:==========================>        75%][Progress:==>                           9%] [Cov:==========================>        76%][Progress:==>                           9%] [Cov:==========================>        76%][Progress:===>                          10%] [Cov:==========================>        76%][Progress:===>                          10%] [Cov:==========================>        76%][Progress:===>                          10%] [Cov:==========================>        76%][Progress:===>                          10%] [Cov:==========================>        76%][Progress:===>                          10%] [Cov:==========================>        76%][Progress:===>                          11%] [Cov:==========================>        76%][Progress:===>                          11%] [Cov:==========================>        76%][Progress:===>                          11%] [Cov:==========================>        76%][Progress:===>                          11%] [Cov:==========================>        76%][Progress:===>                          11%] [Cov:==========================>        76%][Progress:===>                          11%] [Cov:==========================>        76%][Progress:===>                          11%] [Cov:==========================>        76%][Progress:===>                          12%] [Cov:==========================>        76%][Progress:===>                          12%] [Cov:==========================>        76%][Progress:===>                          12%] [Cov:==========================>        76%][Progress:===>                          12%] [Cov:==========================>        76%][Progress:===>                          12%] [Cov:==========================>        76%][Progress:===>                          12%] [Cov:==========================>        76%][Progress:===>                          12%] [Cov:==========================>        76%][Progress:===>                          13%] [Cov:==========================>        76%][Progress:===>                          13%] [Cov:==========================>        76%][Progress:===>                          13%] [Cov:==========================>        76%][Progress:===>                          13%] [Cov:==========================>        76%][Progress:===>                          13%] [Cov:==========================>        76%][Progress:===>                          13%] [Cov:==========================>        76%][Progress:===>                          13%] [Cov:==========================>        77%][Progress:====>                         14%] [Cov:==========================>        77%][Progress:====>                         14%] [Cov:==========================>        77%][Progress:====>                         14%] [Cov:==========================>        77%][Progress:====>                         14%] [Cov:==========================>        77%][Progress:====>                         14%] [Cov:==========================>        77%][Progress:====>                         14%] [Cov:==========================>        77%][Progress:====>                         14%] [Cov:==========================>        77%][Progress:====>                         14%] [Cov:==========================>        77%][Progress:====>                         15%] [Cov:===========================>       78%][Progress:====>                         15%] [Cov:===========================>       78%][Progress:====>                         15%] [Cov:===========================>       78%][Progress:====>                         15%] [Cov:===========================>       78%][Progress:====>                         15%] [Cov:===========================>       78%][Progress:====>                         15%] [Cov:===========================>       78%][Progress:====>                         15%] [Cov:===========================>       78%][Progress:====>                         15%] [Cov:===========================>       78%][Progress:====>                         15%] [Cov:===========================>       78%][Progress:====>                         16%] [Cov:===========================>       78%][Progress:====>                         16%] [Cov:===========================>       78%][Progress:====>                         16%] [Cov:===========================>       78%][Progress:====>                         16%] [Cov:===========================>       78%][Progress:====>                         16%] [Cov:===========================>       78%][Progress:====>                         16%] [Cov:===========================>       78%][Progress:====>                         16%] [Cov:===========================>       78%][Progress:====>                         16%] [Cov:===========================>       78%][Progress:====>                         16%] [Cov:===========================>       78%][Progress:====>                         16%] [Cov:===========================>       78%][Progress:=====>                        17%] [Cov:===========================>       78%][Progress:=====>                        17%] [Cov:===========================>       78%][Progress:=====>                        17%] [Cov:===========================>       78%][Progress:=====>                        17%] [Cov:===========================>       78%][Progress:=====>                        17%] [Cov:===========================>       78%][Progress:=====>                        17%] [Cov:===========================>       78%][Progress:=====>                        17%] [Cov:===========================>       78%][Progress:=====>                        17%] [Cov:===========================>       78%][Progress:=====>                        18%] [Cov:===========================>       78%][Progress:=====>                        18%] [Cov:===========================>       78%][Progress:=====>                        18%] [Cov:===========================>       78%][Progress:=====>                        18%] [Cov:===========================>       78%][Progress:=====>                        18%] [Cov:===========================>       78%][Progress:=====>                        18%] [Cov:===========================>       78%][Progress:=====>                        18%] [Cov:===========================>       78%][Progress:=====>                        18%] [Cov:===========================>       78%][Progress:=====>                        19%] [Cov:===========================>       78%][Progress:=====>                        19%] [Cov:===========================>       78%][Progress:=====>                        19%] [Cov:===========================>       78%][Progress:=====>                        19%] [Cov:============================>      81%][Progress:=====>                        19%] [Cov:============================>      81%][Progress:=====>                        19%] [Cov:============================>      81%][Progress:=====>                        19%] [Cov:============================>      81%][Progress:======>                       20%] [Cov:============================>      81%][Progress:======>                       20%] [Cov:============================>      81%][Progress:======>                       20%] [Cov:============================>      81%][Progress:======>                       20%] [Cov:============================>      81%][Progress:======>                       20%] [Cov:============================>      81%][Progress:======>                       21%] [Cov:============================>      81%][Progress:======>                       21%] [Cov:============================>      81%][Progress:======>                       21%] [Cov:============================>      81%][Progress:======>                       21%] [Cov:============================>      81%][Progress:======>                       21%] [Cov:============================>      81%][Progress:======>                       21%] [Cov:============================>      81%][Progress:======>                       22%] [Cov:============================>      81%][Progress:======>                       22%] [Cov:============================>      81%][Progress:======>                       22%] [Cov:============================>      81%][Progress:======>                       22%] [Cov:============================>      81%][Progress:======>                       22%] [Cov:============================>      81%][Progress:======>                       22%] [Cov:============================>      81%][Progress:======>                       23%] [Cov:============================>      81%][Progress:======>                       23%] [Cov:============================>      81%][Progress:======>                       23%] [Cov:============================>      81%][Progress:======>                       23%] [Cov:============================>      81%][Progress:======>                       23%] [Cov:============================>      81%][Progress:======>                       23%] [Cov:============================>      81%][Progress:=======>                      25%] [Cov:============================>      81%][Progress:=======>                      26%] [Cov:============================>      81%][Progress:=======>                      26%] [Cov:============================>      81%][Progress:=======>                      26%] [Cov:============================>      81%][Progress:========>                     27%] [Cov:============================>      81%][Progress:========>                     27%] [Cov:============================>      81%][Progress:========>                     27%] [Cov:============================>      81%][Progress:========>                     27%] [Cov:============================>      81%][Progress:========>                     27%] [Cov:============================>      81%][Progress:========>                     28%] [Cov:============================>      81%][Progress:========>                     28%] [Cov:============================>      81%][Progress:========>                     28%] [Cov:============================>      81%][Progress:========>                     28%] [Cov:============================>      81%][Progress:========>                     28%] [Cov:============================>      81%][Progress:========>                     28%] [Cov:============================>      81%][Progress:========>                     28%] [Cov:============================>      81%][Progress:========>                     28%] [Cov:============================>      81%][Progress:========>                     29%] [Cov:============================>      81%][Progress:========>                     29%] [Cov:============================>      81%][Progress:========>                     29%] [Cov:============================>      81%][Progress:========>                     29%] [Cov:============================>      81%][Progress:========>                     29%] [Cov:============================>      81%][Progress:========>                     29%] [Cov:============================>      81%][Progress:=========>                    30%] [Cov:============================>      81%][Progress:=========>                    30%] [Cov:============================>      81%][Progress:=========>                    30%] [Cov:============================>      81%][Progress:=========>                    30%] [Cov:============================>      81%][Progress:=========>                    30%] [Cov:============================>      81%][Progress:=========>                    31%] [Cov:============================>      81%][Progress:=========>                    31%] [Cov:============================>      81%][Progress:=========>                    31%] [Cov:============================>      81%][Progress:=========>                    31%] [Cov:============================>      81%][MASTER] 14:34:22.035 [logback-1] WARN  TestCluster - Failed to check cache for javax.swing.RowSorter<M> : Type points to itself
[Progress:=========>                    31%] [Cov:============================>      81%][Progress:=========>                    31%] [Cov:============================>      81%][Progress:=========>                    32%] [Cov:============================>      81%][Progress:=========>                    32%] [Cov:============================>      81%][Progress:=========>                    32%] [Cov:============================>      81%][Progress:=========>                    32%] [Cov:============================>      81%][Progress:=========>                    33%] [Cov:============================>      81%][Progress:=========>                    33%] [Cov:============================>      81%][Progress:=========>                    33%] [Cov:============================>      81%][Progress:=========>                    33%] [Cov:============================>      81%][Progress:=========>                    33%] [Cov:============================>      81%][Progress:=========>                    33%] [Cov:============================>      81%][Progress:==========>                   34%] [Cov:============================>      81%][Progress:==========>                   34%] [Cov:============================>      81%][Progress:==========>                   34%] [Cov:============================>      81%][Progress:==========>                   34%] [Cov:============================>      81%][Progress:==========>                   34%] [Cov:============================>      81%][Progress:==========>                   34%] [Cov:============================>      81%][Progress:==========>                   35%] [Cov:============================>      81%][Progress:==========>                   35%] [Cov:============================>      81%][Progress:==========>                   35%] [Cov:============================>      81%][Progress:==========>                   35%] [Cov:============================>      81%][Progress:==========>                   35%] [Cov:============================>      81%][Progress:==========>                   35%] [Cov:============================>      81%][Progress:==========>                   36%] [Cov:============================>      81%][Progress:==========>                   36%] [Cov:============================>      81%][Progress:==========>                   36%] [Cov:============================>      81%][Progress:==========>                   36%] [Cov:============================>      81%][Progress:==========>                   36%] [Cov:============================>      81%][Progress:==========>                   36%] [Cov:============================>      81%][Progress:==========>                   36%] [Cov:============================>      81%][Progress:==========>                   36%] [Cov:============================>      81%][Progress:==========>                   36%] [Cov:============================>      81%][Progress:==========>                   36%] [Cov:============================>      81%][Progress:===========>                  37%] [Cov:============================>      81%][Progress:===========>                  37%] [Cov:============================>      81%][Progress:===========>                  37%] [Cov:============================>      81%][Progress:===========>                  37%] [Cov:============================>      81%][Progress:===========>                  37%] [Cov:============================>      81%][Progress:===========>                  37%] [Cov:============================>      81%][Progress:===========>                  37%] [Cov:============================>      81%][Progress:===========>                  37%] [Cov:============================>      81%][Progress:===========>                  37%] [Cov:============================>      81%][Progress:===========>                  38%] [Cov:============================>      81%][Progress:===========>                  38%] [Cov:============================>      81%][Progress:===========>                  38%] [Cov:============================>      81%][Progress:===========>                  38%] [Cov:============================>      81%][Progress:===========>                  38%] [Cov:============================>      81%][Progress:===========>                  38%] [Cov:============================>      81%][Progress:===========>                  39%] [Cov:============================>      81%][Progress:===========>                  39%] [Cov:============================>      81%][Progress:===========>                  39%] [Cov:============================>      81%][Progress:===========>                  39%] [Cov:============================>      81%][Progress:===========>                  39%] [Cov:============================>      81%][Progress:===========>                  39%] [Cov:============================>      81%][Progress:===========>                  39%] [Cov:============================>      81%][Progress:===========>                  39%] [Cov:============================>      81%][Progress:===========>                  39%] [Cov:============================>      81%][Progress:===========>                  39%] [Cov:============================>      81%][Progress:============>                 40%] [Cov:============================>      81%][Progress:============>                 40%] [Cov:============================>      81%][Progress:============>                 40%] [Cov:============================>      81%][Progress:============>                 40%] [Cov:============================>      81%][Progress:============>                 40%] [Cov:============================>      81%][Progress:============>                 40%] [Cov:============================>      81%][Progress:============>                 40%] [Cov:============================>      81%][Progress:============>                 40%] [Cov:============================>      81%][Progress:============>                 41%] [Cov:============================>      81%][Progress:============>                 42%] [Cov:============================>      81%][Progress:============>                 42%] [Cov:============================>      81%][Progress:============>                 42%] [Cov:============================>      81%][Progress:============>                 42%] [Cov:============================>      81%][Progress:============>                 42%] [Cov:============================>      81%][Progress:============>                 42%] [Cov:============================>      81%][Progress:============>                 42%] [Cov:============================>      81%][Progress:============>                 42%] [Cov:============================>      81%][Progress:============>                 42%] [Cov:============================>      81%][Progress:============>                 43%] [Cov:============================>      81%][Progress:============>                 43%] [Cov:============================>      81%][Progress:============>                 43%] [Cov:============================>      81%][Progress:============>                 43%] [Cov:============================>      81%][Progress:============>                 43%] [Cov:============================>      81%][Progress:============>                 43%] [Cov:============================>      81%][Progress:============>                 43%] [Cov:============================>      81%][Progress:============>                 43%] [Cov:============================>      81%][Progress:============>                 43%] [Cov:============================>      81%][Progress:=============>                44%] [Cov:============================>      81%][Progress:=============>                44%] [Cov:============================>      81%][Progress:=============>                44%] [Cov:============================>      81%][Progress:=============>                44%] [Cov:============================>      81%][Progress:=============>                44%] [Cov:============================>      81%][Progress:=============>                44%] [Cov:============================>      81%][Progress:=============>                44%] [Cov:============================>      81%][Progress:=============>                44%] [Cov:============================>      81%][Progress:=============>                45%] [Cov:============================>      81%][Progress:=============>                45%] [Cov:============================>      81%][Progress:=============>                45%] [Cov:============================>      81%][Progress:=============>                45%] [Cov:============================>      81%][Progress:=============>                45%] [Cov:============================>      81%][Progress:=============>                45%] [Cov:============================>      81%][Progress:=============>                45%] [Cov:============================>      81%][Progress:=============>                45%] [Cov:============================>      81%][Progress:=============>                45%] [Cov:============================>      81%][Progress:=============>                45%] [Cov:============================>      81%][Progress:=============>                45%] [Cov:============================>      81%][Progress:=============>                46%] [Cov:============================>      81%][Progress:=============>                46%] [Cov:============================>      81%][Progress:=============>                46%] [Cov:============================>      81%][Progress:=============>                46%] [Cov:============================>      81%][Progress:=============>                46%] [Cov:============================>      81%][Progress:=============>                46%] [Cov:============================>      81%][Progress:=============>                46%] [Cov:============================>      81%][Progress:==============>               47%] [Cov:============================>      81%][Progress:==============>               47%] [Cov:============================>      81%][Progress:==============>               47%] [Cov:============================>      81%][Progress:==============>               47%] [Cov:============================>      81%][Progress:==============>               47%] [Cov:============================>      81%][Progress:==============>               47%] [Cov:============================>      81%][Progress:==============>               47%] [Cov:============================>      81%][Progress:==============>               48%] [Cov:============================>      81%][Progress:==============>               48%] [Cov:============================>      81%][Progress:==============>               48%] [Cov:============================>      81%][Progress:==============>               48%] [Cov:============================>      81%][Progress:==============>               48%] [Cov:============================>      81%][Progress:==============>               48%] [Cov:============================>      81%][Progress:==============>               48%] [Cov:============================>      81%][Progress:==============>               48%] [Cov:============================>      81%][Progress:==============>               48%] [Cov:============================>      81%][Progress:==============>               49%] [Cov:============================>      81%][Progress:==============>               49%] [Cov:============================>      81%][Progress:==============>               49%] [Cov:============================>      81%][Progress:==============>               49%] [Cov:============================>      81%][Progress:==============>               49%] [Cov:============================>      81%][Progress:==============>               49%] [Cov:============================>      81%][Progress:==============>               49%] [Cov:============================>      81%][Progress:==============>               49%] [Cov:============================>      81%][Progress:==============>               49%] [Cov:============================>      81%][Progress:==============>               49%] [Cov:============================>      81%][Progress:==============>               49%] [Cov:============================>      81%][Progress:==============>               49%] [Cov:============================>      81%][Progress:===============>              50%] [Cov:============================>      81%][Progress:===============>              50%] [Cov:============================>      81%][Progress:===============>              50%] [Cov:============================>      81%][Progress:===============>              50%] [Cov:============================>      81%][Progress:===============>              50%] [Cov:============================>      81%][Progress:===============>              50%] [Cov:============================>      81%][Progress:===============>              51%] [Cov:============================>      81%][Progress:===============>              51%] [Cov:============================>      81%][Progress:===============>              51%] [Cov:============================>      81%][Progress:===============>              51%] [Cov:============================>      81%][Progress:===============>              51%] [Cov:============================>      81%][Progress:===============>              51%] [Cov:============================>      81%][Progress:===============>              52%] [Cov:============================>      81%][Progress:===============>              52%] [Cov:============================>      81%][Progress:===============>              52%] [Cov:============================>      81%][Progress:===============>              52%] [Cov:============================>      81%][Progress:===============>              52%] [Cov:============================>      81%][Progress:===============>              52%] [Cov:============================>      81%][Progress:===============>              52%] [Cov:============================>      81%][Progress:===============>              52%] [Cov:============================>      81%][Progress:===============>              52%] [Cov:============================>      81%][Progress:===============>              52%] [Cov:============================>      81%][Progress:===============>              52%] [Cov:============================>      81%][Progress:===============>              53%] [Cov:============================>      81%][Progress:===============>              53%] [Cov:============================>      81%][Progress:===============>              53%] [Cov:============================>      81%][Progress:===============>              53%] [Cov:============================>      81%][Progress:===============>              53%] [Cov:============================>      81%][Progress:===============>              53%] [Cov:============================>      81%][Progress:===============>              53%] [Cov:============================>      81%][Progress:===============>              53%] [Cov:============================>      81%][Progress:===============>              53%] [Cov:============================>      81%][Progress:================>             54%] [Cov:============================>      81%][Progress:================>             54%] [Cov:============================>      81%][Progress:================>             54%] [Cov:============================>      81%][Progress:================>             54%] [Cov:============================>      81%][Progress:================>             54%] [Cov:============================>      81%][Progress:================>             54%] [Cov:============================>      81%][Progress:================>             54%] [Cov:============================>      81%][Progress:================>             54%] [Cov:============================>      81%][Progress:================>             55%] [Cov:============================>      81%][Progress:================>             55%] [Cov:============================>      81%][Progress:================>             55%] [Cov:============================>      81%][Progress:================>             55%] [Cov:============================>      81%][Progress:================>             55%] [Cov:============================>      81%][Progress:================>             55%] [Cov:============================>      81%][Progress:================>             55%] [Cov:============================>      81%][Progress:================>             55%] [Cov:============================>      81%][Progress:================>             55%] [Cov:============================>      81%][Progress:================>             55%] [Cov:============================>      81%][Progress:================>             56%] [Cov:============================>      81%][Progress:================>             56%] [Cov:============================>      81%][Progress:================>             56%] [Cov:============================>      81%][Progress:================>             56%] [Cov:============================>      81%][Progress:================>             56%] [Cov:============================>      81%][Progress:================>             56%] [Cov:============================>      81%][Progress:================>             56%] [Cov:============================>      81%][Progress:=================>            57%] [Cov:============================>      81%][Progress:=================>            57%] [Cov:============================>      81%][Progress:=================>            57%] [Cov:============================>      81%][Progress:=================>            57%] [Cov:============================>      81%][Progress:=================>            57%] [Cov:============================>      81%][Progress:=================>            57%] [Cov:============================>      81%][Progress:=================>            57%] [Cov:============================>      81%][Progress:=================>            57%] [Cov:============================>      81%][Progress:=================>            57%] [Cov:============================>      81%][Progress:=================>            57%] [Cov:============================>      81%][Progress:=================>            57%] [Cov:============================>      81%][Progress:=================>            57%] [Cov:============================>      81%][Progress:=================>            58%] [Cov:============================>      81%][Progress:=================>            58%] [Cov:============================>      81%][Progress:=================>            58%] [Cov:============================>      81%][Progress:=================>            58%] [Cov:============================>      81%][Progress:=================>            58%] [Cov:============================>      81%][Progress:=================>            58%] [Cov:============================>      81%][Progress:=================>            58%] [Cov:============================>      81%][Progress:=================>            58%] [Cov:============================>      81%][Progress:=================>            58%] [Cov:============================>      81%][Progress:=================>            59%] [Cov:============================>      81%][Progress:=================>            59%] [Cov:============================>      81%][Progress:=================>            59%] [Cov:============================>      81%][Progress:=================>            59%] [Cov:============================>      81%][Progress:=================>            59%] [Cov:============================>      81%][Progress:=================>            59%] [Cov:============================>      81%][Progress:=================>            59%] [Cov:============================>      81%][Progress:=================>            59%] [Cov:============================>      81%][Progress:=================>            59%] [Cov:============================>      81%][Progress:=================>            59%] [Cov:============================>      81%][Progress:==================>           60%] [Cov:============================>      81%][Progress:==================>           60%] [Cov:============================>      81%][Progress:==================>           60%] [Cov:============================>      81%][Progress:==================>           60%] [Cov:============================>      81%][Progress:==================>           60%] [Cov:============================>      81%][Progress:==================>           60%] [Cov:============================>      81%][Progress:==================>           60%] [Cov:============================>      81%][Progress:==================>           60%] [Cov:============================>      81%][Progress:==================>           61%] [Cov:============================>      81%][Progress:==================>           61%] [Cov:============================>      81%][Progress:==================>           61%] [Cov:============================>      81%][Progress:==================>           61%] [Cov:============================>      81%][Progress:==================>           61%] [Cov:============================>      81%][Progress:==================>           61%] [Cov:============================>      81%][Progress:==================>           61%] [Cov:============================>      81%][Progress:==================>           61%] [Cov:============================>      81%][Progress:==================>           61%] [Cov:============================>      81%][Progress:==================>           61%] [Cov:============================>      81%][Progress:==================>           62%] [Cov:============================>      81%][Progress:==================>           62%] [Cov:============================>      81%][Progress:==================>           62%] [Cov:============================>      81%][Progress:==================>           62%] [Cov:============================>      81%][Progress:==================>           62%] [Cov:============================>      81%][Progress:==================>           62%] [Cov:============================>      81%][Progress:==================>           63%] [Cov:============================>      81%][Progress:==================>           63%] [Cov:============================>      81%][Progress:==================>           63%] [Cov:============================>      81%][Progress:==================>           63%] [Cov:============================>      81%][Progress:==================>           63%] [Cov:============================>      81%][Progress:==================>           63%] [Cov:============================>      81%][Progress:==================>           63%] [Cov:============================>      81%][Progress:===================>          64%] [Cov:============================>      81%][Progress:===================>          64%] [Cov:============================>      81%][Progress:===================>          64%] [Cov:============================>      81%][Progress:===================>          64%] [Cov:============================>      81%][Progress:===================>          64%] [Cov:============================>      81%][Progress:===================>          64%] [Cov:============================>      81%][Progress:===================>          64%] [Cov:============================>      81%][Progress:===================>          64%] [Cov:============================>      81%][Progress:===================>          64%] [Cov:============================>      81%][Progress:===================>          65%] [Cov:============================>      81%][Progress:===================>          65%] [Cov:============================>      81%][Progress:===================>          65%] [Cov:============================>      81%][Progress:===================>          65%] [Cov:============================>      81%][Progress:===================>          65%] [Cov:============================>      81%][Progress:===================>          65%] [Cov:============================>      81%][Progress:===================>          66%] [Cov:============================>      81%][Progress:===================>          66%] [Cov:============================>      81%][Progress:===================>          66%] [Cov:============================>      81%][Progress:===================>          66%] [Cov:============================>      81%][Progress:===================>          66%] [Cov:============================>      81%][Progress:===================>          66%] [Cov:============================>      81%][Progress:====================>         67%] [Cov:============================>      81%][Progress:====================>         67%] [Cov:============================>      81%][Progress:====================>         67%] [Cov:============================>      81%][Progress:====================>         67%] [Cov:============================>      81%][Progress:====================>         67%] [Cov:============================>      81%][Progress:====================>         67%] [Cov:============================>      81%][Progress:====================>         67%] [Cov:============================>      81%][Progress:====================>         68%] [Cov:============================>      81%][Progress:====================>         68%] [Cov:============================>      81%][Progress:====================>         68%] [Cov:============================>      81%][Progress:====================>         68%] [Cov:============================>      81%][Progress:====================>         68%] [Cov:============================>      81%][Progress:====================>         68%] [Cov:============================>      81%][Progress:====================>         68%] [Cov:============================>      81%][Progress:====================>         68%] [Cov:============================>      81%][Progress:====================>         68%] [Cov:============================>      81%][Progress:====================>         69%] [Cov:============================>      81%][Progress:====================>         69%] [Cov:============================>      81%][Progress:====================>         69%] [Cov:============================>      81%][Progress:====================>         69%] [Cov:============================>      81%][Progress:====================>         69%] [Cov:============================>      81%][Progress:====================>         69%] [Cov:============================>      81%][Progress:====================>         69%] [Cov:============================>      81%][Progress:====================>         69%] [Cov:============================>      81%][Progress:====================>         69%] [Cov:============================>      81%][Progress:====================>         69%] [Cov:============================>      81%][Progress:=====================>        70%] [Cov:============================>      81%][Progress:=====================>        70%] [Cov:============================>      81%][Progress:=====================>        70%] [Cov:============================>      81%][Progress:=====================>        70%] [Cov:============================>      81%][Progress:=====================>        70%] [Cov:============================>      81%][Progress:=====================>        70%] [Cov:============================>      81%][Progress:=====================>        70%] [Cov:============================>      81%][Progress:=====================>        70%] [Cov:============================>      81%][Progress:=====================>        70%] [Cov:============================>      81%][Progress:=====================>        71%] [Cov:============================>      81%][Progress:=====================>        71%] [Cov:============================>      81%][Progress:=====================>        71%] [Cov:============================>      81%][Progress:=====================>        71%] [Cov:============================>      81%][Progress:=====================>        71%] [Cov:============================>      81%][Progress:=====================>        71%] [Cov:============================>      81%][Progress:=====================>        72%] [Cov:============================>      81%][Progress:=====================>        72%] [Cov:============================>      81%][Progress:=====================>        72%] [Cov:============================>      81%][Progress:=====================>        72%] [Cov:============================>      81%][Progress:=====================>        72%] [Cov:============================>      81%][Progress:=====================>        72%] [Cov:============================>      81%][Progress:=====================>        72%] [Cov:============================>      81%][Progress:=====================>        73%] [Cov:============================>      81%][Progress:=====================>        73%] [Cov:============================>      81%][Progress:=====================>        73%] [Cov:============================>      81%][Progress:=====================>        73%] [Cov:============================>      81%][Progress:=====================>        73%] [Cov:============================>      81%][Progress:=====================>        73%] [Cov:============================>      81%][Progress:=====================>        73%] [Cov:============================>      81%][Progress:=====================>        73%] [Cov:============================>      81%][Progress:======================>       74%] [Cov:============================>      81%][Progress:======================>       74%] [Cov:============================>      81%][Progress:======================>       74%] [Cov:============================>      81%][Progress:======================>       74%] [Cov:============================>      81%][Progress:======================>       74%] [Cov:============================>      81%][Progress:======================>       74%] [Cov:============================>      81%][Progress:======================>       74%] [Cov:============================>      81%][Progress:======================>       74%] [Cov:============================>      81%][Progress:======================>       74%] [Cov:============================>      81%][Progress:======================>       74%] [Cov:============================>      81%][Progress:======================>       75%] [Cov:============================>      81%][Progress:======================>       75%] [Cov:============================>      81%][Progress:======================>       75%] [Cov:============================>      81%][Progress:======================>       75%] [Cov:============================>      81%][Progress:======================>       75%] [Cov:============================>      81%][Progress:======================>       75%] [Cov:============================>      81%][Progress:======================>       75%] [Cov:============================>      81%][Progress:======================>       76%] [Cov:============================>      81%][Progress:======================>       76%] [Cov:============================>      81%][Progress:======================>       76%] [Cov:============================>      81%][Progress:======================>       76%] [Cov:============================>      81%][Progress:======================>       76%] [Cov:============================>      81%][Progress:======================>       76%] [Cov:============================>      81%][Progress:=======================>      77%] [Cov:============================>      81%][Progress:=======================>      77%] [Cov:============================>      81%][Progress:=======================>      77%] [Cov:============================>      81%][Progress:=======================>      77%] [Cov:============================>      81%][Progress:=======================>      77%] [Cov:============================>      81%][Progress:=======================>      77%] [Cov:============================>      81%][Progress:=======================>      77%] [Cov:============================>      81%][Progress:=======================>      77%] [Cov:============================>      81%][Progress:=======================>      77%] [Cov:============================>      81%][Progress:=======================>      78%] [Cov:============================>      81%][Progress:=======================>      78%] [Cov:============================>      81%][Progress:=======================>      78%] [Cov:============================>      81%][Progress:=======================>      78%] [Cov:============================>      81%][Progress:=======================>      78%] [Cov:============================>      81%][Progress:=======================>      78%] [Cov:============================>      81%][Progress:=======================>      78%] [Cov:============================>      81%][Progress:=======================>      79%] [Cov:============================>      81%][Progress:=======================>      79%] [Cov:============================>      81%][Progress:=======================>      79%] [Cov:============================>      81%][Progress:=======================>      79%] [Cov:============================>      81%][Progress:=======================>      79%] [Cov:============================>      81%][Progress:=======================>      79%] [Cov:============================>      81%][Progress:=======================>      79%] [Cov:============================>      81%][Progress:=======================>      79%] [Cov:============================>      81%][Progress:=======================>      79%] [Cov:============================>      81%][Progress:========================>     80%] [Cov:============================>      81%][Progress:========================>     80%] [Cov:============================>      81%][Progress:========================>     80%] [Cov:============================>      81%][Progress:========================>     80%] [Cov:============================>      81%][Progress:========================>     80%] [Cov:============================>      81%][Progress:========================>     80%] [Cov:============================>      81%][Progress:========================>     80%] [Cov:============================>      81%][Progress:========================>     80%] [Cov:============================>      81%][Progress:========================>     80%] [Cov:============================>      81%][Progress:========================>     81%] [Cov:============================>      81%][Progress:========================>     81%] [Cov:============================>      81%][Progress:========================>     81%] [Cov:============================>      81%][Progress:========================>     81%] [Cov:============================>      81%][Progress:========================>     81%] [Cov:============================>      81%][Progress:========================>     81%] [Cov:============================>      81%][Progress:========================>     81%] [Cov:============================>      81%][Progress:========================>     81%] [Cov:============================>      81%][Progress:========================>     81%] [Cov:============================>      81%][Progress:========================>     81%] [Cov:============================>      81%][Progress:========================>     82%] [Cov:============================>      81%][Progress:========================>     82%] [Cov:============================>      81%][Progress:========================>     82%] [Cov:============================>      81%][Progress:========================>     82%] [Cov:============================>      81%][Progress:========================>     82%] [Cov:============================>      81%][Progress:========================>     82%] [Cov:============================>      81%][Progress:========================>     82%] [Cov:============================>      81%][Progress:========================>     82%] [Cov:============================>      81%][Progress:========================>     82%] [Cov:============================>      81%][Progress:========================>     83%] [Cov:============================>      81%][Progress:========================>     83%] [Cov:============================>      81%][Progress:========================>     83%] [Cov:============================>      81%][Progress:========================>     83%] [Cov:============================>      81%][Progress:========================>     83%] [Cov:============================>      81%][Progress:========================>     83%] [Cov:============================>      81%][Progress:========================>     83%] [Cov:============================>      81%][Progress:========================>     83%] [Cov:============================>      81%][Progress:========================>     83%] [Cov:============================>      81%][Progress:========================>     83%] [Cov:============================>      81%][Progress:========================>     83%] [Cov:============================>      81%][Progress:=========================>    84%] [Cov:============================>      81%][Progress:=========================>    84%] [Cov:============================>      81%][Progress:=========================>    84%] [Cov:============================>      81%][Progress:=========================>    84%] [Cov:============================>      81%][Progress:=========================>    84%] [Cov:============================>      81%][Progress:=========================>    84%] [Cov:============================>      81%][Progress:=========================>    84%] [Cov:============================>      81%][Progress:=========================>    84%] [Cov:============================>      81%][Progress:=========================>    84%] [Cov:============================>      81%][Progress:=========================>    85%] [Cov:============================>      81%][Progress:=========================>    85%] [Cov:============================>      81%][Progress:=========================>    85%] [Cov:============================>      81%][Progress:=========================>    85%] [Cov:============================>      81%][Progress:=========================>    85%] [Cov:============================>      81%][Progress:=========================>    85%] [Cov:============================>      81%][Progress:=========================>    85%] [Cov:============================>      81%][Progress:=========================>    85%] [Cov:============================>      81%][Progress:=========================>    85%] [Cov:============================>      81%][Progress:=========================>    85%] [Cov:============================>      81%][Progress:=========================>    85%] [Cov:============================>      81%][Progress:=========================>    85%] [Cov:============================>      81%][Progress:=========================>    85%] [Cov:============================>      81%][Progress:=========================>    86%] [Cov:============================>      81%][Progress:=========================>    86%] [Cov:============================>      81%][Progress:=========================>    86%] [Cov:============================>      81%][Progress:=========================>    86%] [Cov:============================>      81%][Progress:=========================>    86%] [Cov:============================>      81%][Progress:=========================>    86%] [Cov:============================>      81%][Progress:=========================>    86%] [Cov:============================>      81%][Progress:=========================>    86%] [Cov:============================>      81%][Progress:==========================>   87%] [Cov:============================>      81%][Progress:==========================>   87%] [Cov:============================>      81%][Progress:==========================>   87%] [Cov:============================>      81%][Progress:==========================>   87%] [Cov:============================>      81%][Progress:==========================>   87%] [Cov:============================>      81%][Progress:==========================>   87%] [Cov:============================>      81%][Progress:==========================>   87%] [Cov:============================>      81%][Progress:==========================>   87%] [Cov:============================>      81%][Progress:==========================>   87%] [Cov:============================>      81%][Progress:==========================>   87%] [Cov:============================>      81%][Progress:==========================>   88%] [Cov:============================>      81%][Progress:==========================>   88%] [Cov:============================>      81%][Progress:==========================>   88%] [Cov:============================>      81%][Progress:==========================>   88%] [Cov:============================>      81%][Progress:==========================>   88%] [Cov:============================>      81%][Progress:==========================>   88%] [Cov:============================>      81%][Progress:==========================>   88%] [Cov:============================>      81%][Progress:==========================>   88%] [Cov:============================>      81%][Progress:==========================>   88%] [Cov:============================>      81%][Progress:==========================>   88%] [Cov:============================>      81%][Progress:==========================>   88%] [Cov:============================>      81%][Progress:==========================>   89%] [Cov:============================>      81%][Progress:==========================>   89%] [Cov:============================>      81%][Progress:==========================>   89%] [Cov:============================>      81%][Progress:==========================>   89%] [Cov:============================>      81%][Progress:==========================>   89%] [Cov:============================>      81%][Progress:==========================>   89%] [Cov:============================>      81%][Progress:==========================>   89%] [Cov:============================>      81%][Progress:==========================>   89%] [Cov:============================>      81%][Progress:==========================>   89%] [Cov:============================>      81%][Progress:==========================>   89%] [Cov:============================>      81%][Progress:==========================>   89%] [Cov:============================>      81%][Progress:==========================>   89%] [Cov:============================>      81%][Progress:===========================>  90%] [Cov:============================>      81%][Progress:===========================>  90%] [Cov:============================>      81%][Progress:===========================>  90%] [Cov:============================>      81%][Progress:===========================>  90%] [Cov:============================>      81%][Progress:===========================>  90%] [Cov:============================>      81%][Progress:===========================>  90%] [Cov:============================>      81%][Progress:===========================>  90%] [Cov:============================>      81%][Progress:===========================>  90%] [Cov:============================>      81%][Progress:===========================>  90%] [Cov:============================>      81%][Progress:===========================>  90%] [Cov:============================>      81%][Progress:===========================>  90%] [Cov:============================>      81%][Progress:===========================>  90%] [Cov:============================>      81%][Progress:===========================>  90%] [Cov:============================>      81%][Progress:===========================>  91%] [Cov:============================>      81%][Progress:===========================>  91%] [Cov:============================>      81%][Progress:===========================>  91%] [Cov:============================>      81%][Progress:===========================>  91%] [Cov:============================>      81%][Progress:===========================>  91%] [Cov:============================>      81%][Progress:===========================>  91%] [Cov:============================>      81%][Progress:===========================>  91%] [Cov:============================>      81%][Progress:===========================>  91%] [Cov:============================>      81%][Progress:===========================>  92%] [Cov:============================>      81%][Progress:===========================>  92%] [Cov:============================>      81%][Progress:===========================>  92%] [Cov:============================>      81%][Progress:===========================>  92%] [Cov:============================>      81%][Progress:===========================>  93%] [Cov:============================>      81%][Progress:===========================>  93%] [Cov:============================>      81%][Progress:===========================>  93%] [Cov:============================>      81%][Progress:===========================>  93%] [Cov:============================>      81%][Progress:===========================>  93%] [Cov:============================>      81%][Progress:===========================>  93%] [Cov:============================>      81%][Progress:============================> 94%] [Cov:============================>      81%][Progress:============================> 94%] [Cov:============================>      81%][Progress:============================> 94%] [Cov:============================>      81%][Progress:============================> 94%] [Cov:============================>      81%][Progress:============================> 94%] [Cov:============================>      81%][Progress:============================> 95%] [Cov:============================>      81%][Progress:============================> 95%] [Cov:============================>      81%][Progress:============================> 95%] [Cov:============================>      81%][Progress:============================> 95%] [Cov:============================>      81%][Progress:============================> 95%] [Cov:============================>      81%][Progress:============================> 95%] [Cov:============================>      81%][Progress:============================> 96%] [Cov:============================>      81%][Progress:============================> 96%] [Cov:============================>      81%][Progress:============================> 96%] [Cov:============================>      81%][Progress:=============================>97%] [Cov:============================>      81%][Progress:=============================>97%] [Cov:============================>      81%][Progress:=============================>97%] [Cov:============================>      81%][Progress:=============================>97%] [Cov:============================>      81%][Progress:=============================>97%] [Cov:============================>      81%][Progress:=============================>97%] [Cov:============================>      81%][Progress:=============================>98%] [Cov:============================>      81%][Progress:=============================>98%] [Cov:============================>      81%][Progress:=============================>98%] [Cov:============================>      82%][Progress:=============================>98%] [Cov:============================>      82%][Progress:=============================>98%] [Cov:============================>      82%][Progress:=============================>98%] [Cov:============================>      82%][Progress:=============================>99%] [Cov:============================>      82%][Progress:=============================>99%] [Cov:============================>      82%][Progress:=============================>99%] [Cov:============================>      82%][Progress:=============================>99%] [Cov:============================>      82%][Progress:=============================>99%] [Cov:============================>      82%][Progress:=============================>99%] [Cov:============================>      82%][Progress:=============================>99%] [Cov:============================>      82%][Progress:==============================100%] [Cov:============================>      82%][Progress:==============================100%] [Cov:============================>      82%]
* Search finished after 201s and 776 generations, 318895 statements, best individual has fitness: 73.0
* Generated before the refinement 24 tests with total length 153
statement is: fr.unice.gfarce.interGraph.TableStockage()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class fr.unice.gfarce.interGraph.TableStockage
statement code is: TableStockage tableStockage = new TableStockage()
statement is: fr.unice.gfarce.interGraph.ModifTableStockage(Lfr/unice/gfarce/interGraph/TableStockage;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class fr.unice.gfarce.interGraph.ModifTableStockage
statement code is: ModifTableStockage modifTableStockage = new ModifTableStockage(arg0)
statement is: colonneMail()Lfr/unice/gfarce/interGraph/TableStockage; type is: class org.evosuite.testcase.statements.MethodStatement return type class fr.unice.gfarce.interGraph.TableStockage
statement code is: TableStockage colonneMail = modifTableStockage.colonneMail()
statement is: supprimerColonne(I)Lfr/unice/gfarce/interGraph/TableStockage; type is: class org.evosuite.testcase.statements.MethodStatement return type class fr.unice.gfarce.interGraph.TableStockage
statement code is: TableStockage supprimerColonne = modifTableStockage.supprimerColonne(0)
test data is: TableStockage tableStockage = new TableStockage();
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
modifTableStockage.colonneMail();
modifTableStockage.supprimerColonne(0);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        int primitiveValue = 1000;
        String stringValue = "This is a long String value that demonstrates the importance of using descriptive variable names. It should be easy to read and understand, without being too long or convoluted.";
        double doubleValue = 3.141592653589793;
        char charValue = 'A';
        boolean boolValue = false;
    }
}
statement is: int primitiveValue = 1000, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: String stringValue = "This is a long String value that demonstrates the importance of using descriptive variable names. It should be easy to read and understand, without being too long or convoluted.", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: double doubleValue = 3.141592653589793, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: char charValue = 'A', class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: boolean boolValue = false, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
* this is vulnerable: int _int = 1000
* this is vulnerable: String string = "This is a long String value that demonstrates the importance of using descriptive variable names. It should be easy to read and understand, without being too long or convoluted."
* this is vulnerable: double _double = 3.141592653589793
* this is vulnerable: char _char = 'A'
* this is vulnerable: boolean _boolean = false
TestCase is: int _int = 1000;
String string = "This is a long String value that demonstrates the importance of using descriptive variable names. It should be easy to read and understand, without being too long or convoluted.";
double _double = 3.141592653589793;
char _char = 'A';
boolean _boolean = false;

statement is: org.evosuite.testcase.statements.ArrayStatement@bb9edd9d type is: class org.evosuite.testcase.statements.ArrayStatement return type class [[Ljava.lang.Object;
statement code is: Object[][] objectArray = new Object[2][7]
statement is: org.evosuite.testcase.statements.ArrayStatement@88828e47 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [Ljava.lang.String;
statement code is: String[] stringArray = new String[1]
statement is: fr.unice.gfarce.interGraph.TableStockage([Ljava/lang/String;[[Ljava/lang/Object;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class fr.unice.gfarce.interGraph.TableStockage
statement code is: TableStockage tableStockage = new TableStockage(arg0, arg1)
statement is: fr.unice.gfarce.interGraph.ModifTableStockage(Lfr/unice/gfarce/interGraph/TableStockage;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class fr.unice.gfarce.interGraph.ModifTableStockage
statement code is: ModifTableStockage modifTableStockage = new ModifTableStockage(arg0)
statement is: colonneMail()Lfr/unice/gfarce/interGraph/TableStockage; type is: class org.evosuite.testcase.statements.MethodStatement return type class fr.unice.gfarce.interGraph.TableStockage
statement code is: TableStockage colonneMail = modifTableStockage.colonneMail()
test data is: Object[][] objectArray = new Object[2][7];
String[] stringArray = new String[1];
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
modifTableStockage.colonneMail();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Object[][] objectArray = new Object[2][7];
        String[] stringArray = new String[1];
        stringArray[0] = "john.doe@example.com";// Replace this with a more descriptive email address

        TableStockage tableStockage = new TableStockage(stringArray, objectArray);
        ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
        modifTableStockage.colonneMail();
    }
}
statement is: Object[][] objectArray = new Object[2][7], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [2, 7] Ct is: Object[][] objectArray = new Object[2][7] isAssignment: false Array: new Object[2][7] Elements: []
lengths: [2, 7] [2, 7]
Their type are: class [[Ljava.lang.Object; Object[][]
statement is: String[] stringArray = new String[1], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [1] Ct is: Object[][] objectArray = new Object[2][7] isAssignment: false Array: new String[1] Elements: []
lengths: [2, 7] [1]
Dimension: [1] Ct is: String[] stringArray = new String[1] isAssignment: false Array: new String[1] Elements: []
lengths: [1] [1]
Their type are: class [Ljava.lang.String; String[]
statement is: stringArray[0] = "john.doe@example.com"// Replace this with a more descriptive email address
, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"john.doe@example.com" Ct is: stringArray[0] = "john.doe@example.com"// Replace this with a more descriptive email address

target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: TableStockage tableStockage = new TableStockage(stringArray, objectArray), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: modifTableStockage.colonneMail(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: modifTableStockage.colonneMail() target is: modifTableStockage method is: colonneMail()
source statement: fr.unice.gfarce.interGraph.ModifTableStockage(Lfr/unice/gfarce/interGraph/TableStockage;)V callee: VariableReference: Statement 3, type fr.unice.gfarce.interGraph.ModifTableStockageindex is: 3
Matched Method is: colonneMail()Lfr/unice/gfarce/interGraph/TableStockage;
TestCase is: Object[][] objectArray = new Object[2][7];
String[] stringArray = new String[1];
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
modifTableStockage.colonneMail();

statement is: fr.unice.gfarce.interGraph.TableStockage()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class fr.unice.gfarce.interGraph.TableStockage
statement code is: TableStockage tableStockage = new TableStockage()
statement is: fr.unice.gfarce.interGraph.ModifTableStockage(Lfr/unice/gfarce/interGraph/TableStockage;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class fr.unice.gfarce.interGraph.ModifTableStockage
statement code is: ModifTableStockage modifTableStockage = new ModifTableStockage(arg0)
statement is: ajouterLigne()Lfr/unice/gfarce/interGraph/TableStockage; type is: class org.evosuite.testcase.statements.MethodStatement return type class fr.unice.gfarce.interGraph.TableStockage
statement code is: TableStockage ajouterLigne = modifTableStockage.ajouterLigne()
test data is: TableStockage tableStockage = new TableStockage();
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
modifTableStockage.ajouterLigne();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Improved test data
        TableStockage tableStockage = new TableStockage();
        ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
        modifTableStockage.ajouterLigne("Ajout d'une ligne de test");
    }
}
statement is: // Improved test data
TableStockage tableStockage = new TableStockage(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: modifTableStockage.ajouterLigne("Ajout d'une ligne de test"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: modifTableStockage.ajouterLigne("Ajout d'une ligne de test") target is: modifTableStockage method is: ajouterLigne(java.lang.String)
TestCase is: TableStockage tableStockage = new TableStockage();
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);

statement is: org.evosuite.testcase.statements.ArrayStatement@fb5c6f8b type is: class org.evosuite.testcase.statements.ArrayStatement return type class [Ljava.lang.String;
statement code is: String[] stringArray = new String[9]
statement is: org.evosuite.testcase.statements.AssignmentStatement@3d4ad0d type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.String
statement code is: stringArray[0] = ""
statement is: org.evosuite.testcase.statements.ArrayStatement@acc7cc0e type is: class org.evosuite.testcase.statements.ArrayStatement return type class [[Ljava.lang.Object;
statement code is: Object[][] objectArray = new Object[4][7]
statement is: org.evosuite.testcase.statements.AssignmentStatement@d7d61974 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class [Ljava.lang.Object;
statement code is: objectArray[0] = (Object[]) stringArray
statement is: org.evosuite.testcase.statements.AssignmentStatement@1dcb3770 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class [Ljava.lang.Object;
statement code is: objectArray[1] = (Object[]) stringArray
statement is: org.evosuite.testcase.statements.AssignmentStatement@1b21ec4b type is: class org.evosuite.testcase.statements.AssignmentStatement return type class [Ljava.lang.Object;
statement code is: objectArray[2] = (Object[]) stringArray
statement is: org.evosuite.testcase.statements.AssignmentStatement@a9075a30 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class [Ljava.lang.Object;
statement code is: objectArray[3] = (Object[]) stringArray
statement is: fr.unice.gfarce.interGraph.TableStockage([Ljava/lang/String;[[Ljava/lang/Object;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class fr.unice.gfarce.interGraph.TableStockage
statement code is: TableStockage tableStockage = new TableStockage(arg0, arg1)
statement is: fr.unice.gfarce.interGraph.ModifTableStockage(Lfr/unice/gfarce/interGraph/TableStockage;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class fr.unice.gfarce.interGraph.ModifTableStockage
statement code is: ModifTableStockage modifTableStockage = new ModifTableStockage(arg0)
statement is: ajouterLigne()Lfr/unice/gfarce/interGraph/TableStockage; type is: class org.evosuite.testcase.statements.MethodStatement return type class fr.unice.gfarce.interGraph.TableStockage
statement code is: TableStockage ajouterLigne = modifTableStockage.ajouterLigne()
test data is: String[] stringArray = new String[9];
stringArray[0] = "";
Object[][] objectArray = new Object[4][7];
objectArray[0] = (Object[]) stringArray;
objectArray[1] = (Object[]) stringArray;
objectArray[2] = (Object[]) stringArray;
objectArray[3] = (Object[]) stringArray;
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
modifTableStockage.ajouterLigne();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        String[] stringArray = new String[9];
        stringArray[0] = "Lorem ipsum dolor sit amet, consectetur adipiscing elit.";
        Object[][] objectArray = new Object[4][7];
        objectArray[0] = ((Object[]) (stringArray));
        objectArray[1] = ((Object[]) (stringArray));
        objectArray[2] = ((Object[]) (stringArray));
        objectArray[3] = ((Object[]) (stringArray));
        TableStockage tableStockage = new TableStockage(stringArray, objectArray);
        ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
        modifTableStockage.ajouterLigne();
    }
}
statement is: String[] stringArray = new String[9], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [9] Ct is: String[] stringArray = new String[9] isAssignment: false Array: new String[9] Elements: []
lengths: [9] [9]
Their type are: class [Ljava.lang.String; String[]
statement is: stringArray[0] = "Lorem ipsum dolor sit amet, consectetur adipiscing elit.", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"Lorem ipsum dolor sit amet, consectetur adipiscing elit." Ct is: stringArray[0] = "Lorem ipsum dolor sit amet, consectetur adipiscing elit."
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: Object[][] objectArray = new Object[4][7], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [4, 7] Ct is: String[] stringArray = new String[9] isAssignment: false Array: new Object[4][7] Elements: []
lengths: [9] [4, 7]
Dimension: [4, 7] Ct is: Object[][] objectArray = new Object[4][7] isAssignment: false Array: new Object[4][7] Elements: []
lengths: [4, 7] [4, 7]
Their type are: class [[Ljava.lang.Object; Object[][]
statement is: objectArray[0] = ((Object[]) (stringArray)), class spoon.support.reflect.code.CtAssignmentImpl
Assigned : objectArray[0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl Object[] Assignment:((Object[]) (stringArray)) Ct is: objectArray[0] = ((Object[]) (stringArray))
target : objectArray class spoon.support.reflect.code.CtLiteralImpl
TestCase Could not be added: org.evosuite.testcase.statements.AssignmentStatement@85df89d5
statement is: objectArray[1] = ((Object[]) (stringArray)), class spoon.support.reflect.code.CtAssignmentImpl
Assigned : objectArray[1] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl Object[] Assignment:((Object[]) (stringArray)) Ct is: objectArray[1] = ((Object[]) (stringArray))
target : objectArray class spoon.support.reflect.code.CtLiteralImpl
TestCase Could not be added: org.evosuite.testcase.statements.AssignmentStatement@12c22357
statement is: objectArray[2] = ((Object[]) (stringArray)), class spoon.support.reflect.code.CtAssignmentImpl
Assigned : objectArray[2] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl Object[] Assignment:((Object[]) (stringArray)) Ct is: objectArray[2] = ((Object[]) (stringArray))
target : objectArray class spoon.support.reflect.code.CtLiteralImpl
TestCase Could not be added: org.evosuite.testcase.statements.AssignmentStatement@40ed85e5
statement is: objectArray[3] = ((Object[]) (stringArray)), class spoon.support.reflect.code.CtAssignmentImpl
Assigned : objectArray[3] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl Object[] Assignment:((Object[]) (stringArray)) Ct is: objectArray[3] = ((Object[]) (stringArray))
target : objectArray class spoon.support.reflect.code.CtLiteralImpl
TestCase Could not be added: org.evosuite.testcase.statements.AssignmentStatement@a4dbf09f
statement is: TableStockage tableStockage = new TableStockage(stringArray, objectArray), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: modifTableStockage.ajouterLigne(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: modifTableStockage.ajouterLigne() target is: modifTableStockage method is: ajouterLigne()
source statement: fr.unice.gfarce.interGraph.ModifTableStockage(Lfr/unice/gfarce/interGraph/TableStockage;)V callee: VariableReference: Statement 8, type fr.unice.gfarce.interGraph.ModifTableStockageindex is: 5
Matched Method is: ajouterLigne()Lfr/unice/gfarce/interGraph/TableStockage;
TestCase Could not be added: ajouterLigne()Lfr/unice/gfarce/interGraph/TableStockage;
TestCase is: String[] stringArray = new String[9];
String string = "Lorem ipsum dolor sit amet, consectetur adipiscing elit.";
stringArray[0] = string;
Object[][] objectArray = new Object[4][7];
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);

statement is: fr.unice.gfarce.interGraph.TableStockage(II)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class fr.unice.gfarce.interGraph.TableStockage
statement code is: TableStockage tableStockage = new TableStockage(57, 57)
statement is: Class<Object> class = Object.class type is: class org.evosuite.testcase.statements.ClassPrimitiveStatement return type java.lang.Class<java.lang.Object>
statement code is: Class<Object> class = Object.class
statement is: setColumnClass(ILjava/lang/Class;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: tableStockage.setColumnClass(0, arg1)
statement is: fr.unice.gfarce.interGraph.ModifTableStockage(Lfr/unice/gfarce/interGraph/TableStockage;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class fr.unice.gfarce.interGraph.ModifTableStockage
statement code is: ModifTableStockage modifTableStockage = new ModifTableStockage(arg0)
statement is: ajouterLigne()Lfr/unice/gfarce/interGraph/TableStockage; type is: class org.evosuite.testcase.statements.MethodStatement return type class fr.unice.gfarce.interGraph.TableStockage
statement code is: TableStockage ajouterLigne = modifTableStockage.ajouterLigne()
test data is: TableStockage tableStockage = new TableStockage(57, 57);
Class<Object> class = Object.class;
tableStockage.setColumnClass(0, class);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
modifTableStockage.ajouterLigne();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        TableStockage tableStockage = new TableStockage(57, 57);
        Class<Object> $missing$ = Object.class;
        tableStockage.setColumnClass(0, $missing$);
        ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
        modifTableStockage.ajouterLigne();
    }
}
statement is: TableStockage tableStockage = new TableStockage(57, 57), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Class<Object> $missing$ = Object.class, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: Object.class is Object
statement is: tableStockage.setColumnClass(0, $missing$), class spoon.support.reflect.code.CtInvocationImpl
invocation is: tableStockage.setColumnClass(0, $missing$) target is: tableStockage method is: setColumnClass(int,java.lang.Class)
source statement: fr.unice.gfarce.interGraph.TableStockage(II)V callee: VariableReference: Statement 0, type fr.unice.gfarce.interGraph.TableStockageindex is: 2
Matched Method is: setColumnClass(ILjava/lang/Class;)V
i 1 Parameters size() 1 Num of Method Parameters: 2
statement is: ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: modifTableStockage.ajouterLigne(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: modifTableStockage.ajouterLigne() target is: modifTableStockage method is: ajouterLigne()
source statement: fr.unice.gfarce.interGraph.ModifTableStockage(Lfr/unice/gfarce/interGraph/TableStockage;)V callee: VariableReference: Statement 3, type fr.unice.gfarce.interGraph.ModifTableStockageindex is: 6
Matched Method is: ajouterLigne()Lfr/unice/gfarce/interGraph/TableStockage;
TestCase is: int _int = 57;
int _int = 57;
TableStockage tableStockage = new TableStockage(_int, _int);
int _int = 0;
Class<Object> class = null;
((TableStockage) _int).setColumnClass(_int, class);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
((ModifTableStockage) _int).ajouterLigne();

statement is: org.evosuite.testcase.statements.ArrayStatement@f5714954 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [Ljava.lang.String;
statement code is: String[] stringArray = new String[6]
statement is: org.evosuite.testcase.statements.ArrayStatement@ab937782 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [[Ljava.lang.Object;
statement code is: Object[][] objectArray = new Object[5][6]
statement is: fr.unice.gfarce.interGraph.TableStockage([Ljava/lang/String;[[Ljava/lang/Object;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class fr.unice.gfarce.interGraph.TableStockage
statement code is: TableStockage tableStockage = new TableStockage(arg0, arg1)
statement is: fr.unice.gfarce.interGraph.ModifTableStockage(Lfr/unice/gfarce/interGraph/TableStockage;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class fr.unice.gfarce.interGraph.ModifTableStockage
statement code is: ModifTableStockage modifTableStockage = new ModifTableStockage(arg0)
statement is: supprimerColonne(I)Lfr/unice/gfarce/interGraph/TableStockage; type is: class org.evosuite.testcase.statements.MethodStatement return type class fr.unice.gfarce.interGraph.TableStockage
statement code is: TableStockage supprimerColonne = modifTableStockage.supprimerColonne(2)
test data is: String[] stringArray = new String[6];
Object[][] objectArray = new Object[5][6];
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
modifTableStockage.supprimerColonne(2);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        String[] stringArray = new String[]{ "nom1", "prenom1", "adresse1", "ville1", "codePostal1", "telephone1" };
        Object[][] objectArray = new Object[][]{ new Object[]{ "Nombre1", 5.0, "Rue du 1er mars", "Tunis", "1000", "+216 73 800 000" }, new Object[]{ "Nombre2", 9.0, "Rue de l'indépendance", "Sousse", "1005", "+216 71 50 50 50" }, new Object[]{ "Nombre3", 18.0, "Rue du 3 mars", "Tunis", "1000", "+216 73 800 000" } };
        TableStockage tableStockage = new TableStockage(stringArray, objectArray);
        ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
        modifTableStockage.supprimerColonne(2);
    }
}
statement is: String[] stringArray = new String[]{ "nom1", "prenom1", "adresse1", "ville1", "codePostal1", "telephone1" }, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [] Ct is: String[] stringArray = new String[6] isAssignment: false Array: new String[]{ "nom1", "prenom1", "adresse1", "ville1", "codePostal1", "telephone1" } Elements: ["nom1", "prenom1", "adresse1", "ville1", "codePostal1", "telephone1"]
lengths: [6] []
Dimension: [] Ct is: Object[][] objectArray = new Object[5][6] isAssignment: false Array: new String[]{ "nom1", "prenom1", "adresse1", "ville1", "codePostal1", "telephone1" } Elements: ["nom1", "prenom1", "adresse1", "ville1", "codePostal1", "telephone1"]
lengths: [5, 6] []
statement is: Object[][] objectArray = new Object[][]{ new Object[]{ "Nombre1", 5.0, "Rue du 1er mars", "Tunis", "1000", "+216 73 800 000" }, new Object[]{ "Nombre2", 9.0, "Rue de l'indépendance", "Sousse", "1005", "+216 71 50 50 50" }, new Object[]{ "Nombre3", 18.0, "Rue du 3 mars", "Tunis", "1000", "+216 73 800 000" } }, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [] Ct is: String[] stringArray = new String[6] isAssignment: false Array: new Object[][]{ new Object[]{ "Nombre1", 5.0, "Rue du 1er mars", "Tunis", "1000", "+216 73 800 000" }, new Object[]{ "Nombre2", 9.0, "Rue de l'indépendance", "Sousse", "1005", "+216 71 50 50 50" }, new Object[]{ "Nombre3", 18.0, "Rue du 3 mars", "Tunis", "1000", "+216 73 800 000" } } Elements: [new Object[]{ "Nombre1", 5.0, "Rue du 1er mars", "Tunis", "1000", "+216 73 800 000" }, new Object[]{ "Nombre2", 9.0, "Rue de l'indépendance", "Sousse", "1005", "+216 71 50 50 50" }, new Object[]{ "Nombre3", 18.0, "Rue du 3 mars", "Tunis", "1000", "+216 73 800 000" }]
lengths: [6] []
Dimension: [] Ct is: Object[][] objectArray = new Object[5][6] isAssignment: false Array: new Object[][]{ new Object[]{ "Nombre1", 5.0, "Rue du 1er mars", "Tunis", "1000", "+216 73 800 000" }, new Object[]{ "Nombre2", 9.0, "Rue de l'indépendance", "Sousse", "1005", "+216 71 50 50 50" }, new Object[]{ "Nombre3", 18.0, "Rue du 3 mars", "Tunis", "1000", "+216 73 800 000" } } Elements: [new Object[]{ "Nombre1", 5.0, "Rue du 1er mars", "Tunis", "1000", "+216 73 800 000" }, new Object[]{ "Nombre2", 9.0, "Rue de l'indépendance", "Sousse", "1005", "+216 71 50 50 50" }, new Object[]{ "Nombre3", 18.0, "Rue du 3 mars", "Tunis", "1000", "+216 73 800 000" }]
lengths: [5, 6] []
statement is: TableStockage tableStockage = new TableStockage(stringArray, objectArray), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: fr.unice.gfarce.interGraph.TableStockage([Ljava/lang/String;[[Ljava/lang/Object;)V
statement is: ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: fr.unice.gfarce.interGraph.ModifTableStockage(Lfr/unice/gfarce/interGraph/TableStockage;)V
statement is: modifTableStockage.supprimerColonne(2), class spoon.support.reflect.code.CtInvocationImpl
invocation is: modifTableStockage.supprimerColonne(2) target is: modifTableStockage method is: supprimerColonne(int)
statement is: org.evosuite.testcase.statements.ArrayStatement@aefecd8 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [[Ljava.lang.Object;
statement code is: Object[][] objectArray = new Object[2][7]
statement is: org.evosuite.testcase.statements.ArrayStatement@59377b19 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [Ljava.lang.String;
statement code is: String[] stringArray = new String[1]
statement is: fr.unice.gfarce.interGraph.TableStockage([Ljava/lang/String;[[Ljava/lang/Object;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class fr.unice.gfarce.interGraph.TableStockage
statement code is: TableStockage tableStockage = new TableStockage(arg0, arg1)
statement is: fr.unice.gfarce.interGraph.ModifTableStockage(Lfr/unice/gfarce/interGraph/TableStockage;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class fr.unice.gfarce.interGraph.ModifTableStockage
statement code is: ModifTableStockage modifTableStockage = new ModifTableStockage(arg0)
statement is: supprimerColonne(I)Lfr/unice/gfarce/interGraph/TableStockage; type is: class org.evosuite.testcase.statements.MethodStatement return type class fr.unice.gfarce.interGraph.TableStockage
statement code is: TableStockage supprimerColonne = modifTableStockage.supprimerColonne(0)
test data is: Object[][] objectArray = new Object[2][7];
String[] stringArray = new String[1];
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
modifTableStockage.supprimerColonne(0);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Object[][] objectArray = new Object[2][7];
        String[] stringArray = new String[1];
        stringArray[0] = "Chair";
        objectArray[0][0] = 1;
        objectArray[0][1] = 2.5;
        objectArray[0][2] = 'A';
        objectArray[0][3] = true;
        objectArray[0][4] = "Blue";
        objectArray[0][5] = new Date();
        objectArray[0][6] = new BigDecimal("10.5");
        stringArray[1] = "Table";
        objectArray[1][0] = 2;
        objectArray[1][1] = 3.5;
        objectArray[1][2] = 'B';
        objectArray[1][3] = false;
        objectArray[1][4] = "Red";
        objectArray[1][5] = new Date();
        objectArray[1][6] = new BigDecimal("12.5");
        TableStockage tableStockage = new TableStockage(stringArray, objectArray);
        ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
        modifTableStockage.supprimerColonne(0);
    }
}
statement is: Object[][] objectArray = new Object[2][7], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [2, 7] Ct is: Object[][] objectArray = new Object[2][7] isAssignment: false Array: new Object[2][7] Elements: []
lengths: [2, 7] [2, 7]
Their type are: class [[Ljava.lang.Object; Object[][]
statement is: String[] stringArray = new String[1], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [1] Ct is: Object[][] objectArray = new Object[2][7] isAssignment: false Array: new String[1] Elements: []
lengths: [2, 7] [1]
Dimension: [1] Ct is: String[] stringArray = new String[1] isAssignment: false Array: new String[1] Elements: []
lengths: [1] [1]
Their type are: class [Ljava.lang.String; String[]
statement is: stringArray[0] = "Chair", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"Chair" Ct is: stringArray[0] = "Chair"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: objectArray[0][0] = 1, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : objectArray[0][0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl Object Assignment:1 Ct is: objectArray[0][0] = 1
target : objectArray[0] class spoon.support.reflect.code.CtLiteralImpl
statement is: objectArray[0][1] = 2.5, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : objectArray[0][1] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl Object Assignment:2.5 Ct is: objectArray[0][1] = 2.5
target : objectArray[0] class spoon.support.reflect.code.CtLiteralImpl
statement is: objectArray[0][2] = 'A', class spoon.support.reflect.code.CtAssignmentImpl
Assigned : objectArray[0][2] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl Object Assignment:'A' Ct is: objectArray[0][2] = 'A'
target : objectArray[0] class spoon.support.reflect.code.CtLiteralImpl
statement is: objectArray[0][3] = true, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : objectArray[0][3] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl Object Assignment:true Ct is: objectArray[0][3] = true
target : objectArray[0] class spoon.support.reflect.code.CtLiteralImpl
statement is: objectArray[0][4] = "Blue", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : objectArray[0][4] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl Object Assignment:"Blue" Ct is: objectArray[0][4] = "Blue"
target : objectArray[0] class spoon.support.reflect.code.CtLiteralImpl
statement is: objectArray[0][5] = new Date(), class spoon.support.reflect.code.CtAssignmentImpl
Assigned : objectArray[0][5] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl Object Assignment:new Date() Ct is: objectArray[0][5] = new Date()
target : objectArray[0] class spoon.support.reflect.code.CtLiteralImpl
statement is: objectArray[0][6] = new BigDecimal("10.5"), class spoon.support.reflect.code.CtAssignmentImpl
Assigned : objectArray[0][6] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl Object Assignment:new BigDecimal("10.5") Ct is: objectArray[0][6] = new BigDecimal("10.5")
target : objectArray[0] class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[1] = "Table", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[1] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"Table" Ct is: stringArray[1] = "Table"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: objectArray[1][0] = 2, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : objectArray[1][0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl Object Assignment:2 Ct is: objectArray[1][0] = 2
target : objectArray[1] class spoon.support.reflect.code.CtLiteralImpl
statement is: objectArray[1][1] = 3.5, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : objectArray[1][1] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl Object Assignment:3.5 Ct is: objectArray[1][1] = 3.5
target : objectArray[1] class spoon.support.reflect.code.CtLiteralImpl
statement is: objectArray[1][2] = 'B', class spoon.support.reflect.code.CtAssignmentImpl
Assigned : objectArray[1][2] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl Object Assignment:'B' Ct is: objectArray[1][2] = 'B'
target : objectArray[1] class spoon.support.reflect.code.CtLiteralImpl
statement is: objectArray[1][3] = false, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : objectArray[1][3] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl Object Assignment:false Ct is: objectArray[1][3] = false
target : objectArray[1] class spoon.support.reflect.code.CtLiteralImpl
statement is: objectArray[1][4] = "Red", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : objectArray[1][4] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl Object Assignment:"Red" Ct is: objectArray[1][4] = "Red"
target : objectArray[1] class spoon.support.reflect.code.CtLiteralImpl
statement is: objectArray[1][5] = new Date(), class spoon.support.reflect.code.CtAssignmentImpl
Assigned : objectArray[1][5] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl Object Assignment:new Date() Ct is: objectArray[1][5] = new Date()
target : objectArray[1] class spoon.support.reflect.code.CtLiteralImpl
statement is: objectArray[1][6] = new BigDecimal("12.5"), class spoon.support.reflect.code.CtAssignmentImpl
Assigned : objectArray[1][6] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl Object Assignment:new BigDecimal("12.5") Ct is: objectArray[1][6] = new BigDecimal("12.5")
target : objectArray[1] class spoon.support.reflect.code.CtLiteralImpl
statement is: TableStockage tableStockage = new TableStockage(stringArray, objectArray), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: modifTableStockage.supprimerColonne(0), class spoon.support.reflect.code.CtInvocationImpl
invocation is: modifTableStockage.supprimerColonne(0) target is: modifTableStockage method is: supprimerColonne(int)
source statement: fr.unice.gfarce.interGraph.ModifTableStockage(Lfr/unice/gfarce/interGraph/TableStockage;)V callee: VariableReference: Statement 3, type fr.unice.gfarce.interGraph.ModifTableStockageindex is: 3
Matched Method is: supprimerColonne(I)Lfr/unice/gfarce/interGraph/TableStockage;
TestCase is: Object[][] objectArray = new Object[2][7];
String[] stringArray = new String[1];
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
int _int = 0;
modifTableStockage.supprimerColonne(_int);

statement is: org.evosuite.testcase.statements.ArrayStatement@7ae97ce8 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [Ljava.lang.String;
statement code is: String[] stringArray = new String[8]
statement is: org.evosuite.testcase.statements.ArrayStatement@5346022a type is: class org.evosuite.testcase.statements.ArrayStatement return type class [[Ljava.lang.Object;
statement code is: Object[][] objectArray = new Object[7][1]
statement is: org.evosuite.testcase.statements.AssignmentStatement@23797943 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class [Ljava.lang.Object;
statement code is: objectArray[0] = (Object[]) stringArray
statement is: org.evosuite.testcase.statements.AssignmentStatement@e4218ca6 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class [Ljava.lang.Object;
statement code is: objectArray[1] = (Object[]) stringArray
statement is: org.evosuite.testcase.statements.AssignmentStatement@eb76ae75 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class [Ljava.lang.Object;
statement code is: objectArray[2] = (Object[]) stringArray
statement is: org.evosuite.testcase.statements.AssignmentStatement@9bed9f0b type is: class org.evosuite.testcase.statements.AssignmentStatement return type class [Ljava.lang.Object;
statement code is: objectArray[3] = (Object[]) stringArray
statement is: org.evosuite.testcase.statements.AssignmentStatement@20831ca1 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class [Ljava.lang.Object;
statement code is: objectArray[4] = (Object[]) stringArray
statement is: org.evosuite.testcase.statements.AssignmentStatement@3c99efe0 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class [Ljava.lang.Object;
statement code is: objectArray[5] = (Object[]) stringArray
statement is: org.evosuite.testcase.statements.AssignmentStatement@a7027181 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class [Ljava.lang.Object;
statement code is: objectArray[6] = (Object[]) stringArray
statement is: fr.unice.gfarce.interGraph.TableStockage([Ljava/lang/String;[[Ljava/lang/Object;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class fr.unice.gfarce.interGraph.TableStockage
statement code is: TableStockage tableStockage = new TableStockage(arg0, arg1)
statement is: fr.unice.gfarce.interGraph.ModifTableStockage(Lfr/unice/gfarce/interGraph/TableStockage;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class fr.unice.gfarce.interGraph.ModifTableStockage
statement code is: ModifTableStockage modifTableStockage = new ModifTableStockage(arg0)
statement is: supprimerLigne(I)Lfr/unice/gfarce/interGraph/TableStockage; type is: class org.evosuite.testcase.statements.MethodStatement return type class fr.unice.gfarce.interGraph.TableStockage
statement code is: TableStockage supprimerLigne = modifTableStockage.supprimerLigne(2)
test data is: String[] stringArray = new String[8];
Object[][] objectArray = new Object[7][1];
objectArray[0] = (Object[]) stringArray;
objectArray[1] = (Object[]) stringArray;
objectArray[2] = (Object[]) stringArray;
objectArray[3] = (Object[]) stringArray;
objectArray[4] = (Object[]) stringArray;
objectArray[5] = (Object[]) stringArray;
objectArray[6] = (Object[]) stringArray;
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
modifTableStockage.supprimerLigne(2);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        String[] stringArray = new String[8];
        stringArray[0] = "Alice";
        stringArray[1] = "Bob";
        stringArray[2] = "Charlie";
        stringArray[3] = "David";
        stringArray[4] = "Eve";
        stringArray[5] = "Frank";
        stringArray[6] = "Grace";
        stringArray[7] = "Henry";
        Object[][] objectArray = new Object[7][1];
        objectArray[0] = ((Object[]) (stringArray));
        objectArray[1] = ((Object[]) (stringArray));
        objectArray[2] = ((Object[]) (stringArray));
        objectArray[3] = ((Object[]) (stringArray));
        objectArray[4] = ((Object[]) (stringArray));
        objectArray[5] = ((Object[]) (stringArray));
        objectArray[6] = ((Object[]) (stringArray));
        TableStockage tableStockage = new TableStockage(stringArray, objectArray);
        ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
        modifTableStockage.supprimerLigne(2);
    }
}
statement is: String[] stringArray = new String[8], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [8] Ct is: String[] stringArray = new String[8] isAssignment: false Array: new String[8] Elements: []
lengths: [8] [8]
Their type are: class [Ljava.lang.String; String[]
statement is: stringArray[0] = "Alice", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"Alice" Ct is: stringArray[0] = "Alice"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[1] = "Bob", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[1] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"Bob" Ct is: stringArray[1] = "Bob"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[2] = "Charlie", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[2] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"Charlie" Ct is: stringArray[2] = "Charlie"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[3] = "David", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[3] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"David" Ct is: stringArray[3] = "David"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[4] = "Eve", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[4] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"Eve" Ct is: stringArray[4] = "Eve"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[5] = "Frank", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[5] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"Frank" Ct is: stringArray[5] = "Frank"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[6] = "Grace", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[6] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"Grace" Ct is: stringArray[6] = "Grace"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[7] = "Henry", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[7] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"Henry" Ct is: stringArray[7] = "Henry"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: Object[][] objectArray = new Object[7][1], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [7, 1] Ct is: String[] stringArray = new String[8] isAssignment: false Array: new Object[7][1] Elements: []
lengths: [8] [7, 1]
Dimension: [7, 1] Ct is: Object[][] objectArray = new Object[7][1] isAssignment: false Array: new Object[7][1] Elements: []
lengths: [7, 1] [7, 1]
Their type are: class [[Ljava.lang.Object; Object[][]
statement is: objectArray[0] = ((Object[]) (stringArray)), class spoon.support.reflect.code.CtAssignmentImpl
Assigned : objectArray[0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl Object[] Assignment:((Object[]) (stringArray)) Ct is: objectArray[0] = ((Object[]) (stringArray))
target : objectArray class spoon.support.reflect.code.CtLiteralImpl
statement is: objectArray[1] = ((Object[]) (stringArray)), class spoon.support.reflect.code.CtAssignmentImpl
Assigned : objectArray[1] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl Object[] Assignment:((Object[]) (stringArray)) Ct is: objectArray[1] = ((Object[]) (stringArray))
target : objectArray class spoon.support.reflect.code.CtLiteralImpl
statement is: objectArray[2] = ((Object[]) (stringArray)), class spoon.support.reflect.code.CtAssignmentImpl
Assigned : objectArray[2] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl Object[] Assignment:((Object[]) (stringArray)) Ct is: objectArray[2] = ((Object[]) (stringArray))
target : objectArray class spoon.support.reflect.code.CtLiteralImpl
statement is: objectArray[3] = ((Object[]) (stringArray)), class spoon.support.reflect.code.CtAssignmentImpl
Assigned : objectArray[3] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl Object[] Assignment:((Object[]) (stringArray)) Ct is: objectArray[3] = ((Object[]) (stringArray))
target : objectArray class spoon.support.reflect.code.CtLiteralImpl
statement is: objectArray[4] = ((Object[]) (stringArray)), class spoon.support.reflect.code.CtAssignmentImpl
Assigned : objectArray[4] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl Object[] Assignment:((Object[]) (stringArray)) Ct is: objectArray[4] = ((Object[]) (stringArray))
target : objectArray class spoon.support.reflect.code.CtLiteralImpl
statement is: objectArray[5] = ((Object[]) (stringArray)), class spoon.support.reflect.code.CtAssignmentImpl
Assigned : objectArray[5] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl Object[] Assignment:((Object[]) (stringArray)) Ct is: objectArray[5] = ((Object[]) (stringArray))
target : objectArray class spoon.support.reflect.code.CtLiteralImpl
statement is: objectArray[6] = ((Object[]) (stringArray)), class spoon.support.reflect.code.CtAssignmentImpl
Assigned : objectArray[6] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl Object[] Assignment:((Object[]) (stringArray)) Ct is: objectArray[6] = ((Object[]) (stringArray))
target : objectArray class spoon.support.reflect.code.CtLiteralImpl
statement is: TableStockage tableStockage = new TableStockage(stringArray, objectArray), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: modifTableStockage.supprimerLigne(2), class spoon.support.reflect.code.CtInvocationImpl
invocation is: modifTableStockage.supprimerLigne(2) target is: modifTableStockage method is: supprimerLigne(int)
source statement: fr.unice.gfarce.interGraph.ModifTableStockage(Lfr/unice/gfarce/interGraph/TableStockage;)V callee: VariableReference: Statement 10, type fr.unice.gfarce.interGraph.ModifTableStockageindex is: 10
Matched Method is: supprimerLigne(I)Lfr/unice/gfarce/interGraph/TableStockage;
TestCase is: String[] stringArray = new String[8];
Object[][] objectArray = new Object[7][1];
objectArray[0] = (Object[]) stringArray;
objectArray[1] = (Object[]) stringArray;
objectArray[2] = (Object[]) stringArray;
objectArray[3] = (Object[]) stringArray;
objectArray[4] = (Object[]) stringArray;
objectArray[5] = (Object[]) stringArray;
objectArray[6] = (Object[]) stringArray;
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
int _int = 2;
modifTableStockage.supprimerLigne(_int);

statement is: org.evosuite.testcase.statements.ArrayStatement@ba2441b type is: class org.evosuite.testcase.statements.ArrayStatement return type class [Ljava.lang.String;
statement code is: String[] stringArray = new String[2]
statement is: org.evosuite.testcase.statements.ArrayStatement@6bfbf54c type is: class org.evosuite.testcase.statements.ArrayStatement return type class [[Ljava.lang.Object;
statement code is: Object[][] objectArray = new Object[1][3]
statement is: fr.unice.gfarce.interGraph.TableStockage([Ljava/lang/String;[[Ljava/lang/Object;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class fr.unice.gfarce.interGraph.TableStockage
statement code is: TableStockage tableStockage = new TableStockage(arg0, arg1)
statement is: fr.unice.gfarce.interGraph.ModifTableStockage(Lfr/unice/gfarce/interGraph/TableStockage;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class fr.unice.gfarce.interGraph.ModifTableStockage
statement code is: ModifTableStockage modifTableStockage = new ModifTableStockage(arg0)
statement is: supprimerLigne(I)Lfr/unice/gfarce/interGraph/TableStockage; type is: class org.evosuite.testcase.statements.MethodStatement return type class fr.unice.gfarce.interGraph.TableStockage
statement code is: TableStockage supprimerLigne = modifTableStockage.supprimerLigne(0)
test data is: String[] stringArray = new String[2];
Object[][] objectArray = new Object[1][3];
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
modifTableStockage.supprimerLigne(0);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        String[] stringArray = new String[]{ "apple", "banana" };
        Object[][] objectArray = new Object[][]{ new Object[]{ 1, 2.0, "red" }, new Object[]{ 3, 4.0, "yellow" } };
        TableStockage tableStockage = new TableStockage(stringArray, objectArray);
        ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
        modifTableStockage.supprimerLigne(0);
    }
}
statement is: String[] stringArray = new String[]{ "apple", "banana" }, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [] Ct is: String[] stringArray = new String[2] isAssignment: false Array: new String[]{ "apple", "banana" } Elements: ["apple", "banana"]
lengths: [2] []
Dimension: [] Ct is: Object[][] objectArray = new Object[1][3] isAssignment: false Array: new String[]{ "apple", "banana" } Elements: ["apple", "banana"]
lengths: [1, 3] []
statement is: Object[][] objectArray = new Object[][]{ new Object[]{ 1, 2.0, "red" }, new Object[]{ 3, 4.0, "yellow" } }, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [] Ct is: String[] stringArray = new String[2] isAssignment: false Array: new Object[][]{ new Object[]{ 1, 2.0, "red" }, new Object[]{ 3, 4.0, "yellow" } } Elements: [new Object[]{ 1, 2.0, "red" }, new Object[]{ 3, 4.0, "yellow" }]
lengths: [2] []
Dimension: [] Ct is: Object[][] objectArray = new Object[1][3] isAssignment: false Array: new Object[][]{ new Object[]{ 1, 2.0, "red" }, new Object[]{ 3, 4.0, "yellow" } } Elements: [new Object[]{ 1, 2.0, "red" }, new Object[]{ 3, 4.0, "yellow" }]
lengths: [1, 3] []
statement is: TableStockage tableStockage = new TableStockage(stringArray, objectArray), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: fr.unice.gfarce.interGraph.TableStockage([Ljava/lang/String;[[Ljava/lang/Object;)V
statement is: ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: fr.unice.gfarce.interGraph.ModifTableStockage(Lfr/unice/gfarce/interGraph/TableStockage;)V
statement is: modifTableStockage.supprimerLigne(0), class spoon.support.reflect.code.CtInvocationImpl
invocation is: modifTableStockage.supprimerLigne(0) target is: modifTableStockage method is: supprimerLigne(int)
statement is: org.evosuite.testcase.statements.ArrayStatement@abbe3259 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [Ljava.lang.String;
statement code is: String[] stringArray = new String[2]
statement is: org.evosuite.testcase.statements.ArrayStatement@78a7a868 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [[Ljava.lang.Object;
statement code is: Object[][] objectArray = new Object[1][3]
statement is: fr.unice.gfarce.interGraph.TableStockage([Ljava/lang/String;[[Ljava/lang/Object;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class fr.unice.gfarce.interGraph.TableStockage
statement code is: TableStockage tableStockage = new TableStockage(arg0, arg1)
statement is: fr.unice.gfarce.interGraph.ModifTableStockage(Lfr/unice/gfarce/interGraph/TableStockage;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class fr.unice.gfarce.interGraph.ModifTableStockage
statement code is: ModifTableStockage modifTableStockage = new ModifTableStockage(arg0)
statement is: separerColonne(I)Lfr/unice/gfarce/interGraph/TableStockage; type is: class org.evosuite.testcase.statements.MethodStatement return type class fr.unice.gfarce.interGraph.TableStockage
statement code is: TableStockage separerColonne = modifTableStockage.separerColonne(1)
test data is: String[] stringArray = new String[2];
Object[][] objectArray = new Object[1][3];
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
modifTableStockage.separerColonne(1);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        String[] stringArray = new String[]{ "Red", "Orange", "Yellow" };
        Object[][] objectArray = new Object[][]{ new Object[]{ 10, 2.5 }, new Object[]{ 30, 4.8 }, new Object[]{ 50, 6.7 } };
        TableStockage tableStockage = new TableStockage(stringArray, objectArray);
        ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
        modifTableStockage.separerColonne(1);
    }
}
statement is: String[] stringArray = new String[]{ "Red", "Orange", "Yellow" }, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [] Ct is: String[] stringArray = new String[2] isAssignment: false Array: new String[]{ "Red", "Orange", "Yellow" } Elements: ["Red", "Orange", "Yellow"]
lengths: [2] []
Dimension: [] Ct is: Object[][] objectArray = new Object[1][3] isAssignment: false Array: new String[]{ "Red", "Orange", "Yellow" } Elements: ["Red", "Orange", "Yellow"]
lengths: [1, 3] []
statement is: Object[][] objectArray = new Object[][]{ new Object[]{ 10, 2.5 }, new Object[]{ 30, 4.8 }, new Object[]{ 50, 6.7 } }, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [] Ct is: String[] stringArray = new String[2] isAssignment: false Array: new Object[][]{ new Object[]{ 10, 2.5 }, new Object[]{ 30, 4.8 }, new Object[]{ 50, 6.7 } } Elements: [new Object[]{ 10, 2.5 }, new Object[]{ 30, 4.8 }, new Object[]{ 50, 6.7 }]
lengths: [2] []
Dimension: [] Ct is: Object[][] objectArray = new Object[1][3] isAssignment: false Array: new Object[][]{ new Object[]{ 10, 2.5 }, new Object[]{ 30, 4.8 }, new Object[]{ 50, 6.7 } } Elements: [new Object[]{ 10, 2.5 }, new Object[]{ 30, 4.8 }, new Object[]{ 50, 6.7 }]
lengths: [1, 3] []
statement is: TableStockage tableStockage = new TableStockage(stringArray, objectArray), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: fr.unice.gfarce.interGraph.TableStockage([Ljava/lang/String;[[Ljava/lang/Object;)V
statement is: ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: fr.unice.gfarce.interGraph.ModifTableStockage(Lfr/unice/gfarce/interGraph/TableStockage;)V
statement is: modifTableStockage.separerColonne(1), class spoon.support.reflect.code.CtInvocationImpl
invocation is: modifTableStockage.separerColonne(1) target is: modifTableStockage method is: separerColonne(int)
statement is: org.evosuite.testcase.statements.ArrayStatement@747935a3 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [Ljava.lang.String;
statement code is: String[] stringArray = new String[1]
statement is: org.evosuite.testcase.statements.AssignmentStatement@ed5e2dce type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.String
statement code is: stringArray[0] = "S`7lsKgL!{.~V6~&"
statement is: org.evosuite.testcase.statements.ArrayStatement@57d2dab2 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [[Ljava.lang.Object;
statement code is: Object[][] objectArray = new Object[1][7]
statement is: org.evosuite.testcase.statements.AssignmentStatement@edbff4a0 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class [Ljava.lang.Object;
statement code is: objectArray[0] = (Object[]) stringArray
statement is: fr.unice.gfarce.interGraph.TableStockage([Ljava/lang/String;[[Ljava/lang/Object;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class fr.unice.gfarce.interGraph.TableStockage
statement code is: TableStockage tableStockage = new TableStockage(arg0, arg1)
statement is: fr.unice.gfarce.interGraph.ModifTableStockage(Lfr/unice/gfarce/interGraph/TableStockage;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class fr.unice.gfarce.interGraph.ModifTableStockage
statement code is: ModifTableStockage modifTableStockage = new ModifTableStockage(arg0)
statement is: separerColonne(I)Lfr/unice/gfarce/interGraph/TableStockage; type is: class org.evosuite.testcase.statements.MethodStatement return type class fr.unice.gfarce.interGraph.TableStockage
statement code is: TableStockage separerColonne = modifTableStockage.separerColonne(0)
test data is: String[] stringArray = new String[1];
stringArray[0] = "S`7lsKgL!{.~V6~&";
Object[][] objectArray = new Object[1][7];
objectArray[0] = (Object[]) stringArray;
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
modifTableStockage.separerColonne(0);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        String[] stringArray = new String[1];
        stringArray[0] = "S`7lsKgL!{.~V6~&";
        Object[][] objectArray = new Object[1][7];
        objectArray[0] = ((Object[]) (stringArray));
        TableStockage tableStockage = new TableStockage(stringArray, objectArray);
        ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
        modifTableStockage.separerColonne("name");
    }
}
statement is: String[] stringArray = new String[1], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [1] Ct is: String[] stringArray = new String[1] isAssignment: false Array: new String[1] Elements: []
lengths: [1] [1]
Their type are: class [Ljava.lang.String; String[]
statement is: stringArray[0] = "S`7lsKgL!{.~V6~&", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"S`7lsKgL!{.~V6~&" Ct is: stringArray[0] = "S`7lsKgL!{.~V6~&"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: Object[][] objectArray = new Object[1][7], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [1, 7] Ct is: String[] stringArray = new String[1] isAssignment: false Array: new Object[1][7] Elements: []
lengths: [1] [1, 7]
Dimension: [1, 7] Ct is: Object[][] objectArray = new Object[1][7] isAssignment: false Array: new Object[1][7] Elements: []
lengths: [1, 7] [1, 7]
Their type are: class [[Ljava.lang.Object; Object[][]
statement is: objectArray[0] = ((Object[]) (stringArray)), class spoon.support.reflect.code.CtAssignmentImpl
Assigned : objectArray[0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl Object[] Assignment:((Object[]) (stringArray)) Ct is: objectArray[0] = ((Object[]) (stringArray))
target : objectArray class spoon.support.reflect.code.CtLiteralImpl
TestCase Could not be added: org.evosuite.testcase.statements.AssignmentStatement@34ca6873
statement is: TableStockage tableStockage = new TableStockage(stringArray, objectArray), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: modifTableStockage.separerColonne("name"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: modifTableStockage.separerColonne("name") target is: modifTableStockage method is: separerColonne(java.lang.String)
source statement: fr.unice.gfarce.interGraph.ModifTableStockage(Lfr/unice/gfarce/interGraph/TableStockage;)V callee: VariableReference: Statement 5, type fr.unice.gfarce.interGraph.ModifTableStockageindex is: 5
Matched Method is: separerColonne(I)Lfr/unice/gfarce/interGraph/TableStockage;
TestCase is: String[] stringArray = new String[1];
String string = "S`7lsKgL!{.~V6~&";
stringArray[0] = string;
Object[][] objectArray = new Object[1][7];
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
String string = "name";
modifTableStockage.separerColonne((int) string);

statement is: org.evosuite.testcase.statements.ArrayStatement@d29e0f1e type is: class org.evosuite.testcase.statements.ArrayStatement return type class [Ljava.lang.String;
statement code is: String[] stringArray = new String[6]
statement is: org.evosuite.testcase.statements.AssignmentStatement@c9951927 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.String
statement code is: stringArray[2] = "lH0%@t7{vV1;tT B"
statement is: org.evosuite.testcase.statements.ArrayStatement@864d332c type is: class org.evosuite.testcase.statements.ArrayStatement return type class [[Ljava.lang.Object;
statement code is: Object[][] objectArray = new Object[9][3]
statement is: org.evosuite.testcase.statements.AssignmentStatement@c5a38582 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class [Ljava.lang.Object;
statement code is: objectArray[0] = (Object[]) stringArray
statement is: org.evosuite.testcase.statements.AssignmentStatement@e53765e5 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class [Ljava.lang.Object;
statement code is: objectArray[1] = (Object[]) stringArray
statement is: org.evosuite.testcase.statements.AssignmentStatement@ffa87c4 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class [Ljava.lang.Object;
statement code is: objectArray[2] = (Object[]) stringArray
statement is: org.evosuite.testcase.statements.AssignmentStatement@95fa70d1 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class [Ljava.lang.Object;
statement code is: objectArray[3] = (Object[]) stringArray
statement is: org.evosuite.testcase.statements.AssignmentStatement@2fa9aced type is: class org.evosuite.testcase.statements.AssignmentStatement return type class [Ljava.lang.Object;
statement code is: objectArray[4] = (Object[]) stringArray
statement is: org.evosuite.testcase.statements.ArrayStatement@2a80d3c type is: class org.evosuite.testcase.statements.ArrayStatement return type class [Ljava.lang.Object;
statement code is: Object[] objectArray = new Object[6]
statement is: org.evosuite.testcase.statements.AssignmentStatement@d9f8a91d type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.Object
statement code is: objectArray[2] = (Object) ""
statement is: org.evosuite.testcase.statements.AssignmentStatement@e535d7f type is: class org.evosuite.testcase.statements.AssignmentStatement return type class [Ljava.lang.Object;
statement code is: objectArray[5] = objectArray
statement is: org.evosuite.testcase.statements.AssignmentStatement@5a09ed42 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class [Ljava.lang.Object;
statement code is: objectArray[6] = (Object[]) stringArray
statement is: org.evosuite.testcase.statements.AssignmentStatement@3811c689 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class [Ljava.lang.Object;
statement code is: objectArray[7] = (Object[]) stringArray
statement is: org.evosuite.testcase.statements.AssignmentStatement@678b0abb type is: class org.evosuite.testcase.statements.AssignmentStatement return type class [Ljava.lang.Object;
statement code is: objectArray[8] = (Object[]) stringArray
statement is: fr.unice.gfarce.interGraph.TableStockage([Ljava/lang/String;[[Ljava/lang/Object;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class fr.unice.gfarce.interGraph.TableStockage
statement code is: TableStockage tableStockage = new TableStockage(arg0, arg1)
statement is: fr.unice.gfarce.interGraph.ModifTableStockage(Lfr/unice/gfarce/interGraph/TableStockage;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class fr.unice.gfarce.interGraph.ModifTableStockage
statement code is: ModifTableStockage modifTableStockage = new ModifTableStockage(arg0)
statement is: separerColonne(I)Lfr/unice/gfarce/interGraph/TableStockage; type is: class org.evosuite.testcase.statements.MethodStatement return type class fr.unice.gfarce.interGraph.TableStockage
statement code is: TableStockage separerColonne = modifTableStockage.separerColonne(2)
test data is: String[] stringArray = new String[6];
stringArray[2] = "lH0%@t7{vV1;tT B";
Object[][] objectArray = new Object[9][3];
objectArray[0] = (Object[]) stringArray;
objectArray[1] = (Object[]) stringArray;
objectArray[2] = (Object[]) stringArray;
objectArray[3] = (Object[]) stringArray;
objectArray[4] = (Object[]) stringArray;
Object[] objectArray = new Object[6];
objectArray[2] = (Object) "";
objectArray[5] = objectArray;
objectArray[6] = (Object[]) stringArray;
objectArray[7] = (Object[]) stringArray;
objectArray[8] = (Object[]) stringArray;
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
modifTableStockage.separerColonne(2);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        String[] stringArray = new String[6];
        stringArray[2] = "lH0%@t7{vV1;tT B";
        Object[][] objectArray = new Object[9][3];
        objectArray[0] = ((Object[]) (stringArray));
        objectArray[1] = ((Object[]) (stringArray));
        objectArray[2] = ((Object[]) (stringArray));
        objectArray[3] = ((Object[]) (stringArray));
        objectArray[4] = ((Object[]) (stringArray));
        Object[] objectArray = new Object[6];
        objectArray[2] = ((Object) ("Hello World"));
        objectArray[5] = objectArray;
        objectArray[6] = ((Object[]) (stringArray));
        objectArray[7] = ((Object[]) (stringArray));
        objectArray[8] = ((Object[]) (stringArray));
        TableStockage tableStockage = new TableStockage(stringArray, objectArray);
        ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
        modifTableStockage.separerColonne(2);
    }
}
statement is: String[] stringArray = new String[6], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [6] Ct is: String[] stringArray = new String[6] isAssignment: false Array: new String[6] Elements: []
lengths: [6] [6]
Their type are: class [Ljava.lang.String; String[]
statement is: stringArray[2] = "lH0%@t7{vV1;tT B", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[2] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"lH0%@t7{vV1;tT B" Ct is: stringArray[2] = "lH0%@t7{vV1;tT B"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: Object[][] objectArray = new Object[9][3], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [9, 3] Ct is: String[] stringArray = new String[6] isAssignment: false Array: new Object[9][3] Elements: []
lengths: [6] [9, 3]
Dimension: [9, 3] Ct is: Object[][] objectArray = new Object[9][3] isAssignment: false Array: new Object[9][3] Elements: []
lengths: [9, 3] [9, 3]
Their type are: class [[Ljava.lang.Object; Object[][]
statement is: objectArray[0] = ((Object[]) (stringArray)), class spoon.support.reflect.code.CtAssignmentImpl
Assigned : objectArray[0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl Object[] Assignment:((Object[]) (stringArray)) Ct is: objectArray[0] = ((Object[]) (stringArray))
target : objectArray class spoon.support.reflect.code.CtLiteralImpl
TestCase Could not be added: org.evosuite.testcase.statements.AssignmentStatement@d71df5b2
statement is: objectArray[1] = ((Object[]) (stringArray)), class spoon.support.reflect.code.CtAssignmentImpl
Assigned : objectArray[1] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl Object[] Assignment:((Object[]) (stringArray)) Ct is: objectArray[1] = ((Object[]) (stringArray))
target : objectArray class spoon.support.reflect.code.CtLiteralImpl
TestCase Could not be added: org.evosuite.testcase.statements.AssignmentStatement@bb26bd61
statement is: objectArray[2] = ((Object[]) (stringArray)), class spoon.support.reflect.code.CtAssignmentImpl
Assigned : objectArray[2] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl Object[] Assignment:((Object[]) (stringArray)) Ct is: objectArray[2] = ((Object[]) (stringArray))
target : objectArray class spoon.support.reflect.code.CtLiteralImpl
TestCase Could not be added: org.evosuite.testcase.statements.AssignmentStatement@29efac8a
statement is: objectArray[3] = ((Object[]) (stringArray)), class spoon.support.reflect.code.CtAssignmentImpl
Assigned : objectArray[3] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl Object[] Assignment:((Object[]) (stringArray)) Ct is: objectArray[3] = ((Object[]) (stringArray))
target : objectArray class spoon.support.reflect.code.CtLiteralImpl
TestCase Could not be added: org.evosuite.testcase.statements.AssignmentStatement@b0803876
statement is: objectArray[4] = ((Object[]) (stringArray)), class spoon.support.reflect.code.CtAssignmentImpl
Assigned : objectArray[4] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl Object[] Assignment:((Object[]) (stringArray)) Ct is: objectArray[4] = ((Object[]) (stringArray))
target : objectArray class spoon.support.reflect.code.CtLiteralImpl
TestCase Could not be added: org.evosuite.testcase.statements.AssignmentStatement@b6fd80ad
statement is: Object[] objectArray = new Object[6], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [6] Ct is: String[] stringArray = new String[6] isAssignment: false Array: new Object[6] Elements: []
lengths: [6] [6]
Their type are: class [Ljava.lang.String; Object[]
Dimension: [6] Ct is: Object[][] objectArray = new Object[9][3] isAssignment: false Array: new Object[6] Elements: []
lengths: [9, 3] [6]
Dimension: [6] Ct is: Object[] objectArray = new Object[6] isAssignment: false Array: new Object[6] Elements: []
lengths: [6] [6]
Their type are: class [Ljava.lang.Object; Object[]
statement is: objectArray[2] = ((Object) ("Hello World")), class spoon.support.reflect.code.CtAssignmentImpl
Assigned : objectArray[2] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl Object Assignment:((Object) ("Hello World")) Ct is: objectArray[2] = ((Object) ("Hello World"))
target : objectArray class spoon.support.reflect.code.CtLiteralImpl
TestCase Could not be added: org.evosuite.testcase.statements.AssignmentStatement@f9ab55ab
statement is: objectArray[5] = objectArray, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : objectArray[5] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl Object Assignment:objectArray Ct is: objectArray[5] = objectArray
target : objectArray class spoon.support.reflect.code.CtLiteralImpl
TestCase Could not be added: org.evosuite.testcase.statements.AssignmentStatement@3e617ffc
statement is: objectArray[6] = ((Object[]) (stringArray)), class spoon.support.reflect.code.CtAssignmentImpl
Assigned : objectArray[6] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl Object Assignment:((Object[]) (stringArray)) Ct is: objectArray[6] = ((Object[]) (stringArray))
target : objectArray class spoon.support.reflect.code.CtLiteralImpl
TestCase Could not be added: org.evosuite.testcase.statements.AssignmentStatement@df3474f2
statement is: objectArray[7] = ((Object[]) (stringArray)), class spoon.support.reflect.code.CtAssignmentImpl
Assigned : objectArray[7] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl Object Assignment:((Object[]) (stringArray)) Ct is: objectArray[7] = ((Object[]) (stringArray))
target : objectArray class spoon.support.reflect.code.CtLiteralImpl
TestCase Could not be added: org.evosuite.testcase.statements.AssignmentStatement@df3474f2
statement is: objectArray[8] = ((Object[]) (stringArray)), class spoon.support.reflect.code.CtAssignmentImpl
Assigned : objectArray[8] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl Object Assignment:((Object[]) (stringArray)) Ct is: objectArray[8] = ((Object[]) (stringArray))
target : objectArray class spoon.support.reflect.code.CtLiteralImpl
TestCase Could not be added: org.evosuite.testcase.statements.AssignmentStatement@df3474f2
statement is: TableStockage tableStockage = new TableStockage(stringArray, objectArray), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: modifTableStockage.separerColonne(2), class spoon.support.reflect.code.CtInvocationImpl
invocation is: modifTableStockage.separerColonne(2) target is: modifTableStockage method is: separerColonne(int)
source statement: fr.unice.gfarce.interGraph.ModifTableStockage(Lfr/unice/gfarce/interGraph/TableStockage;)V callee: VariableReference: Statement 15, type fr.unice.gfarce.interGraph.ModifTableStockageindex is: 7
Matched Method is: separerColonne(I)Lfr/unice/gfarce/interGraph/TableStockage;
TestCase Could not be added: separerColonne(I)Lfr/unice/gfarce/interGraph/TableStockage;
* this is vulnerable: String string = "Hello World"
* this is vulnerable: int _int = 2
TestCase is: String[] stringArray = new String[6];
String string = "lH0%@t7{vV1;tT B";
stringArray[2] = string;
Object[][] objectArray = new Object[9][3];
Object[] objectArray = new Object[6];
String string = "Hello World";
TableStockage tableStockage = new TableStockage(stringArray, (Object[][]) objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
int _int = 2;

statement is: org.evosuite.testcase.statements.ArrayStatement@10ec50c2 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [Ljava.lang.String;
statement code is: String[] stringArray = new String[2]
statement is: org.evosuite.testcase.statements.AssignmentStatement@4e666602 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.String
statement code is: stringArray[0] = "6k"
statement is: org.evosuite.testcase.statements.ArrayStatement@d441a107 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [[Ljava.lang.Object;
statement code is: Object[][] objectArray = new Object[5][6]
statement is: org.evosuite.testcase.statements.ArrayStatement@8c3c61c1 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [Ljava.lang.Object;
statement code is: Object[] objectArray = new Object[2]
statement is: org.evosuite.testcase.statements.AssignmentStatement@63b27ee type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.Object
statement code is: objectArray[0] = (Object) "Envoyer E-Mail a:"
statement is: org.evosuite.testcase.statements.AssignmentStatement@3c4c6cec type is: class org.evosuite.testcase.statements.AssignmentStatement return type class [Ljava.lang.Object;
statement code is: objectArray[0] = objectArray
statement is: org.evosuite.testcase.statements.AssignmentStatement@bf82de32 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class [Ljava.lang.Object;
statement code is: objectArray[1] = (Object[]) stringArray
statement is: fr.unice.gfarce.interGraph.TableStockage([Ljava/lang/String;[[Ljava/lang/Object;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class fr.unice.gfarce.interGraph.TableStockage
statement code is: TableStockage tableStockage = new TableStockage(arg0, arg1)
statement is: fr.unice.gfarce.interGraph.ModifTableStockage(Lfr/unice/gfarce/interGraph/TableStockage;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class fr.unice.gfarce.interGraph.ModifTableStockage
statement code is: ModifTableStockage modifTableStockage = new ModifTableStockage(arg0)
statement is: separerColonne(I)Lfr/unice/gfarce/interGraph/TableStockage; type is: class org.evosuite.testcase.statements.MethodStatement return type class fr.unice.gfarce.interGraph.TableStockage
statement code is: TableStockage separerColonne = modifTableStockage.separerColonne(0)
test data is: String[] stringArray = new String[2];
stringArray[0] = "6k";
Object[][] objectArray = new Object[5][6];
Object[] objectArray = new Object[2];
objectArray[0] = (Object) "Envoyer E-Mail a:";
objectArray[0] = objectArray;
objectArray[1] = (Object[]) stringArray;
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
modifTableStockage.separerColonne(0);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        String[] stringArray = new String[2];
        stringArray[0] = "6k";
        Object[][] objectArray = new Object[5][6];
        Object[] objectArray = new Object[2];
        objectArray[0] = ((Object) ("Envoyer E-Mail a:"));
        objectArray[1] = ((Object[]) (stringArray));
        TableStockage tableStockage = new TableStockage(stringArray, objectArray);
        ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
        modifTableStockage.separerColonne(0);
    }
}
statement is: String[] stringArray = new String[2], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [2] Ct is: String[] stringArray = new String[2] isAssignment: false Array: new String[2] Elements: []
lengths: [2] [2]
Their type are: class [Ljava.lang.String; String[]
statement is: stringArray[0] = "6k", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"6k" Ct is: stringArray[0] = "6k"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: Object[][] objectArray = new Object[5][6], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [5, 6] Ct is: String[] stringArray = new String[2] isAssignment: false Array: new Object[5][6] Elements: []
lengths: [2] [5, 6]
Dimension: [5, 6] Ct is: Object[][] objectArray = new Object[5][6] isAssignment: false Array: new Object[5][6] Elements: []
lengths: [5, 6] [5, 6]
Their type are: class [[Ljava.lang.Object; Object[][]
statement is: Object[] objectArray = new Object[2], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [2] Ct is: String[] stringArray = new String[2] isAssignment: false Array: new Object[2] Elements: []
lengths: [2] [2]
Their type are: class [Ljava.lang.String; Object[]
Dimension: [2] Ct is: Object[][] objectArray = new Object[5][6] isAssignment: false Array: new Object[2] Elements: []
lengths: [5, 6] [2]
Dimension: [2] Ct is: Object[] objectArray = new Object[2] isAssignment: false Array: new Object[2] Elements: []
lengths: [2] [2]
Their type are: class [Ljava.lang.Object; Object[]
statement is: objectArray[0] = ((Object) ("Envoyer E-Mail a:")), class spoon.support.reflect.code.CtAssignmentImpl
Assigned : objectArray[0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl Object Assignment:((Object) ("Envoyer E-Mail a:")) Ct is: objectArray[0] = ((Object) ("Envoyer E-Mail a:"))
target : objectArray class spoon.support.reflect.code.CtLiteralImpl
statement is: objectArray[1] = ((Object[]) (stringArray)), class spoon.support.reflect.code.CtAssignmentImpl
Assigned : objectArray[1] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl Object Assignment:((Object[]) (stringArray)) Ct is: objectArray[1] = ((Object[]) (stringArray))
target : objectArray class spoon.support.reflect.code.CtLiteralImpl
statement is: TableStockage tableStockage = new TableStockage(stringArray, objectArray), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: modifTableStockage.separerColonne(0), class spoon.support.reflect.code.CtInvocationImpl
invocation is: modifTableStockage.separerColonne(0) target is: modifTableStockage method is: separerColonne(int)
source statement: fr.unice.gfarce.interGraph.ModifTableStockage(Lfr/unice/gfarce/interGraph/TableStockage;)V callee: VariableReference: Statement 8, type fr.unice.gfarce.interGraph.ModifTableStockageindex is: 9
Matched Method is: separerColonne(I)Lfr/unice/gfarce/interGraph/TableStockage;
TestCase is: String[] stringArray = new String[2];
String string = "6k";
stringArray[0] = string;
Object[][] objectArray = new Object[5][6];
Object[] objectArray = new Object[2];
String string = "Envoyer E-Mail a:";
objectArray[0] = (Object[]) string;
objectArray[0] = (Object[]) stringArray;
TableStockage tableStockage = new TableStockage(stringArray, (Object[][]) objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
int _int = 0;
((ModifTableStockage) tableStockage).separerColonne(_int);

statement is: fr.unice.gfarce.interGraph.TableStockage()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class fr.unice.gfarce.interGraph.TableStockage
statement code is: TableStockage tableStockage = new TableStockage()
statement is: fr.unice.gfarce.interGraph.ModifTableStockage(Lfr/unice/gfarce/interGraph/TableStockage;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class fr.unice.gfarce.interGraph.ModifTableStockage
statement code is: ModifTableStockage modifTableStockage = new ModifTableStockage(arg0)
statement is: fusionnerColonnes(I)Lfr/unice/gfarce/interGraph/TableStockage; type is: class org.evosuite.testcase.statements.MethodStatement return type class fr.unice.gfarce.interGraph.TableStockage
statement code is: TableStockage fusionnerColonnes = modifTableStockage.fusionnerColonnes((-1))
test data is: TableStockage tableStockage = new TableStockage();
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
modifTableStockage.fusionnerColonnes((-1));

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        TableStockage tableStockage = new TableStockage();
        ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
        modifTableStockage.fusionnerColonnes(-1);
    }
}
statement is: TableStockage tableStockage = new TableStockage(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: modifTableStockage.fusionnerColonnes(-1), class spoon.support.reflect.code.CtInvocationImpl
invocation is: modifTableStockage.fusionnerColonnes(-1) target is: modifTableStockage method is: fusionnerColonnes(int)
source statement: fr.unice.gfarce.interGraph.ModifTableStockage(Lfr/unice/gfarce/interGraph/TableStockage;)V callee: VariableReference: Statement 1, type fr.unice.gfarce.interGraph.ModifTableStockageindex is: 1
Matched Method is: fusionnerColonnes(I)Lfr/unice/gfarce/interGraph/TableStockage;
i 0 Parameters size() 0 Num of Method Parameters: 1
TestCase is: TableStockage tableStockage = new TableStockage();
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
int _int = null;
modifTableStockage.fusionnerColonnes(_int);

statement is: org.evosuite.testcase.statements.ArrayStatement@678d5757 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [Ljava.lang.String;
statement code is: String[] stringArray = new String[6]
statement is: org.evosuite.testcase.statements.ArrayStatement@d9d566ff type is: class org.evosuite.testcase.statements.ArrayStatement return type class [[Ljava.lang.Object;
statement code is: Object[][] objectArray = new Object[2][6]
statement is: fr.unice.gfarce.interGraph.TableStockage([Ljava/lang/String;[[Ljava/lang/Object;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class fr.unice.gfarce.interGraph.TableStockage
statement code is: TableStockage tableStockage = new TableStockage(arg0, arg1)
statement is: fr.unice.gfarce.interGraph.ModifTableStockage(Lfr/unice/gfarce/interGraph/TableStockage;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class fr.unice.gfarce.interGraph.ModifTableStockage
statement code is: ModifTableStockage modifTableStockage = new ModifTableStockage(arg0)
statement is: Class<Boolean> class = Boolean.class type is: class org.evosuite.testcase.statements.ClassPrimitiveStatement return type java.lang.Class<java.lang.Boolean>
statement code is: Class<Boolean> class = Boolean.class
statement is: setColumnClass(ILjava/lang/Class;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: tableStockage.setColumnClass(2, arg1)
statement is: fusionnerColonnes(I)Lfr/unice/gfarce/interGraph/TableStockage; type is: class org.evosuite.testcase.statements.MethodStatement return type class fr.unice.gfarce.interGraph.TableStockage
statement code is: TableStockage fusionnerColonnes = modifTableStockage.fusionnerColonnes(2)
test data is: String[] stringArray = new String[6];
Object[][] objectArray = new Object[2][6];
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
Class<Boolean> class = Boolean.class;
tableStockage.setColumnClass(2, class);
modifTableStockage.fusionnerColonnes(2);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        String[] stringArray = new String[]{ "Alice", "Bob", "Charlie" };
        Object[][] objectArray = new Object[][]{ new Object[]{ "10", "20", "30" }, new Object[]{ "40", "50", "60" } };
        TableStockage tableStockage = new TableStockage(stringArray, objectArray);
        ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
        Class<Boolean> $missing$ = Boolean.class;
        tableStockage.setColumnClass(2, $missing$);
        modifTableStockage.fusionnerColonnes(2);
    }
}
statement is: String[] stringArray = new String[]{ "Alice", "Bob", "Charlie" }, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [] Ct is: String[] stringArray = new String[6] isAssignment: false Array: new String[]{ "Alice", "Bob", "Charlie" } Elements: ["Alice", "Bob", "Charlie"]
lengths: [6] []
Dimension: [] Ct is: Object[][] objectArray = new Object[2][6] isAssignment: false Array: new String[]{ "Alice", "Bob", "Charlie" } Elements: ["Alice", "Bob", "Charlie"]
lengths: [2, 6] []
statement is: Object[][] objectArray = new Object[][]{ new Object[]{ "10", "20", "30" }, new Object[]{ "40", "50", "60" } }, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [] Ct is: String[] stringArray = new String[6] isAssignment: false Array: new Object[][]{ new Object[]{ "10", "20", "30" }, new Object[]{ "40", "50", "60" } } Elements: [new Object[]{ "10", "20", "30" }, new Object[]{ "40", "50", "60" }]
lengths: [6] []
Dimension: [] Ct is: Object[][] objectArray = new Object[2][6] isAssignment: false Array: new Object[][]{ new Object[]{ "10", "20", "30" }, new Object[]{ "40", "50", "60" } } Elements: [new Object[]{ "10", "20", "30" }, new Object[]{ "40", "50", "60" }]
lengths: [2, 6] []
statement is: TableStockage tableStockage = new TableStockage(stringArray, objectArray), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: fr.unice.gfarce.interGraph.TableStockage([Ljava/lang/String;[[Ljava/lang/Object;)V
statement is: ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: fr.unice.gfarce.interGraph.ModifTableStockage(Lfr/unice/gfarce/interGraph/TableStockage;)V
statement is: Class<Boolean> $missing$ = Boolean.class, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: Boolean.class is Boolean
statement is: tableStockage.setColumnClass(2, $missing$), class spoon.support.reflect.code.CtInvocationImpl
invocation is: tableStockage.setColumnClass(2, $missing$) target is: tableStockage method is: setColumnClass(int,java.lang.Class)
statement is: modifTableStockage.fusionnerColonnes(2), class spoon.support.reflect.code.CtInvocationImpl
invocation is: modifTableStockage.fusionnerColonnes(2) target is: modifTableStockage method is: fusionnerColonnes(int)
statement is: org.evosuite.testcase.statements.ArrayStatement@b377615a type is: class org.evosuite.testcase.statements.ArrayStatement return type class [Ljava.lang.String;
statement code is: String[] stringArray = new String[4]
statement is: org.evosuite.testcase.statements.AssignmentStatement@7952ac7 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.String
statement code is: stringArray[0] = "S`7lsKgL!{.~V6~&"
statement is: org.evosuite.testcase.statements.AssignmentStatement@f222128d type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.String
statement code is: stringArray[1] = "9uE.4%^Y"
statement is: org.evosuite.testcase.statements.ArrayStatement@d4aee4aa type is: class org.evosuite.testcase.statements.ArrayStatement return type class [[Ljava.lang.Object;
statement code is: Object[][] objectArray = new Object[1][7]
statement is: org.evosuite.testcase.statements.AssignmentStatement@bbd0aff5 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class [Ljava.lang.Object;
statement code is: objectArray[0] = (Object[]) stringArray
statement is: fr.unice.gfarce.interGraph.TableStockage([Ljava/lang/String;[[Ljava/lang/Object;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class fr.unice.gfarce.interGraph.TableStockage
statement code is: TableStockage tableStockage = new TableStockage(arg0, arg1)
statement is: fr.unice.gfarce.interGraph.ModifTableStockage(Lfr/unice/gfarce/interGraph/TableStockage;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class fr.unice.gfarce.interGraph.ModifTableStockage
statement code is: ModifTableStockage modifTableStockage = new ModifTableStockage(arg0)
statement is: fusionnerColonnes(I)Lfr/unice/gfarce/interGraph/TableStockage; type is: class org.evosuite.testcase.statements.MethodStatement return type class fr.unice.gfarce.interGraph.TableStockage
statement code is: TableStockage fusionnerColonnes = modifTableStockage.fusionnerColonnes(0)
test data is: String[] stringArray = new String[4];
stringArray[0] = "S`7lsKgL!{.~V6~&";
stringArray[1] = "9uE.4%^Y";
Object[][] objectArray = new Object[1][7];
objectArray[0] = (Object[]) stringArray;
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
modifTableStockage.fusionnerColonnes(0);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        String[] stringArray = new String[4];
        stringArray[0] = "S`7lsKgL!{.~V6~&";// Changed the first value in the array to be more descriptive.

        stringArray[1] = "9uE.4%^Y";
        Object[][] objectArray = new Object[1][7];
        objectArray[0] = ((Object[]) (stringArray));
        TableStockage tableStockage = new TableStockage(stringArray, objectArray);
        ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
        modifTableStockage.fusionnerColonnes(0);
    }
}
statement is: String[] stringArray = new String[4], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [4] Ct is: String[] stringArray = new String[4] isAssignment: false Array: new String[4] Elements: []
lengths: [4] [4]
Their type are: class [Ljava.lang.String; String[]
statement is: stringArray[0] = "S`7lsKgL!{.~V6~&"// Changed the first value in the array to be more descriptive.
, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"S`7lsKgL!{.~V6~&" Ct is: stringArray[0] = "S`7lsKgL!{.~V6~&"// Changed the first value in the array to be more descriptive.

target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[1] = "9uE.4%^Y", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[1] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"9uE.4%^Y" Ct is: stringArray[1] = "9uE.4%^Y"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: Object[][] objectArray = new Object[1][7], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [1, 7] Ct is: String[] stringArray = new String[4] isAssignment: false Array: new Object[1][7] Elements: []
lengths: [4] [1, 7]
Dimension: [1, 7] Ct is: Object[][] objectArray = new Object[1][7] isAssignment: false Array: new Object[1][7] Elements: []
lengths: [1, 7] [1, 7]
Their type are: class [[Ljava.lang.Object; Object[][]
statement is: objectArray[0] = ((Object[]) (stringArray)), class spoon.support.reflect.code.CtAssignmentImpl
Assigned : objectArray[0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl Object[] Assignment:((Object[]) (stringArray)) Ct is: objectArray[0] = ((Object[]) (stringArray))
target : objectArray class spoon.support.reflect.code.CtLiteralImpl
TestCase Could not be added: org.evosuite.testcase.statements.AssignmentStatement@f99829f3
statement is: TableStockage tableStockage = new TableStockage(stringArray, objectArray), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: modifTableStockage.fusionnerColonnes(0), class spoon.support.reflect.code.CtInvocationImpl
invocation is: modifTableStockage.fusionnerColonnes(0) target is: modifTableStockage method is: fusionnerColonnes(int)
source statement: fr.unice.gfarce.interGraph.ModifTableStockage(Lfr/unice/gfarce/interGraph/TableStockage;)V callee: VariableReference: Statement 6, type fr.unice.gfarce.interGraph.ModifTableStockageindex is: 7
Matched Method is: fusionnerColonnes(I)Lfr/unice/gfarce/interGraph/TableStockage;
TestCase is: String[] stringArray = new String[4];
String string = "S`7lsKgL!{.~V6~&";
stringArray[0] = string;
String string = "9uE.4%^Y";
stringArray[1] = string;
Object[][] objectArray = new Object[1][7];
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
int _int = 0;
((ModifTableStockage) tableStockage).fusionnerColonnes(_int);

statement is: org.evosuite.testcase.statements.ArrayStatement@b1046487 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [Ljava.lang.String;
statement code is: String[] stringArray = new String[6]
statement is: org.evosuite.testcase.statements.AssignmentStatement@e0612aad type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.String
statement code is: stringArray[2] = ""
statement is: org.evosuite.testcase.statements.ArrayStatement@dbc1dd3f type is: class org.evosuite.testcase.statements.ArrayStatement return type class [[Ljava.lang.Object;
statement code is: Object[][] objectArray = new Object[2][6]
statement is: fr.unice.gfarce.interGraph.TableStockage([Ljava/lang/String;[[Ljava/lang/Object;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class fr.unice.gfarce.interGraph.TableStockage
statement code is: TableStockage tableStockage = new TableStockage(arg0, arg1)
statement is: fr.unice.gfarce.interGraph.ModifTableStockage(Lfr/unice/gfarce/interGraph/TableStockage;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class fr.unice.gfarce.interGraph.ModifTableStockage
statement code is: ModifTableStockage modifTableStockage = new ModifTableStockage(arg0)
statement is: fusionnerColonnes(I)Lfr/unice/gfarce/interGraph/TableStockage; type is: class org.evosuite.testcase.statements.MethodStatement return type class fr.unice.gfarce.interGraph.TableStockage
statement code is: TableStockage fusionnerColonnes = modifTableStockage.fusionnerColonnes(2)
test data is: String[] stringArray = new String[6];
stringArray[2] = "";
Object[][] objectArray = new Object[2][6];
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
modifTableStockage.fusionnerColonnes(2);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        String[] stringArray = new String[]{ "", "", "apple", "banana", "orange", "cherry" };
        Object[][] objectArray = new Object[][]{ new Object[]{ "apple", 1 }, new Object[]{ "banana", 2 }, new Object[]{ "orange", 3 }, new Object[]{ "cherry", 4 } };
        TableStockage tableStockage = new TableStockage(stringArray, objectArray);
        ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
        modifTableStockage.fusionnerColonnes(2);
    }
}
statement is: String[] stringArray = new String[]{ "", "", "apple", "banana", "orange", "cherry" }, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [] Ct is: String[] stringArray = new String[6] isAssignment: false Array: new String[]{ "", "", "apple", "banana", "orange", "cherry" } Elements: ["", "", "apple", "banana", "orange", "cherry"]
lengths: [6] []
Dimension: [] Ct is: Object[][] objectArray = new Object[2][6] isAssignment: false Array: new String[]{ "", "", "apple", "banana", "orange", "cherry" } Elements: ["", "", "apple", "banana", "orange", "cherry"]
lengths: [2, 6] []
statement is: Object[][] objectArray = new Object[][]{ new Object[]{ "apple", 1 }, new Object[]{ "banana", 2 }, new Object[]{ "orange", 3 }, new Object[]{ "cherry", 4 } }, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [] Ct is: String[] stringArray = new String[6] isAssignment: false Array: new Object[][]{ new Object[]{ "apple", 1 }, new Object[]{ "banana", 2 }, new Object[]{ "orange", 3 }, new Object[]{ "cherry", 4 } } Elements: [new Object[]{ "apple", 1 }, new Object[]{ "banana", 2 }, new Object[]{ "orange", 3 }, new Object[]{ "cherry", 4 }]
lengths: [6] []
Dimension: [] Ct is: Object[][] objectArray = new Object[2][6] isAssignment: false Array: new Object[][]{ new Object[]{ "apple", 1 }, new Object[]{ "banana", 2 }, new Object[]{ "orange", 3 }, new Object[]{ "cherry", 4 } } Elements: [new Object[]{ "apple", 1 }, new Object[]{ "banana", 2 }, new Object[]{ "orange", 3 }, new Object[]{ "cherry", 4 }]
lengths: [2, 6] []
statement is: TableStockage tableStockage = new TableStockage(stringArray, objectArray), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: fr.unice.gfarce.interGraph.TableStockage([Ljava/lang/String;[[Ljava/lang/Object;)V
statement is: ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: fr.unice.gfarce.interGraph.ModifTableStockage(Lfr/unice/gfarce/interGraph/TableStockage;)V
statement is: modifTableStockage.fusionnerColonnes(2), class spoon.support.reflect.code.CtInvocationImpl
invocation is: modifTableStockage.fusionnerColonnes(2) target is: modifTableStockage method is: fusionnerColonnes(int)
statement is: fr.unice.gfarce.interGraph.TableStockage()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class fr.unice.gfarce.interGraph.TableStockage
statement code is: TableStockage tableStockage = new TableStockage()
statement is: fr.unice.gfarce.interGraph.ModifTableStockage(Lfr/unice/gfarce/interGraph/TableStockage;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class fr.unice.gfarce.interGraph.ModifTableStockage
statement code is: ModifTableStockage modifTableStockage = new ModifTableStockage(arg0)
statement is: selectMail()Lfr/unice/gfarce/interGraph/TableStockage; type is: class org.evosuite.testcase.statements.MethodStatement return type class fr.unice.gfarce.interGraph.TableStockage
statement code is: TableStockage selectMail = modifTableStockage.selectMail()
test data is: TableStockage tableStockage = new TableStockage();
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
modifTableStockage.selectMail();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        TableStockage tableStockage = new TableStockage();
        ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
        modifTableStockage.selectMail();
        // Test data should be more descriptive and representative of the situation being tested
        int id = 1;
        String name = "John Doe";
        String email = "johndoe@example.com";
        modifTableStockage.add(id, name, email);
    }
}
statement is: TableStockage tableStockage = new TableStockage(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: modifTableStockage.selectMail(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: modifTableStockage.selectMail() target is: modifTableStockage method is: selectMail()
source statement: fr.unice.gfarce.interGraph.ModifTableStockage(Lfr/unice/gfarce/interGraph/TableStockage;)V callee: VariableReference: Statement 1, type fr.unice.gfarce.interGraph.ModifTableStockageindex is: 1
Matched Method is: selectMail()Lfr/unice/gfarce/interGraph/TableStockage;
statement is: // Test data should be more descriptive and representative of the situation being tested
int id = 1, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: String name = "John Doe", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: String email = "johndoe@example.com", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: modifTableStockage.add(id, name, email), class spoon.support.reflect.code.CtInvocationImpl
invocation is: modifTableStockage.add(id, name, email) target is: modifTableStockage method is: add(int,java.lang.String,java.lang.String)
* this is vulnerable: int _int = 1
* this is vulnerable: String string = "John Doe"
* this is vulnerable: String string = "johndoe@example.com"
TestCase is: TableStockage tableStockage = new TableStockage();
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
modifTableStockage.selectMail();
int _int = 1;
String string = "John Doe";
String string = "johndoe@example.com";

statement is: org.evosuite.testcase.statements.ArrayStatement@5e21ddbc type is: class org.evosuite.testcase.statements.ArrayStatement return type class [Ljava.lang.String;
statement code is: String[] stringArray = new String[1]
statement is: org.evosuite.testcase.statements.AssignmentStatement@b4cf3f3b type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.String
statement code is: stringArray[0] = "Envoyer E-Mail a:"
statement is: org.evosuite.testcase.statements.ArrayStatement@b5eab5cc type is: class org.evosuite.testcase.statements.ArrayStatement return type class [[Ljava.lang.Object;
statement code is: Object[][] objectArray = new Object[0][2]
statement is: fr.unice.gfarce.interGraph.TableStockage([Ljava/lang/String;[[Ljava/lang/Object;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class fr.unice.gfarce.interGraph.TableStockage
statement code is: TableStockage tableStockage = new TableStockage(arg0, arg1)
statement is: fr.unice.gfarce.interGraph.ModifTableStockage(Lfr/unice/gfarce/interGraph/TableStockage;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class fr.unice.gfarce.interGraph.ModifTableStockage
statement code is: ModifTableStockage modifTableStockage = new ModifTableStockage(arg0)
statement is: selectMail()Lfr/unice/gfarce/interGraph/TableStockage; type is: class org.evosuite.testcase.statements.MethodStatement return type class fr.unice.gfarce.interGraph.TableStockage
statement code is: TableStockage selectMail = modifTableStockage.selectMail()
test data is: String[] stringArray = new String[1];
stringArray[0] = "Envoyer E-Mail a:";
Object[][] objectArray = new Object[0][2];
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
modifTableStockage.selectMail();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        String[] stringArray = new String[1];
        stringArray[0] = "Envoyer E-Mail a:";
        Object[][] objectArray = new Object[3][2];
        objectArray[0][0] = 1;
        objectArray[0][1] = "test@gmail.com";
        objectArray[1][0] = 2;
        objectArray[1][1] = "test@hotmail.com";
        objectArray[2][0] = 3;
        objectArray[2][1] = "test@outlook.com";
        TableStockage tableStockage = new TableStockage(stringArray, objectArray);
        ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
        modifTableStockage.selectMail();
    }
}
statement is: String[] stringArray = new String[1], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [1] Ct is: String[] stringArray = new String[1] isAssignment: false Array: new String[1] Elements: []
lengths: [1] [1]
Their type are: class [Ljava.lang.String; String[]
statement is: stringArray[0] = "Envoyer E-Mail a:", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"Envoyer E-Mail a:" Ct is: stringArray[0] = "Envoyer E-Mail a:"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: Object[][] objectArray = new Object[3][2], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [3, 2] Ct is: String[] stringArray = new String[1] isAssignment: false Array: new Object[3][2] Elements: []
lengths: [1] [3, 2]
Dimension: [3, 2] Ct is: Object[][] objectArray = new Object[0][2] isAssignment: false Array: new Object[3][2] Elements: []
lengths: [0, 2] [3, 2]
Their type are: class [[Ljava.lang.Object; Object[][]
statement is: objectArray[0][0] = 1, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : objectArray[0][0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl Object Assignment:1 Ct is: objectArray[0][0] = 1
target : objectArray[0] class spoon.support.reflect.code.CtLiteralImpl
statement is: objectArray[0][1] = "test@gmail.com", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : objectArray[0][1] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl Object Assignment:"test@gmail.com" Ct is: objectArray[0][1] = "test@gmail.com"
target : objectArray[0] class spoon.support.reflect.code.CtLiteralImpl
statement is: objectArray[1][0] = 2, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : objectArray[1][0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl Object Assignment:2 Ct is: objectArray[1][0] = 2
target : objectArray[1] class spoon.support.reflect.code.CtLiteralImpl
statement is: objectArray[1][1] = "test@hotmail.com", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : objectArray[1][1] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl Object Assignment:"test@hotmail.com" Ct is: objectArray[1][1] = "test@hotmail.com"
target : objectArray[1] class spoon.support.reflect.code.CtLiteralImpl
statement is: objectArray[2][0] = 3, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : objectArray[2][0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl Object Assignment:3 Ct is: objectArray[2][0] = 3
target : objectArray[2] class spoon.support.reflect.code.CtLiteralImpl
statement is: objectArray[2][1] = "test@outlook.com", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : objectArray[2][1] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl Object Assignment:"test@outlook.com" Ct is: objectArray[2][1] = "test@outlook.com"
target : objectArray[2] class spoon.support.reflect.code.CtLiteralImpl
statement is: TableStockage tableStockage = new TableStockage(stringArray, objectArray), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: modifTableStockage.selectMail(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: modifTableStockage.selectMail() target is: modifTableStockage method is: selectMail()
source statement: fr.unice.gfarce.interGraph.ModifTableStockage(Lfr/unice/gfarce/interGraph/TableStockage;)V callee: VariableReference: Statement 4, type fr.unice.gfarce.interGraph.ModifTableStockageindex is: 5
Matched Method is: selectMail()Lfr/unice/gfarce/interGraph/TableStockage;
TestCase is: String[] stringArray = new String[1];
String string = "Envoyer E-Mail a:";
stringArray[0] = string;
Object[][] objectArray = new Object[0][2];
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
((ModifTableStockage) tableStockage).selectMail();

statement is: org.evosuite.testcase.statements.ArrayStatement@33cefbaf type is: class org.evosuite.testcase.statements.ArrayStatement return type class [Ljava.lang.String;
statement code is: String[] stringArray = new String[6]
statement is: org.evosuite.testcase.statements.AssignmentStatement@44923e01 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.String
statement code is: stringArray[0] = ""
statement is: org.evosuite.testcase.statements.ArrayStatement@3c2a5b14 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [[Ljava.lang.Object;
statement code is: Object[][] objectArray = new Object[0][7]
statement is: fr.unice.gfarce.interGraph.TableStockage([Ljava/lang/String;[[Ljava/lang/Object;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class fr.unice.gfarce.interGraph.TableStockage
statement code is: TableStockage tableStockage = new TableStockage(arg0, arg1)
statement is: fr.unice.gfarce.interGraph.ModifTableStockage(Lfr/unice/gfarce/interGraph/TableStockage;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class fr.unice.gfarce.interGraph.ModifTableStockage
statement code is: ModifTableStockage modifTableStockage = new ModifTableStockage(arg0)
statement is: selectMail()Lfr/unice/gfarce/interGraph/TableStockage; type is: class org.evosuite.testcase.statements.MethodStatement return type class fr.unice.gfarce.interGraph.TableStockage
statement code is: TableStockage selectMail = modifTableStockage.selectMail()
test data is: String[] stringArray = new String[6];
stringArray[0] = "";
Object[][] objectArray = new Object[0][7];
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
modifTableStockage.selectMail();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        String[] stringArray = new String[6];
        stringArray[0] = "John Doe";
        Object[][] objectArray = new Object[1][7];
        objectArray[0][0] = "john.doe@example.com";
        TableStockage tableStockage = new TableStockage(stringArray, objectArray);
        ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
        modifTableStockage.selectMail();
    }
}
statement is: String[] stringArray = new String[6], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [6] Ct is: String[] stringArray = new String[6] isAssignment: false Array: new String[6] Elements: []
lengths: [6] [6]
Their type are: class [Ljava.lang.String; String[]
statement is: stringArray[0] = "John Doe", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"John Doe" Ct is: stringArray[0] = "John Doe"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: Object[][] objectArray = new Object[1][7], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [1, 7] Ct is: String[] stringArray = new String[6] isAssignment: false Array: new Object[1][7] Elements: []
lengths: [6] [1, 7]
Dimension: [1, 7] Ct is: Object[][] objectArray = new Object[0][7] isAssignment: false Array: new Object[1][7] Elements: []
lengths: [0, 7] [1, 7]
Their type are: class [[Ljava.lang.Object; Object[][]
statement is: objectArray[0][0] = "john.doe@example.com", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : objectArray[0][0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl Object Assignment:"john.doe@example.com" Ct is: objectArray[0][0] = "john.doe@example.com"
target : objectArray[0] class spoon.support.reflect.code.CtLiteralImpl
statement is: TableStockage tableStockage = new TableStockage(stringArray, objectArray), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: modifTableStockage.selectMail(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: modifTableStockage.selectMail() target is: modifTableStockage method is: selectMail()
source statement: fr.unice.gfarce.interGraph.ModifTableStockage(Lfr/unice/gfarce/interGraph/TableStockage;)V callee: VariableReference: Statement 4, type fr.unice.gfarce.interGraph.ModifTableStockageindex is: 5
Matched Method is: selectMail()Lfr/unice/gfarce/interGraph/TableStockage;
TestCase is: String[] stringArray = new String[6];
String string = "John Doe";
stringArray[0] = string;
Object[][] objectArray = new Object[0][7];
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
((ModifTableStockage) tableStockage).selectMail();

statement is: org.evosuite.testcase.statements.ArrayStatement@2a78dba5 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [Ljava.lang.String;
statement code is: String[] stringArray = new String[1]
statement is: org.evosuite.testcase.statements.AssignmentStatement@4541819d type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.String
statement code is: stringArray[0] = "Envoyer E-Mail a:"
statement is: org.evosuite.testcase.statements.ArrayStatement@c0ecd416 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [[Ljava.lang.Object;
statement code is: Object[][] objectArray = new Object[2][4]
statement is: fr.unice.gfarce.interGraph.TableStockage([Ljava/lang/String;[[Ljava/lang/Object;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class fr.unice.gfarce.interGraph.TableStockage
statement code is: TableStockage tableStockage = new TableStockage(arg0, arg1)
statement is: fr.unice.gfarce.interGraph.ModifTableStockage(Lfr/unice/gfarce/interGraph/TableStockage;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class fr.unice.gfarce.interGraph.ModifTableStockage
statement code is: ModifTableStockage modifTableStockage = new ModifTableStockage(arg0)
statement is: selectMail()Lfr/unice/gfarce/interGraph/TableStockage; type is: class org.evosuite.testcase.statements.MethodStatement return type class fr.unice.gfarce.interGraph.TableStockage
statement code is: TableStockage selectMail = modifTableStockage.selectMail()
test data is: String[] stringArray = new String[1];
stringArray[0] = "Envoyer E-Mail a:";
Object[][] objectArray = new Object[2][4];
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
modifTableStockage.selectMail();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        String[] stringArray = new String[]{ "Envoyer E-Mail a:", "Obtenir E-Mails de:", "Filtrer par:", "Trier par:" };
        Object[][] objectArray = new Object[][]{ new Object[]{ "Alice", "Bob", "Carol" }, new Object[]{ 1, 2, 3 }, new Object[]{ true, false, null } };
        TableStockage tableStockage = new TableStockage(stringArray, objectArray);
        ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
        modifTableStockage.selectMail();
    }
}
statement is: String[] stringArray = new String[]{ "Envoyer E-Mail a:", "Obtenir E-Mails de:", "Filtrer par:", "Trier par:" }, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [] Ct is: String[] stringArray = new String[1] isAssignment: false Array: new String[]{ "Envoyer E-Mail a:", "Obtenir E-Mails de:", "Filtrer par:", "Trier par:" } Elements: ["Envoyer E-Mail a:", "Obtenir E-Mails de:", "Filtrer par:", "Trier par:"]
lengths: [1] []
Dimension: [] Ct is: Object[][] objectArray = new Object[2][4] isAssignment: false Array: new String[]{ "Envoyer E-Mail a:", "Obtenir E-Mails de:", "Filtrer par:", "Trier par:" } Elements: ["Envoyer E-Mail a:", "Obtenir E-Mails de:", "Filtrer par:", "Trier par:"]
lengths: [2, 4] []
statement is: Object[][] objectArray = new Object[][]{ new Object[]{ "Alice", "Bob", "Carol" }, new Object[]{ 1, 2, 3 }, new Object[]{ true, false, null } }, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [] Ct is: String[] stringArray = new String[1] isAssignment: false Array: new Object[][]{ new Object[]{ "Alice", "Bob", "Carol" }, new Object[]{ 1, 2, 3 }, new Object[]{ true, false, null } } Elements: [new Object[]{ "Alice", "Bob", "Carol" }, new Object[]{ 1, 2, 3 }, new Object[]{ true, false, null }]
lengths: [1] []
Dimension: [] Ct is: Object[][] objectArray = new Object[2][4] isAssignment: false Array: new Object[][]{ new Object[]{ "Alice", "Bob", "Carol" }, new Object[]{ 1, 2, 3 }, new Object[]{ true, false, null } } Elements: [new Object[]{ "Alice", "Bob", "Carol" }, new Object[]{ 1, 2, 3 }, new Object[]{ true, false, null }]
lengths: [2, 4] []
statement is: TableStockage tableStockage = new TableStockage(stringArray, objectArray), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: fr.unice.gfarce.interGraph.TableStockage([Ljava/lang/String;[[Ljava/lang/Object;)V
statement is: ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: fr.unice.gfarce.interGraph.ModifTableStockage(Lfr/unice/gfarce/interGraph/TableStockage;)V
statement is: modifTableStockage.selectMail(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: modifTableStockage.selectMail() target is: modifTableStockage method is: selectMail()
statement is: org.evosuite.testcase.statements.ArrayStatement@66146318 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [Ljava.lang.String;
statement code is: String[] stringArray = new String[5]
statement is: org.evosuite.testcase.statements.ArrayStatement@4feff856 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [[Ljava.lang.Object;
statement code is: Object[][] objectArray = new Object[5][7]
statement is: fr.unice.gfarce.interGraph.TableStockage([Ljava/lang/String;[[Ljava/lang/Object;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class fr.unice.gfarce.interGraph.TableStockage
statement code is: TableStockage tableStockage = new TableStockage(arg0, arg1)
statement is: fr.unice.gfarce.interGraph.ModifTableStockage(Lfr/unice/gfarce/interGraph/TableStockage;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class fr.unice.gfarce.interGraph.ModifTableStockage
statement code is: ModifTableStockage modifTableStockage = new ModifTableStockage(arg0)
statement is: Class<Object> class = Object.class type is: class org.evosuite.testcase.statements.ClassPrimitiveStatement return type java.lang.Class<java.lang.Object>
statement code is: Class<Object> class = Object.class
statement is: ajouterColonne(Ljava/lang/String;Ljava/lang/Class;)Lfr/unice/gfarce/interGraph/TableStockage; type is: class org.evosuite.testcase.statements.MethodStatement return type class fr.unice.gfarce.interGraph.TableStockage
statement code is: TableStockage ajouterColonne = modifTableStockage.ajouterColonne("hu@A+fsM=/BVa)", arg1)
test data is: String[] stringArray = new String[5];
Object[][] objectArray = new Object[5][7];
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
Class<Object> class = Object.class;
modifTableStockage.ajouterColonne("hu@A+fsM=/BVa)", class);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        String[] stringArray = new String[]{ "apple", "banana", "orange", "grape", "pineapple" };
        Object[][] objectArray = new Object[][]{ new Object[]{ 1, 2.5, "a" }, new Object[]{ 2, 3.7, "b" }, new Object[]{ 3, 4.9, "c" }, new Object[]{ 4, 6.2, "d" }, new Object[]{ 5, 8.4, "e" } };
        TableStockage tableStockage = new TableStockage(stringArray, objectArray);
        ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
        Class<Object> $missing$ = Object.class;
        modifTableStockage.ajouterColonne("hu@A+fsM=/BVa)", $missing$);
    }
}
statement is: String[] stringArray = new String[]{ "apple", "banana", "orange", "grape", "pineapple" }, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [] Ct is: String[] stringArray = new String[5] isAssignment: false Array: new String[]{ "apple", "banana", "orange", "grape", "pineapple" } Elements: ["apple", "banana", "orange", "grape", "pineapple"]
lengths: [5] []
Dimension: [] Ct is: Object[][] objectArray = new Object[5][7] isAssignment: false Array: new String[]{ "apple", "banana", "orange", "grape", "pineapple" } Elements: ["apple", "banana", "orange", "grape", "pineapple"]
lengths: [5, 7] []
statement is: Object[][] objectArray = new Object[][]{ new Object[]{ 1, 2.5, "a" }, new Object[]{ 2, 3.7, "b" }, new Object[]{ 3, 4.9, "c" }, new Object[]{ 4, 6.2, "d" }, new Object[]{ 5, 8.4, "e" } }, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [] Ct is: String[] stringArray = new String[5] isAssignment: false Array: new Object[][]{ new Object[]{ 1, 2.5, "a" }, new Object[]{ 2, 3.7, "b" }, new Object[]{ 3, 4.9, "c" }, new Object[]{ 4, 6.2, "d" }, new Object[]{ 5, 8.4, "e" } } Elements: [new Object[]{ 1, 2.5, "a" }, new Object[]{ 2, 3.7, "b" }, new Object[]{ 3, 4.9, "c" }, new Object[]{ 4, 6.2, "d" }, new Object[]{ 5, 8.4, "e" }]
lengths: [5] []
Dimension: [] Ct is: Object[][] objectArray = new Object[5][7] isAssignment: false Array: new Object[][]{ new Object[]{ 1, 2.5, "a" }, new Object[]{ 2, 3.7, "b" }, new Object[]{ 3, 4.9, "c" }, new Object[]{ 4, 6.2, "d" }, new Object[]{ 5, 8.4, "e" } } Elements: [new Object[]{ 1, 2.5, "a" }, new Object[]{ 2, 3.7, "b" }, new Object[]{ 3, 4.9, "c" }, new Object[]{ 4, 6.2, "d" }, new Object[]{ 5, 8.4, "e" }]
lengths: [5, 7] []
statement is: TableStockage tableStockage = new TableStockage(stringArray, objectArray), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: fr.unice.gfarce.interGraph.TableStockage([Ljava/lang/String;[[Ljava/lang/Object;)V
statement is: ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: fr.unice.gfarce.interGraph.ModifTableStockage(Lfr/unice/gfarce/interGraph/TableStockage;)V
statement is: Class<Object> $missing$ = Object.class, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: Object.class is Object
statement is: modifTableStockage.ajouterColonne("hu@A+fsM=/BVa)", $missing$), class spoon.support.reflect.code.CtInvocationImpl
invocation is: modifTableStockage.ajouterColonne("hu@A+fsM=/BVa)", $missing$) target is: modifTableStockage method is: ajouterColonne(java.lang.String,java.lang.Class)
statement is: fr.unice.gfarce.interGraph.TableStockage()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class fr.unice.gfarce.interGraph.TableStockage
statement code is: TableStockage tableStockage = new TableStockage()
statement is: fr.unice.gfarce.interGraph.ModifTableStockage(Lfr/unice/gfarce/interGraph/TableStockage;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class fr.unice.gfarce.interGraph.ModifTableStockage
statement code is: ModifTableStockage modifTableStockage = new ModifTableStockage(arg0)
statement is: Class<Boolean> class = Boolean.class type is: class org.evosuite.testcase.statements.ClassPrimitiveStatement return type java.lang.Class<java.lang.Boolean>
statement code is: Class<Boolean> class = Boolean.class
statement is: ajouterColonne(Ljava/lang/String;Ljava/lang/Class;)Lfr/unice/gfarce/interGraph/TableStockage; type is: class org.evosuite.testcase.statements.MethodStatement return type class fr.unice.gfarce.interGraph.TableStockage
statement code is: TableStockage ajouterColonne = modifTableStockage.ajouterColonne("fr.unice.gfarce.interGraph.TableStockage", arg1)
test data is: TableStockage tableStockage = new TableStockage();
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
Class<Boolean> class = Boolean.class;
modifTableStockage.ajouterColonne("fr.unice.gfarce.interGraph.TableStockage", class);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Improved test data
        TableStockage tableStockage = new TableStockage("table_name", "db_name");
        ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
        Class<Boolean> $missing$ = Boolean.class;
        modifTableStockage.ajouterColonne("fr.unice.gfarce.interGraph.TableStockage", $missing$);
        // Description: Ajoute une colonne de type boolean dans la table "table_name" de la base de données "db_name"
        // Inputs:
        // - tableStockage: instance de TableStockage avec nom de table et nom de base de données
        // - class: classe de type boolean
        // Output:
        // - modifTableStockage: modification de la table avec ajout d'une colonne de type boolean }}
    }
}
statement is: // Improved test data
TableStockage tableStockage = new TableStockage("table_name", "db_name"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: fr.unice.gfarce.interGraph.ModifTableStockage(Lfr/unice/gfarce/interGraph/TableStockage;)V
statement is: Class<Boolean> $missing$ = Boolean.class, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: Boolean.class is Boolean
statement is: modifTableStockage.ajouterColonne("fr.unice.gfarce.interGraph.TableStockage", $missing$), class spoon.support.reflect.code.CtInvocationImpl
invocation is: modifTableStockage.ajouterColonne("fr.unice.gfarce.interGraph.TableStockage", $missing$) target is: modifTableStockage method is: ajouterColonne(java.lang.String,java.lang.Class)
statement is: // Description: Ajoute une colonne de type boolean dans la table "table_name" de la base de données "db_name", class spoon.support.reflect.code.CtCommentImpl
statement is: // Inputs:, class spoon.support.reflect.code.CtCommentImpl
statement is: // - tableStockage: instance de TableStockage avec nom de table et nom de base de données, class spoon.support.reflect.code.CtCommentImpl
statement is: // - class: classe de type boolean, class spoon.support.reflect.code.CtCommentImpl
statement is: // Output:, class spoon.support.reflect.code.CtCommentImpl
statement is: // - modifTableStockage: modification de la table avec ajout d'une colonne de type boolean }}, class spoon.support.reflect.code.CtCommentImpl
statement is: org.evosuite.testcase.statements.ArrayStatement@9e679133 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [[Ljava.lang.Object;
statement code is: Object[][] objectArray = new Object[5][2]
statement is: org.evosuite.testcase.statements.ArrayStatement@72195492 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [Ljava.lang.String;
statement code is: String[] stringArray = new String[0]
statement is: fr.unice.gfarce.interGraph.TableStockage([Ljava/lang/String;[[Ljava/lang/Object;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class fr.unice.gfarce.interGraph.TableStockage
statement code is: TableStockage tableStockage = new TableStockage(arg0, arg1)
statement is: fr.unice.gfarce.interGraph.ModifTableStockage(Lfr/unice/gfarce/interGraph/TableStockage;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class fr.unice.gfarce.interGraph.ModifTableStockage
statement code is: ModifTableStockage modifTableStockage = new ModifTableStockage(arg0)
statement is: supprimerLigne(I)Lfr/unice/gfarce/interGraph/TableStockage; type is: class org.evosuite.testcase.statements.MethodStatement return type class fr.unice.gfarce.interGraph.TableStockage
statement code is: TableStockage supprimerLigne = modifTableStockage.supprimerLigne((-1))
test data is: Object[][] objectArray = new Object[5][2];
String[] stringArray = new String[0];
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
modifTableStockage.supprimerLigne((-1));

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Object[][] objectArray = new Object[5][2];
        objectArray[0] = new Object[]{ "Apple", 10 };
        objectArray[1] = new Object[]{ "Orange", 8 };
        objectArray[2] = new Object[]{ "Banana", 6 };
        objectArray[3] = new Object[]{ "Mango", 4 };
        objectArray[4] = new Object[]{ "Pear", 3 };
        String[] stringArray = new String[0];
        TableStockage tableStockage = new TableStockage(stringArray, objectArray);
        ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
        modifTableStockage.supprimerLigne(-1);
    }
}
statement is: Object[][] objectArray = new Object[5][2], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [5, 2] Ct is: Object[][] objectArray = new Object[5][2] isAssignment: false Array: new Object[5][2] Elements: []
lengths: [5, 2] [5, 2]
Their type are: class [[Ljava.lang.Object; Object[][]
statement is: objectArray[0] = new Object[]{ "Apple", 10 }, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : objectArray[0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl Object[] Assignment:new Object[]{ "Apple", 10 } Ct is: objectArray[0] = new Object[]{ "Apple", 10 }
target : objectArray class spoon.support.reflect.code.CtLiteralImpl
statement is: objectArray[1] = new Object[]{ "Orange", 8 }, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : objectArray[1] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl Object[] Assignment:new Object[]{ "Orange", 8 } Ct is: objectArray[1] = new Object[]{ "Orange", 8 }
target : objectArray class spoon.support.reflect.code.CtLiteralImpl
statement is: objectArray[2] = new Object[]{ "Banana", 6 }, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : objectArray[2] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl Object[] Assignment:new Object[]{ "Banana", 6 } Ct is: objectArray[2] = new Object[]{ "Banana", 6 }
target : objectArray class spoon.support.reflect.code.CtLiteralImpl
statement is: objectArray[3] = new Object[]{ "Mango", 4 }, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : objectArray[3] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl Object[] Assignment:new Object[]{ "Mango", 4 } Ct is: objectArray[3] = new Object[]{ "Mango", 4 }
target : objectArray class spoon.support.reflect.code.CtLiteralImpl
statement is: objectArray[4] = new Object[]{ "Pear", 3 }, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : objectArray[4] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl Object[] Assignment:new Object[]{ "Pear", 3 } Ct is: objectArray[4] = new Object[]{ "Pear", 3 }
target : objectArray class spoon.support.reflect.code.CtLiteralImpl
statement is: String[] stringArray = new String[0], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [0] Ct is: Object[][] objectArray = new Object[5][2] isAssignment: false Array: new String[0] Elements: []
lengths: [5, 2] [0]
Dimension: [0] Ct is: String[] stringArray = new String[0] isAssignment: false Array: new String[0] Elements: []
lengths: [0] [0]
Their type are: class [Ljava.lang.String; String[]
statement is: TableStockage tableStockage = new TableStockage(stringArray, objectArray), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: modifTableStockage.supprimerLigne(-1), class spoon.support.reflect.code.CtInvocationImpl
invocation is: modifTableStockage.supprimerLigne(-1) target is: modifTableStockage method is: supprimerLigne(int)
source statement: fr.unice.gfarce.interGraph.ModifTableStockage(Lfr/unice/gfarce/interGraph/TableStockage;)V callee: VariableReference: Statement 3, type fr.unice.gfarce.interGraph.ModifTableStockageindex is: 3
Matched Method is: supprimerLigne(I)Lfr/unice/gfarce/interGraph/TableStockage;
i 0 Parameters size() 0 Num of Method Parameters: 1
TestCase is: Object[][] objectArray = new Object[5][2];
String[] stringArray = new String[0];
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
int _int = null;
modifTableStockage.supprimerLigne(_int);

* test suite isTestSuite: 40
Test 0: 
TableStockage tableStockage = new TableStockage();
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
modifTableStockage.colonneMail();
modifTableStockage.supprimerColonne(0);
Test 1: 
Object[][] objectArray = new Object[2][7];
String[] stringArray = new String[1];
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
modifTableStockage.colonneMail();
Test 2: 
TableStockage tableStockage = new TableStockage();
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
// Undeclared exception!
try { 
  modifTableStockage.ajouterLigne();
  fail("Expecting exception: HeadlessException");

} catch(HeadlessException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("java.awt.GraphicsEnvironment", e);
}

Test 3: 
String[] stringArray = new String[9];
stringArray[0] = "";
Object[][] objectArray = new Object[4][7];
objectArray[0] = (Object[]) stringArray;
objectArray[1] = (Object[]) stringArray;
objectArray[2] = (Object[]) stringArray;
objectArray[3] = (Object[]) stringArray;
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
modifTableStockage.ajouterLigne();
Test 4: 
TableStockage tableStockage = new TableStockage(57, 57);
Class<Object> class = Object.class;
tableStockage.setColumnClass(0, class);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
modifTableStockage.ajouterLigne();
Test 5: 
String[] stringArray = new String[6];
Object[][] objectArray = new Object[5][6];
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
modifTableStockage.supprimerColonne(2);
Test 6: 
Object[][] objectArray = new Object[2][7];
String[] stringArray = new String[1];
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
modifTableStockage.supprimerColonne(0);
Test 7: 
String[] stringArray = new String[8];
Object[][] objectArray = new Object[7][1];
objectArray[0] = (Object[]) stringArray;
objectArray[1] = (Object[]) stringArray;
objectArray[2] = (Object[]) stringArray;
objectArray[3] = (Object[]) stringArray;
objectArray[4] = (Object[]) stringArray;
objectArray[5] = (Object[]) stringArray;
objectArray[6] = (Object[]) stringArray;
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
modifTableStockage.supprimerLigne(2);
Test 8: 
String[] stringArray = new String[2];
Object[][] objectArray = new Object[1][3];
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
modifTableStockage.supprimerLigne(0);
Test 9: 
String[] stringArray = new String[2];
Object[][] objectArray = new Object[1][3];
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
// Undeclared exception!
try { 
  modifTableStockage.separerColonne(1);
  fail("Expecting exception: HeadlessException");

} catch(HeadlessException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("java.awt.GraphicsEnvironment", e);
}

Test 10: 
String[] stringArray = new String[1];
stringArray[0] = "S`7lsKgL!{.~V6~&";
Object[][] objectArray = new Object[1][7];
objectArray[0] = (Object[]) stringArray;
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
// Undeclared exception!
try { 
  modifTableStockage.separerColonne(0);
  fail("Expecting exception: HeadlessException");

} catch(HeadlessException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("java.awt.GraphicsEnvironment", e);
}

Test 11: 
String[] stringArray = new String[6];
stringArray[2] = "lH0%@t7{vV1;tT B";
Object[][] objectArray = new Object[9][3];
objectArray[0] = (Object[]) stringArray;
objectArray[1] = (Object[]) stringArray;
objectArray[2] = (Object[]) stringArray;
objectArray[3] = (Object[]) stringArray;
objectArray[4] = (Object[]) stringArray;
Object[] objectArray = new Object[6];
objectArray[2] = (Object) "";
objectArray[5] = objectArray;
objectArray[6] = (Object[]) stringArray;
objectArray[7] = (Object[]) stringArray;
objectArray[8] = (Object[]) stringArray;
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
modifTableStockage.separerColonne(2);
Test 12: 
String[] stringArray = new String[2];
stringArray[0] = "6k";
Object[][] objectArray = new Object[5][6];
Object[] objectArray = new Object[2];
objectArray[0] = (Object) "Envoyer E-Mail a:";
objectArray[0] = objectArray;
objectArray[1] = (Object[]) stringArray;
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
// Undeclared exception!
try { 
  modifTableStockage.separerColonne(0);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
}

Test 13: 
TableStockage tableStockage = new TableStockage();
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
// Undeclared exception!
try { 
  modifTableStockage.fusionnerColonnes((-1));
  fail("Expecting exception: HeadlessException");

} catch(HeadlessException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("java.awt.GraphicsEnvironment", e);
}

Test 14: 
String[] stringArray = new String[6];
Object[][] objectArray = new Object[2][6];
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
Class<Boolean> class = Boolean.class;
tableStockage.setColumnClass(2, class);
// Undeclared exception!
try { 
  modifTableStockage.fusionnerColonnes(2);
  fail("Expecting exception: HeadlessException");

} catch(HeadlessException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("java.awt.GraphicsEnvironment", e);
}

Test 15: 
String[] stringArray = new String[4];
stringArray[0] = "S`7lsKgL!{.~V6~&";
stringArray[1] = "9uE.4%^Y";
Object[][] objectArray = new Object[1][7];
objectArray[0] = (Object[]) stringArray;
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
modifTableStockage.fusionnerColonnes(0);
Test 16: 
String[] stringArray = new String[6];
stringArray[2] = "";
Object[][] objectArray = new Object[2][6];
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
// Undeclared exception!
try { 
  modifTableStockage.fusionnerColonnes(2);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.evosuite.runtime.System", e);
}

Test 17: 
TableStockage tableStockage = new TableStockage();
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
// Undeclared exception!
try { 
  modifTableStockage.selectMail();
  fail("Expecting exception: HeadlessException");

} catch(HeadlessException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("java.awt.GraphicsEnvironment", e);
}

Test 18: 
String[] stringArray = new String[1];
stringArray[0] = "Envoyer E-Mail a:";
Object[][] objectArray = new Object[0][2];
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
modifTableStockage.selectMail();
Test 19: 
String[] stringArray = new String[6];
stringArray[0] = "";
Object[][] objectArray = new Object[0][7];
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
// Undeclared exception!
try { 
  modifTableStockage.selectMail();
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
}

Test 20: 
String[] stringArray = new String[1];
stringArray[0] = "Envoyer E-Mail a:";
Object[][] objectArray = new Object[2][4];
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
// Undeclared exception!
try { 
  modifTableStockage.selectMail();
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 21: 
String[] stringArray = new String[5];
Object[][] objectArray = new Object[5][7];
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
Class<Object> class = Object.class;
modifTableStockage.ajouterColonne("hu@A+fsM=/BVa)", class);
Test 22: 
TableStockage tableStockage = new TableStockage();
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
Class<Boolean> class = Boolean.class;
modifTableStockage.ajouterColonne("fr.unice.gfarce.interGraph.TableStockage", class);
Test 23: 
Object[][] objectArray = new Object[5][2];
String[] stringArray = new String[0];
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
modifTableStockage.supprimerLigne((-1));
Test 24: 

Test 25: 
Object[][] objectArray = new Object[2][7];
String[] stringArray = new String[1];
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
modifTableStockage.colonneMail();

Test 26: 
TableStockage tableStockage = new TableStockage();
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);

Test 27: 
String[] stringArray = new String[9];
stringArray[0] = "Lorem ipsum dolor sit amet, consectetur adipiscing elit.";
Object[][] objectArray = new Object[4][7];
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);

Test 28: 
TableStockage tableStockage = new TableStockage(57, 57);
int _int = 0;
((TableStockage)57).setColumnClass(0, (Class<?>) null);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
((ModifTableStockage) _int).ajouterLigne();

Test 29: 
Object[][] objectArray = new Object[2][7];
String[] stringArray = new String[1];
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
modifTableStockage.supprimerColonne(0);

Test 30: 
String[] stringArray = new String[8];
Object[][] objectArray = new Object[7][1];
objectArray[0] = (Object[]) stringArray;
objectArray[1] = (Object[]) stringArray;
objectArray[2] = (Object[]) stringArray;
objectArray[3] = (Object[]) stringArray;
objectArray[4] = (Object[]) stringArray;
objectArray[5] = (Object[]) stringArray;
objectArray[6] = (Object[]) stringArray;
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
modifTableStockage.supprimerLigne(2);

Test 31: 
String[] stringArray = new String[1];
stringArray[0] = "S`7lsKgL!{.~V6~&";
Object[][] objectArray = new Object[1][7];
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
modifTableStockage.separerColonne((int) "name");

Test 32: 
String[] stringArray = new String[6];
stringArray[2] = "lH0%@t7{vV1;tT B";
Object[][] objectArray = new Object[9][3];
Object[] objectArray = new Object[6];
TableStockage tableStockage = new TableStockage(stringArray, (Object[][]) objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);

Test 33: 
String[] stringArray = new String[2];
stringArray[0] = "6k";
Object[][] objectArray = new Object[5][6];
Object[] objectArray = new Object[2];
objectArray[0] = (Object[]) "Envoyer E-Mail a:";
objectArray[0] = (Object[]) stringArray;
TableStockage tableStockage = new TableStockage(stringArray, (Object[][]) objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
int _int = 0;
((ModifTableStockage) tableStockage).separerColonne(_int);

Test 34: 
TableStockage tableStockage = new TableStockage();
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
modifTableStockage.fusionnerColonnes((int) (Integer) null);

Test 35: 
String[] stringArray = new String[4];
stringArray[0] = "S`7lsKgL!{.~V6~&";
stringArray[1] = "9uE.4%^Y";
Object[][] objectArray = new Object[1][7];
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
((ModifTableStockage) tableStockage).fusionnerColonnes(0);

Test 36: 
TableStockage tableStockage = new TableStockage();
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
modifTableStockage.selectMail();

Test 37: 
String[] stringArray = new String[1];
stringArray[0] = "Envoyer E-Mail a:";
Object[][] objectArray = new Object[0][2];
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
((ModifTableStockage) tableStockage).selectMail();

Test 38: 
String[] stringArray = new String[6];
stringArray[0] = "John Doe";
Object[][] objectArray = new Object[0][7];
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
((ModifTableStockage) tableStockage).selectMail();

Test 39: 
Object[][] objectArray = new Object[5][2];
String[] stringArray = new String[0];
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
modifTableStockage.supprimerLigne((int) (Integer) null);


* Generated after the refinement and before minimization 40 tests with total length 239
* test suite isTestSuite: 40
Test 0: 
TableStockage tableStockage = new TableStockage();
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
modifTableStockage.colonneMail();
modifTableStockage.supprimerColonne(0);
Test 1: 
Object[][] objectArray = new Object[2][7];
String[] stringArray = new String[1];
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
modifTableStockage.colonneMail();
Test 2: 
TableStockage tableStockage = new TableStockage();
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
// Undeclared exception!
try { 
  modifTableStockage.ajouterLigne();
  fail("Expecting exception: HeadlessException");

} catch(HeadlessException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("java.awt.GraphicsEnvironment", e);
}

Test 3: 
String[] stringArray = new String[9];
stringArray[0] = "";
Object[][] objectArray = new Object[4][7];
objectArray[0] = (Object[]) stringArray;
objectArray[1] = (Object[]) stringArray;
objectArray[2] = (Object[]) stringArray;
objectArray[3] = (Object[]) stringArray;
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
modifTableStockage.ajouterLigne();
Test 4: 
TableStockage tableStockage = new TableStockage(57, 57);
Class<Object> class = Object.class;
tableStockage.setColumnClass(0, class);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
modifTableStockage.ajouterLigne();
Test 5: 
String[] stringArray = new String[6];
Object[][] objectArray = new Object[5][6];
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
modifTableStockage.supprimerColonne(2);
Test 6: 
Object[][] objectArray = new Object[2][7];
String[] stringArray = new String[1];
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
modifTableStockage.supprimerColonne(0);
Test 7: 
String[] stringArray = new String[8];
Object[][] objectArray = new Object[7][1];
objectArray[0] = (Object[]) stringArray;
objectArray[1] = (Object[]) stringArray;
objectArray[2] = (Object[]) stringArray;
objectArray[3] = (Object[]) stringArray;
objectArray[4] = (Object[]) stringArray;
objectArray[5] = (Object[]) stringArray;
objectArray[6] = (Object[]) stringArray;
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
modifTableStockage.supprimerLigne(2);
Test 8: 
String[] stringArray = new String[2];
Object[][] objectArray = new Object[1][3];
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
modifTableStockage.supprimerLigne(0);
Test 9: 
String[] stringArray = new String[2];
Object[][] objectArray = new Object[1][3];
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
// Undeclared exception!
try { 
  modifTableStockage.separerColonne(1);
  fail("Expecting exception: HeadlessException");

} catch(HeadlessException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("java.awt.GraphicsEnvironment", e);
}

Test 10: 
String[] stringArray = new String[1];
stringArray[0] = "S`7lsKgL!{.~V6~&";
Object[][] objectArray = new Object[1][7];
objectArray[0] = (Object[]) stringArray;
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
// Undeclared exception!
try { 
  modifTableStockage.separerColonne(0);
  fail("Expecting exception: HeadlessException");

} catch(HeadlessException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("java.awt.GraphicsEnvironment", e);
}

Test 11: 
String[] stringArray = new String[6];
stringArray[2] = "lH0%@t7{vV1;tT B";
Object[][] objectArray = new Object[9][3];
objectArray[0] = (Object[]) stringArray;
objectArray[1] = (Object[]) stringArray;
objectArray[2] = (Object[]) stringArray;
objectArray[3] = (Object[]) stringArray;
objectArray[4] = (Object[]) stringArray;
Object[] objectArray = new Object[6];
objectArray[2] = (Object) "";
objectArray[5] = objectArray;
objectArray[6] = (Object[]) stringArray;
objectArray[7] = (Object[]) stringArray;
objectArray[8] = (Object[]) stringArray;
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
modifTableStockage.separerColonne(2);
Test 12: 
String[] stringArray = new String[2];
stringArray[0] = "6k";
Object[][] objectArray = new Object[5][6];
Object[] objectArray = new Object[2];
objectArray[0] = (Object) "Envoyer E-Mail a:";
objectArray[0] = objectArray;
objectArray[1] = (Object[]) stringArray;
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
// Undeclared exception!
try { 
  modifTableStockage.separerColonne(0);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
}

Test 13: 
TableStockage tableStockage = new TableStockage();
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
// Undeclared exception!
try { 
  modifTableStockage.fusionnerColonnes((-1));
  fail("Expecting exception: HeadlessException");

} catch(HeadlessException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("java.awt.GraphicsEnvironment", e);
}

Test 14: 
String[] stringArray = new String[6];
Object[][] objectArray = new Object[2][6];
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
Class<Boolean> class = Boolean.class;
tableStockage.setColumnClass(2, class);
// Undeclared exception!
try { 
  modifTableStockage.fusionnerColonnes(2);
  fail("Expecting exception: HeadlessException");

} catch(HeadlessException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("java.awt.GraphicsEnvironment", e);
}

Test 15: 
String[] stringArray = new String[4];
stringArray[0] = "S`7lsKgL!{.~V6~&";
stringArray[1] = "9uE.4%^Y";
Object[][] objectArray = new Object[1][7];
objectArray[0] = (Object[]) stringArray;
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
modifTableStockage.fusionnerColonnes(0);
Test 16: 
String[] stringArray = new String[6];
stringArray[2] = "";
Object[][] objectArray = new Object[2][6];
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
// Undeclared exception!
try { 
  modifTableStockage.fusionnerColonnes(2);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.evosuite.runtime.System", e);
}

Test 17: 
TableStockage tableStockage = new TableStockage();
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
// Undeclared exception!
try { 
  modifTableStockage.selectMail();
  fail("Expecting exception: HeadlessException");

} catch(HeadlessException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("java.awt.GraphicsEnvironment", e);
}

Test 18: 
String[] stringArray = new String[1];
stringArray[0] = "Envoyer E-Mail a:";
Object[][] objectArray = new Object[0][2];
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
modifTableStockage.selectMail();
Test 19: 
String[] stringArray = new String[6];
stringArray[0] = "";
Object[][] objectArray = new Object[0][7];
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
// Undeclared exception!
try { 
  modifTableStockage.selectMail();
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
}

Test 20: 
String[] stringArray = new String[1];
stringArray[0] = "Envoyer E-Mail a:";
Object[][] objectArray = new Object[2][4];
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
// Undeclared exception!
try { 
  modifTableStockage.selectMail();
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 21: 
String[] stringArray = new String[5];
Object[][] objectArray = new Object[5][7];
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
Class<Object> class = Object.class;
modifTableStockage.ajouterColonne("hu@A+fsM=/BVa)", class);
Test 22: 
TableStockage tableStockage = new TableStockage();
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
Class<Boolean> class = Boolean.class;
modifTableStockage.ajouterColonne("fr.unice.gfarce.interGraph.TableStockage", class);
Test 23: 
Object[][] objectArray = new Object[5][2];
String[] stringArray = new String[0];
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
modifTableStockage.supprimerLigne((-1));
Test 24: 

Test 25: 
Object[][] objectArray = new Object[2][7];
String[] stringArray = new String[1];
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
modifTableStockage.colonneMail();

Test 26: 
TableStockage tableStockage = new TableStockage();
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);

Test 27: 
String[] stringArray = new String[9];
stringArray[0] = "Lorem ipsum dolor sit amet, consectetur adipiscing elit.";
Object[][] objectArray = new Object[4][7];
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);

Test 28: 
TableStockage tableStockage = new TableStockage(57, 57);
int _int = 0;
((TableStockage)57).setColumnClass(0, (Class<?>) null);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
((ModifTableStockage) _int).ajouterLigne();

Test 29: 
Object[][] objectArray = new Object[2][7];
String[] stringArray = new String[1];
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
modifTableStockage.supprimerColonne(0);

Test 30: 
String[] stringArray = new String[8];
Object[][] objectArray = new Object[7][1];
objectArray[0] = (Object[]) stringArray;
objectArray[1] = (Object[]) stringArray;
objectArray[2] = (Object[]) stringArray;
objectArray[3] = (Object[]) stringArray;
objectArray[4] = (Object[]) stringArray;
objectArray[5] = (Object[]) stringArray;
objectArray[6] = (Object[]) stringArray;
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
modifTableStockage.supprimerLigne(2);

Test 31: 
String[] stringArray = new String[1];
stringArray[0] = "S`7lsKgL!{.~V6~&";
Object[][] objectArray = new Object[1][7];
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
modifTableStockage.separerColonne((int) "name");

Test 32: 
String[] stringArray = new String[6];
stringArray[2] = "lH0%@t7{vV1;tT B";
Object[][] objectArray = new Object[9][3];
Object[] objectArray = new Object[6];
TableStockage tableStockage = new TableStockage(stringArray, (Object[][]) objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);

Test 33: 
String[] stringArray = new String[2];
stringArray[0] = "6k";
Object[][] objectArray = new Object[5][6];
Object[] objectArray = new Object[2];
objectArray[0] = (Object[]) "Envoyer E-Mail a:";
objectArray[0] = (Object[]) stringArray;
TableStockage tableStockage = new TableStockage(stringArray, (Object[][]) objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
int _int = 0;
((ModifTableStockage) tableStockage).separerColonne(_int);

Test 34: 
TableStockage tableStockage = new TableStockage();
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
modifTableStockage.fusionnerColonnes((int) (Integer) null);

Test 35: 
String[] stringArray = new String[4];
stringArray[0] = "S`7lsKgL!{.~V6~&";
stringArray[1] = "9uE.4%^Y";
Object[][] objectArray = new Object[1][7];
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
((ModifTableStockage) tableStockage).fusionnerColonnes(0);

Test 36: 
TableStockage tableStockage = new TableStockage();
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
modifTableStockage.selectMail();

Test 37: 
String[] stringArray = new String[1];
stringArray[0] = "Envoyer E-Mail a:";
Object[][] objectArray = new Object[0][2];
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
((ModifTableStockage) tableStockage).selectMail();

Test 38: 
String[] stringArray = new String[6];
stringArray[0] = "John Doe";
Object[][] objectArray = new Object[0][7];
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
((ModifTableStockage) tableStockage).selectMail();

Test 39: 
Object[][] objectArray = new Object[5][2];
String[] stringArray = new String[0];
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
modifTableStockage.supprimerLigne((int) (Integer) null);


* Minimizing test suite
* test suite isTestSuite: 23
Test 0: 
TableStockage tableStockage = new TableStockage();
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
// Undeclared exception!
try { 
  modifTableStockage.ajouterLigne();
  fail("Expecting exception: HeadlessException");

} catch(HeadlessException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("java.awt.GraphicsEnvironment", e);
}

Test 1: 
Object[][] objectArray = new Object[2][7];
String[] stringArray = new String[1];
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
modifTableStockage.colonneMail();
Test 2: 
String[] stringArray = new String[9];
stringArray[0] = "";
Object[][] objectArray = new Object[4][7];
objectArray[0] = (Object[]) stringArray;
objectArray[1] = (Object[]) stringArray;
objectArray[2] = (Object[]) stringArray;
objectArray[3] = (Object[]) stringArray;
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
modifTableStockage.ajouterLigne();
Test 3: 
TableStockage tableStockage = new TableStockage(57, 57);
Class<Object> class = Object.class;
tableStockage.setColumnClass(0, class);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
modifTableStockage.ajouterLigne();
Test 4: 
String[] stringArray = new String[6];
Object[][] objectArray = new Object[5][6];
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
modifTableStockage.supprimerColonne(2);
Test 5: 
String[] stringArray = new String[8];
Object[][] objectArray = new Object[7][1];
objectArray[0] = (Object[]) stringArray;
objectArray[1] = (Object[]) stringArray;
objectArray[2] = (Object[]) stringArray;
objectArray[3] = (Object[]) stringArray;
objectArray[4] = (Object[]) stringArray;
objectArray[5] = (Object[]) stringArray;
objectArray[6] = (Object[]) stringArray;
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
modifTableStockage.supprimerLigne(2);
Test 6: 
String[] stringArray = new String[2];
Object[][] objectArray = new Object[1][3];
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
modifTableStockage.supprimerLigne(0);
Test 7: 
String[] stringArray = new String[2];
Object[][] objectArray = new Object[1][3];
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
// Undeclared exception!
try { 
  modifTableStockage.separerColonne(1);
  fail("Expecting exception: HeadlessException");

} catch(HeadlessException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("java.awt.GraphicsEnvironment", e);
}

Test 8: 
String[] stringArray = new String[1];
stringArray[0] = "S`7lsKgL!{.~V6~&";
Object[][] objectArray = new Object[1][7];
objectArray[0] = (Object[]) stringArray;
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
// Undeclared exception!
try { 
  modifTableStockage.separerColonne(0);
  fail("Expecting exception: HeadlessException");

} catch(HeadlessException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("java.awt.GraphicsEnvironment", e);
}

Test 9: 
String[] stringArray = new String[6];
stringArray[2] = "lH0%@t7{vV1;tT B";
Object[][] objectArray = new Object[9][3];
objectArray[0] = (Object[]) stringArray;
objectArray[1] = (Object[]) stringArray;
objectArray[2] = (Object[]) stringArray;
objectArray[3] = (Object[]) stringArray;
objectArray[4] = (Object[]) stringArray;
Object[] objectArray = new Object[6];
objectArray[2] = (Object) "";
objectArray[5] = objectArray;
objectArray[6] = (Object[]) stringArray;
objectArray[7] = (Object[]) stringArray;
objectArray[8] = (Object[]) stringArray;
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
modifTableStockage.separerColonne(2);
Test 10: 
String[] stringArray = new String[2];
stringArray[0] = "6k";
Object[][] objectArray = new Object[5][6];
Object[] objectArray = new Object[2];
objectArray[0] = (Object) "Envoyer E-Mail a:";
objectArray[0] = objectArray;
objectArray[1] = (Object[]) stringArray;
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
// Undeclared exception!
try { 
  modifTableStockage.separerColonne(0);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
}

Test 11: 
TableStockage tableStockage = new TableStockage();
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
// Undeclared exception!
try { 
  modifTableStockage.fusionnerColonnes((-1));
  fail("Expecting exception: HeadlessException");

} catch(HeadlessException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("java.awt.GraphicsEnvironment", e);
}

Test 12: 
String[] stringArray = new String[6];
Object[][] objectArray = new Object[2][6];
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
Class<Boolean> class = Boolean.class;
tableStockage.setColumnClass(2, class);
// Undeclared exception!
try { 
  modifTableStockage.fusionnerColonnes(2);
  fail("Expecting exception: HeadlessException");

} catch(HeadlessException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("java.awt.GraphicsEnvironment", e);
}

Test 13: 
String[] stringArray = new String[4];
stringArray[0] = "S`7lsKgL!{.~V6~&";
stringArray[1] = "9uE.4%^Y";
Object[][] objectArray = new Object[1][7];
objectArray[0] = (Object[]) stringArray;
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
modifTableStockage.fusionnerColonnes(0);
Test 14: 
String[] stringArray = new String[6];
stringArray[2] = "";
Object[][] objectArray = new Object[2][6];
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
// Undeclared exception!
try { 
  modifTableStockage.fusionnerColonnes(2);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.evosuite.runtime.System", e);
}

Test 15: 
TableStockage tableStockage = new TableStockage();
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
// Undeclared exception!
try { 
  modifTableStockage.selectMail();
  fail("Expecting exception: HeadlessException");

} catch(HeadlessException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("java.awt.GraphicsEnvironment", e);
}

Test 16: 
String[] stringArray = new String[1];
stringArray[0] = "Envoyer E-Mail a:";
Object[][] objectArray = new Object[0][2];
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
modifTableStockage.selectMail();
Test 17: 
String[] stringArray = new String[6];
stringArray[0] = "";
Object[][] objectArray = new Object[0][7];
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
// Undeclared exception!
try { 
  modifTableStockage.selectMail();
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
}

Test 18: 
String[] stringArray = new String[1];
stringArray[0] = "Envoyer E-Mail a:";
Object[][] objectArray = new Object[2][4];
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
// Undeclared exception!
try { 
  modifTableStockage.selectMail();
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 19: 
TableStockage tableStockage = new TableStockage();
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
Class<Boolean> class = Boolean.class;
modifTableStockage.ajouterColonne("fr.unice.gfarce.interGraph.TableStockage", class);
Test 20: 
String[] stringArray = new String[5];
Object[][] objectArray = new Object[5][7];
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
Class<Object> class = Object.class;
modifTableStockage.ajouterColonne("hu@A+fsM=/BVa)", class);
Test 21: 
TableStockage tableStockage = new TableStockage();
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
modifTableStockage.colonneMail();
modifTableStockage.supprimerColonne(0);
Test 22: 
Object[][] objectArray = new Object[5][2];
String[] stringArray = new String[0];
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
modifTableStockage.supprimerLigne((-1));

* Going to analyze the coverage criteria
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 90%
* Total number of goals: 123
* Number of covered goals: 111
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 92%
* Total number of goals: 184
* Number of covered goals: 169
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 39%
* Total number of goals: 56
* Number of covered goals: 22
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 9
* Number of covered goals: 9
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 90%
* Total number of goals: 123
* Number of covered goals: 111
* Generated 23 tests with total length 148
* Resulting test suite's coverage: 82% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 48%
* Compiling and checking tests
Going to execute: removeTestsThatDoNotCompile
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: TableStockage arg0 = new TableStockage();
ModifTableStockage modifTableStockage = new ModifTableStockage(arg0);
// Undeclared exception!
try { 
  modifTableStockage.ajouterLigne();
  fail("Expecting exception: HeadlessException");

} catch(HeadlessException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("java.awt.GraphicsEnvironment", e);
}


** It was a parseable test case! 
refined test name is: testAjouterLigneThrowsHeadlessException
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: TableStockage arg0 = new TableStockage(57, 57);
Class<Object> arg1 = Object.class;
arg0.setColumnClass(0, arg1);
ModifTableStockage modifTableStockage = new ModifTableStockage(arg0);
TableStockage ajouterLigne = modifTableStockage.ajouterLigne();
assertEquals(57, ajouterLigne.getColumnCount());
assertEquals(57, ajouterLigne.getRowCount());


** It was a parseable test case! 
refined test name is: testAddNewLineWithObjectClassCheckTableSize
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: TableStockage arg0 = new TableStockage();
ModifTableStockage modifTableStockage = new ModifTableStockage(arg0);
// Undeclared exception!
try { 
  modifTableStockage.fusionnerColonnes((-1));
  fail("Expecting exception: HeadlessException");

} catch(HeadlessException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("java.awt.GraphicsEnvironment", e);
}


** It was a parseable test case! 
refined test name is: testFusionnerColonnesNegatifIndex
* Compiling Tests
refined test name is: testFusionnerColonnesNegativeIndex
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: TableStockage arg0 = new TableStockage();
ModifTableStockage modifTableStockage = new ModifTableStockage(arg0);
// Undeclared exception!
try { 
  modifTableStockage.selectMail();
  fail("Expecting exception: HeadlessException");

} catch(HeadlessException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("java.awt.GraphicsEnvironment", e);
}


** It was a parseable test case! 
refined test name is: testSelectMailShouldThrowHeadlessException
* Compiling Tests
refined test name is: testSelectMailThrowsHeadlessException
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: TableStockage arg0 = new TableStockage();
ModifTableStockage modifTableStockage = new ModifTableStockage(arg0);
Class<Boolean> arg1 = Boolean.class;
TableStockage ajouterColonne = modifTableStockage.ajouterColonne("fr.unice.gfarce.interGraph.TableStockage", arg1);
assertEquals(1, ajouterColonne.getColumnCount());
assertEquals(0, ajouterColonne.getRowCount());


** It was a parseable test case! 
refined test name is: testAjouterColonneAddNewColumnToTable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: TableStockage arg0 = new TableStockage();
ModifTableStockage modifTableStockage = new ModifTableStockage(arg0);
TableStockage colonneMail = modifTableStockage.colonneMail();
assertEquals(0, colonneMail.getRowCount());
assertEquals(1, colonneMail.getColumnCount());

TableStockage supprimerColonne = modifTableStockage.supprimerColonne(0);
assertEquals(0, supprimerColonne.getColumnCount());
assertEquals(0, supprimerColonne.getRowCount());


** It was a parseable test case! 
refined test name is: testColonneMailAndSupprimerColonne
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 15:55:01.760 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/tmp/EvoSuite_pathingJar7819491486675645551.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
[MASTER] 15:55:01.789 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7819491486675645551.jar
* Compiling Tests
[MASTER] 15:55:01.923 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/tmp/EvoSuite_pathingJar7819491486675645551.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 15:55:01.924 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7819491486675645551.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 15:55:01.983 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/tmp/EvoSuite_pathingJar7819491486675645551.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 15:55:01.984 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7819491486675645551.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 15:55:02.040 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/tmp/EvoSuite_pathingJar7819491486675645551.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 15:55:02.041 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7819491486675645551.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 15:55:02.095 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/tmp/EvoSuite_pathingJar7819491486675645551.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 15:55:02.096 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7819491486675645551.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 15:55:02.150 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/tmp/EvoSuite_pathingJar7819491486675645551.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 15:55:02.151 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7819491486675645551.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 2 called: 0 to improve: false
** Write a test suite: 3 called: 1 to improve: false
[MASTER] 15:55:02.334 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/tmp/EvoSuite_pathingJar7819491486675645551.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 15:55:02.335 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7819491486675645551.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 2 called: 0 to improve: false
** Write a test suite: 3 called: 1 to improve: false
[MASTER] 15:55:02.507 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/tmp/EvoSuite_pathingJar7819491486675645551.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 15:55:02.508 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7819491486675645551.jar
[MASTER] 15:55:03.084 [logback-1] WARN  TimeController - Already entered in phase: INLINING. This will mess up the timing calculations.
* test suite isTestSuite: 24
Test 0: 
TableStockage tableStockage = new TableStockage();
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
modifTableStockage.colonneMail();
modifTableStockage.supprimerColonne(0);
Test 1: 
Object[][] objectArray = new Object[2][7];
String[] stringArray = new String[1];
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
modifTableStockage.colonneMail();
Test 2: 
TableStockage tableStockage = new TableStockage();
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
// Undeclared exception!
try { 
  modifTableStockage.ajouterLigne();
  fail("Expecting exception: HeadlessException");

} catch(HeadlessException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("java.awt.GraphicsEnvironment", e);
}

Test 3: 
String[] stringArray = new String[9];
stringArray[0] = "";
Object[][] objectArray = new Object[4][7];
objectArray[0] = (Object[]) stringArray;
objectArray[1] = (Object[]) stringArray;
objectArray[2] = (Object[]) stringArray;
objectArray[3] = (Object[]) stringArray;
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
modifTableStockage.ajouterLigne();
Test 4: 
TableStockage tableStockage = new TableStockage(57, 57);
Class<Object> class = Object.class;
tableStockage.setColumnClass(0, class);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
modifTableStockage.ajouterLigne();
Test 5: 
String[] stringArray = new String[6];
Object[][] objectArray = new Object[5][6];
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
modifTableStockage.supprimerColonne(2);
Test 6: 
Object[][] objectArray = new Object[2][7];
String[] stringArray = new String[1];
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
modifTableStockage.supprimerColonne(0);
Test 7: 
String[] stringArray = new String[8];
Object[][] objectArray = new Object[7][1];
objectArray[0] = (Object[]) stringArray;
objectArray[1] = (Object[]) stringArray;
objectArray[2] = (Object[]) stringArray;
objectArray[3] = (Object[]) stringArray;
objectArray[4] = (Object[]) stringArray;
objectArray[5] = (Object[]) stringArray;
objectArray[6] = (Object[]) stringArray;
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
modifTableStockage.supprimerLigne(2);
Test 8: 
String[] stringArray = new String[2];
Object[][] objectArray = new Object[1][3];
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
modifTableStockage.supprimerLigne(0);
Test 9: 
String[] stringArray = new String[2];
Object[][] objectArray = new Object[1][3];
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
// Undeclared exception!
try { 
  modifTableStockage.separerColonne(1);
  fail("Expecting exception: HeadlessException");

} catch(HeadlessException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("java.awt.GraphicsEnvironment", e);
}

Test 10: 
String[] stringArray = new String[1];
stringArray[0] = "S`7lsKgL!{.~V6~&";
Object[][] objectArray = new Object[1][7];
objectArray[0] = (Object[]) stringArray;
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
// Undeclared exception!
try { 
  modifTableStockage.separerColonne(0);
  fail("Expecting exception: HeadlessException");

} catch(HeadlessException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("java.awt.GraphicsEnvironment", e);
}

Test 11: 
String[] stringArray = new String[6];
stringArray[2] = "lH0%@t7{vV1;tT B";
Object[][] objectArray = new Object[9][3];
objectArray[0] = (Object[]) stringArray;
objectArray[1] = (Object[]) stringArray;
objectArray[2] = (Object[]) stringArray;
objectArray[3] = (Object[]) stringArray;
objectArray[4] = (Object[]) stringArray;
Object[] objectArray = new Object[6];
objectArray[2] = (Object) "";
objectArray[5] = objectArray;
objectArray[6] = (Object[]) stringArray;
objectArray[7] = (Object[]) stringArray;
objectArray[8] = (Object[]) stringArray;
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
modifTableStockage.separerColonne(2);
Test 12: 
String[] stringArray = new String[2];
stringArray[0] = "6k";
Object[][] objectArray = new Object[5][6];
Object[] objectArray = new Object[2];
objectArray[0] = (Object) "Envoyer E-Mail a:";
objectArray[0] = objectArray;
objectArray[1] = (Object[]) stringArray;
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
// Undeclared exception!
try { 
  modifTableStockage.separerColonne(0);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
}

Test 13: 
TableStockage tableStockage = new TableStockage();
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
// Undeclared exception!
try { 
  modifTableStockage.fusionnerColonnes((-1));
  fail("Expecting exception: HeadlessException");

} catch(HeadlessException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("java.awt.GraphicsEnvironment", e);
}

Test 14: 
String[] stringArray = new String[6];
Object[][] objectArray = new Object[2][6];
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
Class<Boolean> class = Boolean.class;
tableStockage.setColumnClass(2, class);
// Undeclared exception!
try { 
  modifTableStockage.fusionnerColonnes(2);
  fail("Expecting exception: HeadlessException");

} catch(HeadlessException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("java.awt.GraphicsEnvironment", e);
}

Test 15: 
String[] stringArray = new String[4];
stringArray[0] = "S`7lsKgL!{.~V6~&";
stringArray[1] = "9uE.4%^Y";
Object[][] objectArray = new Object[1][7];
objectArray[0] = (Object[]) stringArray;
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
modifTableStockage.fusionnerColonnes(0);
Test 16: 
String[] stringArray = new String[6];
stringArray[2] = "";
Object[][] objectArray = new Object[2][6];
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
// Undeclared exception!
try { 
  modifTableStockage.fusionnerColonnes(2);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.evosuite.runtime.System", e);
}

Test 17: 
TableStockage tableStockage = new TableStockage();
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
// Undeclared exception!
try { 
  modifTableStockage.selectMail();
  fail("Expecting exception: HeadlessException");

} catch(HeadlessException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("java.awt.GraphicsEnvironment", e);
}

Test 18: 
String[] stringArray = new String[1];
stringArray[0] = "Envoyer E-Mail a:";
Object[][] objectArray = new Object[0][2];
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
modifTableStockage.selectMail();
Test 19: 
String[] stringArray = new String[6];
stringArray[0] = "";
Object[][] objectArray = new Object[0][7];
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
// Undeclared exception!
try { 
  modifTableStockage.selectMail();
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
}

Test 20: 
String[] stringArray = new String[1];
stringArray[0] = "Envoyer E-Mail a:";
Object[][] objectArray = new Object[2][4];
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
// Undeclared exception!
try { 
  modifTableStockage.selectMail();
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 21: 
String[] stringArray = new String[5];
Object[][] objectArray = new Object[5][7];
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
Class<Object> class = Object.class;
modifTableStockage.ajouterColonne("hu@A+fsM=/BVa)", class);
Test 22: 
TableStockage tableStockage = new TableStockage();
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
Class<Boolean> class = Boolean.class;
modifTableStockage.ajouterColonne("fr.unice.gfarce.interGraph.TableStockage", class);
Test 23: 
Object[][] objectArray = new Object[5][2];
String[] stringArray = new String[0];
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
modifTableStockage.supprimerLigne((-1));

* Minimizing test suite
* test suite isTestSuite: 23
Test 0: 
TableStockage tableStockage = new TableStockage();
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
Class<Boolean> class = Boolean.class;
modifTableStockage.ajouterColonne("fr.unice.gfarce.interGraph.TableStockage", class);
Test 1: 
Object[][] objectArray = new Object[2][7];
String[] stringArray = new String[1];
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
modifTableStockage.colonneMail();
Test 2: 
TableStockage tableStockage = new TableStockage();
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
// Undeclared exception!
try { 
  modifTableStockage.ajouterLigne();
  fail("Expecting exception: HeadlessException");

} catch(HeadlessException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("java.awt.GraphicsEnvironment", e);
}

Test 3: 
String[] stringArray = new String[9];
stringArray[0] = "";
Object[][] objectArray = new Object[4][7];
objectArray[0] = (Object[]) stringArray;
objectArray[1] = (Object[]) stringArray;
objectArray[2] = (Object[]) stringArray;
objectArray[3] = (Object[]) stringArray;
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
modifTableStockage.ajouterLigne();
Test 4: 
TableStockage tableStockage = new TableStockage(57, 57);
Class<Object> class = Object.class;
tableStockage.setColumnClass(0, class);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
modifTableStockage.ajouterLigne();
Test 5: 
TableStockage tableStockage = new TableStockage();
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
modifTableStockage.colonneMail();
modifTableStockage.supprimerColonne(0);
Test 6: 
String[] stringArray = new String[6];
Object[][] objectArray = new Object[5][6];
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
modifTableStockage.supprimerColonne(2);
Test 7: 
Object[][] objectArray = new Object[5][2];
String[] stringArray = new String[0];
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
modifTableStockage.supprimerLigne((-1));
Test 8: 
String[] stringArray = new String[2];
Object[][] objectArray = new Object[1][3];
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
modifTableStockage.supprimerLigne(0);
Test 9: 
String[] stringArray = new String[8];
Object[][] objectArray = new Object[7][1];
objectArray[0] = (Object[]) stringArray;
objectArray[1] = (Object[]) stringArray;
objectArray[2] = (Object[]) stringArray;
objectArray[3] = (Object[]) stringArray;
objectArray[4] = (Object[]) stringArray;
objectArray[5] = (Object[]) stringArray;
objectArray[6] = (Object[]) stringArray;
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
modifTableStockage.supprimerLigne(2);
Test 10: 
String[] stringArray = new String[2];
Object[][] objectArray = new Object[1][3];
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
// Undeclared exception!
try { 
  modifTableStockage.separerColonne(1);
  fail("Expecting exception: HeadlessException");

} catch(HeadlessException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("java.awt.GraphicsEnvironment", e);
}

Test 11: 
String[] stringArray = new String[1];
stringArray[0] = "S`7lsKgL!{.~V6~&";
Object[][] objectArray = new Object[1][7];
objectArray[0] = (Object[]) stringArray;
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
// Undeclared exception!
try { 
  modifTableStockage.separerColonne(0);
  fail("Expecting exception: HeadlessException");

} catch(HeadlessException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("java.awt.GraphicsEnvironment", e);
}

Test 12: 
String[] stringArray = new String[6];
stringArray[2] = "lH0%@t7{vV1;tT B";
Object[][] objectArray = new Object[9][3];
objectArray[0] = (Object[]) stringArray;
objectArray[1] = (Object[]) stringArray;
objectArray[2] = (Object[]) stringArray;
objectArray[3] = (Object[]) stringArray;
objectArray[4] = (Object[]) stringArray;
Object[] objectArray = new Object[6];
objectArray[2] = (Object) "";
objectArray[5] = objectArray;
objectArray[6] = (Object[]) stringArray;
objectArray[7] = (Object[]) stringArray;
objectArray[8] = (Object[]) stringArray;
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
modifTableStockage.separerColonne(2);
Test 13: 
String[] stringArray = new String[2];
stringArray[0] = "6k";
Object[][] objectArray = new Object[5][6];
Object[] objectArray = new Object[2];
objectArray[0] = (Object) "Envoyer E-Mail a:";
objectArray[0] = objectArray;
objectArray[1] = (Object[]) stringArray;
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
// Undeclared exception!
try { 
  modifTableStockage.separerColonne(0);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
}

Test 14: 
TableStockage tableStockage = new TableStockage();
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
// Undeclared exception!
try { 
  modifTableStockage.fusionnerColonnes((-1));
  fail("Expecting exception: HeadlessException");

} catch(HeadlessException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("java.awt.GraphicsEnvironment", e);
}

Test 15: 
String[] stringArray = new String[6];
Object[][] objectArray = new Object[2][6];
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
Class<Boolean> class = Boolean.class;
tableStockage.setColumnClass(2, class);
// Undeclared exception!
try { 
  modifTableStockage.fusionnerColonnes(2);
  fail("Expecting exception: HeadlessException");

} catch(HeadlessException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("java.awt.GraphicsEnvironment", e);
}

Test 16: 
String[] stringArray = new String[4];
stringArray[0] = "S`7lsKgL!{.~V6~&";
stringArray[1] = "9uE.4%^Y";
Object[][] objectArray = new Object[1][7];
objectArray[0] = (Object[]) stringArray;
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
modifTableStockage.fusionnerColonnes(0);
Test 17: 
String[] stringArray = new String[6];
stringArray[2] = "";
Object[][] objectArray = new Object[2][6];
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
// Undeclared exception!
try { 
  modifTableStockage.fusionnerColonnes(2);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.evosuite.runtime.System", e);
}

Test 18: 
TableStockage tableStockage = new TableStockage();
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
// Undeclared exception!
try { 
  modifTableStockage.selectMail();
  fail("Expecting exception: HeadlessException");

} catch(HeadlessException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("java.awt.GraphicsEnvironment", e);
}

Test 19: 
String[] stringArray = new String[1];
stringArray[0] = "Envoyer E-Mail a:";
Object[][] objectArray = new Object[0][2];
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
modifTableStockage.selectMail();
Test 20: 
String[] stringArray = new String[6];
stringArray[0] = "";
Object[][] objectArray = new Object[0][7];
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
// Undeclared exception!
try { 
  modifTableStockage.selectMail();
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
}

Test 21: 
String[] stringArray = new String[1];
stringArray[0] = "Envoyer E-Mail a:";
Object[][] objectArray = new Object[2][4];
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
// Undeclared exception!
try { 
  modifTableStockage.selectMail();
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 22: 
String[] stringArray = new String[5];
Object[][] objectArray = new Object[5][7];
TableStockage tableStockage = new TableStockage(stringArray, objectArray);
ModifTableStockage modifTableStockage = new ModifTableStockage(tableStockage);
Class<Object> class = Object.class;
modifTableStockage.ajouterColonne("hu@A+fsM=/BVa)", class);

[MASTER] 15:55:06.399 [logback-1] WARN  TimeController - Already entered in phase: MINIMIZATION. This will mess up the timing calculations.
* Going to analyze the coverage criteria
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 90%
* Total number of goals: 123
* Number of covered goals: 111
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 92%
* Total number of goals: 184
* Number of covered goals: 169
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 39%
* Total number of goals: 56
* Number of covered goals: 22
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 9
* Number of covered goals: 9
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 90%
* Total number of goals: 123
* Number of covered goals: 111
* Generated 23 tests with total length 148
* Resulting test suite's coverage: 82% (average coverage for all fitness functions)
[MASTER] 15:55:06.481 [logback-1] WARN  TimeController - Already entered in phase: COVERAGE_ANALYSIS. This will mess up the timing calculations.
* Generating assertions
* Resulting test suite's mutation score: 48%
* Compiling and checking tests
[MASTER] 15:55:13.365 [logback-1] WARN  TimeController - Already entered in phase: ASSERTION_GENERATION. This will mess up the timing calculations.
Going to execute: removeTestsThatDoNotCompile
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 15:55:14.608 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/tmp/EvoSuite_pathingJar7819491486675645551.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 15:55:14.609 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7819491486675645551.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 15:55:14.653 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/tmp/EvoSuite_pathingJar7819491486675645551.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 15:55:14.654 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7819491486675645551.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 15:55:14.806 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/tmp/EvoSuite_pathingJar7819491486675645551.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 15:55:14.808 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7819491486675645551.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 15:55:14.875 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/tmp/EvoSuite_pathingJar7819491486675645551.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 15:55:14.875 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7819491486675645551.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 15:55:14.967 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/tmp/EvoSuite_pathingJar7819491486675645551.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 15:55:14.968 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7819491486675645551.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 15:55:15.027 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/tmp/EvoSuite_pathingJar7819491486675645551.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 15:55:15.028 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7819491486675645551.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
** Write a test suite: 1 called: 1 to improve: false
** Write a test suite: 2 called: 2 to improve: false
** Write a test suite: 3 called: 3 to improve: false
** Write a test suite: 4 called: 4 to improve: false
** Write a test suite: 5 called: 5 to improve: false
[MASTER] 15:55:15.237 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/tmp/EvoSuite_pathingJar7819491486675645551.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 15:55:15.238 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7819491486675645551.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
** Write a test suite: 1 called: 1 to improve: false
** Write a test suite: 2 called: 2 to improve: false
** Write a test suite: 3 called: 3 to improve: false
** Write a test suite: 4 called: 4 to improve: false
** Write a test suite: 5 called: 5 to improve: false
[MASTER] 15:55:15.398 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/tmp/EvoSuite_pathingJar7819491486675645551.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 15:55:15.399 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7819491486675645551.jar
* Writing tests to file
[MASTER] 15:55:15.401 [logback-1] WARN  TimeController - Already entered in phase: JUNIT_CHECK. This will mess up the timing calculations.
* Writing JUnit test case 'ModifTableStockage_ESTest' to evosuite-tests
** Write a test suite: 2 called: 0 to improve: false
** Write a test suite: 3 called: 1 to improve: false
* Writing JUnit test case 'ModifTableStockage_Original_ESTest' to evosuite-tests
** Write a test suite: 0 called: 0 to improve: false
** Write a test suite: 1 called: 1 to improve: false
** Write a test suite: 2 called: 2 to improve: false
** Write a test suite: 3 called: 3 to improve: false
** Write a test suite: 4 called: 4 to improve: false
** Write a test suite: 5 called: 5 to improve: false
* Done!

* Computation finished
