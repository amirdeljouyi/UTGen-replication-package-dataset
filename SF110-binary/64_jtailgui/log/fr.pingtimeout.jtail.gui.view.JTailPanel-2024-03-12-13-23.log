* EvoSuite 1.0.0-SNAPSHOT
* Going to generate test cases for class: fr.pingtimeout.jtail.gui.view.JTailPanel
* Starting Client-0
* Properties loaded from /home/roham/Results-Utestgen/dataset/SF110-new-res/64_jtailgui/evosuite-files/evosuite.properties
* Connecting to master process on port 21073
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 13:23:28.050 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 13:23:28.055 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 13:23:28.296 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 13:23:28.322 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 13:23:28.323 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 13:23:28.325 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
[MASTER] 13:23:29.894 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.ZoneId
[MASTER] 13:23:29.944 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.Temporal
[MASTER] 13:23:29.945 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAccessor
[MASTER] 13:23:29.946 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalField
[MASTER] 13:23:29.947 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalUnit
[MASTER] 13:23:29.948 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAmount
[MASTER] 13:23:29.949 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.Clock
[MASTER] 13:23:29.950 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalQuery
[MASTER] 13:23:29.950 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAdjuster
[MASTER] 13:23:29.964 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.Chronology
[MASTER] 13:23:29.976 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.Era
* Finished analyzing classpath
* Generating tests for class fr.pingtimeout.jtail.gui.view.JTailPanel
* Test criteria:
  - Branch Coverage
  - Line Coverage
  - Method-Output Coverage
  - Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 129
* Using seed 1710249803751
* Starting evolution
[Progress:>                             0%] [Cov:>                                  0%]* Initial Number of Goals in DynaMOSA = 63 / 129
[Progress:>                             0%] [Cov:==>                                7%][Progress:>                             1%] [Cov:==>                                7%][Progress:>                             1%] [Cov:==>                                7%][Progress:>                             1%] [Cov:==>                                7%][Progress:>                             1%] [Cov:==>                                7%][Progress:>                             1%] [Cov:==>                                7%][Progress:>                             1%] [Cov:==>                                7%][Progress:>                             1%] [Cov:==>                                7%][Progress:>                             1%] [Cov:==>                                7%][Progress:>                             1%] [Cov:==>                                7%][Progress:>                             1%] [Cov:==>                                7%][Progress:>                             2%] [Cov:==>                                7%][Progress:>                             2%] [Cov:==>                                7%][Progress:>                             2%] [Cov:==>                                7%][Progress:>                             2%] [Cov:==>                                7%][Progress:>                             2%] [Cov:==>                                7%][Progress:>                             2%] [Cov:==>                                7%][Progress:>                             2%] [Cov:==>                                7%][Progress:>                             2%] [Cov:==>                                7%][Progress:>                             2%] [Cov:==>                                7%][Progress:>                             2%] [Cov:==>                                7%][Progress:>                             2%] [Cov:==>                                7%][Progress:>                             2%] [Cov:==>                                7%][Progress:>                             2%] [Cov:==>                                7%][Progress:>                             3%] [Cov:==>                                7%][Progress:>                             3%] [Cov:==>                                7%][Progress:>                             3%] [Cov:==>                                7%][Progress:>                             3%] [Cov:==>                                7%][Progress:>                             3%] [Cov:==>                                7%][Progress:>                             3%] [Cov:==>                                7%][Progress:>                             3%] [Cov:==>                                7%][Progress:>                             3%] [Cov:==>                                7%][Progress:>                             3%] [Cov:==>                                7%][Progress:>                             3%] [Cov:==>                                7%][Progress:>                             3%] [Cov:==>                                7%][Progress:>                             3%] [Cov:==>                                7%][Progress:>                             3%] [Cov:==>                                7%][Progress:>                             3%] [Cov:==>                                7%][Progress:>                             3%] [Cov:==>                                7%][Progress:>                             3%] [Cov:==>                                7%][Progress:=>                            4%] [Cov:==>                                7%][Progress:=>                            4%] [Cov:==>                                7%][Progress:=>                            4%] [Cov:==>                                7%][Progress:=>                            4%] [Cov:==>                                7%][Progress:=>                            4%] [Cov:==>                                7%][Progress:=>                            4%] [Cov:==>                                7%][Progress:=>                            4%] [Cov:==>                                7%][Progress:=>                            4%] [Cov:==>                                7%][Progress:=>                            4%] [Cov:==>                                7%][Progress:=>                            4%] [Cov:==>                                7%][MASTER] 13:23:40.038 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.ChronoLocalDate
[MASTER] 13:23:40.062 [logback-1] WARN  TestCluster - Failed to check cache for java.lang.Comparable<T> : Type points to itself
[Progress:=>                            4%] [Cov:==>                                7%][Progress:=>                            4%] [Cov:==>                                7%][Progress:=>                            4%] [Cov:==>                                7%][Progress:=>                            4%] [Cov:==>                                7%][Progress:=>                            5%] [Cov:==>                                7%][Progress:=>                            5%] [Cov:==>                                7%][Progress:=>                            5%] [Cov:==>                                7%][Progress:=>                            5%] [Cov:==>                                7%][Progress:=>                            5%] [Cov:==>                                7%][Progress:=>                            5%] [Cov:==>                                7%][Progress:=>                            5%] [Cov:==>                                7%][Progress:=>                            5%] [Cov:==>                                7%][Progress:=>                            5%] [Cov:==>                                7%][Progress:=>                            5%] [Cov:==>                                7%][Progress:=>                            5%] [Cov:==>                                7%][Progress:=>                            5%] [Cov:==>                                7%][Progress:=>                            5%] [Cov:==>                                7%][Progress:=>                            5%] [Cov:==>                                7%][Progress:=>                            5%] [Cov:==>                                7%][Progress:=>                            5%] [Cov:==>                                7%][Progress:=>                            6%] [Cov:==>                                7%][Progress:=>                            6%] [Cov:==>                                7%][Progress:=>                            6%] [Cov:==>                                7%][Progress:=>                            6%] [Cov:==>                                7%][Progress:=>                            6%] [Cov:==>                                7%][Progress:=>                            6%] [Cov:==>                                7%][Progress:=>                            6%] [Cov:==>                                7%][Progress:=>                            6%] [Cov:==>                                7%][Progress:=>                            6%] [Cov:==>                                7%][Progress:=>                            6%] [Cov:==>                                7%][Progress:=>                            6%] [Cov:==>                                7%][Progress:=>                            6%] [Cov:==>                                7%][Progress:=>                            6%] [Cov:==>                                7%][Progress:=>                            6%] [Cov:==>                                7%][Progress:=>                            6%] [Cov:==>                                7%][Progress:=>                            6%] [Cov:==>                                7%][Progress:=>                            6%] [Cov:==>                                7%][Progress:=>                            6%] [Cov:==>                                7%][Progress:=>                            6%] [Cov:==>                                7%][Progress:=>                            6%] [Cov:==>                                7%][Progress:==>                           7%] [Cov:==>                                7%][Progress:==>                           7%] [Cov:==>                                7%][Progress:==>                           7%] [Cov:==>                                7%][Progress:==>                           7%] [Cov:==>                                7%][Progress:==>                           7%] [Cov:==>                                7%][Progress:==>                           7%] [Cov:==>                                7%][Progress:==>                           7%] [Cov:==>                                7%][Progress:==>                           7%] [Cov:==>                                7%][Progress:==>                           7%] [Cov:==>                                7%][Progress:==>                           7%] [Cov:==>                                7%][Progress:==>                           7%] [Cov:==>                                7%][Progress:==>                           7%] [Cov:==>                                7%][Progress:==>                           7%] [Cov:==>                                7%][Progress:==>                           7%] [Cov:==>                                7%][Progress:==>                           7%] [Cov:==>                                7%][Progress:==>                           7%] [Cov:==>                                7%][Progress:==>                           7%] [Cov:==>                                7%][Progress:==>                           8%] [Cov:==>                                7%][Progress:==>                           8%] [Cov:==>                                7%][Progress:==>                           8%] [Cov:==>                                7%][Progress:==>                           8%] [Cov:==>                                7%][Progress:==>                           8%] [Cov:==>                                7%][Progress:==>                           8%] [Cov:==>                                7%][Progress:==>                           8%] [Cov:==>                                7%][Progress:==>                           8%] [Cov:==>                                7%][Progress:==>                           8%] [Cov:==>                                7%][Progress:==>                           8%] [Cov:==>                                7%][Progress:==>                           8%] [Cov:==>                                7%][Progress:==>                           8%] [Cov:==>                                7%][Progress:==>                           8%] [Cov:==>                                7%][Progress:==>                           8%] [Cov:==>                                7%][Progress:==>                           8%] [Cov:==>                                7%][Progress:==>                           8%] [Cov:==>                                7%][Progress:==>                           8%] [Cov:==>                                7%][Progress:==>                           8%] [Cov:==>                                7%][Progress:==>                           8%] [Cov:==>                                7%][Progress:==>                           9%] [Cov:==>                                7%][Progress:==>                           9%] [Cov:==>                                7%][Progress:==>                           9%] [Cov:==>                                7%][Progress:==>                           9%] [Cov:==>                                7%][Progress:==>                           9%] [Cov:==>                                7%][Progress:==>                           9%] [Cov:==>                                7%][Progress:==>                           9%] [Cov:==>                                7%][Progress:==>                           9%] [Cov:==>                                7%][Progress:==>                           9%] [Cov:==>                                7%][Progress:==>                           9%] [Cov:==>                                7%][Progress:==>                           9%] [Cov:==>                                7%][Progress:==>                           9%] [Cov:==>                                7%][Progress:==>                           9%] [Cov:==>                                7%][Progress:==>                           9%] [Cov:==>                                7%][Progress:==>                           9%] [Cov:==>                                7%][Progress:==>                           9%] [Cov:==>                                7%][Progress:==>                           9%] [Cov:==>                                7%][Progress:==>                           9%] [Cov:==>                                7%][Progress:==>                           9%] [Cov:==>                                7%][Progress:==>                           9%] [Cov:==>                                7%][Progress:===>                          10%] [Cov:==>                                7%][Progress:===>                          10%] [Cov:==>                                7%][Progress:===>                          10%] [Cov:==>                                7%][Progress:===>                          10%] [Cov:==>                                7%][Progress:===>                          10%] [Cov:==>                                7%][Progress:===>                          10%] [Cov:==>                                7%][Progress:===>                          10%] [Cov:==>                                7%][Progress:===>                          10%] [Cov:==>                                7%][Progress:===>                          10%] [Cov:==>                                7%][Progress:===>                          10%] [Cov:==>                                7%][Progress:===>                          10%] [Cov:==>                                7%][Progress:===>                          10%] [Cov:==>                                7%][Progress:===>                          10%] [Cov:==>                                7%][Progress:===>                          10%] [Cov:==>                                7%][Progress:===>                          10%] [Cov:==>                                7%][Progress:===>                          10%] [Cov:==>                                7%][Progress:===>                          10%] [Cov:==>                                7%][Progress:===>                          10%] [Cov:==>                                7%][Progress:===>                          10%] [Cov:==>                                7%][Progress:===>                          11%] [Cov:==>                                7%][Progress:===>                          11%] [Cov:==>                                7%][Progress:===>                          11%] [Cov:==>                                7%][Progress:===>                          11%] [Cov:==>                                7%][Progress:===>                          11%] [Cov:==>                                7%][Progress:===>                          11%] [Cov:==>                                7%][Progress:===>                          11%] [Cov:==>                                7%][Progress:===>                          11%] [Cov:==>                                7%][Progress:===>                          11%] [Cov:==>                                7%][Progress:===>                          11%] [Cov:==>                                7%][Progress:===>                          11%] [Cov:==>                                7%][Progress:===>                          11%] [Cov:==>                                7%][Progress:===>                          11%] [Cov:==>                                7%][Progress:===>                          11%] [Cov:==>                                7%][Progress:===>                          11%] [Cov:==>                                7%][Progress:===>                          11%] [Cov:==>                                7%][Progress:===>                          11%] [Cov:==>                                7%][Progress:===>                          11%] [Cov:==>                                7%][Progress:===>                          11%] [Cov:==>                                7%][Progress:===>                          11%] [Cov:==>                                7%][Progress:===>                          11%] [Cov:==>                                7%][Progress:===>                          12%] [Cov:==>                                7%][Progress:===>                          12%] [Cov:==>                                7%][Progress:===>                          12%] [Cov:==>                                7%][Progress:===>                          12%] [Cov:==>                                7%][Progress:===>                          12%] [Cov:==>                                7%][Progress:===>                          12%] [Cov:==>                                7%][Progress:===>                          12%] [Cov:==>                                7%][Progress:===>                          12%] [Cov:==>                                7%][Progress:===>                          12%] [Cov:==>                                7%][Progress:===>                          12%] [Cov:==>                                7%][Progress:===>                          12%] [Cov:==>                                7%][Progress:===>                          12%] [Cov:==>                                7%][Progress:===>                          12%] [Cov:==>                                7%][Progress:===>                          12%] [Cov:==>                                7%][Progress:===>                          12%] [Cov:==>                                7%][Progress:===>                          12%] [Cov:==>                                7%][Progress:===>                          12%] [Cov:==>                                7%][Progress:===>                          12%] [Cov:==>                                7%][Progress:===>                          12%] [Cov:==>                                7%][Progress:===>                          12%] [Cov:==>                                7%][Progress:===>                          12%] [Cov:==>                                7%][Progress:===>                          13%] [Cov:==>                                7%][Progress:===>                          13%] [Cov:==>                                7%][Progress:===>                          13%] [Cov:==>                                7%][Progress:===>                          13%] [Cov:==>                                7%][Progress:===>                          13%] [Cov:==>                                7%][Progress:===>                          13%] [Cov:==>                                7%][Progress:===>                          13%] [Cov:==>                                7%][Progress:===>                          13%] [Cov:==>                                7%][Progress:===>                          13%] [Cov:==>                                7%][Progress:===>                          13%] [Cov:==>                                7%][Progress:===>                          13%] [Cov:==>                                7%][Progress:===>                          13%] [Cov:==>                                7%][Progress:===>                          13%] [Cov:==>                                7%][Progress:===>                          13%] [Cov:==>                                7%][Progress:===>                          13%] [Cov:==>                                7%][Progress:===>                          13%] [Cov:==>                                7%][Progress:===>                          13%] [Cov:==>                                7%][Progress:===>                          13%] [Cov:==>                                7%][Progress:===>                          13%] [Cov:==>                                7%][Progress:===>                          13%] [Cov:==>                                7%][Progress:===>                          13%] [Cov:==>                                7%][Progress:===>                          13%] [Cov:==>                                7%][Progress:====>                         14%] [Cov:==>                                7%][Progress:====>                         14%] [Cov:==>                                7%][Progress:====>                         14%] [Cov:==>                                7%][Progress:====>                         14%] [Cov:==>                                7%][Progress:====>                         14%] [Cov:==>                                7%][Progress:====>                         14%] [Cov:==>                                7%][Progress:====>                         14%] [Cov:==>                                7%][Progress:====>                         14%] [Cov:==>                                7%][Progress:====>                         14%] [Cov:==>                                7%][Progress:====>                         14%] [Cov:==>                                7%][Progress:====>                         14%] [Cov:==>                                7%][Progress:====>                         14%] [Cov:==>                                7%][Progress:====>                         14%] [Cov:==>                                7%][Progress:====>                         14%] [Cov:==>                                7%][Progress:====>                         14%] [Cov:==>                                7%][Progress:====>                         14%] [Cov:==>                                7%][Progress:====>                         14%] [Cov:==>                                7%][Progress:====>                         14%] [Cov:==>                                7%][Progress:====>                         14%] [Cov:==>                                7%][Progress:====>                         14%] [Cov:==>                                7%][Progress:====>                         14%] [Cov:==>                                7%][Progress:====>                         14%] [Cov:==>                                7%][Progress:====>                         14%] [Cov:==>                                7%][Progress:====>                         14%] [Cov:==>                                7%][Progress:====>                         14%] [Cov:==>                                7%][Progress:====>                         14%] [Cov:==>                                7%][Progress:====>                         15%] [Cov:==>                                7%][Progress:====>                         15%] [Cov:==>                                7%][Progress:====>                         15%] [Cov:==>                                7%][Progress:====>                         15%] [Cov:==>                                7%][Progress:====>                         15%] [Cov:==>                                7%][Progress:====>                         15%] [Cov:==>                                7%][Progress:====>                         15%] [Cov:==>                                7%][Progress:====>                         15%] [Cov:==>                                7%][Progress:====>                         15%] [Cov:==>                                7%][Progress:====>                         15%] [Cov:==>                                7%][Progress:====>                         15%] [Cov:==>                                7%][Progress:====>                         15%] [Cov:==>                                7%][Progress:====>                         15%] [Cov:==>                                7%][Progress:====>                         15%] [Cov:==>                                7%][Progress:====>                         15%] [Cov:==>                                7%][Progress:====>                         15%] [Cov:==>                                7%][Progress:====>                         15%] [Cov:==>                                7%][Progress:====>                         15%] [Cov:==>                                7%][Progress:====>                         16%] [Cov:==>                                7%][Progress:====>                         16%] [Cov:==>                                7%][Progress:====>                         16%] [Cov:==>                                7%][Progress:====>                         16%] [Cov:==>                                7%][Progress:====>                         16%] [Cov:==>                                7%][Progress:====>                         16%] [Cov:==>                                7%][Progress:====>                         16%] [Cov:==>                                7%][Progress:====>                         16%] [Cov:==>                                7%][Progress:====>                         16%] [Cov:==>                                7%][Progress:====>                         16%] [Cov:==>                                7%][Progress:====>                         16%] [Cov:==>                                7%][Progress:====>                         16%] [Cov:==>                                7%][Progress:====>                         16%] [Cov:==>                                7%][Progress:====>                         16%] [Cov:==>                                7%][Progress:====>                         16%] [Cov:==>                                7%][Progress:====>                         16%] [Cov:==>                                7%][Progress:====>                         16%] [Cov:==>                                7%][Progress:====>                         16%] [Cov:==>                                7%][Progress:====>                         16%] [Cov:==>                                7%][Progress:====>                         16%] [Cov:==>                                7%][Progress:====>                         16%] [Cov:==>                                7%][Progress:====>                         16%] [Cov:==>                                7%][Progress:=====>                        17%] [Cov:==>                                7%][Progress:=====>                        17%] [Cov:==>                                7%][Progress:=====>                        17%] [Cov:==>                                7%][Progress:=====>                        17%] [Cov:==>                                7%][Progress:=====>                        17%] [Cov:==>                                7%][Progress:=====>                        17%] [Cov:==>                                7%][Progress:=====>                        17%] [Cov:==>                                7%][Progress:=====>                        17%] [Cov:==>                                7%][Progress:=====>                        17%] [Cov:==>                                7%][Progress:=====>                        17%] [Cov:==>                                7%][Progress:=====>                        17%] [Cov:==>                                7%][Progress:=====>                        17%] [Cov:==>                                7%][Progress:=====>                        17%] [Cov:==>                                7%][Progress:=====>                        17%] [Cov:==>                                7%][Progress:=====>                        17%] [Cov:==>                                7%][Progress:=====>                        17%] [Cov:==>                                7%][Progress:=====>                        17%] [Cov:==>                                7%][Progress:=====>                        17%] [Cov:==>                                7%][Progress:=====>                        17%] [Cov:==>                                7%][Progress:=====>                        17%] [Cov:==>                                7%][Progress:=====>                        18%] [Cov:==>                                7%][Progress:=====>                        18%] [Cov:==>                                7%][Progress:=====>                        18%] [Cov:==>                                7%][Progress:=====>                        18%] [Cov:==>                                7%][Progress:=====>                        18%] [Cov:==>                                7%][Progress:=====>                        18%] [Cov:==>                                7%][Progress:=====>                        18%] [Cov:==>                                7%][Progress:=====>                        18%] [Cov:==>                                7%][Progress:=====>                        18%] [Cov:==>                                7%][Progress:=====>                        18%] [Cov:==>                                7%][Progress:=====>                        18%] [Cov:==>                                7%][Progress:=====>                        18%] [Cov:==>                                7%][Progress:=====>                        18%] [Cov:==>                                7%][Progress:=====>                        18%] [Cov:==>                                7%][Progress:=====>                        18%] [Cov:==>                                7%][Progress:=====>                        18%] [Cov:==>                                7%][Progress:=====>                        18%] [Cov:==>                                7%][Progress:=====>                        18%] [Cov:==>                                7%][Progress:=====>                        18%] [Cov:==>                                7%][Progress:=====>                        18%] [Cov:==>                                7%][Progress:=====>                        18%] [Cov:==>                                7%][Progress:=====>                        19%] [Cov:==>                                7%][Progress:=====>                        19%] [Cov:==>                                7%][Progress:=====>                        19%] [Cov:==>                                7%][Progress:=====>                        19%] [Cov:==>                                7%][Progress:=====>                        19%] [Cov:==>                                7%][Progress:=====>                        19%] [Cov:==>                                7%][Progress:=====>                        19%] [Cov:==>                                7%][Progress:=====>                        19%] [Cov:==>                                7%][Progress:=====>                        19%] [Cov:==>                                7%][Progress:=====>                        19%] [Cov:==>                                7%][Progress:=====>                        19%] [Cov:==>                                7%][Progress:=====>                        19%] [Cov:==>                                7%][Progress:=====>                        19%] [Cov:==>                                7%][Progress:=====>                        19%] [Cov:==>                                7%][Progress:=====>                        19%] [Cov:==>                                7%][Progress:=====>                        19%] [Cov:==>                                7%][Progress:=====>                        19%] [Cov:==>                                7%][Progress:=====>                        19%] [Cov:==>                                7%][Progress:======>                       20%] [Cov:==>                                7%][Progress:======>                       20%] [Cov:==>                                7%][Progress:======>                       20%] [Cov:==>                                7%][Progress:======>                       20%] [Cov:==>                                7%][Progress:======>                       20%] [Cov:==>                                7%][Progress:======>                       20%] [Cov:==>                                7%][Progress:======>                       20%] [Cov:==>                                7%][Progress:======>                       20%] [Cov:==>                                7%][Progress:======>                       20%] [Cov:==>                                7%][Progress:======>                       20%] [Cov:==>                                7%][Progress:======>                       20%] [Cov:==>                                7%][Progress:======>                       20%] [Cov:==>                                7%][Progress:======>                       20%] [Cov:==>                                7%][Progress:======>                       20%] [Cov:==>                                7%][Progress:======>                       20%] [Cov:==>                                7%][Progress:======>                       20%] [Cov:==>                                7%][Progress:======>                       20%] [Cov:==>                                7%][Progress:======>                       20%] [Cov:==>                                7%][Progress:======>                       21%] [Cov:==>                                7%][Progress:======>                       21%] [Cov:==>                                7%][Progress:======>                       21%] [Cov:==>                                7%][Progress:======>                       21%] [Cov:==>                                7%][Progress:======>                       21%] [Cov:==>                                7%][Progress:======>                       21%] [Cov:==>                                7%][Progress:======>                       21%] [Cov:==>                                7%][Progress:======>                       21%] [Cov:==>                                7%][Progress:======>                       21%] [Cov:==>                                7%][Progress:======>                       21%] [Cov:==>                                7%][Progress:======>                       21%] [Cov:==>                                7%][Progress:======>                       21%] [Cov:==>                                7%][Progress:======>                       21%] [Cov:==>                                7%][Progress:======>                       21%] [Cov:==>                                7%][Progress:======>                       21%] [Cov:==>                                7%][Progress:======>                       21%] [Cov:==>                                7%][Progress:======>                       21%] [Cov:==>                                7%][Progress:======>                       22%] [Cov:==>                                7%][Progress:======>                       22%] [Cov:==>                                7%][Progress:======>                       22%] [Cov:==>                                7%][Progress:======>                       22%] [Cov:==>                                7%][Progress:======>                       22%] [Cov:==>                                7%][Progress:======>                       22%] [Cov:==>                                7%][Progress:======>                       22%] [Cov:==>                                7%][Progress:======>                       22%] [Cov:==>                                7%][Progress:======>                       22%] [Cov:==>                                7%][Progress:======>                       22%] [Cov:==>                                7%][Progress:======>                       22%] [Cov:==>                                7%][Progress:======>                       22%] [Cov:==>                                7%][Progress:======>                       22%] [Cov:==>                                7%][Progress:======>                       22%] [Cov:==>                                7%][Progress:======>                       22%] [Cov:==>                                7%][Progress:======>                       22%] [Cov:==>                                7%][Progress:======>                       22%] [Cov:==>                                7%][Progress:======>                       22%] [Cov:==>                                7%][Progress:======>                       22%] [Cov:==>                                7%][Progress:======>                       22%] [Cov:==>                                7%][Progress:======>                       22%] [Cov:==>                                7%][Progress:======>                       22%] [Cov:==>                                7%][Progress:======>                       22%] [Cov:==>                                7%][Progress:======>                       23%] [Cov:==>                                7%][Progress:======>                       23%] [Cov:==>                                7%][Progress:======>                       23%] [Cov:==>                                7%][Progress:======>                       23%] [Cov:==>                                7%][Progress:======>                       23%] [Cov:==>                                7%][Progress:======>                       23%] [Cov:==>                                7%][Progress:======>                       23%] [Cov:==>                                7%][Progress:======>                       23%] [Cov:==>                                7%][Progress:======>                       23%] [Cov:==>                                7%][Progress:======>                       23%] [Cov:==>                                7%][Progress:======>                       23%] [Cov:==>                                7%][Progress:======>                       23%] [Cov:==>                                7%][Progress:======>                       23%] [Cov:==>                                7%][Progress:======>                       23%] [Cov:==>                                7%][Progress:======>                       23%] [Cov:==>                                7%][Progress:======>                       23%] [Cov:==>                                7%][Progress:======>                       23%] [Cov:==>                                7%][Progress:======>                       23%] [Cov:==>                                7%][Progress:======>                       23%] [Cov:==>                                7%][Progress:======>                       23%] [Cov:==>                                7%][Progress:=======>                      24%] [Cov:==>                                7%][Progress:=======>                      24%] [Cov:==>                                7%][Progress:=======>                      24%] [Cov:==>                                7%][Progress:=======>                      24%] [Cov:==>                                7%][Progress:=======>                      24%] [Cov:==>                                7%][Progress:=======>                      24%] [Cov:==>                                7%][Progress:=======>                      24%] [Cov:==>                                7%][Progress:=======>                      24%] [Cov:==>                                7%][Progress:=======>                      24%] [Cov:==>                                7%][Progress:=======>                      24%] [Cov:==>                                7%][Progress:=======>                      24%] [Cov:==>                                7%][Progress:=======>                      24%] [Cov:==>                                7%][Progress:=======>                      24%] [Cov:==>                                7%][Progress:=======>                      24%] [Cov:==>                                7%][Progress:=======>                      24%] [Cov:==>                                7%][Progress:=======>                      24%] [Cov:==>                                7%][Progress:=======>                      24%] [Cov:==>                                7%][Progress:=======>                      24%] [Cov:==>                                7%][Progress:=======>                      24%] [Cov:==>                                7%][Progress:=======>                      24%] [Cov:==>                                7%][Progress:=======>                      25%] [Cov:==>                                7%][Progress:=======>                      25%] [Cov:==>                                7%][Progress:=======>                      25%] [Cov:==>                                7%][Progress:=======>                      25%] [Cov:==>                                7%][Progress:=======>                      25%] [Cov:==>                                7%][Progress:=======>                      25%] [Cov:==>                                7%][Progress:=======>                      25%] [Cov:==>                                7%][Progress:=======>                      25%] [Cov:==>                                7%][Progress:=======>                      25%] [Cov:==>                                7%][Progress:=======>                      25%] [Cov:==>                                7%][Progress:=======>                      25%] [Cov:==>                                7%][Progress:=======>                      25%] [Cov:==>                                7%][Progress:=======>                      25%] [Cov:==>                                7%][Progress:=======>                      25%] [Cov:==>                                7%][Progress:=======>                      25%] [Cov:==>                                7%][Progress:=======>                      25%] [Cov:==>                                7%][Progress:=======>                      25%] [Cov:==>                                7%][Progress:=======>                      25%] [Cov:==>                                7%][Progress:=======>                      25%] [Cov:==>                                7%][Progress:=======>                      25%] [Cov:==>                                7%][Progress:=======>                      25%] [Cov:==>                                7%][Progress:=======>                      25%] [Cov:==>                                7%][Progress:=======>                      26%] [Cov:==>                                7%][Progress:=======>                      26%] [Cov:==>                                7%][Progress:=======>                      26%] [Cov:==>                                7%][Progress:=======>                      26%] [Cov:==========>                        30%][Progress:=======>                      26%] [Cov:===============>                   44%][Progress:=======>                      26%] [Cov:===============>                   44%][Progress:=======>                      26%] [Cov:================>                  46%][Progress:=======>                      26%] [Cov:================>                  46%][Progress:=======>                      26%] [Cov:================>                  46%][Progress:=======>                      26%] [Cov:==================>                52%][Progress:=======>                      26%] [Cov:==================>                54%][Progress:=======>                      26%] [Cov:==================>                54%][Progress:=======>                      26%] [Cov:==================>                54%][Progress:========>                     27%] [Cov:==================>                54%][Progress:========>                     27%] [Cov:==================>                54%][Progress:========>                     27%] [Cov:==================>                54%][Progress:========>                     27%] [Cov:==================>                54%][Progress:========>                     27%] [Cov:==================>                54%][Progress:========>                     27%] [Cov:==================>                54%][Progress:========>                     27%] [Cov:==================>                54%][Progress:========>                     27%] [Cov:==================>                54%][Progress:========>                     27%] [Cov:==================>                54%][Progress:========>                     28%] [Cov:==================>                54%][Progress:========>                     28%] [Cov:==================>                54%][Progress:========>                     28%] [Cov:==================>                54%][Progress:========>                     28%] [Cov:==================>                54%][Progress:========>                     28%] [Cov:==================>                54%][Progress:========>                     28%] [Cov:==================>                54%][Progress:========>                     28%] [Cov:==================>                54%][Progress:========>                     28%] [Cov:==================>                54%][Progress:========>                     28%] [Cov:==================>                54%][Progress:========>                     28%] [Cov:==================>                54%][Progress:========>                     28%] [Cov:==================>                54%][Progress:========>                     28%] [Cov:==================>                54%][Progress:========>                     28%] [Cov:==================>                54%][Progress:========>                     29%] [Cov:==================>                54%][Progress:========>                     29%] [Cov:==================>                54%][Progress:========>                     29%] [Cov:==================>                54%][Progress:========>                     29%] [Cov:==================>                54%][Progress:========>                     29%] [Cov:==================>                54%][Progress:========>                     29%] [Cov:==================>                54%][Progress:========>                     29%] [Cov:==================>                54%][Progress:========>                     29%] [Cov:==========================>        75%][Progress:========>                     29%] [Cov:==========================>        75%][Progress:========>                     29%] [Cov:==========================>        75%][Progress:=========>                    30%] [Cov:==========================>        75%][Progress:=========>                    30%] [Cov:==========================>        75%][Progress:=========>                    30%] [Cov:==========================>        75%][Progress:=========>                    30%] [Cov:==========================>        75%][Progress:=========>                    30%] [Cov:==========================>        75%][Progress:=========>                    30%] [Cov:===========================>       78%][Progress:=========>                    30%] [Cov:===========================>       78%][Progress:=========>                    30%] [Cov:===========================>       78%][Progress:=========>                    30%] [Cov:===========================>       78%][Progress:=========>                    30%] [Cov:===========================>       78%][Progress:=========>                    31%] [Cov:============================>      80%][Progress:=========>                    31%] [Cov:============================>      80%][Progress:=========>                    31%] [Cov:============================>      80%][Progress:=========>                    31%] [Cov:============================>      80%][Progress:=========>                    31%] [Cov:============================>      80%][Progress:=========>                    31%] [Cov:============================>      80%][Progress:=========>                    31%] [Cov:============================>      80%][Progress:=========>                    31%] [Cov:============================>      80%][Progress:=========>                    31%] [Cov:============================>      80%][Progress:=========>                    31%] [Cov:============================>      80%][Progress:=========>                    31%] [Cov:============================>      80%][Progress:=========>                    31%] [Cov:============================>      80%][Progress:=========>                    31%] [Cov:============================>      80%][Progress:=========>                    32%] [Cov:============================>      80%][Progress:=========>                    32%] [Cov:============================>      80%][Progress:=========>                    32%] [Cov:============================>      80%][Progress:=========>                    32%] [Cov:============================>      80%][Progress:=========>                    32%] [Cov:============================>      80%][Progress:=========>                    32%] [Cov:============================>      80%][Progress:=========>                    32%] [Cov:============================>      80%][Progress:=========>                    32%] [Cov:============================>      80%][Progress:=========>                    32%] [Cov:============================>      80%][Progress:=========>                    33%] [Cov:============================>      80%][Progress:=========>                    33%] [Cov:============================>      80%][Progress:=========>                    33%] [Cov:============================>      80%][Progress:=========>                    33%] [Cov:============================>      80%][Progress:=========>                    33%] [Cov:============================>      80%][Progress:=========>                    33%] [Cov:============================>      80%][Progress:=========>                    33%] [Cov:============================>      80%][Progress:=========>                    33%] [Cov:============================>      80%][Progress:=========>                    33%] [Cov:============================>      80%][Progress:=========>                    33%] [Cov:============================>      80%][Progress:=========>                    33%] [Cov:============================>      80%][Progress:=========>                    33%] [Cov:============================>      80%][Progress:==========>                   34%] [Cov:============================>      80%][Progress:==========>                   34%] [Cov:============================>      80%][Progress:==========>                   34%] [Cov:============================>      80%][Progress:==========>                   34%] [Cov:============================>      80%][Progress:==========>                   34%] [Cov:============================>      80%][Progress:==========>                   34%] [Cov:============================>      80%][Progress:==========>                   34%] [Cov:============================>      80%][Progress:==========>                   34%] [Cov:============================>      80%][Progress:==========>                   34%] [Cov:============================>      80%][Progress:==========>                   35%] [Cov:============================>      80%][Progress:==========>                   35%] [Cov:============================>      80%][Progress:==========>                   35%] [Cov:============================>      80%][Progress:==========>                   35%] [Cov:============================>      80%][Progress:==========>                   35%] [Cov:============================>      80%][Progress:==========>                   35%] [Cov:============================>      80%][Progress:==========>                   35%] [Cov:============================>      80%][Progress:==========>                   35%] [Cov:============================>      80%][Progress:==========>                   35%] [Cov:============================>      80%][Progress:==========>                   36%] [Cov:============================>      80%][Progress:==========>                   36%] [Cov:============================>      80%][Progress:==========>                   36%] [Cov:============================>      80%][Progress:==========>                   36%] [Cov:============================>      80%][Progress:==========>                   36%] [Cov:============================>      80%][Progress:==========>                   36%] [Cov:============================>      80%][Progress:==========>                   36%] [Cov:============================>      80%][Progress:==========>                   36%] [Cov:============================>      80%][Progress:==========>                   36%] [Cov:============================>      80%][Progress:==========>                   36%] [Cov:============================>      80%][Progress:==========>                   36%] [Cov:============================>      80%][Progress:===========>                  37%] [Cov:============================>      80%][Progress:===========>                  37%] [Cov:============================>      80%][Progress:===========>                  37%] [Cov:============================>      80%][Progress:===========>                  37%] [Cov:============================>      80%][Progress:===========>                  37%] [Cov:============================>      80%][Progress:===========>                  37%] [Cov:============================>      80%][Progress:===========>                  37%] [Cov:============================>      80%][Progress:===========>                  37%] [Cov:============================>      80%][Progress:===========>                  37%] [Cov:============================>      80%][Progress:===========>                  37%] [Cov:============================>      80%][Progress:===========>                  37%] [Cov:============================>      80%][Progress:===========>                  38%] [Cov:============================>      80%][Progress:===========>                  38%] [Cov:============================>      80%][Progress:===========>                  38%] [Cov:============================>      80%][Progress:===========>                  38%] [Cov:============================>      80%][Progress:===========>                  38%] [Cov:============================>      80%][Progress:===========>                  38%] [Cov:============================>      80%][Progress:===========>                  38%] [Cov:============================>      80%][Progress:===========>                  38%] [Cov:============================>      80%][Progress:===========>                  38%] [Cov:============================>      80%][Progress:===========>                  39%] [Cov:============================>      80%][Progress:===========>                  39%] [Cov:=============================>     83%][Progress:===========>                  39%] [Cov:=============================>     83%][Progress:===========>                  39%] [Cov:=============================>     83%][Progress:===========>                  39%] [Cov:=============================>     83%][Progress:===========>                  39%] [Cov:=============================>     83%][Progress:===========>                  39%] [Cov:=============================>     83%][Progress:===========>                  39%] [Cov:=============================>     83%][Progress:===========>                  39%] [Cov:=============================>     83%][Progress:===========>                  39%] [Cov:=============================>     83%][Progress:===========>                  39%] [Cov:=============================>     83%][Progress:============>                 40%] [Cov:=============================>     83%][Progress:============>                 40%] [Cov:=============================>     83%][Progress:============>                 40%] [Cov:=============================>     83%][Progress:============>                 40%] [Cov:=============================>     83%][Progress:============>                 40%] [Cov:=============================>     83%][Progress:============>                 40%] [Cov:=============================>     83%][Progress:============>                 40%] [Cov:=============================>     83%][Progress:============>                 40%] [Cov:=============================>     83%][Progress:============>                 40%] [Cov:=============================>     83%][Progress:============>                 40%] [Cov:=============================>     83%][Progress:============>                 40%] [Cov:=============================>     83%][Progress:============>                 40%] [Cov:=============================>     83%][Progress:============>                 40%] [Cov:=============================>     83%][Progress:============>                 41%] [Cov:=============================>     83%][Progress:============>                 41%] [Cov:=============================>     83%][Progress:============>                 41%] [Cov:=============================>     83%][Progress:============>                 41%] [Cov:=============================>     83%][Progress:============>                 41%] [Cov:=============================>     83%][Progress:============>                 41%] [Cov:=============================>     83%][Progress:============>                 41%] [Cov:=============================>     83%][Progress:============>                 41%] [Cov:=============================>     83%][Progress:============>                 41%] [Cov:=============================>     83%][Progress:============>                 41%] [Cov:=============================>     83%][Progress:============>                 41%] [Cov:=============================>     83%][Progress:============>                 41%] [Cov:=============================>     83%][Progress:============>                 41%] [Cov:=============================>     83%][Progress:============>                 41%] [Cov:=============================>     83%][Progress:============>                 41%] [Cov:=============================>     83%][Progress:============>                 41%] [Cov:=============================>     83%][Progress:============>                 42%] [Cov:=============================>     83%][Progress:============>                 42%] [Cov:=============================>     83%][Progress:============>                 42%] [Cov:=============================>     83%][Progress:============>                 42%] [Cov:=============================>     83%][Progress:============>                 42%] [Cov:=============================>     83%][Progress:============>                 42%] [Cov:=============================>     83%][Progress:============>                 42%] [Cov:=============================>     83%][Progress:============>                 42%] [Cov:=============================>     83%][Progress:============>                 42%] [Cov:=============================>     83%][Progress:============>                 42%] [Cov:=============================>     83%][Progress:============>                 42%] [Cov:=============================>     83%][Progress:============>                 43%] [Cov:=============================>     83%][Progress:============>                 43%] [Cov:=============================>     83%][Progress:============>                 43%] [Cov:=============================>     83%][Progress:============>                 43%] [Cov:=============================>     83%][Progress:============>                 43%] [Cov:=============================>     83%][Progress:============>                 43%] [Cov:=============================>     83%][Progress:============>                 43%] [Cov:=============================>     83%][Progress:============>                 43%] [Cov:=============================>     83%][Progress:============>                 43%] [Cov:=============================>     83%][Progress:============>                 43%] [Cov:=============================>     83%][Progress:============>                 43%] [Cov:=============================>     83%][Progress:=============>                44%] [Cov:=============================>     83%][Progress:=============>                44%] [Cov:=============================>     83%][Progress:=============>                44%] [Cov:=============================>     83%][Progress:=============>                44%] [Cov:=============================>     83%][Progress:=============>                44%] [Cov:=============================>     83%][Progress:=============>                44%] [Cov:=============================>     83%][Progress:=============>                44%] [Cov:=============================>     83%][Progress:=============>                44%] [Cov:=============================>     83%][Progress:=============>                44%] [Cov:=============================>     83%][Progress:=============>                44%] [Cov:=============================>     83%][Progress:=============>                44%] [Cov:=============================>     83%][Progress:=============>                44%] [Cov:=============================>     83%][Progress:=============>                44%] [Cov:=============================>     83%][Progress:=============>                44%] [Cov:=============================>     83%][Progress:=============>                44%] [Cov:=============================>     83%][Progress:=============>                44%] [Cov:=============================>     83%][Progress:=============>                44%] [Cov:=============================>     83%][Progress:=============>                44%] [Cov:=============================>     83%][Progress:=============>                45%] [Cov:=============================>     83%][Progress:=============>                45%] [Cov:=============================>     83%][Progress:=============>                45%] [Cov:=============================>     83%][Progress:=============>                45%] [Cov:=============================>     83%][Progress:=============>                45%] [Cov:=============================>     83%][Progress:=============>                45%] [Cov:=============================>     83%][Progress:=============>                45%] [Cov:=============================>     83%][Progress:=============>                45%] [Cov:=============================>     83%][Progress:=============>                45%] [Cov:=============================>     83%][Progress:=============>                45%] [Cov:=============================>     83%][Progress:=============>                45%] [Cov:=============================>     83%][Progress:=============>                45%] [Cov:=============================>     83%][Progress:=============>                45%] [Cov:=============================>     83%][Progress:=============>                46%] [Cov:=============================>     83%][Progress:=============>                46%] [Cov:=============================>     83%][Progress:=============>                46%] [Cov:=============================>     83%][Progress:=============>                46%] [Cov:=============================>     83%][Progress:=============>                46%] [Cov:=============================>     83%][Progress:=============>                46%] [Cov:=============================>     83%][Progress:=============>                46%] [Cov:=============================>     83%][Progress:=============>                46%] [Cov:=============================>     83%][Progress:=============>                46%] [Cov:=============================>     83%][Progress:=============>                46%] [Cov:=============================>     83%][Progress:=============>                46%] [Cov:=============================>     83%][Progress:=============>                46%] [Cov:=============================>     83%][Progress:==============>               47%] [Cov:=============================>     83%][Progress:==============>               47%] [Cov:=============================>     83%][Progress:==============>               47%] [Cov:=============================>     83%][Progress:==============>               47%] [Cov:=============================>     83%][Progress:==============>               47%] [Cov:=============================>     83%][Progress:==============>               47%] [Cov:=============================>     83%][Progress:==============>               47%] [Cov:=============================>     83%][Progress:==============>               47%] [Cov:=============================>     83%][Progress:==============>               47%] [Cov:=============================>     83%][Progress:==============>               47%] [Cov:=============================>     83%][Progress:==============>               47%] [Cov:=============================>     83%][Progress:==============>               47%] [Cov:=============================>     83%][Progress:==============>               47%] [Cov:=============================>     83%][Progress:==============>               48%] [Cov:=============================>     83%][Progress:==============>               48%] [Cov:=============================>     83%][Progress:==============>               48%] [Cov:=============================>     83%][Progress:==============>               48%] [Cov:=============================>     83%][Progress:==============>               48%] [Cov:=============================>     83%][Progress:==============>               48%] [Cov:=============================>     83%][Progress:==============>               48%] [Cov:=============================>     83%][Progress:==============>               48%] [Cov:=============================>     83%][Progress:==============>               48%] [Cov:=============================>     83%][Progress:==============>               48%] [Cov:=============================>     83%][Progress:==============>               48%] [Cov:=============================>     83%][Progress:==============>               49%] [Cov:=============================>     83%][Progress:==============>               49%] [Cov:=============================>     83%][Progress:==============>               49%] [Cov:=============================>     83%][Progress:==============>               49%] [Cov:=============================>     83%][Progress:==============>               49%] [Cov:=============================>     83%][Progress:==============>               49%] [Cov:=============================>     83%][Progress:==============>               49%] [Cov:=============================>     83%][Progress:==============>               49%] [Cov:=============================>     83%][Progress:==============>               49%] [Cov:=============================>     83%][Progress:==============>               49%] [Cov:=============================>     83%][Progress:==============>               49%] [Cov:=============================>     83%][Progress:===============>              50%] [Cov:=============================>     83%][Progress:===============>              50%] [Cov:=============================>     83%][Progress:===============>              50%] [Cov:=============================>     83%][Progress:===============>              50%] [Cov:=============================>     83%][Progress:===============>              50%] [Cov:=============================>     83%][Progress:===============>              50%] [Cov:=============================>     83%][Progress:===============>              50%] [Cov:=============================>     83%][Progress:===============>              50%] [Cov:=============================>     83%][Progress:===============>              50%] [Cov:=============================>     83%][Progress:===============>              50%] [Cov:=============================>     83%][Progress:===============>              50%] [Cov:=============================>     83%][Progress:===============>              50%] [Cov:=============================>     83%][Progress:===============>              51%] [Cov:=============================>     83%][Progress:===============>              51%] [Cov:=============================>     83%][Progress:===============>              51%] [Cov:=============================>     83%][Progress:===============>              51%] [Cov:=============================>     83%][Progress:===============>              51%] [Cov:=============================>     83%][Progress:===============>              51%] [Cov:=============================>     83%][Progress:===============>              51%] [Cov:=============================>     83%][Progress:===============>              51%] [Cov:=============================>     83%][Progress:===============>              51%] [Cov:=============================>     83%][Progress:===============>              51%] [Cov:=============================>     83%][Progress:===============>              51%] [Cov:=============================>     83%][Progress:===============>              51%] [Cov:=============================>     83%][Progress:===============>              52%] [Cov:=============================>     83%][Progress:===============>              52%] [Cov:=============================>     83%][Progress:===============>              52%] [Cov:=============================>     83%][Progress:===============>              52%] [Cov:=============================>     83%][Progress:===============>              52%] [Cov:=============================>     83%][Progress:===============>              52%] [Cov:=============================>     83%][Progress:===============>              52%] [Cov:=============================>     83%][Progress:===============>              52%] [Cov:=============================>     83%][Progress:===============>              52%] [Cov:=============================>     83%][Progress:===============>              52%] [Cov:=============================>     83%][Progress:===============>              52%] [Cov:=============================>     83%][Progress:===============>              52%] [Cov:=============================>     83%][Progress:===============>              52%] [Cov:=============================>     83%][Progress:===============>              52%] [Cov:=============================>     83%][Progress:===============>              52%] [Cov:=============================>     83%][Progress:===============>              53%] [Cov:=============================>     83%][Progress:===============>              53%] [Cov:=============================>     83%][Progress:===============>              53%] [Cov:=============================>     83%][Progress:===============>              53%] [Cov:=============================>     83%][Progress:===============>              53%] [Cov:=============================>     83%][Progress:===============>              53%] [Cov:=============================>     83%][Progress:===============>              53%] [Cov:=============================>     83%][Progress:===============>              53%] [Cov:=============================>     83%][Progress:===============>              53%] [Cov:=============================>     83%][Progress:===============>              53%] [Cov:=============================>     83%][Progress:===============>              53%] [Cov:=============================>     83%][Progress:===============>              53%] [Cov:=============================>     83%][Progress:===============>              53%] [Cov:=============================>     83%][Progress:================>             54%] [Cov:=============================>     84%][Progress:================>             54%] [Cov:=============================>     84%][Progress:================>             54%] [Cov:=============================>     84%][Progress:================>             54%] [Cov:=============================>     84%][Progress:================>             54%] [Cov:=============================>     84%][Progress:================>             54%] [Cov:=============================>     84%][Progress:================>             54%] [Cov:=============================>     84%][Progress:================>             54%] [Cov:=============================>     84%][Progress:================>             54%] [Cov:=============================>     84%][Progress:================>             54%] [Cov:=============================>     84%][Progress:================>             54%] [Cov:=============================>     84%][Progress:================>             54%] [Cov:=============================>     84%][Progress:================>             54%] [Cov:=============================>     84%][Progress:================>             54%] [Cov:=============================>     84%][Progress:================>             55%] [Cov:=============================>     84%][Progress:================>             55%] [Cov:=============================>     84%][Progress:================>             55%] [Cov:=============================>     84%][Progress:================>             55%] [Cov:=============================>     84%][Progress:================>             55%] [Cov:=============================>     84%][Progress:================>             55%] [Cov:=============================>     84%][Progress:================>             55%] [Cov:=============================>     84%][Progress:================>             55%] [Cov:=============================>     84%][Progress:================>             55%] [Cov:=============================>     84%][Progress:================>             55%] [Cov:=============================>     84%][Progress:================>             55%] [Cov:=============================>     84%][Progress:================>             55%] [Cov:=============================>     84%][Progress:================>             55%] [Cov:=============================>     84%][Progress:================>             55%] [Cov:=============================>     84%][Progress:================>             56%] [Cov:=============================>     84%][Progress:================>             56%] [Cov:=============================>     84%][Progress:================>             56%] [Cov:=============================>     84%][Progress:================>             56%] [Cov:=============================>     84%][Progress:================>             56%] [Cov:=============================>     84%][Progress:================>             56%] [Cov:=============================>     84%][Progress:================>             56%] [Cov:=============================>     84%][Progress:================>             56%] [Cov:=============================>     84%][Progress:================>             56%] [Cov:=============================>     84%][Progress:================>             56%] [Cov:=============================>     84%][Progress:=================>            57%] [Cov:=============================>     84%][Progress:=================>            57%] [Cov:=============================>     84%][Progress:=================>            57%] [Cov:=============================>     84%][Progress:=================>            57%] [Cov:=============================>     84%][Progress:=================>            57%] [Cov:=============================>     84%][Progress:=================>            57%] [Cov:=============================>     84%][Progress:=================>            57%] [Cov:=============================>     84%][Progress:=================>            57%] [Cov:=============================>     84%][Progress:=================>            57%] [Cov:=============================>     84%][Progress:=================>            57%] [Cov:=============================>     84%][Progress:=================>            57%] [Cov:=============================>     84%][Progress:=================>            57%] [Cov:=============================>     84%][Progress:=================>            58%] [Cov:=============================>     84%][Progress:=================>            58%] [Cov:=============================>     84%][Progress:=================>            58%] [Cov:=============================>     84%][Progress:=================>            58%] [Cov:=============================>     84%][Progress:=================>            58%] [Cov:=============================>     84%][Progress:=================>            58%] [Cov:=============================>     84%][Progress:=================>            58%] [Cov:=============================>     84%][Progress:=================>            58%] [Cov:=============================>     84%][Progress:=================>            58%] [Cov:=============================>     84%][Progress:=================>            58%] [Cov:=============================>     84%][Progress:=================>            58%] [Cov:=============================>     84%][Progress:=================>            58%] [Cov:=============================>     84%][Progress:=================>            59%] [Cov:=============================>     84%][Progress:=================>            59%] [Cov:=============================>     84%][Progress:=================>            59%] [Cov:=============================>     84%][Progress:=================>            59%] [Cov:=============================>     84%][Progress:=================>            59%] [Cov:=============================>     84%][Progress:=================>            59%] [Cov:=============================>     84%][Progress:=================>            59%] [Cov:=============================>     84%][Progress:=================>            59%] [Cov:=============================>     84%][Progress:=================>            59%] [Cov:=============================>     84%][Progress:=================>            59%] [Cov:=============================>     84%][Progress:=================>            59%] [Cov:=============================>     84%][Progress:=================>            59%] [Cov:=============================>     84%][Progress:=================>            59%] [Cov:=============================>     84%][Progress:=================>            59%] [Cov:=============================>     84%][Progress:==================>           60%] [Cov:=============================>     84%][Progress:==================>           60%] [Cov:=============================>     84%][Progress:==================>           60%] [Cov:=============================>     84%][Progress:==================>           60%] [Cov:=============================>     84%][Progress:==================>           60%] [Cov:=============================>     84%][Progress:==================>           60%] [Cov:=============================>     84%][Progress:==================>           60%] [Cov:=============================>     84%][Progress:==================>           60%] [Cov:=============================>     84%][Progress:==================>           60%] [Cov:=============================>     84%][Progress:==================>           60%] [Cov:=============================>     84%][Progress:==================>           60%] [Cov:=============================>     84%][Progress:==================>           60%] [Cov:=============================>     84%][Progress:==================>           61%] [Cov:=============================>     84%][Progress:==================>           61%] [Cov:=============================>     84%][Progress:==================>           61%] [Cov:=============================>     84%][Progress:==================>           61%] [Cov:=============================>     84%][Progress:==================>           61%] [Cov:=============================>     84%][Progress:==================>           61%] [Cov:=============================>     84%][Progress:==================>           61%] [Cov:=============================>     84%][Progress:==================>           61%] [Cov:=============================>     84%][Progress:==================>           61%] [Cov:=============================>     84%][Progress:==================>           61%] [Cov:=============================>     84%][Progress:==================>           61%] [Cov:=============================>     84%][Progress:==================>           61%] [Cov:=============================>     84%][Progress:==================>           61%] [Cov:=============================>     84%][Progress:==================>           61%] [Cov:=============================>     84%][Progress:==================>           62%] [Cov:=============================>     84%][Progress:==================>           62%] [Cov:=============================>     84%][Progress:==================>           62%] [Cov:=============================>     84%][Progress:==================>           62%] [Cov:=============================>     84%][Progress:==================>           62%] [Cov:=============================>     84%][Progress:==================>           62%] [Cov:=============================>     84%][Progress:==================>           62%] [Cov:=============================>     84%][Progress:==================>           62%] [Cov:=============================>     84%][Progress:==================>           62%] [Cov:=============================>     84%][Progress:==================>           62%] [Cov:=============================>     84%][Progress:==================>           62%] [Cov:=============================>     84%][Progress:==================>           62%] [Cov:=============================>     84%][Progress:==================>           63%] [Cov:=============================>     84%][Progress:==================>           63%] [Cov:=============================>     84%][Progress:==================>           63%] [Cov:=============================>     84%][Progress:==================>           63%] [Cov:=============================>     84%][Progress:==================>           63%] [Cov:=============================>     84%][Progress:==================>           63%] [Cov:=============================>     84%][Progress:==================>           63%] [Cov:=============================>     84%][Progress:==================>           63%] [Cov:=============================>     84%][Progress:==================>           63%] [Cov:=============================>     84%][Progress:==================>           63%] [Cov:=============================>     84%][Progress:==================>           63%] [Cov:=============================>     84%][Progress:==================>           63%] [Cov:=============================>     84%][Progress:==================>           63%] [Cov:=============================>     84%][Progress:==================>           63%] [Cov:=============================>     84%][Progress:==================>           63%] [Cov:=============================>     84%][Progress:==================>           63%] [Cov:=============================>     84%][Progress:===================>          64%] [Cov:=============================>     84%][Progress:===================>          64%] [Cov:=============================>     84%][Progress:===================>          64%] [Cov:=============================>     84%][Progress:===================>          64%] [Cov:=============================>     84%][Progress:===================>          64%] [Cov:=============================>     84%][Progress:===================>          64%] [Cov:=============================>     84%][Progress:===================>          64%] [Cov:=============================>     84%][Progress:===================>          64%] [Cov:=============================>     84%][Progress:===================>          64%] [Cov:=============================>     84%][Progress:===================>          64%] [Cov:=============================>     84%][Progress:===================>          64%] [Cov:=============================>     84%][Progress:===================>          64%] [Cov:=============================>     84%][Progress:===================>          65%] [Cov:=============================>     84%][Progress:===================>          65%] [Cov:=============================>     84%][Progress:===================>          65%] [Cov:=============================>     84%][Progress:===================>          65%] [Cov:=============================>     84%][Progress:===================>          65%] [Cov:=============================>     84%][Progress:===================>          65%] [Cov:=============================>     84%][Progress:===================>          65%] [Cov:=============================>     84%][Progress:===================>          65%] [Cov:=============================>     84%][Progress:===================>          65%] [Cov:=============================>     84%][Progress:===================>          65%] [Cov:=============================>     84%][Progress:===================>          65%] [Cov:=============================>     84%][Progress:===================>          66%] [Cov:=============================>     84%][Progress:===================>          66%] [Cov:=============================>     84%][Progress:===================>          66%] [Cov:=============================>     84%][Progress:===================>          66%] [Cov:=============================>     84%][Progress:===================>          66%] [Cov:=============================>     84%][Progress:===================>          66%] [Cov:=============================>     84%][Progress:===================>          66%] [Cov:=============================>     84%][Progress:===================>          66%] [Cov:=============================>     84%][Progress:===================>          66%] [Cov:=============================>     84%][Progress:===================>          66%] [Cov:=============================>     84%][Progress:===================>          66%] [Cov:=============================>     84%][Progress:====================>         67%] [Cov:=============================>     84%][Progress:====================>         67%] [Cov:=============================>     84%][Progress:====================>         67%] [Cov:=============================>     84%][Progress:====================>         67%] [Cov:=============================>     84%][Progress:====================>         67%] [Cov:=============================>     84%][Progress:====================>         67%] [Cov:=============================>     84%][Progress:====================>         67%] [Cov:=============================>     84%][Progress:====================>         67%] [Cov:=============================>     84%][Progress:====================>         67%] [Cov:=============================>     84%][Progress:====================>         67%] [Cov:=============================>     84%][Progress:====================>         67%] [Cov:=============================>     84%][Progress:====================>         68%] [Cov:=============================>     84%][Progress:====================>         68%] [Cov:=============================>     84%][Progress:====================>         68%] [Cov:=============================>     84%][Progress:====================>         68%] [Cov:=============================>     84%][Progress:====================>         68%] [Cov:=============================>     84%][Progress:====================>         68%] [Cov:=============================>     84%][Progress:====================>         68%] [Cov:=============================>     84%][Progress:====================>         68%] [Cov:=============================>     84%][Progress:====================>         68%] [Cov:=============================>     84%][Progress:====================>         68%] [Cov:=============================>     84%][Progress:====================>         68%] [Cov:=============================>     84%][Progress:====================>         68%] [Cov:=============================>     84%][Progress:====================>         68%] [Cov:=============================>     84%][Progress:====================>         69%] [Cov:=============================>     84%][Progress:====================>         69%] [Cov:=============================>     84%][Progress:====================>         69%] [Cov:=============================>     84%][Progress:====================>         69%] [Cov:=============================>     84%][Progress:====================>         69%] [Cov:=============================>     84%][Progress:====================>         69%] [Cov:=============================>     84%][Progress:====================>         69%] [Cov:=============================>     84%][Progress:====================>         69%] [Cov:=============================>     84%][Progress:====================>         69%] [Cov:=============================>     84%][Progress:====================>         69%] [Cov:=============================>     84%][Progress:====================>         69%] [Cov:=============================>     84%][Progress:====================>         69%] [Cov:=============================>     84%][Progress:====================>         69%] [Cov:=============================>     84%][Progress:====================>         69%] [Cov:=============================>     84%][Progress:====================>         69%] [Cov:=============================>     84%][Progress:====================>         69%] [Cov:=============================>     84%][Progress:====================>         69%] [Cov:=============================>     84%][Progress:====================>         69%] [Cov:=============================>     84%][Progress:=====================>        70%] [Cov:=============================>     84%][Progress:=====================>        70%] [Cov:=============================>     84%][Progress:=====================>        70%] [Cov:=============================>     84%][Progress:=====================>        70%] [Cov:=============================>     84%][Progress:=====================>        70%] [Cov:=============================>     84%][Progress:=====================>        70%] [Cov:=============================>     84%][Progress:=====================>        70%] [Cov:=============================>     84%][Progress:=====================>        70%] [Cov:=============================>     84%][Progress:=====================>        70%] [Cov:=============================>     84%][Progress:=====================>        70%] [Cov:=============================>     84%][Progress:=====================>        70%] [Cov:=============================>     84%][Progress:=====================>        70%] [Cov:=============================>     84%][Progress:=====================>        70%] [Cov:=============================>     84%][Progress:=====================>        70%] [Cov:=============================>     84%][Progress:=====================>        70%] [Cov:=============================>     84%][Progress:=====================>        71%] [Cov:=============================>     84%][Progress:=====================>        71%] [Cov:=============================>     84%][Progress:=====================>        71%] [Cov:=============================>     84%][Progress:=====================>        71%] [Cov:=============================>     84%][Progress:=====================>        71%] [Cov:=============================>     84%][Progress:=====================>        71%] [Cov:=============================>     84%][Progress:=====================>        71%] [Cov:=============================>     84%][Progress:=====================>        71%] [Cov:=============================>     84%][Progress:=====================>        71%] [Cov:=============================>     84%][Progress:=====================>        71%] [Cov:=============================>     84%][Progress:=====================>        71%] [Cov:=============================>     84%][Progress:=====================>        71%] [Cov:=============================>     84%][Progress:=====================>        71%] [Cov:=============================>     84%][Progress:=====================>        71%] [Cov:=============================>     84%][Progress:=====================>        71%] [Cov:=============================>     84%][Progress:=====================>        71%] [Cov:=============================>     84%][Progress:=====================>        71%] [Cov:=============================>     84%][Progress:=====================>        71%] [Cov:=============================>     84%][Progress:=====================>        71%] [Cov:=============================>     84%][Progress:=====================>        71%] [Cov:=============================>     84%][Progress:=====================>        71%] [Cov:=============================>     84%][Progress:=====================>        72%] [Cov:=============================>     84%][Progress:=====================>        72%] [Cov:=============================>     84%][Progress:=====================>        72%] [Cov:=============================>     84%][Progress:=====================>        72%] [Cov:=============================>     84%][Progress:=====================>        72%] [Cov:=============================>     84%][Progress:=====================>        72%] [Cov:=============================>     84%][Progress:=====================>        72%] [Cov:=============================>     84%][Progress:=====================>        72%] [Cov:=============================>     84%][Progress:=====================>        72%] [Cov:=============================>     84%][Progress:=====================>        72%] [Cov:=============================>     84%][Progress:=====================>        72%] [Cov:=============================>     84%][Progress:=====================>        72%] [Cov:=============================>     84%][Progress:=====================>        72%] [Cov:=============================>     84%][Progress:=====================>        72%] [Cov:=============================>     84%][Progress:=====================>        73%] [Cov:=============================>     84%][Progress:=====================>        73%] [Cov:=============================>     84%][Progress:=====================>        73%] [Cov:=============================>     84%][Progress:=====================>        73%] [Cov:=============================>     84%][Progress:=====================>        73%] [Cov:=============================>     84%][Progress:=====================>        73%] [Cov:=============================>     84%][Progress:=====================>        73%] [Cov:=============================>     84%][Progress:=====================>        73%] [Cov:=============================>     84%][Progress:=====================>        73%] [Cov:=============================>     84%][Progress:=====================>        73%] [Cov:=============================>     84%][Progress:=====================>        73%] [Cov:=============================>     84%][Progress:=====================>        73%] [Cov:=============================>     84%][Progress:=====================>        73%] [Cov:=============================>     84%][Progress:=====================>        73%] [Cov:=============================>     84%][Progress:======================>       74%] [Cov:=============================>     84%][Progress:======================>       74%] [Cov:=============================>     84%][Progress:======================>       74%] [Cov:=============================>     84%][Progress:======================>       74%] [Cov:=============================>     84%][Progress:======================>       74%] [Cov:=============================>     84%][Progress:======================>       74%] [Cov:=============================>     84%][Progress:======================>       74%] [Cov:=============================>     84%][Progress:======================>       74%] [Cov:=============================>     84%][Progress:======================>       74%] [Cov:=============================>     84%][Progress:======================>       74%] [Cov:=============================>     84%][Progress:======================>       74%] [Cov:=============================>     84%][Progress:======================>       74%] [Cov:=============================>     84%][Progress:======================>       75%] [Cov:=============================>     84%][Progress:======================>       75%] [Cov:=============================>     84%][Progress:======================>       75%] [Cov:=============================>     84%][Progress:======================>       75%] [Cov:=============================>     84%][Progress:======================>       75%] [Cov:=============================>     84%][Progress:======================>       75%] [Cov:=============================>     84%][Progress:======================>       75%] [Cov:=============================>     84%][Progress:======================>       75%] [Cov:=============================>     84%][Progress:======================>       75%] [Cov:=============================>     84%][Progress:======================>       75%] [Cov:=============================>     84%][Progress:======================>       75%] [Cov:=============================>     84%][Progress:======================>       75%] [Cov:=============================>     84%][Progress:======================>       75%] [Cov:=============================>     84%][Progress:======================>       75%] [Cov:=============================>     84%][Progress:======================>       75%] [Cov:=============================>     84%][Progress:======================>       76%] [Cov:=============================>     84%][Progress:======================>       76%] [Cov:=============================>     84%][Progress:======================>       76%] [Cov:=============================>     84%][Progress:======================>       76%] [Cov:=============================>     84%][Progress:======================>       76%] [Cov:=============================>     84%][Progress:======================>       76%] [Cov:=============================>     84%][Progress:======================>       76%] [Cov:=============================>     84%][Progress:======================>       76%] [Cov:=============================>     84%][Progress:======================>       76%] [Cov:=============================>     84%][Progress:======================>       76%] [Cov:=============================>     84%][Progress:======================>       76%] [Cov:=============================>     84%][Progress:=======================>      77%] [Cov:=============================>     84%][Progress:=======================>      77%] [Cov:=============================>     84%][Progress:=======================>      77%] [Cov:=============================>     84%][Progress:=======================>      77%] [Cov:=============================>     84%][Progress:=======================>      77%] [Cov:=============================>     84%][Progress:=======================>      77%] [Cov:=============================>     84%][Progress:=======================>      77%] [Cov:=============================>     84%][Progress:=======================>      77%] [Cov:=============================>     84%][Progress:=======================>      77%] [Cov:=============================>     84%][Progress:=======================>      77%] [Cov:=============================>     84%][Progress:=======================>      77%] [Cov:=============================>     84%][Progress:=======================>      77%] [Cov:=============================>     84%][Progress:=======================>      78%] [Cov:=============================>     84%][Progress:=======================>      78%] [Cov:=============================>     84%][Progress:=======================>      78%] [Cov:=============================>     84%][Progress:=======================>      78%] [Cov:=============================>     84%][Progress:=======================>      78%] [Cov:=============================>     84%][Progress:=======================>      78%] [Cov:=============================>     84%][Progress:=======================>      78%] [Cov:=============================>     84%][Progress:=======================>      78%] [Cov:=============================>     84%][Progress:=======================>      78%] [Cov:=============================>     84%][Progress:=======================>      78%] [Cov:=============================>     84%][Progress:=======================>      78%] [Cov:=============================>     84%][Progress:=======================>      78%] [Cov:=============================>     84%][Progress:=======================>      79%] [Cov:=============================>     84%][Progress:=======================>      79%] [Cov:=============================>     84%][Progress:=======================>      79%] [Cov:=============================>     84%][Progress:=======================>      79%] [Cov:=============================>     84%][Progress:=======================>      79%] [Cov:=============================>     84%][Progress:=======================>      79%] [Cov:=============================>     84%][Progress:=======================>      79%] [Cov:=============================>     84%][Progress:=======================>      79%] [Cov:=============================>     84%][Progress:=======================>      79%] [Cov:=============================>     84%][Progress:=======================>      79%] [Cov:=============================>     84%][Progress:=======================>      79%] [Cov:=============================>     84%][Progress:=======================>      79%] [Cov:=============================>     84%][Progress:=======================>      79%] [Cov:=============================>     84%][Progress:========================>     80%] [Cov:=============================>     84%][Progress:========================>     80%] [Cov:=============================>     84%][Progress:========================>     80%] [Cov:=============================>     84%][Progress:========================>     80%] [Cov:=============================>     84%][Progress:========================>     80%] [Cov:=============================>     84%][Progress:========================>     80%] [Cov:=============================>     84%][Progress:========================>     80%] [Cov:=============================>     84%][Progress:========================>     80%] [Cov:=============================>     84%][Progress:========================>     80%] [Cov:=============================>     84%][Progress:========================>     80%] [Cov:=============================>     84%][Progress:========================>     80%] [Cov:=============================>     84%][Progress:========================>     81%] [Cov:=============================>     84%][Progress:========================>     81%] [Cov:=============================>     84%][Progress:========================>     81%] [Cov:=============================>     84%][Progress:========================>     81%] [Cov:=============================>     84%][Progress:========================>     81%] [Cov:=============================>     84%][Progress:========================>     81%] [Cov:=============================>     84%][Progress:========================>     81%] [Cov:=============================>     84%][Progress:========================>     81%] [Cov:=============================>     84%][Progress:========================>     81%] [Cov:=============================>     84%][Progress:========================>     81%] [Cov:=============================>     84%][Progress:========================>     81%] [Cov:=============================>     84%][Progress:========================>     81%] [Cov:=============================>     84%][Progress:========================>     82%] [Cov:=============================>     84%][Progress:========================>     82%] [Cov:=============================>     84%][Progress:========================>     82%] [Cov:=============================>     84%][Progress:========================>     82%] [Cov:=============================>     84%][Progress:========================>     82%] [Cov:=============================>     84%][Progress:========================>     82%] [Cov:=============================>     84%][Progress:========================>     82%] [Cov:=============================>     84%][Progress:========================>     82%] [Cov:=============================>     84%][Progress:========================>     82%] [Cov:=============================>     84%][Progress:========================>     82%] [Cov:=============================>     84%][Progress:========================>     82%] [Cov:=============================>     84%][Progress:========================>     83%] [Cov:=============================>     84%][Progress:========================>     83%] [Cov:=============================>     84%][Progress:========================>     83%] [Cov:=============================>     84%][Progress:========================>     83%] [Cov:=============================>     84%][Progress:========================>     83%] [Cov:=============================>     84%][Progress:========================>     83%] [Cov:=============================>     84%][Progress:========================>     83%] [Cov:=============================>     84%][Progress:========================>     83%] [Cov:=============================>     84%][Progress:========================>     83%] [Cov:=============================>     84%][Progress:========================>     83%] [Cov:=============================>     84%][Progress:========================>     83%] [Cov:=============================>     84%][Progress:========================>     83%] [Cov:=============================>     84%][Progress:=========================>    84%] [Cov:=============================>     84%][Progress:=========================>    84%] [Cov:=============================>     84%][Progress:=========================>    84%] [Cov:=============================>     84%][Progress:=========================>    84%] [Cov:=============================>     84%][Progress:=========================>    84%] [Cov:=============================>     84%][Progress:=========================>    84%] [Cov:=============================>     84%][Progress:=========================>    84%] [Cov:=============================>     84%][Progress:=========================>    84%] [Cov:=============================>     84%][Progress:=========================>    84%] [Cov:=============================>     84%][Progress:=========================>    84%] [Cov:=============================>     84%][Progress:=========================>    84%] [Cov:=============================>     84%][Progress:=========================>    84%] [Cov:=============================>     84%][Progress:=========================>    85%] [Cov:=============================>     84%][Progress:=========================>    85%] [Cov:=============================>     84%][Progress:=========================>    85%] [Cov:=============================>     84%][Progress:=========================>    85%] [Cov:=============================>     84%][Progress:=========================>    85%] [Cov:=============================>     84%][Progress:=========================>    85%] [Cov:=============================>     84%][Progress:=========================>    85%] [Cov:=============================>     84%][Progress:=========================>    85%] [Cov:=============================>     84%][Progress:=========================>    85%] [Cov:=============================>     84%][Progress:=========================>    85%] [Cov:=============================>     84%][Progress:=========================>    85%] [Cov:=============================>     84%][Progress:=========================>    86%] [Cov:=============================>     84%][Progress:=========================>    86%] [Cov:=============================>     84%][Progress:=========================>    86%] [Cov:=============================>     84%][Progress:=========================>    86%] [Cov:=============================>     84%][Progress:=========================>    86%] [Cov:=============================>     84%][Progress:=========================>    86%] [Cov:=============================>     84%][Progress:=========================>    86%] [Cov:=============================>     84%][Progress:=========================>    86%] [Cov:=============================>     84%][Progress:=========================>    86%] [Cov:=============================>     84%][Progress:=========================>    86%] [Cov:=============================>     84%][Progress:=========================>    86%] [Cov:=============================>     84%][Progress:=========================>    86%] [Cov:=============================>     84%][Progress:=========================>    86%] [Cov:=============================>     84%][Progress:==========================>   87%] [Cov:=============================>     84%][Progress:==========================>   87%] [Cov:=============================>     84%][Progress:==========================>   87%] [Cov:=============================>     84%][Progress:==========================>   87%] [Cov:=============================>     84%][Progress:==========================>   87%] [Cov:=============================>     84%][Progress:==========================>   87%] [Cov:=============================>     84%][Progress:==========================>   87%] [Cov:=============================>     84%][Progress:==========================>   87%] [Cov:=============================>     84%][Progress:==========================>   87%] [Cov:=============================>     84%][Progress:==========================>   87%] [Cov:=============================>     84%][Progress:==========================>   87%] [Cov:=============================>     84%][Progress:==========================>   87%] [Cov:=============================>     84%][Progress:==========================>   87%] [Cov:=============================>     84%][Progress:==========================>   87%] [Cov:=============================>     84%][Progress:==========================>   88%] [Cov:=============================>     84%][Progress:==========================>   88%] [Cov:=============================>     84%][Progress:==========================>   88%] [Cov:=============================>     84%][Progress:==========================>   88%] [Cov:=============================>     84%][Progress:==========================>   88%] [Cov:=============================>     84%][Progress:==========================>   88%] [Cov:=============================>     84%][Progress:==========================>   88%] [Cov:=============================>     84%][Progress:==========================>   88%] [Cov:=============================>     84%][Progress:==========================>   88%] [Cov:=============================>     84%][Progress:==========================>   88%] [Cov:=============================>     84%][Progress:==========================>   88%] [Cov:=============================>     84%][Progress:==========================>   88%] [Cov:=============================>     84%][Progress:==========================>   88%] [Cov:=============================>     84%][Progress:==========================>   88%] [Cov:=============================>     84%][Progress:==========================>   88%] [Cov:=============================>     84%][Progress:==========================>   88%] [Cov:=============================>     84%][Progress:==========================>   88%] [Cov:=============================>     84%][Progress:==========================>   88%] [Cov:=============================>     84%][Progress:==========================>   89%] [Cov:=============================>     84%][Progress:==========================>   89%] [Cov:=============================>     84%][Progress:==========================>   89%] [Cov:=============================>     84%][Progress:==========================>   89%] [Cov:=============================>     84%][Progress:==========================>   89%] [Cov:=============================>     84%][Progress:==========================>   89%] [Cov:=============================>     84%][Progress:==========================>   89%] [Cov:=============================>     84%][Progress:==========================>   89%] [Cov:=============================>     84%][Progress:==========================>   89%] [Cov:=============================>     84%][Progress:==========================>   89%] [Cov:=============================>     84%][Progress:==========================>   89%] [Cov:=============================>     84%][Progress:==========================>   89%] [Cov:=============================>     84%][Progress:==========================>   89%] [Cov:=============================>     84%][Progress:==========================>   89%] [Cov:=============================>     84%][Progress:===========================>  90%] [Cov:=============================>     84%][Progress:===========================>  90%] [Cov:=============================>     84%][Progress:===========================>  90%] [Cov:=============================>     84%][Progress:===========================>  90%] [Cov:=============================>     84%][Progress:===========================>  90%] [Cov:=============================>     84%][Progress:===========================>  90%] [Cov:=============================>     84%][Progress:===========================>  90%] [Cov:=============================>     84%][Progress:===========================>  90%] [Cov:=============================>     84%][Progress:===========================>  90%] [Cov:=============================>     84%][Progress:===========================>  90%] [Cov:=============================>     84%][Progress:===========================>  90%] [Cov:=============================>     84%][Progress:===========================>  90%] [Cov:=============================>     84%][Progress:===========================>  91%] [Cov:=============================>     84%][Progress:===========================>  91%] [Cov:=============================>     84%][Progress:===========================>  91%] [Cov:=============================>     84%][Progress:===========================>  91%] [Cov:=============================>     84%][Progress:===========================>  91%] [Cov:=============================>     84%][Progress:===========================>  91%] [Cov:=============================>     84%][Progress:===========================>  91%] [Cov:=============================>     84%][Progress:===========================>  91%] [Cov:=============================>     84%][Progress:===========================>  91%] [Cov:=============================>     84%][Progress:===========================>  91%] [Cov:=============================>     84%][Progress:===========================>  91%] [Cov:=============================>     84%][Progress:===========================>  91%] [Cov:=============================>     84%][Progress:===========================>  91%] [Cov:=============================>     84%][Progress:===========================>  91%] [Cov:=============================>     84%][Progress:===========================>  92%] [Cov:=============================>     84%][Progress:===========================>  92%] [Cov:=============================>     84%][Progress:===========================>  92%] [Cov:=============================>     84%][Progress:===========================>  92%] [Cov:=============================>     84%][Progress:===========================>  92%] [Cov:=============================>     84%][Progress:===========================>  92%] [Cov:=============================>     84%][Progress:===========================>  92%] [Cov:=============================>     84%][Progress:===========================>  92%] [Cov:=============================>     84%][Progress:===========================>  92%] [Cov:=============================>     84%][Progress:===========================>  92%] [Cov:=============================>     84%][Progress:===========================>  92%] [Cov:=============================>     84%][Progress:===========================>  92%] [Cov:=============================>     84%][Progress:===========================>  93%] [Cov:=============================>     84%][Progress:===========================>  93%] [Cov:=============================>     84%][Progress:===========================>  93%] [Cov:=============================>     84%][Progress:===========================>  93%] [Cov:=============================>     84%][Progress:===========================>  93%] [Cov:=============================>     84%][Progress:===========================>  93%] [Cov:=============================>     84%][Progress:===========================>  93%] [Cov:=============================>     84%][Progress:===========================>  93%] [Cov:=============================>     84%][Progress:===========================>  93%] [Cov:=============================>     84%][Progress:===========================>  93%] [Cov:=============================>     84%][Progress:===========================>  93%] [Cov:=============================>     84%][Progress:===========================>  93%] [Cov:=============================>     84%][Progress:============================> 94%] [Cov:=============================>     84%][Progress:============================> 94%] [Cov:=============================>     84%][Progress:============================> 94%] [Cov:=============================>     84%][Progress:============================> 94%] [Cov:=============================>     84%][Progress:============================> 94%] [Cov:=============================>     84%][Progress:============================> 94%] [Cov:=============================>     84%][Progress:============================> 94%] [Cov:=============================>     84%][Progress:============================> 94%] [Cov:=============================>     84%][Progress:============================> 94%] [Cov:=============================>     84%][Progress:============================> 94%] [Cov:=============================>     84%][Progress:============================> 94%] [Cov:=============================>     84%][Progress:============================> 94%] [Cov:=============================>     84%][Progress:============================> 95%] [Cov:=============================>     84%][Progress:============================> 95%] [Cov:=============================>     84%][Progress:============================> 95%] [Cov:=============================>     84%][Progress:============================> 95%] [Cov:=============================>     84%][Progress:============================> 95%] [Cov:=============================>     84%][Progress:============================> 95%] [Cov:=============================>     84%][Progress:============================> 95%] [Cov:=============================>     84%][Progress:============================> 95%] [Cov:=============================>     84%][Progress:============================> 95%] [Cov:=============================>     84%][Progress:============================> 95%] [Cov:=============================>     84%][Progress:============================> 95%] [Cov:=============================>     84%][Progress:============================> 96%] [Cov:=============================>     84%][Progress:============================> 96%] [Cov:=============================>     84%][Progress:============================> 96%] [Cov:=============================>     84%][Progress:============================> 96%] [Cov:=============================>     84%][Progress:============================> 96%] [Cov:=============================>     84%][Progress:============================> 96%] [Cov:=============================>     84%][Progress:============================> 96%] [Cov:=============================>     84%][Progress:============================> 96%] [Cov:=============================>     84%][Progress:============================> 96%] [Cov:=============================>     84%][Progress:============================> 96%] [Cov:=============================>     84%][Progress:============================> 96%] [Cov:=============================>     84%][Progress:============================> 96%] [Cov:=============================>     84%][Progress:=============================>97%] [Cov:=============================>     84%][Progress:=============================>97%] [Cov:=============================>     84%][Progress:=============================>97%] [Cov:=============================>     84%][Progress:=============================>97%] [Cov:=============================>     84%][Progress:=============================>97%] [Cov:=============================>     84%][Progress:=============================>97%] [Cov:=============================>     84%][Progress:=============================>97%] [Cov:=============================>     84%][Progress:=============================>97%] [Cov:=============================>     84%][Progress:=============================>97%] [Cov:=============================>     84%][Progress:=============================>97%] [Cov:=============================>     84%][Progress:=============================>97%] [Cov:=============================>     84%][Progress:=============================>97%] [Cov:=============================>     84%][Progress:=============================>97%] [Cov:=============================>     84%][Progress:=============================>98%] [Cov:=============================>     84%][Progress:=============================>98%] [Cov:=============================>     84%][Progress:=============================>98%] [Cov:=============================>     84%][Progress:=============================>98%] [Cov:=============================>     84%][Progress:=============================>98%] [Cov:=============================>     84%][Progress:=============================>98%] [Cov:=============================>     84%][Progress:=============================>98%] [Cov:=============================>     84%][Progress:=============================>98%] [Cov:=============================>     84%][Progress:=============================>98%] [Cov:=============================>     84%][Progress:=============================>98%] [Cov:=============================>     84%][Progress:=============================>98%] [Cov:=============================>     84%][Progress:=============================>98%] [Cov:=============================>     84%][Progress:=============================>98%] [Cov:=============================>     84%][Progress:=============================>99%] [Cov:=============================>     84%][Progress:=============================>99%] [Cov:=============================>     84%][Progress:=============================>99%] [Cov:=============================>     84%][Progress:=============================>99%] [Cov:=============================>     84%][Progress:=============================>99%] [Cov:=============================>     84%][Progress:=============================>99%] [Cov:=============================>     84%][Progress:=============================>99%] [Cov:=============================>     84%][Progress:=============================>99%] [Cov:=============================>     84%][Progress:=============================>99%] [Cov:=============================>     84%][Progress:=============================>99%] [Cov:=============================>     84%][Progress:=============================>99%] [Cov:=============================>     84%][Progress:=============================>99%] [Cov:=============================>     84%][Progress:=============================>99%] [Cov:=============================>     84%][Progress:==============================100%] [Cov:=============================>     84%][Progress:==============================100%] [Cov:=============================>     84%][Progress:==============================100%] [Cov:=============================>     84%][Progress:==============================100%] [Cov:=============================>     84%][Progress:==============================100%] [Cov:=============================>     84%][Progress:==============================100%] [Cov:=============================>     84%][Progress:==============================100%] [Cov:=============================>     84%][Progress:==============================100%] [Cov:=============================>     84%]
* Search finished after 201s and 1408 generations, 407297 statements, best individual has fitness: 13.0
* Generated before the refinement 7 tests with total length 68
statement is: org.evosuite.runtime.mock.java.io.MockFile(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.evosuite.runtime.mock.java.io.MockFile
statement code is: MockFile mockFile = new MockFile("")
statement is: fr.pingtimeout.jtail.io.index.RamFileIndex(Ljava/io/File;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class fr.pingtimeout.jtail.io.index.RamFileIndex
statement code is: RamFileIndex ramFileIndex = new RamFileIndex(arg0)
statement is: fr.pingtimeout.jtail.io.index.ImmutableFileIndex(Lfr/pingtimeout/jtail/io/index/FileIndex;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class fr.pingtimeout.jtail.io.index.ImmutableFileIndex
statement code is: ImmutableFileIndex immutableFileIndex = new ImmutableFileIndex(arg0)
statement is: setOffsetOfLine(IJ)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: ramFileIndex.setOffsetOfLine(0, 1L)
statement is: fr.pingtimeout.jtail.io.LineReader(Ljava/io/File;Lfr/pingtimeout/jtail/io/index/FileIndex;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class fr.pingtimeout.jtail.io.LineReader
statement code is: LineReader lineReader = new LineReader(arg0, arg1)
statement is: fr.pingtimeout.jtail.gui.model.JTailModel(Ljava/io/File;Lfr/pingtimeout/jtail/io/LineReader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class fr.pingtimeout.jtail.gui.model.JTailModel
statement code is: JTailModel jTailModel = new JTailModel(arg0, arg1)
statement is: fr.pingtimeout.jtail.gui.view.JTailPanel(Lfr/pingtimeout/jtail/gui/model/JTailModel;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class fr.pingtimeout.jtail.gui.view.JTailPanel
statement code is: JTailPanel jTailPanel = new JTailPanel(arg0)
statement is: getVerticalScrollBar()Ljavax/swing/JScrollBar; type is: class org.evosuite.testcase.statements.MethodStatement return type class javax.swing.JScrollBar
statement code is: JScrollBar verticalScrollBar = jTailPanel.getVerticalScrollBar()
test data is: MockFile mockFile = new MockFile("");
RamFileIndex ramFileIndex = new RamFileIndex(mockFile);
ImmutableFileIndex immutableFileIndex = new ImmutableFileIndex(ramFileIndex);
ramFileIndex.setOffsetOfLine(0, 1L);
LineReader lineReader = new LineReader(mockFile, immutableFileIndex);
JTailModel jTailModel = new JTailModel(mockFile, lineReader);
JTailPanel jTailPanel = new JTailPanel(jTailModel);
jTailPanel.getVerticalScrollBar();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        MockFile mockFile = new MockFile("C:\\example.txt");
        RamFileIndex ramFileIndex = new RamFileIndex(mockFile);
        ImmutableFileIndex immutableFileIndex = new ImmutableFileIndex(ramFileIndex);
        ramFileIndex.setOffsetOfLine(0, 1L);
        LineReader lineReader = new LineReader(mockFile, immutableFileIndex);
        JTailModel jTailModel = new JTailModel(mockFile, lineReader);
        JTailPanel jTailPanel = new JTailPanel(jTailModel);
        jTailPanel.getVerticalScrollBar();
    }
}
statement is: MockFile mockFile = new MockFile("C:\\example.txt"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: RamFileIndex ramFileIndex = new RamFileIndex(mockFile), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: ImmutableFileIndex immutableFileIndex = new ImmutableFileIndex(ramFileIndex), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: ramFileIndex.setOffsetOfLine(0, 1L), class spoon.support.reflect.code.CtInvocationImpl
invocation is: ramFileIndex.setOffsetOfLine(0, 1L) target is: ramFileIndex method is: setOffsetOfLine(int,long)
source statement: fr.pingtimeout.jtail.io.index.RamFileIndex(Ljava/io/File;)V callee: VariableReference: Statement 1, type fr.pingtimeout.jtail.io.index.RamFileIndexindex is: 2
Matched Method is: setOffsetOfLine(IJ)V
statement is: LineReader lineReader = new LineReader(mockFile, immutableFileIndex), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JTailModel jTailModel = new JTailModel(mockFile, lineReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JTailPanel jTailPanel = new JTailPanel(jTailModel), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: jTailPanel.getVerticalScrollBar(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: jTailPanel.getVerticalScrollBar() target is: jTailPanel method is: getVerticalScrollBar()
source statement: fr.pingtimeout.jtail.gui.view.JTailPanel(Lfr/pingtimeout/jtail/gui/model/JTailModel;)V callee: VariableReference: Statement 6, type fr.pingtimeout.jtail.gui.view.JTailPanelindex is: 9
Matched Method is: getVerticalScrollBar()Ljavax/swing/JScrollBar;
TestCase is: String string = "C:\\example.txt";
MockFile mockFile = new MockFile(string);
RamFileIndex ramFileIndex = new RamFileIndex(mockFile);
ImmutableFileIndex immutableFileIndex = new ImmutableFileIndex(ramFileIndex);
int _int = 0;
long _long = 1L;
((RamFileIndex) mockFile).setOffsetOfLine(_int, _long);
LineReader lineReader = new LineReader(mockFile, immutableFileIndex);
JTailModel jTailModel = new JTailModel(mockFile, lineReader);
JTailPanel jTailPanel = new JTailPanel(jTailModel);
((JTailPanel) _void).getVerticalScrollBar();

statement is: org.evosuite.runtime.mock.java.io.MockFile(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.evosuite.runtime.mock.java.io.MockFile
statement code is: MockFile mockFile = new MockFile("")
statement is: fr.pingtimeout.jtail.io.index.RamFileIndex(Ljava/io/File;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class fr.pingtimeout.jtail.io.index.RamFileIndex
statement code is: RamFileIndex ramFileIndex = new RamFileIndex(arg0)
statement is: setOffsetOfLine(IJ)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: ramFileIndex.setOffsetOfLine(0, 0)
statement is: fr.pingtimeout.jtail.io.LineReader(Ljava/io/File;Lfr/pingtimeout/jtail/io/index/FileIndex;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class fr.pingtimeout.jtail.io.LineReader
statement code is: LineReader lineReader = new LineReader(arg0, arg1)
statement is: fr.pingtimeout.jtail.gui.model.JTailModel(Ljava/io/File;Lfr/pingtimeout/jtail/io/LineReader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class fr.pingtimeout.jtail.gui.model.JTailModel
statement code is: JTailModel jTailModel = new JTailModel(arg0, arg1)
statement is: fr.pingtimeout.jtail.gui.view.JTailPanel(Lfr/pingtimeout/jtail/gui/model/JTailModel;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class fr.pingtimeout.jtail.gui.view.JTailPanel
statement code is: JTailPanel jTailPanel = new JTailPanel(arg0)
statement is: java.util.Observable()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.util.Observable
statement code is: Observable observable = new Observable()
statement is: update(Ljava/util/Observable;Ljava/lang/Object;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: jTailPanel.update(arg0, (Object) arg1)
test data is: MockFile mockFile = new MockFile("");
RamFileIndex ramFileIndex = new RamFileIndex(mockFile);
ramFileIndex.setOffsetOfLine(0, 0);
LineReader lineReader = new LineReader(mockFile, ramFileIndex);
JTailModel jTailModel = new JTailModel(mockFile, lineReader);
JTailPanel jTailPanel = new JTailPanel(jTailModel);
Observable observable = new Observable();
jTailPanel.update(observable, (Object) lineReader);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        MockFile mockFile = new MockFile("access_log");
        RamFileIndex ramFileIndex = new RamFileIndex(mockFile);
        ramFileIndex.setOffsetOfLine(0, 100);
        LineReader lineReader = new LineReader(mockFile, ramFileIndex);
        JTailModel jTailModel = new JTailModel(mockFile, lineReader);
        JTailPanel jTailPanel = new JTailPanel(jTailModel);
        Observable observable = new Observable();
        jTailPanel.update(observable, ((Object) (lineReader)));
    }
}
statement is: MockFile mockFile = new MockFile("access_log"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: RamFileIndex ramFileIndex = new RamFileIndex(mockFile), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: ramFileIndex.setOffsetOfLine(0, 100), class spoon.support.reflect.code.CtInvocationImpl
invocation is: ramFileIndex.setOffsetOfLine(0, 100) target is: ramFileIndex method is: setOffsetOfLine(int,int)
source statement: fr.pingtimeout.jtail.io.index.RamFileIndex(Ljava/io/File;)V callee: VariableReference: Statement 1, type fr.pingtimeout.jtail.io.index.RamFileIndexindex is: 2
Matched Method is: setOffsetOfLine(IJ)V
statement is: LineReader lineReader = new LineReader(mockFile, ramFileIndex), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JTailModel jTailModel = new JTailModel(mockFile, lineReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JTailPanel jTailPanel = new JTailPanel(jTailModel), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Observable observable = new Observable(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: jTailPanel.update(observable, ((Object) (lineReader))), class spoon.support.reflect.code.CtInvocationImpl
invocation is: jTailPanel.update(observable, ((Object) (lineReader))) target is: jTailPanel method is: update(Observable,java.lang.Object)
source statement: fr.pingtimeout.jtail.gui.view.JTailPanel(Lfr/pingtimeout/jtail/gui/model/JTailModel;)V callee: VariableReference: Statement 5, type fr.pingtimeout.jtail.gui.view.JTailPanelindex is: 8
Matched Method is: update(Ljava/util/Observable;Ljava/lang/Object;)V
TestCase is: String string = "access_log";
MockFile mockFile = new MockFile(string);
RamFileIndex ramFileIndex = new RamFileIndex(mockFile);
int _int = 0;
int _int = 100;
((RamFileIndex) mockFile).setOffsetOfLine(_int, _int);
LineReader lineReader = new LineReader(mockFile, ramFileIndex);
JTailModel jTailModel = new JTailModel(mockFile, lineReader);
JTailPanel jTailPanel = new JTailPanel(jTailModel);
Observable observable = new Observable();
((JTailPanel) _void).update(observable, (Object) lineReader);

statement is: org.evosuite.runtime.mock.java.io.MockFile(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.evosuite.runtime.mock.java.io.MockFile
statement code is: MockFile mockFile = new MockFile("")
statement is: fr.pingtimeout.jtail.io.index.RamFileIndex(Ljava/io/File;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class fr.pingtimeout.jtail.io.index.RamFileIndex
statement code is: RamFileIndex ramFileIndex = new RamFileIndex(arg0)
statement is: setOffsetOfLine(IJ)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: ramFileIndex.setOffsetOfLine(0, 0)
statement is: fr.pingtimeout.jtail.io.LineReader(Ljava/io/File;Lfr/pingtimeout/jtail/io/index/FileIndex;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class fr.pingtimeout.jtail.io.LineReader
statement code is: LineReader lineReader = new LineReader(arg0, arg1)
statement is: fr.pingtimeout.jtail.gui.model.JTailModel(Ljava/io/File;Lfr/pingtimeout/jtail/io/LineReader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class fr.pingtimeout.jtail.gui.model.JTailModel
statement code is: JTailModel jTailModel = new JTailModel(arg0, arg1)
statement is: fr.pingtimeout.jtail.gui.view.JTailPanel(Lfr/pingtimeout/jtail/gui/model/JTailModel;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class fr.pingtimeout.jtail.gui.view.JTailPanel
statement code is: JTailPanel jTailPanel = new JTailPanel(arg0)
statement is: delete()Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean delete = mockFile.delete()
statement is: JTailModelEvent.Type jTailModelEvent_Type = JTailModelEvent.Type.RESIZED type is: class org.evosuite.testcase.statements.EnumPrimitiveStatement return type class fr.pingtimeout.jtail.gui.model.JTailModelEvent$Type
statement code is: JTailModelEvent.Type jTailModelEvent_Type = JTailModelEvent.Type.RESIZED
statement is: fr.pingtimeout.jtail.gui.model.JTailModelEvent(Lfr/pingtimeout/jtail/gui/model/JTailModelEvent$Type;IIII)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class fr.pingtimeout.jtail.gui.model.JTailModelEvent
statement code is: JTailModelEvent jTailModelEvent = new JTailModelEvent(arg0, 14, 4, 0, 14)
statement is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("/home/roham/Results-Utestgen/dataset/SF110-new-res/64_jtailgui") type is: class org.evosuite.testcase.statements.environment.FileNamePrimitiveStatement return type class org.evosuite.runtime.testdata.EvoSuiteFile
statement code is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("/home/roham/Results-Utestgen/dataset/SF110-new-res/64_jtailgui")
statement is: appendStringToFile(Lorg/evosuite/runtime/testdata/EvoSuiteFile;Ljava/lang/String;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean appendStringToFile = FileSystemHandling.appendStringToFile(arg0, "")
statement is: update(Ljava/util/Observable;Ljava/lang/Object;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: jTailPanel.update((Observable) arg0, (Object) arg1)
test data is: MockFile mockFile = new MockFile("");
RamFileIndex ramFileIndex = new RamFileIndex(mockFile);
ramFileIndex.setOffsetOfLine(0, 0);
LineReader lineReader = new LineReader(mockFile, ramFileIndex);
JTailModel jTailModel = new JTailModel(mockFile, lineReader);
JTailPanel jTailPanel = new JTailPanel(jTailModel);
mockFile.delete();
JTailModelEvent.Type jTailModelEvent_Type = JTailModelEvent.Type.RESIZED;
JTailModelEvent jTailModelEvent = new JTailModelEvent(jTailModelEvent_Type, 14, 4, 0, 14);
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("/home/roham/Results-Utestgen/dataset/SF110-new-res/64_jtailgui");
FileSystemHandling.appendStringToFile(evoSuiteFile, "");
jTailPanel.update((Observable) jTailModel, (Object) jTailModelEvent);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        MockFile mockFile = new MockFile("C:\\Users\\Public\\Documents\\file.txt");
        RamFileIndex ramFileIndex = new RamFileIndex(mockFile);
        ramFileIndex.setOffsetOfLine(0, 0);
        LineReader lineReader = new LineReader(mockFile, ramFileIndex);
        JTailModel jTailModel = new JTailModel(mockFile, lineReader);
        JTailPanel jTailPanel = new JTailPanel(jTailModel);
        mockFile.delete();
        JTailModelEvent.Type jTailModelEvent_Type = Type.RESIZED;
        JTailModelEvent jTailModelEvent = new JTailModelEvent(jTailModelEvent_Type, 14, 4, 0, 14);
        EvoSuiteFile evoSuiteFile = new EvoSuiteFile("C:\\Users\\Public\\Documents\\file.txt");
        FileSystemHandling.appendStringToFile(evoSuiteFile, "This is a sample file used for testing.");
        jTailPanel.update(((Observable) (jTailModel)), ((Object) (jTailModelEvent)));
    }
}
statement is: MockFile mockFile = new MockFile("C:\\Users\\Public\\Documents\\file.txt"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: RamFileIndex ramFileIndex = new RamFileIndex(mockFile), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: ramFileIndex.setOffsetOfLine(0, 0), class spoon.support.reflect.code.CtInvocationImpl
invocation is: ramFileIndex.setOffsetOfLine(0, 0) target is: ramFileIndex method is: setOffsetOfLine(int,int)
source statement: fr.pingtimeout.jtail.io.index.RamFileIndex(Ljava/io/File;)V callee: VariableReference: Statement 1, type fr.pingtimeout.jtail.io.index.RamFileIndexindex is: 2
Matched Method is: setOffsetOfLine(IJ)V
statement is: LineReader lineReader = new LineReader(mockFile, ramFileIndex), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JTailModel jTailModel = new JTailModel(mockFile, lineReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JTailPanel jTailPanel = new JTailPanel(jTailModel), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: mockFile.delete(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: mockFile.delete() target is: mockFile method is: delete()
source statement: org.evosuite.runtime.mock.java.io.MockFile(Ljava/lang/String;)V callee: VariableReference: Statement 0, type org.evosuite.runtime.mock.java.io.MockFileindex is: 1
Matched Method is: delete()Z
statement is: JTailModelEvent.Type jTailModelEvent_Type = Type.RESIZED, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: Type.RESIZED is Type
statement is: JTailModelEvent jTailModelEvent = new JTailModelEvent(jTailModelEvent_Type, 14, 4, 0, 14), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("C:\\Users\\Public\\Documents\\file.txt"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: FileSystemHandling.appendStringToFile(evoSuiteFile, "This is a sample file used for testing."), class spoon.support.reflect.code.CtInvocationImpl
invocation is: FileSystemHandling.appendStringToFile(evoSuiteFile, "This is a sample file used for testing.") target is: FileSystemHandling method is: appendStringToFile(EvoSuiteFile,java.lang.String)
Matched Method is: appendStringToFile(Lorg/evosuite/runtime/testdata/EvoSuiteFile;Ljava/lang/String;)Z
i 1 Parameters size() 1 Num of Method Parameters: 2
statement is: jTailPanel.update(((Observable) (jTailModel)), ((Object) (jTailModelEvent))), class spoon.support.reflect.code.CtInvocationImpl
invocation is: jTailPanel.update(((Observable) (jTailModel)), ((Object) (jTailModelEvent))) target is: jTailPanel method is: update(Observable,java.lang.Object)
source statement: fr.pingtimeout.jtail.gui.view.JTailPanel(Lfr/pingtimeout/jtail/gui/model/JTailModel;)V callee: VariableReference: Statement 5, type fr.pingtimeout.jtail.gui.view.JTailPanelindex is: 8
Matched Method is: update(Ljava/util/Observable;Ljava/lang/Object;)V
TestCase is: String string = "C:\\Users\\Public\\Documents\\file.txt";
MockFile mockFile = new MockFile(string);
RamFileIndex ramFileIndex = new RamFileIndex(mockFile);
int _int = 0;
int _int = 0;
((RamFileIndex) mockFile).setOffsetOfLine(_int, _int);
LineReader lineReader = new LineReader(mockFile, ramFileIndex);
JTailModel jTailModel = new JTailModel(mockFile, lineReader);
JTailPanel jTailPanel = new JTailPanel(jTailModel);
((MockFile) string).delete();
int _int = 14;
int _int = 4;
int _int = 0;
int _int = 14;
JTailModelEvent jTailModelEvent = new JTailModelEvent((JTailModelEvent.Type) _int, _int, _int, _int, 14);
String string = "This is a sample file used for testing.";
String string = null;
FileSystemHandling.appendStringToFile((EvoSuiteFile) string, string);
((JTailPanel) _void).update((Observable) jTailModel, (Object) jTailModelEvent);

statement is: org.evosuite.runtime.mock.java.io.MockFile(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.evosuite.runtime.mock.java.io.MockFile
statement code is: MockFile mockFile = new MockFile("")
statement is: fr.pingtimeout.jtail.io.index.RamFileIndex(Ljava/io/File;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class fr.pingtimeout.jtail.io.index.RamFileIndex
statement code is: RamFileIndex ramFileIndex = new RamFileIndex(arg0)
statement is: fr.pingtimeout.jtail.io.index.ImmutableFileIndex(Lfr/pingtimeout/jtail/io/index/FileIndex;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class fr.pingtimeout.jtail.io.index.ImmutableFileIndex
statement code is: ImmutableFileIndex immutableFileIndex = new ImmutableFileIndex(arg0)
statement is: setOffsetOfLine(IJ)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: ramFileIndex.setOffsetOfLine(0, 1L)
statement is: fr.pingtimeout.jtail.io.LineReader(Ljava/io/File;Lfr/pingtimeout/jtail/io/index/FileIndex;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class fr.pingtimeout.jtail.io.LineReader
statement code is: LineReader lineReader = new LineReader(arg0, arg1)
statement is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("/home/roham/Results-Utestgen/dataset/SF110-new-res/64_jtailgui") type is: class org.evosuite.testcase.statements.environment.FileNamePrimitiveStatement return type class org.evosuite.runtime.testdata.EvoSuiteFile
statement code is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("/home/roham/Results-Utestgen/dataset/SF110-new-res/64_jtailgui")
statement is: fr.pingtimeout.jtail.gui.model.JTailModel(Ljava/io/File;Lfr/pingtimeout/jtail/io/LineReader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class fr.pingtimeout.jtail.gui.model.JTailModel
statement code is: JTailModel jTailModel = new JTailModel(arg0, arg1)
statement is: fr.pingtimeout.jtail.gui.view.JTailPanel(Lfr/pingtimeout/jtail/gui/model/JTailModel;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class fr.pingtimeout.jtail.gui.view.JTailPanel
statement code is: JTailPanel jTailPanel = new JTailPanel(arg0)
statement is: delete()Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean delete = mockFile.delete()
statement is: appendStringToFile(Lorg/evosuite/runtime/testdata/EvoSuiteFile;Ljava/lang/String;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean appendStringToFile = FileSystemHandling.appendStringToFile(arg0, "")
statement is: setNbDisplayedLines(I)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: jTailModel.setNbDisplayedLines(11)
test data is: MockFile mockFile = new MockFile("");
RamFileIndex ramFileIndex = new RamFileIndex(mockFile);
ImmutableFileIndex immutableFileIndex = new ImmutableFileIndex(ramFileIndex);
ramFileIndex.setOffsetOfLine(0, 1L);
LineReader lineReader = new LineReader(mockFile, immutableFileIndex);
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("/home/roham/Results-Utestgen/dataset/SF110-new-res/64_jtailgui");
JTailModel jTailModel = new JTailModel(mockFile, lineReader);
JTailPanel jTailPanel = new JTailPanel(jTailModel);
mockFile.delete();
FileSystemHandling.appendStringToFile(evoSuiteFile, "");
jTailModel.setNbDisplayedLines(11);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        MockFile mockFile = new MockFile("test_file.txt");
        RamFileIndex ramFileIndex = new RamFileIndex(mockFile);
        ImmutableFileIndex immutableFileIndex = new ImmutableFileIndex(ramFileIndex);
        ramFileIndex.setOffsetOfLine(0, 1L);
        LineReader lineReader = new LineReader(mockFile, immutableFileIndex);
        EvoSuiteFile evoSuiteFile = new EvoSuiteFile("/home/user/Results-Utestgen/dataset/SF110-new-res/64_jtailgui");
        JTailModel jTailModel = new JTailModel(mockFile, lineReader);
        JTailPanel jTailPanel = new JTailPanel(jTailModel);
        mockFile.delete();
        FileSystemHandling.appendStringToFile(evoSuiteFile, "This is a test file used to demonstrate the use of JTail in a Java application.\n");
        jTailModel.setNbDisplayedLines(11);
    }
}
statement is: MockFile mockFile = new MockFile("test_file.txt"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: RamFileIndex ramFileIndex = new RamFileIndex(mockFile), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: ImmutableFileIndex immutableFileIndex = new ImmutableFileIndex(ramFileIndex), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: ramFileIndex.setOffsetOfLine(0, 1L), class spoon.support.reflect.code.CtInvocationImpl
invocation is: ramFileIndex.setOffsetOfLine(0, 1L) target is: ramFileIndex method is: setOffsetOfLine(int,long)
source statement: fr.pingtimeout.jtail.io.index.RamFileIndex(Ljava/io/File;)V callee: VariableReference: Statement 1, type fr.pingtimeout.jtail.io.index.RamFileIndexindex is: 2
Matched Method is: setOffsetOfLine(IJ)V
statement is: LineReader lineReader = new LineReader(mockFile, immutableFileIndex), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("/home/user/Results-Utestgen/dataset/SF110-new-res/64_jtailgui"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JTailModel jTailModel = new JTailModel(mockFile, lineReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JTailPanel jTailPanel = new JTailPanel(jTailModel), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: mockFile.delete(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: mockFile.delete() target is: mockFile method is: delete()
source statement: org.evosuite.runtime.mock.java.io.MockFile(Ljava/lang/String;)V callee: VariableReference: Statement 0, type org.evosuite.runtime.mock.java.io.MockFileindex is: 1
Matched Method is: delete()Z
statement is: FileSystemHandling.appendStringToFile(evoSuiteFile, "This is a test file used to demonstrate the use of JTail in a Java application.\n"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: FileSystemHandling.appendStringToFile(evoSuiteFile, "This is a test file used to demonstrate the use of JTail in a Java application.\n") target is: FileSystemHandling method is: appendStringToFile(EvoSuiteFile,java.lang.String)
Matched Method is: appendStringToFile(Lorg/evosuite/runtime/testdata/EvoSuiteFile;Ljava/lang/String;)Z
i 1 Parameters size() 1 Num of Method Parameters: 2
statement is: jTailModel.setNbDisplayedLines(11), class spoon.support.reflect.code.CtInvocationImpl
invocation is: jTailModel.setNbDisplayedLines(11) target is: jTailModel method is: setNbDisplayedLines(int)
source statement: fr.pingtimeout.jtail.gui.model.JTailModel(Ljava/io/File;Lfr/pingtimeout/jtail/io/LineReader;)V callee: VariableReference: Statement 6, type fr.pingtimeout.jtail.gui.model.JTailModelindex is: 8
Matched Method is: setNbDisplayedLines(I)V
TestCase is: String string = "test_file.txt";
MockFile mockFile = new MockFile(string);
RamFileIndex ramFileIndex = new RamFileIndex(mockFile);
ImmutableFileIndex immutableFileIndex = new ImmutableFileIndex(ramFileIndex);
int _int = 0;
long _long = 1L;
((RamFileIndex) mockFile).setOffsetOfLine(_int, _long);
LineReader lineReader = new LineReader(mockFile, immutableFileIndex);
JTailModel jTailModel = new JTailModel(mockFile, lineReader);
JTailPanel jTailPanel = new JTailPanel(jTailModel);
((MockFile) string).delete();
String string = "This is a test file used to demonstrate the use of JTail in a Java application.\n";
String string = null;
FileSystemHandling.appendStringToFile((EvoSuiteFile) string, string);
int _int = 11;
((JTailModel) _void).setNbDisplayedLines(_int);

statement is: org.evosuite.runtime.mock.java.io.MockFile(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.evosuite.runtime.mock.java.io.MockFile
statement code is: MockFile mockFile = new MockFile("")
statement is: fr.pingtimeout.jtail.io.index.RamFileIndex(Ljava/io/File;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class fr.pingtimeout.jtail.io.index.RamFileIndex
statement code is: RamFileIndex ramFileIndex = new RamFileIndex(arg0)
statement is: setOffsetOfLine(IJ)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: ramFileIndex.setOffsetOfLine(0, 0)
statement is: fr.pingtimeout.jtail.io.LineReader(Ljava/io/File;Lfr/pingtimeout/jtail/io/index/FileIndex;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class fr.pingtimeout.jtail.io.LineReader
statement code is: LineReader lineReader = new LineReader(arg0, arg1)
statement is: fr.pingtimeout.jtail.gui.model.JTailModel(Ljava/io/File;Lfr/pingtimeout/jtail/io/LineReader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class fr.pingtimeout.jtail.gui.model.JTailModel
statement code is: JTailModel jTailModel = new JTailModel(arg0, arg1)
statement is: fr.pingtimeout.jtail.gui.view.JTailPanel(Lfr/pingtimeout/jtail/gui/model/JTailModel;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class fr.pingtimeout.jtail.gui.view.JTailPanel
statement code is: JTailPanel jTailPanel = new JTailPanel(arg0)
statement is: setSize(II)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: jTailPanel.setSize(0, 3092)
statement is: delete()Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean delete = mockFile.delete()
statement is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("/home/roham/Results-Utestgen/dataset/SF110-new-res/64_jtailgui") type is: class org.evosuite.testcase.statements.environment.FileNamePrimitiveStatement return type class org.evosuite.runtime.testdata.EvoSuiteFile
statement code is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("/home/roham/Results-Utestgen/dataset/SF110-new-res/64_jtailgui")
statement is: appendStringToFile(Lorg/evosuite/runtime/testdata/EvoSuiteFile;Ljava/lang/String;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean appendStringToFile = FileSystemHandling.appendStringToFile(arg0, "")
statement is: setNbDisplayedLines(I)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: jTailModel.setNbDisplayedLines(0)
statement is: getCharacterHeight()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int characterHeight = jTailPanel.getCharacterHeight()
test data is: MockFile mockFile = new MockFile("");
RamFileIndex ramFileIndex = new RamFileIndex(mockFile);
ramFileIndex.setOffsetOfLine(0, 0);
LineReader lineReader = new LineReader(mockFile, ramFileIndex);
JTailModel jTailModel = new JTailModel(mockFile, lineReader);
JTailPanel jTailPanel = new JTailPanel(jTailModel);
jTailPanel.setSize(0, 3092);
mockFile.delete();
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("/home/roham/Results-Utestgen/dataset/SF110-new-res/64_jtailgui");
FileSystemHandling.appendStringToFile(evoSuiteFile, "");
jTailModel.setNbDisplayedLines(0);
jTailPanel.getCharacterHeight();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        MockFile mockFile = new MockFile("This is a sample text file for testing JTail.");
        RamFileIndex ramFileIndex = new RamFileIndex(mockFile);
        ramFileIndex.setOffsetOfLine(0, 0);
        LineReader lineReader = new LineReader(mockFile, ramFileIndex);
        JTailModel jTailModel = new JTailModel(mockFile, lineReader);
        JTailPanel jTailPanel = new JTailPanel(jTailModel);
        jTailPanel.setSize(0, 3092);
        mockFile.delete();
        EvoSuiteFile evoSuiteFile = new EvoSuiteFile("/home/roham/Results-Utestgen/dataset/SF110-new-res/64_jtailgui");
        FileSystemHandling.appendStringToFile(evoSuiteFile, "This is a sample text file for testing JTail.");
        jTailModel.setNbDisplayedLines(3);
        jTailPanel.getCharacterHeight();
    }
}
statement is: MockFile mockFile = new MockFile("This is a sample text file for testing JTail."), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: RamFileIndex ramFileIndex = new RamFileIndex(mockFile), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: ramFileIndex.setOffsetOfLine(0, 0), class spoon.support.reflect.code.CtInvocationImpl
invocation is: ramFileIndex.setOffsetOfLine(0, 0) target is: ramFileIndex method is: setOffsetOfLine(int,int)
source statement: fr.pingtimeout.jtail.io.index.RamFileIndex(Ljava/io/File;)V callee: VariableReference: Statement 1, type fr.pingtimeout.jtail.io.index.RamFileIndexindex is: 2
Matched Method is: setOffsetOfLine(IJ)V
statement is: LineReader lineReader = new LineReader(mockFile, ramFileIndex), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JTailModel jTailModel = new JTailModel(mockFile, lineReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JTailPanel jTailPanel = new JTailPanel(jTailModel), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: jTailPanel.setSize(0, 3092), class spoon.support.reflect.code.CtInvocationImpl
invocation is: jTailPanel.setSize(0, 3092) target is: jTailPanel method is: setSize(int,int)
source statement: fr.pingtimeout.jtail.gui.view.JTailPanel(Lfr/pingtimeout/jtail/gui/model/JTailModel;)V callee: VariableReference: Statement 5, type fr.pingtimeout.jtail.gui.view.JTailPanelindex is: 8
Matched Method is: setSize(II)V
statement is: mockFile.delete(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: mockFile.delete() target is: mockFile method is: delete()
source statement: org.evosuite.runtime.mock.java.io.MockFile(Ljava/lang/String;)V callee: VariableReference: Statement 0, type org.evosuite.runtime.mock.java.io.MockFileindex is: 1
Matched Method is: delete()Z
statement is: EvoSuiteFile evoSuiteFile = new EvoSuiteFile("/home/roham/Results-Utestgen/dataset/SF110-new-res/64_jtailgui"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: FileSystemHandling.appendStringToFile(evoSuiteFile, "This is a sample text file for testing JTail."), class spoon.support.reflect.code.CtInvocationImpl
invocation is: FileSystemHandling.appendStringToFile(evoSuiteFile, "This is a sample text file for testing JTail.") target is: FileSystemHandling method is: appendStringToFile(EvoSuiteFile,java.lang.String)
Matched Method is: appendStringToFile(Lorg/evosuite/runtime/testdata/EvoSuiteFile;Ljava/lang/String;)Z
i 1 Parameters size() 1 Num of Method Parameters: 2
statement is: jTailModel.setNbDisplayedLines(3), class spoon.support.reflect.code.CtInvocationImpl
invocation is: jTailModel.setNbDisplayedLines(3) target is: jTailModel method is: setNbDisplayedLines(int)
source statement: fr.pingtimeout.jtail.gui.model.JTailModel(Ljava/io/File;Lfr/pingtimeout/jtail/io/LineReader;)V callee: VariableReference: Statement 4, type fr.pingtimeout.jtail.gui.model.JTailModelindex is: 7
Matched Method is: setNbDisplayedLines(I)V
statement is: jTailPanel.getCharacterHeight(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: jTailPanel.getCharacterHeight() target is: jTailPanel method is: getCharacterHeight()
source statement: fr.pingtimeout.jtail.gui.view.JTailPanel(Lfr/pingtimeout/jtail/gui/model/JTailModel;)V callee: VariableReference: Statement 5, type fr.pingtimeout.jtail.gui.view.JTailPanelindex is: 8
Matched Method is: getCharacterHeight()I
TestCase is: String string = "This is a sample text file for testing JTail.";
MockFile mockFile = new MockFile(string);
RamFileIndex ramFileIndex = new RamFileIndex(mockFile);
int _int = 0;
int _int = 0;
((RamFileIndex) mockFile).setOffsetOfLine(_int, _int);
LineReader lineReader = new LineReader(mockFile, ramFileIndex);
JTailModel jTailModel = new JTailModel(mockFile, lineReader);
JTailPanel jTailPanel = new JTailPanel(jTailModel);
int _int = 0;
int _int = 3092;
((Component) _void).setSize(_int, _int);
((MockFile) string).delete();
String string = "This is a sample text file for testing JTail.";
String string = null;
FileSystemHandling.appendStringToFile((EvoSuiteFile) string, string);
int _int = 3;
((JTailModel) _int).setNbDisplayedLines(_int);
((JTailPanel) _void).getCharacterHeight();

statement is: org.evosuite.runtime.mock.java.io.MockFile(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.evosuite.runtime.mock.java.io.MockFile
statement code is: MockFile mockFile = new MockFile("")
statement is: fr.pingtimeout.jtail.io.index.RamFileIndex(Ljava/io/File;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class fr.pingtimeout.jtail.io.index.RamFileIndex
statement code is: RamFileIndex ramFileIndex = new RamFileIndex(arg0)
statement is: setOffsetOfLine(IJ)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: ramFileIndex.setOffsetOfLine(0, 0)
statement is: fr.pingtimeout.jtail.io.LineReader(Ljava/io/File;Lfr/pingtimeout/jtail/io/index/FileIndex;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class fr.pingtimeout.jtail.io.LineReader
statement code is: LineReader lineReader = new LineReader(arg0, arg1)
statement is: fr.pingtimeout.jtail.gui.model.JTailModel(Ljava/io/File;Lfr/pingtimeout/jtail/io/LineReader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class fr.pingtimeout.jtail.gui.model.JTailModel
statement code is: JTailModel jTailModel = new JTailModel(arg0, arg1)
statement is: fr.pingtimeout.jtail.gui.view.JTailPanel(Lfr/pingtimeout/jtail/gui/model/JTailModel;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class fr.pingtimeout.jtail.gui.view.JTailPanel
statement code is: JTailPanel jTailPanel = new JTailPanel(arg0)
statement is: fr.pingtimeout.jtail.gui.model.JTailModelEvent(Lfr/pingtimeout/jtail/gui/model/JTailModelEvent$Type;IIII)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class fr.pingtimeout.jtail.gui.model.JTailModelEvent
statement code is: JTailModelEvent jTailModelEvent = new JTailModelEvent((JTailModelEvent.Type) null, 64, 4, 4, 64)
statement is: update(Ljava/util/Observable;Ljava/lang/Object;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: jTailPanel.update((Observable) arg0, (Object) arg1)
test data is: MockFile mockFile = new MockFile("");
RamFileIndex ramFileIndex = new RamFileIndex(mockFile);
ramFileIndex.setOffsetOfLine(0, 0);
LineReader lineReader = new LineReader(mockFile, ramFileIndex);
JTailModel jTailModel = new JTailModel(mockFile, lineReader);
JTailPanel jTailPanel = new JTailPanel(jTailModel);
JTailModelEvent jTailModelEvent = new JTailModelEvent((JTailModelEvent.Type) null, 64, 4, 4, 64);
jTailPanel.update((Observable) jTailModel, (Object) jTailModelEvent);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        MockFile mockFile = new MockFile("test_file.txt");
        RamFileIndex ramFileIndex = new RamFileIndex(mockFile);
        ramFileIndex.setOffsetOfLine(0, 0);
        LineReader lineReader = new LineReader(mockFile, ramFileIndex);
        JTailModel jTailModel = new JTailModel(mockFile, lineReader);
        JTailPanel jTailPanel = new JTailPanel(jTailModel);
        JTailModelEvent jTailModelEvent = new JTailModelEvent(((JTailModelEvent.Type) (null)), 64, 4, 4, 64);
        jTailPanel.update(((Observable) (jTailModel)), ((Object) (jTailModelEvent)));
    }
}
statement is: MockFile mockFile = new MockFile("test_file.txt"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: RamFileIndex ramFileIndex = new RamFileIndex(mockFile), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: ramFileIndex.setOffsetOfLine(0, 0), class spoon.support.reflect.code.CtInvocationImpl
invocation is: ramFileIndex.setOffsetOfLine(0, 0) target is: ramFileIndex method is: setOffsetOfLine(int,int)
source statement: fr.pingtimeout.jtail.io.index.RamFileIndex(Ljava/io/File;)V callee: VariableReference: Statement 1, type fr.pingtimeout.jtail.io.index.RamFileIndexindex is: 2
Matched Method is: setOffsetOfLine(IJ)V
statement is: LineReader lineReader = new LineReader(mockFile, ramFileIndex), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JTailModel jTailModel = new JTailModel(mockFile, lineReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JTailPanel jTailPanel = new JTailPanel(jTailModel), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JTailModelEvent jTailModelEvent = new JTailModelEvent(((JTailModelEvent.Type) (null)), 64, 4, 4, 64), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: jTailPanel.update(((Observable) (jTailModel)), ((Object) (jTailModelEvent))), class spoon.support.reflect.code.CtInvocationImpl
invocation is: jTailPanel.update(((Observable) (jTailModel)), ((Object) (jTailModelEvent))) target is: jTailPanel method is: update(Observable,java.lang.Object)
source statement: fr.pingtimeout.jtail.gui.view.JTailPanel(Lfr/pingtimeout/jtail/gui/model/JTailModel;)V callee: VariableReference: Statement 5, type fr.pingtimeout.jtail.gui.view.JTailPanelindex is: 8
Matched Method is: update(Ljava/util/Observable;Ljava/lang/Object;)V
TestCase is: String string = "test_file.txt";
MockFile mockFile = new MockFile(string);
RamFileIndex ramFileIndex = new RamFileIndex(mockFile);
int _int = 0;
int _int = 0;
((RamFileIndex) mockFile).setOffsetOfLine(_int, _int);
LineReader lineReader = new LineReader(mockFile, ramFileIndex);
JTailModel jTailModel = new JTailModel(mockFile, lineReader);
JTailPanel jTailPanel = new JTailPanel(jTailModel);
int _int = 64;
int _int = 4;
int _int = 4;
int _int = 64;
JTailModelEvent jTailModelEvent = new JTailModelEvent((JTailModelEvent.Type) _int, _int, _int, _int, 64);
((JTailPanel) _void).update((Observable) jTailModel, (Object) jTailModelEvent);

statement is: org.evosuite.runtime.mock.java.io.MockFile(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.evosuite.runtime.mock.java.io.MockFile
statement code is: MockFile mockFile = new MockFile("")
statement is: fr.pingtimeout.jtail.io.index.RamFileIndex(Ljava/io/File;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class fr.pingtimeout.jtail.io.index.RamFileIndex
statement code is: RamFileIndex ramFileIndex = new RamFileIndex(arg0)
statement is: setOffsetOfLine(IJ)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: ramFileIndex.setOffsetOfLine(0, 4083L)
statement is: fr.pingtimeout.jtail.io.LineReader(Ljava/io/File;Lfr/pingtimeout/jtail/io/index/FileIndex;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class fr.pingtimeout.jtail.io.LineReader
statement code is: LineReader lineReader = new LineReader(arg0, arg1)
statement is: fr.pingtimeout.jtail.gui.model.JTailModel(Ljava/io/File;Lfr/pingtimeout/jtail/io/LineReader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class fr.pingtimeout.jtail.gui.model.JTailModel
statement code is: JTailModel jTailModel = new JTailModel(arg0, arg1)
statement is: fr.pingtimeout.jtail.gui.view.JTailPanel(Lfr/pingtimeout/jtail/gui/model/JTailModel;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class fr.pingtimeout.jtail.gui.view.JTailPanel
statement code is: JTailPanel jTailPanel = new JTailPanel(arg0)
statement is: JTailModelEvent.Type jTailModelEvent_Type = JTailModelEvent.Type.SCROLLED type is: class org.evosuite.testcase.statements.EnumPrimitiveStatement return type class fr.pingtimeout.jtail.gui.model.JTailModelEvent$Type
statement code is: JTailModelEvent.Type jTailModelEvent_Type = JTailModelEvent.Type.SCROLLED
statement is: fr.pingtimeout.jtail.gui.model.JTailModelEvent(Lfr/pingtimeout/jtail/gui/model/JTailModelEvent$Type;IIII)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class fr.pingtimeout.jtail.gui.model.JTailModelEvent
statement code is: JTailModelEvent jTailModelEvent = new JTailModelEvent(arg0, 14, 1514, (-1984), (-20))
statement is: update(Ljava/util/Observable;Ljava/lang/Object;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: jTailPanel.update((Observable) arg0, (Object) arg1)
test data is: MockFile mockFile = new MockFile("");
RamFileIndex ramFileIndex = new RamFileIndex(mockFile);
ramFileIndex.setOffsetOfLine(0, 4083L);
LineReader lineReader = new LineReader(mockFile, ramFileIndex);
JTailModel jTailModel = new JTailModel(mockFile, lineReader);
JTailPanel jTailPanel = new JTailPanel(jTailModel);
JTailModelEvent.Type jTailModelEvent_Type = JTailModelEvent.Type.SCROLLED;
JTailModelEvent jTailModelEvent = new JTailModelEvent(jTailModelEvent_Type, 14, 1514, (-1984), (-20));
jTailPanel.update((Observable) jTailModel, (Object) jTailModelEvent);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        MockFile mockFile = new MockFile("example_file.txt");
        RamFileIndex ramFileIndex = new RamFileIndex(mockFile);
        ramFileIndex.setOffsetOfLine(0, 4083L);
        LineReader lineReader = new LineReader(mockFile, ramFileIndex);
        JTailModel jTailModel = new JTailModel(mockFile, lineReader);
        JTailPanel jTailPanel = new JTailPanel(jTailModel);
        JTailModelEvent.Type jTailModelEvent_Type = Type.SCROLLED;
        JTailModelEvent jTailModelEvent = new JTailModelEvent(jTailModelEvent_Type, 14, 1514, -1984, -20);
        jTailPanel.update(((Observable) (jTailModel)), ((Object) (jTailModelEvent)));
    }
}
statement is: MockFile mockFile = new MockFile("example_file.txt"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: RamFileIndex ramFileIndex = new RamFileIndex(mockFile), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: ramFileIndex.setOffsetOfLine(0, 4083L), class spoon.support.reflect.code.CtInvocationImpl
invocation is: ramFileIndex.setOffsetOfLine(0, 4083L) target is: ramFileIndex method is: setOffsetOfLine(int,long)
source statement: fr.pingtimeout.jtail.io.index.RamFileIndex(Ljava/io/File;)V callee: VariableReference: Statement 1, type fr.pingtimeout.jtail.io.index.RamFileIndexindex is: 2
Matched Method is: setOffsetOfLine(IJ)V
statement is: LineReader lineReader = new LineReader(mockFile, ramFileIndex), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JTailModel jTailModel = new JTailModel(mockFile, lineReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JTailPanel jTailPanel = new JTailPanel(jTailModel), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JTailModelEvent.Type jTailModelEvent_Type = Type.SCROLLED, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: Type.SCROLLED is Type
statement is: JTailModelEvent jTailModelEvent = new JTailModelEvent(jTailModelEvent_Type, 14, 1514, -1984, -20), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: jTailPanel.update(((Observable) (jTailModel)), ((Object) (jTailModelEvent))), class spoon.support.reflect.code.CtInvocationImpl
invocation is: jTailPanel.update(((Observable) (jTailModel)), ((Object) (jTailModelEvent))) target is: jTailPanel method is: update(Observable,java.lang.Object)
source statement: fr.pingtimeout.jtail.gui.view.JTailPanel(Lfr/pingtimeout/jtail/gui/model/JTailModel;)V callee: VariableReference: Statement 5, type fr.pingtimeout.jtail.gui.view.JTailPanelindex is: 8
Matched Method is: update(Ljava/util/Observable;Ljava/lang/Object;)V
TestCase is: String string = "example_file.txt";
MockFile mockFile = new MockFile(string);
RamFileIndex ramFileIndex = new RamFileIndex(mockFile);
int _int = 0;
long _long = 4083L;
((RamFileIndex) mockFile).setOffsetOfLine(_int, _long);
LineReader lineReader = new LineReader(mockFile, ramFileIndex);
JTailModel jTailModel = new JTailModel(mockFile, lineReader);
JTailPanel jTailPanel = new JTailPanel(jTailModel);
int _int = 14;
int _int = 1514;
JTailModelEvent jTailModelEvent = new JTailModelEvent((JTailModelEvent.Type) _int, _int, 1514, (-1984), (-20));
((JTailPanel) _void).update((Observable) jTailModel, (Object) jTailModelEvent);

* test suite isTestSuite: 14
Test 0: 
MockFile mockFile = new MockFile("");
RamFileIndex ramFileIndex = new RamFileIndex(mockFile);
ImmutableFileIndex immutableFileIndex = new ImmutableFileIndex(ramFileIndex);
ramFileIndex.setOffsetOfLine(0, 1L);
LineReader lineReader = new LineReader(mockFile, immutableFileIndex);
JTailModel jTailModel = new JTailModel(mockFile, lineReader);
JTailPanel jTailPanel = new JTailPanel(jTailModel);
jTailPanel.getVerticalScrollBar();
Test 1: 
MockFile mockFile = new MockFile("");
RamFileIndex ramFileIndex = new RamFileIndex(mockFile);
ramFileIndex.setOffsetOfLine(0, 0);
LineReader lineReader = new LineReader(mockFile, ramFileIndex);
JTailModel jTailModel = new JTailModel(mockFile, lineReader);
JTailPanel jTailPanel = new JTailPanel(jTailModel);
Observable observable = new Observable();
jTailPanel.update(observable, (Object) lineReader);
Test 2: 
MockFile mockFile = new MockFile("");
RamFileIndex ramFileIndex = new RamFileIndex(mockFile);
ramFileIndex.setOffsetOfLine(0, 0);
LineReader lineReader = new LineReader(mockFile, ramFileIndex);
JTailModel jTailModel = new JTailModel(mockFile, lineReader);
JTailPanel jTailPanel = new JTailPanel(jTailModel);
mockFile.delete();
JTailModelEvent.Type jTailModelEvent_Type = JTailModelEvent.Type.RESIZED;
JTailModelEvent jTailModelEvent = new JTailModelEvent(jTailModelEvent_Type, 14, 4, 0, 14);
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("/home/roham/Results-Utestgen/dataset/SF110-new-res/64_jtailgui");
FileSystemHandling.appendStringToFile(evoSuiteFile, "");
jTailPanel.update((Observable) jTailModel, (Object) jTailModelEvent);
Test 3: 
MockFile mockFile = new MockFile("");
RamFileIndex ramFileIndex = new RamFileIndex(mockFile);
ImmutableFileIndex immutableFileIndex = new ImmutableFileIndex(ramFileIndex);
ramFileIndex.setOffsetOfLine(0, 1L);
LineReader lineReader = new LineReader(mockFile, immutableFileIndex);
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("/home/roham/Results-Utestgen/dataset/SF110-new-res/64_jtailgui");
JTailModel jTailModel = new JTailModel(mockFile, lineReader);
JTailPanel jTailPanel = new JTailPanel(jTailModel);
mockFile.delete();
FileSystemHandling.appendStringToFile(evoSuiteFile, "");
jTailModel.setNbDisplayedLines(11);
Test 4: 
MockFile mockFile = new MockFile("");
RamFileIndex ramFileIndex = new RamFileIndex(mockFile);
ramFileIndex.setOffsetOfLine(0, 0);
LineReader lineReader = new LineReader(mockFile, ramFileIndex);
JTailModel jTailModel = new JTailModel(mockFile, lineReader);
JTailPanel jTailPanel = new JTailPanel(jTailModel);
jTailPanel.setSize(0, 3092);
mockFile.delete();
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("/home/roham/Results-Utestgen/dataset/SF110-new-res/64_jtailgui");
FileSystemHandling.appendStringToFile(evoSuiteFile, "");
jTailModel.setNbDisplayedLines(0);
jTailPanel.getCharacterHeight();
Test 5: 
MockFile mockFile = new MockFile("");
RamFileIndex ramFileIndex = new RamFileIndex(mockFile);
ramFileIndex.setOffsetOfLine(0, 0);
LineReader lineReader = new LineReader(mockFile, ramFileIndex);
JTailModel jTailModel = new JTailModel(mockFile, lineReader);
JTailPanel jTailPanel = new JTailPanel(jTailModel);
JTailModelEvent jTailModelEvent = new JTailModelEvent((JTailModelEvent.Type) null, 64, 4, 4, 64);
jTailPanel.update((Observable) jTailModel, (Object) jTailModelEvent);
Test 6: 
MockFile mockFile = new MockFile("");
RamFileIndex ramFileIndex = new RamFileIndex(mockFile);
ramFileIndex.setOffsetOfLine(0, 4083L);
LineReader lineReader = new LineReader(mockFile, ramFileIndex);
JTailModel jTailModel = new JTailModel(mockFile, lineReader);
JTailPanel jTailPanel = new JTailPanel(jTailModel);
JTailModelEvent.Type jTailModelEvent_Type = JTailModelEvent.Type.SCROLLED;
JTailModelEvent jTailModelEvent = new JTailModelEvent(jTailModelEvent_Type, 14, 1514, (-1984), (-20));
// Undeclared exception!
try { 
  jTailPanel.update((Observable) jTailModel, (Object) jTailModelEvent);
  fail("Expecting exception: HeadlessException");

} catch(HeadlessException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("java.awt.GraphicsEnvironment", e);
}

Test 7: 
MockFile mockFile = new MockFile("C:example.txt");
RamFileIndex ramFileIndex = new RamFileIndex(mockFile);
ImmutableFileIndex immutableFileIndex = new ImmutableFileIndex(ramFileIndex);
((RamFileIndex) mockFile).setOffsetOfLine(0, 1L);
LineReader lineReader = new LineReader(mockFile, immutableFileIndex);
JTailModel jTailModel = new JTailModel(mockFile, lineReader);
JTailPanel jTailPanel = new JTailPanel(jTailModel);
((JTailPanel) _void).getVerticalScrollBar();

Test 8: 
MockFile mockFile = new MockFile("access_log");
RamFileIndex ramFileIndex = new RamFileIndex(mockFile);
((RamFileIndex) mockFile).setOffsetOfLine(0, 100);
LineReader lineReader = new LineReader(mockFile, ramFileIndex);
JTailModel jTailModel = new JTailModel(mockFile, lineReader);
JTailPanel jTailPanel = new JTailPanel(jTailModel);
Observable observable = new Observable();
((JTailPanel) _void).update(observable, (Object) lineReader);

Test 9: 
String string = "C:\\Users\\Public\\Documents\\file.txt";
MockFile mockFile = new MockFile("C:UsersPublicDocuments\file.txt");
RamFileIndex ramFileIndex = new RamFileIndex(mockFile);
((RamFileIndex) mockFile).setOffsetOfLine(0, 0);
LineReader lineReader = new LineReader(mockFile, ramFileIndex);
JTailModel jTailModel = new JTailModel(mockFile, lineReader);
JTailPanel jTailPanel = new JTailPanel(jTailModel);
((MockFile) string).delete();
int _int = 14;
int _int = 4;
int _int = 0;
int _int = 14;
JTailModelEvent jTailModelEvent = new JTailModelEvent((JTailModelEvent.Type) _int, _int, _int, _int, 14);
String string = "This is a sample file used for testing.";
String string = null;
FileSystemHandling.appendStringToFile((EvoSuiteFile) string, string);
((JTailPanel) _void).update((Observable) jTailModel, (Object) jTailModelEvent);

Test 10: 
String string = "test_file.txt";
MockFile mockFile = new MockFile("test_file.txt");
RamFileIndex ramFileIndex = new RamFileIndex(mockFile);
ImmutableFileIndex immutableFileIndex = new ImmutableFileIndex(ramFileIndex);
((RamFileIndex) mockFile).setOffsetOfLine(0, 1L);
LineReader lineReader = new LineReader(mockFile, immutableFileIndex);
JTailModel jTailModel = new JTailModel(mockFile, lineReader);
JTailPanel jTailPanel = new JTailPanel(jTailModel);
((MockFile) string).delete();
String string = "This is a test file used to demonstrate the use of JTail in a Java application.\n";
String string = null;
FileSystemHandling.appendStringToFile((EvoSuiteFile) string, string);
int _int = 11;
((JTailModel) _void).setNbDisplayedLines(_int);

Test 11: 
String string = "This is a sample text file for testing JTail.";
MockFile mockFile = new MockFile("This is a sample text file for testing JTail.");
RamFileIndex ramFileIndex = new RamFileIndex(mockFile);
int _int = 0;
((RamFileIndex) mockFile).setOffsetOfLine(0, 0);
LineReader lineReader = new LineReader(mockFile, ramFileIndex);
JTailModel jTailModel = new JTailModel(mockFile, lineReader);
JTailPanel jTailPanel = new JTailPanel(jTailModel);
int _int = 0;
int _int = 3092;
((Component) _void).setSize(_int, _int);
((MockFile) string).delete();
String string = "This is a sample text file for testing JTail.";
String string = null;
FileSystemHandling.appendStringToFile((EvoSuiteFile) string, string);
int _int = 3;
((JTailModel) _int).setNbDisplayedLines(_int);
((JTailPanel) _void).getCharacterHeight();

Test 12: 
MockFile mockFile = new MockFile("test_file.txt");
RamFileIndex ramFileIndex = new RamFileIndex(mockFile);
((RamFileIndex) mockFile).setOffsetOfLine(0, 0);
LineReader lineReader = new LineReader(mockFile, ramFileIndex);
JTailModel jTailModel = new JTailModel(mockFile, lineReader);
JTailPanel jTailPanel = new JTailPanel(jTailModel);
int _int = 64;
int _int = 4;
int _int = 4;
int _int = 64;
JTailModelEvent jTailModelEvent = new JTailModelEvent((JTailModelEvent.Type) _int, _int, _int, _int, 64);
((JTailPanel) _void).update((Observable) jTailModel, (Object) jTailModelEvent);

Test 13: 
MockFile mockFile = new MockFile("example_file.txt");
RamFileIndex ramFileIndex = new RamFileIndex(mockFile);
((RamFileIndex) mockFile).setOffsetOfLine(0, 4083L);
LineReader lineReader = new LineReader(mockFile, ramFileIndex);
JTailModel jTailModel = new JTailModel(mockFile, lineReader);
JTailPanel jTailPanel = new JTailPanel(jTailModel);
int _int = 14;
int _int = 1514;
JTailModelEvent jTailModelEvent = new JTailModelEvent((JTailModelEvent.Type) _int, _int, 1514, (-1984), (-20));
((JTailPanel) _void).update((Observable) jTailModel, (Object) jTailModelEvent);


* Generated after the refinement and before minimization 14 tests with total length 155
* test suite isTestSuite: 14
Test 0: 
MockFile mockFile = new MockFile("");
RamFileIndex ramFileIndex = new RamFileIndex(mockFile);
ImmutableFileIndex immutableFileIndex = new ImmutableFileIndex(ramFileIndex);
ramFileIndex.setOffsetOfLine(0, 1L);
LineReader lineReader = new LineReader(mockFile, immutableFileIndex);
JTailModel jTailModel = new JTailModel(mockFile, lineReader);
JTailPanel jTailPanel = new JTailPanel(jTailModel);
jTailPanel.getVerticalScrollBar();
Test 1: 
MockFile mockFile = new MockFile("");
RamFileIndex ramFileIndex = new RamFileIndex(mockFile);
ramFileIndex.setOffsetOfLine(0, 0);
LineReader lineReader = new LineReader(mockFile, ramFileIndex);
JTailModel jTailModel = new JTailModel(mockFile, lineReader);
JTailPanel jTailPanel = new JTailPanel(jTailModel);
Observable observable = new Observable();
jTailPanel.update(observable, (Object) lineReader);
Test 2: 
MockFile mockFile = new MockFile("");
RamFileIndex ramFileIndex = new RamFileIndex(mockFile);
ramFileIndex.setOffsetOfLine(0, 0);
LineReader lineReader = new LineReader(mockFile, ramFileIndex);
JTailModel jTailModel = new JTailModel(mockFile, lineReader);
JTailPanel jTailPanel = new JTailPanel(jTailModel);
mockFile.delete();
JTailModelEvent.Type jTailModelEvent_Type = JTailModelEvent.Type.RESIZED;
JTailModelEvent jTailModelEvent = new JTailModelEvent(jTailModelEvent_Type, 14, 4, 0, 14);
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("/home/roham/Results-Utestgen/dataset/SF110-new-res/64_jtailgui");
FileSystemHandling.appendStringToFile(evoSuiteFile, "");
jTailPanel.update((Observable) jTailModel, (Object) jTailModelEvent);
Test 3: 
MockFile mockFile = new MockFile("");
RamFileIndex ramFileIndex = new RamFileIndex(mockFile);
ImmutableFileIndex immutableFileIndex = new ImmutableFileIndex(ramFileIndex);
ramFileIndex.setOffsetOfLine(0, 1L);
LineReader lineReader = new LineReader(mockFile, immutableFileIndex);
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("/home/roham/Results-Utestgen/dataset/SF110-new-res/64_jtailgui");
JTailModel jTailModel = new JTailModel(mockFile, lineReader);
JTailPanel jTailPanel = new JTailPanel(jTailModel);
mockFile.delete();
FileSystemHandling.appendStringToFile(evoSuiteFile, "");
jTailModel.setNbDisplayedLines(11);
Test 4: 
MockFile mockFile = new MockFile("");
RamFileIndex ramFileIndex = new RamFileIndex(mockFile);
ramFileIndex.setOffsetOfLine(0, 0);
LineReader lineReader = new LineReader(mockFile, ramFileIndex);
JTailModel jTailModel = new JTailModel(mockFile, lineReader);
JTailPanel jTailPanel = new JTailPanel(jTailModel);
jTailPanel.setSize(0, 3092);
mockFile.delete();
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("/home/roham/Results-Utestgen/dataset/SF110-new-res/64_jtailgui");
FileSystemHandling.appendStringToFile(evoSuiteFile, "");
jTailModel.setNbDisplayedLines(0);
jTailPanel.getCharacterHeight();
Test 5: 
MockFile mockFile = new MockFile("");
RamFileIndex ramFileIndex = new RamFileIndex(mockFile);
ramFileIndex.setOffsetOfLine(0, 0);
LineReader lineReader = new LineReader(mockFile, ramFileIndex);
JTailModel jTailModel = new JTailModel(mockFile, lineReader);
JTailPanel jTailPanel = new JTailPanel(jTailModel);
JTailModelEvent jTailModelEvent = new JTailModelEvent((JTailModelEvent.Type) null, 64, 4, 4, 64);
jTailPanel.update((Observable) jTailModel, (Object) jTailModelEvent);
Test 6: 
MockFile mockFile = new MockFile("");
RamFileIndex ramFileIndex = new RamFileIndex(mockFile);
ramFileIndex.setOffsetOfLine(0, 4083L);
LineReader lineReader = new LineReader(mockFile, ramFileIndex);
JTailModel jTailModel = new JTailModel(mockFile, lineReader);
JTailPanel jTailPanel = new JTailPanel(jTailModel);
JTailModelEvent.Type jTailModelEvent_Type = JTailModelEvent.Type.SCROLLED;
JTailModelEvent jTailModelEvent = new JTailModelEvent(jTailModelEvent_Type, 14, 1514, (-1984), (-20));
// Undeclared exception!
try { 
  jTailPanel.update((Observable) jTailModel, (Object) jTailModelEvent);
  fail("Expecting exception: HeadlessException");

} catch(HeadlessException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("java.awt.GraphicsEnvironment", e);
}

Test 7: 
MockFile mockFile = new MockFile("C:example.txt");
RamFileIndex ramFileIndex = new RamFileIndex(mockFile);
ImmutableFileIndex immutableFileIndex = new ImmutableFileIndex(ramFileIndex);
((RamFileIndex) mockFile).setOffsetOfLine(0, 1L);
LineReader lineReader = new LineReader(mockFile, immutableFileIndex);
JTailModel jTailModel = new JTailModel(mockFile, lineReader);
JTailPanel jTailPanel = new JTailPanel(jTailModel);
((JTailPanel) _void).getVerticalScrollBar();

Test 8: 
MockFile mockFile = new MockFile("access_log");
RamFileIndex ramFileIndex = new RamFileIndex(mockFile);
((RamFileIndex) mockFile).setOffsetOfLine(0, 100);
LineReader lineReader = new LineReader(mockFile, ramFileIndex);
JTailModel jTailModel = new JTailModel(mockFile, lineReader);
JTailPanel jTailPanel = new JTailPanel(jTailModel);
Observable observable = new Observable();
((JTailPanel) _void).update(observable, (Object) lineReader);

Test 9: 
String string = "C:\\Users\\Public\\Documents\\file.txt";
MockFile mockFile = new MockFile("C:UsersPublicDocuments\file.txt");
RamFileIndex ramFileIndex = new RamFileIndex(mockFile);
((RamFileIndex) mockFile).setOffsetOfLine(0, 0);
LineReader lineReader = new LineReader(mockFile, ramFileIndex);
JTailModel jTailModel = new JTailModel(mockFile, lineReader);
JTailPanel jTailPanel = new JTailPanel(jTailModel);
((MockFile) string).delete();
int _int = 14;
int _int = 4;
int _int = 0;
int _int = 14;
JTailModelEvent jTailModelEvent = new JTailModelEvent((JTailModelEvent.Type) _int, _int, _int, _int, 14);
String string = "This is a sample file used for testing.";
String string = null;
FileSystemHandling.appendStringToFile((EvoSuiteFile) string, string);
((JTailPanel) _void).update((Observable) jTailModel, (Object) jTailModelEvent);

Test 10: 
String string = "test_file.txt";
MockFile mockFile = new MockFile("test_file.txt");
RamFileIndex ramFileIndex = new RamFileIndex(mockFile);
ImmutableFileIndex immutableFileIndex = new ImmutableFileIndex(ramFileIndex);
((RamFileIndex) mockFile).setOffsetOfLine(0, 1L);
LineReader lineReader = new LineReader(mockFile, immutableFileIndex);
JTailModel jTailModel = new JTailModel(mockFile, lineReader);
JTailPanel jTailPanel = new JTailPanel(jTailModel);
((MockFile) string).delete();
String string = "This is a test file used to demonstrate the use of JTail in a Java application.\n";
String string = null;
FileSystemHandling.appendStringToFile((EvoSuiteFile) string, string);
int _int = 11;
((JTailModel) _void).setNbDisplayedLines(_int);

Test 11: 
String string = "This is a sample text file for testing JTail.";
MockFile mockFile = new MockFile("This is a sample text file for testing JTail.");
RamFileIndex ramFileIndex = new RamFileIndex(mockFile);
int _int = 0;
((RamFileIndex) mockFile).setOffsetOfLine(0, 0);
LineReader lineReader = new LineReader(mockFile, ramFileIndex);
JTailModel jTailModel = new JTailModel(mockFile, lineReader);
JTailPanel jTailPanel = new JTailPanel(jTailModel);
int _int = 0;
int _int = 3092;
((Component) _void).setSize(_int, _int);
((MockFile) string).delete();
String string = "This is a sample text file for testing JTail.";
String string = null;
FileSystemHandling.appendStringToFile((EvoSuiteFile) string, string);
int _int = 3;
((JTailModel) _int).setNbDisplayedLines(_int);
((JTailPanel) _void).getCharacterHeight();

Test 12: 
MockFile mockFile = new MockFile("test_file.txt");
RamFileIndex ramFileIndex = new RamFileIndex(mockFile);
((RamFileIndex) mockFile).setOffsetOfLine(0, 0);
LineReader lineReader = new LineReader(mockFile, ramFileIndex);
JTailModel jTailModel = new JTailModel(mockFile, lineReader);
JTailPanel jTailPanel = new JTailPanel(jTailModel);
int _int = 64;
int _int = 4;
int _int = 4;
int _int = 64;
JTailModelEvent jTailModelEvent = new JTailModelEvent((JTailModelEvent.Type) _int, _int, _int, _int, 64);
((JTailPanel) _void).update((Observable) jTailModel, (Object) jTailModelEvent);

Test 13: 
MockFile mockFile = new MockFile("example_file.txt");
RamFileIndex ramFileIndex = new RamFileIndex(mockFile);
((RamFileIndex) mockFile).setOffsetOfLine(0, 4083L);
LineReader lineReader = new LineReader(mockFile, ramFileIndex);
JTailModel jTailModel = new JTailModel(mockFile, lineReader);
JTailPanel jTailPanel = new JTailPanel(jTailModel);
int _int = 14;
int _int = 1514;
JTailModelEvent jTailModelEvent = new JTailModelEvent((JTailModelEvent.Type) _int, _int, 1514, (-1984), (-20));
((JTailPanel) _void).update((Observable) jTailModel, (Object) jTailModelEvent);


* Minimizing test suite
* test suite isTestSuite: 9
Test 0: 
MockFile mockFile = new MockFile("");
RamFileIndex ramFileIndex = new RamFileIndex(mockFile);
ImmutableFileIndex immutableFileIndex = new ImmutableFileIndex(ramFileIndex);
ramFileIndex.setOffsetOfLine(0, 1L);
LineReader lineReader = new LineReader(mockFile, immutableFileIndex);
JTailModel jTailModel = new JTailModel(mockFile, lineReader);
JTailPanel jTailPanel = new JTailPanel(jTailModel);
jTailPanel.getVerticalScrollBar();
Test 1: 
MockFile mockFile = new MockFile("");
RamFileIndex ramFileIndex = new RamFileIndex(mockFile);
ramFileIndex.setOffsetOfLine(0, 0);
LineReader lineReader = new LineReader(mockFile, ramFileIndex);
JTailModel jTailModel = new JTailModel(mockFile, lineReader);
JTailPanel jTailPanel = new JTailPanel(jTailModel);
jTailPanel.getCharacterHeight();
Test 2: 
MockFile mockFile = new MockFile("");
RamFileIndex ramFileIndex = new RamFileIndex(mockFile);
ramFileIndex.setOffsetOfLine(0, 0);
LineReader lineReader = new LineReader(mockFile, ramFileIndex);
JTailModel jTailModel = new JTailModel(mockFile, lineReader);
JTailPanel jTailPanel = new JTailPanel(jTailModel);
Observable observable = new Observable();
jTailPanel.update(observable, (Object) lineReader);
Test 3: 
MockFile mockFile = new MockFile("");
RamFileIndex ramFileIndex = new RamFileIndex(mockFile);
ramFileIndex.setOffsetOfLine(0, 0);
LineReader lineReader = new LineReader(mockFile, ramFileIndex);
JTailModel jTailModel = new JTailModel(mockFile, lineReader);
JTailPanel jTailPanel = new JTailPanel(jTailModel);
JTailModelEvent jTailModelEvent = new JTailModelEvent((JTailModelEvent.Type) null, 64, 4, 4, 64);
jTailPanel.update((Observable) jTailModel, (Object) jTailModelEvent);
Test 4: 
MockFile mockFile = new MockFile("");
RamFileIndex ramFileIndex = new RamFileIndex(mockFile);
ramFileIndex.setOffsetOfLine(0, 0);
LineReader lineReader = new LineReader(mockFile, ramFileIndex);
JTailModel jTailModel = new JTailModel(mockFile, lineReader);
JTailPanel jTailPanel = new JTailPanel(jTailModel);
mockFile.delete();
JTailModelEvent.Type jTailModelEvent_Type = JTailModelEvent.Type.RESIZED;
JTailModelEvent jTailModelEvent = new JTailModelEvent(jTailModelEvent_Type, 14, 4, 0, 14);
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("/home/roham/Results-Utestgen/dataset/SF110-new-res/64_jtailgui");
FileSystemHandling.appendStringToFile(evoSuiteFile, "");
jTailPanel.update((Observable) jTailModel, (Object) jTailModelEvent);
Test 5: 
MockFile mockFile = new MockFile("");
RamFileIndex ramFileIndex = new RamFileIndex(mockFile);
ImmutableFileIndex immutableFileIndex = new ImmutableFileIndex(ramFileIndex);
ramFileIndex.setOffsetOfLine(0, 1L);
LineReader lineReader = new LineReader(mockFile, immutableFileIndex);
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("/home/roham/Results-Utestgen/dataset/SF110-new-res/64_jtailgui");
JTailModel jTailModel = new JTailModel(mockFile, lineReader);
JTailPanel jTailPanel = new JTailPanel(jTailModel);
mockFile.delete();
FileSystemHandling.appendStringToFile(evoSuiteFile, "");
jTailModel.setNbDisplayedLines(11);
Test 6: 
MockFile mockFile = new MockFile("");
RamFileIndex ramFileIndex = new RamFileIndex(mockFile);
ramFileIndex.setOffsetOfLine(0, 0);
LineReader lineReader = new LineReader(mockFile, ramFileIndex);
JTailModel jTailModel = new JTailModel(mockFile, lineReader);
JTailPanel jTailPanel = new JTailPanel(jTailModel);
mockFile.delete();
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("/home/roham/Results-Utestgen/dataset/SF110-new-res/64_jtailgui");
FileSystemHandling.appendStringToFile(evoSuiteFile, "");
jTailModel.setNbDisplayedLines(0);
Test 7: 
MockFile mockFile = new MockFile("");
RamFileIndex ramFileIndex = new RamFileIndex(mockFile);
ramFileIndex.setOffsetOfLine(0, 0);
LineReader lineReader = new LineReader(mockFile, ramFileIndex);
JTailModel jTailModel = new JTailModel(mockFile, lineReader);
JTailPanel jTailPanel = new JTailPanel(jTailModel);
jTailPanel.setSize(0, 3092);
mockFile.delete();
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("/home/roham/Results-Utestgen/dataset/SF110-new-res/64_jtailgui");
FileSystemHandling.appendStringToFile(evoSuiteFile, "");
jTailModel.setNbDisplayedLines(0);
Test 8: 
MockFile mockFile = new MockFile("");
RamFileIndex ramFileIndex = new RamFileIndex(mockFile);
ramFileIndex.setOffsetOfLine(0, 4083L);
LineReader lineReader = new LineReader(mockFile, ramFileIndex);
JTailModel jTailModel = new JTailModel(mockFile, lineReader);
JTailPanel jTailPanel = new JTailPanel(jTailModel);
JTailModelEvent.Type jTailModelEvent_Type = JTailModelEvent.Type.SCROLLED;
JTailModelEvent jTailModelEvent = new JTailModelEvent(jTailModelEvent_Type, 14, 1514, (-1984), (-20));
// Undeclared exception!
try { 
  jTailPanel.update((Observable) jTailModel, (Object) jTailModelEvent);
  fail("Expecting exception: HeadlessException");

} catch(HeadlessException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("java.awt.GraphicsEnvironment", e);
}


* Going to analyze the coverage criteria
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 91%
* Total number of goals: 23
* Number of covered goals: 21
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 98%
* Total number of goals: 65
* Number of covered goals: 64
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 43%
* Total number of goals: 14
* Number of covered goals: 6
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 4
* Number of covered goals: 4
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 91%
* Total number of goals: 23
* Number of covered goals: 21
* Generated 9 tests with total length 84
* Resulting test suite's coverage: 85% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 39%
* Compiling and checking tests
Going to execute: removeTestsThatDoNotCompile
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
Going to execute: handleTestsThatAreUnstable
[MASTER] 13:29:22.470 [logback-1] WARN  TimeController - Already entered in phase: INLINING. This will mess up the timing calculations.
* test suite isTestSuite: 8
Test 0: 
MockFile mockFile = new MockFile("");
RamFileIndex ramFileIndex = new RamFileIndex(mockFile);
ImmutableFileIndex immutableFileIndex = new ImmutableFileIndex(ramFileIndex);
ramFileIndex.setOffsetOfLine(0, 1L);
LineReader lineReader = new LineReader(mockFile, immutableFileIndex);
JTailModel jTailModel = new JTailModel(mockFile, lineReader);
JTailPanel jTailPanel = new JTailPanel(jTailModel);
jTailPanel.getVerticalScrollBar();
Test 1: 
MockFile mockFile = new MockFile("");
RamFileIndex ramFileIndex = new RamFileIndex(mockFile);
ramFileIndex.setOffsetOfLine(0, 0);
LineReader lineReader = new LineReader(mockFile, ramFileIndex);
JTailModel jTailModel = new JTailModel(mockFile, lineReader);
JTailPanel jTailPanel = new JTailPanel(jTailModel);
Observable observable = new Observable();
jTailPanel.update(observable, (Object) lineReader);
Test 2: 
MockFile mockFile = new MockFile("");
RamFileIndex ramFileIndex = new RamFileIndex(mockFile);
ramFileIndex.setOffsetOfLine(0, 0);
LineReader lineReader = new LineReader(mockFile, ramFileIndex);
JTailModel jTailModel = new JTailModel(mockFile, lineReader);
JTailPanel jTailPanel = new JTailPanel(jTailModel);
mockFile.delete();
JTailModelEvent.Type jTailModelEvent_Type = JTailModelEvent.Type.RESIZED;
JTailModelEvent jTailModelEvent = new JTailModelEvent(jTailModelEvent_Type, 14, 4, 0, 14);
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("/home/roham/Results-Utestgen/dataset/SF110-new-res/64_jtailgui");
FileSystemHandling.appendStringToFile(evoSuiteFile, "");
jTailPanel.update((Observable) jTailModel, (Object) jTailModelEvent);
Test 3: 
MockFile mockFile = new MockFile("");
RamFileIndex ramFileIndex = new RamFileIndex(mockFile);
ramFileIndex.setOffsetOfLine(0, 0);
LineReader lineReader = new LineReader(mockFile, ramFileIndex);
JTailModel jTailModel = new JTailModel(mockFile, lineReader);
JTailPanel jTailPanel = new JTailPanel(jTailModel);
mockFile.delete();
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("/home/roham/Results-Utestgen/dataset/SF110-new-res/64_jtailgui");
FileSystemHandling.appendStringToFile(evoSuiteFile, "");
jTailModel.setNbDisplayedLines(0);
Test 4: 
MockFile mockFile = new MockFile("");
RamFileIndex ramFileIndex = new RamFileIndex(mockFile);
ImmutableFileIndex immutableFileIndex = new ImmutableFileIndex(ramFileIndex);
ramFileIndex.setOffsetOfLine(0, 1L);
LineReader lineReader = new LineReader(mockFile, immutableFileIndex);
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("/home/roham/Results-Utestgen/dataset/SF110-new-res/64_jtailgui");
JTailModel jTailModel = new JTailModel(mockFile, lineReader);
JTailPanel jTailPanel = new JTailPanel(jTailModel);
mockFile.delete();
FileSystemHandling.appendStringToFile(evoSuiteFile, "");
jTailModel.setNbDisplayedLines(11);
Test 5: 
MockFile mockFile = new MockFile("");
RamFileIndex ramFileIndex = new RamFileIndex(mockFile);
ramFileIndex.setOffsetOfLine(0, 0);
LineReader lineReader = new LineReader(mockFile, ramFileIndex);
JTailModel jTailModel = new JTailModel(mockFile, lineReader);
JTailPanel jTailPanel = new JTailPanel(jTailModel);
jTailPanel.setSize(0, 3092);
mockFile.delete();
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("/home/roham/Results-Utestgen/dataset/SF110-new-res/64_jtailgui");
FileSystemHandling.appendStringToFile(evoSuiteFile, "");
jTailModel.setNbDisplayedLines(0);
jTailPanel.getCharacterHeight();
Test 6: 
MockFile mockFile = new MockFile("");
RamFileIndex ramFileIndex = new RamFileIndex(mockFile);
ramFileIndex.setOffsetOfLine(0, 0);
LineReader lineReader = new LineReader(mockFile, ramFileIndex);
JTailModel jTailModel = new JTailModel(mockFile, lineReader);
JTailPanel jTailPanel = new JTailPanel(jTailModel);
JTailModelEvent jTailModelEvent = new JTailModelEvent((JTailModelEvent.Type) null, 64, 4, 4, 64);
jTailPanel.update((Observable) jTailModel, (Object) jTailModelEvent);
Test 7: 
MockFile mockFile = new MockFile("");
RamFileIndex ramFileIndex = new RamFileIndex(mockFile);
ramFileIndex.setOffsetOfLine(0, 4083L);
LineReader lineReader = new LineReader(mockFile, ramFileIndex);
JTailModel jTailModel = new JTailModel(mockFile, lineReader);
JTailPanel jTailPanel = new JTailPanel(jTailModel);
JTailModelEvent.Type jTailModelEvent_Type = JTailModelEvent.Type.SCROLLED;
JTailModelEvent jTailModelEvent = new JTailModelEvent(jTailModelEvent_Type, 14, 1514, (-1984), (-20));
// Undeclared exception!
try { 
  jTailPanel.update((Observable) jTailModel, (Object) jTailModelEvent);
  fail("Expecting exception: HeadlessException");

} catch(HeadlessException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("java.awt.GraphicsEnvironment", e);
}


* Minimizing test suite
* test suite isTestSuite: 8
Test 0: 
MockFile mockFile = new MockFile("");
RamFileIndex ramFileIndex = new RamFileIndex(mockFile);
ImmutableFileIndex immutableFileIndex = new ImmutableFileIndex(ramFileIndex);
ramFileIndex.setOffsetOfLine(0, 1L);
LineReader lineReader = new LineReader(mockFile, immutableFileIndex);
JTailModel jTailModel = new JTailModel(mockFile, lineReader);
JTailPanel jTailPanel = new JTailPanel(jTailModel);
jTailPanel.getVerticalScrollBar();
Test 1: 
MockFile mockFile = new MockFile("");
RamFileIndex ramFileIndex = new RamFileIndex(mockFile);
ramFileIndex.setOffsetOfLine(0, 0);
LineReader lineReader = new LineReader(mockFile, ramFileIndex);
JTailModel jTailModel = new JTailModel(mockFile, lineReader);
JTailPanel jTailPanel = new JTailPanel(jTailModel);
jTailPanel.getCharacterHeight();
Test 2: 
MockFile mockFile = new MockFile("");
RamFileIndex ramFileIndex = new RamFileIndex(mockFile);
ramFileIndex.setOffsetOfLine(0, 0);
LineReader lineReader = new LineReader(mockFile, ramFileIndex);
JTailModel jTailModel = new JTailModel(mockFile, lineReader);
JTailPanel jTailPanel = new JTailPanel(jTailModel);
Observable observable = new Observable();
jTailPanel.update(observable, (Object) lineReader);
Test 3: 
MockFile mockFile = new MockFile("");
RamFileIndex ramFileIndex = new RamFileIndex(mockFile);
ramFileIndex.setOffsetOfLine(0, 0);
LineReader lineReader = new LineReader(mockFile, ramFileIndex);
JTailModel jTailModel = new JTailModel(mockFile, lineReader);
JTailPanel jTailPanel = new JTailPanel(jTailModel);
JTailModelEvent jTailModelEvent = new JTailModelEvent((JTailModelEvent.Type) null, 64, 4, 4, 64);
jTailPanel.update((Observable) jTailModel, (Object) jTailModelEvent);
Test 4: 
MockFile mockFile = new MockFile("");
RamFileIndex ramFileIndex = new RamFileIndex(mockFile);
ramFileIndex.setOffsetOfLine(0, 0);
LineReader lineReader = new LineReader(mockFile, ramFileIndex);
JTailModel jTailModel = new JTailModel(mockFile, lineReader);
JTailPanel jTailPanel = new JTailPanel(jTailModel);
mockFile.delete();
JTailModelEvent.Type jTailModelEvent_Type = JTailModelEvent.Type.RESIZED;
JTailModelEvent jTailModelEvent = new JTailModelEvent(jTailModelEvent_Type, 14, 4, 0, 14);
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("/home/roham/Results-Utestgen/dataset/SF110-new-res/64_jtailgui");
FileSystemHandling.appendStringToFile(evoSuiteFile, "");
jTailPanel.update((Observable) jTailModel, (Object) jTailModelEvent);
Test 5: 
MockFile mockFile = new MockFile("");
RamFileIndex ramFileIndex = new RamFileIndex(mockFile);
ramFileIndex.setOffsetOfLine(0, 0);
LineReader lineReader = new LineReader(mockFile, ramFileIndex);
JTailModel jTailModel = new JTailModel(mockFile, lineReader);
JTailPanel jTailPanel = new JTailPanel(jTailModel);
mockFile.delete();
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("/home/roham/Results-Utestgen/dataset/SF110-new-res/64_jtailgui");
FileSystemHandling.appendStringToFile(evoSuiteFile, "");
jTailModel.setNbDisplayedLines(0);
Test 6: 
MockFile mockFile = new MockFile("");
RamFileIndex ramFileIndex = new RamFileIndex(mockFile);
ImmutableFileIndex immutableFileIndex = new ImmutableFileIndex(ramFileIndex);
ramFileIndex.setOffsetOfLine(0, 1L);
LineReader lineReader = new LineReader(mockFile, immutableFileIndex);
EvoSuiteFile evoSuiteFile = new EvoSuiteFile("/home/roham/Results-Utestgen/dataset/SF110-new-res/64_jtailgui");
JTailModel jTailModel = new JTailModel(mockFile, lineReader);
JTailPanel jTailPanel = new JTailPanel(jTailModel);
mockFile.delete();
FileSystemHandling.appendStringToFile(evoSuiteFile, "");
jTailModel.setNbDisplayedLines(11);
Test 7: 
MockFile mockFile = new MockFile("");
RamFileIndex ramFileIndex = new RamFileIndex(mockFile);
ramFileIndex.setOffsetOfLine(0, 4083L);
LineReader lineReader = new LineReader(mockFile, ramFileIndex);
JTailModel jTailModel = new JTailModel(mockFile, lineReader);
JTailPanel jTailPanel = new JTailPanel(jTailModel);
JTailModelEvent.Type jTailModelEvent_Type = JTailModelEvent.Type.SCROLLED;
JTailModelEvent jTailModelEvent = new JTailModelEvent(jTailModelEvent_Type, 14, 1514, (-1984), (-20));
// Undeclared exception!
try { 
  jTailPanel.update((Observable) jTailModel, (Object) jTailModelEvent);
  fail("Expecting exception: HeadlessException");

} catch(HeadlessException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("java.awt.GraphicsEnvironment", e);
}


[MASTER] 13:29:25.021 [logback-1] WARN  TimeController - Already entered in phase: MINIMIZATION. This will mess up the timing calculations.
* Going to analyze the coverage criteria
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 87%
* Total number of goals: 23
* Number of covered goals: 20
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 97%
* Total number of goals: 65
* Number of covered goals: 63
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 43%
* Total number of goals: 14
* Number of covered goals: 6
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 4
* Number of covered goals: 4
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 87%
* Total number of goals: 23
* Number of covered goals: 20
* Generated 8 tests with total length 73
* Resulting test suite's coverage: 85% (average coverage for all fitness functions)
[MASTER] 13:29:25.070 [logback-1] WARN  TimeController - Already entered in phase: COVERAGE_ANALYSIS. This will mess up the timing calculations.
* Generating assertions
* Resulting test suite's mutation score: 37%
* Compiling and checking tests
[MASTER] 13:29:30.859 [logback-1] WARN  TimeController - Already entered in phase: ASSERTION_GENERATION. This will mess up the timing calculations.
Going to execute: removeTestsThatDoNotCompile
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
Going to execute: handleTestsThatAreUnstable
* Writing tests to file
[MASTER] 13:29:31.327 [logback-1] WARN  TimeController - Already entered in phase: JUNIT_CHECK. This will mess up the timing calculations.
* Writing JUnit test case 'JTailPanel_ESTest' to evosuite-tests
* Writing JUnit test case 'JTailPanel_Original_ESTest' to evosuite-tests
* Done!

* Computation finished
