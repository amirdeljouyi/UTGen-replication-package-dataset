* EvoSuite 1.0.0-SNAPSHOT
* Going to generate test cases for class: fr.pingtimeout.jtail.gui.view.JTailPanel
* Starting Client-0
* Properties loaded from /home/roham/Results-Utestgen/dataset/SF110-new-res/64_jtailgui/evosuite-files/evosuite.properties
* Connecting to master process on port 13596
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 18:39:40.010 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 18:39:40.012 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 18:39:40.378 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 18:39:40.423 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 18:39:40.425 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 18:39:40.426 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
[MASTER] 18:39:42.761 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.ZoneId
[MASTER] 18:39:42.846 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.Temporal
[MASTER] 18:39:42.846 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAccessor
[MASTER] 18:39:42.847 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalField
[MASTER] 18:39:42.848 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalUnit
[MASTER] 18:39:42.848 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAmount
[MASTER] 18:39:42.848 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.Clock
[MASTER] 18:39:42.849 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalQuery
[MASTER] 18:39:42.850 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAdjuster
[MASTER] 18:39:42.866 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.Chronology
[MASTER] 18:39:42.882 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.Era
* Finished analyzing classpath
* Generating tests for class fr.pingtimeout.jtail.gui.view.JTailPanel
* Test criteria:
  - Branch Coverage
  - Line Coverage
  - Method-Output Coverage
  - Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 129
* Using seed 1710268776204
* Starting evolution
[Progress:>                             0%] [Cov:>                                  0%]* Initial Number of Goals in DynaMOSA = 63 / 129
[Progress:>                             0%] [Cov:==>                                7%][Progress:>                             0%] [Cov:==>                                7%][Progress:>                             0%] [Cov:==>                                7%][Progress:>                             1%] [Cov:==>                                7%][Progress:>                             1%] [Cov:==>                                7%][Progress:>                             1%] [Cov:==>                                7%][Progress:>                             1%] [Cov:==>                                7%][Progress:>                             1%] [Cov:==>                                7%][Progress:>                             1%] [Cov:==>                                7%][Progress:>                             1%] [Cov:==>                                7%][Progress:>                             1%] [Cov:==>                                7%][Progress:>                             2%] [Cov:==>                                7%][Progress:>                             2%] [Cov:==>                                7%][Progress:>                             2%] [Cov:==>                                7%][Progress:>                             2%] [Cov:==>                                7%][Progress:>                             2%] [Cov:==>                                7%][Progress:>                             2%] [Cov:==>                                7%][Progress:>                             2%] [Cov:==>                                7%][Progress:>                             2%] [Cov:==>                                7%][Progress:>                             2%] [Cov:==>                                7%][Progress:>                             2%] [Cov:==>                                7%][Progress:>                             2%] [Cov:==>                                7%][Progress:>                             2%] [Cov:==>                                7%][Progress:>                             2%] [Cov:==>                                7%][Progress:>                             3%] [Cov:==>                                7%][Progress:>                             3%] [Cov:==>                                7%][Progress:>                             3%] [Cov:==>                                7%][Progress:>                             3%] [Cov:==>                                7%][Progress:>                             3%] [Cov:==>                                7%][Progress:>                             3%] [Cov:==>                                7%][Progress:>                             3%] [Cov:==>                                7%][Progress:>                             3%] [Cov:==>                                7%][Progress:>                             3%] [Cov:==>                                7%][Progress:>                             3%] [Cov:==>                                7%][Progress:=>                            4%] [Cov:==>                                7%][Progress:=>                            4%] [Cov:==>                                7%][Progress:=>                            4%] [Cov:==>                                7%][Progress:=>                            4%] [Cov:==>                                7%][Progress:=>                            4%] [Cov:==>                                7%][Progress:=>                            4%] [Cov:==>                                7%][Progress:=>                            4%] [Cov:==>                                7%][Progress:=>                            4%] [Cov:==>                                7%][Progress:=>                            4%] [Cov:==>                                7%][Progress:=>                            4%] [Cov:==>                                7%][Progress:=>                            4%] [Cov:==>                                7%][Progress:=>                            4%] [Cov:==>                                7%][Progress:=>                            4%] [Cov:==>                                7%][Progress:=>                            5%] [Cov:==>                                7%][Progress:=>                            5%] [Cov:==>                                7%][Progress:=>                            5%] [Cov:==>                                7%][Progress:=>                            5%] [Cov:==>                                7%][Progress:=>                            5%] [Cov:==>                                7%][Progress:=>                            5%] [Cov:==>                                7%][Progress:=>                            5%] [Cov:==>                                7%][Progress:=>                            5%] [Cov:==>                                7%][Progress:=>                            5%] [Cov:==>                                7%][Progress:=>                            5%] [Cov:==>                                7%][Progress:=>                            5%] [Cov:==>                                7%][Progress:=>                            5%] [Cov:==>                                7%][Progress:=>                            5%] [Cov:==>                                7%][Progress:=>                            5%] [Cov:==>                                7%][Progress:=>                            5%] [Cov:==>                                7%][Progress:=>                            5%] [Cov:==>                                7%][Progress:=>                            6%] [Cov:==>                                7%][Progress:=>                            6%] [Cov:==>                                7%][Progress:=>                            6%] [Cov:==>                                7%][Progress:=>                            6%] [Cov:==>                                7%][Progress:=>                            6%] [Cov:==>                                7%][Progress:=>                            6%] [Cov:==>                                7%][Progress:=>                            6%] [Cov:==>                                7%][Progress:=>                            6%] [Cov:==>                                7%][Progress:=>                            6%] [Cov:==>                                7%][Progress:=>                            6%] [Cov:==>                                7%][Progress:=>                            6%] [Cov:==>                                7%][Progress:=>                            6%] [Cov:==>                                7%][Progress:=>                            6%] [Cov:==>                                7%][Progress:=>                            6%] [Cov:==>                                7%][Progress:=>                            6%] [Cov:==>                                7%][Progress:=>                            6%] [Cov:==>                                7%][Progress:=>                            6%] [Cov:==>                                7%][Progress:==>                           7%] [Cov:==>                                7%][Progress:==>                           7%] [Cov:==>                                7%][Progress:==>                           7%] [Cov:==>                                7%][Progress:==>                           7%] [Cov:==>                                7%][MASTER] 18:39:58.225 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.ChronoLocalDate
[Progress:==>                           7%] [Cov:==>                                7%][Progress:==>                           7%] [Cov:==>                                7%][Progress:==>                           7%] [Cov:==>                                7%][Progress:==>                           7%] [Cov:==>                                7%][Progress:==>                           7%] [Cov:==>                                7%][Progress:==>                           7%] [Cov:==>                                7%][Progress:==>                           7%] [Cov:==>                                7%][Progress:==>                           7%] [Cov:==>                                7%][Progress:==>                           7%] [Cov:==>                                7%][Progress:==>                           7%] [Cov:==>                                7%][Progress:==>                           7%] [Cov:==>                                7%][Progress:==>                           7%] [Cov:==>                                7%][Progress:==>                           7%] [Cov:==>                                7%][Progress:==>                           7%] [Cov:==>                                7%][Progress:==>                           8%] [Cov:==>                                7%][Progress:==>                           8%] [Cov:==>                                7%][Progress:==>                           8%] [Cov:==>                                7%][Progress:==>                           8%] [Cov:==>                                7%][Progress:==>                           8%] [Cov:==>                                7%][Progress:==>                           8%] [Cov:==>                                7%][Progress:==>                           8%] [Cov:==>                                7%][Progress:==>                           8%] [Cov:==>                                7%][Progress:==>                           8%] [Cov:==>                                7%][Progress:==>                           8%] [Cov:==>                                7%][MASTER] 18:40:00.746 [logback-1] WARN  TestCluster - Failed to check cache for java.lang.Comparable<T> : Type points to itself
[Progress:==>                           8%] [Cov:==>                                7%][Progress:==>                           8%] [Cov:==>                                7%][Progress:==>                           8%] [Cov:==>                                7%][Progress:==>                           8%] [Cov:==>                                7%][Progress:==>                           8%] [Cov:==>                                7%][Progress:==>                           8%] [Cov:==>                                7%][Progress:==>                           8%] [Cov:==>                                7%][Progress:==>                           8%] [Cov:==>                                7%][Progress:==>                           9%] [Cov:==>                                7%][Progress:==>                           9%] [Cov:==>                                7%][Progress:==>                           9%] [Cov:==>                                7%][Progress:==>                           9%] [Cov:==>                                7%][Progress:==>                           9%] [Cov:==>                                7%][Progress:==>                           9%] [Cov:==>                                7%][Progress:==>                           9%] [Cov:==>                                7%][Progress:==>                           9%] [Cov:==>                                7%][Progress:==>                           9%] [Cov:==>                                7%][Progress:==>                           9%] [Cov:==>                                7%][Progress:==>                           9%] [Cov:==>                                7%][Progress:==>                           9%] [Cov:==>                                7%][Progress:==>                           9%] [Cov:==>                                7%][Progress:==>                           9%] [Cov:==>                                7%][Progress:==>                           9%] [Cov:==>                                7%][Progress:==>                           9%] [Cov:==>                                7%][Progress:==>                           9%] [Cov:==>                                7%][Progress:==>                           9%] [Cov:==>                                7%][Progress:===>                          10%] [Cov:==>                                7%][Progress:===>                          10%] [Cov:==>                                7%][Progress:===>                          10%] [Cov:==>                                7%][Progress:===>                          10%] [Cov:==>                                7%][Progress:===>                          10%] [Cov:==>                                7%][Progress:===>                          10%] [Cov:==>                                7%][Progress:===>                          10%] [Cov:==>                                7%][Progress:===>                          10%] [Cov:==>                                7%][Progress:===>                          10%] [Cov:==>                                7%][Progress:===>                          10%] [Cov:==>                                7%][Progress:===>                          10%] [Cov:==>                                7%][Progress:===>                          10%] [Cov:==>                                7%][Progress:===>                          10%] [Cov:==>                                7%][Progress:===>                          10%] [Cov:==>                                7%][Progress:===>                          10%] [Cov:==>                                7%][Progress:===>                          10%] [Cov:==>                                7%][Progress:===>                          10%] [Cov:==>                                7%][Progress:===>                          10%] [Cov:==>                                7%][Progress:===>                          10%] [Cov:==>                                7%][Progress:===>                          10%] [Cov:==>                                7%][Progress:===>                          11%] [Cov:==>                                7%][Progress:===>                          11%] [Cov:==>                                7%][Progress:===>                          11%] [Cov:==>                                7%][Progress:===>                          11%] [Cov:==>                                7%][Progress:===>                          11%] [Cov:==>                                7%][Progress:===>                          11%] [Cov:==>                                7%][Progress:===>                          11%] [Cov:==>                                7%][Progress:===>                          11%] [Cov:==>                                7%][Progress:===>                          11%] [Cov:==>                                7%][Progress:===>                          11%] [Cov:==>                                7%][Progress:===>                          11%] [Cov:==>                                7%][Progress:===>                          11%] [Cov:==>                                7%][Progress:===>                          11%] [Cov:==>                                7%][Progress:===>                          11%] [Cov:==>                                7%][Progress:===>                          11%] [Cov:==>                                7%][Progress:===>                          11%] [Cov:==>                                7%][Progress:===>                          11%] [Cov:==>                                7%][Progress:===>                          11%] [Cov:==>                                7%][Progress:===>                          12%] [Cov:==>                                7%][Progress:===>                          12%] [Cov:==>                                7%][Progress:===>                          12%] [Cov:==>                                7%][Progress:===>                          12%] [Cov:==>                                7%][Progress:===>                          12%] [Cov:==>                                7%][Progress:===>                          12%] [Cov:==>                                7%][Progress:===>                          12%] [Cov:==>                                7%][Progress:===>                          12%] [Cov:==>                                7%][Progress:===>                          12%] [Cov:==>                                7%][Progress:===>                          12%] [Cov:==>                                7%][Progress:===>                          12%] [Cov:==>                                7%][Progress:===>                          12%] [Cov:==>                                7%][Progress:===>                          12%] [Cov:==>                                7%][Progress:===>                          12%] [Cov:==>                                7%][Progress:===>                          12%] [Cov:==>                                7%][Progress:===>                          12%] [Cov:==>                                7%][Progress:===>                          12%] [Cov:==>                                7%][Progress:===>                          12%] [Cov:==>                                7%][Progress:===>                          12%] [Cov:==>                                7%][Progress:===>                          13%] [Cov:==>                                7%][Progress:===>                          13%] [Cov:==>                                7%][Progress:===>                          13%] [Cov:==>                                7%][Progress:===>                          13%] [Cov:==>                                7%][Progress:===>                          13%] [Cov:==>                                7%][Progress:===>                          13%] [Cov:==>                                7%][Progress:===>                          13%] [Cov:==>                                7%][Progress:===>                          13%] [Cov:==>                                7%][Progress:===>                          13%] [Cov:==>                                7%][Progress:===>                          13%] [Cov:==>                                7%][Progress:===>                          13%] [Cov:==>                                7%][Progress:===>                          13%] [Cov:==>                                7%][Progress:===>                          13%] [Cov:==>                                7%][Progress:===>                          13%] [Cov:==>                                7%][Progress:===>                          13%] [Cov:==>                                7%][Progress:===>                          13%] [Cov:==>                                7%][Progress:===>                          13%] [Cov:==>                                7%][Progress:===>                          13%] [Cov:==>                                7%][Progress:===>                          13%] [Cov:==>                                7%][Progress:===>                          13%] [Cov:==>                                7%][Progress:====>                         14%] [Cov:==>                                7%][Progress:====>                         14%] [Cov:==>                                7%][Progress:====>                         14%] [Cov:==>                                7%][Progress:====>                         14%] [Cov:==>                                7%][Progress:====>                         14%] [Cov:==>                                7%][Progress:====>                         14%] [Cov:==>                                7%][Progress:====>                         14%] [Cov:==>                                7%][Progress:====>                         14%] [Cov:==>                                7%][Progress:====>                         14%] [Cov:==>                                7%][Progress:====>                         14%] [Cov:==>                                7%][Progress:====>                         14%] [Cov:==>                                7%][Progress:====>                         14%] [Cov:==>                                7%][Progress:====>                         14%] [Cov:==>                                7%][Progress:====>                         14%] [Cov:==>                                7%][Progress:====>                         14%] [Cov:==>                                7%][Progress:====>                         14%] [Cov:==>                                7%][Progress:====>                         14%] [Cov:==>                                7%][Progress:====>                         14%] [Cov:==>                                7%][Progress:====>                         14%] [Cov:==>                                7%][MASTER] 18:40:13.826 [logback-1] WARN  TestCluster - Failed to check cache for javax.swing.RowFilter<M, I>.ComparisonType : Type points to itself
[Progress:====>                         15%] [Cov:==>                                7%][Progress:====>                         15%] [Cov:==>                                7%][Progress:====>                         15%] [Cov:==>                                7%][Progress:====>                         15%] [Cov:==>                                7%][Progress:====>                         15%] [Cov:==>                                7%][Progress:====>                         15%] [Cov:==>                                7%][Progress:====>                         15%] [Cov:==>                                7%][Progress:====>                         15%] [Cov:==>                                7%][Progress:====>                         15%] [Cov:==>                                7%][Progress:====>                         15%] [Cov:==>                                7%][Progress:====>                         15%] [Cov:==>                                7%][Progress:====>                         15%] [Cov:==>                                7%][Progress:====>                         15%] [Cov:==>                                7%][Progress:====>                         15%] [Cov:==>                                7%][Progress:====>                         15%] [Cov:==>                                7%][Progress:====>                         15%] [Cov:==>                                7%][Progress:====>                         15%] [Cov:==>                                7%][Progress:====>                         15%] [Cov:==>                                7%][Progress:====>                         15%] [Cov:==>                                7%][Progress:====>                         15%] [Cov:==>                                7%][Progress:====>                         16%] [Cov:==>                                7%][Progress:====>                         16%] [Cov:==>                                7%][Progress:====>                         16%] [Cov:==>                                7%][Progress:====>                         16%] [Cov:==>                                7%][Progress:====>                         16%] [Cov:==>                                7%][Progress:====>                         16%] [Cov:==>                                7%][Progress:====>                         16%] [Cov:==>                                7%][Progress:====>                         16%] [Cov:==>                                7%][Progress:====>                         16%] [Cov:==>                                7%][Progress:====>                         16%] [Cov:==>                                7%][Progress:====>                         16%] [Cov:==>                                7%][Progress:====>                         16%] [Cov:==>                                7%][Progress:====>                         16%] [Cov:==>                                7%][Progress:====>                         16%] [Cov:==>                                7%][Progress:====>                         16%] [Cov:==>                                7%][Progress:====>                         16%] [Cov:==>                                7%][Progress:====>                         16%] [Cov:==>                                7%][Progress:====>                         16%] [Cov:==>                                7%][Progress:====>                         16%] [Cov:==>                                7%][Progress:=====>                        17%] [Cov:==>                                7%][Progress:=====>                        17%] [Cov:==>                                7%][Progress:=====>                        17%] [Cov:==>                                7%][Progress:=====>                        17%] [Cov:==>                                7%][Progress:=====>                        17%] [Cov:==>                                7%][Progress:=====>                        17%] [Cov:==>                                7%][Progress:=====>                        17%] [Cov:==>                                7%][Progress:=====>                        17%] [Cov:==>                                7%][Progress:=====>                        17%] [Cov:==>                                7%][Progress:=====>                        17%] [Cov:==>                                7%][Progress:=====>                        17%] [Cov:==>                                7%][Progress:=====>                        17%] [Cov:==>                                7%][Progress:=====>                        17%] [Cov:==>                                7%][Progress:=====>                        17%] [Cov:==>                                7%][Progress:=====>                        17%] [Cov:==>                                7%][Progress:=====>                        17%] [Cov:==>                                7%][Progress:=====>                        17%] [Cov:==>                                7%][Progress:=====>                        17%] [Cov:==>                                7%][Progress:=====>                        18%] [Cov:==>                                7%][Progress:=====>                        18%] [Cov:==>                                7%][Progress:=====>                        18%] [Cov:==>                                7%][Progress:=====>                        18%] [Cov:==>                                7%][Progress:=====>                        18%] [Cov:==>                                7%][Progress:=====>                        18%] [Cov:==>                                7%][Progress:=====>                        18%] [Cov:==>                                7%][Progress:=====>                        18%] [Cov:==>                                7%][Progress:=====>                        18%] [Cov:==>                                7%][Progress:=====>                        18%] [Cov:==>                                7%][Progress:=====>                        18%] [Cov:==>                                7%][Progress:=====>                        18%] [Cov:==>                                7%][Progress:=====>                        18%] [Cov:==>                                7%][Progress:=====>                        18%] [Cov:==>                                7%][Progress:=====>                        18%] [Cov:==>                                7%][Progress:=====>                        18%] [Cov:==>                                7%][Progress:=====>                        18%] [Cov:==>                                7%][Progress:=====>                        18%] [Cov:==>                                7%][Progress:=====>                        18%] [Cov:==>                                7%][Progress:=====>                        18%] [Cov:==>                                7%][Progress:=====>                        19%] [Cov:==>                                7%][Progress:=====>                        19%] [Cov:==>                                7%][Progress:=====>                        19%] [Cov:==>                                7%][Progress:=====>                        19%] [Cov:==>                                7%][Progress:=====>                        19%] [Cov:==>                                7%][Progress:=====>                        19%] [Cov:==>                                7%][Progress:=====>                        19%] [Cov:==>                                7%][Progress:=====>                        19%] [Cov:==>                                7%][Progress:=====>                        19%] [Cov:==>                                7%][Progress:=====>                        19%] [Cov:==>                                7%][Progress:=====>                        19%] [Cov:==>                                7%][Progress:=====>                        19%] [Cov:==>                                7%][Progress:=====>                        19%] [Cov:==>                                7%][Progress:=====>                        19%] [Cov:==>                                7%][Progress:=====>                        19%] [Cov:==>                                7%][Progress:=====>                        19%] [Cov:==>                                7%][Progress:=====>                        19%] [Cov:==>                                7%][Progress:=====>                        19%] [Cov:==>                                7%][Progress:======>                       20%] [Cov:==>                                7%][Progress:======>                       20%] [Cov:==>                                7%][Progress:======>                       20%] [Cov:==>                                7%][Progress:======>                       20%] [Cov:==>                                7%][Progress:======>                       20%] [Cov:==>                                7%][Progress:======>                       20%] [Cov:==>                                7%][Progress:======>                       20%] [Cov:==>                                7%][Progress:======>                       20%] [Cov:==>                                7%][Progress:======>                       20%] [Cov:==>                                7%][Progress:======>                       20%] [Cov:==>                                7%][Progress:======>                       20%] [Cov:==>                                7%][Progress:======>                       20%] [Cov:==>                                7%][Progress:======>                       20%] [Cov:==>                                7%][Progress:======>                       20%] [Cov:==>                                7%][Progress:======>                       20%] [Cov:==>                                7%][Progress:======>                       20%] [Cov:==>                                7%][Progress:======>                       20%] [Cov:==>                                7%][Progress:======>                       20%] [Cov:==>                                7%][Progress:======>                       20%] [Cov:==>                                7%][Progress:======>                       20%] [Cov:==>                                7%][Progress:======>                       20%] [Cov:==>                                7%][Progress:======>                       20%] [Cov:==>                                7%][Progress:======>                       20%] [Cov:==>                                7%][Progress:======>                       20%] [Cov:==>                                7%][Progress:======>                       21%] [Cov:==>                                7%][Progress:======>                       21%] [Cov:==>                                7%][Progress:======>                       21%] [Cov:==>                                7%][Progress:======>                       21%] [Cov:==>                                7%][Progress:======>                       21%] [Cov:==>                                7%][Progress:======>                       21%] [Cov:==>                                7%][Progress:======>                       21%] [Cov:==>                                7%][Progress:======>                       21%] [Cov:==>                                7%][Progress:======>                       21%] [Cov:==>                                7%][Progress:======>                       21%] [Cov:==>                                7%][Progress:======>                       21%] [Cov:==>                                7%][Progress:======>                       21%] [Cov:==>                                7%][Progress:======>                       21%] [Cov:==>                                7%][Progress:======>                       21%] [Cov:==>                                7%][Progress:======>                       21%] [Cov:==>                                7%][Progress:======>                       21%] [Cov:==>                                7%][Progress:======>                       21%] [Cov:==>                                7%][Progress:======>                       21%] [Cov:==>                                7%][Progress:======>                       21%] [Cov:==>                                7%][Progress:======>                       22%] [Cov:==>                                7%][Progress:======>                       22%] [Cov:==>                                7%][Progress:======>                       22%] [Cov:==>                                7%][Progress:======>                       22%] [Cov:==>                                7%][Progress:======>                       22%] [Cov:==>                                7%][Progress:======>                       22%] [Cov:==>                                7%][Progress:======>                       22%] [Cov:==>                                7%][Progress:======>                       22%] [Cov:==>                                7%][Progress:======>                       22%] [Cov:==>                                7%][Progress:======>                       22%] [Cov:==>                                7%][Progress:======>                       22%] [Cov:==>                                7%][Progress:======>                       22%] [Cov:==>                                7%][Progress:======>                       22%] [Cov:==>                                7%][Progress:======>                       22%] [Cov:==>                                7%][Progress:======>                       22%] [Cov:==>                                7%][Progress:======>                       22%] [Cov:==>                                7%][Progress:======>                       22%] [Cov:==>                                7%][Progress:======>                       22%] [Cov:==>                                7%][Progress:======>                       22%] [Cov:==>                                7%][Progress:======>                       23%] [Cov:==>                                7%][Progress:======>                       23%] [Cov:==>                                7%][Progress:======>                       23%] [Cov:==>                                7%][Progress:======>                       23%] [Cov:==>                                7%][Progress:======>                       23%] [Cov:==>                                7%][Progress:======>                       23%] [Cov:==>                                7%][Progress:======>                       23%] [Cov:==>                                7%][Progress:======>                       23%] [Cov:==>                                7%][Progress:======>                       23%] [Cov:==>                                7%][Progress:======>                       23%] [Cov:==>                                7%][Progress:======>                       23%] [Cov:==>                                7%][Progress:======>                       23%] [Cov:==>                                7%][Progress:======>                       23%] [Cov:==>                                7%][Progress:======>                       23%] [Cov:==>                                7%][Progress:======>                       23%] [Cov:==>                                7%][Progress:======>                       23%] [Cov:==>                                7%][Progress:======>                       23%] [Cov:==>                                7%][Progress:======>                       23%] [Cov:==>                                7%][Progress:======>                       23%] [Cov:==>                                7%][Progress:======>                       23%] [Cov:==>                                7%][Progress:======>                       23%] [Cov:==>                                7%][Progress:======>                       23%] [Cov:==>                                7%][Progress:=======>                      24%] [Cov:==>                                7%][Progress:=======>                      24%] [Cov:==>                                7%][Progress:=======>                      24%] [Cov:==>                                7%][Progress:=======>                      24%] [Cov:==>                                7%][Progress:=======>                      24%] [Cov:==>                                7%][Progress:=======>                      24%] [Cov:==>                                7%][Progress:=======>                      24%] [Cov:==>                                7%][Progress:=======>                      24%] [Cov:==>                                7%][Progress:=======>                      24%] [Cov:==>                                7%][Progress:=======>                      24%] [Cov:==>                                7%][Progress:=======>                      24%] [Cov:==>                                7%][Progress:=======>                      24%] [Cov:==>                                7%][Progress:=======>                      24%] [Cov:==>                                7%][Progress:=======>                      24%] [Cov:==>                                7%][Progress:=======>                      24%] [Cov:==>                                7%][Progress:=======>                      24%] [Cov:==>                                7%][Progress:=======>                      24%] [Cov:==>                                7%][Progress:=======>                      24%] [Cov:==>                                7%][Progress:=======>                      24%] [Cov:==>                                7%][Progress:=======>                      25%] [Cov:==>                                7%][Progress:=======>                      25%] [Cov:==>                                7%][Progress:=======>                      25%] [Cov:==>                                7%][Progress:=======>                      25%] [Cov:==>                                7%][Progress:=======>                      25%] [Cov:==>                                7%][Progress:=======>                      25%] [Cov:==>                                7%][Progress:=======>                      25%] [Cov:==>                                7%][Progress:=======>                      25%] [Cov:==>                                7%][Progress:=======>                      25%] [Cov:==>                                7%][Progress:=======>                      25%] [Cov:==>                                7%][Progress:=======>                      25%] [Cov:==>                                7%][Progress:=======>                      25%] [Cov:==>                                7%][Progress:=======>                      25%] [Cov:==>                                7%][Progress:=======>                      25%] [Cov:==>                                7%][Progress:=======>                      25%] [Cov:==>                                7%][Progress:=======>                      25%] [Cov:==>                                7%][Progress:=======>                      25%] [Cov:==>                                7%][Progress:=======>                      25%] [Cov:==>                                7%][Progress:=======>                      25%] [Cov:==>                                7%][Progress:=======>                      25%] [Cov:==>                                7%][Progress:=======>                      25%] [Cov:==>                                7%][Progress:=======>                      25%] [Cov:==>                                7%][Progress:=======>                      25%] [Cov:==>                                7%][Progress:=======>                      25%] [Cov:==>                                7%][Progress:=======>                      25%] [Cov:==>                                7%][Progress:=======>                      25%] [Cov:==>                                7%][Progress:=======>                      25%] [Cov:==>                                7%][Progress:=======>                      26%] [Cov:==>                                7%][Progress:=======>                      26%] [Cov:==>                                7%][Progress:=======>                      26%] [Cov:==>                                7%][Progress:=======>                      26%] [Cov:==>                                7%][Progress:=======>                      26%] [Cov:==>                                7%][Progress:=======>                      26%] [Cov:==>                                7%][Progress:=======>                      26%] [Cov:==>                                7%][Progress:=======>                      26%] [Cov:==>                                7%][Progress:=======>                      26%] [Cov:==>                                7%][Progress:=======>                      26%] [Cov:==>                                7%][Progress:=======>                      26%] [Cov:==>                                7%][Progress:=======>                      26%] [Cov:==>                                7%][Progress:=======>                      26%] [Cov:==>                                7%][Progress:=======>                      26%] [Cov:==>                                7%][Progress:=======>                      26%] [Cov:==>                                7%][Progress:=======>                      26%] [Cov:==>                                7%][Progress:=======>                      26%] [Cov:==>                                7%][Progress:=======>                      26%] [Cov:==>                                7%][Progress:=======>                      26%] [Cov:==>                                7%][Progress:=======>                      26%] [Cov:=======>                           22%][Progress:=======>                      26%] [Cov:=======>                           22%][Progress:=======>                      26%] [Cov:=======>                           22%][Progress:=======>                      26%] [Cov:=======>                           22%][Progress:=======>                      26%] [Cov:=======>                           22%][Progress:========>                     27%] [Cov:=======>                           22%][Progress:========>                     27%] [Cov:=======>                           22%][Progress:========>                     27%] [Cov:=======>                           22%][Progress:========>                     27%] [Cov:=======>                           22%][Progress:========>                     27%] [Cov:=======>                           22%][Progress:========>                     27%] [Cov:=======>                           22%][Progress:========>                     27%] [Cov:=======>                           22%][Progress:========>                     27%] [Cov:=======>                           22%][Progress:========>                     27%] [Cov:=======>                           22%][Progress:========>                     27%] [Cov:=======>                           22%][Progress:========>                     27%] [Cov:=======>                           22%][Progress:========>                     27%] [Cov:=======>                           22%][Progress:========>                     27%] [Cov:=======>                           22%][Progress:========>                     27%] [Cov:=======>                           22%][Progress:========>                     27%] [Cov:=======>                           22%][Progress:========>                     27%] [Cov:=======>                           22%][Progress:========>                     27%] [Cov:=======>                           22%][Progress:========>                     27%] [Cov:=======>                           22%][Progress:========>                     27%] [Cov:============>                      36%][Progress:========>                     27%] [Cov:============>                      36%][Progress:========>                     27%] [Cov:============>                      36%][Progress:========>                     27%] [Cov:============>                      36%][Progress:========>                     27%] [Cov:============>                      36%][Progress:========>                     27%] [Cov:============>                      36%][Progress:========>                     27%] [Cov:============>                      36%][Progress:========>                     27%] [Cov:============>                      36%][Progress:========>                     28%] [Cov:============>                      36%][Progress:========>                     28%] [Cov:============>                      36%][Progress:========>                     28%] [Cov:===============>                   44%][Progress:========>                     28%] [Cov:=====================>             62%][Progress:========>                     28%] [Cov:======================>            64%][Progress:========>                     28%] [Cov:======================>            64%][Progress:========>                     28%] [Cov:==========================>        75%][Progress:========>                     28%] [Cov:==========================>        75%][Progress:========>                     29%] [Cov:==========================>        75%][Progress:========>                     29%] [Cov:==========================>        75%][Progress:========>                     29%] [Cov:==========================>        75%][Progress:========>                     29%] [Cov:===========================>       79%][Progress:========>                     29%] [Cov:=============================>     83%][Progress:========>                     29%] [Cov:=============================>     83%][Progress:=========>                    30%] [Cov:=============================>     83%][Progress:=========>                    30%] [Cov:=============================>     83%][MASTER] 18:40:44.179 [logback-1] WARN  TestCluster - Failed to check cache for java.util.Comparator<T> : Type points to itself
[Progress:=========>                    30%] [Cov:=============================>     83%][Progress:=========>                    30%] [Cov:=============================>     83%][Progress:=========>                    30%] [Cov:=============================>     83%][Progress:=========>                    30%] [Cov:=============================>     83%][Progress:=========>                    30%] [Cov:=============================>     83%][Progress:=========>                    30%] [Cov:=============================>     83%][Progress:=========>                    31%] [Cov:=============================>     83%][Progress:=========>                    31%] [Cov:=============================>     83%][Progress:=========>                    31%] [Cov:=============================>     83%][Progress:=========>                    31%] [Cov:=============================>     83%][Progress:=========>                    31%] [Cov:=============================>     83%][Progress:=========>                    31%] [Cov:=============================>     83%][Progress:=========>                    31%] [Cov:=============================>     83%][Progress:=========>                    31%] [Cov:=============================>     83%][Progress:=========>                    31%] [Cov:=============================>     83%][Progress:=========>                    31%] [Cov:=============================>     83%][Progress:=========>                    32%] [Cov:=============================>     83%][Progress:=========>                    32%] [Cov:=============================>     83%][Progress:=========>                    32%] [Cov:=============================>     83%][Progress:=========>                    32%] [Cov:=============================>     83%][Progress:=========>                    32%] [Cov:=============================>     83%][Progress:=========>                    32%] [Cov:=============================>     83%][Progress:=========>                    32%] [Cov:=============================>     83%][Progress:=========>                    32%] [Cov:=============================>     83%][Progress:=========>                    33%] [Cov:=============================>     83%][Progress:=========>                    33%] [Cov:=============================>     83%][Progress:=========>                    33%] [Cov:=============================>     83%][Progress:=========>                    33%] [Cov:=============================>     83%][Progress:=========>                    33%] [Cov:=============================>     83%][Progress:=========>                    33%] [Cov:=============================>     83%][Progress:=========>                    33%] [Cov:=============================>     83%][Progress:=========>                    33%] [Cov:=============================>     83%][Progress:=========>                    33%] [Cov:=============================>     83%][Progress:=========>                    33%] [Cov:=============================>     83%][Progress:=========>                    33%] [Cov:=============================>     83%][Progress:==========>                   34%] [Cov:=============================>     83%][Progress:==========>                   34%] [Cov:=============================>     83%][Progress:==========>                   34%] [Cov:=============================>     83%][Progress:==========>                   34%] [Cov:=============================>     83%][Progress:==========>                   34%] [Cov:=============================>     83%][Progress:==========>                   34%] [Cov:=============================>     83%][Progress:==========>                   34%] [Cov:=============================>     83%][Progress:==========>                   34%] [Cov:=============================>     83%][Progress:==========>                   34%] [Cov:=============================>     83%][Progress:==========>                   34%] [Cov:=============================>     83%][Progress:==========>                   35%] [Cov:=============================>     83%][Progress:==========>                   35%] [Cov:=============================>     83%][Progress:==========>                   35%] [Cov:=============================>     83%][Progress:==========>                   35%] [Cov:=============================>     83%][Progress:==========>                   35%] [Cov:=============================>     83%][Progress:==========>                   35%] [Cov:=============================>     83%][Progress:==========>                   35%] [Cov:=============================>     83%][Progress:==========>                   35%] [Cov:=============================>     83%][Progress:==========>                   35%] [Cov:=============================>     83%][Progress:==========>                   35%] [Cov:=============================>     83%][Progress:==========>                   35%] [Cov:=============================>     83%][Progress:==========>                   35%] [Cov:=============================>     83%][Progress:==========>                   35%] [Cov:=============================>     83%][Progress:==========>                   36%] [Cov:=============================>     83%][Progress:==========>                   36%] [Cov:=============================>     83%][Progress:==========>                   36%] [Cov:=============================>     83%][Progress:==========>                   36%] [Cov:=============================>     83%][Progress:==========>                   36%] [Cov:=============================>     83%][Progress:==========>                   36%] [Cov:=============================>     83%][Progress:==========>                   36%] [Cov:=============================>     83%][Progress:==========>                   36%] [Cov:=============================>     83%][Progress:==========>                   36%] [Cov:=============================>     83%][Progress:==========>                   36%] [Cov:=============================>     83%][Progress:==========>                   36%] [Cov:=============================>     83%][Progress:===========>                  37%] [Cov:=============================>     83%][Progress:===========>                  37%] [Cov:=============================>     83%][Progress:===========>                  37%] [Cov:=============================>     83%][Progress:===========>                  37%] [Cov:=============================>     83%][Progress:===========>                  37%] [Cov:=============================>     83%][Progress:===========>                  37%] [Cov:=============================>     83%][Progress:===========>                  37%] [Cov:=============================>     83%][Progress:===========>                  37%] [Cov:=============================>     83%][Progress:===========>                  37%] [Cov:=============================>     83%][Progress:===========>                  37%] [Cov:=============================>     83%][Progress:===========>                  37%] [Cov:=============================>     83%][Progress:===========>                  37%] [Cov:=============================>     83%][Progress:===========>                  37%] [Cov:=============================>     83%][Progress:===========>                  38%] [Cov:=============================>     83%][Progress:===========>                  38%] [Cov:=============================>     83%][Progress:===========>                  38%] [Cov:=============================>     83%][Progress:===========>                  38%] [Cov:=============================>     83%][Progress:===========>                  38%] [Cov:=============================>     83%][Progress:===========>                  38%] [Cov:=============================>     83%][Progress:===========>                  38%] [Cov:=============================>     83%][Progress:===========>                  38%] [Cov:=============================>     83%][Progress:===========>                  38%] [Cov:=============================>     83%][Progress:===========>                  38%] [Cov:=============================>     83%][Progress:===========>                  38%] [Cov:=============================>     83%][Progress:===========>                  39%] [Cov:=============================>     83%][Progress:===========>                  39%] [Cov:=============================>     83%][Progress:===========>                  39%] [Cov:=============================>     83%][Progress:===========>                  39%] [Cov:=============================>     83%][Progress:===========>                  39%] [Cov:=============================>     83%][Progress:===========>                  39%] [Cov:=============================>     83%][Progress:===========>                  39%] [Cov:=============================>     83%][Progress:===========>                  39%] [Cov:=============================>     83%][Progress:===========>                  39%] [Cov:=============================>     83%][Progress:===========>                  39%] [Cov:=============================>     83%][Progress:============>                 40%] [Cov:=============================>     83%][Progress:============>                 40%] [Cov:=============================>     83%][Progress:============>                 40%] [Cov:=============================>     83%][Progress:============>                 40%] [Cov:=============================>     83%][Progress:============>                 40%] [Cov:=============================>     83%][Progress:============>                 40%] [Cov:=============================>     83%][Progress:============>                 40%] [Cov:=============================>     83%][Progress:============>                 40%] [Cov:=============================>     83%][Progress:============>                 40%] [Cov:=============================>     83%][Progress:============>                 40%] [Cov:=============================>     83%][Progress:============>                 40%] [Cov:=============================>     83%][Progress:============>                 41%] [Cov:=============================>     83%][Progress:============>                 41%] [Cov:=============================>     83%][Progress:============>                 41%] [Cov:=============================>     83%][Progress:============>                 41%] [Cov:=============================>     83%][Progress:============>                 41%] [Cov:=============================>     83%][Progress:============>                 41%] [Cov:=============================>     83%][Progress:============>                 41%] [Cov:=============================>     83%][Progress:============>                 41%] [Cov:=============================>     83%][Progress:============>                 41%] [Cov:=============================>     83%][Progress:============>                 41%] [Cov:=============================>     83%][Progress:============>                 41%] [Cov:=============================>     83%][Progress:============>                 41%] [Cov:=============================>     83%][Progress:============>                 41%] [Cov:=============================>     83%][Progress:============>                 42%] [Cov:=============================>     83%][Progress:============>                 42%] [Cov:=============================>     83%][Progress:============>                 42%] [Cov:=============================>     83%][Progress:============>                 42%] [Cov:=============================>     83%][Progress:============>                 42%] [Cov:=============================>     83%][Progress:============>                 42%] [Cov:=============================>     83%][Progress:============>                 42%] [Cov:=============================>     83%][Progress:============>                 42%] [Cov:=============================>     83%][Progress:============>                 42%] [Cov:=============================>     83%][Progress:============>                 42%] [Cov:=============================>     83%][Progress:============>                 42%] [Cov:=============================>     83%][Progress:============>                 42%] [Cov:=============================>     83%][Progress:============>                 43%] [Cov:=============================>     83%][Progress:============>                 43%] [Cov:=============================>     83%][Progress:============>                 43%] [Cov:=============================>     83%][Progress:============>                 43%] [Cov:=============================>     83%][Progress:============>                 43%] [Cov:=============================>     83%][Progress:============>                 43%] [Cov:=============================>     83%][Progress:============>                 43%] [Cov:=============================>     83%][Progress:============>                 43%] [Cov:=============================>     83%][Progress:============>                 43%] [Cov:=============================>     83%][Progress:============>                 43%] [Cov:=============================>     83%][Progress:============>                 43%] [Cov:=============================>     83%][Progress:============>                 43%] [Cov:=============================>     83%][Progress:=============>                44%] [Cov:=============================>     83%][Progress:=============>                44%] [Cov:=============================>     83%][Progress:=============>                44%] [Cov:=============================>     83%][Progress:=============>                44%] [Cov:=============================>     83%][Progress:=============>                44%] [Cov:=============================>     83%][Progress:=============>                44%] [Cov:=============================>     83%][Progress:=============>                44%] [Cov:=============================>     83%][Progress:=============>                44%] [Cov:=============================>     83%][Progress:=============>                44%] [Cov:=============================>     83%][Progress:=============>                44%] [Cov:=============================>     83%][Progress:=============>                44%] [Cov:=============================>     83%][Progress:=============>                44%] [Cov:=============================>     83%][Progress:=============>                45%] [Cov:=============================>     83%][Progress:=============>                45%] [Cov:=============================>     83%][Progress:=============>                45%] [Cov:=============================>     83%][Progress:=============>                45%] [Cov:=============================>     83%][Progress:=============>                45%] [Cov:=============================>     83%][Progress:=============>                45%] [Cov:=============================>     83%][Progress:=============>                45%] [Cov:=============================>     83%][Progress:=============>                45%] [Cov:=============================>     83%][Progress:=============>                45%] [Cov:=============================>     83%][Progress:=============>                45%] [Cov:=============================>     83%][Progress:=============>                45%] [Cov:=============================>     83%][Progress:=============>                45%] [Cov:=============================>     83%][Progress:=============>                45%] [Cov:=============================>     83%][Progress:=============>                46%] [Cov:=============================>     83%][Progress:=============>                46%] [Cov:=============================>     83%][Progress:=============>                46%] [Cov:=============================>     83%][Progress:=============>                46%] [Cov:=============================>     83%][Progress:=============>                46%] [Cov:=============================>     83%][Progress:=============>                46%] [Cov:=============================>     83%][Progress:=============>                46%] [Cov:=============================>     83%][Progress:=============>                46%] [Cov:=============================>     83%][Progress:=============>                46%] [Cov:=============================>     83%][Progress:=============>                46%] [Cov:=============================>     83%][Progress:=============>                46%] [Cov:=============================>     83%][Progress:=============>                46%] [Cov:=============================>     83%][Progress:=============>                46%] [Cov:=============================>     83%][Progress:=============>                46%] [Cov:=============================>     83%][Progress:=============>                46%] [Cov:=============================>     83%][Progress:=============>                46%] [Cov:=============================>     83%][Progress:=============>                46%] [Cov:=============================>     83%][Progress:=============>                46%] [Cov:=============================>     83%][Progress:=============>                46%] [Cov:=============================>     83%][Progress:=============>                46%] [Cov:=============================>     83%][Progress:==============>               47%] [Cov:=============================>     83%][Progress:==============>               47%] [Cov:=============================>     83%][Progress:==============>               47%] [Cov:=============================>     83%][Progress:==============>               47%] [Cov:=============================>     83%][Progress:==============>               47%] [Cov:=============================>     83%][Progress:==============>               47%] [Cov:=============================>     83%][Progress:==============>               47%] [Cov:=============================>     83%][Progress:==============>               47%] [Cov:=============================>     83%][Progress:==============>               47%] [Cov:=============================>     83%][Progress:==============>               47%] [Cov:=============================>     83%][Progress:==============>               47%] [Cov:=============================>     83%][Progress:==============>               47%] [Cov:=============================>     83%][Progress:==============>               47%] [Cov:=============================>     83%][Progress:==============>               47%] [Cov:=============================>     83%][Progress:==============>               47%] [Cov:=============================>     83%][Progress:==============>               47%] [Cov:=============================>     83%][Progress:==============>               47%] [Cov:=============================>     83%][Progress:==============>               47%] [Cov:=============================>     83%][Progress:==============>               47%] [Cov:=============================>     83%][Progress:==============>               48%] [Cov:=============================>     83%][Progress:==============>               48%] [Cov:=============================>     83%][Progress:==============>               48%] [Cov:=============================>     83%][Progress:==============>               48%] [Cov:=============================>     83%][Progress:==============>               48%] [Cov:=============================>     83%][Progress:==============>               48%] [Cov:=============================>     83%][Progress:==============>               48%] [Cov:=============================>     83%][Progress:==============>               48%] [Cov:=============================>     83%][Progress:==============>               48%] [Cov:=============================>     83%][Progress:==============>               48%] [Cov:=============================>     83%][Progress:==============>               48%] [Cov:=============================>     83%][Progress:==============>               48%] [Cov:=============================>     83%][Progress:==============>               48%] [Cov:=============================>     83%][Progress:==============>               48%] [Cov:=============================>     83%][Progress:==============>               49%] [Cov:=============================>     83%][Progress:==============>               49%] [Cov:=============================>     83%][Progress:==============>               49%] [Cov:=============================>     83%][Progress:==============>               49%] [Cov:=============================>     83%][Progress:==============>               49%] [Cov:=============================>     83%][Progress:==============>               49%] [Cov:=============================>     83%][Progress:==============>               49%] [Cov:=============================>     83%][Progress:==============>               49%] [Cov:=============================>     83%][Progress:==============>               49%] [Cov:=============================>     83%][Progress:==============>               49%] [Cov:=============================>     83%][Progress:==============>               49%] [Cov:=============================>     83%][Progress:==============>               49%] [Cov:=============================>     83%][Progress:==============>               49%] [Cov:=============================>     83%][Progress:==============>               49%] [Cov:=============================>     83%][Progress:===============>              50%] [Cov:=============================>     83%][Progress:===============>              50%] [Cov:=============================>     83%][Progress:===============>              50%] [Cov:=============================>     83%][Progress:===============>              50%] [Cov:=============================>     83%][Progress:===============>              50%] [Cov:=============================>     83%][Progress:===============>              50%] [Cov:=============================>     83%][Progress:===============>              50%] [Cov:=============================>     83%][Progress:===============>              50%] [Cov:=============================>     83%][Progress:===============>              50%] [Cov:=============================>     83%][Progress:===============>              50%] [Cov:=============================>     83%][Progress:===============>              50%] [Cov:=============================>     83%][Progress:===============>              50%] [Cov:=============================>     83%][Progress:===============>              50%] [Cov:=============================>     83%][Progress:===============>              50%] [Cov:=============================>     83%][Progress:===============>              50%] [Cov:=============================>     83%][Progress:===============>              50%] [Cov:=============================>     83%][Progress:===============>              50%] [Cov:=============================>     83%][Progress:===============>              51%] [Cov:=============================>     83%][Progress:===============>              51%] [Cov:=============================>     83%][Progress:===============>              51%] [Cov:=============================>     83%][Progress:===============>              51%] [Cov:=============================>     83%][Progress:===============>              51%] [Cov:=============================>     83%][Progress:===============>              51%] [Cov:=============================>     83%][Progress:===============>              51%] [Cov:=============================>     83%][Progress:===============>              51%] [Cov:=============================>     83%][Progress:===============>              51%] [Cov:=============================>     83%][Progress:===============>              51%] [Cov:=============================>     83%][Progress:===============>              51%] [Cov:=============================>     83%][Progress:===============>              51%] [Cov:=============================>     83%][Progress:===============>              51%] [Cov:=============================>     83%][Progress:===============>              51%] [Cov:=============================>     83%][Progress:===============>              51%] [Cov:=============================>     83%][Progress:===============>              51%] [Cov:=============================>     83%][Progress:===============>              51%] [Cov:=============================>     83%][Progress:===============>              51%] [Cov:=============================>     83%][Progress:===============>              52%] [Cov:=============================>     83%][Progress:===============>              52%] [Cov:=============================>     83%][Progress:===============>              52%] [Cov:=============================>     83%][Progress:===============>              52%] [Cov:=============================>     83%][Progress:===============>              52%] [Cov:=============================>     83%][Progress:===============>              52%] [Cov:=============================>     83%][Progress:===============>              52%] [Cov:=============================>     83%][Progress:===============>              52%] [Cov:=============================>     83%][Progress:===============>              52%] [Cov:=============================>     83%][Progress:===============>              52%] [Cov:=============================>     83%][Progress:===============>              52%] [Cov:=============================>     83%][Progress:===============>              52%] [Cov:=============================>     83%][Progress:===============>              52%] [Cov:=============================>     83%][Progress:===============>              52%] [Cov:=============================>     83%][Progress:===============>              52%] [Cov:=============================>     83%][Progress:===============>              52%] [Cov:=============================>     83%][Progress:===============>              52%] [Cov:=============================>     83%][Progress:===============>              53%] [Cov:=============================>     83%][Progress:===============>              53%] [Cov:=============================>     83%][Progress:===============>              53%] [Cov:=============================>     83%][Progress:===============>              53%] [Cov:=============================>     83%][Progress:===============>              53%] [Cov:=============================>     83%][Progress:===============>              53%] [Cov:=============================>     83%][Progress:===============>              53%] [Cov:=============================>     83%][Progress:===============>              53%] [Cov:=============================>     83%][Progress:===============>              53%] [Cov:=============================>     83%][Progress:===============>              53%] [Cov:=============================>     83%][Progress:===============>              53%] [Cov:=============================>     83%][Progress:===============>              53%] [Cov:=============================>     83%][Progress:===============>              53%] [Cov:=============================>     83%][Progress:===============>              53%] [Cov:=============================>     83%][Progress:===============>              53%] [Cov:=============================>     83%][Progress:===============>              53%] [Cov:=============================>     83%][Progress:================>             54%] [Cov:=============================>     83%][Progress:================>             54%] [Cov:=============================>     83%][Progress:================>             54%] [Cov:=============================>     83%][Progress:================>             54%] [Cov:=============================>     83%][Progress:================>             54%] [Cov:=============================>     83%][Progress:================>             54%] [Cov:=============================>     83%][Progress:================>             54%] [Cov:=============================>     83%][Progress:================>             54%] [Cov:=============================>     83%][Progress:================>             54%] [Cov:=============================>     83%][Progress:================>             54%] [Cov:=============================>     83%][Progress:================>             54%] [Cov:=============================>     83%][Progress:================>             54%] [Cov:=============================>     83%][Progress:================>             55%] [Cov:=============================>     83%][Progress:================>             55%] [Cov:=============================>     83%][Progress:================>             55%] [Cov:=============================>     83%][Progress:================>             55%] [Cov:=============================>     83%][Progress:================>             55%] [Cov:=============================>     83%][Progress:================>             55%] [Cov:=============================>     83%][Progress:================>             55%] [Cov:=============================>     83%][Progress:================>             55%] [Cov:=============================>     83%][Progress:================>             55%] [Cov:=============================>     83%][Progress:================>             55%] [Cov:=============================>     83%][Progress:================>             55%] [Cov:=============================>     83%][Progress:================>             55%] [Cov:=============================>     83%][Progress:================>             55%] [Cov:=============================>     83%][Progress:================>             56%] [Cov:=============================>     83%][Progress:================>             56%] [Cov:=============================>     83%][Progress:================>             56%] [Cov:=============================>     83%][Progress:================>             56%] [Cov:=============================>     83%][Progress:================>             56%] [Cov:=============================>     83%][Progress:================>             56%] [Cov:=============================>     83%][Progress:================>             56%] [Cov:=============================>     83%][Progress:================>             56%] [Cov:=============================>     83%][Progress:================>             56%] [Cov:=============================>     83%][Progress:================>             56%] [Cov:=============================>     83%][Progress:================>             56%] [Cov:=============================>     83%][Progress:================>             56%] [Cov:=============================>     83%][Progress:=================>            57%] [Cov:=============================>     83%][Progress:=================>            57%] [Cov:=============================>     83%][Progress:=================>            57%] [Cov:=============================>     83%][Progress:=================>            57%] [Cov:=============================>     83%][Progress:=================>            57%] [Cov:=============================>     83%][Progress:=================>            57%] [Cov:=============================>     83%][Progress:=================>            57%] [Cov:=============================>     83%][Progress:=================>            57%] [Cov:=============================>     83%][Progress:=================>            57%] [Cov:=============================>     83%][Progress:=================>            57%] [Cov:=============================>     83%][Progress:=================>            57%] [Cov:=============================>     83%][Progress:=================>            58%] [Cov:=============================>     83%][Progress:=================>            58%] [Cov:=============================>     83%][Progress:=================>            58%] [Cov:=============================>     83%][Progress:=================>            58%] [Cov:=============================>     83%][Progress:=================>            58%] [Cov:=============================>     83%][Progress:=================>            58%] [Cov:=============================>     83%][Progress:=================>            58%] [Cov:=============================>     83%][Progress:=================>            58%] [Cov:=============================>     83%][Progress:=================>            58%] [Cov:=============================>     83%][Progress:=================>            58%] [Cov:=============================>     83%][Progress:=================>            58%] [Cov:=============================>     83%][Progress:=================>            58%] [Cov:=============================>     83%][Progress:=================>            59%] [Cov:=============================>     83%][Progress:=================>            59%] [Cov:=============================>     83%][Progress:=================>            59%] [Cov:=============================>     83%][Progress:=================>            59%] [Cov:=============================>     83%][Progress:=================>            59%] [Cov:=============================>     83%][Progress:=================>            59%] [Cov:=============================>     83%][Progress:=================>            59%] [Cov:=============================>     83%][Progress:=================>            59%] [Cov:=============================>     83%][Progress:=================>            59%] [Cov:=============================>     83%][Progress:=================>            59%] [Cov:=============================>     83%][Progress:=================>            59%] [Cov:=============================>     83%][Progress:=================>            59%] [Cov:=============================>     83%][Progress:=================>            59%] [Cov:=============================>     83%][Progress:==================>           60%] [Cov:=============================>     83%][Progress:==================>           60%] [Cov:=============================>     83%][Progress:==================>           60%] [Cov:=============================>     83%][Progress:==================>           60%] [Cov:=============================>     83%][Progress:==================>           60%] [Cov:=============================>     83%][Progress:==================>           60%] [Cov:=============================>     83%][Progress:==================>           60%] [Cov:=============================>     83%][Progress:==================>           60%] [Cov:=============================>     83%][Progress:==================>           60%] [Cov:=============================>     83%][Progress:==================>           60%] [Cov:=============================>     83%][Progress:==================>           60%] [Cov:=============================>     83%][Progress:==================>           60%] [Cov:=============================>     83%][Progress:==================>           60%] [Cov:=============================>     83%][Progress:==================>           61%] [Cov:=============================>     83%][Progress:==================>           61%] [Cov:=============================>     83%][Progress:==================>           61%] [Cov:=============================>     83%][Progress:==================>           61%] [Cov:=============================>     83%][Progress:==================>           61%] [Cov:=============================>     83%][Progress:==================>           61%] [Cov:=============================>     83%][Progress:==================>           61%] [Cov:=============================>     83%][Progress:==================>           61%] [Cov:=============================>     83%][Progress:==================>           61%] [Cov:=============================>     83%][Progress:==================>           61%] [Cov:=============================>     83%][Progress:==================>           61%] [Cov:=============================>     83%][Progress:==================>           61%] [Cov:=============================>     83%][Progress:==================>           61%] [Cov:=============================>     83%][Progress:==================>           62%] [Cov:=============================>     83%][Progress:==================>           62%] [Cov:=============================>     83%][Progress:==================>           62%] [Cov:=============================>     83%][Progress:==================>           62%] [Cov:=============================>     83%][Progress:==================>           62%] [Cov:=============================>     83%][Progress:==================>           62%] [Cov:=============================>     83%][Progress:==================>           62%] [Cov:=============================>     83%][Progress:==================>           62%] [Cov:=============================>     83%][Progress:==================>           62%] [Cov:=============================>     83%][Progress:==================>           62%] [Cov:=============================>     83%][Progress:==================>           63%] [Cov:=============================>     83%][Progress:==================>           63%] [Cov:=============================>     83%][Progress:==================>           63%] [Cov:=============================>     83%][Progress:==================>           63%] [Cov:=============================>     83%][Progress:==================>           63%] [Cov:=============================>     83%][Progress:==================>           63%] [Cov:=============================>     83%][Progress:==================>           63%] [Cov:=============================>     83%][Progress:==================>           63%] [Cov:=============================>     83%][Progress:==================>           63%] [Cov:=============================>     83%][Progress:==================>           63%] [Cov:=============================>     83%][Progress:==================>           63%] [Cov:=============================>     83%][Progress:===================>          64%] [Cov:=============================>     83%][Progress:===================>          64%] [Cov:=============================>     83%][Progress:===================>          64%] [Cov:=============================>     83%][Progress:===================>          64%] [Cov:=============================>     83%][Progress:===================>          64%] [Cov:=============================>     83%][Progress:===================>          64%] [Cov:=============================>     83%][Progress:===================>          64%] [Cov:=============================>     83%][Progress:===================>          64%] [Cov:=============================>     83%][Progress:===================>          64%] [Cov:=============================>     83%][Progress:===================>          64%] [Cov:=============================>     83%][Progress:===================>          64%] [Cov:=============================>     83%][Progress:===================>          65%] [Cov:=============================>     83%][Progress:===================>          65%] [Cov:=============================>     83%][Progress:===================>          65%] [Cov:=============================>     83%][Progress:===================>          65%] [Cov:=============================>     83%][Progress:===================>          65%] [Cov:=============================>     83%][Progress:===================>          65%] [Cov:=============================>     83%][Progress:===================>          65%] [Cov:=============================>     83%][Progress:===================>          65%] [Cov:=============================>     83%][Progress:===================>          65%] [Cov:=============================>     83%][Progress:===================>          65%] [Cov:=============================>     83%][Progress:===================>          65%] [Cov:=============================>     83%][Progress:===================>          65%] [Cov:=============================>     83%][Progress:===================>          66%] [Cov:=============================>     83%][Progress:===================>          66%] [Cov:=============================>     83%][Progress:===================>          66%] [Cov:=============================>     83%][Progress:===================>          66%] [Cov:=============================>     83%][Progress:===================>          66%] [Cov:=============================>     83%][Progress:===================>          66%] [Cov:=============================>     83%][Progress:===================>          66%] [Cov:=============================>     83%][Progress:===================>          66%] [Cov:=============================>     83%][Progress:===================>          66%] [Cov:=============================>     83%][Progress:===================>          66%] [Cov:=============================>     83%][Progress:===================>          66%] [Cov:=============================>     83%][Progress:===================>          66%] [Cov:=============================>     83%][Progress:====================>         67%] [Cov:=============================>     83%][Progress:====================>         67%] [Cov:=============================>     83%][Progress:====================>         67%] [Cov:=============================>     83%][Progress:====================>         67%] [Cov:=============================>     83%][Progress:====================>         67%] [Cov:=============================>     83%][Progress:====================>         67%] [Cov:=============================>     83%][Progress:====================>         67%] [Cov:=============================>     83%][Progress:====================>         67%] [Cov:=============================>     83%][Progress:====================>         67%] [Cov:=============================>     83%][Progress:====================>         67%] [Cov:=============================>     83%][Progress:====================>         67%] [Cov:=============================>     83%][Progress:====================>         68%] [Cov:=============================>     83%][Progress:====================>         68%] [Cov:=============================>     83%][Progress:====================>         68%] [Cov:=============================>     83%][Progress:====================>         68%] [Cov:=============================>     83%][Progress:====================>         68%] [Cov:=============================>     83%][Progress:====================>         68%] [Cov:=============================>     83%][Progress:====================>         68%] [Cov:=============================>     83%][Progress:====================>         68%] [Cov:=============================>     83%][Progress:====================>         68%] [Cov:=============================>     83%][Progress:====================>         68%] [Cov:=============================>     83%][Progress:====================>         68%] [Cov:=============================>     83%][Progress:====================>         69%] [Cov:=============================>     83%][Progress:====================>         69%] [Cov:=============================>     83%][Progress:====================>         69%] [Cov:=============================>     83%][Progress:====================>         69%] [Cov:=============================>     83%][Progress:====================>         69%] [Cov:=============================>     83%][Progress:====================>         69%] [Cov:=============================>     83%][Progress:====================>         69%] [Cov:=============================>     83%][Progress:====================>         69%] [Cov:=============================>     83%][Progress:====================>         69%] [Cov:=============================>     83%][Progress:====================>         69%] [Cov:=============================>     83%][Progress:====================>         69%] [Cov:=============================>     83%][Progress:====================>         69%] [Cov:=============================>     83%][Progress:=====================>        70%] [Cov:=============================>     83%][Progress:=====================>        70%] [Cov:=============================>     83%][Progress:=====================>        70%] [Cov:=============================>     83%][Progress:=====================>        70%] [Cov:=============================>     83%][Progress:=====================>        70%] [Cov:=============================>     83%][Progress:=====================>        70%] [Cov:=============================>     83%][Progress:=====================>        70%] [Cov:=============================>     83%][Progress:=====================>        70%] [Cov:=============================>     83%][Progress:=====================>        70%] [Cov:=============================>     83%][Progress:=====================>        70%] [Cov:=============================>     83%][Progress:=====================>        70%] [Cov:=============================>     83%][Progress:=====================>        70%] [Cov:=============================>     83%][Progress:=====================>        71%] [Cov:=============================>     83%][Progress:=====================>        71%] [Cov:=============================>     83%][Progress:=====================>        71%] [Cov:=============================>     83%][Progress:=====================>        71%] [Cov:=============================>     83%][Progress:=====================>        71%] [Cov:=============================>     83%][Progress:=====================>        71%] [Cov:=============================>     83%][Progress:=====================>        71%] [Cov:=============================>     83%][Progress:=====================>        71%] [Cov:=============================>     83%][Progress:=====================>        71%] [Cov:=============================>     83%][Progress:=====================>        71%] [Cov:=============================>     83%][Progress:=====================>        72%] [Cov:=============================>     83%][Progress:=====================>        72%] [Cov:=============================>     83%][Progress:=====================>        72%] [Cov:=============================>     83%][Progress:=====================>        72%] [Cov:=============================>     83%][Progress:=====================>        72%] [Cov:=============================>     83%][Progress:=====================>        72%] [Cov:=============================>     83%][Progress:=====================>        72%] [Cov:=============================>     83%][Progress:=====================>        72%] [Cov:=============================>     83%][Progress:=====================>        72%] [Cov:=============================>     83%][Progress:=====================>        72%] [Cov:=============================>     83%][Progress:=====================>        72%] [Cov:=============================>     83%][Progress:=====================>        72%] [Cov:=============================>     83%][Progress:=====================>        72%] [Cov:=============================>     83%][Progress:=====================>        72%] [Cov:=============================>     83%][Progress:=====================>        73%] [Cov:=============================>     83%][Progress:=====================>        73%] [Cov:=============================>     83%][Progress:=====================>        73%] [Cov:=============================>     83%][Progress:=====================>        73%] [Cov:=============================>     83%][Progress:=====================>        73%] [Cov:=============================>     83%][Progress:=====================>        73%] [Cov:=============================>     83%][Progress:=====================>        73%] [Cov:=============================>     83%][Progress:=====================>        73%] [Cov:=============================>     83%][Progress:=====================>        73%] [Cov:=============================>     83%][Progress:=====================>        73%] [Cov:=============================>     83%][Progress:=====================>        73%] [Cov:=============================>     83%][Progress:=====================>        73%] [Cov:=============================>     83%][Progress:=====================>        73%] [Cov:=============================>     83%][Progress:=====================>        73%] [Cov:=============================>     83%][Progress:=====================>        73%] [Cov:=============================>     83%][Progress:======================>       74%] [Cov:=============================>     83%][Progress:======================>       74%] [Cov:=============================>     83%][Progress:======================>       74%] [Cov:=============================>     83%][Progress:======================>       74%] [Cov:=============================>     83%][Progress:======================>       74%] [Cov:=============================>     83%][Progress:======================>       74%] [Cov:=============================>     83%][Progress:======================>       74%] [Cov:=============================>     83%][Progress:======================>       74%] [Cov:=============================>     83%][Progress:======================>       74%] [Cov:=============================>     83%][Progress:======================>       74%] [Cov:=============================>     83%][Progress:======================>       74%] [Cov:=============================>     83%][Progress:======================>       74%] [Cov:=============================>     83%][Progress:======================>       75%] [Cov:=============================>     83%][Progress:======================>       75%] [Cov:=============================>     83%][Progress:======================>       75%] [Cov:=============================>     83%][Progress:======================>       75%] [Cov:=============================>     83%][Progress:======================>       75%] [Cov:=============================>     83%][Progress:======================>       75%] [Cov:=============================>     83%][Progress:======================>       75%] [Cov:=============================>     83%][Progress:======================>       75%] [Cov:=============================>     83%][Progress:======================>       75%] [Cov:=============================>     83%][Progress:======================>       75%] [Cov:=============================>     83%][Progress:======================>       75%] [Cov:=============================>     83%][Progress:======================>       76%] [Cov:=============================>     83%][Progress:======================>       76%] [Cov:=============================>     83%][Progress:======================>       76%] [Cov:=============================>     83%][Progress:======================>       76%] [Cov:=============================>     83%][Progress:======================>       76%] [Cov:=============================>     83%][Progress:======================>       76%] [Cov:=============================>     83%][Progress:======================>       76%] [Cov:=============================>     83%][Progress:======================>       76%] [Cov:=============================>     83%][Progress:======================>       76%] [Cov:=============================>     83%][Progress:======================>       76%] [Cov:=============================>     83%][Progress:======================>       76%] [Cov:=============================>     83%][Progress:======================>       76%] [Cov:=============================>     83%][Progress:======================>       76%] [Cov:=============================>     83%][Progress:======================>       76%] [Cov:=============================>     83%][Progress:======================>       76%] [Cov:=============================>     83%][Progress:======================>       76%] [Cov:=============================>     83%][Progress:======================>       76%] [Cov:=============================>     83%][Progress:======================>       76%] [Cov:=============================>     83%][Progress:======================>       76%] [Cov:=============================>     83%][Progress:======================>       76%] [Cov:=============================>     83%][Progress:=======================>      77%] [Cov:=============================>     83%][Progress:=======================>      77%] [Cov:=============================>     83%][Progress:=======================>      77%] [Cov:=============================>     83%][Progress:=======================>      77%] [Cov:=============================>     83%][Progress:=======================>      77%] [Cov:=============================>     83%][Progress:=======================>      77%] [Cov:=============================>     83%][Progress:=======================>      77%] [Cov:=============================>     83%][Progress:=======================>      77%] [Cov:=============================>     83%][Progress:=======================>      77%] [Cov:=============================>     83%][Progress:=======================>      77%] [Cov:=============================>     83%][Progress:=======================>      77%] [Cov:=============================>     83%][Progress:=======================>      77%] [Cov:=============================>     83%][Progress:=======================>      77%] [Cov:=============================>     83%][Progress:=======================>      77%] [Cov:=============================>     83%][Progress:=======================>      78%] [Cov:=============================>     83%][Progress:=======================>      78%] [Cov:=============================>     83%][Progress:=======================>      78%] [Cov:=============================>     83%][Progress:=======================>      78%] [Cov:=============================>     83%][Progress:=======================>      78%] [Cov:=============================>     83%][Progress:=======================>      78%] [Cov:=============================>     83%][Progress:=======================>      78%] [Cov:=============================>     83%][Progress:=======================>      78%] [Cov:=============================>     83%][Progress:=======================>      78%] [Cov:=============================>     83%][Progress:=======================>      78%] [Cov:=============================>     83%][Progress:=======================>      78%] [Cov:=============================>     83%][Progress:=======================>      78%] [Cov:=============================>     83%][Progress:=======================>      78%] [Cov:=============================>     83%][Progress:=======================>      78%] [Cov:=============================>     83%][Progress:=======================>      79%] [Cov:=============================>     83%][Progress:=======================>      79%] [Cov:=============================>     83%][Progress:=======================>      79%] [Cov:=============================>     83%][Progress:=======================>      79%] [Cov:=============================>     83%][Progress:=======================>      79%] [Cov:=============================>     83%][Progress:=======================>      79%] [Cov:=============================>     83%][Progress:=======================>      79%] [Cov:=============================>     83%][Progress:=======================>      79%] [Cov:=============================>     83%][Progress:=======================>      79%] [Cov:=============================>     83%][Progress:=======================>      79%] [Cov:=============================>     83%][Progress:=======================>      79%] [Cov:=============================>     83%][Progress:=======================>      79%] [Cov:=============================>     83%][Progress:=======================>      79%] [Cov:=============================>     83%][Progress:========================>     80%] [Cov:=============================>     83%][Progress:========================>     80%] [Cov:=============================>     83%][Progress:========================>     80%] [Cov:=============================>     83%][Progress:========================>     80%] [Cov:=============================>     83%][Progress:========================>     80%] [Cov:=============================>     83%][Progress:========================>     80%] [Cov:=============================>     83%][Progress:========================>     80%] [Cov:=============================>     83%][Progress:========================>     80%] [Cov:=============================>     83%][Progress:========================>     80%] [Cov:=============================>     83%][Progress:========================>     80%] [Cov:=============================>     83%][Progress:========================>     80%] [Cov:=============================>     83%][Progress:========================>     80%] [Cov:=============================>     83%][Progress:========================>     80%] [Cov:=============================>     83%][Progress:========================>     80%] [Cov:=============================>     83%][Progress:========================>     81%] [Cov:=============================>     83%][Progress:========================>     81%] [Cov:=============================>     83%][Progress:========================>     81%] [Cov:=============================>     83%][Progress:========================>     81%] [Cov:=============================>     83%][Progress:========================>     81%] [Cov:=============================>     83%][Progress:========================>     81%] [Cov:=============================>     83%][Progress:========================>     81%] [Cov:=============================>     83%][Progress:========================>     81%] [Cov:=============================>     83%][Progress:========================>     81%] [Cov:=============================>     83%][Progress:========================>     81%] [Cov:=============================>     83%][Progress:========================>     81%] [Cov:=============================>     83%][Progress:========================>     82%] [Cov:=============================>     83%][Progress:========================>     82%] [Cov:=============================>     83%][Progress:========================>     82%] [Cov:=============================>     83%][Progress:========================>     82%] [Cov:=============================>     83%][Progress:========================>     82%] [Cov:=============================>     83%][Progress:========================>     82%] [Cov:=============================>     83%][Progress:========================>     82%] [Cov:=============================>     83%][Progress:========================>     82%] [Cov:=============================>     83%][Progress:========================>     82%] [Cov:=============================>     83%][Progress:========================>     82%] [Cov:=============================>     83%][Progress:========================>     82%] [Cov:=============================>     83%][Progress:========================>     83%] [Cov:=============================>     83%][Progress:========================>     83%] [Cov:=============================>     83%][Progress:========================>     83%] [Cov:=============================>     83%][Progress:========================>     83%] [Cov:=============================>     83%][Progress:========================>     83%] [Cov:=============================>     83%][Progress:========================>     83%] [Cov:=============================>     83%][Progress:========================>     83%] [Cov:=============================>     83%][Progress:========================>     83%] [Cov:=============================>     83%][Progress:========================>     83%] [Cov:=============================>     83%][Progress:========================>     83%] [Cov:=============================>     83%][Progress:========================>     83%] [Cov:=============================>     83%][Progress:========================>     83%] [Cov:=============================>     83%][Progress:=========================>    84%] [Cov:=============================>     83%][Progress:=========================>    84%] [Cov:=============================>     83%][Progress:=========================>    84%] [Cov:=============================>     83%][Progress:=========================>    84%] [Cov:=============================>     83%][Progress:=========================>    84%] [Cov:=============================>     83%][Progress:=========================>    84%] [Cov:=============================>     83%][Progress:=========================>    84%] [Cov:=============================>     83%][Progress:=========================>    84%] [Cov:=============================>     83%][Progress:=========================>    84%] [Cov:=============================>     83%][Progress:=========================>    84%] [Cov:=============================>     83%][Progress:=========================>    84%] [Cov:=============================>     83%][Progress:=========================>    84%] [Cov:=============================>     83%][Progress:=========================>    84%] [Cov:=============================>     83%][Progress:=========================>    85%] [Cov:=============================>     83%][Progress:=========================>    85%] [Cov:=============================>     83%][Progress:=========================>    85%] [Cov:=============================>     83%][Progress:=========================>    85%] [Cov:=============================>     83%][Progress:=========================>    85%] [Cov:=============================>     83%][Progress:=========================>    85%] [Cov:=============================>     83%][Progress:=========================>    85%] [Cov:=============================>     83%][Progress:=========================>    85%] [Cov:=============================>     83%][Progress:=========================>    85%] [Cov:=============================>     83%][Progress:=========================>    85%] [Cov:=============================>     83%][Progress:=========================>    85%] [Cov:=============================>     83%][Progress:=========================>    85%] [Cov:=============================>     83%][Progress:=========================>    85%] [Cov:=============================>     83%][Progress:=========================>    86%] [Cov:=============================>     83%][Progress:=========================>    86%] [Cov:=============================>     83%][Progress:=========================>    86%] [Cov:=============================>     83%][Progress:=========================>    86%] [Cov:=============================>     83%][Progress:=========================>    86%] [Cov:=============================>     83%][Progress:=========================>    86%] [Cov:=============================>     83%][Progress:=========================>    86%] [Cov:=============================>     83%][Progress:=========================>    86%] [Cov:=============================>     83%][Progress:=========================>    86%] [Cov:=============================>     83%][Progress:=========================>    86%] [Cov:=============================>     83%][Progress:=========================>    86%] [Cov:=============================>     83%][Progress:=========================>    86%] [Cov:=============================>     83%][Progress:==========================>   87%] [Cov:=============================>     83%][Progress:==========================>   87%] [Cov:=============================>     83%][Progress:==========================>   87%] [Cov:=============================>     83%][Progress:==========================>   87%] [Cov:=============================>     83%][Progress:==========================>   87%] [Cov:=============================>     83%][Progress:==========================>   87%] [Cov:=============================>     83%][Progress:==========================>   87%] [Cov:=============================>     83%][Progress:==========================>   87%] [Cov:=============================>     83%][Progress:==========================>   87%] [Cov:=============================>     83%][Progress:==========================>   87%] [Cov:=============================>     83%][Progress:==========================>   87%] [Cov:=============================>     83%][Progress:==========================>   88%] [Cov:=============================>     83%][Progress:==========================>   88%] [Cov:=============================>     83%][Progress:==========================>   88%] [Cov:=============================>     83%][Progress:==========================>   88%] [Cov:=============================>     83%][Progress:==========================>   88%] [Cov:=============================>     83%][Progress:==========================>   88%] [Cov:=============================>     83%][Progress:==========================>   88%] [Cov:=============================>     83%][Progress:==========================>   88%] [Cov:=============================>     83%][Progress:==========================>   88%] [Cov:=============================>     83%][Progress:==========================>   88%] [Cov:=============================>     83%][Progress:==========================>   88%] [Cov:=============================>     83%][Progress:==========================>   89%] [Cov:=============================>     83%][Progress:==========================>   89%] [Cov:=============================>     83%][Progress:==========================>   89%] [Cov:=============================>     83%][Progress:==========================>   89%] [Cov:=============================>     83%][Progress:==========================>   89%] [Cov:=============================>     83%][Progress:==========================>   89%] [Cov:=============================>     83%][Progress:==========================>   89%] [Cov:=============================>     83%][Progress:==========================>   89%] [Cov:=============================>     83%][Progress:==========================>   89%] [Cov:=============================>     83%][Progress:==========================>   89%] [Cov:=============================>     83%][Progress:==========================>   89%] [Cov:=============================>     83%][Progress:==========================>   89%] [Cov:=============================>     83%][Progress:==========================>   89%] [Cov:=============================>     83%][Progress:==========================>   89%] [Cov:=============================>     83%][Progress:==========================>   89%] [Cov:=============================>     83%][Progress:==========================>   89%] [Cov:=============================>     83%][Progress:==========================>   89%] [Cov:=============================>     83%][Progress:==========================>   89%] [Cov:=============================>     83%][Progress:==========================>   89%] [Cov:=============================>     83%][Progress:===========================>  90%] [Cov:=============================>     83%][Progress:===========================>  90%] [Cov:=============================>     83%][Progress:===========================>  90%] [Cov:=============================>     83%][Progress:===========================>  90%] [Cov:=============================>     83%][Progress:===========================>  90%] [Cov:=============================>     83%][Progress:===========================>  90%] [Cov:=============================>     83%][Progress:===========================>  90%] [Cov:=============================>     83%][Progress:===========================>  90%] [Cov:=============================>     83%][Progress:===========================>  90%] [Cov:=============================>     83%][Progress:===========================>  90%] [Cov:=============================>     83%][Progress:===========================>  90%] [Cov:=============================>     83%][Progress:===========================>  90%] [Cov:=============================>     83%][Progress:===========================>  90%] [Cov:=============================>     83%][Progress:===========================>  90%] [Cov:=============================>     83%][Progress:===========================>  90%] [Cov:=============================>     83%][Progress:===========================>  90%] [Cov:=============================>     83%][Progress:===========================>  90%] [Cov:=============================>     83%][Progress:===========================>  90%] [Cov:=============================>     83%][Progress:===========================>  91%] [Cov:=============================>     83%][Progress:===========================>  91%] [Cov:=============================>     83%][Progress:===========================>  91%] [Cov:=============================>     83%][Progress:===========================>  91%] [Cov:=============================>     83%][Progress:===========================>  91%] [Cov:=============================>     83%][Progress:===========================>  91%] [Cov:=============================>     83%][Progress:===========================>  91%] [Cov:=============================>     83%][Progress:===========================>  91%] [Cov:=============================>     83%][Progress:===========================>  91%] [Cov:=============================>     83%][Progress:===========================>  91%] [Cov:=============================>     83%][Progress:===========================>  91%] [Cov:=============================>     83%][Progress:===========================>  91%] [Cov:=============================>     83%][Progress:===========================>  91%] [Cov:=============================>     83%][Progress:===========================>  92%] [Cov:=============================>     83%][Progress:===========================>  92%] [Cov:=============================>     83%][Progress:===========================>  92%] [Cov:=============================>     83%][Progress:===========================>  92%] [Cov:=============================>     83%][Progress:===========================>  92%] [Cov:=============================>     83%][Progress:===========================>  92%] [Cov:=============================>     83%][Progress:===========================>  92%] [Cov:=============================>     83%][Progress:===========================>  92%] [Cov:=============================>     83%][Progress:===========================>  92%] [Cov:=============================>     83%][Progress:===========================>  92%] [Cov:=============================>     83%][Progress:===========================>  92%] [Cov:=============================>     83%][Progress:===========================>  92%] [Cov:=============================>     83%][Progress:===========================>  92%] [Cov:=============================>     83%][Progress:===========================>  93%] [Cov:=============================>     83%][Progress:===========================>  93%] [Cov:=============================>     83%][Progress:===========================>  93%] [Cov:=============================>     83%][Progress:===========================>  93%] [Cov:=============================>     83%][Progress:===========================>  93%] [Cov:=============================>     83%][Progress:===========================>  93%] [Cov:=============================>     83%][Progress:===========================>  93%] [Cov:=============================>     83%][Progress:===========================>  93%] [Cov:=============================>     83%][Progress:===========================>  93%] [Cov:=============================>     83%][Progress:===========================>  93%] [Cov:=============================>     83%][Progress:===========================>  93%] [Cov:=============================>     83%][Progress:===========================>  93%] [Cov:=============================>     83%][Progress:===========================>  93%] [Cov:=============================>     83%][Progress:===========================>  93%] [Cov:=============================>     83%][Progress:===========================>  93%] [Cov:=============================>     83%][Progress:============================> 94%] [Cov:=============================>     83%][Progress:============================> 94%] [Cov:=============================>     83%][Progress:============================> 94%] [Cov:=============================>     83%][Progress:============================> 94%] [Cov:=============================>     83%][Progress:============================> 94%] [Cov:=============================>     83%][Progress:============================> 94%] [Cov:=============================>     83%][Progress:============================> 94%] [Cov:=============================>     83%][Progress:============================> 94%] [Cov:=============================>     83%][Progress:============================> 94%] [Cov:=============================>     83%][Progress:============================> 94%] [Cov:=============================>     83%][Progress:============================> 94%] [Cov:=============================>     83%][Progress:============================> 94%] [Cov:=============================>     83%][Progress:============================> 94%] [Cov:=============================>     83%][Progress:============================> 94%] [Cov:=============================>     83%][Progress:============================> 94%] [Cov:=============================>     83%][Progress:============================> 94%] [Cov:=============================>     83%][Progress:============================> 94%] [Cov:=============================>     83%][Progress:============================> 95%] [Cov:=============================>     83%][Progress:============================> 95%] [Cov:=============================>     83%][Progress:============================> 95%] [Cov:=============================>     83%][Progress:============================> 95%] [Cov:=============================>     83%][Progress:============================> 95%] [Cov:=============================>     83%][Progress:============================> 95%] [Cov:=============================>     83%][Progress:============================> 95%] [Cov:=============================>     83%][Progress:============================> 95%] [Cov:=============================>     83%][Progress:============================> 95%] [Cov:=============================>     83%][Progress:============================> 95%] [Cov:=============================>     83%][Progress:============================> 95%] [Cov:=============================>     83%][Progress:============================> 95%] [Cov:=============================>     83%][Progress:============================> 95%] [Cov:=============================>     83%][Progress:============================> 95%] [Cov:=============================>     83%][Progress:============================> 95%] [Cov:=============================>     83%][Progress:============================> 95%] [Cov:=============================>     83%][Progress:============================> 95%] [Cov:=============================>     83%][Progress:============================> 95%] [Cov:=============================>     83%][Progress:============================> 95%] [Cov:=============================>     83%][Progress:============================> 96%] [Cov:=============================>     83%][Progress:============================> 96%] [Cov:=============================>     83%][Progress:============================> 96%] [Cov:=============================>     83%][Progress:============================> 96%] [Cov:=============================>     83%][Progress:============================> 96%] [Cov:=============================>     83%][Progress:============================> 96%] [Cov:=============================>     83%][Progress:============================> 96%] [Cov:=============================>     83%][Progress:============================> 96%] [Cov:=============================>     83%][Progress:============================> 96%] [Cov:=============================>     83%][Progress:============================> 96%] [Cov:=============================>     83%][Progress:============================> 96%] [Cov:=============================>     83%][Progress:============================> 96%] [Cov:=============================>     83%][Progress:============================> 96%] [Cov:=============================>     83%][Progress:============================> 96%] [Cov:=============================>     83%][Progress:============================> 96%] [Cov:=============================>     83%][Progress:============================> 96%] [Cov:=============================>     83%][Progress:============================> 96%] [Cov:=============================>     83%][Progress:============================> 96%] [Cov:=============================>     83%][Progress:============================> 96%] [Cov:=============================>     83%][Progress:============================> 96%] [Cov:=============================>     83%][Progress:=============================>97%] [Cov:=============================>     83%][Progress:=============================>97%] [Cov:=============================>     83%][Progress:=============================>97%] [Cov:=============================>     83%][Progress:=============================>97%] [Cov:=============================>     83%][Progress:=============================>97%] [Cov:=============================>     83%][Progress:=============================>97%] [Cov:=============================>     83%][Progress:=============================>97%] [Cov:=============================>     83%][Progress:=============================>97%] [Cov:=============================>     83%][Progress:=============================>97%] [Cov:=============================>     83%][Progress:=============================>97%] [Cov:=============================>     83%][Progress:=============================>97%] [Cov:=============================>     83%][Progress:=============================>98%] [Cov:=============================>     83%][Progress:=============================>98%] [Cov:=============================>     83%][Progress:=============================>98%] [Cov:=============================>     83%][Progress:=============================>98%] [Cov:=============================>     83%][Progress:=============================>98%] [Cov:=============================>     83%][Progress:=============================>98%] [Cov:=============================>     83%][Progress:=============================>98%] [Cov:=============================>     83%][Progress:=============================>98%] [Cov:=============================>     83%][Progress:=============================>98%] [Cov:=============================>     83%][Progress:=============================>98%] [Cov:=============================>     83%][Progress:=============================>98%] [Cov:=============================>     83%][Progress:=============================>98%] [Cov:=============================>     83%][Progress:=============================>98%] [Cov:=============================>     83%][Progress:=============================>98%] [Cov:=============================>     83%][Progress:=============================>98%] [Cov:=============================>     83%][Progress:=============================>98%] [Cov:=============================>     83%][Progress:=============================>99%] [Cov:=============================>     83%][Progress:=============================>99%] [Cov:=============================>     83%][Progress:=============================>99%] [Cov:=============================>     83%][Progress:=============================>99%] [Cov:=============================>     83%][Progress:=============================>99%] [Cov:=============================>     83%][Progress:=============================>99%] [Cov:=============================>     83%][Progress:=============================>99%] [Cov:=============================>     83%][Progress:=============================>99%] [Cov:=============================>     83%][Progress:=============================>99%] [Cov:=============================>     83%][Progress:=============================>99%] [Cov:=============================>     83%][Progress:=============================>99%] [Cov:=============================>     83%][Progress:=============================>99%] [Cov:=============================>     83%][Progress:=============================>99%] [Cov:=============================>     83%][Progress:=============================>99%] [Cov:=============================>     83%][Progress:=============================>99%] [Cov:=============================>     83%][Progress:=============================>99%] [Cov:=============================>     83%][Progress:=============================>99%] [Cov:=============================>     83%][Progress:=============================>99%] [Cov:=============================>     83%][Progress:=============================>99%] [Cov:=============================>     83%][Progress:=============================>99%] [Cov:=============================>     83%][Progress:=============================>99%] [Cov:=============================>     83%][Progress:==============================100%] [Cov:=============================>     83%][Progress:==============================100%] [Cov:=============================>     83%][Progress:==============================100%] [Cov:=============================>     83%][Progress:==============================100%] [Cov:=============================>     83%][Progress:==============================100%] [Cov:=============================>     83%][Progress:==============================100%] [Cov:=============================>     83%][Progress:==============================100%] [Cov:=============================>     83%][Progress:==============================100%] [Cov:=============================>     83%][Progress:==============================100%] [Cov:=============================>     83%]
* Search finished after 201s and 1454 generations, 365831 statements, best individual has fitness: 15.0
* Generated before the refinement 6 tests with total length 47
statement is: createTempFile(Ljava/lang/String;Ljava/lang/String;)Ljava/io/File; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.evosuite.runtime.mock.java.io.MockFile
statement code is: MockFile createTempFile = (MockFile)MockFile.createTempFile("}kC", "")
statement is: fr.pingtimeout.jtail.io.index.RamFileIndex(Ljava/io/File;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class fr.pingtimeout.jtail.io.index.RamFileIndex
statement code is: RamFileIndex ramFileIndex = new RamFileIndex(arg0)
statement is: fr.pingtimeout.jtail.io.LineReader(Ljava/io/File;Lfr/pingtimeout/jtail/io/index/FileIndex;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class fr.pingtimeout.jtail.io.LineReader
statement code is: LineReader lineReader = new LineReader(arg0, arg1)
statement is: setOffsetOfLine(IJ)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: ramFileIndex.setOffsetOfLine(0, 0)
statement is: fr.pingtimeout.jtail.gui.model.JTailModel(Ljava/io/File;Lfr/pingtimeout/jtail/io/LineReader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class fr.pingtimeout.jtail.gui.model.JTailModel
statement code is: JTailModel jTailModel = new JTailModel(arg0, arg1)
statement is: fr.pingtimeout.jtail.gui.view.JTailPanel(Lfr/pingtimeout/jtail/gui/model/JTailModel;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class fr.pingtimeout.jtail.gui.view.JTailPanel
statement code is: JTailPanel jTailPanel = new JTailPanel(arg0)
statement is: getVerticalScrollBar()Ljavax/swing/JScrollBar; type is: class org.evosuite.testcase.statements.MethodStatement return type class javax.swing.JScrollBar
statement code is: JScrollBar verticalScrollBar = jTailPanel.getVerticalScrollBar()
test data is: MockFile createTempFile = (MockFile)MockFile.createTempFile("}kC", "");
RamFileIndex ramFileIndex = new RamFileIndex(createTempFile);
LineReader lineReader = new LineReader(createTempFile, ramFileIndex);
ramFileIndex.setOffsetOfLine(0, 0);
JTailModel jTailModel = new JTailModel(createTempFile, lineReader);
JTailPanel jTailPanel = new JTailPanel(jTailModel);
jTailPanel.getVerticalScrollBar();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        MockFile createTempFile = ((MockFile) (MockFile.createTempFile("example.txt", "")));
        RamFileIndex ramFileIndex = new RamFileIndex(createTempFile);
        LineReader lineReader = new LineReader(createTempFile, ramFileIndex);
        ramFileIndex.setOffsetOfLine(0, 0);
        JTailModel jTailModel = new JTailModel(createTempFile, lineReader);
        JTailPanel jTailPanel = new JTailPanel(jTailModel);
        jTailPanel.getVerticalScrollBar();
    }
}
statement is: MockFile createTempFile = ((MockFile) (MockFile.createTempFile("example.txt", ""))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: ((MockFile) (MockFile.createTempFile("example.txt", ""))) target is: MockFile method is: createTempFile(java.lang.String,java.lang.String)
Matched Method is: createTempFile(Ljava/lang/String;Ljava/lang/String;)Ljava/io/File;
statement is: RamFileIndex ramFileIndex = new RamFileIndex(createTempFile), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: LineReader lineReader = new LineReader(createTempFile, ramFileIndex), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: ramFileIndex.setOffsetOfLine(0, 0), class spoon.support.reflect.code.CtInvocationImpl
invocation is: ramFileIndex.setOffsetOfLine(0, 0) target is: ramFileIndex method is: setOffsetOfLine(int,int)
source statement: fr.pingtimeout.jtail.io.index.RamFileIndex(Ljava/io/File;)V callee: VariableReference: Statement 1, type fr.pingtimeout.jtail.io.index.RamFileIndexindex is: 3
Matched Method is: setOffsetOfLine(IJ)V
statement is: JTailModel jTailModel = new JTailModel(createTempFile, lineReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JTailPanel jTailPanel = new JTailPanel(jTailModel), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: jTailPanel.getVerticalScrollBar(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: jTailPanel.getVerticalScrollBar() target is: jTailPanel method is: getVerticalScrollBar()
source statement: fr.pingtimeout.jtail.gui.view.JTailPanel(Lfr/pingtimeout/jtail/gui/model/JTailModel;)V callee: VariableReference: Statement 5, type fr.pingtimeout.jtail.gui.view.JTailPanelindex is: 9
Matched Method is: getVerticalScrollBar()Ljavax/swing/JScrollBar;
TestCase is: String string = "example.txt";
String string = "";
MockFile createTempFile = (MockFile)MockFile.createTempFile(string, string);
RamFileIndex ramFileIndex = new RamFileIndex(createTempFile);
LineReader lineReader = new LineReader(createTempFile, ramFileIndex);
int _int = 0;
int _int = 0;
((RamFileIndex) string).setOffsetOfLine(_int, _int);
JTailModel jTailModel = new JTailModel(createTempFile, lineReader);
JTailPanel jTailPanel = new JTailPanel(jTailModel);
((JTailPanel) _int).getVerticalScrollBar();

statement is: createTempFile(Ljava/lang/String;Ljava/lang/String;)Ljava/io/File; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.evosuite.runtime.mock.java.io.MockFile
statement code is: MockFile createTempFile = (MockFile)MockFile.createTempFile("}kC", "")
statement is: fr.pingtimeout.jtail.io.index.RamFileIndex(Ljava/io/File;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class fr.pingtimeout.jtail.io.index.RamFileIndex
statement code is: RamFileIndex ramFileIndex = new RamFileIndex(arg0)
statement is: fr.pingtimeout.jtail.io.LineReader(Ljava/io/File;Lfr/pingtimeout/jtail/io/index/FileIndex;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class fr.pingtimeout.jtail.io.LineReader
statement code is: LineReader lineReader = new LineReader(arg0, arg1)
statement is: setOffsetOfLine(IJ)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: ramFileIndex.setOffsetOfLine(0, 0)
statement is: fr.pingtimeout.jtail.gui.model.JTailModel(Ljava/io/File;Lfr/pingtimeout/jtail/io/LineReader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class fr.pingtimeout.jtail.gui.model.JTailModel
statement code is: JTailModel jTailModel = new JTailModel(arg0, arg1)
statement is: fr.pingtimeout.jtail.gui.view.JTailPanel(Lfr/pingtimeout/jtail/gui/model/JTailModel;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class fr.pingtimeout.jtail.gui.view.JTailPanel
statement code is: JTailPanel jTailPanel = new JTailPanel(arg0)
statement is: getCharacterHeight()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int characterHeight = jTailPanel.getCharacterHeight()
test data is: MockFile createTempFile = (MockFile)MockFile.createTempFile("}kC", "");
RamFileIndex ramFileIndex = new RamFileIndex(createTempFile);
LineReader lineReader = new LineReader(createTempFile, ramFileIndex);
ramFileIndex.setOffsetOfLine(0, 0);
JTailModel jTailModel = new JTailModel(createTempFile, lineReader);
JTailPanel jTailPanel = new JTailPanel(jTailModel);
jTailPanel.getCharacterHeight();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        MockFile createTempFile = ((MockFile) (MockFile.createTempFile("logfile.txt", "")));
        RamFileIndex ramFileIndex = new RamFileIndex(createTempFile);
        LineReader lineReader = new LineReader(createTempFile, ramFileIndex);
        ramFileIndex.setOffsetOfLine(0, 0);
        JTailModel jTailModel = new JTailModel(createTempFile, lineReader);
        JTailPanel jTailPanel = new JTailPanel(jTailModel);
        jTailPanel.getCharacterHeight();
    }
}
statement is: MockFile createTempFile = ((MockFile) (MockFile.createTempFile("logfile.txt", ""))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: ((MockFile) (MockFile.createTempFile("logfile.txt", ""))) target is: MockFile method is: createTempFile(java.lang.String,java.lang.String)
Matched Method is: createTempFile(Ljava/lang/String;Ljava/lang/String;)Ljava/io/File;
statement is: RamFileIndex ramFileIndex = new RamFileIndex(createTempFile), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: LineReader lineReader = new LineReader(createTempFile, ramFileIndex), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: ramFileIndex.setOffsetOfLine(0, 0), class spoon.support.reflect.code.CtInvocationImpl
invocation is: ramFileIndex.setOffsetOfLine(0, 0) target is: ramFileIndex method is: setOffsetOfLine(int,int)
source statement: fr.pingtimeout.jtail.io.index.RamFileIndex(Ljava/io/File;)V callee: VariableReference: Statement 1, type fr.pingtimeout.jtail.io.index.RamFileIndexindex is: 3
Matched Method is: setOffsetOfLine(IJ)V
statement is: JTailModel jTailModel = new JTailModel(createTempFile, lineReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JTailPanel jTailPanel = new JTailPanel(jTailModel), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: jTailPanel.getCharacterHeight(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: jTailPanel.getCharacterHeight() target is: jTailPanel method is: getCharacterHeight()
source statement: fr.pingtimeout.jtail.gui.view.JTailPanel(Lfr/pingtimeout/jtail/gui/model/JTailModel;)V callee: VariableReference: Statement 5, type fr.pingtimeout.jtail.gui.view.JTailPanelindex is: 9
Matched Method is: getCharacterHeight()I
TestCase is: String string = "logfile.txt";
String string = "";
MockFile createTempFile = (MockFile)MockFile.createTempFile(string, string);
RamFileIndex ramFileIndex = new RamFileIndex(createTempFile);
LineReader lineReader = new LineReader(createTempFile, ramFileIndex);
int _int = 0;
int _int = 0;
((RamFileIndex) string).setOffsetOfLine(_int, _int);
JTailModel jTailModel = new JTailModel(createTempFile, lineReader);
JTailPanel jTailPanel = new JTailPanel(jTailModel);
((JTailPanel) _int).getCharacterHeight();

statement is: createTempFile(Ljava/lang/String;Ljava/lang/String;)Ljava/io/File; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.evosuite.runtime.mock.java.io.MockFile
statement code is: MockFile createTempFile = (MockFile)MockFile.createTempFile("d1$I02U&1JI*4Nr%I,", "d1$I02U&1JI*4Nr%I,")
statement is: fr.pingtimeout.jtail.io.FileIndexer(Ljava/io/File;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class fr.pingtimeout.jtail.io.FileIndexer
statement code is: FileIndexer fileIndexer = new FileIndexer(arg0)
statement is: getIndex()Lfr/pingtimeout/jtail/io/index/FileIndex; type is: class org.evosuite.testcase.statements.MethodStatement return type class fr.pingtimeout.jtail.io.index.ImmutableFileIndex
statement code is: ImmutableFileIndex index = (ImmutableFileIndex)fileIndexer.getIndex()
statement is: fr.pingtimeout.jtail.io.LineReader(Ljava/io/File;Lfr/pingtimeout/jtail/io/index/FileIndex;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class fr.pingtimeout.jtail.io.LineReader
statement code is: LineReader lineReader = new LineReader(arg0, arg1)
statement is: fr.pingtimeout.jtail.gui.model.JTailModel(Ljava/io/File;Lfr/pingtimeout/jtail/io/LineReader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class fr.pingtimeout.jtail.gui.model.JTailModel
statement code is: JTailModel jTailModel = new JTailModel(arg0, arg1)
statement is: fr.pingtimeout.jtail.gui.view.JTailPanel(Lfr/pingtimeout/jtail/gui/model/JTailModel;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class fr.pingtimeout.jtail.gui.view.JTailPanel
statement code is: JTailPanel jTailPanel = new JTailPanel(arg0)
statement is: update(Ljava/util/Observable;Ljava/lang/Object;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: jTailPanel.update((Observable) arg0, (Object) arg1)
test data is: MockFile createTempFile = (MockFile)MockFile.createTempFile("d1$I02U&1JI*4Nr%I,", "d1$I02U&1JI*4Nr%I,");
FileIndexer fileIndexer = new FileIndexer(createTempFile);
ImmutableFileIndex index = (ImmutableFileIndex)fileIndexer.getIndex();
LineReader lineReader = new LineReader(createTempFile, index);
JTailModel jTailModel = new JTailModel(createTempFile, lineReader);
JTailPanel jTailPanel = new JTailPanel(jTailModel);
jTailPanel.update((Observable) fileIndexer, (Object) createTempFile);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        MockFile createTempFile = ((MockFile) (MockFile.createTempFile("d1$I02U&1JI*4Nr%I,", "d1$I02U&1JI*4Nr%I,")));
        FileIndexer fileIndexer = new FileIndexer(createTempFile);
        ImmutableFileIndex index = ((ImmutableFileIndex) (fileIndexer.getIndex()));
        LineReader lineReader = new LineReader(createTempFile, index);
        JTailModel jTailModel = new JTailModel(createTempFile, lineReader);
        JTailPanel jTailPanel = new JTailPanel(jTailModel);
        jTailPanel.update(((Observable) (fileIndexer)), ((Object) (createTempFile)));
    }
}
statement is: MockFile createTempFile = ((MockFile) (MockFile.createTempFile("d1$I02U&1JI*4Nr%I,", "d1$I02U&1JI*4Nr%I,"))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: ((MockFile) (MockFile.createTempFile("d1$I02U&1JI*4Nr%I,", "d1$I02U&1JI*4Nr%I,"))) target is: MockFile method is: createTempFile(java.lang.String,java.lang.String)
Matched Method is: createTempFile(Ljava/lang/String;Ljava/lang/String;)Ljava/io/File;
statement is: FileIndexer fileIndexer = new FileIndexer(createTempFile), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: ImmutableFileIndex index = ((ImmutableFileIndex) (fileIndexer.getIndex())), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: ((ImmutableFileIndex) (fileIndexer.getIndex())) target is: fileIndexer method is: getIndex()
source statement: fr.pingtimeout.jtail.io.FileIndexer(Ljava/io/File;)V callee: VariableReference: Statement 1, type fr.pingtimeout.jtail.io.FileIndexerindex is: 3
Matched Method is: getIndex()Lfr/pingtimeout/jtail/io/index/FileIndex;
statement is: LineReader lineReader = new LineReader(createTempFile, index), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JTailModel jTailModel = new JTailModel(createTempFile, lineReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JTailPanel jTailPanel = new JTailPanel(jTailModel), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: jTailPanel.update(((Observable) (fileIndexer)), ((Object) (createTempFile))), class spoon.support.reflect.code.CtInvocationImpl
invocation is: jTailPanel.update(((Observable) (fileIndexer)), ((Object) (createTempFile))) target is: jTailPanel method is: update(Observable,java.lang.Object)
source statement: fr.pingtimeout.jtail.gui.view.JTailPanel(Lfr/pingtimeout/jtail/gui/model/JTailModel;)V callee: VariableReference: Statement 5, type fr.pingtimeout.jtail.gui.view.JTailPanelindex is: 7
Matched Method is: update(Ljava/util/Observable;Ljava/lang/Object;)V
TestCase is: String string = "d1$I02U&1JI*4Nr%I,";
String string = "d1$I02U&1JI*4Nr%I,";
MockFile createTempFile = (MockFile)MockFile.createTempFile(string, string);
FileIndexer fileIndexer = new FileIndexer(createTempFile);
ImmutableFileIndex index = (ImmutableFileIndex)((FileIndexer) string).getIndex();
LineReader lineReader = new LineReader(createTempFile, index);
JTailModel jTailModel = new JTailModel(createTempFile, lineReader);
JTailPanel jTailPanel = new JTailPanel(jTailModel);
((JTailPanel) lineReader).update((Observable) fileIndexer, (Object) createTempFile);

statement is: createTempFile(Ljava/lang/String;Ljava/lang/String;)Ljava/io/File; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.evosuite.runtime.mock.java.io.MockFile
statement code is: MockFile createTempFile = (MockFile)MockFile.createTempFile("}kC", "")
statement is: fr.pingtimeout.jtail.io.index.RamFileIndex(Ljava/io/File;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class fr.pingtimeout.jtail.io.index.RamFileIndex
statement code is: RamFileIndex ramFileIndex = new RamFileIndex(arg0)
statement is: fr.pingtimeout.jtail.io.LineReader(Ljava/io/File;Lfr/pingtimeout/jtail/io/index/FileIndex;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class fr.pingtimeout.jtail.io.LineReader
statement code is: LineReader lineReader = new LineReader(arg0, arg1)
statement is: setOffsetOfLine(IJ)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: ramFileIndex.setOffsetOfLine(0, 0)
statement is: fr.pingtimeout.jtail.gui.model.JTailModel(Ljava/io/File;Lfr/pingtimeout/jtail/io/LineReader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class fr.pingtimeout.jtail.gui.model.JTailModel
statement code is: JTailModel jTailModel = new JTailModel(arg0, arg1)
statement is: fr.pingtimeout.jtail.gui.view.JTailPanel(Lfr/pingtimeout/jtail/gui/model/JTailModel;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class fr.pingtimeout.jtail.gui.view.JTailPanel
statement code is: JTailPanel jTailPanel = new JTailPanel(arg0)
statement is: setNbDisplayedLines(I)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: jTailModel.setNbDisplayedLines(0)
test data is: MockFile createTempFile = (MockFile)MockFile.createTempFile("}kC", "");
RamFileIndex ramFileIndex = new RamFileIndex(createTempFile);
LineReader lineReader = new LineReader(createTempFile, ramFileIndex);
ramFileIndex.setOffsetOfLine(0, 0);
JTailModel jTailModel = new JTailModel(createTempFile, lineReader);
JTailPanel jTailPanel = new JTailPanel(jTailModel);
jTailModel.setNbDisplayedLines(0);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        MockFile createTempFile = ((MockFile) (new File("logfile.txt")));
        RamFileIndex ramFileIndex = new RamFileIndex(createTempFile);
        LineReader lineReader = new LineReader(createTempFile, ramFileIndex);
        ramFileIndex.setOffsetOfLine(0, 0);
        JTailModel jTailModel = new JTailModel(createTempFile, lineReader);
        JTailPanel jTailPanel = new JTailPanel(jTailModel);
        jTailModel.setNbDisplayedLines(50);
    }
}
statement is: MockFile createTempFile = ((MockFile) (new File("logfile.txt"))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: RamFileIndex ramFileIndex = new RamFileIndex(createTempFile), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: fr.pingtimeout.jtail.io.index.RamFileIndex(Ljava/io/File;)V
statement is: LineReader lineReader = new LineReader(createTempFile, ramFileIndex), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: fr.pingtimeout.jtail.io.LineReader(Ljava/io/File;Lfr/pingtimeout/jtail/io/index/FileIndex;)V
statement is: ramFileIndex.setOffsetOfLine(0, 0), class spoon.support.reflect.code.CtInvocationImpl
invocation is: ramFileIndex.setOffsetOfLine(0, 0) target is: ramFileIndex method is: setOffsetOfLine(int,int)
statement is: JTailModel jTailModel = new JTailModel(createTempFile, lineReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: fr.pingtimeout.jtail.gui.model.JTailModel(Ljava/io/File;Lfr/pingtimeout/jtail/io/LineReader;)V
statement is: JTailPanel jTailPanel = new JTailPanel(jTailModel), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: fr.pingtimeout.jtail.gui.view.JTailPanel(Lfr/pingtimeout/jtail/gui/model/JTailModel;)V
statement is: jTailModel.setNbDisplayedLines(50), class spoon.support.reflect.code.CtInvocationImpl
invocation is: jTailModel.setNbDisplayedLines(50) target is: jTailModel method is: setNbDisplayedLines(int)
statement is: createTempFile(Ljava/lang/String;Ljava/lang/String;)Ljava/io/File; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.evosuite.runtime.mock.java.io.MockFile
statement code is: MockFile createTempFile = (MockFile)MockFile.createTempFile("}kC", "")
statement is: fr.pingtimeout.jtail.io.index.RamFileIndex(Ljava/io/File;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class fr.pingtimeout.jtail.io.index.RamFileIndex
statement code is: RamFileIndex ramFileIndex = new RamFileIndex(arg0)
statement is: fr.pingtimeout.jtail.io.LineReader(Ljava/io/File;Lfr/pingtimeout/jtail/io/index/FileIndex;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class fr.pingtimeout.jtail.io.LineReader
statement code is: LineReader lineReader = new LineReader(arg0, arg1)
statement is: setOffsetOfLine(IJ)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: ramFileIndex.setOffsetOfLine(0, 0)
statement is: fr.pingtimeout.jtail.gui.model.JTailModel(Ljava/io/File;Lfr/pingtimeout/jtail/io/LineReader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class fr.pingtimeout.jtail.gui.model.JTailModel
statement code is: JTailModel jTailModel = new JTailModel(arg0, arg1)
statement is: fr.pingtimeout.jtail.gui.view.JTailPanel(Lfr/pingtimeout/jtail/gui/model/JTailModel;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class fr.pingtimeout.jtail.gui.view.JTailPanel
statement code is: JTailPanel jTailPanel = new JTailPanel(arg0)
statement is: JTailModelEvent.Type jTailModelEvent_Type = JTailModelEvent.Type.RESIZED type is: class org.evosuite.testcase.statements.EnumPrimitiveStatement return type class fr.pingtimeout.jtail.gui.model.JTailModelEvent$Type
statement code is: JTailModelEvent.Type jTailModelEvent_Type = JTailModelEvent.Type.RESIZED
statement is: fr.pingtimeout.jtail.gui.model.JTailModelEvent(Lfr/pingtimeout/jtail/gui/model/JTailModelEvent$Type;IIII)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class fr.pingtimeout.jtail.gui.model.JTailModelEvent
statement code is: JTailModelEvent jTailModelEvent = new JTailModelEvent(arg0, (-178), (byte)4, (byte)103, (byte)108)
statement is: setNbDisplayedLines(I)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: jTailModel.setNbDisplayedLines(103)
statement is: update(Ljava/util/Observable;Ljava/lang/Object;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: jTailPanel.update((Observable) arg0, (Object) arg1)
test data is: MockFile createTempFile = (MockFile)MockFile.createTempFile("}kC", "");
RamFileIndex ramFileIndex = new RamFileIndex(createTempFile);
LineReader lineReader = new LineReader(createTempFile, ramFileIndex);
ramFileIndex.setOffsetOfLine(0, 0);
JTailModel jTailModel = new JTailModel(createTempFile, lineReader);
JTailPanel jTailPanel = new JTailPanel(jTailModel);
JTailModelEvent.Type jTailModelEvent_Type = JTailModelEvent.Type.RESIZED;
JTailModelEvent jTailModelEvent = new JTailModelEvent(jTailModelEvent_Type, (-178), (byte)4, (byte)103, (byte)108);
jTailModel.setNbDisplayedLines(103);
jTailPanel.update((Observable) jTailModel, (Object) jTailModelEvent);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        MockFile createTempFile = ((MockFile) (MockFile.createTempFile("mockfile.log", "")));
        RamFileIndex ramFileIndex = new RamFileIndex(createTempFile);
        LineReader lineReader = new LineReader(createTempFile, ramFileIndex);
        ramFileIndex.setOffsetOfLine(0, 0);
        JTailModel jTailModel = new JTailModel(createTempFile, lineReader);
        JTailPanel jTailPanel = new JTailPanel(jTailModel);
        JTailModelEvent.Type jTailModelEvent_Type = Type.RESIZED;
        JTailModelEvent jTailModelEvent = new JTailModelEvent(jTailModelEvent_Type, -178, ((byte) (4)), ((byte) (103)), ((byte) (108)));
        jTailModel.setNbDisplayedLines(103);
        jTailPanel.update(((Observable) (jTailModel)), ((Object) (jTailModelEvent)));
    }
}
statement is: MockFile createTempFile = ((MockFile) (MockFile.createTempFile("mockfile.log", ""))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: ((MockFile) (MockFile.createTempFile("mockfile.log", ""))) target is: MockFile method is: createTempFile(java.lang.String,java.lang.String)
Matched Method is: createTempFile(Ljava/lang/String;Ljava/lang/String;)Ljava/io/File;
statement is: RamFileIndex ramFileIndex = new RamFileIndex(createTempFile), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: LineReader lineReader = new LineReader(createTempFile, ramFileIndex), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: ramFileIndex.setOffsetOfLine(0, 0), class spoon.support.reflect.code.CtInvocationImpl
invocation is: ramFileIndex.setOffsetOfLine(0, 0) target is: ramFileIndex method is: setOffsetOfLine(int,int)
source statement: fr.pingtimeout.jtail.io.index.RamFileIndex(Ljava/io/File;)V callee: VariableReference: Statement 1, type fr.pingtimeout.jtail.io.index.RamFileIndexindex is: 3
Matched Method is: setOffsetOfLine(IJ)V
statement is: JTailModel jTailModel = new JTailModel(createTempFile, lineReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JTailPanel jTailPanel = new JTailPanel(jTailModel), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JTailModelEvent.Type jTailModelEvent_Type = Type.RESIZED, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: Type.RESIZED is Type
statement is: JTailModelEvent jTailModelEvent = new JTailModelEvent(jTailModelEvent_Type, -178, ((byte) (4)), ((byte) (103)), ((byte) (108))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: jTailModel.setNbDisplayedLines(103), class spoon.support.reflect.code.CtInvocationImpl
invocation is: jTailModel.setNbDisplayedLines(103) target is: jTailModel method is: setNbDisplayedLines(int)
source statement: fr.pingtimeout.jtail.gui.model.JTailModel(Ljava/io/File;Lfr/pingtimeout/jtail/io/LineReader;)V callee: VariableReference: Statement 4, type fr.pingtimeout.jtail.gui.model.JTailModelindex is: 8
Matched Method is: setNbDisplayedLines(I)V
statement is: jTailPanel.update(((Observable) (jTailModel)), ((Object) (jTailModelEvent))), class spoon.support.reflect.code.CtInvocationImpl
invocation is: jTailPanel.update(((Observable) (jTailModel)), ((Object) (jTailModelEvent))) target is: jTailPanel method is: update(Observable,java.lang.Object)
source statement: fr.pingtimeout.jtail.gui.view.JTailPanel(Lfr/pingtimeout/jtail/gui/model/JTailModel;)V callee: VariableReference: Statement 5, type fr.pingtimeout.jtail.gui.view.JTailPanelindex is: 9
Matched Method is: update(Ljava/util/Observable;Ljava/lang/Object;)V
TestCase is: String string = "mockfile.log";
String string = "";
MockFile createTempFile = (MockFile)MockFile.createTempFile(string, string);
RamFileIndex ramFileIndex = new RamFileIndex(createTempFile);
LineReader lineReader = new LineReader(createTempFile, ramFileIndex);
int _int = 0;
int _int = 0;
((RamFileIndex) string).setOffsetOfLine(_int, _int);
JTailModel jTailModel = new JTailModel(createTempFile, lineReader);
JTailPanel jTailPanel = new JTailPanel(jTailModel);
int _int = 4;
int _int = 103;
int _int = 108;
JTailModelEvent jTailModelEvent = new JTailModelEvent((JTailModelEvent.Type) _int, _int, _int, (byte)103, (byte)108);
int _int = 103;
((JTailModel) lineReader).setNbDisplayedLines(_int);
((JTailPanel) _int).update((Observable) jTailModel, (Object) jTailModelEvent);

statement is: createTempFile(Ljava/lang/String;Ljava/lang/String;)Ljava/io/File; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.evosuite.runtime.mock.java.io.MockFile
statement code is: MockFile createTempFile = (MockFile)MockFile.createTempFile("}kC", "")
statement is: fr.pingtimeout.jtail.io.index.RamFileIndex(Ljava/io/File;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class fr.pingtimeout.jtail.io.index.RamFileIndex
statement code is: RamFileIndex ramFileIndex = new RamFileIndex(arg0)
statement is: fr.pingtimeout.jtail.io.LineReader(Ljava/io/File;Lfr/pingtimeout/jtail/io/index/FileIndex;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class fr.pingtimeout.jtail.io.LineReader
statement code is: LineReader lineReader = new LineReader(arg0, arg1)
statement is: setOffsetOfLine(IJ)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: ramFileIndex.setOffsetOfLine(0, 0)
statement is: fr.pingtimeout.jtail.gui.model.JTailModel(Ljava/io/File;Lfr/pingtimeout/jtail/io/LineReader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class fr.pingtimeout.jtail.gui.model.JTailModel
statement code is: JTailModel jTailModel = new JTailModel(arg0, arg1)
statement is: fr.pingtimeout.jtail.gui.view.JTailPanel(Lfr/pingtimeout/jtail/gui/model/JTailModel;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class fr.pingtimeout.jtail.gui.view.JTailPanel
statement code is: JTailPanel jTailPanel = new JTailPanel(arg0)
statement is: JTailModelEvent.Type jTailModelEvent_Type = JTailModelEvent.Type.SCROLLED type is: class org.evosuite.testcase.statements.EnumPrimitiveStatement return type class fr.pingtimeout.jtail.gui.model.JTailModelEvent$Type
statement code is: JTailModelEvent.Type jTailModelEvent_Type = JTailModelEvent.Type.SCROLLED
statement is: fr.pingtimeout.jtail.gui.model.JTailModelEvent(Lfr/pingtimeout/jtail/gui/model/JTailModelEvent$Type;IIII)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class fr.pingtimeout.jtail.gui.model.JTailModelEvent
statement code is: JTailModelEvent jTailModelEvent = new JTailModelEvent(arg0, (-178), (byte)4, (byte)103, (byte)108)
statement is: update(Ljava/util/Observable;Ljava/lang/Object;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: jTailPanel.update((Observable) arg0, (Object) arg1)
test data is: MockFile createTempFile = (MockFile)MockFile.createTempFile("}kC", "");
RamFileIndex ramFileIndex = new RamFileIndex(createTempFile);
LineReader lineReader = new LineReader(createTempFile, ramFileIndex);
ramFileIndex.setOffsetOfLine(0, 0);
JTailModel jTailModel = new JTailModel(createTempFile, lineReader);
JTailPanel jTailPanel = new JTailPanel(jTailModel);
JTailModelEvent.Type jTailModelEvent_Type = JTailModelEvent.Type.SCROLLED;
JTailModelEvent jTailModelEvent = new JTailModelEvent(jTailModelEvent_Type, (-178), (byte)4, (byte)103, (byte)108);
jTailPanel.update((Observable) jTailModel, (Object) jTailModelEvent);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        MockFile createTempFile = new MockFile("test_data.txt");
        RamFileIndex ramFileIndex = new RamFileIndex(createTempFile);
        LineReader lineReader = new LineReader(createTempFile, ramFileIndex);
        ramFileIndex.setOffsetOfLine(0, 0);
        JTailModel jTailModel = new JTailModel(createTempFile, lineReader);
        JTailPanel jTailPanel = new JTailPanel(jTailModel);
        JTailModelEvent.Type jTailModelEvent_Type = Type.SCROLLED;
        JTailModelEvent jTailModelEvent = new JTailModelEvent(jTailModelEvent_Type, -178, ((byte) (4)), ((byte) (103)), ((byte) (108)));
        jTailPanel.update(((Observable) (jTailModel)), ((Object) (jTailModelEvent)));
    }
}
statement is: MockFile createTempFile = new MockFile("test_data.txt"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: RamFileIndex ramFileIndex = new RamFileIndex(createTempFile), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: fr.pingtimeout.jtail.io.index.RamFileIndex(Ljava/io/File;)V
statement is: LineReader lineReader = new LineReader(createTempFile, ramFileIndex), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: fr.pingtimeout.jtail.io.LineReader(Ljava/io/File;Lfr/pingtimeout/jtail/io/index/FileIndex;)V
statement is: ramFileIndex.setOffsetOfLine(0, 0), class spoon.support.reflect.code.CtInvocationImpl
invocation is: ramFileIndex.setOffsetOfLine(0, 0) target is: ramFileIndex method is: setOffsetOfLine(int,int)
statement is: JTailModel jTailModel = new JTailModel(createTempFile, lineReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: fr.pingtimeout.jtail.gui.model.JTailModel(Ljava/io/File;Lfr/pingtimeout/jtail/io/LineReader;)V
statement is: JTailPanel jTailPanel = new JTailPanel(jTailModel), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: fr.pingtimeout.jtail.gui.view.JTailPanel(Lfr/pingtimeout/jtail/gui/model/JTailModel;)V
statement is: JTailModelEvent.Type jTailModelEvent_Type = Type.SCROLLED, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: Type.SCROLLED is Type
statement is: JTailModelEvent jTailModelEvent = new JTailModelEvent(jTailModelEvent_Type, -178, ((byte) (4)), ((byte) (103)), ((byte) (108))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: jTailPanel.update(((Observable) (jTailModel)), ((Object) (jTailModelEvent))), class spoon.support.reflect.code.CtInvocationImpl
invocation is: jTailPanel.update(((Observable) (jTailModel)), ((Object) (jTailModelEvent))) target is: jTailPanel method is: update(Observable,java.lang.Object)
source statement: int _int = 4 callee: VariableReference: Statement 5, type fr.pingtimeout.jtail.gui.view.JTailPanelindex is: 0
TestCase is: int _int = 4;
int _int = 103;
int _int = 108;
JTailModelEvent jTailModelEvent = new JTailModelEvent((JTailModelEvent.Type) _int, _int, _int, (byte)103, (byte)108);

* test suite isTestSuite: 11
Test 0: 
MockFile createTempFile = (MockFile)MockFile.createTempFile("}kC", "");
RamFileIndex ramFileIndex = new RamFileIndex(createTempFile);
LineReader lineReader = new LineReader(createTempFile, ramFileIndex);
ramFileIndex.setOffsetOfLine(0, 0);
JTailModel jTailModel = new JTailModel(createTempFile, lineReader);
JTailPanel jTailPanel = new JTailPanel(jTailModel);
jTailPanel.getVerticalScrollBar();
Test 1: 
MockFile createTempFile = (MockFile)MockFile.createTempFile("}kC", "");
RamFileIndex ramFileIndex = new RamFileIndex(createTempFile);
LineReader lineReader = new LineReader(createTempFile, ramFileIndex);
ramFileIndex.setOffsetOfLine(0, 0);
JTailModel jTailModel = new JTailModel(createTempFile, lineReader);
JTailPanel jTailPanel = new JTailPanel(jTailModel);
jTailPanel.getCharacterHeight();
Test 2: 
MockFile createTempFile = (MockFile)MockFile.createTempFile("d1$I02U&1JI*4Nr%I,", "d1$I02U&1JI*4Nr%I,");
FileIndexer fileIndexer = new FileIndexer(createTempFile);
ImmutableFileIndex index = (ImmutableFileIndex)fileIndexer.getIndex();
LineReader lineReader = new LineReader(createTempFile, index);
JTailModel jTailModel = new JTailModel(createTempFile, lineReader);
JTailPanel jTailPanel = new JTailPanel(jTailModel);
jTailPanel.update((Observable) fileIndexer, (Object) createTempFile);
Test 3: 
MockFile createTempFile = (MockFile)MockFile.createTempFile("}kC", "");
RamFileIndex ramFileIndex = new RamFileIndex(createTempFile);
LineReader lineReader = new LineReader(createTempFile, ramFileIndex);
ramFileIndex.setOffsetOfLine(0, 0);
JTailModel jTailModel = new JTailModel(createTempFile, lineReader);
JTailPanel jTailPanel = new JTailPanel(jTailModel);
jTailModel.setNbDisplayedLines(0);
Test 4: 
MockFile createTempFile = (MockFile)MockFile.createTempFile("}kC", "");
RamFileIndex ramFileIndex = new RamFileIndex(createTempFile);
LineReader lineReader = new LineReader(createTempFile, ramFileIndex);
ramFileIndex.setOffsetOfLine(0, 0);
JTailModel jTailModel = new JTailModel(createTempFile, lineReader);
JTailPanel jTailPanel = new JTailPanel(jTailModel);
JTailModelEvent.Type jTailModelEvent_Type = JTailModelEvent.Type.RESIZED;
JTailModelEvent jTailModelEvent = new JTailModelEvent(jTailModelEvent_Type, (-178), (byte)4, (byte)103, (byte)108);
jTailModel.setNbDisplayedLines(103);
jTailPanel.update((Observable) jTailModel, (Object) jTailModelEvent);
Test 5: 
MockFile createTempFile = (MockFile)MockFile.createTempFile("}kC", "");
RamFileIndex ramFileIndex = new RamFileIndex(createTempFile);
LineReader lineReader = new LineReader(createTempFile, ramFileIndex);
ramFileIndex.setOffsetOfLine(0, 0);
JTailModel jTailModel = new JTailModel(createTempFile, lineReader);
JTailPanel jTailPanel = new JTailPanel(jTailModel);
JTailModelEvent.Type jTailModelEvent_Type = JTailModelEvent.Type.SCROLLED;
JTailModelEvent jTailModelEvent = new JTailModelEvent(jTailModelEvent_Type, (-178), (byte)4, (byte)103, (byte)108);
jTailPanel.update((Observable) jTailModel, (Object) jTailModelEvent);
Test 6: 
MockFile createTempFile = (MockFile)MockFile.createTempFile("example.txt", "");
RamFileIndex ramFileIndex = new RamFileIndex(createTempFile);
LineReader lineReader = new LineReader(createTempFile, ramFileIndex);
int _int = 0;
((RamFileIndex)"").setOffsetOfLine(0, 0);
JTailModel jTailModel = new JTailModel(createTempFile, lineReader);
JTailPanel jTailPanel = new JTailPanel(jTailModel);
((JTailPanel) _int).getVerticalScrollBar();

Test 7: 
MockFile createTempFile = (MockFile)MockFile.createTempFile("logfile.txt", "");
RamFileIndex ramFileIndex = new RamFileIndex(createTempFile);
LineReader lineReader = new LineReader(createTempFile, ramFileIndex);
int _int = 0;
((RamFileIndex)"").setOffsetOfLine(0, 0);
JTailModel jTailModel = new JTailModel(createTempFile, lineReader);
JTailPanel jTailPanel = new JTailPanel(jTailModel);
((JTailPanel) _int).getCharacterHeight();

Test 8: 
MockFile createTempFile = (MockFile)MockFile.createTempFile("d1$I02U&1JI*4Nr%I,", "d1$I02U&1JI*4Nr%I,");
FileIndexer fileIndexer = new FileIndexer(createTempFile);
ImmutableFileIndex index = (ImmutableFileIndex)((FileIndexer)"d1$I02U&1JI*4Nr%I,").getIndex();
LineReader lineReader = new LineReader(createTempFile, index);
JTailModel jTailModel = new JTailModel(createTempFile, lineReader);
JTailPanel jTailPanel = new JTailPanel(jTailModel);
((JTailPanel) lineReader).update((Observable) fileIndexer, (Object) createTempFile);

Test 9: 
MockFile createTempFile = (MockFile)MockFile.createTempFile("mockfile.log", "");
RamFileIndex ramFileIndex = new RamFileIndex(createTempFile);
LineReader lineReader = new LineReader(createTempFile, ramFileIndex);
int _int = 0;
((RamFileIndex)"").setOffsetOfLine(0, 0);
JTailModel jTailModel = new JTailModel(createTempFile, lineReader);
JTailPanel jTailPanel = new JTailPanel(jTailModel);
int _int = 4;
int _int = 103;
int _int = 108;
JTailModelEvent jTailModelEvent = new JTailModelEvent((JTailModelEvent.Type) _int, _int, _int, (byte)103, (byte)108);
int _int = 103;
((JTailModel) lineReader).setNbDisplayedLines(_int);
((JTailPanel) _int).update((Observable) jTailModel, (Object) jTailModelEvent);

Test 10: 
JTailModelEvent jTailModelEvent = new JTailModelEvent((JTailModelEvent.Type) 4, 103, 108, (byte)103, (byte)108);


* Generated after the refinement and before minimization 11 tests with total length 85
* test suite isTestSuite: 11
Test 0: 
MockFile createTempFile = (MockFile)MockFile.createTempFile("}kC", "");
RamFileIndex ramFileIndex = new RamFileIndex(createTempFile);
LineReader lineReader = new LineReader(createTempFile, ramFileIndex);
ramFileIndex.setOffsetOfLine(0, 0);
JTailModel jTailModel = new JTailModel(createTempFile, lineReader);
JTailPanel jTailPanel = new JTailPanel(jTailModel);
jTailPanel.getVerticalScrollBar();
Test 1: 
MockFile createTempFile = (MockFile)MockFile.createTempFile("}kC", "");
RamFileIndex ramFileIndex = new RamFileIndex(createTempFile);
LineReader lineReader = new LineReader(createTempFile, ramFileIndex);
ramFileIndex.setOffsetOfLine(0, 0);
JTailModel jTailModel = new JTailModel(createTempFile, lineReader);
JTailPanel jTailPanel = new JTailPanel(jTailModel);
jTailPanel.getCharacterHeight();
Test 2: 
MockFile createTempFile = (MockFile)MockFile.createTempFile("d1$I02U&1JI*4Nr%I,", "d1$I02U&1JI*4Nr%I,");
FileIndexer fileIndexer = new FileIndexer(createTempFile);
ImmutableFileIndex index = (ImmutableFileIndex)fileIndexer.getIndex();
LineReader lineReader = new LineReader(createTempFile, index);
JTailModel jTailModel = new JTailModel(createTempFile, lineReader);
JTailPanel jTailPanel = new JTailPanel(jTailModel);
jTailPanel.update((Observable) fileIndexer, (Object) createTempFile);
Test 3: 
MockFile createTempFile = (MockFile)MockFile.createTempFile("}kC", "");
RamFileIndex ramFileIndex = new RamFileIndex(createTempFile);
LineReader lineReader = new LineReader(createTempFile, ramFileIndex);
ramFileIndex.setOffsetOfLine(0, 0);
JTailModel jTailModel = new JTailModel(createTempFile, lineReader);
JTailPanel jTailPanel = new JTailPanel(jTailModel);
jTailModel.setNbDisplayedLines(0);
Test 4: 
MockFile createTempFile = (MockFile)MockFile.createTempFile("}kC", "");
RamFileIndex ramFileIndex = new RamFileIndex(createTempFile);
LineReader lineReader = new LineReader(createTempFile, ramFileIndex);
ramFileIndex.setOffsetOfLine(0, 0);
JTailModel jTailModel = new JTailModel(createTempFile, lineReader);
JTailPanel jTailPanel = new JTailPanel(jTailModel);
JTailModelEvent.Type jTailModelEvent_Type = JTailModelEvent.Type.RESIZED;
JTailModelEvent jTailModelEvent = new JTailModelEvent(jTailModelEvent_Type, (-178), (byte)4, (byte)103, (byte)108);
jTailModel.setNbDisplayedLines(103);
jTailPanel.update((Observable) jTailModel, (Object) jTailModelEvent);
Test 5: 
MockFile createTempFile = (MockFile)MockFile.createTempFile("}kC", "");
RamFileIndex ramFileIndex = new RamFileIndex(createTempFile);
LineReader lineReader = new LineReader(createTempFile, ramFileIndex);
ramFileIndex.setOffsetOfLine(0, 0);
JTailModel jTailModel = new JTailModel(createTempFile, lineReader);
JTailPanel jTailPanel = new JTailPanel(jTailModel);
JTailModelEvent.Type jTailModelEvent_Type = JTailModelEvent.Type.SCROLLED;
JTailModelEvent jTailModelEvent = new JTailModelEvent(jTailModelEvent_Type, (-178), (byte)4, (byte)103, (byte)108);
jTailPanel.update((Observable) jTailModel, (Object) jTailModelEvent);
Test 6: 
MockFile createTempFile = (MockFile)MockFile.createTempFile("example.txt", "");
RamFileIndex ramFileIndex = new RamFileIndex(createTempFile);
LineReader lineReader = new LineReader(createTempFile, ramFileIndex);
int _int = 0;
((RamFileIndex)"").setOffsetOfLine(0, 0);
JTailModel jTailModel = new JTailModel(createTempFile, lineReader);
JTailPanel jTailPanel = new JTailPanel(jTailModel);
((JTailPanel) _int).getVerticalScrollBar();

Test 7: 
MockFile createTempFile = (MockFile)MockFile.createTempFile("logfile.txt", "");
RamFileIndex ramFileIndex = new RamFileIndex(createTempFile);
LineReader lineReader = new LineReader(createTempFile, ramFileIndex);
int _int = 0;
((RamFileIndex)"").setOffsetOfLine(0, 0);
JTailModel jTailModel = new JTailModel(createTempFile, lineReader);
JTailPanel jTailPanel = new JTailPanel(jTailModel);
((JTailPanel) _int).getCharacterHeight();

Test 8: 
MockFile createTempFile = (MockFile)MockFile.createTempFile("d1$I02U&1JI*4Nr%I,", "d1$I02U&1JI*4Nr%I,");
FileIndexer fileIndexer = new FileIndexer(createTempFile);
ImmutableFileIndex index = (ImmutableFileIndex)((FileIndexer)"d1$I02U&1JI*4Nr%I,").getIndex();
LineReader lineReader = new LineReader(createTempFile, index);
JTailModel jTailModel = new JTailModel(createTempFile, lineReader);
JTailPanel jTailPanel = new JTailPanel(jTailModel);
((JTailPanel) lineReader).update((Observable) fileIndexer, (Object) createTempFile);

Test 9: 
MockFile createTempFile = (MockFile)MockFile.createTempFile("mockfile.log", "");
RamFileIndex ramFileIndex = new RamFileIndex(createTempFile);
LineReader lineReader = new LineReader(createTempFile, ramFileIndex);
int _int = 0;
((RamFileIndex)"").setOffsetOfLine(0, 0);
JTailModel jTailModel = new JTailModel(createTempFile, lineReader);
JTailPanel jTailPanel = new JTailPanel(jTailModel);
int _int = 4;
int _int = 103;
int _int = 108;
JTailModelEvent jTailModelEvent = new JTailModelEvent((JTailModelEvent.Type) _int, _int, _int, (byte)103, (byte)108);
int _int = 103;
((JTailModel) lineReader).setNbDisplayedLines(_int);
((JTailPanel) _int).update((Observable) jTailModel, (Object) jTailModelEvent);

Test 10: 
JTailModelEvent jTailModelEvent = new JTailModelEvent((JTailModelEvent.Type) 4, 103, 108, (byte)103, (byte)108);


* Minimizing test suite
* test suite isTestSuite: 7
Test 0: 
MockFile createTempFile = (MockFile)MockFile.createTempFile("}kC", "");
RamFileIndex ramFileIndex = new RamFileIndex(createTempFile);
LineReader lineReader = new LineReader(createTempFile, ramFileIndex);
ramFileIndex.setOffsetOfLine(0, 0);
JTailModel jTailModel = new JTailModel(createTempFile, lineReader);
JTailPanel jTailPanel = new JTailPanel(jTailModel);
jTailPanel.getVerticalScrollBar();
Test 1: 
MockFile createTempFile = (MockFile)MockFile.createTempFile("}kC", "");
RamFileIndex ramFileIndex = new RamFileIndex(createTempFile);
LineReader lineReader = new LineReader(createTempFile, ramFileIndex);
ramFileIndex.setOffsetOfLine(0, 0);
JTailModel jTailModel = new JTailModel(createTempFile, lineReader);
JTailPanel jTailPanel = new JTailPanel(jTailModel);
jTailPanel.getCharacterHeight();
Test 2: 
MockFile createTempFile = (MockFile)MockFile.createTempFile("d1$I02U&1JI*4Nr%I,", "d1$I02U&1JI*4Nr%I,");
FileIndexer fileIndexer = new FileIndexer(createTempFile);
ImmutableFileIndex index = (ImmutableFileIndex)fileIndexer.getIndex();
LineReader lineReader = new LineReader(createTempFile, index);
JTailModel jTailModel = new JTailModel(createTempFile, lineReader);
JTailPanel jTailPanel = new JTailPanel(jTailModel);
jTailPanel.update((Observable) fileIndexer, (Object) createTempFile);
Test 3: 
MockFile createTempFile = (MockFile)MockFile.createTempFile("}kC", "");
RamFileIndex ramFileIndex = new RamFileIndex(createTempFile);
LineReader lineReader = new LineReader(createTempFile, ramFileIndex);
ramFileIndex.setOffsetOfLine(0, 0);
JTailModel jTailModel = new JTailModel(createTempFile, lineReader);
JTailPanel jTailPanel = new JTailPanel(jTailModel);
jTailModel.setNbDisplayedLines(0);
Test 4: 
MockFile createTempFile = (MockFile)MockFile.createTempFile("}kC", "");
RamFileIndex ramFileIndex = new RamFileIndex(createTempFile);
LineReader lineReader = new LineReader(createTempFile, ramFileIndex);
ramFileIndex.setOffsetOfLine(0, 0);
JTailModel jTailModel = new JTailModel(createTempFile, lineReader);
JTailPanel jTailPanel = new JTailPanel(jTailModel);
JTailModelEvent.Type jTailModelEvent_Type = JTailModelEvent.Type.RESIZED;
JTailModelEvent jTailModelEvent = new JTailModelEvent(jTailModelEvent_Type, (-178), (byte)4, (byte)103, (byte)108);
jTailPanel.update((Observable) jTailModel, (Object) jTailModelEvent);
Test 5: 
MockFile createTempFile = (MockFile)MockFile.createTempFile("}kC", "");
RamFileIndex ramFileIndex = new RamFileIndex(createTempFile);
LineReader lineReader = new LineReader(createTempFile, ramFileIndex);
ramFileIndex.setOffsetOfLine(0, 0);
JTailModel jTailModel = new JTailModel(createTempFile, lineReader);
JTailPanel jTailPanel = new JTailPanel(jTailModel);
JTailModelEvent.Type jTailModelEvent_Type = JTailModelEvent.Type.RESIZED;
JTailModelEvent jTailModelEvent = new JTailModelEvent(jTailModelEvent_Type, (-178), (byte)4, (byte)103, (byte)108);
jTailModel.setNbDisplayedLines(103);
jTailPanel.update((Observable) jTailModel, (Object) jTailModelEvent);
Test 6: 
MockFile createTempFile = (MockFile)MockFile.createTempFile("}kC", "");
RamFileIndex ramFileIndex = new RamFileIndex(createTempFile);
LineReader lineReader = new LineReader(createTempFile, ramFileIndex);
ramFileIndex.setOffsetOfLine(0, 0);
JTailModel jTailModel = new JTailModel(createTempFile, lineReader);
JTailPanel jTailPanel = new JTailPanel(jTailModel);
JTailModelEvent.Type jTailModelEvent_Type = JTailModelEvent.Type.SCROLLED;
JTailModelEvent jTailModelEvent = new JTailModelEvent(jTailModelEvent_Type, (-178), (byte)4, (byte)103, (byte)108);
jTailPanel.update((Observable) jTailModel, (Object) jTailModelEvent);

* Going to analyze the coverage criteria
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 87%
* Total number of goals: 23
* Number of covered goals: 20
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 98%
* Total number of goals: 65
* Number of covered goals: 64
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 43%
* Total number of goals: 14
* Number of covered goals: 6
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 4
* Number of covered goals: 4
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 87%
* Total number of goals: 23
* Number of covered goals: 20
* Generated 7 tests with total length 56
* Resulting test suite's coverage: 83% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 38%
* Compiling and checking tests
Going to execute: removeTestsThatDoNotCompile
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
Going to execute: handleTestsThatAreUnstable
[MASTER] 18:45:57.992 [logback-1] WARN  TimeController - Already entered in phase: INLINING. This will mess up the timing calculations.
* test suite isTestSuite: 6
Test 0: 
MockFile createTempFile = (MockFile)MockFile.createTempFile("}kC", "");
RamFileIndex ramFileIndex = new RamFileIndex(createTempFile);
LineReader lineReader = new LineReader(createTempFile, ramFileIndex);
ramFileIndex.setOffsetOfLine(0, 0);
JTailModel jTailModel = new JTailModel(createTempFile, lineReader);
JTailPanel jTailPanel = new JTailPanel(jTailModel);
jTailPanel.getVerticalScrollBar();
Test 1: 
MockFile createTempFile = (MockFile)MockFile.createTempFile("}kC", "");
RamFileIndex ramFileIndex = new RamFileIndex(createTempFile);
LineReader lineReader = new LineReader(createTempFile, ramFileIndex);
ramFileIndex.setOffsetOfLine(0, 0);
JTailModel jTailModel = new JTailModel(createTempFile, lineReader);
JTailPanel jTailPanel = new JTailPanel(jTailModel);
jTailPanel.getCharacterHeight();
Test 2: 
MockFile createTempFile = (MockFile)MockFile.createTempFile("d1$I02U&1JI*4Nr%I,", "d1$I02U&1JI*4Nr%I,");
FileIndexer fileIndexer = new FileIndexer(createTempFile);
ImmutableFileIndex index = (ImmutableFileIndex)fileIndexer.getIndex();
LineReader lineReader = new LineReader(createTempFile, index);
JTailModel jTailModel = new JTailModel(createTempFile, lineReader);
JTailPanel jTailPanel = new JTailPanel(jTailModel);
jTailPanel.update((Observable) fileIndexer, (Object) createTempFile);
Test 3: 
MockFile createTempFile = (MockFile)MockFile.createTempFile("}kC", "");
RamFileIndex ramFileIndex = new RamFileIndex(createTempFile);
LineReader lineReader = new LineReader(createTempFile, ramFileIndex);
ramFileIndex.setOffsetOfLine(0, 0);
JTailModel jTailModel = new JTailModel(createTempFile, lineReader);
JTailPanel jTailPanel = new JTailPanel(jTailModel);
jTailModel.setNbDisplayedLines(0);
Test 4: 
MockFile createTempFile = (MockFile)MockFile.createTempFile("}kC", "");
RamFileIndex ramFileIndex = new RamFileIndex(createTempFile);
LineReader lineReader = new LineReader(createTempFile, ramFileIndex);
ramFileIndex.setOffsetOfLine(0, 0);
JTailModel jTailModel = new JTailModel(createTempFile, lineReader);
JTailPanel jTailPanel = new JTailPanel(jTailModel);
JTailModelEvent.Type jTailModelEvent_Type = JTailModelEvent.Type.RESIZED;
JTailModelEvent jTailModelEvent = new JTailModelEvent(jTailModelEvent_Type, (-178), (byte)4, (byte)103, (byte)108);
jTailModel.setNbDisplayedLines(103);
jTailPanel.update((Observable) jTailModel, (Object) jTailModelEvent);
Test 5: 
MockFile createTempFile = (MockFile)MockFile.createTempFile("}kC", "");
RamFileIndex ramFileIndex = new RamFileIndex(createTempFile);
LineReader lineReader = new LineReader(createTempFile, ramFileIndex);
ramFileIndex.setOffsetOfLine(0, 0);
JTailModel jTailModel = new JTailModel(createTempFile, lineReader);
JTailPanel jTailPanel = new JTailPanel(jTailModel);
JTailModelEvent.Type jTailModelEvent_Type = JTailModelEvent.Type.SCROLLED;
JTailModelEvent jTailModelEvent = new JTailModelEvent(jTailModelEvent_Type, (-178), (byte)4, (byte)103, (byte)108);
jTailPanel.update((Observable) jTailModel, (Object) jTailModelEvent);

* Minimizing test suite
[MASTER] 18:46:02.093 [logback-1] WARN  TimeController - Already entered in phase: MINIMIZATION. This will mess up the timing calculations.
* test suite isTestSuite: 7
Test 0: 
MockFile createTempFile = (MockFile)MockFile.createTempFile("}kC", "");
RamFileIndex ramFileIndex = new RamFileIndex(createTempFile);
LineReader lineReader = new LineReader(createTempFile, ramFileIndex);
ramFileIndex.setOffsetOfLine(0, 0);
JTailModel jTailModel = new JTailModel(createTempFile, lineReader);
JTailPanel jTailPanel = new JTailPanel(jTailModel);
jTailPanel.getVerticalScrollBar();
Test 1: 
MockFile createTempFile = (MockFile)MockFile.createTempFile("}kC", "");
RamFileIndex ramFileIndex = new RamFileIndex(createTempFile);
LineReader lineReader = new LineReader(createTempFile, ramFileIndex);
ramFileIndex.setOffsetOfLine(0, 0);
JTailModel jTailModel = new JTailModel(createTempFile, lineReader);
JTailPanel jTailPanel = new JTailPanel(jTailModel);
jTailPanel.getCharacterHeight();
Test 2: 
MockFile createTempFile = (MockFile)MockFile.createTempFile("d1$I02U&1JI*4Nr%I,", "d1$I02U&1JI*4Nr%I,");
FileIndexer fileIndexer = new FileIndexer(createTempFile);
ImmutableFileIndex index = (ImmutableFileIndex)fileIndexer.getIndex();
LineReader lineReader = new LineReader(createTempFile, index);
JTailModel jTailModel = new JTailModel(createTempFile, lineReader);
JTailPanel jTailPanel = new JTailPanel(jTailModel);
jTailPanel.update((Observable) fileIndexer, (Object) createTempFile);
Test 3: 
MockFile createTempFile = (MockFile)MockFile.createTempFile("}kC", "");
RamFileIndex ramFileIndex = new RamFileIndex(createTempFile);
LineReader lineReader = new LineReader(createTempFile, ramFileIndex);
ramFileIndex.setOffsetOfLine(0, 0);
JTailModel jTailModel = new JTailModel(createTempFile, lineReader);
JTailPanel jTailPanel = new JTailPanel(jTailModel);
jTailModel.setNbDisplayedLines(0);
Test 4: 
MockFile createTempFile = (MockFile)MockFile.createTempFile("}kC", "");
RamFileIndex ramFileIndex = new RamFileIndex(createTempFile);
LineReader lineReader = new LineReader(createTempFile, ramFileIndex);
ramFileIndex.setOffsetOfLine(0, 0);
JTailModel jTailModel = new JTailModel(createTempFile, lineReader);
JTailPanel jTailPanel = new JTailPanel(jTailModel);
JTailModelEvent.Type jTailModelEvent_Type = JTailModelEvent.Type.RESIZED;
JTailModelEvent jTailModelEvent = new JTailModelEvent(jTailModelEvent_Type, (-178), (byte)4, (byte)103, (byte)108);
jTailPanel.update((Observable) jTailModel, (Object) jTailModelEvent);
Test 5: 
MockFile createTempFile = (MockFile)MockFile.createTempFile("}kC", "");
RamFileIndex ramFileIndex = new RamFileIndex(createTempFile);
LineReader lineReader = new LineReader(createTempFile, ramFileIndex);
ramFileIndex.setOffsetOfLine(0, 0);
JTailModel jTailModel = new JTailModel(createTempFile, lineReader);
JTailPanel jTailPanel = new JTailPanel(jTailModel);
JTailModelEvent.Type jTailModelEvent_Type = JTailModelEvent.Type.RESIZED;
JTailModelEvent jTailModelEvent = new JTailModelEvent(jTailModelEvent_Type, (-178), (byte)4, (byte)103, (byte)108);
jTailModel.setNbDisplayedLines(103);
jTailPanel.update((Observable) jTailModel, (Object) jTailModelEvent);
Test 6: 
MockFile createTempFile = (MockFile)MockFile.createTempFile("}kC", "");
RamFileIndex ramFileIndex = new RamFileIndex(createTempFile);
LineReader lineReader = new LineReader(createTempFile, ramFileIndex);
ramFileIndex.setOffsetOfLine(0, 0);
JTailModel jTailModel = new JTailModel(createTempFile, lineReader);
JTailPanel jTailPanel = new JTailPanel(jTailModel);
JTailModelEvent.Type jTailModelEvent_Type = JTailModelEvent.Type.SCROLLED;
JTailModelEvent jTailModelEvent = new JTailModelEvent(jTailModelEvent_Type, (-178), (byte)4, (byte)103, (byte)108);
jTailPanel.update((Observable) jTailModel, (Object) jTailModelEvent);

* Going to analyze the coverage criteria
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 87%
* Total number of goals: 23
* Number of covered goals: 20
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 98%
* Total number of goals: 65
* Number of covered goals: 64
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 43%
* Total number of goals: 14
* Number of covered goals: 6
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 4
* Number of covered goals: 4
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 87%
* Total number of goals: 23
* Number of covered goals: 20
* Generated 7 tests with total length 56
* Resulting test suite's coverage: 83% (average coverage for all fitness functions)
* Generating assertions
[MASTER] 18:46:02.128 [logback-1] WARN  TimeController - Already entered in phase: COVERAGE_ANALYSIS. This will mess up the timing calculations.
* Resulting test suite's mutation score: 38%
* Compiling and checking tests
[MASTER] 18:46:05.685 [logback-1] WARN  TimeController - Already entered in phase: ASSERTION_GENERATION. This will mess up the timing calculations.
Going to execute: removeTestsThatDoNotCompile
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
Going to execute: handleTestsThatAreUnstable
* Writing tests to file
[MASTER] 18:46:06.186 [logback-1] WARN  TimeController - Already entered in phase: JUNIT_CHECK. This will mess up the timing calculations.
* Writing JUnit test case 'JTailPanel_ESTest' to evosuite-tests
* Writing JUnit test case 'JTailPanel_Original_ESTest' to evosuite-tests
* Done!

* Computation finished
