* EvoSuite 1.2.1-SNAPSHOT
* Going to generate test cases for class: fr.pingtimeout.jtail.gui.view.JTailPanel
* Starting Client-0
* Properties loaded from /home/ubuntu/UTestGen/Evaluation/getting_results/dataset/SF110/64_jtailgui/evosuite-files/evosuite.properties
* Connecting to master process on port 16347
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 03:50:09.985 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 03:50:09.986 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 03:50:10.120 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 03:50:10.142 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 03:50:10.142 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 03:50:10.143 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
[MASTER] 03:50:11.176 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.ZoneId
[MASTER] 03:50:11.214 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.Temporal
[MASTER] 03:50:11.214 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAccessor
[MASTER] 03:50:11.214 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalField
[MASTER] 03:50:11.214 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalUnit
[MASTER] 03:50:11.215 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAmount
[MASTER] 03:50:11.215 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.Clock
[MASTER] 03:50:11.215 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalQuery
[MASTER] 03:50:11.215 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAdjuster
[MASTER] 03:50:11.227 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.Chronology
[MASTER] 03:50:11.234 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.Era
* Finished analyzing classpath
* Generating tests for class fr.pingtimeout.jtail.gui.view.JTailPanel
* Test criteria:
  - Branch Coverage
  - Line Coverage
  - Method-Output Coverage
  - Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 129
* Using seed 1709265007250
* Starting evolution
[Progress:>                             0%] [Cov:>                                  0%]* Initial Number of Goals in DynaMOSA = 63 / 129
[Progress:>                             0%] [Cov:==>                                7%][Progress:>                             2%] [Cov:==>                                7%][Progress:>                             2%] [Cov:==>                                7%][Progress:>                             2%] [Cov:==>                                7%][Progress:>                             3%] [Cov:==>                                7%][Progress:>                             3%] [Cov:==>                                7%][Progress:>                             3%] [Cov:==>                                7%][Progress:>                             3%] [Cov:==>                                7%][Progress:=>                            4%] [Cov:==>                                7%][Progress:=>                            4%] [Cov:==>                                7%][Progress:=>                            4%] [Cov:==>                                7%][Progress:=>                            4%] [Cov:==>                                7%][Progress:=>                            5%] [Cov:==>                                7%][Progress:=>                            5%] [Cov:==>                                7%][Progress:=>                            5%] [Cov:==>                                7%][Progress:=>                            5%] [Cov:==>                                7%][Progress:=>                            5%] [Cov:==>                                7%][Progress:=>                            6%] [Cov:==>                                7%][Progress:=>                            6%] [Cov:==>                                7%][Progress:=>                            6%] [Cov:==>                                7%][Progress:=>                            6%] [Cov:==>                                7%][Progress:=>                            6%] [Cov:==>                                7%][Progress:==>                           7%] [Cov:==>                                7%][Progress:==>                           7%] [Cov:==>                                7%][Progress:==>                           7%] [Cov:==>                                7%][Progress:==>                           7%] [Cov:==>                                7%][Progress:==>                           7%] [Cov:==>                                7%][Progress:==>                           7%] [Cov:==>                                7%][Progress:==>                           8%] [Cov:==>                                7%][Progress:==>                           8%] [Cov:==>                                7%][Progress:==>                           8%] [Cov:==>                                7%][Progress:==>                           8%] [Cov:==>                                7%][Progress:==>                           8%] [Cov:==>                                7%][Progress:==>                           8%] [Cov:==>                                7%][Progress:==>                           8%] [Cov:==>                                7%][Progress:==>                           8%] [Cov:==>                                7%][Progress:==>                           8%] [Cov:==>                                7%][Progress:==>                           8%] [Cov:==>                                7%][Progress:==>                           8%] [Cov:==>                                7%][Progress:==>                           9%] [Cov:==>                                7%][Progress:==>                           9%] [Cov:==>                                7%][Progress:==>                           9%] [Cov:==>                                7%][Progress:==>                           9%] [Cov:==>                                7%][Progress:==>                           9%] [Cov:==>                                7%][Progress:==>                           9%] [Cov:==>                                7%][Progress:==>                           9%] [Cov:==>                                7%][Progress:==>                           9%] [Cov:==>                                7%][Progress:==>                           9%] [Cov:==>                                7%][Progress:==>                           9%] [Cov:==>                                7%][Progress:==>                           9%] [Cov:==>                                7%][Progress:===>                          10%] [Cov:==>                                7%][Progress:===>                          10%] [Cov:==>                                7%][Progress:===>                          10%] [Cov:==>                                7%][Progress:===>                          10%] [Cov:==>                                7%][Progress:===>                          10%] [Cov:==>                                7%][Progress:===>                          10%] [Cov:==>                                7%][Progress:===>                          10%] [Cov:==>                                7%][Progress:===>                          10%] [Cov:==>                                7%][Progress:===>                          10%] [Cov:==>                                7%][Progress:===>                          10%] [Cov:==>                                7%][Progress:===>                          11%] [Cov:==>                                7%][Progress:===>                          11%] [Cov:==>                                7%][Progress:===>                          11%] [Cov:==>                                7%][Progress:===>                          11%] [Cov:==>                                7%][Progress:===>                          11%] [Cov:==>                                7%][Progress:===>                          11%] [Cov:==>                                7%][Progress:===>                          11%] [Cov:==>                                7%][Progress:===>                          11%] [Cov:==>                                7%][Progress:===>                          11%] [Cov:==>                                7%][Progress:===>                          11%] [Cov:==>                                7%][Progress:===>                          12%] [Cov:==>                                7%][Progress:===>                          12%] [Cov:==>                                7%][Progress:===>                          12%] [Cov:==>                                7%][Progress:===>                          12%] [Cov:==>                                7%][Progress:===>                          12%] [Cov:==>                                7%][Progress:===>                          12%] [Cov:==>                                7%][Progress:===>                          12%] [Cov:==>                                7%][Progress:===>                          12%] [Cov:==>                                7%][Progress:===>                          12%] [Cov:==>                                7%][Progress:===>                          12%] [Cov:==>                                7%][Progress:===>                          13%] [Cov:==>                                7%][Progress:===>                          13%] [Cov:==>                                7%][Progress:===>                          13%] [Cov:==>                                7%][Progress:===>                          13%] [Cov:==>                                7%][Progress:===>                          13%] [Cov:==>                                7%][Progress:===>                          13%] [Cov:==>                                7%][Progress:===>                          13%] [Cov:==>                                7%][Progress:===>                          13%] [Cov:==>                                7%][Progress:====>                         14%] [Cov:==>                                7%][Progress:====>                         14%] [Cov:==>                                7%][Progress:====>                         14%] [Cov:==>                                7%][Progress:====>                         14%] [Cov:==>                                7%][Progress:====>                         14%] [Cov:==>                                7%][Progress:====>                         14%] [Cov:==>                                7%][Progress:====>                         14%] [Cov:==>                                7%][Progress:====>                         14%] [Cov:==>                                7%][Progress:====>                         14%] [Cov:==>                                7%][Progress:====>                         14%] [Cov:==>                                7%][Progress:====>                         14%] [Cov:==>                                7%][Progress:====>                         14%] [Cov:==>                                7%][Progress:====>                         14%] [Cov:==>                                7%][Progress:====>                         15%] [Cov:==>                                7%][Progress:====>                         15%] [Cov:==>                                7%][Progress:====>                         15%] [Cov:==>                                7%][Progress:====>                         15%] [Cov:==>                                7%][Progress:====>                         15%] [Cov:==>                                7%][Progress:====>                         15%] [Cov:==>                                7%][Progress:====>                         15%] [Cov:==>                                7%][Progress:====>                         15%] [Cov:==>                                7%][Progress:====>                         15%] [Cov:==>                                7%][Progress:====>                         15%] [Cov:==>                                7%][Progress:====>                         15%] [Cov:==>                                7%][Progress:====>                         15%] [Cov:==>                                7%][Progress:====>                         15%] [Cov:==>                                7%][Progress:====>                         15%] [Cov:==>                                7%][Progress:====>                         16%] [Cov:==>                                7%][Progress:====>                         16%] [Cov:==>                                7%][Progress:====>                         16%] [Cov:==>                                7%][Progress:====>                         16%] [Cov:==>                                7%][Progress:====>                         16%] [Cov:==>                                7%][Progress:====>                         16%] [Cov:==>                                7%][Progress:====>                         16%] [Cov:==>                                7%][Progress:====>                         16%] [Cov:==>                                7%][Progress:====>                         16%] [Cov:==>                                7%][Progress:====>                         16%] [Cov:==>                                7%][Progress:====>                         16%] [Cov:==>                                7%][Progress:====>                         16%] [Cov:==>                                7%][Progress:====>                         16%] [Cov:==>                                7%][Progress:====>                         16%] [Cov:==>                                7%][Progress:=====>                        17%] [Cov:==>                                7%][Progress:=====>                        17%] [Cov:==>                                7%][Progress:=====>                        17%] [Cov:==>                                7%][Progress:=====>                        17%] [Cov:==>                                7%][Progress:=====>                        17%] [Cov:==>                                7%][Progress:=====>                        17%] [Cov:==>                                7%][Progress:=====>                        17%] [Cov:==>                                7%][Progress:=====>                        17%] [Cov:==>                                7%][Progress:=====>                        17%] [Cov:==>                                7%][Progress:=====>                        17%] [Cov:==>                                7%][Progress:=====>                        17%] [Cov:==>                                7%][Progress:=====>                        17%] [Cov:==>                                7%][Progress:=====>                        18%] [Cov:==>                                7%][Progress:=====>                        18%] [Cov:==>                                7%][Progress:=====>                        18%] [Cov:==>                                7%][Progress:=====>                        18%] [Cov:==>                                7%][Progress:=====>                        18%] [Cov:==>                                7%][Progress:=====>                        18%] [Cov:==>                                7%][Progress:=====>                        18%] [Cov:==>                                7%][Progress:=====>                        18%] [Cov:==>                                7%][Progress:=====>                        18%] [Cov:==>                                7%][Progress:=====>                        18%] [Cov:==>                                7%][Progress:=====>                        18%] [Cov:==>                                7%][Progress:=====>                        18%] [Cov:==>                                7%][Progress:=====>                        18%] [Cov:==>                                7%][Progress:=====>                        19%] [Cov:==>                                7%][Progress:=====>                        19%] [Cov:==>                                7%][Progress:=====>                        19%] [Cov:==>                                7%][Progress:=====>                        19%] [Cov:==>                                7%][Progress:=====>                        19%] [Cov:==>                                7%][Progress:=====>                        19%] [Cov:==>                                7%][Progress:=====>                        19%] [Cov:==>                                7%][Progress:=====>                        19%] [Cov:==>                                7%][Progress:=====>                        19%] [Cov:==>                                7%][Progress:=====>                        19%] [Cov:==>                                7%][Progress:=====>                        19%] [Cov:==>                                7%][Progress:=====>                        19%] [Cov:==>                                7%][Progress:=====>                        19%] [Cov:==>                                7%][Progress:=====>                        19%] [Cov:==>                                7%][Progress:=====>                        19%] [Cov:==>                                7%][Progress:=====>                        19%] [Cov:==>                                7%][Progress:=====>                        19%] [Cov:==>                                7%][Progress:=====>                        19%] [Cov:==>                                7%][Progress:=====>                        19%] [Cov:==>                                7%][Progress:======>                       20%] [Cov:==>                                7%][Progress:======>                       20%] [Cov:==>                                7%][Progress:======>                       20%] [Cov:==>                                7%][Progress:======>                       20%] [Cov:==>                                7%][Progress:======>                       20%] [Cov:==>                                7%][Progress:======>                       20%] [Cov:==>                                7%][Progress:======>                       20%] [Cov:==>                                7%][Progress:======>                       20%] [Cov:==>                                7%][Progress:======>                       20%] [Cov:==>                                7%][Progress:======>                       20%] [Cov:==>                                7%][Progress:======>                       20%] [Cov:==>                                7%][Progress:======>                       20%] [Cov:==>                                7%][Progress:======>                       20%] [Cov:==>                                7%][Progress:======>                       20%] [Cov:==>                                7%][Progress:======>                       21%] [Cov:==>                                7%][Progress:======>                       21%] [Cov:==>                                7%][Progress:======>                       21%] [Cov:==>                                7%][Progress:======>                       21%] [Cov:==>                                7%][Progress:======>                       21%] [Cov:==>                                7%][Progress:======>                       21%] [Cov:==>                                7%][Progress:======>                       21%] [Cov:==>                                7%][Progress:======>                       21%] [Cov:==>                                7%][Progress:======>                       21%] [Cov:==>                                7%][Progress:======>                       21%] [Cov:==>                                7%][Progress:======>                       21%] [Cov:==>                                7%][Progress:======>                       21%] [Cov:==>                                7%][Progress:======>                       21%] [Cov:==>                                7%][Progress:======>                       21%] [Cov:==>                                7%][Progress:======>                       22%] [Cov:==>                                7%][Progress:======>                       22%] [Cov:==>                                7%][Progress:======>                       22%] [Cov:==>                                7%][Progress:======>                       22%] [Cov:==>                                7%][Progress:======>                       22%] [Cov:==>                                7%][Progress:======>                       22%] [Cov:==>                                7%][Progress:======>                       22%] [Cov:==>                                7%][Progress:======>                       22%] [Cov:==>                                7%][Progress:======>                       22%] [Cov:==>                                7%][Progress:======>                       22%] [Cov:==>                                7%][Progress:======>                       22%] [Cov:==>                                7%][Progress:======>                       22%] [Cov:==>                                7%][Progress:======>                       22%] [Cov:==>                                7%][Progress:======>                       22%] [Cov:==>                                7%][Progress:======>                       22%] [Cov:==>                                7%][Progress:======>                       23%] [Cov:==>                                7%][Progress:======>                       23%] [Cov:==>                                7%][Progress:======>                       23%] [Cov:==>                                7%][Progress:======>                       23%] [Cov:==>                                7%][Progress:======>                       23%] [Cov:==>                                7%][Progress:======>                       23%] [Cov:==>                                7%][Progress:======>                       23%] [Cov:==>                                7%][Progress:======>                       23%] [Cov:==>                                7%][Progress:======>                       23%] [Cov:==>                                7%][Progress:======>                       23%] [Cov:==>                                7%][Progress:======>                       23%] [Cov:==>                                7%][Progress:======>                       23%] [Cov:==>                                7%][Progress:======>                       23%] [Cov:==>                                7%][Progress:======>                       23%] [Cov:==>                                7%][Progress:======>                       23%] [Cov:==>                                7%][Progress:======>                       23%] [Cov:==>                                7%][Progress:======>                       23%] [Cov:==>                                7%][Progress:======>                       23%] [Cov:==>                                7%][Progress:=======>                      24%] [Cov:==>                                7%][Progress:=======>                      24%] [Cov:==>                                7%][Progress:=======>                      24%] [Cov:==>                                7%][Progress:=======>                      24%] [Cov:==>                                7%][Progress:=======>                      24%] [Cov:==>                                7%][Progress:=======>                      24%] [Cov:==>                                7%][Progress:=======>                      24%] [Cov:==>                                7%][Progress:=======>                      24%] [Cov:==>                                7%][Progress:=======>                      24%] [Cov:==>                                7%][Progress:=======>                      24%] [Cov:==>                                7%][Progress:=======>                      24%] [Cov:==>                                7%][Progress:=======>                      24%] [Cov:==>                                7%][Progress:=======>                      24%] [Cov:==>                                7%][Progress:=======>                      25%] [Cov:==>                                7%][Progress:=======>                      25%] [Cov:==>                                7%][Progress:=======>                      25%] [Cov:==>                                7%][Progress:=======>                      25%] [Cov:==>                                7%][Progress:=======>                      25%] [Cov:==>                                7%][Progress:=======>                      25%] [Cov:==>                                7%][Progress:=======>                      25%] [Cov:==>                                7%][Progress:=======>                      25%] [Cov:==>                                7%][Progress:=======>                      25%] [Cov:==>                                7%][Progress:=======>                      25%] [Cov:==>                                7%][Progress:=======>                      25%] [Cov:==>                                7%][Progress:=======>                      25%] [Cov:==>                                7%][Progress:=======>                      25%] [Cov:==>                                7%][Progress:=======>                      25%] [Cov:==>                                7%][Progress:=======>                      25%] [Cov:==>                                7%][Progress:=======>                      25%] [Cov:==>                                7%][Progress:=======>                      25%] [Cov:==>                                7%][Progress:=======>                      26%] [Cov:==>                                7%][Progress:=======>                      26%] [Cov:==>                                7%][Progress:=======>                      26%] [Cov:============>                      36%][Progress:=======>                      26%] [Cov:============>                      36%][Progress:=======>                      26%] [Cov:============>                      36%][Progress:=======>                      26%] [Cov:============>                      36%][Progress:=======>                      26%] [Cov:============>                      36%][Progress:=======>                      26%] [Cov:============>                      36%][Progress:=======>                      26%] [Cov:============>                      36%][Progress:=======>                      26%] [Cov:============>                      36%][Progress:=======>                      26%] [Cov:============>                      36%][Progress:=======>                      26%] [Cov:============>                      36%][Progress:=======>                      26%] [Cov:============>                      36%][Progress:=======>                      26%] [Cov:===============>                   44%][Progress:=======>                      26%] [Cov:===============>                   44%][Progress:========>                     27%] [Cov:===============>                   44%][Progress:========>                     27%] [Cov:================>                  47%][Progress:========>                     27%] [Cov:================>                  47%][Progress:========>                     27%] [Cov:================>                  47%][Progress:========>                     27%] [Cov:================>                  47%][Progress:========>                     27%] [Cov:================>                  47%][Progress:========>                     27%] [Cov:================>                  47%][Progress:========>                     27%] [Cov:================>                  47%][Progress:========>                     27%] [Cov:======================>            64%][Progress:========>                     28%] [Cov:======================>            64%][Progress:========>                     28%] [Cov:=======================>           66%][Progress:========>                     28%] [Cov:=======================>           66%][Progress:========>                     28%] [Cov:=======================>           66%][Progress:========>                     28%] [Cov:=======================>           66%][Progress:========>                     28%] [Cov:=======================>           66%][Progress:========>                     29%] [Cov:=======================>           66%][Progress:========>                     29%] [Cov:=======================>           66%][Progress:========>                     29%] [Cov:===========================>       79%][Progress:========>                     29%] [Cov:============================>      80%][Progress:========>                     29%] [Cov:============================>      80%][Progress:=========>                    30%] [Cov:============================>      80%][Progress:=========>                    30%] [Cov:============================>      80%][Progress:=========>                    30%] [Cov:============================>      80%][Progress:=========>                    30%] [Cov:============================>      80%][Progress:=========>                    30%] [Cov:============================>      80%][Progress:=========>                    31%] [Cov:============================>      80%][Progress:=========>                    31%] [Cov:============================>      80%][Progress:=========>                    31%] [Cov:============================>      80%][Progress:=========>                    31%] [Cov:============================>      80%][Progress:=========>                    32%] [Cov:============================>      80%][Progress:=========>                    32%] [Cov:============================>      80%][Progress:=========>                    32%] [Cov:============================>      80%][Progress:=========>                    32%] [Cov:============================>      80%][Progress:=========>                    33%] [Cov:============================>      80%][Progress:=========>                    33%] [Cov:============================>      80%][Progress:=========>                    33%] [Cov:============================>      80%][Progress:=========>                    33%] [Cov:=============================>     83%][Progress:=========>                    33%] [Cov:=============================>     83%][Progress:==========>                   34%] [Cov:=============================>     83%][Progress:==========>                   34%] [Cov:=============================>     83%][Progress:==========>                   34%] [Cov:=============================>     83%][Progress:==========>                   34%] [Cov:=============================>     83%][Progress:==========>                   35%] [Cov:=============================>     83%][Progress:==========>                   35%] [Cov:=============================>     83%][Progress:==========>                   35%] [Cov:=============================>     83%][Progress:==========>                   35%] [Cov:=============================>     83%][Progress:==========>                   35%] [Cov:=============================>     83%][MASTER] 03:50:47.921 [logback-1] WARN  TestCluster - Failed to check cache for javax.swing.JComboBox<E> : Type points to itself
[Progress:==========>                   36%] [Cov:=============================>     83%][Progress:==========>                   36%] [Cov:=============================>     83%][Progress:==========>                   36%] [Cov:=============================>     83%][Progress:==========>                   36%] [Cov:=============================>     83%][Progress:===========>                  37%] [Cov:=============================>     83%][Progress:===========>                  37%] [Cov:=============================>     83%][Progress:===========>                  37%] [Cov:=============================>     83%][Progress:===========>                  37%] [Cov:=============================>     83%][Progress:===========>                  37%] [Cov:=============================>     83%][Progress:===========>                  38%] [Cov:=============================>     83%][Progress:===========>                  38%] [Cov:=============================>     83%][Progress:===========>                  38%] [Cov:=============================>     83%][Progress:===========>                  38%] [Cov:=============================>     83%][Progress:===========>                  38%] [Cov:=============================>     83%][Progress:===========>                  38%] [Cov:=============================>     83%][Progress:===========>                  38%] [Cov:=============================>     83%][Progress:===========>                  39%] [Cov:=============================>     83%][Progress:===========>                  39%] [Cov:=============================>     83%][Progress:===========>                  39%] [Cov:=============================>     83%][Progress:===========>                  39%] [Cov:=============================>     83%][Progress:============>                 40%] [Cov:=============================>     83%][Progress:============>                 40%] [Cov:=============================>     83%][Progress:============>                 40%] [Cov:=============================>     83%][Progress:============>                 40%] [Cov:=============================>     83%][Progress:============>                 40%] [Cov:=============================>     83%][Progress:============>                 40%] [Cov:=============================>     83%][Progress:============>                 41%] [Cov:=============================>     83%][Progress:============>                 41%] [Cov:=============================>     83%][Progress:============>                 41%] [Cov:=============================>     83%][Progress:============>                 41%] [Cov:=============================>     83%][Progress:============>                 41%] [Cov:=============================>     83%][Progress:============>                 42%] [Cov:=============================>     83%][Progress:============>                 42%] [Cov:=============================>     83%][Progress:============>                 42%] [Cov:=============================>     83%][Progress:============>                 42%] [Cov:=============================>     83%][Progress:============>                 42%] [Cov:=============================>     83%][Progress:============>                 42%] [Cov:=============================>     83%][Progress:============>                 43%] [Cov:=============================>     83%][Progress:============>                 43%] [Cov:=============================>     83%][Progress:============>                 43%] [Cov:=============================>     83%][Progress:============>                 43%] [Cov:=============================>     83%][Progress:============>                 43%] [Cov:=============================>     83%][Progress:============>                 43%] [Cov:=============================>     83%][Progress:=============>                44%] [Cov:=============================>     83%][Progress:=============>                44%] [Cov:=============================>     83%][Progress:=============>                44%] [Cov:=============================>     83%][Progress:=============>                44%] [Cov:=============================>     83%][Progress:=============>                44%] [Cov:=============================>     83%][Progress:=============>                44%] [Cov:=============================>     83%][Progress:=============>                45%] [Cov:=============================>     83%][Progress:=============>                45%] [Cov:=============================>     83%][Progress:=============>                45%] [Cov:=============================>     83%][Progress:=============>                45%] [Cov:=============================>     83%][Progress:=============>                45%] [Cov:=============================>     83%][Progress:=============>                45%] [Cov:=============================>     83%][Progress:=============>                46%] [Cov:=============================>     83%][Progress:=============>                46%] [Cov:=============================>     83%][Progress:=============>                46%] [Cov:=============================>     83%][Progress:=============>                46%] [Cov:=============================>     83%][Progress:=============>                46%] [Cov:=============================>     83%][Progress:=============>                46%] [Cov:=============================>     83%][Progress:==============>               47%] [Cov:=============================>     83%][Progress:==============>               47%] [Cov:=============================>     83%][Progress:==============>               47%] [Cov:=============================>     83%][Progress:==============>               47%] [Cov:=============================>     83%][Progress:==============>               47%] [Cov:=============================>     83%][Progress:==============>               47%] [Cov:=============================>     83%][Progress:==============>               48%] [Cov:=============================>     83%][Progress:==============>               48%] [Cov:=============================>     83%][Progress:==============>               48%] [Cov:=============================>     83%][Progress:==============>               48%] [Cov:=============================>     83%][Progress:==============>               48%] [Cov:=============================>     83%][Progress:==============>               48%] [Cov:=============================>     83%][Progress:==============>               49%] [Cov:=============================>     83%][Progress:==============>               49%] [Cov:=============================>     83%][Progress:==============>               49%] [Cov:=============================>     83%][Progress:==============>               49%] [Cov:=============================>     83%][Progress:==============>               49%] [Cov:=============================>     83%][Progress:===============>              50%] [Cov:=============================>     83%][Progress:===============>              50%] [Cov:=============================>     83%][Progress:===============>              50%] [Cov:=============================>     83%][Progress:===============>              50%] [Cov:=============================>     83%][Progress:===============>              50%] [Cov:=============================>     83%][Progress:===============>              50%] [Cov:=============================>     83%][Progress:===============>              51%] [Cov:=============================>     83%][Progress:===============>              51%] [Cov:=============================>     83%][Progress:===============>              51%] [Cov:=============================>     83%][Progress:===============>              51%] [Cov:=============================>     83%][Progress:===============>              51%] [Cov:=============================>     83%][Progress:===============>              51%] [Cov:=============================>     83%][Progress:===============>              52%] [Cov:=============================>     83%][Progress:===============>              52%] [Cov:=============================>     83%][Progress:===============>              52%] [Cov:=============================>     83%][Progress:===============>              52%] [Cov:=============================>     83%][Progress:===============>              52%] [Cov:=============================>     83%][Progress:===============>              52%] [Cov:=============================>     83%][Progress:===============>              53%] [Cov:=============================>     83%][Progress:===============>              53%] [Cov:=============================>     83%][Progress:===============>              53%] [Cov:=============================>     83%][Progress:===============>              53%] [Cov:=============================>     83%][Progress:===============>              53%] [Cov:=============================>     83%][Progress:================>             54%] [Cov:=============================>     83%][Progress:================>             54%] [Cov:=============================>     83%][Progress:================>             54%] [Cov:=============================>     83%][Progress:================>             54%] [Cov:=============================>     83%][Progress:================>             54%] [Cov:=============================>     83%][Progress:================>             55%] [Cov:=============================>     83%][Progress:================>             55%] [Cov:=============================>     83%][Progress:================>             55%] [Cov:=============================>     83%][Progress:================>             55%] [Cov:=============================>     83%][Progress:================>             55%] [Cov:=============================>     83%][Progress:================>             55%] [Cov:=============================>     83%][Progress:================>             55%] [Cov:=============================>     83%][Progress:================>             56%] [Cov:=============================>     83%][Progress:================>             56%] [Cov:=============================>     83%][Progress:================>             56%] [Cov:=============================>     83%][Progress:================>             56%] [Cov:=============================>     83%][Progress:================>             56%] [Cov:=============================>     83%][Progress:=================>            57%] [Cov:=============================>     83%][Progress:=================>            57%] [Cov:=============================>     83%][Progress:=================>            57%] [Cov:=============================>     83%][Progress:=================>            57%] [Cov:=============================>     83%][Progress:=================>            58%] [Cov:=============================>     83%][Progress:=================>            58%] [Cov:=============================>     83%][Progress:=================>            58%] [Cov:=============================>     83%][Progress:=================>            58%] [Cov:=============================>     83%][Progress:=================>            59%] [Cov:=============================>     83%][Progress:=================>            59%] [Cov:=============================>     83%][Progress:=================>            59%] [Cov:=============================>     83%][Progress:=================>            59%] [Cov:=============================>     83%][Progress:=================>            59%] [Cov:=============================>     83%][Progress:==================>           60%] [Cov:=============================>     83%][Progress:==================>           60%] [Cov:=============================>     83%][Progress:==================>           60%] [Cov:=============================>     83%][Progress:==================>           61%] [Cov:=============================>     83%][Progress:==================>           61%] [Cov:=============================>     83%][Progress:==================>           61%] [Cov:=============================>     83%][Progress:==================>           61%] [Cov:=============================>     83%][Progress:==================>           62%] [Cov:=============================>     83%][Progress:==================>           62%] [Cov:=============================>     83%][Progress:==================>           62%] [Cov:=============================>     83%][Progress:==================>           62%] [Cov:=============================>     83%][Progress:==================>           63%] [Cov:=============================>     83%][Progress:==================>           63%] [Cov:=============================>     83%][Progress:==================>           63%] [Cov:=============================>     83%][Progress:===================>          64%] [Cov:=============================>     83%][Progress:===================>          64%] [Cov:=============================>     83%][Progress:===================>          64%] [Cov:=============================>     83%][Progress:===================>          64%] [Cov:=============================>     83%][Progress:===================>          64%] [Cov:=============================>     83%][Progress:===================>          65%] [Cov:=============================>     83%][Progress:===================>          65%] [Cov:=============================>     83%][Progress:===================>          65%] [Cov:=============================>     83%][Progress:===================>          65%] [Cov:=============================>     83%][Progress:===================>          65%] [Cov:=============================>     83%][Progress:===================>          66%] [Cov:=============================>     83%][Progress:===================>          66%] [Cov:=============================>     83%][Progress:===================>          66%] [Cov:=============================>     83%][Progress:===================>          66%] [Cov:=============================>     83%][Progress:====================>         67%] [Cov:=============================>     83%][Progress:====================>         67%] [Cov:=============================>     83%][Progress:====================>         67%] [Cov:=============================>     83%][Progress:====================>         67%] [Cov:=============================>     83%][Progress:====================>         67%] [Cov:=============================>     83%][Progress:====================>         68%] [Cov:=============================>     83%][Progress:====================>         68%] [Cov:=============================>     83%][Progress:====================>         68%] [Cov:=============================>     83%][Progress:====================>         68%] [Cov:=============================>     83%][Progress:====================>         69%] [Cov:=============================>     83%][Progress:====================>         69%] [Cov:=============================>     83%][Progress:====================>         69%] [Cov:=============================>     83%][Progress:====================>         69%] [Cov:=============================>     83%][Progress:=====================>        70%] [Cov:=============================>     83%][Progress:=====================>        70%] [Cov:=============================>     83%][Progress:=====================>        70%] [Cov:=============================>     83%][Progress:=====================>        70%] [Cov:=============================>     83%][Progress:=====================>        71%] [Cov:=============================>     83%][Progress:=====================>        71%] [Cov:=============================>     83%][Progress:=====================>        71%] [Cov:=============================>     83%][Progress:=====================>        71%] [Cov:=============================>     83%][Progress:=====================>        72%] [Cov:=============================>     83%][Progress:=====================>        72%] [Cov:=============================>     83%][Progress:=====================>        72%] [Cov:=============================>     83%][Progress:=====================>        72%] [Cov:=============================>     83%][Progress:=====================>        73%] [Cov:=============================>     83%][Progress:=====================>        73%] [Cov:=============================>     83%][Progress:=====================>        73%] [Cov:=============================>     83%][Progress:=====================>        73%] [Cov:=============================>     83%][Progress:=====================>        73%] [Cov:=============================>     83%][Progress:======================>       74%] [Cov:=============================>     83%][Progress:======================>       74%] [Cov:=============================>     83%][Progress:======================>       74%] [Cov:=============================>     83%][Progress:======================>       75%] [Cov:=============================>     83%][Progress:======================>       75%] [Cov:=============================>     83%][Progress:======================>       75%] [Cov:=============================>     83%][Progress:======================>       75%] [Cov:=============================>     83%][Progress:======================>       76%] [Cov:=============================>     83%][Progress:======================>       76%] [Cov:=============================>     83%][Progress:======================>       76%] [Cov:=============================>     83%][Progress:=======================>      77%] [Cov:=============================>     83%][Progress:=======================>      77%] [Cov:=============================>     83%][Progress:=======================>      77%] [Cov:=============================>     83%][Progress:=======================>      77%] [Cov:=============================>     83%][Progress:=======================>      78%] [Cov:=============================>     83%][Progress:=======================>      78%] [Cov:=============================>     83%][Progress:=======================>      78%] [Cov:=============================>     83%][Progress:=======================>      78%] [Cov:=============================>     83%][Progress:=======================>      79%] [Cov:=============================>     83%][Progress:=======================>      79%] [Cov:=============================>     83%][Progress:=======================>      79%] [Cov:=============================>     83%][Progress:========================>     80%] [Cov:=============================>     83%][Progress:========================>     80%] [Cov:=============================>     83%][Progress:========================>     80%] [Cov:=============================>     83%][Progress:========================>     80%] [Cov:=============================>     83%][Progress:========================>     81%] [Cov:=============================>     83%][Progress:========================>     81%] [Cov:=============================>     83%][Progress:========================>     81%] [Cov:=============================>     83%][Progress:========================>     81%] [Cov:=============================>     83%][Progress:========================>     82%] [Cov:=============================>     83%][Progress:========================>     82%] [Cov:=============================>     83%][Progress:========================>     82%] [Cov:=============================>     83%][Progress:========================>     83%] [Cov:=============================>     83%][Progress:========================>     83%] [Cov:=============================>     83%][Progress:========================>     83%] [Cov:=============================>     83%][Progress:=========================>    84%] [Cov:=============================>     83%][Progress:=========================>    84%] [Cov:=============================>     83%][Progress:=========================>    84%] [Cov:=============================>     83%][Progress:=========================>    84%] [Cov:=============================>     83%][Progress:=========================>    85%] [Cov:=============================>     83%][Progress:=========================>    85%] [Cov:=============================>     83%][Progress:=========================>    85%] [Cov:=============================>     83%][Progress:=========================>    85%] [Cov:=============================>     83%][Progress:=========================>    85%] [Cov:=============================>     83%][Progress:=========================>    86%] [Cov:=============================>     83%][Progress:=========================>    86%] [Cov:=============================>     83%][Progress:=========================>    86%] [Cov:=============================>     83%][Progress:=========================>    86%] [Cov:=============================>     83%][Progress:==========================>   87%] [Cov:=============================>     83%][Progress:==========================>   87%] [Cov:=============================>     83%][Progress:==========================>   87%] [Cov:=============================>     83%][Progress:==========================>   87%] [Cov:=============================>     83%][Progress:==========================>   88%] [Cov:=============================>     83%][Progress:==========================>   88%] [Cov:=============================>     83%][Progress:==========================>   88%] [Cov:=============================>     83%][Progress:==========================>   88%] [Cov:=============================>     83%][Progress:==========================>   88%] [Cov:=============================>     83%][Progress:==========================>   88%] [Cov:=============================>     83%][Progress:==========================>   89%] [Cov:=============================>     83%][Progress:==========================>   89%] [Cov:=============================>     83%][Progress:==========================>   89%] [Cov:=============================>     83%][Progress:==========================>   89%] [Cov:=============================>     83%][Progress:==========================>   89%] [Cov:=============================>     83%][Progress:===========================>  90%] [Cov:=============================>     83%][Progress:===========================>  90%] [Cov:=============================>     83%][Progress:===========================>  90%] [Cov:=============================>     83%][Progress:===========================>  91%] [Cov:=============================>     83%][Progress:===========================>  91%] [Cov:=============================>     83%][Progress:===========================>  91%] [Cov:=============================>     83%][Progress:===========================>  92%] [Cov:=============================>     83%][Progress:===========================>  92%] [Cov:=============================>     83%][Progress:===========================>  92%] [Cov:=============================>     83%][Progress:===========================>  92%] [Cov:=============================>     83%][Progress:===========================>  93%] [Cov:=============================>     83%][Progress:===========================>  93%] [Cov:=============================>     83%][Progress:===========================>  93%] [Cov:=============================>     83%][Progress:===========================>  93%] [Cov:=============================>     83%][Progress:============================> 94%] [Cov:=============================>     83%][Progress:============================> 94%] [Cov:=============================>     83%][Progress:============================> 94%] [Cov:=============================>     83%][Progress:============================> 95%] [Cov:=============================>     83%][Progress:============================> 95%] [Cov:=============================>     83%][Progress:============================> 95%] [Cov:=============================>     83%][Progress:============================> 95%] [Cov:=============================>     83%][Progress:============================> 95%] [Cov:=============================>     83%][Progress:============================> 96%] [Cov:=============================>     83%][Progress:============================> 96%] [Cov:=============================>     83%][Progress:============================> 96%] [Cov:=============================>     83%][Progress:=============================>97%] [Cov:=============================>     83%][Progress:=============================>97%] [Cov:=============================>     83%][Progress:=============================>97%] [Cov:=============================>     83%][Progress:=============================>97%] [Cov:=============================>     83%][Progress:=============================>98%] [Cov:=============================>     83%][Progress:=============================>98%] [Cov:=============================>     83%][Progress:=============================>98%] [Cov:=============================>     83%][Progress:=============================>98%] [Cov:=============================>     83%][Progress:=============================>99%] [Cov:=============================>     83%][Progress:=============================>99%] [Cov:=============================>     83%][Progress:=============================>99%] [Cov:=============================>     83%][Progress:==============================100%] [Cov:=============================>     83%][Progress:==============================100%] [Cov:=============================>     83%][Progress:==============================100%] [Cov:=============================>     83%][Progress:==============================100%] [Cov:=============================>     83%][Progress:==============================100%] [Cov:=============================>     83%]
* Search finished after 102s and 618 generations, 135834 statements, best individual has fitness: 15.0
* Generated before the refinement 6 tests with total length 49
statement is: createTempFile(Ljava/lang/String;Ljava/lang/String;)Ljava/io/File; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.evosuite.runtime.mock.java.io.MockFile
statement code is: MockFile createTempFile = (MockFile)MockFile.createTempFile("fr.pingtimeout.jtail.gui.view.JTailPanel$1", "fr.pingtimeout.jtail.gui.view.JTailPanel$1")
statement is: fr.pingtimeout.jtail.io.index.RamFileIndex(Ljava/io/File;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class fr.pingtimeout.jtail.io.index.RamFileIndex
statement code is: RamFileIndex ramFileIndex = new RamFileIndex(arg0)
statement is: setOffsetOfLine(IJ)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: ramFileIndex.setOffsetOfLine(0, 0)
statement is: fr.pingtimeout.jtail.io.index.ImmutableFileIndex(Lfr/pingtimeout/jtail/io/index/FileIndex;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class fr.pingtimeout.jtail.io.index.ImmutableFileIndex
statement code is: ImmutableFileIndex immutableFileIndex = new ImmutableFileIndex(arg0)
statement is: fr.pingtimeout.jtail.io.LineReader(Ljava/io/File;Lfr/pingtimeout/jtail/io/index/FileIndex;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class fr.pingtimeout.jtail.io.LineReader
statement code is: LineReader lineReader = new LineReader(arg0, arg1)
statement is: fr.pingtimeout.jtail.gui.model.JTailModel(Ljava/io/File;Lfr/pingtimeout/jtail/io/LineReader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class fr.pingtimeout.jtail.gui.model.JTailModel
statement code is: JTailModel jTailModel = new JTailModel(arg0, arg1)
statement is: fr.pingtimeout.jtail.gui.view.JTailPanel(Lfr/pingtimeout/jtail/gui/model/JTailModel;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class fr.pingtimeout.jtail.gui.view.JTailPanel
statement code is: JTailPanel jTailPanel = new JTailPanel(arg0)
statement is: getVerticalScrollBar()Ljavax/swing/JScrollBar; type is: class org.evosuite.testcase.statements.MethodStatement return type class javax.swing.JScrollBar
statement code is: JScrollBar verticalScrollBar = jTailPanel.getVerticalScrollBar()
test data is: MockFile createTempFile = (MockFile)MockFile.createTempFile("fr.pingtimeout.jtail.gui.view.JTailPanel$1", "fr.pingtimeout.jtail.gui.view.JTailPanel$1");
RamFileIndex ramFileIndex = new RamFileIndex(createTempFile);
ramFileIndex.setOffsetOfLine(0, 0);
ImmutableFileIndex immutableFileIndex = new ImmutableFileIndex(ramFileIndex);
LineReader lineReader = new LineReader(createTempFile, immutableFileIndex);
JTailModel jTailModel = new JTailModel(createTempFile, lineReader);
JTailPanel jTailPanel = new JTailPanel(jTailModel);
jTailPanel.getVerticalScrollBar();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        MockFile createTempFile = ((MockFile) (MockFile.createTempFile("fr.pingtimeout.jtail.gui.view.JTailPanel$1", "fr.pingtimeout.jtail.gui.view.JTailPanel$1")));
        RamFileIndex ramFileIndex = new RamFileIndex(createTempFile);
        ramFileIndex.setOffsetOfLine(0, 0);
        ImmutableFileIndex immutableFileIndex = new ImmutableFileIndex(ramFileIndex);
        LineReader lineReader = new LineReader(createTempFile, immutableFileIndex);
        JTailModel jTailModel = new JTailModel(createTempFile, lineReader);
        JTailPanel jTailPanel = new JTailPanel(jTailModel);
        // Set a more descriptive value for the file name
        String fileName = "logfile.txt";
        // Set a more descriptive value for the file size
        long fileSize = 1024;
        // Create a temporary file with a more descriptive name and size
        createTempFile = ((MockFile) (MockFile.createTempFile(fileName, fileSize)));
        ramFileIndex = new RamFileIndex(createTempFile);
        ramFileIndex.setOffsetOfLine(0, 0);
        immutableFileIndex = new ImmutableFileIndex(ramFileIndex);
        lineReader = new LineReader(createTempFile, immutableFileIndex);
        jTailModel = new JTailModel(createTempFile, lineReader);
        jTailPanel = new JTailPanel(jTailModel);
        jTailPanel.getVerticalScrollBar();
    }
}
statement is: MockFile createTempFile = ((MockFile) (MockFile.createTempFile("fr.pingtimeout.jtail.gui.view.JTailPanel$1", "fr.pingtimeout.jtail.gui.view.JTailPanel$1"))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: ((MockFile) (MockFile.createTempFile("fr.pingtimeout.jtail.gui.view.JTailPanel$1", "fr.pingtimeout.jtail.gui.view.JTailPanel$1"))) target is: MockFile method is: createTempFile(java.lang.String,java.lang.String)
Matched Method is: createTempFile(Ljava/lang/String;Ljava/lang/String;)Ljava/io/File;
statement is: RamFileIndex ramFileIndex = new RamFileIndex(createTempFile), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: ramFileIndex.setOffsetOfLine(0, 0), class spoon.support.reflect.code.CtInvocationImpl
invocation is: ramFileIndex.setOffsetOfLine(0, 0) target is: ramFileIndex method is: setOffsetOfLine(int,int)
source statement: fr.pingtimeout.jtail.io.index.RamFileIndex(Ljava/io/File;)V callee: VariableReference: Statement 1, type fr.pingtimeout.jtail.io.index.RamFileIndexindex is: 3
Matched Method is: setOffsetOfLine(IJ)V
statement is: ImmutableFileIndex immutableFileIndex = new ImmutableFileIndex(ramFileIndex), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: LineReader lineReader = new LineReader(createTempFile, immutableFileIndex), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JTailModel jTailModel = new JTailModel(createTempFile, lineReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JTailPanel jTailPanel = new JTailPanel(jTailModel), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: // Set a more descriptive value for the file name
String fileName = "logfile.txt", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: // Set a more descriptive value for the file size
long fileSize = 1024, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: // Create a temporary file with a more descriptive name and size
createTempFile = ((MockFile) (MockFile.createTempFile(fileName, fileSize))), class spoon.support.reflect.code.CtAssignmentImpl
statement is: ramFileIndex = new RamFileIndex(createTempFile), class spoon.support.reflect.code.CtAssignmentImpl
statement is: ramFileIndex.setOffsetOfLine(0, 0), class spoon.support.reflect.code.CtInvocationImpl
invocation is: ramFileIndex.setOffsetOfLine(0, 0) target is: ramFileIndex method is: setOffsetOfLine(int,int)
source statement: fr.pingtimeout.jtail.io.index.RamFileIndex(Ljava/io/File;)V callee: VariableReference: Statement 1, type fr.pingtimeout.jtail.io.index.RamFileIndexindex is: 3
Matched Method is: setOffsetOfLine(IJ)V
statement is: immutableFileIndex = new ImmutableFileIndex(ramFileIndex), class spoon.support.reflect.code.CtAssignmentImpl
statement is: lineReader = new LineReader(createTempFile, immutableFileIndex), class spoon.support.reflect.code.CtAssignmentImpl
statement is: jTailModel = new JTailModel(createTempFile, lineReader), class spoon.support.reflect.code.CtAssignmentImpl
statement is: jTailPanel = new JTailPanel(jTailModel), class spoon.support.reflect.code.CtAssignmentImpl
statement is: jTailPanel.getVerticalScrollBar(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: jTailPanel.getVerticalScrollBar() target is: jTailPanel method is: getVerticalScrollBar()
source statement: fr.pingtimeout.jtail.gui.view.JTailPanel(Lfr/pingtimeout/jtail/gui/model/JTailModel;)V callee: VariableReference: Statement 6, type fr.pingtimeout.jtail.gui.view.JTailPanelindex is: 10
Matched Method is: getVerticalScrollBar()Ljavax/swing/JScrollBar;
* this is vulnerable: String string = "logfile.txt"
* this is vulnerable: int _int = 1024
TestCase is: String string = "fr.pingtimeout.jtail.gui.view.JTailPanel$1";
String string = "fr.pingtimeout.jtail.gui.view.JTailPanel$1";
MockFile createTempFile = (MockFile)MockFile.createTempFile(string, string);
RamFileIndex ramFileIndex = new RamFileIndex(createTempFile);
int _int = 0;
int _int = 0;
((RamFileIndex) string).setOffsetOfLine(_int, _int);
ImmutableFileIndex immutableFileIndex = new ImmutableFileIndex(ramFileIndex);
LineReader lineReader = new LineReader(createTempFile, immutableFileIndex);
JTailModel jTailModel = new JTailModel(createTempFile, lineReader);
JTailPanel jTailPanel = new JTailPanel(jTailModel);
String string = "logfile.txt";
int _int = 1024;
int _int = 0;
int _int = 0;
((RamFileIndex) string).setOffsetOfLine(_int, _int);
((JTailPanel) _void).getVerticalScrollBar();

statement is: createTempFile(Ljava/lang/String;Ljava/lang/String;)Ljava/io/File; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.evosuite.runtime.mock.java.io.MockFile
statement code is: MockFile createTempFile = (MockFile)MockFile.createTempFile("fr.pingtimeout.jtail.gui.view.JTailPanel$1", "fr.pingtimeout.jtail.gui.view.JTailPanel$1")
statement is: fr.pingtimeout.jtail.io.index.RamFileIndex(Ljava/io/File;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class fr.pingtimeout.jtail.io.index.RamFileIndex
statement code is: RamFileIndex ramFileIndex = new RamFileIndex(arg0)
statement is: setOffsetOfLine(IJ)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: ramFileIndex.setOffsetOfLine(0, 0)
statement is: fr.pingtimeout.jtail.io.index.ImmutableFileIndex(Lfr/pingtimeout/jtail/io/index/FileIndex;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class fr.pingtimeout.jtail.io.index.ImmutableFileIndex
statement code is: ImmutableFileIndex immutableFileIndex = new ImmutableFileIndex(arg0)
statement is: fr.pingtimeout.jtail.io.LineReader(Ljava/io/File;Lfr/pingtimeout/jtail/io/index/FileIndex;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class fr.pingtimeout.jtail.io.LineReader
statement code is: LineReader lineReader = new LineReader(arg0, arg1)
statement is: fr.pingtimeout.jtail.gui.model.JTailModel(Ljava/io/File;Lfr/pingtimeout/jtail/io/LineReader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class fr.pingtimeout.jtail.gui.model.JTailModel
statement code is: JTailModel jTailModel = new JTailModel(arg0, arg1)
statement is: fr.pingtimeout.jtail.gui.view.JTailPanel(Lfr/pingtimeout/jtail/gui/model/JTailModel;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class fr.pingtimeout.jtail.gui.view.JTailPanel
statement code is: JTailPanel jTailPanel = new JTailPanel(arg0)
statement is: getCharacterHeight()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int characterHeight = jTailPanel.getCharacterHeight()
test data is: MockFile createTempFile = (MockFile)MockFile.createTempFile("fr.pingtimeout.jtail.gui.view.JTailPanel$1", "fr.pingtimeout.jtail.gui.view.JTailPanel$1");
RamFileIndex ramFileIndex = new RamFileIndex(createTempFile);
ramFileIndex.setOffsetOfLine(0, 0);
ImmutableFileIndex immutableFileIndex = new ImmutableFileIndex(ramFileIndex);
LineReader lineReader = new LineReader(createTempFile, immutableFileIndex);
JTailModel jTailModel = new JTailModel(createTempFile, lineReader);
JTailPanel jTailPanel = new JTailPanel(jTailModel);
jTailPanel.getCharacterHeight();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        MockFile createTempFile = ((MockFile) (MockFile.createTempFile("logFile.txt", "fr.pingtimeout.jtail.gui.view.JTailPanel$1")));
        RamFileIndex ramFileIndex = new RamFileIndex(createTempFile);
        ramFileIndex.setOffsetOfLine(0, 1024);// set the offset of the first line to 1024 bytes

        ImmutableFileIndex immutableFileIndex = new ImmutableFileIndex(ramFileIndex);
        LineReader lineReader = new LineReader(createTempFile, immutableFileIndex);
        JTailModel jTailModel = new JTailModel(createTempFile, lineReader);
        JTailPanel jTailPanel = new JTailPanel(jTailModel);
        jTailPanel.getCharacterHeight();
    }
}
statement is: MockFile createTempFile = ((MockFile) (MockFile.createTempFile("logFile.txt", "fr.pingtimeout.jtail.gui.view.JTailPanel$1"))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: ((MockFile) (MockFile.createTempFile("logFile.txt", "fr.pingtimeout.jtail.gui.view.JTailPanel$1"))) target is: MockFile method is: createTempFile(java.lang.String,java.lang.String)
Matched Method is: createTempFile(Ljava/lang/String;Ljava/lang/String;)Ljava/io/File;
statement is: RamFileIndex ramFileIndex = new RamFileIndex(createTempFile), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: ramFileIndex.setOffsetOfLine(0, 1024)// set the offset of the first line to 1024 bytes
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: ramFileIndex.setOffsetOfLine(0, 1024)// set the offset of the first line to 1024 bytes
 target is: ramFileIndex method is: setOffsetOfLine(int,int)
source statement: fr.pingtimeout.jtail.io.index.RamFileIndex(Ljava/io/File;)V callee: VariableReference: Statement 1, type fr.pingtimeout.jtail.io.index.RamFileIndexindex is: 3
Matched Method is: setOffsetOfLine(IJ)V
statement is: ImmutableFileIndex immutableFileIndex = new ImmutableFileIndex(ramFileIndex), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: LineReader lineReader = new LineReader(createTempFile, immutableFileIndex), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JTailModel jTailModel = new JTailModel(createTempFile, lineReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JTailPanel jTailPanel = new JTailPanel(jTailModel), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: jTailPanel.getCharacterHeight(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: jTailPanel.getCharacterHeight() target is: jTailPanel method is: getCharacterHeight()
source statement: fr.pingtimeout.jtail.gui.view.JTailPanel(Lfr/pingtimeout/jtail/gui/model/JTailModel;)V callee: VariableReference: Statement 6, type fr.pingtimeout.jtail.gui.view.JTailPanelindex is: 10
Matched Method is: getCharacterHeight()I
TestCase is: String string = "logFile.txt";
String string = "fr.pingtimeout.jtail.gui.view.JTailPanel$1";
MockFile createTempFile = (MockFile)MockFile.createTempFile(string, string);
RamFileIndex ramFileIndex = new RamFileIndex(createTempFile);
int _int = 0;
int _int = 1024;
((RamFileIndex) string).setOffsetOfLine(_int, _int);
ImmutableFileIndex immutableFileIndex = new ImmutableFileIndex(ramFileIndex);
LineReader lineReader = new LineReader(createTempFile, immutableFileIndex);
JTailModel jTailModel = new JTailModel(createTempFile, lineReader);
JTailPanel jTailPanel = new JTailPanel(jTailModel);
((JTailPanel) _void).getCharacterHeight();

statement is: org.evosuite.runtime.mock.java.io.MockFile(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.evosuite.runtime.mock.java.io.MockFile
statement code is: MockFile mockFile = new MockFile("")
statement is: fr.pingtimeout.jtail.io.FileIndexer(Ljava/io/File;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class fr.pingtimeout.jtail.io.FileIndexer
statement code is: FileIndexer fileIndexer = new FileIndexer(arg0)
statement is: getIndex()Lfr/pingtimeout/jtail/io/index/FileIndex; type is: class org.evosuite.testcase.statements.MethodStatement return type class fr.pingtimeout.jtail.io.index.ImmutableFileIndex
statement code is: ImmutableFileIndex index = (ImmutableFileIndex)fileIndexer.getIndex()
statement is: fr.pingtimeout.jtail.io.LineReader(Ljava/io/File;Lfr/pingtimeout/jtail/io/index/FileIndex;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class fr.pingtimeout.jtail.io.LineReader
statement code is: LineReader lineReader = new LineReader(arg0, arg1)
statement is: fr.pingtimeout.jtail.gui.model.JTailModel(Ljava/io/File;Lfr/pingtimeout/jtail/io/LineReader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class fr.pingtimeout.jtail.gui.model.JTailModel
statement code is: JTailModel jTailModel = new JTailModel(arg0, arg1)
statement is: fr.pingtimeout.jtail.gui.view.JTailPanel(Lfr/pingtimeout/jtail/gui/model/JTailModel;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class fr.pingtimeout.jtail.gui.view.JTailPanel
statement code is: JTailPanel jTailPanel = new JTailPanel(arg0)
statement is: update(Ljava/util/Observable;Ljava/lang/Object;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: jTailPanel.update((Observable) arg0, (Object) arg1)
test data is: MockFile mockFile = new MockFile("");
FileIndexer fileIndexer = new FileIndexer(mockFile);
ImmutableFileIndex index = (ImmutableFileIndex)fileIndexer.getIndex();
LineReader lineReader = new LineReader(mockFile, index);
JTailModel jTailModel = new JTailModel(mockFile, lineReader);
JTailPanel jTailPanel = new JTailPanel(jTailModel);
jTailPanel.update((Observable) fileIndexer, (Object) index);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        MockFile mockFile = new MockFile("logs/myapp.log");
        FileIndexer fileIndexer = new FileIndexer(mockFile);
        ImmutableFileIndex index = ((ImmutableFileIndex) (fileIndexer.getIndex()));
        LineReader lineReader = new LineReader(mockFile, index);
        JTailModel jTailModel = new JTailModel(mockFile, lineReader);
        JTailPanel jTailPanel = new JTailPanel(jTailModel);
        jTailPanel.update(((Observable) (fileIndexer)), ((Object) (index)));
    }
}
statement is: MockFile mockFile = new MockFile("logs/myapp.log"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: FileIndexer fileIndexer = new FileIndexer(mockFile), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: ImmutableFileIndex index = ((ImmutableFileIndex) (fileIndexer.getIndex())), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: ((ImmutableFileIndex) (fileIndexer.getIndex())) target is: fileIndexer method is: getIndex()
source statement: fr.pingtimeout.jtail.io.FileIndexer(Ljava/io/File;)V callee: VariableReference: Statement 1, type fr.pingtimeout.jtail.io.FileIndexerindex is: 2
Matched Method is: getIndex()Lfr/pingtimeout/jtail/io/index/FileIndex;
statement is: LineReader lineReader = new LineReader(mockFile, index), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JTailModel jTailModel = new JTailModel(mockFile, lineReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JTailPanel jTailPanel = new JTailPanel(jTailModel), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: jTailPanel.update(((Observable) (fileIndexer)), ((Object) (index))), class spoon.support.reflect.code.CtInvocationImpl
invocation is: jTailPanel.update(((Observable) (fileIndexer)), ((Object) (index))) target is: jTailPanel method is: update(Observable,java.lang.Object)
source statement: fr.pingtimeout.jtail.gui.view.JTailPanel(Lfr/pingtimeout/jtail/gui/model/JTailModel;)V callee: VariableReference: Statement 5, type fr.pingtimeout.jtail.gui.view.JTailPanelindex is: 6
Matched Method is: update(Ljava/util/Observable;Ljava/lang/Object;)V
TestCase is: String string = "logs/myapp.log";
MockFile mockFile = new MockFile(string);
FileIndexer fileIndexer = new FileIndexer(mockFile);
ImmutableFileIndex index = (ImmutableFileIndex)((FileIndexer) mockFile).getIndex();
LineReader lineReader = new LineReader(mockFile, index);
JTailModel jTailModel = new JTailModel(mockFile, lineReader);
JTailPanel jTailPanel = new JTailPanel(jTailModel);
((JTailPanel) jTailModel).update((Observable) fileIndexer, (Object) index);

statement is: createTempFile(Ljava/lang/String;Ljava/lang/String;)Ljava/io/File; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.evosuite.runtime.mock.java.io.MockFile
statement code is: MockFile createTempFile = (MockFile)MockFile.createTempFile("aWC&G>ysI}", "aWC&G>ysI}")
statement is: fr.pingtimeout.jtail.io.index.RamFileIndex(Ljava/io/File;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class fr.pingtimeout.jtail.io.index.RamFileIndex
statement code is: RamFileIndex ramFileIndex = new RamFileIndex(arg0)
statement is: setOffsetOfLine(IJ)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: ramFileIndex.setOffsetOfLine(0, 0)
statement is: fr.pingtimeout.jtail.io.LineReader(Ljava/io/File;Lfr/pingtimeout/jtail/io/index/FileIndex;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class fr.pingtimeout.jtail.io.LineReader
statement code is: LineReader lineReader = new LineReader(arg0, arg1)
statement is: fr.pingtimeout.jtail.gui.model.JTailModel(Ljava/io/File;Lfr/pingtimeout/jtail/io/LineReader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class fr.pingtimeout.jtail.gui.model.JTailModel
statement code is: JTailModel jTailModel = new JTailModel(arg0, arg1)
statement is: fr.pingtimeout.jtail.gui.view.JTailPanel(Lfr/pingtimeout/jtail/gui/model/JTailModel;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class fr.pingtimeout.jtail.gui.view.JTailPanel
statement code is: JTailPanel jTailPanel = new JTailPanel(arg0)
statement is: JTailModelEvent.Type jTailModelEvent_Type = JTailModelEvent.Type.RESIZED type is: class org.evosuite.testcase.statements.EnumPrimitiveStatement return type class fr.pingtimeout.jtail.gui.model.JTailModelEvent$Type
statement code is: JTailModelEvent.Type jTailModelEvent_Type = JTailModelEvent.Type.RESIZED
statement is: fr.pingtimeout.jtail.gui.model.JTailModelEvent(Lfr/pingtimeout/jtail/gui/model/JTailModelEvent$Type;IIII)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class fr.pingtimeout.jtail.gui.model.JTailModelEvent
statement code is: JTailModelEvent jTailModelEvent = new JTailModelEvent(arg0, 0, (-3690), 721, 0)
statement is: update(Ljava/util/Observable;Ljava/lang/Object;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: jTailPanel.update((Observable) arg0, (Object) arg1)
test data is: MockFile createTempFile = (MockFile)MockFile.createTempFile("aWC&G>ysI}", "aWC&G>ysI}");
RamFileIndex ramFileIndex = new RamFileIndex(createTempFile);
ramFileIndex.setOffsetOfLine(0, 0);
LineReader lineReader = new LineReader(createTempFile, ramFileIndex);
JTailModel jTailModel = new JTailModel(createTempFile, lineReader);
JTailPanel jTailPanel = new JTailPanel(jTailModel);
JTailModelEvent.Type jTailModelEvent_Type = JTailModelEvent.Type.RESIZED;
JTailModelEvent jTailModelEvent = new JTailModelEvent(jTailModelEvent_Type, 0, (-3690), 721, 0);
jTailPanel.update((Observable) jTailModel, (Object) jTailModelEvent);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        RamFileIndex ramFileIndex = new RamFileIndex(createTempFile);
        ramFileIndex.setOffsetOfLine(0, 0);
        LineReader lineReader = new LineReader(createTempFile, ramFileIndex);
        JTailModel jTailModel = new JTailModel(createTempFile, lineReader);
        JTailPanel jTailPanel = new JTailPanel(jTailModel);
        JTailModelEvent.Type jTailModelEvent_Type = Type.RESIZED;
        JTailModelEvent jTailModelEvent = new JTailModelEvent(jTailModelEvent_Type, 0, -3690, 721, 0);
        jTailPanel.update(((Observable) (jTailModel)), ((Object) (jTailModelEvent)));
    }
}
statement is: RamFileIndex ramFileIndex = new RamFileIndex(createTempFile), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: fr.pingtimeout.jtail.io.index.RamFileIndex(Ljava/io/File;)V
statement is: ramFileIndex.setOffsetOfLine(0, 0), class spoon.support.reflect.code.CtInvocationImpl
invocation is: ramFileIndex.setOffsetOfLine(0, 0) target is: ramFileIndex method is: setOffsetOfLine(int,int)
statement is: LineReader lineReader = new LineReader(createTempFile, ramFileIndex), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: fr.pingtimeout.jtail.io.LineReader(Ljava/io/File;Lfr/pingtimeout/jtail/io/index/FileIndex;)V
statement is: JTailModel jTailModel = new JTailModel(createTempFile, lineReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: fr.pingtimeout.jtail.gui.model.JTailModel(Ljava/io/File;Lfr/pingtimeout/jtail/io/LineReader;)V
statement is: JTailPanel jTailPanel = new JTailPanel(jTailModel), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: fr.pingtimeout.jtail.gui.view.JTailPanel(Lfr/pingtimeout/jtail/gui/model/JTailModel;)V
statement is: JTailModelEvent.Type jTailModelEvent_Type = Type.RESIZED, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: Type.RESIZED is Type
statement is: JTailModelEvent jTailModelEvent = new JTailModelEvent(jTailModelEvent_Type, 0, -3690, 721, 0), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: jTailPanel.update(((Observable) (jTailModel)), ((Object) (jTailModelEvent))), class spoon.support.reflect.code.CtInvocationImpl
invocation is: jTailPanel.update(((Observable) (jTailModel)), ((Object) (jTailModelEvent))) target is: jTailPanel method is: update(Observable,java.lang.Object)
source statement: int _int = 0 callee: VariableReference: Statement 5, type fr.pingtimeout.jtail.gui.view.JTailPanelindex is: 0
TestCase is: int _int = 0;
int _int = 721;
int _int = 0;
JTailModelEvent jTailModelEvent = new JTailModelEvent((JTailModelEvent.Type) _int, _int, _int, 721, 0);

statement is: createTempFile(Ljava/lang/String;Ljava/lang/String;)Ljava/io/File; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.evosuite.runtime.mock.java.io.MockFile
statement code is: MockFile createTempFile = (MockFile)MockFile.createTempFile("fr.pingtimeout.jtail.gui.view.JTailPanel$1", "fr.pingtimeout.jtail.gui.view.JTailPanel$1")
statement is: fr.pingtimeout.jtail.io.index.RamFileIndex(Ljava/io/File;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class fr.pingtimeout.jtail.io.index.RamFileIndex
statement code is: RamFileIndex ramFileIndex = new RamFileIndex(arg0)
statement is: setOffsetOfLine(IJ)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: ramFileIndex.setOffsetOfLine(0, 0)
statement is: fr.pingtimeout.jtail.io.index.ImmutableFileIndex(Lfr/pingtimeout/jtail/io/index/FileIndex;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class fr.pingtimeout.jtail.io.index.ImmutableFileIndex
statement code is: ImmutableFileIndex immutableFileIndex = new ImmutableFileIndex(arg0)
statement is: fr.pingtimeout.jtail.io.LineReader(Ljava/io/File;Lfr/pingtimeout/jtail/io/index/FileIndex;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class fr.pingtimeout.jtail.io.LineReader
statement code is: LineReader lineReader = new LineReader(arg0, arg1)
statement is: fr.pingtimeout.jtail.gui.model.JTailModel(Ljava/io/File;Lfr/pingtimeout/jtail/io/LineReader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class fr.pingtimeout.jtail.gui.model.JTailModel
statement code is: JTailModel jTailModel = new JTailModel(arg0, arg1)
statement is: fr.pingtimeout.jtail.gui.view.JTailPanel(Lfr/pingtimeout/jtail/gui/model/JTailModel;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class fr.pingtimeout.jtail.gui.view.JTailPanel
statement code is: JTailPanel jTailPanel = new JTailPanel(arg0)
statement is: setNbDisplayedLines(I)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: jTailModel.setNbDisplayedLines(1)
statement is: setNbDisplayedLines(I)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: jTailModel.setNbDisplayedLines(0)
test data is: MockFile createTempFile = (MockFile)MockFile.createTempFile("fr.pingtimeout.jtail.gui.view.JTailPanel$1", "fr.pingtimeout.jtail.gui.view.JTailPanel$1");
RamFileIndex ramFileIndex = new RamFileIndex(createTempFile);
ramFileIndex.setOffsetOfLine(0, 0);
ImmutableFileIndex immutableFileIndex = new ImmutableFileIndex(ramFileIndex);
LineReader lineReader = new LineReader(createTempFile, immutableFileIndex);
JTailModel jTailModel = new JTailModel(createTempFile, lineReader);
JTailPanel jTailPanel = new JTailPanel(jTailModel);
jTailModel.setNbDisplayedLines(1);
jTailModel.setNbDisplayedLines(0);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        MockFile createTempFile = ((MockFile) (MockFile.createTempFile("fr.pingtimeout.jtail.gui.view.JTailPanel$1", "fr.pingtimeout.jtail.gui.view.JTailPanel$1")));
        RamFileIndex ramFileIndex = new RamFileIndex(createTempFile);
        ramFileIndex.setOffsetOfLine(0, 0);
        ImmutableFileIndex immutableFileIndex = new ImmutableFileIndex(ramFileIndex);
        LineReader lineReader = new LineReader(createTempFile, immutableFileIndex);
        JTailModel jTailModel = new JTailModel(createTempFile, lineReader);
        JTailPanel jTailPanel = new JTailPanel(jTailModel);
        jTailModel.setNbDisplayedLines(100);
        jTailModel.setNbDisplayedLines(50);
    }
}
statement is: MockFile createTempFile = ((MockFile) (MockFile.createTempFile("fr.pingtimeout.jtail.gui.view.JTailPanel$1", "fr.pingtimeout.jtail.gui.view.JTailPanel$1"))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: ((MockFile) (MockFile.createTempFile("fr.pingtimeout.jtail.gui.view.JTailPanel$1", "fr.pingtimeout.jtail.gui.view.JTailPanel$1"))) target is: MockFile method is: createTempFile(java.lang.String,java.lang.String)
Matched Method is: createTempFile(Ljava/lang/String;Ljava/lang/String;)Ljava/io/File;
statement is: RamFileIndex ramFileIndex = new RamFileIndex(createTempFile), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: ramFileIndex.setOffsetOfLine(0, 0), class spoon.support.reflect.code.CtInvocationImpl
invocation is: ramFileIndex.setOffsetOfLine(0, 0) target is: ramFileIndex method is: setOffsetOfLine(int,int)
source statement: fr.pingtimeout.jtail.io.index.RamFileIndex(Ljava/io/File;)V callee: VariableReference: Statement 1, type fr.pingtimeout.jtail.io.index.RamFileIndexindex is: 3
Matched Method is: setOffsetOfLine(IJ)V
statement is: ImmutableFileIndex immutableFileIndex = new ImmutableFileIndex(ramFileIndex), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: LineReader lineReader = new LineReader(createTempFile, immutableFileIndex), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JTailModel jTailModel = new JTailModel(createTempFile, lineReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JTailPanel jTailPanel = new JTailPanel(jTailModel), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: jTailModel.setNbDisplayedLines(100), class spoon.support.reflect.code.CtInvocationImpl
invocation is: jTailModel.setNbDisplayedLines(100) target is: jTailModel method is: setNbDisplayedLines(int)
source statement: fr.pingtimeout.jtail.gui.model.JTailModel(Ljava/io/File;Lfr/pingtimeout/jtail/io/LineReader;)V callee: VariableReference: Statement 5, type fr.pingtimeout.jtail.gui.model.JTailModelindex is: 9
source statement: fr.pingtimeout.jtail.gui.model.JTailModel(Ljava/io/File;Lfr/pingtimeout/jtail/io/LineReader;)V callee: VariableReference: Statement 5, type fr.pingtimeout.jtail.gui.model.JTailModelindex is: 9
Matched Method is: setNbDisplayedLines(I)V
statement is: jTailModel.setNbDisplayedLines(50), class spoon.support.reflect.code.CtInvocationImpl
invocation is: jTailModel.setNbDisplayedLines(50) target is: jTailModel method is: setNbDisplayedLines(int)
source statement: fr.pingtimeout.jtail.gui.model.JTailModel(Ljava/io/File;Lfr/pingtimeout/jtail/io/LineReader;)V callee: VariableReference: Statement 5, type fr.pingtimeout.jtail.gui.model.JTailModelindex is: 9
source statement: fr.pingtimeout.jtail.gui.model.JTailModel(Ljava/io/File;Lfr/pingtimeout/jtail/io/LineReader;)V callee: VariableReference: Statement 5, type fr.pingtimeout.jtail.gui.model.JTailModelindex is: 9
Matched Method is: setNbDisplayedLines(I)V
TestCase is: String string = "fr.pingtimeout.jtail.gui.view.JTailPanel$1";
String string = "fr.pingtimeout.jtail.gui.view.JTailPanel$1";
MockFile createTempFile = (MockFile)MockFile.createTempFile(string, string);
RamFileIndex ramFileIndex = new RamFileIndex(createTempFile);
int _int = 0;
int _int = 0;
((RamFileIndex) string).setOffsetOfLine(_int, _int);
ImmutableFileIndex immutableFileIndex = new ImmutableFileIndex(ramFileIndex);
LineReader lineReader = new LineReader(createTempFile, immutableFileIndex);
JTailModel jTailModel = new JTailModel(createTempFile, lineReader);
JTailPanel jTailPanel = new JTailPanel(jTailModel);
int _int = 100;
((JTailModel) _int).setNbDisplayedLines(_int);
int _int = 50;
((JTailModel) _int).setNbDisplayedLines(_int);

statement is: createTempFile(Ljava/lang/String;Ljava/lang/String;)Ljava/io/File; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.evosuite.runtime.mock.java.io.MockFile
statement code is: MockFile createTempFile = (MockFile)MockFile.createTempFile("fr.pingtimeout.jtail.gui.view.JTailPanel$1", "fr.pingtimeout.jtail.gui.view.JTailPanel$1")
statement is: fr.pingtimeout.jtail.io.index.RamFileIndex(Ljava/io/File;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class fr.pingtimeout.jtail.io.index.RamFileIndex
statement code is: RamFileIndex ramFileIndex = new RamFileIndex(arg0)
statement is: setOffsetOfLine(IJ)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: ramFileIndex.setOffsetOfLine(0, 0)
statement is: fr.pingtimeout.jtail.io.index.ImmutableFileIndex(Lfr/pingtimeout/jtail/io/index/FileIndex;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class fr.pingtimeout.jtail.io.index.ImmutableFileIndex
statement code is: ImmutableFileIndex immutableFileIndex = new ImmutableFileIndex(arg0)
statement is: fr.pingtimeout.jtail.io.LineReader(Ljava/io/File;Lfr/pingtimeout/jtail/io/index/FileIndex;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class fr.pingtimeout.jtail.io.LineReader
statement code is: LineReader lineReader = new LineReader(arg0, arg1)
statement is: fr.pingtimeout.jtail.gui.model.JTailModel(Ljava/io/File;Lfr/pingtimeout/jtail/io/LineReader;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class fr.pingtimeout.jtail.gui.model.JTailModel
statement code is: JTailModel jTailModel = new JTailModel(arg0, arg1)
statement is: fr.pingtimeout.jtail.gui.view.JTailPanel(Lfr/pingtimeout/jtail/gui/model/JTailModel;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class fr.pingtimeout.jtail.gui.view.JTailPanel
statement code is: JTailPanel jTailPanel = new JTailPanel(arg0)
statement is: setFirstDisplayedLine(I)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: jTailModel.setFirstDisplayedLine(0)
test data is: MockFile createTempFile = (MockFile)MockFile.createTempFile("fr.pingtimeout.jtail.gui.view.JTailPanel$1", "fr.pingtimeout.jtail.gui.view.JTailPanel$1");
RamFileIndex ramFileIndex = new RamFileIndex(createTempFile);
ramFileIndex.setOffsetOfLine(0, 0);
ImmutableFileIndex immutableFileIndex = new ImmutableFileIndex(ramFileIndex);
LineReader lineReader = new LineReader(createTempFile, immutableFileIndex);
JTailModel jTailModel = new JTailModel(createTempFile, lineReader);
JTailPanel jTailPanel = new JTailPanel(jTailModel);
jTailModel.setFirstDisplayedLine(0);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        MockFile createTempFile = ((MockFile) (MockFile.createTempFile("fr.pingtimeout.jtail.gui.view.JTailPanel$1", "fr.pingtimeout.jtail.gui.view.JTailPanel$1")));
        RamFileIndex ramFileIndex = new RamFileIndex(createTempFile);
        ramFileIndex.setOffsetOfLine(0, 0);
        ImmutableFileIndex immutableFileIndex = new ImmutableFileIndex(ramFileIndex);
        LineReader lineReader = new LineReader(createTempFile, immutableFileIndex);
        JTailModel jTailModel = new JTailModel(createTempFile, lineReader);
        JTailPanel jTailPanel = new JTailPanel(jTailModel);
        jTailModel.setFirstDisplayedLine(0);
    }
}
statement is: MockFile createTempFile = ((MockFile) (MockFile.createTempFile("fr.pingtimeout.jtail.gui.view.JTailPanel$1", "fr.pingtimeout.jtail.gui.view.JTailPanel$1"))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: ((MockFile) (MockFile.createTempFile("fr.pingtimeout.jtail.gui.view.JTailPanel$1", "fr.pingtimeout.jtail.gui.view.JTailPanel$1"))) target is: MockFile method is: createTempFile(java.lang.String,java.lang.String)
Matched Method is: createTempFile(Ljava/lang/String;Ljava/lang/String;)Ljava/io/File;
statement is: RamFileIndex ramFileIndex = new RamFileIndex(createTempFile), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: ramFileIndex.setOffsetOfLine(0, 0), class spoon.support.reflect.code.CtInvocationImpl
invocation is: ramFileIndex.setOffsetOfLine(0, 0) target is: ramFileIndex method is: setOffsetOfLine(int,int)
source statement: fr.pingtimeout.jtail.io.index.RamFileIndex(Ljava/io/File;)V callee: VariableReference: Statement 1, type fr.pingtimeout.jtail.io.index.RamFileIndexindex is: 3
Matched Method is: setOffsetOfLine(IJ)V
statement is: ImmutableFileIndex immutableFileIndex = new ImmutableFileIndex(ramFileIndex), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: LineReader lineReader = new LineReader(createTempFile, immutableFileIndex), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JTailModel jTailModel = new JTailModel(createTempFile, lineReader), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JTailPanel jTailPanel = new JTailPanel(jTailModel), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: jTailModel.setFirstDisplayedLine(0), class spoon.support.reflect.code.CtInvocationImpl
invocation is: jTailModel.setFirstDisplayedLine(0) target is: jTailModel method is: setFirstDisplayedLine(int)
source statement: fr.pingtimeout.jtail.gui.model.JTailModel(Ljava/io/File;Lfr/pingtimeout/jtail/io/LineReader;)V callee: VariableReference: Statement 5, type fr.pingtimeout.jtail.gui.model.JTailModelindex is: 9
Matched Method is: setFirstDisplayedLine(I)V
TestCase is: String string = "fr.pingtimeout.jtail.gui.view.JTailPanel$1";
String string = "fr.pingtimeout.jtail.gui.view.JTailPanel$1";
MockFile createTempFile = (MockFile)MockFile.createTempFile(string, string);
RamFileIndex ramFileIndex = new RamFileIndex(createTempFile);
int _int = 0;
int _int = 0;
((RamFileIndex) string).setOffsetOfLine(_int, _int);
ImmutableFileIndex immutableFileIndex = new ImmutableFileIndex(ramFileIndex);
LineReader lineReader = new LineReader(createTempFile, immutableFileIndex);
JTailModel jTailModel = new JTailModel(createTempFile, lineReader);
JTailPanel jTailPanel = new JTailPanel(jTailModel);
int _int = 0;
((JTailModel) _int).setFirstDisplayedLine(_int);

* test suite isTestSuite: 12
Test 0: 
MockFile createTempFile = (MockFile)MockFile.createTempFile("fr.pingtimeout.jtail.gui.view.JTailPanel$1", "fr.pingtimeout.jtail.gui.view.JTailPanel$1");
RamFileIndex ramFileIndex = new RamFileIndex(createTempFile);
ramFileIndex.setOffsetOfLine(0, 0);
ImmutableFileIndex immutableFileIndex = new ImmutableFileIndex(ramFileIndex);
LineReader lineReader = new LineReader(createTempFile, immutableFileIndex);
JTailModel jTailModel = new JTailModel(createTempFile, lineReader);
JTailPanel jTailPanel = new JTailPanel(jTailModel);
jTailPanel.getVerticalScrollBar();
Test 1: 
MockFile createTempFile = (MockFile)MockFile.createTempFile("fr.pingtimeout.jtail.gui.view.JTailPanel$1", "fr.pingtimeout.jtail.gui.view.JTailPanel$1");
RamFileIndex ramFileIndex = new RamFileIndex(createTempFile);
ramFileIndex.setOffsetOfLine(0, 0);
ImmutableFileIndex immutableFileIndex = new ImmutableFileIndex(ramFileIndex);
LineReader lineReader = new LineReader(createTempFile, immutableFileIndex);
JTailModel jTailModel = new JTailModel(createTempFile, lineReader);
JTailPanel jTailPanel = new JTailPanel(jTailModel);
jTailPanel.getCharacterHeight();
Test 2: 
MockFile mockFile = new MockFile("");
FileIndexer fileIndexer = new FileIndexer(mockFile);
ImmutableFileIndex index = (ImmutableFileIndex)fileIndexer.getIndex();
LineReader lineReader = new LineReader(mockFile, index);
JTailModel jTailModel = new JTailModel(mockFile, lineReader);
JTailPanel jTailPanel = new JTailPanel(jTailModel);
jTailPanel.update((Observable) fileIndexer, (Object) index);
Test 3: 
MockFile createTempFile = (MockFile)MockFile.createTempFile("aWC&G>ysI}", "aWC&G>ysI}");
RamFileIndex ramFileIndex = new RamFileIndex(createTempFile);
ramFileIndex.setOffsetOfLine(0, 0);
LineReader lineReader = new LineReader(createTempFile, ramFileIndex);
JTailModel jTailModel = new JTailModel(createTempFile, lineReader);
JTailPanel jTailPanel = new JTailPanel(jTailModel);
JTailModelEvent.Type jTailModelEvent_Type = JTailModelEvent.Type.RESIZED;
JTailModelEvent jTailModelEvent = new JTailModelEvent(jTailModelEvent_Type, 0, (-3690), 721, 0);
jTailPanel.update((Observable) jTailModel, (Object) jTailModelEvent);
Test 4: 
MockFile createTempFile = (MockFile)MockFile.createTempFile("fr.pingtimeout.jtail.gui.view.JTailPanel$1", "fr.pingtimeout.jtail.gui.view.JTailPanel$1");
RamFileIndex ramFileIndex = new RamFileIndex(createTempFile);
ramFileIndex.setOffsetOfLine(0, 0);
ImmutableFileIndex immutableFileIndex = new ImmutableFileIndex(ramFileIndex);
LineReader lineReader = new LineReader(createTempFile, immutableFileIndex);
JTailModel jTailModel = new JTailModel(createTempFile, lineReader);
JTailPanel jTailPanel = new JTailPanel(jTailModel);
jTailModel.setNbDisplayedLines(1);
jTailModel.setNbDisplayedLines(0);
Test 5: 
MockFile createTempFile = (MockFile)MockFile.createTempFile("fr.pingtimeout.jtail.gui.view.JTailPanel$1", "fr.pingtimeout.jtail.gui.view.JTailPanel$1");
RamFileIndex ramFileIndex = new RamFileIndex(createTempFile);
ramFileIndex.setOffsetOfLine(0, 0);
ImmutableFileIndex immutableFileIndex = new ImmutableFileIndex(ramFileIndex);
LineReader lineReader = new LineReader(createTempFile, immutableFileIndex);
JTailModel jTailModel = new JTailModel(createTempFile, lineReader);
JTailPanel jTailPanel = new JTailPanel(jTailModel);
jTailModel.setFirstDisplayedLine(0);
Test 6: 
String string = "fr.pingtimeout.jtail.gui.view.JTailPanel$1";
MockFile createTempFile = (MockFile)MockFile.createTempFile("fr.pingtimeout.jtail.gui.view.JTailPanel$1", "fr.pingtimeout.jtail.gui.view.JTailPanel$1");
RamFileIndex ramFileIndex = new RamFileIndex(createTempFile);
((RamFileIndex)"fr.pingtimeout.jtail.gui.view.JTailPanel$1").setOffsetOfLine(0, 0);
ImmutableFileIndex immutableFileIndex = new ImmutableFileIndex(ramFileIndex);
LineReader lineReader = new LineReader(createTempFile, immutableFileIndex);
JTailModel jTailModel = new JTailModel(createTempFile, lineReader);
JTailPanel jTailPanel = new JTailPanel(jTailModel);
int _int = 0;
int _int = 0;
((RamFileIndex) string).setOffsetOfLine(_int, _int);
((JTailPanel) _void).getVerticalScrollBar();

Test 7: 
MockFile createTempFile = (MockFile)MockFile.createTempFile("logFile.txt", "fr.pingtimeout.jtail.gui.view.JTailPanel$1");
RamFileIndex ramFileIndex = new RamFileIndex(createTempFile);
((RamFileIndex)"fr.pingtimeout.jtail.gui.view.JTailPanel$1").setOffsetOfLine(0, 1024);
ImmutableFileIndex immutableFileIndex = new ImmutableFileIndex(ramFileIndex);
LineReader lineReader = new LineReader(createTempFile, immutableFileIndex);
JTailModel jTailModel = new JTailModel(createTempFile, lineReader);
JTailPanel jTailPanel = new JTailPanel(jTailModel);
((JTailPanel) _void).getCharacterHeight();

Test 8: 
MockFile mockFile = new MockFile("logs/myapp.log");
FileIndexer fileIndexer = new FileIndexer(mockFile);
ImmutableFileIndex index = (ImmutableFileIndex)((FileIndexer) mockFile).getIndex();
LineReader lineReader = new LineReader(mockFile, index);
JTailModel jTailModel = new JTailModel(mockFile, lineReader);
JTailPanel jTailPanel = new JTailPanel(jTailModel);
((JTailPanel) jTailModel).update((Observable) fileIndexer, (Object) index);

Test 9: 
JTailModelEvent jTailModelEvent = new JTailModelEvent((JTailModelEvent.Type) 0, 721, 0, 721, 0);

Test 10: 
MockFile createTempFile = (MockFile)MockFile.createTempFile("fr.pingtimeout.jtail.gui.view.JTailPanel$1", "fr.pingtimeout.jtail.gui.view.JTailPanel$1");
RamFileIndex ramFileIndex = new RamFileIndex(createTempFile);
int _int = 0;
((RamFileIndex)"fr.pingtimeout.jtail.gui.view.JTailPanel$1").setOffsetOfLine(0, 0);
ImmutableFileIndex immutableFileIndex = new ImmutableFileIndex(ramFileIndex);
LineReader lineReader = new LineReader(createTempFile, immutableFileIndex);
JTailModel jTailModel = new JTailModel(createTempFile, lineReader);
JTailPanel jTailPanel = new JTailPanel(jTailModel);
int _int = 100;
((JTailModel) _int).setNbDisplayedLines(_int);
int _int = 50;
((JTailModel) _int).setNbDisplayedLines(_int);

Test 11: 
MockFile createTempFile = (MockFile)MockFile.createTempFile("fr.pingtimeout.jtail.gui.view.JTailPanel$1", "fr.pingtimeout.jtail.gui.view.JTailPanel$1");
RamFileIndex ramFileIndex = new RamFileIndex(createTempFile);
int _int = 0;
((RamFileIndex)"fr.pingtimeout.jtail.gui.view.JTailPanel$1").setOffsetOfLine(0, 0);
ImmutableFileIndex immutableFileIndex = new ImmutableFileIndex(ramFileIndex);
LineReader lineReader = new LineReader(createTempFile, immutableFileIndex);
JTailModel jTailModel = new JTailModel(createTempFile, lineReader);
JTailPanel jTailPanel = new JTailPanel(jTailModel);
int _int = 0;
((JTailModel) _int).setFirstDisplayedLine(_int);


* Generated after the refinement and before minimization 12 tests with total length 99
* test suite isTestSuite: 12
Test 0: 
MockFile createTempFile = (MockFile)MockFile.createTempFile("fr.pingtimeout.jtail.gui.view.JTailPanel$1", "fr.pingtimeout.jtail.gui.view.JTailPanel$1");
RamFileIndex ramFileIndex = new RamFileIndex(createTempFile);
ramFileIndex.setOffsetOfLine(0, 0);
ImmutableFileIndex immutableFileIndex = new ImmutableFileIndex(ramFileIndex);
LineReader lineReader = new LineReader(createTempFile, immutableFileIndex);
JTailModel jTailModel = new JTailModel(createTempFile, lineReader);
JTailPanel jTailPanel = new JTailPanel(jTailModel);
jTailPanel.getVerticalScrollBar();
Test 1: 
MockFile createTempFile = (MockFile)MockFile.createTempFile("fr.pingtimeout.jtail.gui.view.JTailPanel$1", "fr.pingtimeout.jtail.gui.view.JTailPanel$1");
RamFileIndex ramFileIndex = new RamFileIndex(createTempFile);
ramFileIndex.setOffsetOfLine(0, 0);
ImmutableFileIndex immutableFileIndex = new ImmutableFileIndex(ramFileIndex);
LineReader lineReader = new LineReader(createTempFile, immutableFileIndex);
JTailModel jTailModel = new JTailModel(createTempFile, lineReader);
JTailPanel jTailPanel = new JTailPanel(jTailModel);
jTailPanel.getCharacterHeight();
Test 2: 
MockFile mockFile = new MockFile("");
FileIndexer fileIndexer = new FileIndexer(mockFile);
ImmutableFileIndex index = (ImmutableFileIndex)fileIndexer.getIndex();
LineReader lineReader = new LineReader(mockFile, index);
JTailModel jTailModel = new JTailModel(mockFile, lineReader);
JTailPanel jTailPanel = new JTailPanel(jTailModel);
jTailPanel.update((Observable) fileIndexer, (Object) index);
Test 3: 
MockFile createTempFile = (MockFile)MockFile.createTempFile("aWC&G>ysI}", "aWC&G>ysI}");
RamFileIndex ramFileIndex = new RamFileIndex(createTempFile);
ramFileIndex.setOffsetOfLine(0, 0);
LineReader lineReader = new LineReader(createTempFile, ramFileIndex);
JTailModel jTailModel = new JTailModel(createTempFile, lineReader);
JTailPanel jTailPanel = new JTailPanel(jTailModel);
JTailModelEvent.Type jTailModelEvent_Type = JTailModelEvent.Type.RESIZED;
JTailModelEvent jTailModelEvent = new JTailModelEvent(jTailModelEvent_Type, 0, (-3690), 721, 0);
jTailPanel.update((Observable) jTailModel, (Object) jTailModelEvent);
Test 4: 
MockFile createTempFile = (MockFile)MockFile.createTempFile("fr.pingtimeout.jtail.gui.view.JTailPanel$1", "fr.pingtimeout.jtail.gui.view.JTailPanel$1");
RamFileIndex ramFileIndex = new RamFileIndex(createTempFile);
ramFileIndex.setOffsetOfLine(0, 0);
ImmutableFileIndex immutableFileIndex = new ImmutableFileIndex(ramFileIndex);
LineReader lineReader = new LineReader(createTempFile, immutableFileIndex);
JTailModel jTailModel = new JTailModel(createTempFile, lineReader);
JTailPanel jTailPanel = new JTailPanel(jTailModel);
jTailModel.setNbDisplayedLines(1);
jTailModel.setNbDisplayedLines(0);
Test 5: 
MockFile createTempFile = (MockFile)MockFile.createTempFile("fr.pingtimeout.jtail.gui.view.JTailPanel$1", "fr.pingtimeout.jtail.gui.view.JTailPanel$1");
RamFileIndex ramFileIndex = new RamFileIndex(createTempFile);
ramFileIndex.setOffsetOfLine(0, 0);
ImmutableFileIndex immutableFileIndex = new ImmutableFileIndex(ramFileIndex);
LineReader lineReader = new LineReader(createTempFile, immutableFileIndex);
JTailModel jTailModel = new JTailModel(createTempFile, lineReader);
JTailPanel jTailPanel = new JTailPanel(jTailModel);
jTailModel.setFirstDisplayedLine(0);
Test 6: 
String string = "fr.pingtimeout.jtail.gui.view.JTailPanel$1";
MockFile createTempFile = (MockFile)MockFile.createTempFile("fr.pingtimeout.jtail.gui.view.JTailPanel$1", "fr.pingtimeout.jtail.gui.view.JTailPanel$1");
RamFileIndex ramFileIndex = new RamFileIndex(createTempFile);
((RamFileIndex)"fr.pingtimeout.jtail.gui.view.JTailPanel$1").setOffsetOfLine(0, 0);
ImmutableFileIndex immutableFileIndex = new ImmutableFileIndex(ramFileIndex);
LineReader lineReader = new LineReader(createTempFile, immutableFileIndex);
JTailModel jTailModel = new JTailModel(createTempFile, lineReader);
JTailPanel jTailPanel = new JTailPanel(jTailModel);
int _int = 0;
int _int = 0;
((RamFileIndex) string).setOffsetOfLine(_int, _int);
((JTailPanel) _void).getVerticalScrollBar();

Test 7: 
MockFile createTempFile = (MockFile)MockFile.createTempFile("logFile.txt", "fr.pingtimeout.jtail.gui.view.JTailPanel$1");
RamFileIndex ramFileIndex = new RamFileIndex(createTempFile);
((RamFileIndex)"fr.pingtimeout.jtail.gui.view.JTailPanel$1").setOffsetOfLine(0, 1024);
ImmutableFileIndex immutableFileIndex = new ImmutableFileIndex(ramFileIndex);
LineReader lineReader = new LineReader(createTempFile, immutableFileIndex);
JTailModel jTailModel = new JTailModel(createTempFile, lineReader);
JTailPanel jTailPanel = new JTailPanel(jTailModel);
((JTailPanel) _void).getCharacterHeight();

Test 8: 
MockFile mockFile = new MockFile("logs/myapp.log");
FileIndexer fileIndexer = new FileIndexer(mockFile);
ImmutableFileIndex index = (ImmutableFileIndex)((FileIndexer) mockFile).getIndex();
LineReader lineReader = new LineReader(mockFile, index);
JTailModel jTailModel = new JTailModel(mockFile, lineReader);
JTailPanel jTailPanel = new JTailPanel(jTailModel);
((JTailPanel) jTailModel).update((Observable) fileIndexer, (Object) index);

Test 9: 
JTailModelEvent jTailModelEvent = new JTailModelEvent((JTailModelEvent.Type) 0, 721, 0, 721, 0);

Test 10: 
MockFile createTempFile = (MockFile)MockFile.createTempFile("fr.pingtimeout.jtail.gui.view.JTailPanel$1", "fr.pingtimeout.jtail.gui.view.JTailPanel$1");
RamFileIndex ramFileIndex = new RamFileIndex(createTempFile);
int _int = 0;
((RamFileIndex)"fr.pingtimeout.jtail.gui.view.JTailPanel$1").setOffsetOfLine(0, 0);
ImmutableFileIndex immutableFileIndex = new ImmutableFileIndex(ramFileIndex);
LineReader lineReader = new LineReader(createTempFile, immutableFileIndex);
JTailModel jTailModel = new JTailModel(createTempFile, lineReader);
JTailPanel jTailPanel = new JTailPanel(jTailModel);
int _int = 100;
((JTailModel) _int).setNbDisplayedLines(_int);
int _int = 50;
((JTailModel) _int).setNbDisplayedLines(_int);

Test 11: 
MockFile createTempFile = (MockFile)MockFile.createTempFile("fr.pingtimeout.jtail.gui.view.JTailPanel$1", "fr.pingtimeout.jtail.gui.view.JTailPanel$1");
RamFileIndex ramFileIndex = new RamFileIndex(createTempFile);
int _int = 0;
((RamFileIndex)"fr.pingtimeout.jtail.gui.view.JTailPanel$1").setOffsetOfLine(0, 0);
ImmutableFileIndex immutableFileIndex = new ImmutableFileIndex(ramFileIndex);
LineReader lineReader = new LineReader(createTempFile, immutableFileIndex);
JTailModel jTailModel = new JTailModel(createTempFile, lineReader);
JTailPanel jTailPanel = new JTailPanel(jTailModel);
int _int = 0;
((JTailModel) _int).setFirstDisplayedLine(_int);


* Minimizing test suite
* test suite isTestSuite: 7
Test 0: 
MockFile createTempFile = (MockFile)MockFile.createTempFile("fr.pingtimeout.jtail.gui.view.JTailPanel$1", "fr.pingtimeout.jtail.gui.view.JTailPanel$1");
RamFileIndex ramFileIndex = new RamFileIndex(createTempFile);
ramFileIndex.setOffsetOfLine(0, 0);
ImmutableFileIndex immutableFileIndex = new ImmutableFileIndex(ramFileIndex);
LineReader lineReader = new LineReader(createTempFile, immutableFileIndex);
JTailModel jTailModel = new JTailModel(createTempFile, lineReader);
JTailPanel jTailPanel = new JTailPanel(jTailModel);
jTailPanel.getVerticalScrollBar();
Test 1: 
MockFile createTempFile = (MockFile)MockFile.createTempFile("fr.pingtimeout.jtail.gui.view.JTailPanel$1", "fr.pingtimeout.jtail.gui.view.JTailPanel$1");
RamFileIndex ramFileIndex = new RamFileIndex(createTempFile);
ramFileIndex.setOffsetOfLine(0, 0);
ImmutableFileIndex immutableFileIndex = new ImmutableFileIndex(ramFileIndex);
LineReader lineReader = new LineReader(createTempFile, immutableFileIndex);
JTailModel jTailModel = new JTailModel(createTempFile, lineReader);
JTailPanel jTailPanel = new JTailPanel(jTailModel);
jTailPanel.getCharacterHeight();
Test 2: 
MockFile mockFile = new MockFile("");
FileIndexer fileIndexer = new FileIndexer(mockFile);
ImmutableFileIndex index = (ImmutableFileIndex)fileIndexer.getIndex();
LineReader lineReader = new LineReader(mockFile, index);
JTailModel jTailModel = new JTailModel(mockFile, lineReader);
JTailPanel jTailPanel = new JTailPanel(jTailModel);
jTailPanel.update((Observable) fileIndexer, (Object) index);
Test 3: 
MockFile createTempFile = (MockFile)MockFile.createTempFile("fr.pingtimeout.jtail.gui.view.JTailPanel$1", "fr.pingtimeout.jtail.gui.view.JTailPanel$1");
RamFileIndex ramFileIndex = new RamFileIndex(createTempFile);
ramFileIndex.setOffsetOfLine(0, 0);
ImmutableFileIndex immutableFileIndex = new ImmutableFileIndex(ramFileIndex);
LineReader lineReader = new LineReader(createTempFile, immutableFileIndex);
JTailModel jTailModel = new JTailModel(createTempFile, lineReader);
JTailPanel jTailPanel = new JTailPanel(jTailModel);
jTailModel.setFirstDisplayedLine(0);
Test 4: 
MockFile createTempFile = (MockFile)MockFile.createTempFile("aWC&G>ysI}", "aWC&G>ysI}");
RamFileIndex ramFileIndex = new RamFileIndex(createTempFile);
ramFileIndex.setOffsetOfLine(0, 0);
LineReader lineReader = new LineReader(createTempFile, ramFileIndex);
JTailModel jTailModel = new JTailModel(createTempFile, lineReader);
JTailPanel jTailPanel = new JTailPanel(jTailModel);
JTailModelEvent.Type jTailModelEvent_Type = JTailModelEvent.Type.RESIZED;
JTailModelEvent jTailModelEvent = new JTailModelEvent(jTailModelEvent_Type, 0, (-3690), 721, 0);
jTailPanel.update((Observable) jTailModel, (Object) jTailModelEvent);
Test 5: 
MockFile createTempFile = (MockFile)MockFile.createTempFile("fr.pingtimeout.jtail.gui.view.JTailPanel$1", "fr.pingtimeout.jtail.gui.view.JTailPanel$1");
RamFileIndex ramFileIndex = new RamFileIndex(createTempFile);
ramFileIndex.setOffsetOfLine(0, 0);
ImmutableFileIndex immutableFileIndex = new ImmutableFileIndex(ramFileIndex);
LineReader lineReader = new LineReader(createTempFile, immutableFileIndex);
JTailModel jTailModel = new JTailModel(createTempFile, lineReader);
JTailPanel jTailPanel = new JTailPanel(jTailModel);
jTailModel.setNbDisplayedLines(1);
jTailModel.setNbDisplayedLines(0);
Test 6: 
MockFile createTempFile = (MockFile)MockFile.createTempFile("fr.pingtimeout.jtail.gui.view.JTailPanel$1", "fr.pingtimeout.jtail.gui.view.JTailPanel$1");
RamFileIndex ramFileIndex = new RamFileIndex(createTempFile);
ramFileIndex.setOffsetOfLine(0, 0);
ImmutableFileIndex immutableFileIndex = new ImmutableFileIndex(ramFileIndex);
LineReader lineReader = new LineReader(createTempFile, immutableFileIndex);
JTailModel jTailModel = new JTailModel(createTempFile, lineReader);
JTailPanel jTailPanel = new JTailPanel(jTailModel);
jTailModel.setNbDisplayedLines(0);

* Going to analyze the coverage criteria
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 87%
* Total number of goals: 23
* Number of covered goals: 20
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 98%
* Total number of goals: 65
* Number of covered goals: 64
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 43%
* Total number of goals: 14
* Number of covered goals: 6
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 4
* Number of covered goals: 4
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 87%
* Total number of goals: 23
* Number of covered goals: 20
* Generated 7 tests with total length 57
* Resulting test suite's coverage: 83% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 37%
* Compiling and checking tests
Going to execute: removeTestsThatDoNotCompile
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
Going to execute: handleTestsThatAreUnstable
* Writing tests to file
* Writing JUnit test case 'JTailPanel_ESTest' to evosuite-tests
* Done!

* Computation finished
