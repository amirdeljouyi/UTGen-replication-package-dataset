* EvoSuite 1.2.1-SNAPSHOT
* Going to generate test cases for class: de.devcity.parseargs.ArgsParser
* Starting Client-0
* Properties loaded from /home/ubuntu/UTestGen/Evaluation/getting_results/dataset/SF110/90_dcparseargs/evosuite-files/evosuite.properties
* Connecting to master process on port 14725
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
* Finished analyzing classpath
* Generating tests for class de.devcity.parseargs.ArgsParser
* Test criteria:
  - Branch Coverage
  - Line Coverage
  - Method-Output Coverage
  - Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 281
* Using seed 1709288169620
* Starting evolution
[Progress:>                             0%] [Cov:>                                  0%]* Initial Number of Goals in DynaMOSA = 65 / 281
[Progress:>                             1%] [Cov:=======================>           67%][Progress:>                             2%] [Cov:=======================>           67%][Progress:>                             3%] [Cov:=======================>           67%][Progress:>                             3%] [Cov:=======================>           67%][Progress:>                             3%] [Cov:=======================>           67%][Progress:=>                            4%] [Cov:=======================>           67%][Progress:=>                            4%] [Cov:=======================>           67%][Progress:=>                            5%] [Cov:=======================>           67%][Progress:=>                            5%] [Cov:=======================>           67%][Progress:=>                            5%] [Cov:=======================>           67%][Progress:=>                            6%] [Cov:=======================>           67%][Progress:=>                            6%] [Cov:=======================>           67%][Progress:=>                            6%] [Cov:=======================>           67%][Progress:==>                           7%] [Cov:=======================>           67%][Progress:==>                           7%] [Cov:=======================>           67%][Progress:==>                           7%] [Cov:=======================>           68%][Progress:==>                           7%] [Cov:=======================>           68%][Progress:==>                           8%] [Cov:=======================>           68%][Progress:==>                           8%] [Cov:=======================>           68%][Progress:==>                           8%] [Cov:=======================>           68%][Progress:==>                           9%] [Cov:=======================>           68%][Progress:==>                           9%] [Cov:=======================>           68%][Progress:==>                           9%] [Cov:=======================>           68%][Progress:===>                          10%] [Cov:=======================>           68%][Progress:===>                          10%] [Cov:=======================>           68%][Progress:===>                          10%] [Cov:=======================>           68%][Progress:===>                          10%] [Cov:=======================>           68%][Progress:===>                          10%] [Cov:=======================>           68%][Progress:===>                          11%] [Cov:=======================>           68%][Progress:===>                          11%] [Cov:=======================>           68%][Progress:===>                          11%] [Cov:=======================>           68%][Progress:===>                          11%] [Cov:=======================>           68%][Progress:===>                          12%] [Cov:=======================>           68%][Progress:===>                          12%] [Cov:=======================>           68%][Progress:===>                          12%] [Cov:=======================>           68%][Progress:===>                          12%] [Cov:=======================>           68%][Progress:===>                          12%] [Cov:=======================>           68%][Progress:===>                          12%] [Cov:=======================>           68%][Progress:===>                          13%] [Cov:=======================>           68%][Progress:===>                          13%] [Cov:=======================>           68%][Progress:===>                          13%] [Cov:=======================>           68%][Progress:===>                          13%] [Cov:=======================>           68%][Progress:===>                          13%] [Cov:=======================>           68%][Progress:====>                         14%] [Cov:=======================>           68%][Progress:====>                         14%] [Cov:=======================>           68%][Progress:====>                         14%] [Cov:=======================>           68%][Progress:====>                         14%] [Cov:=======================>           68%][Progress:====>                         15%] [Cov:=======================>           68%][Progress:====>                         15%] [Cov:=======================>           68%][Progress:====>                         15%] [Cov:=======================>           68%][Progress:====>                         16%] [Cov:=======================>           68%][Progress:====>                         16%] [Cov:=========================>         73%][Progress:====>                         16%] [Cov:=========================>         73%][Progress:====>                         16%] [Cov:=========================>         73%][Progress:=====>                        17%] [Cov:=========================>         73%][Progress:=====>                        17%] [Cov:==========================>        76%][Progress:=====>                        17%] [Cov:==========================>        76%][Progress:=====>                        17%] [Cov:==========================>        76%][Progress:=====>                        18%] [Cov:==========================>        76%][Progress:=====>                        18%] [Cov:==========================>        76%][Progress:=====>                        18%] [Cov:==========================>        76%][Progress:=====>                        18%] [Cov:==========================>        76%][Progress:=====>                        19%] [Cov:==========================>        76%][Progress:=====>                        19%] [Cov:==========================>        76%][Progress:=====>                        19%] [Cov:==========================>        76%][Progress:======>                       20%] [Cov:==========================>        76%][Progress:======>                       20%] [Cov:==========================>        76%][Progress:======>                       20%] [Cov:==========================>        76%][Progress:======>                       20%] [Cov:==========================>        76%][Progress:======>                       21%] [Cov:==========================>        76%][Progress:======>                       21%] [Cov:==========================>        76%][Progress:======>                       21%] [Cov:==========================>        76%][Progress:======>                       21%] [Cov:==========================>        76%][Progress:======>                       22%] [Cov:==========================>        76%][Progress:======>                       22%] [Cov:==========================>        76%][Progress:======>                       22%] [Cov:==========================>        76%][Progress:======>                       23%] [Cov:==========================>        76%][Progress:======>                       23%] [Cov:==========================>        76%][Progress:======>                       23%] [Cov:==========================>        76%][Progress:======>                       23%] [Cov:==========================>        76%][Progress:=======>                      24%] [Cov:==========================>        76%][Progress:=======>                      24%] [Cov:==========================>        76%][Progress:=======>                      24%] [Cov:==========================>        76%][Progress:=======>                      24%] [Cov:==========================>        76%][Progress:=======>                      25%] [Cov:==========================>        76%][Progress:=======>                      25%] [Cov:==========================>        76%][Progress:=======>                      25%] [Cov:==========================>        76%][Progress:=======>                      25%] [Cov:==========================>        76%][Progress:=======>                      26%] [Cov:==========================>        76%][Progress:=======>                      26%] [Cov:==========================>        76%][Progress:=======>                      26%] [Cov:==========================>        76%][Progress:========>                     27%] [Cov:==========================>        76%][Progress:========>                     27%] [Cov:==========================>        76%][Progress:========>                     27%] [Cov:==========================>        76%][Progress:========>                     28%] [Cov:==========================>        76%][Progress:========>                     28%] [Cov:==========================>        76%][Progress:========>                     28%] [Cov:==========================>        76%][Progress:========>                     28%] [Cov:==========================>        76%][Progress:========>                     29%] [Cov:==========================>        76%][Progress:========>                     29%] [Cov:==========================>        76%][Progress:=========>                    30%] [Cov:==========================>        76%][Progress:=========>                    30%] [Cov:==========================>        76%][Progress:=========>                    31%] [Cov:==========================>        76%][Progress:=========>                    31%] [Cov:==========================>        76%][Progress:=========>                    31%] [Cov:==========================>        76%][Progress:=========>                    31%] [Cov:==========================>        76%][Progress:=========>                    32%] [Cov:==========================>        76%][Progress:=========>                    32%] [Cov:==========================>        76%][Progress:=========>                    32%] [Cov:==========================>        76%][Progress:=========>                    33%] [Cov:============================>      81%][Progress:=========>                    33%] [Cov:============================>      81%][Progress:=========>                    33%] [Cov:============================>      82%][Progress:==========>                   34%] [Cov:============================>      82%][Progress:==========>                   34%] [Cov:============================>      82%][Progress:==========>                   34%] [Cov:============================>      82%][Progress:==========>                   34%] [Cov:============================>      82%][Progress:==========>                   35%] [Cov:============================>      82%][Progress:==========>                   36%] [Cov:============================>      82%][Progress:==========>                   36%] [Cov:============================>      82%][Progress:===========>                  37%] [Cov:============================>      82%][Progress:===========>                  38%] [Cov:============================>      82%][Progress:===========>                  38%] [Cov:============================>      82%][Progress:===========>                  39%] [Cov:============================>      82%][Progress:===========>                  39%] [Cov:============================>      82%][Progress:===========>                  39%] [Cov:============================>      82%][Progress:============>                 40%] [Cov:============================>      82%][Progress:============>                 40%] [Cov:============================>      82%][Progress:============>                 40%] [Cov:============================>      82%][Progress:============>                 41%] [Cov:============================>      82%][Progress:============>                 41%] [Cov:============================>      82%][Progress:============>                 42%] [Cov:============================>      82%][Progress:============>                 42%] [Cov:============================>      82%][Progress:============>                 42%] [Cov:============================>      82%][Progress:============>                 43%] [Cov:============================>      82%][Progress:============>                 43%] [Cov:============================>      82%][Progress:=============>                44%] [Cov:============================>      82%][Progress:=============>                44%] [Cov:============================>      82%][Progress:=============>                45%] [Cov:============================>      82%][Progress:=============>                45%] [Cov:============================>      82%][Progress:=============>                46%] [Cov:============================>      82%][Progress:=============>                46%] [Cov:============================>      82%][Progress:=============>                46%] [Cov:============================>      82%][Progress:=============>                46%] [Cov:============================>      82%][Progress:==============>               47%] [Cov:============================>      82%][Progress:==============>               47%] [Cov:============================>      82%][Progress:==============>               47%] [Cov:============================>      82%][Progress:==============>               48%] [Cov:============================>      82%][Progress:==============>               48%] [Cov:============================>      82%][Progress:==============>               48%] [Cov:============================>      82%][Progress:==============>               49%] [Cov:============================>      82%][Progress:==============>               49%] [Cov:============================>      82%][Progress:===============>              50%] [Cov:=============================>     85%][Progress:===============>              50%] [Cov:=============================>     85%][Progress:===============>              50%] [Cov:=============================>     85%][Progress:===============>              51%] [Cov:=============================>     85%][Progress:===============>              51%] [Cov:=============================>     85%][Progress:===============>              51%] [Cov:=============================>     85%][Progress:===============>              52%] [Cov:=============================>     85%][Progress:===============>              52%] [Cov:=============================>     85%][Progress:===============>              53%] [Cov:==============================>    87%][Progress:===============>              53%] [Cov:==============================>    87%][Progress:===============>              53%] [Cov:==============================>    87%][Progress:================>             54%] [Cov:==============================>    87%][Progress:================>             54%] [Cov:==============================>    87%][Progress:================>             54%] [Cov:==============================>    88%][Progress:================>             54%] [Cov:==============================>    88%][Progress:================>             55%] [Cov:==============================>    88%][Progress:================>             55%] [Cov:==============================>    88%][Progress:================>             55%] [Cov:==============================>    88%][Progress:================>             55%] [Cov:==============================>    88%][Progress:================>             56%] [Cov:==============================>    88%][Progress:================>             56%] [Cov:==============================>    88%][Progress:================>             56%] [Cov:==============================>    88%][Progress:================>             56%] [Cov:==============================>    88%][Progress:================>             56%] [Cov:==============================>    88%][Progress:=================>            57%] [Cov:==============================>    88%][Progress:=================>            57%] [Cov:==============================>    88%][Progress:=================>            57%] [Cov:==============================>    88%][Progress:=================>            57%] [Cov:==============================>    88%][Progress:=================>            57%] [Cov:==============================>    88%][Progress:=================>            58%] [Cov:==============================>    88%][Progress:=================>            58%] [Cov:==============================>    88%][Progress:=================>            58%] [Cov:==============================>    88%][Progress:=================>            58%] [Cov:==============================>    88%][Progress:=================>            58%] [Cov:==============================>    88%][Progress:=================>            58%] [Cov:==============================>    88%][Progress:=================>            58%] [Cov:==============================>    88%][Progress:=================>            58%] [Cov:==============================>    88%][Progress:=================>            59%] [Cov:==============================>    88%][Progress:=================>            59%] [Cov:==============================>    88%][Progress:=================>            59%] [Cov:==============================>    88%][Progress:=================>            59%] [Cov:==============================>    88%][Progress:=================>            59%] [Cov:==============================>    88%][Progress:=================>            59%] [Cov:==============================>    88%][Progress:=================>            59%] [Cov:==============================>    88%][Progress:=================>            59%] [Cov:==============================>    88%][Progress:=================>            59%] [Cov:==============================>    88%][Progress:=================>            59%] [Cov:==============================>    88%][Progress:=================>            59%] [Cov:==============================>    88%][Progress:=================>            59%] [Cov:==============================>    88%][Progress:=================>            59%] [Cov:==============================>    88%][Progress:=================>            59%] [Cov:==============================>    88%][Progress:=================>            59%] [Cov:==============================>    88%][Progress:==================>           60%] [Cov:==============================>    88%][Progress:==================>           60%] [Cov:==============================>    88%][Progress:==================>           60%] [Cov:==============================>    88%][Progress:==================>           60%] [Cov:==============================>    88%][Progress:==================>           60%] [Cov:==============================>    88%][Progress:==================>           60%] [Cov:==============================>    88%][Progress:==================>           60%] [Cov:==============================>    88%][Progress:==================>           60%] [Cov:==============================>    88%][Progress:==================>           60%] [Cov:==============================>    88%][Progress:==================>           60%] [Cov:==============================>    88%][Progress:==================>           60%] [Cov:==============================>    88%][Progress:==================>           60%] [Cov:==============================>    88%][Progress:==================>           60%] [Cov:==============================>    88%][Progress:==================>           60%] [Cov:==============================>    88%][Progress:==================>           60%] [Cov:==============================>    88%][Progress:==================>           60%] [Cov:==============================>    88%][Progress:==================>           60%] [Cov:==============================>    88%][Progress:==================>           60%] [Cov:==============================>    88%][Progress:==================>           60%] [Cov:==============================>    88%][Progress:==================>           60%] [Cov:==============================>    88%][Progress:==================>           60%] [Cov:==============================>    88%][Progress:==================>           60%] [Cov:==============================>    88%][Progress:==================>           60%] [Cov:==============================>    88%][Progress:==================>           60%] [Cov:==============================>    88%][Progress:==================>           60%] [Cov:==============================>    88%][Progress:==================>           60%] [Cov:==============================>    88%][Progress:==================>           60%] [Cov:==============================>    88%][Progress:==================>           60%] [Cov:==============================>    88%][Progress:==================>           61%] [Cov:==============================>    88%][Progress:==================>           61%] [Cov:==============================>    88%][Progress:==================>           61%] [Cov:==============================>    88%][Progress:==================>           61%] [Cov:==============================>    88%][Progress:==================>           61%] [Cov:==============================>    88%][Progress:==================>           61%] [Cov:==============================>    88%][Progress:==================>           61%] [Cov:==============================>    88%][Progress:==================>           61%] [Cov:==============================>    88%][Progress:==================>           61%] [Cov:==============================>    88%][Progress:==================>           61%] [Cov:==============================>    88%][Progress:==================>           61%] [Cov:==============================>    88%][Progress:==================>           61%] [Cov:==============================>    88%][Progress:==================>           61%] [Cov:==============================>    88%][Progress:==================>           61%] [Cov:==============================>    88%][Progress:==================>           61%] [Cov:==============================>    88%][Progress:==================>           61%] [Cov:==============================>    88%][Progress:==================>           61%] [Cov:==============================>    88%][Progress:==================>           61%] [Cov:==============================>    88%][Progress:==================>           61%] [Cov:==============================>    88%][Progress:==================>           61%] [Cov:==============================>    88%][Progress:==================>           61%] [Cov:==============================>    88%][Progress:==================>           61%] [Cov:==============================>    88%][Progress:==================>           61%] [Cov:==============================>    88%][Progress:==================>           61%] [Cov:==============================>    88%][Progress:==================>           62%] [Cov:==============================>    88%][Progress:==================>           62%] [Cov:==============================>    88%][Progress:==================>           62%] [Cov:==============================>    88%][Progress:==================>           62%] [Cov:==============================>    88%][Progress:==================>           62%] [Cov:==============================>    88%][Progress:==================>           62%] [Cov:==============================>    88%][Progress:==================>           62%] [Cov:==============================>    88%][Progress:==================>           62%] [Cov:==============================>    88%][Progress:==================>           62%] [Cov:==============================>    88%][Progress:==================>           62%] [Cov:==============================>    88%][Progress:==================>           62%] [Cov:==============================>    88%][Progress:==================>           62%] [Cov:==============================>    88%][Progress:==================>           62%] [Cov:==============================>    88%][Progress:==================>           62%] [Cov:==============================>    88%][Progress:==================>           62%] [Cov:==============================>    88%][Progress:==================>           62%] [Cov:==============================>    88%][Progress:==================>           62%] [Cov:==============================>    88%][Progress:==================>           62%] [Cov:==============================>    88%][Progress:==================>           62%] [Cov:==============================>    88%][Progress:==================>           62%] [Cov:==============================>    88%][Progress:==================>           62%] [Cov:==============================>    88%][Progress:==================>           62%] [Cov:==============================>    88%][Progress:==================>           62%] [Cov:==============================>    88%][Progress:==================>           62%] [Cov:==============================>    88%][Progress:==================>           62%] [Cov:==============================>    88%][Progress:==================>           62%] [Cov:==============================>    88%][Progress:==================>           62%] [Cov:==============================>    88%][Progress:==================>           62%] [Cov:==============================>    88%][Progress:==================>           62%] [Cov:==============================>    88%][Progress:==================>           63%] [Cov:==============================>    88%][Progress:==================>           63%] [Cov:===============================>   90%][Progress:==================>           63%] [Cov:===============================>   90%][Progress:==================>           63%] [Cov:===============================>   90%][Progress:==================>           63%] [Cov:===============================>   90%][Progress:==================>           63%] [Cov:===============================>   90%][Progress:==================>           63%] [Cov:===============================>   91%][Progress:==================>           63%] [Cov:===============================>   91%][Progress:==================>           63%] [Cov:===============================>   91%][Progress:==================>           63%] [Cov:===============================>   91%][Progress:==================>           63%] [Cov:===============================>   91%][Progress:==================>           63%] [Cov:===============================>   91%][Progress:==================>           63%] [Cov:===============================>   91%][Progress:==================>           63%] [Cov:===============================>   91%][Progress:==================>           63%] [Cov:===============================>   91%][Progress:==================>           63%] [Cov:===============================>   91%][Progress:==================>           63%] [Cov:===============================>   91%][Progress:==================>           63%] [Cov:===============================>   91%][Progress:==================>           63%] [Cov:===============================>   91%][Progress:==================>           63%] [Cov:===============================>   91%][Progress:==================>           63%] [Cov:===============================>   91%][Progress:==================>           63%] [Cov:================================>  94%][Progress:==================>           63%] [Cov:================================>  94%][Progress:==================>           63%] [Cov:================================>  94%][Progress:==================>           63%] [Cov:================================>  94%][Progress:==================>           63%] [Cov:================================>  94%][Progress:==================>           63%] [Cov:================================>  94%][Progress:==================>           63%] [Cov:================================>  94%][Progress:==================>           63%] [Cov:================================>  94%][Progress:==================>           63%] [Cov:================================>  94%][Progress:===================>          64%] [Cov:================================>  94%][Progress:===================>          64%] [Cov:================================>  94%][Progress:===================>          64%] [Cov:================================>  94%][Progress:===================>          64%] [Cov:================================>  94%][Progress:===================>          64%] [Cov:================================>  94%][Progress:===================>          64%] [Cov:================================>  94%][Progress:===================>          64%] [Cov:================================>  94%][Progress:===================>          64%] [Cov:================================>  94%][Progress:===================>          64%] [Cov:================================>  94%][Progress:===================>          64%] [Cov:================================>  94%][Progress:===================>          64%] [Cov:================================>  94%][Progress:===================>          64%] [Cov:================================>  94%][Progress:===================>          64%] [Cov:================================>  94%][Progress:===================>          64%] [Cov:================================>  94%][Progress:===================>          64%] [Cov:================================>  94%][Progress:===================>          64%] [Cov:================================>  94%][Progress:===================>          64%] [Cov:================================>  94%][Progress:===================>          64%] [Cov:================================>  94%][Progress:===================>          64%] [Cov:================================>  94%][Progress:===================>          64%] [Cov:================================>  94%][Progress:===================>          64%] [Cov:================================>  94%][Progress:===================>          64%] [Cov:================================>  94%][Progress:===================>          64%] [Cov:================================>  94%][Progress:===================>          64%] [Cov:================================>  94%][Progress:===================>          64%] [Cov:================================>  94%][Progress:===================>          64%] [Cov:================================>  94%][Progress:===================>          64%] [Cov:================================>  94%][Progress:===================>          64%] [Cov:================================>  94%][Progress:===================>          64%] [Cov:================================>  94%][Progress:===================>          65%] [Cov:================================>  94%][Progress:===================>          65%] [Cov:================================>  94%][Progress:===================>          65%] [Cov:================================>  94%][Progress:===================>          65%] [Cov:================================>  94%][Progress:===================>          65%] [Cov:================================>  94%][Progress:===================>          65%] [Cov:================================>  94%][Progress:===================>          65%] [Cov:================================>  94%][Progress:===================>          66%] [Cov:================================>  94%][Progress:===================>          66%] [Cov:================================>  94%][Progress:===================>          66%] [Cov:================================>  94%][Progress:===================>          66%] [Cov:================================>  94%][Progress:====================>         67%] [Cov:================================>  94%][Progress:====================>         67%] [Cov:================================>  94%][Progress:====================>         67%] [Cov:================================>  94%][Progress:====================>         68%] [Cov:================================>  94%][Progress:====================>         68%] [Cov:================================>  94%][Progress:====================>         68%] [Cov:================================>  94%][Progress:====================>         69%] [Cov:================================>  94%][Progress:====================>         69%] [Cov:================================>  94%][Progress:====================>         69%] [Cov:================================>  94%][Progress:====================>         69%] [Cov:================================>  94%][Progress:====================>         69%] [Cov:================================>  94%][Progress:=====================>        70%] [Cov:================================>  94%][Progress:=====================>        70%] [Cov:================================>  94%][Progress:=====================>        71%] [Cov:================================>  94%][Progress:=====================>        72%] [Cov:================================>  94%][Progress:=====================>        72%] [Cov:================================>  94%][Progress:=====================>        73%] [Cov:================================>  94%][Progress:=====================>        73%] [Cov:================================>  94%][Progress:======================>       74%] [Cov:================================>  94%][Progress:======================>       74%] [Cov:================================>  94%][Progress:======================>       74%] [Cov:================================>  94%][Progress:======================>       74%] [Cov:================================>  94%][Progress:======================>       74%] [Cov:================================>  94%][Progress:======================>       74%] [Cov:================================>  94%][Progress:======================>       74%] [Cov:================================>  94%][Progress:======================>       74%] [Cov:================================>  94%][Progress:======================>       74%] [Cov:================================>  94%][Progress:======================>       74%] [Cov:================================>  94%][Progress:======================>       75%] [Cov:================================>  94%][Progress:======================>       75%] [Cov:================================>  94%][Progress:======================>       75%] [Cov:================================>  94%][Progress:======================>       75%] [Cov:================================>  94%][Progress:======================>       75%] [Cov:================================>  94%][Progress:======================>       75%] [Cov:================================>  94%][Progress:======================>       75%] [Cov:================================>  94%][Progress:======================>       75%] [Cov:================================>  94%][Progress:======================>       75%] [Cov:================================>  94%][Progress:======================>       75%] [Cov:================================>  94%][Progress:======================>       75%] [Cov:================================>  94%][Progress:======================>       75%] [Cov:================================>  94%][Progress:======================>       75%] [Cov:================================>  94%][Progress:======================>       75%] [Cov:================================>  94%][Progress:======================>       75%] [Cov:================================>  94%][Progress:======================>       75%] [Cov:================================>  94%][Progress:======================>       75%] [Cov:================================>  94%][Progress:======================>       75%] [Cov:================================>  94%][Progress:======================>       75%] [Cov:================================>  94%][Progress:======================>       75%] [Cov:================================>  94%][Progress:======================>       75%] [Cov:================================>  94%][Progress:======================>       75%] [Cov:================================>  94%][Progress:======================>       75%] [Cov:================================>  94%][Progress:======================>       75%] [Cov:================================>  94%][Progress:======================>       75%] [Cov:================================>  94%][Progress:======================>       75%] [Cov:================================>  94%][Progress:======================>       75%] [Cov:================================>  94%][Progress:======================>       75%] [Cov:================================>  94%][Progress:======================>       76%] [Cov:================================>  94%][Progress:======================>       76%] [Cov:================================>  94%][Progress:======================>       76%] [Cov:================================>  94%][Progress:======================>       76%] [Cov:================================>  94%][Progress:======================>       76%] [Cov:================================>  94%][Progress:======================>       76%] [Cov:================================>  94%][Progress:======================>       76%] [Cov:================================>  94%][Progress:======================>       76%] [Cov:================================>  94%][Progress:======================>       76%] [Cov:================================>  94%][Progress:======================>       76%] [Cov:================================>  94%][Progress:======================>       76%] [Cov:================================>  94%][Progress:======================>       76%] [Cov:================================>  94%][Progress:======================>       76%] [Cov:================================>  94%][Progress:======================>       76%] [Cov:================================>  94%][Progress:======================>       76%] [Cov:================================>  94%][Progress:======================>       76%] [Cov:================================>  94%][Progress:======================>       76%] [Cov:================================>  94%][Progress:======================>       76%] [Cov:================================>  94%][Progress:======================>       76%] [Cov:================================>  94%][Progress:======================>       76%] [Cov:================================>  94%][Progress:======================>       76%] [Cov:================================>  94%][Progress:======================>       76%] [Cov:================================>  94%][Progress:======================>       76%] [Cov:================================>  94%][Progress:======================>       76%] [Cov:================================>  94%][Progress:======================>       76%] [Cov:================================>  94%][Progress:======================>       76%] [Cov:================================>  94%][Progress:=======================>      77%] [Cov:================================>  94%][Progress:=======================>      77%] [Cov:================================>  94%][Progress:=======================>      77%] [Cov:================================>  94%][Progress:=======================>      77%] [Cov:================================>  94%][Progress:=======================>      77%] [Cov:================================>  94%][Progress:=======================>      77%] [Cov:================================>  94%][Progress:=======================>      77%] [Cov:================================>  94%][Progress:=======================>      77%] [Cov:================================>  94%][Progress:=======================>      77%] [Cov:================================>  94%][Progress:=======================>      77%] [Cov:================================>  94%][Progress:=======================>      77%] [Cov:================================>  94%][Progress:=======================>      77%] [Cov:================================>  94%][Progress:=======================>      77%] [Cov:================================>  94%][Progress:=======================>      77%] [Cov:================================>  94%][Progress:=======================>      77%] [Cov:================================>  94%][Progress:=======================>      77%] [Cov:================================>  94%][Progress:=======================>      77%] [Cov:================================>  94%][Progress:=======================>      77%] [Cov:================================>  94%][Progress:=======================>      77%] [Cov:================================>  94%][Progress:=======================>      77%] [Cov:================================>  94%][Progress:=======================>      77%] [Cov:================================>  94%][Progress:=======================>      77%] [Cov:================================>  94%][Progress:=======================>      77%] [Cov:================================>  94%][Progress:=======================>      77%] [Cov:================================>  94%][Progress:=======================>      77%] [Cov:================================>  94%][Progress:=======================>      77%] [Cov:================================>  94%][Progress:=======================>      77%] [Cov:================================>  94%][Progress:=======================>      77%] [Cov:================================>  94%][Progress:=======================>      77%] [Cov:================================>  94%][Progress:=======================>      77%] [Cov:================================>  94%][Progress:=======================>      78%] [Cov:================================>  94%][Progress:=======================>      78%] [Cov:================================>  94%][Progress:=======================>      78%] [Cov:================================>  94%][Progress:=======================>      78%] [Cov:================================>  94%][Progress:=======================>      78%] [Cov:================================>  94%][Progress:=======================>      78%] [Cov:================================>  94%][Progress:=======================>      78%] [Cov:================================>  94%][Progress:=======================>      78%] [Cov:================================>  94%][Progress:=======================>      78%] [Cov:================================>  94%][Progress:=======================>      78%] [Cov:================================>  94%][Progress:=======================>      78%] [Cov:================================>  94%][Progress:=======================>      78%] [Cov:================================>  94%][Progress:=======================>      78%] [Cov:================================>  94%][Progress:=======================>      78%] [Cov:================================>  94%][Progress:=======================>      78%] [Cov:================================>  94%][Progress:=======================>      78%] [Cov:================================>  94%][Progress:=======================>      78%] [Cov:================================>  94%][Progress:=======================>      78%] [Cov:================================>  94%][Progress:=======================>      78%] [Cov:================================>  94%][Progress:=======================>      78%] [Cov:================================>  94%][Progress:=======================>      78%] [Cov:================================>  94%][Progress:=======================>      78%] [Cov:================================>  94%][Progress:=======================>      78%] [Cov:================================>  94%][Progress:=======================>      78%] [Cov:================================>  94%][Progress:=======================>      78%] [Cov:================================>  94%][Progress:=======================>      78%] [Cov:================================>  94%][Progress:=======================>      78%] [Cov:================================>  94%][Progress:=======================>      78%] [Cov:================================>  94%][Progress:=======================>      78%] [Cov:================================>  94%][Progress:=======================>      78%] [Cov:================================>  94%][Progress:=======================>      78%] [Cov:================================>  94%][Progress:=======================>      78%] [Cov:================================>  94%][Progress:=======================>      79%] [Cov:================================>  94%][Progress:=======================>      79%] [Cov:================================>  94%][Progress:=======================>      79%] [Cov:================================>  94%][Progress:=======================>      79%] [Cov:================================>  94%][Progress:=======================>      79%] [Cov:================================>  94%][Progress:=======================>      79%] [Cov:================================>  94%][Progress:=======================>      79%] [Cov:================================>  94%][Progress:=======================>      79%] [Cov:================================>  94%][Progress:=======================>      79%] [Cov:================================>  94%][Progress:=======================>      79%] [Cov:================================>  94%][Progress:=======================>      79%] [Cov:================================>  94%][Progress:=======================>      79%] [Cov:================================>  94%][Progress:=======================>      79%] [Cov:================================>  94%][Progress:=======================>      79%] [Cov:================================>  94%][Progress:=======================>      79%] [Cov:================================>  94%][Progress:=======================>      79%] [Cov:================================>  94%][Progress:=======================>      79%] [Cov:================================>  94%][Progress:=======================>      79%] [Cov:================================>  94%][Progress:=======================>      79%] [Cov:================================>  94%][Progress:=======================>      79%] [Cov:================================>  94%][Progress:=======================>      79%] [Cov:================================>  94%][Progress:=======================>      79%] [Cov:================================>  94%][Progress:=======================>      79%] [Cov:================================>  94%][Progress:=======================>      79%] [Cov:================================>  94%][Progress:=======================>      79%] [Cov:================================>  94%][Progress:=======================>      79%] [Cov:================================>  94%][Progress:=======================>      79%] [Cov:================================>  94%][Progress:=======================>      79%] [Cov:================================>  94%][Progress:=======================>      79%] [Cov:================================>  94%][Progress:========================>     80%] [Cov:================================>  94%][Progress:========================>     80%] [Cov:================================>  94%][Progress:========================>     80%] [Cov:================================>  94%][Progress:========================>     80%] [Cov:================================>  94%][Progress:========================>     80%] [Cov:================================>  94%][Progress:========================>     80%] [Cov:================================>  94%][Progress:========================>     80%] [Cov:================================>  94%][Progress:========================>     80%] [Cov:================================>  94%][Progress:========================>     80%] [Cov:================================>  94%][Progress:========================>     80%] [Cov:================================>  94%][Progress:========================>     80%] [Cov:================================>  94%][Progress:========================>     80%] [Cov:================================>  94%][Progress:========================>     80%] [Cov:================================>  94%][Progress:========================>     80%] [Cov:================================>  94%][Progress:========================>     80%] [Cov:================================>  94%][Progress:========================>     81%] [Cov:================================>  94%][Progress:========================>     81%] [Cov:================================>  94%][Progress:========================>     81%] [Cov:================================>  94%][Progress:========================>     82%] [Cov:================================>  94%][Progress:========================>     82%] [Cov:================================>  94%][Progress:========================>     82%] [Cov:================================>  94%][Progress:========================>     83%] [Cov:================================>  94%][Progress:========================>     83%] [Cov:================================>  94%][Progress:=========================>    84%] [Cov:================================>  94%][Progress:=========================>    84%] [Cov:================================>  94%][Progress:=========================>    84%] [Cov:================================>  94%][Progress:=========================>    85%] [Cov:================================>  94%][Progress:=========================>    85%] [Cov:================================>  94%][Progress:=========================>    85%] [Cov:================================>  94%][Progress:=========================>    86%] [Cov:================================>  94%][Progress:=========================>    86%] [Cov:================================>  94%][Progress:==========================>   87%] [Cov:================================>  94%][Progress:==========================>   87%] [Cov:================================>  94%][Progress:==========================>   87%] [Cov:================================>  94%][Progress:==========================>   88%] [Cov:================================>  94%][Progress:==========================>   88%] [Cov:================================>  94%][Progress:==========================>   89%] [Cov:================================>  94%][Progress:==========================>   89%] [Cov:================================>  94%][Progress:==========================>   89%] [Cov:================================>  94%][Progress:==========================>   89%] [Cov:================================>  94%][Progress:==========================>   89%] [Cov:================================>  94%][Progress:===========================>  90%] [Cov:================================>  94%][Progress:===========================>  90%] [Cov:================================>  94%][Progress:===========================>  90%] [Cov:================================>  94%][Progress:===========================>  90%] [Cov:================================>  94%][Progress:===========================>  90%] [Cov:================================>  94%][Progress:===========================>  91%] [Cov:================================>  94%][Progress:===========================>  91%] [Cov:================================>  94%][Progress:===========================>  92%] [Cov:================================>  94%][Progress:===========================>  92%] [Cov:================================>  94%][Progress:===========================>  92%] [Cov:================================>  94%][Progress:===========================>  93%] [Cov:================================>  94%][Progress:===========================>  93%] [Cov:================================>  94%][Progress:===========================>  93%] [Cov:================================>  94%][Progress:===========================>  93%] [Cov:================================>  94%][Progress:===========================>  93%] [Cov:================================>  94%][Progress:============================> 94%] [Cov:================================>  94%][Progress:============================> 94%] [Cov:================================>  94%][Progress:============================> 94%] [Cov:================================>  94%][Progress:============================> 94%] [Cov:================================>  94%][Progress:============================> 94%] [Cov:================================>  94%][Progress:============================> 94%] [Cov:================================>  94%][Progress:============================> 95%] [Cov:================================>  94%][Progress:============================> 95%] [Cov:================================>  94%][Progress:============================> 95%] [Cov:================================>  94%][Progress:============================> 95%] [Cov:================================>  94%][Progress:============================> 96%] [Cov:================================>  94%][Progress:============================> 96%] [Cov:================================>  94%][Progress:============================> 96%] [Cov:================================>  94%][Progress:============================> 96%] [Cov:================================>  94%][Progress:=============================>97%] [Cov:================================>  94%][Progress:=============================>97%] [Cov:================================>  94%][Progress:=============================>97%] [Cov:================================>  94%][Progress:=============================>98%] [Cov:================================>  94%][Progress:=============================>98%] [Cov:================================>  94%][Progress:=============================>98%] [Cov:================================>  94%][Progress:=============================>98%] [Cov:================================>  94%][Progress:=============================>99%] [Cov:================================>  94%][Progress:=============================>99%] [Cov:================================>  94%][Progress:=============================>99%] [Cov:================================>  94%][Progress:=============================>99%] [Cov:================================>  94%][Progress:==============================100%] [Cov:================================>  94%][Progress:==============================100%] [Cov:================================>  94%][Progress:==============================100%] [Cov:================================>  94%][Progress:==============================100%] [Cov:================================>  94%][Progress:==============================100%] [Cov:================================>  94%][Progress:==============================100%] [Cov:================================>  94%][Progress:==============================100%] [Cov:================================>  94%]
* Search finished after 101s and 614 generations, 289170 statements, best individual has fitness: 10.0
* Generated before the refinement 26 tests with total length 104
statement is: de.devcity.parseargs.ArgsParser()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.devcity.parseargs.ArgsParser
statement code is: ArgsParser argsParser = new ArgsParser()
statement is: getArgs()[Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class [Ljava.lang.String;
statement code is: String[] args = argsParser.getArgs()
test data is: ArgsParser argsParser = new ArgsParser();
argsParser.getArgs();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        ArgsParser argsParser = new ArgsParser();
        argsParser.getArgs(new String[]{ "-a", "10", "-b", "20" });
    }
}
statement is: ArgsParser argsParser = new ArgsParser(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: argsParser.getArgs(new String[]{ "-a", "10", "-b", "20" }), class spoon.support.reflect.code.CtInvocationImpl
invocation is: argsParser.getArgs(new String[]{ "-a", "10", "-b", "20" }) target is: argsParser method is: getArgs(java.lang.String[])
TestCase is: ArgsParser argsParser = new ArgsParser();

statement is: org.evosuite.testcase.statements.ArrayStatement@8a9cb45a type is: class org.evosuite.testcase.statements.ArrayStatement return type class [Ljava.lang.String;
statement code is: String[] stringArray = new String[6]
statement is: de.devcity.parseargs.ArgsParser([Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.devcity.parseargs.ArgsParser
statement code is: ArgsParser argsParser = new ArgsParser(arg0)
statement is: getArgsCount()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int argsCount = argsParser.getArgsCount()
test data is: String[] stringArray = new String[6];
ArgsParser argsParser = new ArgsParser(stringArray);
argsParser.getArgsCount();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        String[] stringArray = new String[10];
        stringArray[0] = "abcdefghijklmnopqrstuvwxyz";
        stringArray[1] = "-a";
        stringArray[2] = "-b";
        stringArray[3] = "def";
        stringArray[4] = "--optionA";
        stringArray[5] = "--optionB=valueB";
        stringArray[6] = "";
        stringArray[7] = null;
        stringArray[8] = "This is a test string.";
        stringArray[9] = "This is another test string!";
        ArgsParser argsParser = new ArgsParser(stringArray);
        assertEquals(10, argsParser.getArgsCount());
    }
}
statement is: String[] stringArray = new String[10], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [10] Ct is: String[] stringArray = new String[6] isAssignment: false Array: new String[10] Elements: []
lengths: [6] [10]
Their type are: class [Ljava.lang.String; String[]
statement is: stringArray[0] = "abcdefghijklmnopqrstuvwxyz", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"abcdefghijklmnopqrstuvwxyz" Ct is: stringArray[0] = "abcdefghijklmnopqrstuvwxyz"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[1] = "-a", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[1] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"-a" Ct is: stringArray[1] = "-a"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[2] = "-b", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[2] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"-b" Ct is: stringArray[2] = "-b"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[3] = "def", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[3] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"def" Ct is: stringArray[3] = "def"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[4] = "--optionA", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[4] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"--optionA" Ct is: stringArray[4] = "--optionA"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[5] = "--optionB=valueB", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[5] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"--optionB=valueB" Ct is: stringArray[5] = "--optionB=valueB"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[6] = "", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[6] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"" Ct is: stringArray[6] = ""
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[7] = null, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[7] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:null Ct is: stringArray[7] = null
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[8] = "This is a test string.", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[8] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"This is a test string." Ct is: stringArray[8] = "This is a test string."
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[9] = "This is another test string!", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[9] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"This is another test string!" Ct is: stringArray[9] = "This is another test string!"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: ArgsParser argsParser = new ArgsParser(stringArray), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: assertEquals(10, argsParser.getArgsCount()), class spoon.support.reflect.code.CtInvocationImpl
invocation is: assertEquals(10, argsParser.getArgsCount()) target is:  method is: assertEquals(int,<unknown>)
TestCase is: String[] stringArray = new String[6];
ArgsParser argsParser = new ArgsParser(stringArray);

statement is: de.devcity.parseargs.ArgsParser()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.devcity.parseargs.ArgsParser
statement code is: ArgsParser argsParser = new ArgsParser()
statement is: setArgs([Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: argsParser.setArgs((String[]) null)
test data is: ArgsParser argsParser = new ArgsParser();
argsParser.setArgs((String[]) null);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        ArgsParser argsParser = new ArgsParser();
        argsParser.setArgs(new String[]{ "-a", "-b", "--c", "-d" });
    }
}
statement is: ArgsParser argsParser = new ArgsParser(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: argsParser.setArgs(new String[]{ "-a", "-b", "--c", "-d" }), class spoon.support.reflect.code.CtInvocationImpl
invocation is: argsParser.setArgs(new String[]{ "-a", "-b", "--c", "-d" }) target is: argsParser method is: setArgs(java.lang.String[])
source statement: de.devcity.parseargs.ArgsParser()V callee: VariableReference: Statement 0, type de.devcity.parseargs.ArgsParserindex is: 0
Matched Method is: setArgs([Ljava/lang/String;)V
i 0 Parameters size() 0 Num of Method Parameters: 1
TestCase is: ArgsParser argsParser = new ArgsParser();
String[] stringArray = null;
argsParser.setArgs(stringArray);

statement is: org.evosuite.testcase.statements.ArrayStatement@9bea9ff9 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [Ljava.lang.String;
statement code is: String[] stringArray = new String[6]
statement is: de.devcity.parseargs.ArgsParser([Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.devcity.parseargs.ArgsParser
statement code is: ArgsParser argsParser = new ArgsParser(arg0)
statement is: getArgsLeftCount()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int argsLeftCount = argsParser.getArgsLeftCount()
test data is: String[] stringArray = new String[6];
ArgsParser argsParser = new ArgsParser(stringArray);
argsParser.getArgsLeftCount();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        String[] stringArray = new String[]{ "-i", "input_file_100mb.txt", "-o", "output_file_5gb.txt", "-f", "--flag" };
        ArgsParser argsParser = new ArgsParser(stringArray);
        assertEquals(2, argsParser.getArgsLeftCount());
    }
}
statement is: String[] stringArray = new String[]{ "-i", "input_file_100mb.txt", "-o", "output_file_5gb.txt", "-f", "--flag" }, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [] Ct is: String[] stringArray = new String[6] isAssignment: false Array: new String[]{ "-i", "input_file_100mb.txt", "-o", "output_file_5gb.txt", "-f", "--flag" } Elements: ["-i", "input_file_100mb.txt", "-o", "output_file_5gb.txt", "-f", "--flag"]
lengths: [6] []
statement is: ArgsParser argsParser = new ArgsParser(stringArray), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: de.devcity.parseargs.ArgsParser([Ljava/lang/String;)V
statement is: assertEquals(2, argsParser.getArgsLeftCount()), class spoon.support.reflect.code.CtInvocationImpl
invocation is: assertEquals(2, argsParser.getArgsLeftCount()) target is:  method is: assertEquals(int,<unknown>)
statement is: org.evosuite.testcase.statements.ArrayStatement@b6ef83bb type is: class org.evosuite.testcase.statements.ArrayStatement return type class [Ljava.lang.String;
statement code is: String[] stringArray = new String[6]
statement is: org.evosuite.testcase.statements.AssignmentStatement@db8d291a type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.String
statement code is: stringArray[0] = "----"
statement is: de.devcity.parseargs.ArgsParser([Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.devcity.parseargs.ArgsParser
statement code is: ArgsParser argsParser = new ArgsParser(arg0)
statement is: getArgsLeftCount()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int argsLeftCount = argsParser.getArgsLeftCount()
test data is: String[] stringArray = new String[6];
stringArray[0] = "----";
ArgsParser argsParser = new ArgsParser(stringArray);
argsParser.getArgsLeftCount();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        String[] stringArray = new String[6];
        stringArray[0] = "-a";// Using -a as the first argument to demonstrate that getArgsLeftCount() returns 5

        ArgsParser argsParser = new ArgsParser(stringArray);
        int count = argsParser.getArgsLeftCount();
        assertEquals(5, count);// Testing that the correct number of arguments are left }}

    }
}
statement is: String[] stringArray = new String[6], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [6] Ct is: String[] stringArray = new String[6] isAssignment: false Array: new String[6] Elements: []
lengths: [6] [6]
Their type are: class [Ljava.lang.String; String[]
statement is: stringArray[0] = "-a"// Using -a as the first argument to demonstrate that getArgsLeftCount() returns 5
, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"-a" Ct is: stringArray[0] = "-a"// Using -a as the first argument to demonstrate that getArgsLeftCount() returns 5

target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: ArgsParser argsParser = new ArgsParser(stringArray), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: int count = argsParser.getArgsLeftCount(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: argsParser.getArgsLeftCount() target is: argsParser method is: getArgsLeftCount()
source statement: de.devcity.parseargs.ArgsParser([Ljava/lang/String;)V callee: VariableReference: Statement 2, type de.devcity.parseargs.ArgsParserindex is: 3
Matched Method is: getArgsLeftCount()I
statement is: assertEquals(5, count)// Testing that the correct number of arguments are left }}
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: assertEquals(5, count)// Testing that the correct number of arguments are left }}
 target is:  method is: assertEquals(int,int)
TestCase is: String[] stringArray = new String[6];
String string = "-a";
stringArray[0] = string;
ArgsParser argsParser = new ArgsParser(stringArray);
((ArgsParser) stringArray[0]).getArgsLeftCount();

statement is: org.evosuite.testcase.statements.ArrayStatement@3b012024 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [Ljava.lang.String;
statement code is: String[] stringArray = new String[6]
statement is: org.evosuite.testcase.statements.AssignmentStatement@9e74a8d9 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.String
statement code is: stringArray[0] = "----"
statement is: de.devcity.parseargs.ArgsParser([Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.devcity.parseargs.ArgsParser
statement code is: ArgsParser argsParser = new ArgsParser(arg0)
statement is: parseSwitchArgument(Ljava/lang/String;)Lde/devcity/parseargs/arguments/SwitchArgument; type is: class org.evosuite.testcase.statements.MethodStatement return type class de.devcity.parseargs.arguments.SwitchArgument
statement code is: SwitchArgument parseSwitchArgument = argsParser.parseSwitchArgument("-l|$\"f")
test data is: String[] stringArray = new String[6];
stringArray[0] = "----";
ArgsParser argsParser = new ArgsParser(stringArray);
argsParser.parseSwitchArgument("-l|$\"f");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        String[] stringArray = new String[6];
        stringArray[0] = "--long-option";
        ArgsParser argsParser = new ArgsParser(stringArray);
        argsParser.parseSwitchArgument("--long-option");
    }
}
statement is: String[] stringArray = new String[6], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [6] Ct is: String[] stringArray = new String[6] isAssignment: false Array: new String[6] Elements: []
lengths: [6] [6]
Their type are: class [Ljava.lang.String; String[]
statement is: stringArray[0] = "--long-option", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"--long-option" Ct is: stringArray[0] = "--long-option"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: ArgsParser argsParser = new ArgsParser(stringArray), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: argsParser.parseSwitchArgument("--long-option"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: argsParser.parseSwitchArgument("--long-option") target is: argsParser method is: parseSwitchArgument(java.lang.String)
source statement: de.devcity.parseargs.ArgsParser([Ljava/lang/String;)V callee: VariableReference: Statement 2, type de.devcity.parseargs.ArgsParserindex is: 3
Matched Method is: parseSwitchArgument(Ljava/lang/String;)Lde/devcity/parseargs/arguments/SwitchArgument;
TestCase is: String[] stringArray = new String[6];
String string = "--long-option";
stringArray[0] = string;
ArgsParser argsParser = new ArgsParser(stringArray);
String string = "--long-option";
((ArgsParser) stringArray[0]).parseSwitchArgument(string);

statement is: org.evosuite.testcase.statements.ArrayStatement@608cd0ac type is: class org.evosuite.testcase.statements.ArrayStatement return type class [Ljava.lang.String;
statement code is: String[] stringArray = new String[2]
statement is: org.evosuite.testcase.statements.AssignmentStatement@edc402cc type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.String
statement code is: stringArray[0] = "----"
statement is: de.devcity.parseargs.ArgsParser([Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.devcity.parseargs.ArgsParser
statement code is: ArgsParser argsParser = new ArgsParser(arg0)
statement is: parseSwitchArgument(Ljava/lang/String;)Lde/devcity/parseargs/arguments/SwitchArgument; type is: class org.evosuite.testcase.statements.MethodStatement return type class de.devcity.parseargs.arguments.SwitchArgument
statement code is: SwitchArgument parseSwitchArgument = argsParser.parseSwitchArgument("--")
test data is: String[] stringArray = new String[2];
stringArray[0] = "----";
ArgsParser argsParser = new ArgsParser(stringArray);
argsParser.parseSwitchArgument("--");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        String[] stringArray = new String[2];
        stringArray[0] = "--help";// Changed to a more descriptive value

        ArgsParser argsParser = new ArgsParser(stringArray);
        argsParser.parseSwitchArgument("--");
    }
}
statement is: String[] stringArray = new String[2], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [2] Ct is: String[] stringArray = new String[2] isAssignment: false Array: new String[2] Elements: []
lengths: [2] [2]
Their type are: class [Ljava.lang.String; String[]
statement is: stringArray[0] = "--help"// Changed to a more descriptive value
, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"--help" Ct is: stringArray[0] = "--help"// Changed to a more descriptive value

target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: ArgsParser argsParser = new ArgsParser(stringArray), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: argsParser.parseSwitchArgument("--"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: argsParser.parseSwitchArgument("--") target is: argsParser method is: parseSwitchArgument(java.lang.String)
source statement: de.devcity.parseargs.ArgsParser([Ljava/lang/String;)V callee: VariableReference: Statement 2, type de.devcity.parseargs.ArgsParserindex is: 3
Matched Method is: parseSwitchArgument(Ljava/lang/String;)Lde/devcity/parseargs/arguments/SwitchArgument;
TestCase is: String[] stringArray = new String[2];
String string = "--help";
stringArray[0] = string;
ArgsParser argsParser = new ArgsParser(stringArray);
String string = "--";
((ArgsParser) stringArray[0]).parseSwitchArgument(string);

statement is: de.devcity.parseargs.ArgsParser()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.devcity.parseargs.ArgsParser
statement code is: ArgsParser argsParser = new ArgsParser()
statement is: org.evosuite.testcase.statements.ArrayStatement@5907c562 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [Ljava.lang.String;
statement code is: String[] stringArray = new String[5]
statement is: org.evosuite.testcase.statements.AssignmentStatement@3479019a type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.String
statement code is: stringArray[0] = "--"
statement is: setArgs([Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: argsParser.setArgs(arg0)
statement is: parseSwitchArgument(Ljava/lang/String;)Lde/devcity/parseargs/arguments/SwitchArgument; type is: class org.evosuite.testcase.statements.MethodStatement return type class de.devcity.parseargs.arguments.SwitchArgument
statement code is: SwitchArgument parseSwitchArgument = argsParser.parseSwitchArgument("-")
test data is: ArgsParser argsParser = new ArgsParser();
String[] stringArray = new String[5];
stringArray[0] = "--";
argsParser.setArgs(stringArray);
argsParser.parseSwitchArgument("-");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        ArgsParser argsParser = new ArgsParser();
        String[] stringArray = new String[5];
        stringArray[0] = "--";
        argsParser.setArgs(stringArray);
        argsParser.parseSwitchArgument("-");
        // Improved test data:
        ArgsParser argsParser = new ArgsParser();
        String[] stringArray = new String[5];
        stringArray[0] = "--";
        argsParser.setArgs(stringArray);
        argsParser.parseSwitchArgument("--help");
    }
}
statement is: ArgsParser argsParser = new ArgsParser(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: String[] stringArray = new String[5], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [5] Ct is: String[] stringArray = new String[5] isAssignment: false Array: new String[5] Elements: []
lengths: [5] [5]
Their type are: class [Ljava.lang.String; String[]
statement is: stringArray[0] = "--", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"--" Ct is: stringArray[0] = "--"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: argsParser.setArgs(stringArray), class spoon.support.reflect.code.CtInvocationImpl
invocation is: argsParser.setArgs(stringArray) target is: argsParser method is: setArgs(java.lang.String[])
source statement: de.devcity.parseargs.ArgsParser()V callee: VariableReference: Statement 0, type de.devcity.parseargs.ArgsParserindex is: 0
Matched Method is: setArgs([Ljava/lang/String;)V
statement is: argsParser.parseSwitchArgument("-"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: argsParser.parseSwitchArgument("-") target is: argsParser method is: parseSwitchArgument(java.lang.String)
source statement: de.devcity.parseargs.ArgsParser()V callee: VariableReference: Statement 0, type de.devcity.parseargs.ArgsParserindex is: 0
Matched Method is: parseSwitchArgument(Ljava/lang/String;)Lde/devcity/parseargs/arguments/SwitchArgument;
statement is: // Improved test data:
ArgsParser argsParser = new ArgsParser(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: String[] stringArray = new String[5], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [5] Ct is: String[] stringArray = new String[5] isAssignment: false Array: new String[5] Elements: []
lengths: [5] [5]
Their type are: class [Ljava.lang.String; String[]
statement is: stringArray[0] = "--", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"--" Ct is: stringArray[0] = "--"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: argsParser.setArgs(stringArray), class spoon.support.reflect.code.CtInvocationImpl
invocation is: argsParser.setArgs(stringArray) target is: argsParser method is: setArgs(java.lang.String[])
source statement: de.devcity.parseargs.ArgsParser()V callee: VariableReference: Statement 0, type de.devcity.parseargs.ArgsParserindex is: 7
Matched Method is: setArgs([Ljava/lang/String;)V
statement is: argsParser.parseSwitchArgument("--help"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: argsParser.parseSwitchArgument("--help") target is: argsParser method is: parseSwitchArgument(java.lang.String)
source statement: de.devcity.parseargs.ArgsParser()V callee: VariableReference: Statement 0, type de.devcity.parseargs.ArgsParserindex is: 7
Matched Method is: parseSwitchArgument(Ljava/lang/String;)Lde/devcity/parseargs/arguments/SwitchArgument;
TestCase is: ArgsParser argsParser = new ArgsParser();
String[] stringArray = new String[5];
String string = "--";
stringArray[0] = string;
argsParser.setArgs(stringArray);
String string = "-";
argsParser.parseSwitchArgument(string);
ArgsParser argsParser = new ArgsParser();
String[] stringArray = new String[5];
String string = "--";
stringArray[0] = string;
argsParser.setArgs(stringArray);
String string = "--help";
argsParser.parseSwitchArgument(string);

statement is: org.evosuite.testcase.statements.ArrayStatement@dcb489e type is: class org.evosuite.testcase.statements.ArrayStatement return type class [Ljava.lang.String;
statement code is: String[] stringArray = new String[1]
statement is: org.evosuite.testcase.statements.AssignmentStatement@d94845de type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.String
statement code is: stringArray[0] = "haT!D-4o<V\""
statement is: de.devcity.parseargs.ArgsParser([Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.devcity.parseargs.ArgsParser
statement code is: ArgsParser argsParser = new ArgsParser(arg0)
statement is: parseSwitchArgument(Ljava/lang/String;)Lde/devcity/parseargs/arguments/SwitchArgument; type is: class org.evosuite.testcase.statements.MethodStatement return type class de.devcity.parseargs.arguments.SwitchArgument
statement code is: SwitchArgument parseSwitchArgument = argsParser.parseSwitchArgument("")
test data is: String[] stringArray = new String[1];
stringArray[0] = "haT!D-4o<V\"";
ArgsParser argsParser = new ArgsParser(stringArray);
argsParser.parseSwitchArgument("");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        String[] stringArray = new String[3];
        stringArray[0] = "--name";
        stringArray[1] = "Jane Doe";
        stringArray[2] = "--age";
        ArgsParser argsParser = new ArgsParser(stringArray);
        argsParser.parseSwitchArgument("");
    }
}
statement is: String[] stringArray = new String[3], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [3] Ct is: String[] stringArray = new String[1] isAssignment: false Array: new String[3] Elements: []
lengths: [1] [3]
Their type are: class [Ljava.lang.String; String[]
statement is: stringArray[0] = "--name", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"--name" Ct is: stringArray[0] = "--name"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[1] = "Jane Doe", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[1] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"Jane Doe" Ct is: stringArray[1] = "Jane Doe"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[2] = "--age", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[2] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"--age" Ct is: stringArray[2] = "--age"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: ArgsParser argsParser = new ArgsParser(stringArray), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: argsParser.parseSwitchArgument(""), class spoon.support.reflect.code.CtInvocationImpl
invocation is: argsParser.parseSwitchArgument("") target is: argsParser method is: parseSwitchArgument(java.lang.String)
source statement: de.devcity.parseargs.ArgsParser([Ljava/lang/String;)V callee: VariableReference: Statement 2, type de.devcity.parseargs.ArgsParserindex is: 7
Matched Method is: parseSwitchArgument(Ljava/lang/String;)Lde/devcity/parseargs/arguments/SwitchArgument;
TestCase is: String[] stringArray = new String[1];
String string = "--name";
stringArray[0] = string;
String string = "Jane Doe";
stringArray[0] = string;
String string = "--age";
stringArray[0] = string;
ArgsParser argsParser = new ArgsParser(stringArray);
String string = "";
((ArgsParser) stringArray[0]).parseSwitchArgument(string);

statement is: de.devcity.parseargs.ArgsParser()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.devcity.parseargs.ArgsParser
statement code is: ArgsParser argsParser = new ArgsParser()
statement is: org.evosuite.testcase.statements.ArrayStatement@5c49c2b8 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [Ljava.lang.String;
statement code is: String[] stringArray = new String[4]
statement is: org.evosuite.testcase.statements.AssignmentStatement@6620c6a0 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.String
statement code is: stringArray[0] = "-J-1)"
statement is: setArgs([Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: argsParser.setArgs(arg0)
statement is: parseSwitchArgument(Ljava/lang/String;)Lde/devcity/parseargs/arguments/SwitchArgument; type is: class org.evosuite.testcase.statements.MethodStatement return type class de.devcity.parseargs.arguments.SwitchArgument
statement code is: SwitchArgument parseSwitchArgument = argsParser.parseSwitchArgument("-")
test data is: ArgsParser argsParser = new ArgsParser();
String[] stringArray = new String[4];
stringArray[0] = "-J-1)";
argsParser.setArgs(stringArray);
argsParser.parseSwitchArgument("-");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        ArgsParser argsParser = new ArgsParser();
        String[] stringArray = new String[4];
        stringArray[0] = "-J-1)";
        argsParser.setArgs(stringArray);
        argsParser.parseSwitchArgument("-");
    }
}
statement is: ArgsParser argsParser = new ArgsParser(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: String[] stringArray = new String[4], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [4] Ct is: String[] stringArray = new String[4] isAssignment: false Array: new String[4] Elements: []
lengths: [4] [4]
Their type are: class [Ljava.lang.String; String[]
statement is: stringArray[0] = "-J-1)", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"-J-1)" Ct is: stringArray[0] = "-J-1)"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: argsParser.setArgs(stringArray), class spoon.support.reflect.code.CtInvocationImpl
invocation is: argsParser.setArgs(stringArray) target is: argsParser method is: setArgs(java.lang.String[])
source statement: de.devcity.parseargs.ArgsParser()V callee: VariableReference: Statement 0, type de.devcity.parseargs.ArgsParserindex is: 0
Matched Method is: setArgs([Ljava/lang/String;)V
statement is: argsParser.parseSwitchArgument("-"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: argsParser.parseSwitchArgument("-") target is: argsParser method is: parseSwitchArgument(java.lang.String)
source statement: de.devcity.parseargs.ArgsParser()V callee: VariableReference: Statement 0, type de.devcity.parseargs.ArgsParserindex is: 0
Matched Method is: parseSwitchArgument(Ljava/lang/String;)Lde/devcity/parseargs/arguments/SwitchArgument;
TestCase is: ArgsParser argsParser = new ArgsParser();
String[] stringArray = new String[4];
String string = "-J-1)";
stringArray[0] = string;
argsParser.setArgs(stringArray);
String string = "-";
argsParser.parseSwitchArgument(string);

statement is: org.evosuite.testcase.statements.ArrayStatement@8b9230c7 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [Ljava.lang.String;
statement code is: String[] stringArray = new String[4]
statement is: org.evosuite.testcase.statements.AssignmentStatement@ce109014 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.String
statement code is: stringArray[2] = "-\f"
statement is: de.devcity.parseargs.ArgsParser([Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.devcity.parseargs.ArgsParser
statement code is: ArgsParser argsParser = new ArgsParser(arg0)
statement is: parseSwitchArgument(Ljava/lang/String;)Lde/devcity/parseargs/arguments/SwitchArgument; type is: class org.evosuite.testcase.statements.MethodStatement return type class de.devcity.parseargs.arguments.SwitchArgument
statement code is: SwitchArgument parseSwitchArgument = argsParser.parseSwitchArgument("-")
test data is: String[] stringArray = new String[4];
stringArray[2] = "-\f";
ArgsParser argsParser = new ArgsParser(stringArray);
argsParser.parseSwitchArgument("-");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        String[] stringArray = new String[4];
        stringArray[2] = "--help";
        ArgsParser argsParser = new ArgsParser(stringArray);
        argsParser.parseSwitchArgument("-");
    }
}
statement is: String[] stringArray = new String[4], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [4] Ct is: String[] stringArray = new String[4] isAssignment: false Array: new String[4] Elements: []
lengths: [4] [4]
Their type are: class [Ljava.lang.String; String[]
statement is: stringArray[2] = "--help", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[2] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"--help" Ct is: stringArray[2] = "--help"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: ArgsParser argsParser = new ArgsParser(stringArray), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: argsParser.parseSwitchArgument("-"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: argsParser.parseSwitchArgument("-") target is: argsParser method is: parseSwitchArgument(java.lang.String)
source statement: de.devcity.parseargs.ArgsParser([Ljava/lang/String;)V callee: VariableReference: Statement 2, type de.devcity.parseargs.ArgsParserindex is: 3
Matched Method is: parseSwitchArgument(Ljava/lang/String;)Lde/devcity/parseargs/arguments/SwitchArgument;
TestCase is: String[] stringArray = new String[4];
String string = "--help";
stringArray[2] = string;
ArgsParser argsParser = new ArgsParser(stringArray);
String string = "-";
((ArgsParser) stringArray[2]).parseSwitchArgument(string);

statement is: org.evosuite.testcase.statements.ArrayStatement@3089eb5f type is: class org.evosuite.testcase.statements.ArrayStatement return type class [Ljava.lang.String;
statement code is: String[] stringArray = new String[8]
statement is: org.evosuite.testcase.statements.AssignmentStatement@9440d375 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.String
statement code is: stringArray[2] = "-"
statement is: de.devcity.parseargs.ArgsParser([Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.devcity.parseargs.ArgsParser
statement code is: ArgsParser argsParser = new ArgsParser(arg0)
statement is: parseSwitchArgument(Ljava/lang/String;)Lde/devcity/parseargs/arguments/SwitchArgument; type is: class org.evosuite.testcase.statements.MethodStatement return type class de.devcity.parseargs.arguments.SwitchArgument
statement code is: SwitchArgument parseSwitchArgument = argsParser.parseSwitchArgument("")
test data is: String[] stringArray = new String[8];
stringArray[2] = "-";
ArgsParser argsParser = new ArgsParser(stringArray);
argsParser.parseSwitchArgument("");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        String[] stringArray = new String[8];
        stringArray[2] = "--no-flag";
        ArgsParser argsParser = new ArgsParser(stringArray);
        argsParser.parseSwitchArgument("");
    }
}
statement is: String[] stringArray = new String[8], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [8] Ct is: String[] stringArray = new String[8] isAssignment: false Array: new String[8] Elements: []
lengths: [8] [8]
Their type are: class [Ljava.lang.String; String[]
statement is: stringArray[2] = "--no-flag", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[2] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"--no-flag" Ct is: stringArray[2] = "--no-flag"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: ArgsParser argsParser = new ArgsParser(stringArray), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: argsParser.parseSwitchArgument(""), class spoon.support.reflect.code.CtInvocationImpl
invocation is: argsParser.parseSwitchArgument("") target is: argsParser method is: parseSwitchArgument(java.lang.String)
source statement: de.devcity.parseargs.ArgsParser([Ljava/lang/String;)V callee: VariableReference: Statement 2, type de.devcity.parseargs.ArgsParserindex is: 3
Matched Method is: parseSwitchArgument(Ljava/lang/String;)Lde/devcity/parseargs/arguments/SwitchArgument;
TestCase is: String[] stringArray = new String[8];
String string = "--no-flag";
stringArray[2] = string;
ArgsParser argsParser = new ArgsParser(stringArray);
String string = "";
((ArgsParser) stringArray[2]).parseSwitchArgument(string);

statement is: de.devcity.parseargs.ArgsParser()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.devcity.parseargs.ArgsParser
statement code is: ArgsParser argsParser = new ArgsParser()
statement is: org.evosuite.testcase.statements.ArrayStatement@954aa561 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [Ljava.lang.String;
statement code is: String[] stringArray = new String[5]
statement is: org.evosuite.testcase.statements.AssignmentStatement@3f82cd41 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.String
statement code is: stringArray[0] = "--"
statement is: setArgs([Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: argsParser.setArgs(arg0)
statement is: parseParameterArgument(Ljava/lang/String;)Lde/devcity/parseargs/arguments/ParameterArgument; type is: class org.evosuite.testcase.statements.MethodStatement return type class de.devcity.parseargs.arguments.ParameterArgument
statement code is: ParameterArgument parseParameterArgument = argsParser.parseParameterArgument("--")
test data is: ArgsParser argsParser = new ArgsParser();
String[] stringArray = new String[5];
stringArray[0] = "--";
argsParser.setArgs(stringArray);
argsParser.parseParameterArgument("--");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        ArgsParser argsParser = new ArgsParser();
        String[] stringArray = new String[5];
        stringArray[0] = "--help";// This is a more descriptive value for the command-line argument that we want to test.

        argsParser.setArgs(stringArray);
        argsParser.parseParameterArgument("--help");
    }
}
statement is: ArgsParser argsParser = new ArgsParser(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: String[] stringArray = new String[5], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [5] Ct is: String[] stringArray = new String[5] isAssignment: false Array: new String[5] Elements: []
lengths: [5] [5]
Their type are: class [Ljava.lang.String; String[]
statement is: stringArray[0] = "--help"// This is a more descriptive value for the command-line argument that we want to test.
, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"--help" Ct is: stringArray[0] = "--help"// This is a more descriptive value for the command-line argument that we want to test.

target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: argsParser.setArgs(stringArray), class spoon.support.reflect.code.CtInvocationImpl
invocation is: argsParser.setArgs(stringArray) target is: argsParser method is: setArgs(java.lang.String[])
source statement: de.devcity.parseargs.ArgsParser()V callee: VariableReference: Statement 0, type de.devcity.parseargs.ArgsParserindex is: 0
Matched Method is: setArgs([Ljava/lang/String;)V
statement is: argsParser.parseParameterArgument("--help"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: argsParser.parseParameterArgument("--help") target is: argsParser method is: parseParameterArgument(java.lang.String)
source statement: de.devcity.parseargs.ArgsParser()V callee: VariableReference: Statement 0, type de.devcity.parseargs.ArgsParserindex is: 0
Matched Method is: parseParameterArgument(Ljava/lang/String;)Lde/devcity/parseargs/arguments/ParameterArgument;
TestCase is: ArgsParser argsParser = new ArgsParser();
String[] stringArray = new String[5];
String string = "--help";
stringArray[0] = string;
argsParser.setArgs(stringArray);
String string = "--help";
argsParser.parseParameterArgument(string);

statement is: org.evosuite.testcase.statements.ArrayStatement@5f00f28e type is: class org.evosuite.testcase.statements.ArrayStatement return type class [Ljava.lang.String;
statement code is: String[] stringArray = new String[6]
statement is: org.evosuite.testcase.statements.AssignmentStatement@ca09cf55 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.String
statement code is: stringArray[0] = "----"
statement is: de.devcity.parseargs.ArgsParser([Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.devcity.parseargs.ArgsParser
statement code is: ArgsParser argsParser = new ArgsParser(arg0)
statement is: parseParameterArgument(Ljava/lang/String;)Lde/devcity/parseargs/arguments/ParameterArgument; type is: class org.evosuite.testcase.statements.MethodStatement return type class de.devcity.parseargs.arguments.ParameterArgument
statement code is: ParameterArgument parseParameterArgument = argsParser.parseParameterArgument("--")
test data is: String[] stringArray = new String[6];
stringArray[0] = "----";
ArgsParser argsParser = new ArgsParser(stringArray);
argsParser.parseParameterArgument("--");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        String[] stringArray = new String[6];
        stringArray[0] = "--help";
        ArgsParser argsParser = new ArgsParser(stringArray);
        argsParser.parseParameterArgument("--");
    }
}
statement is: String[] stringArray = new String[6], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [6] Ct is: String[] stringArray = new String[6] isAssignment: false Array: new String[6] Elements: []
lengths: [6] [6]
Their type are: class [Ljava.lang.String; String[]
statement is: stringArray[0] = "--help", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"--help" Ct is: stringArray[0] = "--help"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: ArgsParser argsParser = new ArgsParser(stringArray), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: argsParser.parseParameterArgument("--"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: argsParser.parseParameterArgument("--") target is: argsParser method is: parseParameterArgument(java.lang.String)
source statement: de.devcity.parseargs.ArgsParser([Ljava/lang/String;)V callee: VariableReference: Statement 2, type de.devcity.parseargs.ArgsParserindex is: 3
Matched Method is: parseParameterArgument(Ljava/lang/String;)Lde/devcity/parseargs/arguments/ParameterArgument;
TestCase is: String[] stringArray = new String[6];
String string = "--help";
stringArray[0] = string;
ArgsParser argsParser = new ArgsParser(stringArray);
String string = "--";
((ArgsParser) stringArray[0]).parseParameterArgument(string);

statement is: org.evosuite.testcase.statements.ArrayStatement@1b26011f type is: class org.evosuite.testcase.statements.ArrayStatement return type class [Ljava.lang.String;
statement code is: String[] stringArray = new String[9]
statement is: org.evosuite.testcase.statements.AssignmentStatement@6650af4d type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.String
statement code is: stringArray[8] = "----"
statement is: de.devcity.parseargs.ArgsParser([Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.devcity.parseargs.ArgsParser
statement code is: ArgsParser argsParser = new ArgsParser(arg0)
statement is: parseParameterArgument(Ljava/lang/String;)Lde/devcity/parseargs/arguments/ParameterArgument; type is: class org.evosuite.testcase.statements.MethodStatement return type class de.devcity.parseargs.arguments.ParameterArgument
statement code is: ParameterArgument parseParameterArgument = argsParser.parseParameterArgument("--")
test data is: String[] stringArray = new String[9];
stringArray[8] = "----";
ArgsParser argsParser = new ArgsParser(stringArray);
argsParser.parseParameterArgument("--");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        String[] stringArray = new String[9];
        stringArray[0] = "arg1";
        stringArray[1] = "arg2";
        stringArray[2] = "-a";
        stringArray[3] = "-b";
        stringArray[4] = "-c";
        stringArray[5] = "123";
        stringArray[6] = "abc";
        stringArray[7] = "--";
        stringArray[8] = "----";
        ArgsParser argsParser = new ArgsParser(stringArray);
        argsParser.parseParameterArgument("-c");
    }
}
statement is: String[] stringArray = new String[9], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [9] Ct is: String[] stringArray = new String[9] isAssignment: false Array: new String[9] Elements: []
lengths: [9] [9]
Their type are: class [Ljava.lang.String; String[]
statement is: stringArray[0] = "arg1", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"arg1" Ct is: stringArray[0] = "arg1"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[1] = "arg2", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[1] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"arg2" Ct is: stringArray[1] = "arg2"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[2] = "-a", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[2] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"-a" Ct is: stringArray[2] = "-a"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[3] = "-b", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[3] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"-b" Ct is: stringArray[3] = "-b"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[4] = "-c", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[4] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"-c" Ct is: stringArray[4] = "-c"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[5] = "123", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[5] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"123" Ct is: stringArray[5] = "123"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[6] = "abc", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[6] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"abc" Ct is: stringArray[6] = "abc"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[7] = "--", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[7] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"--" Ct is: stringArray[7] = "--"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[8] = "----", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[8] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"----" Ct is: stringArray[8] = "----"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: ArgsParser argsParser = new ArgsParser(stringArray), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: argsParser.parseParameterArgument("-c"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: argsParser.parseParameterArgument("-c") target is: argsParser method is: parseParameterArgument(java.lang.String)
source statement: de.devcity.parseargs.ArgsParser([Ljava/lang/String;)V callee: VariableReference: Statement 2, type de.devcity.parseargs.ArgsParserindex is: 19
Matched Method is: parseParameterArgument(Ljava/lang/String;)Lde/devcity/parseargs/arguments/ParameterArgument;
TestCase is: String[] stringArray = new String[9];
String string = "arg1";
stringArray[8] = string;
String string = "arg2";
stringArray[8] = string;
String string = "-a";
stringArray[8] = string;
String string = "-b";
stringArray[8] = string;
String string = "-c";
stringArray[8] = string;
String string = "123";
stringArray[8] = string;
String string = "abc";
stringArray[8] = string;
String string = "--";
stringArray[8] = string;
String string = "----";
stringArray[8] = string;
ArgsParser argsParser = new ArgsParser(stringArray);
String string = "-c";
((ArgsParser) stringArray[8]).parseParameterArgument(string);

statement is: org.evosuite.testcase.statements.ArrayStatement@66d18e40 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [Ljava.lang.String;
statement code is: String[] stringArray = new String[3]
statement is: org.evosuite.testcase.statements.AssignmentStatement@98beeb25 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.String
statement code is: stringArray[0] = "----"
statement is: org.evosuite.testcase.statements.AssignmentStatement@1bf1f2cf type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.String
statement code is: stringArray[1] = "----"
statement is: de.devcity.parseargs.ArgsParser([Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.devcity.parseargs.ArgsParser
statement code is: ArgsParser argsParser = new ArgsParser(arg0)
statement is: parseParameterArgument(Ljava/lang/String;)Lde/devcity/parseargs/arguments/ParameterArgument; type is: class org.evosuite.testcase.statements.MethodStatement return type class de.devcity.parseargs.arguments.ParameterArgument
statement code is: ParameterArgument parseParameterArgument = argsParser.parseParameterArgument("--")
test data is: String[] stringArray = new String[3];
stringArray[0] = "----";
stringArray[1] = "----";
ArgsParser argsParser = new ArgsParser(stringArray);
argsParser.parseParameterArgument("--");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        String[] stringArray = new String[3];
        stringArray[0] = "";
        stringArray[1] = "--help";
        ArgsParser argsParser = new ArgsParser(stringArray);
        argsParser.parseParameterArgument("--");
    }
}
statement is: String[] stringArray = new String[3], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [3] Ct is: String[] stringArray = new String[3] isAssignment: false Array: new String[3] Elements: []
lengths: [3] [3]
Their type are: class [Ljava.lang.String; String[]
statement is: stringArray[0] = "", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"" Ct is: stringArray[0] = ""
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[1] = "--help", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[1] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"--help" Ct is: stringArray[1] = "--help"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: ArgsParser argsParser = new ArgsParser(stringArray), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: argsParser.parseParameterArgument("--"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: argsParser.parseParameterArgument("--") target is: argsParser method is: parseParameterArgument(java.lang.String)
source statement: de.devcity.parseargs.ArgsParser([Ljava/lang/String;)V callee: VariableReference: Statement 3, type de.devcity.parseargs.ArgsParserindex is: 5
Matched Method is: parseParameterArgument(Ljava/lang/String;)Lde/devcity/parseargs/arguments/ParameterArgument;
TestCase is: String[] stringArray = new String[3];
String string = "";
stringArray[0] = string;
String string = "--help";
stringArray[1] = string;
ArgsParser argsParser = new ArgsParser(stringArray);
String string = "--";
((ArgsParser) string).parseParameterArgument(string);

statement is: de.devcity.parseargs.ArgsParser()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.devcity.parseargs.ArgsParser
statement code is: ArgsParser argsParser = new ArgsParser()
statement is: org.evosuite.testcase.statements.ArrayStatement@380a2ea1 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [Ljava.lang.String;
statement code is: String[] stringArray = new String[4]
statement is: org.evosuite.testcase.statements.AssignmentStatement@2f9fb3ea type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.String
statement code is: stringArray[1] = "-"
statement is: setArgs([Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: argsParser.setArgs(arg0)
statement is: parseParameterArgument(Ljava/lang/String;)Lde/devcity/parseargs/arguments/ParameterArgument; type is: class org.evosuite.testcase.statements.MethodStatement return type class de.devcity.parseargs.arguments.ParameterArgument
statement code is: ParameterArgument parseParameterArgument = argsParser.parseParameterArgument("-")
test data is: ArgsParser argsParser = new ArgsParser();
String[] stringArray = new String[4];
stringArray[1] = "-";
argsParser.setArgs(stringArray);
argsParser.parseParameterArgument("-");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        ArgsParser argsParser = new ArgsParser();
        String[] stringArray = new String[4];
        stringArray[1] = "--verbose";
        argsParser.setArgs(stringArray);
        argsParser.parseParameterArgument("--verbose");
    }
}
statement is: ArgsParser argsParser = new ArgsParser(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: String[] stringArray = new String[4], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [4] Ct is: String[] stringArray = new String[4] isAssignment: false Array: new String[4] Elements: []
lengths: [4] [4]
Their type are: class [Ljava.lang.String; String[]
statement is: stringArray[1] = "--verbose", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[1] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"--verbose" Ct is: stringArray[1] = "--verbose"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: argsParser.setArgs(stringArray), class spoon.support.reflect.code.CtInvocationImpl
invocation is: argsParser.setArgs(stringArray) target is: argsParser method is: setArgs(java.lang.String[])
source statement: de.devcity.parseargs.ArgsParser()V callee: VariableReference: Statement 0, type de.devcity.parseargs.ArgsParserindex is: 0
Matched Method is: setArgs([Ljava/lang/String;)V
statement is: argsParser.parseParameterArgument("--verbose"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: argsParser.parseParameterArgument("--verbose") target is: argsParser method is: parseParameterArgument(java.lang.String)
source statement: de.devcity.parseargs.ArgsParser()V callee: VariableReference: Statement 0, type de.devcity.parseargs.ArgsParserindex is: 0
Matched Method is: parseParameterArgument(Ljava/lang/String;)Lde/devcity/parseargs/arguments/ParameterArgument;
TestCase is: ArgsParser argsParser = new ArgsParser();
String[] stringArray = new String[4];
String string = "--verbose";
stringArray[1] = string;
argsParser.setArgs(stringArray);
String string = "--verbose";
argsParser.parseParameterArgument(string);

statement is: org.evosuite.testcase.statements.ArrayStatement@78ac08be type is: class org.evosuite.testcase.statements.ArrayStatement return type class [Ljava.lang.String;
statement code is: String[] stringArray = new String[4]
statement is: org.evosuite.testcase.statements.AssignmentStatement@73b9d260 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.String
statement code is: stringArray[3] = "<-J1)"
statement is: de.devcity.parseargs.ArgsParser([Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.devcity.parseargs.ArgsParser
statement code is: ArgsParser argsParser = new ArgsParser(arg0)
statement is: parseParameterArgument(Ljava/lang/String;)Lde/devcity/parseargs/arguments/ParameterArgument; type is: class org.evosuite.testcase.statements.MethodStatement return type class de.devcity.parseargs.arguments.ParameterArgument
statement code is: ParameterArgument parseParameterArgument = argsParser.parseParameterArgument("-")
test data is: String[] stringArray = new String[4];
stringArray[3] = "<-J1)";
ArgsParser argsParser = new ArgsParser(stringArray);
argsParser.parseParameterArgument("-");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        String[] stringArray = new String[4];
        stringArray[0] = "-";
        stringArray[1] = "<-J1)";
        stringArray[2] = "--input";
        stringArray[3] = "/path/to/file.txt";
        ArgsParser argsParser = new ArgsParser(stringArray);
        argsParser.parseParameterArgument("-");
    }
}
statement is: String[] stringArray = new String[4], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [4] Ct is: String[] stringArray = new String[4] isAssignment: false Array: new String[4] Elements: []
lengths: [4] [4]
Their type are: class [Ljava.lang.String; String[]
statement is: stringArray[0] = "-", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"-" Ct is: stringArray[0] = "-"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[1] = "<-J1)", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[1] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"<-J1)" Ct is: stringArray[1] = "<-J1)"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[2] = "--input", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[2] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"--input" Ct is: stringArray[2] = "--input"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[3] = "/path/to/file.txt", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[3] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"/path/to/file.txt" Ct is: stringArray[3] = "/path/to/file.txt"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: ArgsParser argsParser = new ArgsParser(stringArray), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: argsParser.parseParameterArgument("-"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: argsParser.parseParameterArgument("-") target is: argsParser method is: parseParameterArgument(java.lang.String)
source statement: de.devcity.parseargs.ArgsParser([Ljava/lang/String;)V callee: VariableReference: Statement 2, type de.devcity.parseargs.ArgsParserindex is: 9
Matched Method is: parseParameterArgument(Ljava/lang/String;)Lde/devcity/parseargs/arguments/ParameterArgument;
TestCase is: String[] stringArray = new String[4];
String string = "-";
stringArray[3] = string;
String string = "<-J1)";
stringArray[3] = string;
String string = "--input";
stringArray[3] = string;
String string = "/path/to/file.txt";
stringArray[3] = string;
ArgsParser argsParser = new ArgsParser(stringArray);
String string = "-";
((ArgsParser) stringArray[3]).parseParameterArgument(string);

statement is: org.evosuite.testcase.statements.ArrayStatement@77b3a74 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [Ljava.lang.String;
statement code is: String[] stringArray = new String[9]
statement is: org.evosuite.testcase.statements.AssignmentStatement@9187a415 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.String
statement code is: stringArray[1] = "--"
statement is: de.devcity.parseargs.ArgsParser([Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.devcity.parseargs.ArgsParser
statement code is: ArgsParser argsParser = new ArgsParser(arg0)
statement is: parseParameterArgument(Ljava/lang/String;)Lde/devcity/parseargs/arguments/ParameterArgument; type is: class org.evosuite.testcase.statements.MethodStatement return type class de.devcity.parseargs.arguments.ParameterArgument
statement code is: ParameterArgument parseParameterArgument = argsParser.parseParameterArgument("")
test data is: String[] stringArray = new String[9];
stringArray[1] = "--";
ArgsParser argsParser = new ArgsParser(stringArray);
argsParser.parseParameterArgument("");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        String[] stringArray = new String[9];
        stringArray[1] = "emptyString";
        ArgsParser argsParser = new ArgsParser(stringArray);
        argsParser.parseParameterArgument("doubleHyphen");
    }
}
statement is: String[] stringArray = new String[9], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [9] Ct is: String[] stringArray = new String[9] isAssignment: false Array: new String[9] Elements: []
lengths: [9] [9]
Their type are: class [Ljava.lang.String; String[]
statement is: stringArray[1] = "emptyString", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[1] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"emptyString" Ct is: stringArray[1] = "emptyString"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: ArgsParser argsParser = new ArgsParser(stringArray), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: argsParser.parseParameterArgument("doubleHyphen"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: argsParser.parseParameterArgument("doubleHyphen") target is: argsParser method is: parseParameterArgument(java.lang.String)
source statement: de.devcity.parseargs.ArgsParser([Ljava/lang/String;)V callee: VariableReference: Statement 2, type de.devcity.parseargs.ArgsParserindex is: 3
Matched Method is: parseParameterArgument(Ljava/lang/String;)Lde/devcity/parseargs/arguments/ParameterArgument;
TestCase is: String[] stringArray = new String[9];
String string = "emptyString";
stringArray[1] = string;
ArgsParser argsParser = new ArgsParser(stringArray);
String string = "doubleHyphen";
((ArgsParser) stringArray[1]).parseParameterArgument(string);

statement is: org.evosuite.testcase.statements.ArrayStatement@115b352f type is: class org.evosuite.testcase.statements.ArrayStatement return type class [Ljava.lang.String;
statement code is: String[] stringArray = new String[4]
statement is: org.evosuite.testcase.statements.AssignmentStatement@9bb17dcd type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.String
statement code is: stringArray[2] = "-f"
statement is: org.evosuite.testcase.statements.AssignmentStatement@ebd7ac44 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.String
statement code is: stringArray[3] = "-f"
statement is: de.devcity.parseargs.ArgsParser([Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.devcity.parseargs.ArgsParser
statement code is: ArgsParser argsParser = new ArgsParser(arg0)
statement is: parseParameterArgument(Ljava/lang/String;)Lde/devcity/parseargs/arguments/ParameterArgument; type is: class org.evosuite.testcase.statements.MethodStatement return type class de.devcity.parseargs.arguments.ParameterArgument
statement code is: ParameterArgument parseParameterArgument = argsParser.parseParameterArgument("f")
test data is: String[] stringArray = new String[4];
stringArray[2] = "-f";
stringArray[3] = "-f";
ArgsParser argsParser = new ArgsParser(stringArray);
argsParser.parseParameterArgument("f");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        String[] stringArray = new String[4];
        stringArray[0] = "--name";
        stringArray[1] = "John";
        stringArray[2] = "-f";
        stringArray[3] = "-f";
        ArgsParser argsParser = new ArgsParser(stringArray);
        argsParser.parseParameterArgument("f");
    }
}
statement is: String[] stringArray = new String[4], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [4] Ct is: String[] stringArray = new String[4] isAssignment: false Array: new String[4] Elements: []
lengths: [4] [4]
Their type are: class [Ljava.lang.String; String[]
statement is: stringArray[0] = "--name", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"--name" Ct is: stringArray[0] = "--name"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[1] = "John", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[1] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"John" Ct is: stringArray[1] = "John"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[2] = "-f", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[2] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"-f" Ct is: stringArray[2] = "-f"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[3] = "-f", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[3] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"-f" Ct is: stringArray[3] = "-f"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: ArgsParser argsParser = new ArgsParser(stringArray), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: argsParser.parseParameterArgument("f"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: argsParser.parseParameterArgument("f") target is: argsParser method is: parseParameterArgument(java.lang.String)
source statement: de.devcity.parseargs.ArgsParser([Ljava/lang/String;)V callee: VariableReference: Statement 3, type de.devcity.parseargs.ArgsParserindex is: 7
Matched Method is: parseParameterArgument(Ljava/lang/String;)Lde/devcity/parseargs/arguments/ParameterArgument;
TestCase is: String[] stringArray = new String[4];
stringArray[2] = "-f";
stringArray[2] = "-f";
String string = "-f";
stringArray[2] = string;
String string = "-f";
stringArray[3] = string;
ArgsParser argsParser = new ArgsParser(stringArray);
String string = "f";
((ArgsParser) string).parseParameterArgument(string);

statement is: org.evosuite.testcase.statements.ArrayStatement@25b7f5dd type is: class org.evosuite.testcase.statements.ArrayStatement return type class [Ljava.lang.String;
statement code is: String[] stringArray = new String[9]
statement is: org.evosuite.testcase.statements.AssignmentStatement@f19415bb type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.String
statement code is: stringArray[0] = "-\u0001"
statement is: de.devcity.parseargs.ArgsParser([Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.devcity.parseargs.ArgsParser
statement code is: ArgsParser argsParser = new ArgsParser(arg0)
statement is: parseParameterArgument(Ljava/lang/String;)Lde/devcity/parseargs/arguments/ParameterArgument; type is: class org.evosuite.testcase.statements.MethodStatement return type class de.devcity.parseargs.arguments.ParameterArgument
statement code is: ParameterArgument parseParameterArgument = argsParser.parseParameterArgument("")
test data is: String[] stringArray = new String[9];
stringArray[0] = "-\u0001";
ArgsParser argsParser = new ArgsParser(stringArray);
argsParser.parseParameterArgument("");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        String[] stringArray = new String[9];
        stringArray[0] = "--help";
        ArgsParser argsParser = new ArgsParser(stringArray);
        argsParser.parseParameterArgument("");
    }
}
statement is: String[] stringArray = new String[9], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [9] Ct is: String[] stringArray = new String[9] isAssignment: false Array: new String[9] Elements: []
lengths: [9] [9]
Their type are: class [Ljava.lang.String; String[]
statement is: stringArray[0] = "--help", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"--help" Ct is: stringArray[0] = "--help"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: ArgsParser argsParser = new ArgsParser(stringArray), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: argsParser.parseParameterArgument(""), class spoon.support.reflect.code.CtInvocationImpl
invocation is: argsParser.parseParameterArgument("") target is: argsParser method is: parseParameterArgument(java.lang.String)
source statement: de.devcity.parseargs.ArgsParser([Ljava/lang/String;)V callee: VariableReference: Statement 2, type de.devcity.parseargs.ArgsParserindex is: 3
Matched Method is: parseParameterArgument(Ljava/lang/String;)Lde/devcity/parseargs/arguments/ParameterArgument;
TestCase is: String[] stringArray = new String[9];
String string = "--help";
stringArray[0] = string;
ArgsParser argsParser = new ArgsParser(stringArray);
String string = "";
((ArgsParser) stringArray[0]).parseParameterArgument(string);

statement is: de.devcity.parseargs.ArgsParser()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.devcity.parseargs.ArgsParser
statement code is: ArgsParser argsParser = new ArgsParser()
statement is: org.evosuite.testcase.statements.ArrayStatement@bc9525ad type is: class org.evosuite.testcase.statements.ArrayStatement return type class [Ljava.lang.String;
statement code is: String[] stringArray = new String[5]
statement is: setArgs([Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: argsParser.setArgs(arg0)
statement is: parseStringArgument()Ljava/util/List; type is: class org.evosuite.testcase.statements.MethodStatement return type java.util.List<de.devcity.parseargs.arguments.StringArgument>
statement code is: List<StringArgument> parseStringArgument = argsParser.parseStringArgument()
test data is: ArgsParser argsParser = new ArgsParser();
String[] stringArray = new String[5];
argsParser.setArgs(stringArray);
argsParser.parseStringArgument();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        ArgsParser argsParser = new ArgsParser();
        String[] stringArray = new String[]{ "-a", "arg1", "-b", "arg2", "-c", "arg3" };
        argsParser.setArgs(stringArray);
        argsParser.parseStringArgument();
    }
}
statement is: ArgsParser argsParser = new ArgsParser(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: String[] stringArray = new String[]{ "-a", "arg1", "-b", "arg2", "-c", "arg3" }, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [] Ct is: String[] stringArray = new String[5] isAssignment: false Array: new String[]{ "-a", "arg1", "-b", "arg2", "-c", "arg3" } Elements: ["-a", "arg1", "-b", "arg2", "-c", "arg3"]
lengths: [5] []
statement is: argsParser.setArgs(stringArray), class spoon.support.reflect.code.CtInvocationImpl
invocation is: argsParser.setArgs(stringArray) target is: argsParser method is: setArgs(java.lang.String[])
source statement: de.devcity.parseargs.ArgsParser()V callee: VariableReference: Statement 0, type de.devcity.parseargs.ArgsParserindex is: 0
Matched Method is: setArgs([Ljava/lang/String;)V
i 0 Parameters size() 0 Num of Method Parameters: 1
statement is: argsParser.parseStringArgument(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: argsParser.parseStringArgument() target is: argsParser method is: parseStringArgument()
source statement: de.devcity.parseargs.ArgsParser()V callee: VariableReference: Statement 0, type de.devcity.parseargs.ArgsParserindex is: 0
Matched Method is: parseStringArgument()Ljava/util/List;
TestCase is: ArgsParser argsParser = new ArgsParser();
String[] stringArray = null;
argsParser.setArgs(stringArray);
argsParser.parseStringArgument();

statement is: de.devcity.parseargs.ArgsParser()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.devcity.parseargs.ArgsParser
statement code is: ArgsParser argsParser = new ArgsParser()
statement is: org.evosuite.testcase.statements.ArrayStatement@836886a3 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [Ljava.lang.String;
statement code is: String[] stringArray = new String[5]
statement is: org.evosuite.testcase.statements.AssignmentStatement@89074c78 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.String
statement code is: stringArray[0] = "--"
statement is: setArgs([Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: argsParser.setArgs(arg0)
statement is: parseStringArgument()Ljava/util/List; type is: class org.evosuite.testcase.statements.MethodStatement return type java.util.List<de.devcity.parseargs.arguments.StringArgument>
statement code is: List<StringArgument> parseStringArgument = argsParser.parseStringArgument()
test data is: ArgsParser argsParser = new ArgsParser();
String[] stringArray = new String[5];
stringArray[0] = "--";
argsParser.setArgs(stringArray);
argsParser.parseStringArgument();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        ArgsParser argsParser = new ArgsParser();
        String[] stringArray = new String[5];
        stringArray[0] = "--";
        // Improved test data: using more descriptive and representative values
        stringArray[1] = "--help";
        argsParser.setArgs(stringArray);
        argsParser.parseStringArgument();
    }
}
statement is: ArgsParser argsParser = new ArgsParser(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: String[] stringArray = new String[5], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [5] Ct is: String[] stringArray = new String[5] isAssignment: false Array: new String[5] Elements: []
lengths: [5] [5]
Their type are: class [Ljava.lang.String; String[]
statement is: stringArray[0] = "--", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"--" Ct is: stringArray[0] = "--"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: // Improved test data: using more descriptive and representative values
stringArray[1] = "--help", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[1] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"--help" Ct is: // Improved test data: using more descriptive and representative values
stringArray[1] = "--help"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: argsParser.setArgs(stringArray), class spoon.support.reflect.code.CtInvocationImpl
invocation is: argsParser.setArgs(stringArray) target is: argsParser method is: setArgs(java.lang.String[])
source statement: de.devcity.parseargs.ArgsParser()V callee: VariableReference: Statement 0, type de.devcity.parseargs.ArgsParserindex is: 0
Matched Method is: setArgs([Ljava/lang/String;)V
statement is: argsParser.parseStringArgument(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: argsParser.parseStringArgument() target is: argsParser method is: parseStringArgument()
source statement: de.devcity.parseargs.ArgsParser()V callee: VariableReference: Statement 0, type de.devcity.parseargs.ArgsParserindex is: 0
Matched Method is: parseStringArgument()Ljava/util/List;
TestCase is: ArgsParser argsParser = new ArgsParser();
String[] stringArray = new String[5];
String string = "--";
stringArray[0] = string;
String string = "--help";
stringArray[0] = string;
argsParser.setArgs(stringArray);
argsParser.parseStringArgument();

statement is: de.devcity.parseargs.ArgsParser()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.devcity.parseargs.ArgsParser
statement code is: ArgsParser argsParser = new ArgsParser()
statement is: org.evosuite.testcase.statements.ArrayStatement@66117481 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [Ljava.lang.String;
statement code is: String[] stringArray = new String[0]
statement is: setArgs([Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: argsParser.setArgs(arg0)
statement is: getArgs()[Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class [Ljava.lang.String;
statement code is: String[] args = argsParser.getArgs()
test data is: ArgsParser argsParser = new ArgsParser();
String[] stringArray = new String[0];
argsParser.setArgs(stringArray);
argsParser.getArgs();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        ArgsParser argsParser = new ArgsParser();
        String[] stringArray = new String[]{ "-a", "10", "-b", "20" };
        argsParser.setArgs(stringArray);
        argsParser.getArgs();
    }
}
statement is: ArgsParser argsParser = new ArgsParser(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: String[] stringArray = new String[]{ "-a", "10", "-b", "20" }, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [] Ct is: String[] stringArray = new String[0] isAssignment: false Array: new String[]{ "-a", "10", "-b", "20" } Elements: ["-a", "10", "-b", "20"]
lengths: [0] []
statement is: argsParser.setArgs(stringArray), class spoon.support.reflect.code.CtInvocationImpl
invocation is: argsParser.setArgs(stringArray) target is: argsParser method is: setArgs(java.lang.String[])
source statement: de.devcity.parseargs.ArgsParser()V callee: VariableReference: Statement 0, type de.devcity.parseargs.ArgsParserindex is: 0
Matched Method is: setArgs([Ljava/lang/String;)V
i 0 Parameters size() 0 Num of Method Parameters: 1
statement is: argsParser.getArgs(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: argsParser.getArgs() target is: argsParser method is: getArgs()
source statement: de.devcity.parseargs.ArgsParser()V callee: VariableReference: Statement 0, type de.devcity.parseargs.ArgsParserindex is: 0
Matched Method is: getArgs()[Ljava/lang/String;
TestCase is: ArgsParser argsParser = new ArgsParser();
String[] stringArray = null;
argsParser.setArgs(stringArray);
argsParser.getArgs();

statement is: de.devcity.parseargs.ArgsParser()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.devcity.parseargs.ArgsParser
statement code is: ArgsParser argsParser = new ArgsParser()
statement is: org.evosuite.testcase.statements.ArrayStatement@304bb5f type is: class org.evosuite.testcase.statements.ArrayStatement return type class [Ljava.lang.String;
statement code is: String[] stringArray = new String[5]
statement is: setArgs([Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: argsParser.setArgs(arg0)
statement is: getArgs()[Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class [Ljava.lang.String;
statement code is: String[] args = argsParser.getArgs()
test data is: ArgsParser argsParser = new ArgsParser();
String[] stringArray = new String[5];
argsParser.setArgs(stringArray);
argsParser.getArgs();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        ArgsParser argsParser = new ArgsParser();
        String[] stringArray = new String[]{ "-a", "abc", "-b", "123", "-c", "true" };
        argsParser.setArgs(stringArray);
        assertEquals("abc", argsParser.getArg("-a"));
        assertEquals("123", argsParser.getArg("-b"));
        assertEquals("true", argsParser.getArg("-c"));
    }
}
statement is: ArgsParser argsParser = new ArgsParser(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: String[] stringArray = new String[]{ "-a", "abc", "-b", "123", "-c", "true" }, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [] Ct is: String[] stringArray = new String[5] isAssignment: false Array: new String[]{ "-a", "abc", "-b", "123", "-c", "true" } Elements: ["-a", "abc", "-b", "123", "-c", "true"]
lengths: [5] []
statement is: argsParser.setArgs(stringArray), class spoon.support.reflect.code.CtInvocationImpl
invocation is: argsParser.setArgs(stringArray) target is: argsParser method is: setArgs(java.lang.String[])
source statement: de.devcity.parseargs.ArgsParser()V callee: VariableReference: Statement 0, type de.devcity.parseargs.ArgsParserindex is: 0
Matched Method is: setArgs([Ljava/lang/String;)V
i 0 Parameters size() 0 Num of Method Parameters: 1
statement is: assertEquals("abc", argsParser.getArg("-a")), class spoon.support.reflect.code.CtInvocationImpl
invocation is: assertEquals("abc", argsParser.getArg("-a")) target is:  method is: assertEquals(java.lang.String,<unknown>)
statement is: assertEquals("123", argsParser.getArg("-b")), class spoon.support.reflect.code.CtInvocationImpl
invocation is: assertEquals("123", argsParser.getArg("-b")) target is:  method is: assertEquals(java.lang.String,<unknown>)
statement is: assertEquals("true", argsParser.getArg("-c")), class spoon.support.reflect.code.CtInvocationImpl
invocation is: assertEquals("true", argsParser.getArg("-c")) target is:  method is: assertEquals(java.lang.String,<unknown>)
TestCase is: ArgsParser argsParser = new ArgsParser();
String[] stringArray = null;
argsParser.setArgs(stringArray);

statement is: org.evosuite.testcase.statements.ArrayStatement@1f6ab590 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [Ljava.lang.String;
statement code is: String[] stringArray = new String[0]
statement is: de.devcity.parseargs.ArgsParser([Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.devcity.parseargs.ArgsParser
statement code is: ArgsParser argsParser = new ArgsParser(arg0)
statement is: getArgsCount()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int argsCount = argsParser.getArgsCount()
test data is: String[] stringArray = new String[0];
ArgsParser argsParser = new ArgsParser(stringArray);
argsParser.getArgsCount();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        String[] stringArray = new String[]{ "-a", "-b", "--c=123" };
        ArgsParser argsParser = new ArgsParser(stringArray);
        assertEquals(3, argsParser.getArgsCount());
    }
}
statement is: String[] stringArray = new String[]{ "-a", "-b", "--c=123" }, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [] Ct is: String[] stringArray = new String[0] isAssignment: false Array: new String[]{ "-a", "-b", "--c=123" } Elements: ["-a", "-b", "--c=123"]
lengths: [0] []
statement is: ArgsParser argsParser = new ArgsParser(stringArray), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: de.devcity.parseargs.ArgsParser([Ljava/lang/String;)V
statement is: assertEquals(3, argsParser.getArgsCount()), class spoon.support.reflect.code.CtInvocationImpl
invocation is: assertEquals(3, argsParser.getArgsCount()) target is:  method is: assertEquals(int,<unknown>)
* test suite isTestSuite: 50
Test 0: 
ArgsParser argsParser = new ArgsParser();
argsParser.getArgs();
Test 1: 
String[] stringArray = new String[6];
ArgsParser argsParser = new ArgsParser(stringArray);
argsParser.getArgsCount();
Test 2: 
ArgsParser argsParser = new ArgsParser();
// Undeclared exception!
try { 
  argsParser.setArgs((String[]) null);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // args[] cannot be null.
   //
   verifyException("de.devcity.parseargs.ArgsParser", e);
}

Test 3: 
String[] stringArray = new String[6];
ArgsParser argsParser = new ArgsParser(stringArray);
argsParser.getArgsLeftCount();
Test 4: 
String[] stringArray = new String[6];
stringArray[0] = "----";
ArgsParser argsParser = new ArgsParser(stringArray);
argsParser.getArgsLeftCount();
Test 5: 
String[] stringArray = new String[6];
stringArray[0] = "----";
ArgsParser argsParser = new ArgsParser(stringArray);
argsParser.parseSwitchArgument("-l|$\"f");
Test 6: 
String[] stringArray = new String[2];
stringArray[0] = "----";
ArgsParser argsParser = new ArgsParser(stringArray);
argsParser.parseSwitchArgument("--");
Test 7: 
ArgsParser argsParser = new ArgsParser();
String[] stringArray = new String[5];
stringArray[0] = "--";
argsParser.setArgs(stringArray);
argsParser.parseSwitchArgument("-");
Test 8: 
String[] stringArray = new String[1];
stringArray[0] = "haT!D-4o<V\"";
ArgsParser argsParser = new ArgsParser(stringArray);
// Undeclared exception!
try { 
  argsParser.parseSwitchArgument("");
  fail("Expecting exception: IllegalArgumentException");

} catch(IllegalArgumentException e) {
   //
   // Key cannot be an empty string.
   //
   verifyException("de.devcity.parseargs.arguments.KeyArgument", e);
}

Test 9: 
ArgsParser argsParser = new ArgsParser();
String[] stringArray = new String[4];
stringArray[0] = "-J-1)";
argsParser.setArgs(stringArray);
argsParser.parseSwitchArgument("-");
Test 10: 
String[] stringArray = new String[4];
stringArray[2] = "-\f";
ArgsParser argsParser = new ArgsParser(stringArray);
argsParser.parseSwitchArgument("-");
Test 11: 
String[] stringArray = new String[8];
stringArray[2] = "-";
ArgsParser argsParser = new ArgsParser(stringArray);
// Undeclared exception!
try { 
  argsParser.parseSwitchArgument("");
  fail("Expecting exception: IllegalArgumentException");

} catch(IllegalArgumentException e) {
   //
   // Key cannot be an empty string.
   //
   verifyException("de.devcity.parseargs.arguments.KeyArgument", e);
}

Test 12: 
ArgsParser argsParser = new ArgsParser();
String[] stringArray = new String[5];
stringArray[0] = "--";
argsParser.setArgs(stringArray);
argsParser.parseParameterArgument("--");
Test 13: 
String[] stringArray = new String[6];
stringArray[0] = "----";
ArgsParser argsParser = new ArgsParser(stringArray);
argsParser.parseParameterArgument("--");
Test 14: 
String[] stringArray = new String[9];
stringArray[8] = "----";
ArgsParser argsParser = new ArgsParser(stringArray);
argsParser.parseParameterArgument("--");
Test 15: 
String[] stringArray = new String[3];
stringArray[0] = "----";
stringArray[1] = "----";
ArgsParser argsParser = new ArgsParser(stringArray);
argsParser.parseParameterArgument("--");
Test 16: 
ArgsParser argsParser = new ArgsParser();
String[] stringArray = new String[4];
stringArray[1] = "-";
argsParser.setArgs(stringArray);
argsParser.parseParameterArgument("-");
Test 17: 
String[] stringArray = new String[4];
stringArray[3] = "<-J1)";
ArgsParser argsParser = new ArgsParser(stringArray);
argsParser.parseParameterArgument("-");
Test 18: 
String[] stringArray = new String[9];
stringArray[1] = "--";
ArgsParser argsParser = new ArgsParser(stringArray);
argsParser.parseParameterArgument("");
Test 19: 
String[] stringArray = new String[4];
stringArray[2] = "-f";
stringArray[3] = "-f";
ArgsParser argsParser = new ArgsParser(stringArray);
argsParser.parseParameterArgument("f");
Test 20: 
String[] stringArray = new String[9];
stringArray[0] = "-\u0001";
ArgsParser argsParser = new ArgsParser(stringArray);
argsParser.parseParameterArgument("");
Test 21: 
ArgsParser argsParser = new ArgsParser();
String[] stringArray = new String[5];
argsParser.setArgs(stringArray);
argsParser.parseStringArgument();
Test 22: 
ArgsParser argsParser = new ArgsParser();
String[] stringArray = new String[5];
stringArray[0] = "--";
argsParser.setArgs(stringArray);
argsParser.parseStringArgument();
Test 23: 
ArgsParser argsParser = new ArgsParser();
String[] stringArray = new String[0];
argsParser.setArgs(stringArray);
argsParser.getArgs();
Test 24: 
ArgsParser argsParser = new ArgsParser();
String[] stringArray = new String[5];
argsParser.setArgs(stringArray);
argsParser.getArgs();
Test 25: 
String[] stringArray = new String[0];
ArgsParser argsParser = new ArgsParser(stringArray);
argsParser.getArgsCount();
Test 26: 
ArgsParser argsParser = new ArgsParser();

Test 27: 
String[] stringArray = new String[6];
ArgsParser argsParser = new ArgsParser(stringArray);

Test 28: 
ArgsParser argsParser = new ArgsParser();
argsParser.setArgs((String[]) null);

Test 29: 
String[] stringArray = new String[6];
stringArray[0] = "-a";
ArgsParser argsParser = new ArgsParser(stringArray);
((ArgsParser)"-a").getArgsLeftCount();

Test 30: 
String[] stringArray = new String[6];
stringArray[0] = "--long-option";
ArgsParser argsParser = new ArgsParser(stringArray);
((ArgsParser)"--long-option").parseSwitchArgument("--long-option");

Test 31: 
String[] stringArray = new String[2];
stringArray[0] = "--help";
ArgsParser argsParser = new ArgsParser(stringArray);
((ArgsParser)"--help").parseSwitchArgument("--");

Test 32: 
ArgsParser argsParser = new ArgsParser();
String[] stringArray = new String[5];
stringArray[0] = "--";
argsParser.setArgs(stringArray);
argsParser.parseSwitchArgument("-");
ArgsParser argsParser = new ArgsParser();
String[] stringArray = new String[5];
stringArray[0] = "--";
argsParser.setArgs(stringArray);
argsParser.parseSwitchArgument("--help");

Test 33: 
String[] stringArray = new String[1];
stringArray[0] = "--name";
stringArray[0] = "Jane Doe";
stringArray[0] = "--age";
ArgsParser argsParser = new ArgsParser(stringArray);
((ArgsParser)"--age").parseSwitchArgument("");

Test 34: 
ArgsParser argsParser = new ArgsParser();
String[] stringArray = new String[4];
stringArray[0] = "-J-1)";
argsParser.setArgs(stringArray);
argsParser.parseSwitchArgument("-");

Test 35: 
String[] stringArray = new String[4];
stringArray[2] = "--help";
ArgsParser argsParser = new ArgsParser(stringArray);
((ArgsParser)"--help").parseSwitchArgument("-");

Test 36: 
String[] stringArray = new String[8];
stringArray[2] = "--no-flag";
ArgsParser argsParser = new ArgsParser(stringArray);
((ArgsParser)"--no-flag").parseSwitchArgument("");

Test 37: 
ArgsParser argsParser = new ArgsParser();
String[] stringArray = new String[5];
stringArray[0] = "--help";
argsParser.setArgs(stringArray);
argsParser.parseParameterArgument("--help");

Test 38: 
String[] stringArray = new String[6];
stringArray[0] = "--help";
ArgsParser argsParser = new ArgsParser(stringArray);
((ArgsParser)"--help").parseParameterArgument("--");

Test 39: 
String[] stringArray = new String[9];
stringArray[8] = "arg1";
stringArray[8] = "arg2";
stringArray[8] = "-a";
stringArray[8] = "-b";
stringArray[8] = "-c";
stringArray[8] = "123";
stringArray[8] = "abc";
stringArray[8] = "--";
stringArray[8] = "----";
ArgsParser argsParser = new ArgsParser(stringArray);
((ArgsParser)"----").parseParameterArgument("-c");

Test 40: 
String[] stringArray = new String[3];
stringArray[0] = "";
stringArray[1] = "--help";
ArgsParser argsParser = new ArgsParser(stringArray);
((ArgsParser)"--help").parseParameterArgument("--");

Test 41: 
ArgsParser argsParser = new ArgsParser();
String[] stringArray = new String[4];
stringArray[1] = "--verbose";
argsParser.setArgs(stringArray);
argsParser.parseParameterArgument("--verbose");

Test 42: 
String[] stringArray = new String[4];
stringArray[3] = "-";
stringArray[3] = "<-J1)";
stringArray[3] = "--input";
stringArray[3] = "/path/to/file.txt";
ArgsParser argsParser = new ArgsParser(stringArray);
((ArgsParser)"/path/to/file.txt").parseParameterArgument("-");

Test 43: 
String[] stringArray = new String[9];
stringArray[1] = "emptyString";
ArgsParser argsParser = new ArgsParser(stringArray);
((ArgsParser)"emptyString").parseParameterArgument("doubleHyphen");

Test 44: 
String[] stringArray = new String[4];
stringArray[2] = "-f";
stringArray[2] = "-f";
stringArray[2] = "-f";
stringArray[3] = "-f";
ArgsParser argsParser = new ArgsParser(stringArray);
((ArgsParser)"-f").parseParameterArgument("f");

Test 45: 
String[] stringArray = new String[9];
stringArray[0] = "--help";
ArgsParser argsParser = new ArgsParser(stringArray);
((ArgsParser)"--help").parseParameterArgument("");

Test 46: 
ArgsParser argsParser = new ArgsParser();
argsParser.setArgs((String[]) null);
argsParser.parseStringArgument();

Test 47: 
ArgsParser argsParser = new ArgsParser();
String[] stringArray = new String[5];
stringArray[0] = "--";
stringArray[0] = "--help";
argsParser.setArgs(stringArray);
argsParser.parseStringArgument();

Test 48: 
ArgsParser argsParser = new ArgsParser();
argsParser.setArgs((String[]) null);
argsParser.getArgs();

Test 49: 
ArgsParser argsParser = new ArgsParser();
argsParser.setArgs((String[]) null);


* Generated after the refinement and before minimization 50 tests with total length 217
* test suite isTestSuite: 50
Test 0: 
ArgsParser argsParser = new ArgsParser();
argsParser.getArgs();
Test 1: 
String[] stringArray = new String[6];
ArgsParser argsParser = new ArgsParser(stringArray);
argsParser.getArgsCount();
Test 2: 
ArgsParser argsParser = new ArgsParser();
// Undeclared exception!
try { 
  argsParser.setArgs((String[]) null);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // args[] cannot be null.
   //
   verifyException("de.devcity.parseargs.ArgsParser", e);
}

Test 3: 
String[] stringArray = new String[6];
ArgsParser argsParser = new ArgsParser(stringArray);
argsParser.getArgsLeftCount();
Test 4: 
String[] stringArray = new String[6];
stringArray[0] = "----";
ArgsParser argsParser = new ArgsParser(stringArray);
argsParser.getArgsLeftCount();
Test 5: 
String[] stringArray = new String[6];
stringArray[0] = "----";
ArgsParser argsParser = new ArgsParser(stringArray);
argsParser.parseSwitchArgument("-l|$\"f");
Test 6: 
String[] stringArray = new String[2];
stringArray[0] = "----";
ArgsParser argsParser = new ArgsParser(stringArray);
argsParser.parseSwitchArgument("--");
Test 7: 
ArgsParser argsParser = new ArgsParser();
String[] stringArray = new String[5];
stringArray[0] = "--";
argsParser.setArgs(stringArray);
argsParser.parseSwitchArgument("-");
Test 8: 
String[] stringArray = new String[1];
stringArray[0] = "haT!D-4o<V\"";
ArgsParser argsParser = new ArgsParser(stringArray);
// Undeclared exception!
try { 
  argsParser.parseSwitchArgument("");
  fail("Expecting exception: IllegalArgumentException");

} catch(IllegalArgumentException e) {
   //
   // Key cannot be an empty string.
   //
   verifyException("de.devcity.parseargs.arguments.KeyArgument", e);
}

Test 9: 
ArgsParser argsParser = new ArgsParser();
String[] stringArray = new String[4];
stringArray[0] = "-J-1)";
argsParser.setArgs(stringArray);
argsParser.parseSwitchArgument("-");
Test 10: 
String[] stringArray = new String[4];
stringArray[2] = "-\f";
ArgsParser argsParser = new ArgsParser(stringArray);
argsParser.parseSwitchArgument("-");
Test 11: 
String[] stringArray = new String[8];
stringArray[2] = "-";
ArgsParser argsParser = new ArgsParser(stringArray);
// Undeclared exception!
try { 
  argsParser.parseSwitchArgument("");
  fail("Expecting exception: IllegalArgumentException");

} catch(IllegalArgumentException e) {
   //
   // Key cannot be an empty string.
   //
   verifyException("de.devcity.parseargs.arguments.KeyArgument", e);
}

Test 12: 
ArgsParser argsParser = new ArgsParser();
String[] stringArray = new String[5];
stringArray[0] = "--";
argsParser.setArgs(stringArray);
argsParser.parseParameterArgument("--");
Test 13: 
String[] stringArray = new String[6];
stringArray[0] = "----";
ArgsParser argsParser = new ArgsParser(stringArray);
argsParser.parseParameterArgument("--");
Test 14: 
String[] stringArray = new String[9];
stringArray[8] = "----";
ArgsParser argsParser = new ArgsParser(stringArray);
argsParser.parseParameterArgument("--");
Test 15: 
String[] stringArray = new String[3];
stringArray[0] = "----";
stringArray[1] = "----";
ArgsParser argsParser = new ArgsParser(stringArray);
argsParser.parseParameterArgument("--");
Test 16: 
ArgsParser argsParser = new ArgsParser();
String[] stringArray = new String[4];
stringArray[1] = "-";
argsParser.setArgs(stringArray);
argsParser.parseParameterArgument("-");
Test 17: 
String[] stringArray = new String[4];
stringArray[3] = "<-J1)";
ArgsParser argsParser = new ArgsParser(stringArray);
argsParser.parseParameterArgument("-");
Test 18: 
String[] stringArray = new String[9];
stringArray[1] = "--";
ArgsParser argsParser = new ArgsParser(stringArray);
argsParser.parseParameterArgument("");
Test 19: 
String[] stringArray = new String[4];
stringArray[2] = "-f";
stringArray[3] = "-f";
ArgsParser argsParser = new ArgsParser(stringArray);
argsParser.parseParameterArgument("f");
Test 20: 
String[] stringArray = new String[9];
stringArray[0] = "-\u0001";
ArgsParser argsParser = new ArgsParser(stringArray);
argsParser.parseParameterArgument("");
Test 21: 
ArgsParser argsParser = new ArgsParser();
String[] stringArray = new String[5];
argsParser.setArgs(stringArray);
argsParser.parseStringArgument();
Test 22: 
ArgsParser argsParser = new ArgsParser();
String[] stringArray = new String[5];
stringArray[0] = "--";
argsParser.setArgs(stringArray);
argsParser.parseStringArgument();
Test 23: 
ArgsParser argsParser = new ArgsParser();
String[] stringArray = new String[0];
argsParser.setArgs(stringArray);
argsParser.getArgs();
Test 24: 
ArgsParser argsParser = new ArgsParser();
String[] stringArray = new String[5];
argsParser.setArgs(stringArray);
argsParser.getArgs();
Test 25: 
String[] stringArray = new String[0];
ArgsParser argsParser = new ArgsParser(stringArray);
argsParser.getArgsCount();
Test 26: 
ArgsParser argsParser = new ArgsParser();

Test 27: 
String[] stringArray = new String[6];
ArgsParser argsParser = new ArgsParser(stringArray);

Test 28: 
ArgsParser argsParser = new ArgsParser();
argsParser.setArgs((String[]) null);

Test 29: 
String[] stringArray = new String[6];
stringArray[0] = "-a";
ArgsParser argsParser = new ArgsParser(stringArray);
((ArgsParser)"-a").getArgsLeftCount();

Test 30: 
String[] stringArray = new String[6];
stringArray[0] = "--long-option";
ArgsParser argsParser = new ArgsParser(stringArray);
((ArgsParser)"--long-option").parseSwitchArgument("--long-option");

Test 31: 
String[] stringArray = new String[2];
stringArray[0] = "--help";
ArgsParser argsParser = new ArgsParser(stringArray);
((ArgsParser)"--help").parseSwitchArgument("--");

Test 32: 
ArgsParser argsParser = new ArgsParser();
String[] stringArray = new String[5];
stringArray[0] = "--";
argsParser.setArgs(stringArray);
argsParser.parseSwitchArgument("-");
ArgsParser argsParser = new ArgsParser();
String[] stringArray = new String[5];
stringArray[0] = "--";
argsParser.setArgs(stringArray);
argsParser.parseSwitchArgument("--help");

Test 33: 
String[] stringArray = new String[1];
stringArray[0] = "--name";
stringArray[0] = "Jane Doe";
stringArray[0] = "--age";
ArgsParser argsParser = new ArgsParser(stringArray);
((ArgsParser)"--age").parseSwitchArgument("");

Test 34: 
ArgsParser argsParser = new ArgsParser();
String[] stringArray = new String[4];
stringArray[0] = "-J-1)";
argsParser.setArgs(stringArray);
argsParser.parseSwitchArgument("-");

Test 35: 
String[] stringArray = new String[4];
stringArray[2] = "--help";
ArgsParser argsParser = new ArgsParser(stringArray);
((ArgsParser)"--help").parseSwitchArgument("-");

Test 36: 
String[] stringArray = new String[8];
stringArray[2] = "--no-flag";
ArgsParser argsParser = new ArgsParser(stringArray);
((ArgsParser)"--no-flag").parseSwitchArgument("");

Test 37: 
ArgsParser argsParser = new ArgsParser();
String[] stringArray = new String[5];
stringArray[0] = "--help";
argsParser.setArgs(stringArray);
argsParser.parseParameterArgument("--help");

Test 38: 
String[] stringArray = new String[6];
stringArray[0] = "--help";
ArgsParser argsParser = new ArgsParser(stringArray);
((ArgsParser)"--help").parseParameterArgument("--");

Test 39: 
String[] stringArray = new String[9];
stringArray[8] = "arg1";
stringArray[8] = "arg2";
stringArray[8] = "-a";
stringArray[8] = "-b";
stringArray[8] = "-c";
stringArray[8] = "123";
stringArray[8] = "abc";
stringArray[8] = "--";
stringArray[8] = "----";
ArgsParser argsParser = new ArgsParser(stringArray);
((ArgsParser)"----").parseParameterArgument("-c");

Test 40: 
String[] stringArray = new String[3];
stringArray[0] = "";
stringArray[1] = "--help";
ArgsParser argsParser = new ArgsParser(stringArray);
((ArgsParser)"--help").parseParameterArgument("--");

Test 41: 
ArgsParser argsParser = new ArgsParser();
String[] stringArray = new String[4];
stringArray[1] = "--verbose";
argsParser.setArgs(stringArray);
argsParser.parseParameterArgument("--verbose");

Test 42: 
String[] stringArray = new String[4];
stringArray[3] = "-";
stringArray[3] = "<-J1)";
stringArray[3] = "--input";
stringArray[3] = "/path/to/file.txt";
ArgsParser argsParser = new ArgsParser(stringArray);
((ArgsParser)"/path/to/file.txt").parseParameterArgument("-");

Test 43: 
String[] stringArray = new String[9];
stringArray[1] = "emptyString";
ArgsParser argsParser = new ArgsParser(stringArray);
((ArgsParser)"emptyString").parseParameterArgument("doubleHyphen");

Test 44: 
String[] stringArray = new String[4];
stringArray[2] = "-f";
stringArray[2] = "-f";
stringArray[2] = "-f";
stringArray[3] = "-f";
ArgsParser argsParser = new ArgsParser(stringArray);
((ArgsParser)"-f").parseParameterArgument("f");

Test 45: 
String[] stringArray = new String[9];
stringArray[0] = "--help";
ArgsParser argsParser = new ArgsParser(stringArray);
((ArgsParser)"--help").parseParameterArgument("");

Test 46: 
ArgsParser argsParser = new ArgsParser();
argsParser.setArgs((String[]) null);
argsParser.parseStringArgument();

Test 47: 
ArgsParser argsParser = new ArgsParser();
String[] stringArray = new String[5];
stringArray[0] = "--";
stringArray[0] = "--help";
argsParser.setArgs(stringArray);
argsParser.parseStringArgument();

Test 48: 
ArgsParser argsParser = new ArgsParser();
argsParser.setArgs((String[]) null);
argsParser.getArgs();

Test 49: 
ArgsParser argsParser = new ArgsParser();
argsParser.setArgs((String[]) null);


* Minimizing test suite
* test suite isTestSuite: 27
Test 0: 
String[] stringArray = new String[6];
ArgsParser argsParser = new ArgsParser(stringArray);
argsParser.getArgsLeftCount();
Test 1: 
ArgsParser argsParser = new ArgsParser();
argsParser.getArgs();
Test 2: 
String[] stringArray = new String[0];
ArgsParser argsParser = new ArgsParser(stringArray);
argsParser.getArgsCount();
Test 3: 
ArgsParser argsParser = new ArgsParser();
// Undeclared exception!
try { 
  argsParser.setArgs((String[]) null);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // args[] cannot be null.
   //
   verifyException("de.devcity.parseargs.ArgsParser", e);
}

Test 4: 
String[] stringArray = new String[6];
stringArray[0] = "----";
ArgsParser argsParser = new ArgsParser(stringArray);
argsParser.getArgsLeftCount();
Test 5: 
String[] stringArray = new String[2];
stringArray[0] = "----";
ArgsParser argsParser = new ArgsParser(stringArray);
argsParser.parseSwitchArgument("--");
Test 6: 
String[] stringArray = new String[6];
stringArray[0] = "----";
ArgsParser argsParser = new ArgsParser(stringArray);
argsParser.parseSwitchArgument("-l|$\"f");
Test 7: 
ArgsParser argsParser = new ArgsParser();
String[] stringArray = new String[5];
stringArray[0] = "--";
argsParser.setArgs(stringArray);
argsParser.parseSwitchArgument("-");
Test 8: 
String[] stringArray = new String[8];
stringArray[2] = "-";
ArgsParser argsParser = new ArgsParser(stringArray);
// Undeclared exception!
try { 
  argsParser.parseSwitchArgument("");
  fail("Expecting exception: IllegalArgumentException");

} catch(IllegalArgumentException e) {
   //
   // Key cannot be an empty string.
   //
   verifyException("de.devcity.parseargs.arguments.KeyArgument", e);
}

Test 9: 
String[] stringArray = new String[1];
stringArray[0] = "haT!D-4o<V\"";
ArgsParser argsParser = new ArgsParser(stringArray);
// Undeclared exception!
try { 
  argsParser.parseSwitchArgument("");
  fail("Expecting exception: IllegalArgumentException");

} catch(IllegalArgumentException e) {
   //
   // Key cannot be an empty string.
   //
   verifyException("de.devcity.parseargs.arguments.KeyArgument", e);
}

Test 10: 
ArgsParser argsParser = new ArgsParser();
String[] stringArray = new String[4];
stringArray[0] = "-J-1)";
argsParser.setArgs(stringArray);
argsParser.parseSwitchArgument("-");
Test 11: 
String[] stringArray = new String[4];
stringArray[2] = "-\f";
ArgsParser argsParser = new ArgsParser(stringArray);
argsParser.parseSwitchArgument("-");
Test 12: 
ArgsParser argsParser = new ArgsParser();
String[] stringArray = new String[5];
stringArray[0] = "--help";
argsParser.setArgs(stringArray);
argsParser.parseParameterArgument("--help");
Test 13: 
String[] stringArray = new String[6];
stringArray[0] = "----";
ArgsParser argsParser = new ArgsParser(stringArray);
argsParser.parseParameterArgument("--");
Test 14: 
String[] stringArray = new String[9];
stringArray[8] = "----";
ArgsParser argsParser = new ArgsParser(stringArray);
argsParser.parseParameterArgument("--");
Test 15: 
String[] stringArray = new String[3];
stringArray[0] = "----";
stringArray[1] = "----";
ArgsParser argsParser = new ArgsParser(stringArray);
argsParser.parseParameterArgument("--");
Test 16: 
String[] stringArray = new String[4];
stringArray[3] = "<-J1)";
ArgsParser argsParser = new ArgsParser(stringArray);
argsParser.parseParameterArgument("-");
Test 17: 
ArgsParser argsParser = new ArgsParser();
String[] stringArray = new String[4];
stringArray[1] = "-";
argsParser.setArgs(stringArray);
argsParser.parseParameterArgument("-");
Test 18: 
String[] stringArray = new String[9];
stringArray[0] = "-\u0001";
ArgsParser argsParser = new ArgsParser(stringArray);
argsParser.parseParameterArgument("");
Test 19: 
String[] stringArray = new String[9];
stringArray[1] = "--";
ArgsParser argsParser = new ArgsParser(stringArray);
argsParser.parseParameterArgument("");
Test 20: 
String[] stringArray = new String[4];
stringArray[2] = "-f";
ArgsParser argsParser = new ArgsParser(stringArray);
argsParser.parseParameterArgument("f");
Test 21: 
String[] stringArray = new String[4];
stringArray[2] = "-f";
stringArray[3] = "-f";
ArgsParser argsParser = new ArgsParser(stringArray);
argsParser.parseParameterArgument("f");
Test 22: 
ArgsParser argsParser = new ArgsParser();
String[] stringArray = new String[5];
argsParser.setArgs(stringArray);
argsParser.parseStringArgument();
Test 23: 
ArgsParser argsParser = new ArgsParser();
String[] stringArray = new String[5];
stringArray[0] = "--";
argsParser.setArgs(stringArray);
argsParser.parseStringArgument();
Test 24: 
ArgsParser argsParser = new ArgsParser();
String[] stringArray = new String[0];
argsParser.setArgs(stringArray);
argsParser.getArgs();
Test 25: 
ArgsParser argsParser = new ArgsParser();
String[] stringArray = new String[5];
argsParser.setArgs(stringArray);
argsParser.getArgs();
Test 26: 
String[] stringArray = new String[6];
ArgsParser argsParser = new ArgsParser(stringArray);
argsParser.getArgsCount();

* Going to analyze the coverage criteria
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 90%
* Total number of goals: 80
* Number of covered goals: 72
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 92%
* Total number of goals: 83
* Number of covered goals: 76
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 76%
* Total number of goals: 29
* Number of covered goals: 22
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 9
* Number of covered goals: 9
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 90%
* Total number of goals: 80
* Number of covered goals: 72
* Generated 27 tests with total length 108
* Resulting test suite's coverage: 95% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 81%
* Compiling and checking tests
Going to execute: removeTestsThatDoNotCompile
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: String[] arg0 = new String[6];
ArgsParser argsParser = new ArgsParser(arg0);
int argsLeftCount = argsParser.getArgsLeftCount();
assertEquals(0, argsLeftCount);


** It was a parseable test case! 
refined test name is: testGetArgsLeftCountWhenAllArgsAreConsumed
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: ArgsParser argsParser = new ArgsParser();
String[] args = argsParser.getArgs();
assertNull(args);


** It was a parseable test case! 
refined test name is: testGetArgsWithNoArgsProvided
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: String[] arg0 = new String[0];
ArgsParser argsParser = new ArgsParser(arg0);
int argsCount = argsParser.getArgsCount();
assertEquals(0, argsCount);


** It was a parseable test case! 
refined test name is: testEmptyStringArray
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: ArgsParser argsParser = new ArgsParser();
// Undeclared exception!
try { 
  argsParser.setArgs((String[]) null);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // args[] cannot be null.
   //
   verifyException("de.devcity.parseargs.ArgsParser", e);
}


** It was a parseable test case! 
refined test name is: testNullArgumentArrayThrowsNullPointerException
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: String[] arg0 = new String[6];
arg0[0] = "----";
ArgsParser argsParser = new ArgsParser(arg0);
int argsLeftCount = argsParser.getArgsLeftCount();
assertEquals(1, argsLeftCount);


** It was a parseable test case! 
refined test name is: testParseArgsWithDashesOnly
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: String[] arg0 = new String[2];
arg0[0] = "----";
ArgsParser argsParser = new ArgsParser(arg0);
SwitchArgument parseSwitchArgument = argsParser.parseSwitchArgument("--");
assertEquals(0, argsParser.getArgsLeftCount());
assertTrue(parseSwitchArgument.isSet());


** It was a parseable test case! 
refined test name is: testParseSwitchArgumentWithNoArgumentsRemaining
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: String[] arg0 = new String[6];
arg0[0] = "----";
ArgsParser argsParser = new ArgsParser(arg0);
argsParser.parseSwitchArgument("-l|$\"f");
assertEquals(1, argsParser.getArgsLeftCount());


** It was a parseable test case! 
refined test name is: testParseSwitchArgumentWithSpecialCharacters
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: ArgsParser argsParser = new ArgsParser();
String[] arg0 = new String[5];
arg0[0] = "--";
argsParser.setArgs(arg0);
argsParser.parseSwitchArgument("-");
assertEquals(1, argsParser.getArgsLeftCount());


** It was a parseable test case! 
refined test name is: testSingleDashArgument
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: String[] arg0 = new String[8];
arg0[2] = "-";
ArgsParser argsParser = new ArgsParser(arg0);
// Undeclared exception!
try { 
  argsParser.parseSwitchArgument("");
  fail("Expecting exception: IllegalArgumentException");

} catch(IllegalArgumentException e) {
   //
   // Key cannot be an empty string.
   //
   verifyException("de.devcity.parseargs.arguments.KeyArgument", e);
}


** It was a parseable test case! 
refined test name is: testParseSwitchArgumentThrowsExceptionForEmptyKey
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: String[] arg0 = new String[1];
arg0[0] = "haT!D-4o<V\"";
ArgsParser argsParser = new ArgsParser(arg0);
// Undeclared exception!
try { 
  argsParser.parseSwitchArgument("");
  fail("Expecting exception: IllegalArgumentException");

} catch(IllegalArgumentException e) {
   //
   // Key cannot be an empty string.
   //
   verifyException("de.devcity.parseargs.arguments.KeyArgument", e);
}


** It was a parseable test case! 
refined test name is: testParseSwitchArgumentWithEmptyStringAsKey
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: ArgsParser argsParser = new ArgsParser();
String[] arg0 = new String[4];
arg0[0] = "-J-1)";
argsParser.setArgs(arg0);
SwitchArgument parseSwitchArgument = argsParser.parseSwitchArgument("-");
assertTrue(parseSwitchArgument.isSet());


** It was a parseable test case! 
refined test name is: testParseSwitchArgument
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: String[] arg0 = new String[4];
arg0[2] = "-\f";
ArgsParser argsParser = new ArgsParser(arg0);
argsParser.parseSwitchArgument("-");
assertEquals(1, argsParser.getArgsLeftCount());


** It was a parseable test case! 
refined test name is: testParseSwitchArgumentWithInvalidInput
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: ArgsParser argsParser = new ArgsParser();
String[] arg0 = new String[5];
arg0[0] = "--help";
argsParser.setArgs(arg0);
argsParser.parseParameterArgument("--help");
assertEquals(1, argsParser.getArgsLeftCount());


** It was a parseable test case! 
refined test name is: testParseParameterArgumentWithHelpOption
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: String[] arg0 = new String[6];
arg0[0] = "----";
ArgsParser argsParser = new ArgsParser(arg0);
argsParser.parseParameterArgument("--");
assertEquals(1, argsParser.getArgsLeftCount());


** It was a parseable test case! 
refined test name is: testParseParameterArgumentWithDoubleDash
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: String[] arg0 = new String[9];
arg0[8] = "----";
ArgsParser argsParser = new ArgsParser(arg0);
argsParser.parseParameterArgument("--");
assertEquals(1, argsParser.getArgsLeftCount());


** It was a parseable test case! 
refined test name is: testParseParameterArgumentWithSeparator
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: String[] arg0 = new String[3];
arg0[0] = "----";
arg0[1] = "----";
ArgsParser argsParser = new ArgsParser(arg0);
ParameterArgument parseParameterArgument = argsParser.parseParameterArgument("--");
assertNotNull(parseParameterArgument);
assertEquals(0, argsParser.getArgsLeftCount());


** It was a parseable test case! 
refined test name is: testParseParameterArgumentWithOnlyDoubleDash
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: String[] arg0 = new String[4];
arg0[3] = "<-J1)";
ArgsParser argsParser = new ArgsParser(arg0);
argsParser.parseParameterArgument("-");
assertEquals(1, argsParser.getArgsLeftCount());


** It was a parseable test case! 
refined test name is: testParseParameterArgumentWithoutMatchingSeparator
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: ArgsParser argsParser = new ArgsParser();
String[] arg0 = new String[4];
arg0[1] = "-";
argsParser.setArgs(arg0);
argsParser.parseParameterArgument("-");
assertEquals(1, argsParser.getArgsLeftCount());


** It was a parseable test case! 
refined test name is: testParseParameterArgumentWithMinusSignAsInput
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: String[] arg0 = new String[9];
arg0[0] = "-\u0001";
ArgsParser argsParser = new ArgsParser(arg0);
argsParser.parseParameterArgument("");
assertEquals(1, argsParser.getArgsLeftCount());


** It was a parseable test case! 
refined test name is: testEmptyStringAsParameterArgument
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: String[] arg0 = new String[9];
arg0[1] = "--";
ArgsParser argsParser = new ArgsParser(arg0);
argsParser.parseParameterArgument("");
assertEquals(1, argsParser.getArgsLeftCount());


** It was a parseable test case! 
refined test name is: testParseParameterArgumentWithEmptyString
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: String[] arg0 = new String[4];
arg0[2] = "-f";
ArgsParser argsParser = new ArgsParser(arg0);
argsParser.parseParameterArgument("f");
assertEquals(1, argsParser.getArgsLeftCount());


** It was a parseable test case! 
refined test name is: testParseParameterArgumentWithFlag
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: String[] arg0 = new String[4];
arg0[2] = "-f";
arg0[3] = "-f";
ArgsParser argsParser = new ArgsParser(arg0);
ParameterArgument parseParameterArgument = argsParser.parseParameterArgument("f");
assertEquals(0, argsParser.getArgsLeftCount());
assertNotNull(parseParameterArgument);


** It was a parseable test case! 
refined test name is: testParseParameterArgumentWithDuplicateFlags
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: ArgsParser argsParser = new ArgsParser();
String[] arg0 = new String[5];
argsParser.setArgs(arg0);
List<StringArgument> parseStringArgument = argsParser.parseStringArgument();
assertEquals(0, parseStringArgument.size());


** It was a parseable test case! 
refined test name is: testParsingEmptyStringArray
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: ArgsParser argsParser = new ArgsParser();
String[] arg0 = new String[5];
arg0[0] = "--";
argsParser.setArgs(arg0);
List<StringArgument> parseStringArgument = argsParser.parseStringArgument();
assertEquals(0, argsParser.getArgsLeftCount());
assertFalse(parseStringArgument.isEmpty());


** It was a parseable test case! 
refined test name is: testParseStringArgumentWithEmptyArgs
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: ArgsParser argsParser = new ArgsParser();
String[] arg0 = new String[0];
argsParser.setArgs(arg0);
String[] args = argsParser.getArgs();
assertEquals(0, args.length);


** It was a parseable test case! 
refined test name is: testSetArgsWithEmptyArray
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: ArgsParser argsParser = new ArgsParser();
String[] arg0 = new String[5];
argsParser.setArgs(arg0);
String[] args = argsParser.getArgs();
assertNotSame(args, arg0);


** It was a parseable test case! 
refined test name is: testSetArgsShouldCreateDeepCopyOfArray
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: String[] arg0 = new String[6];
ArgsParser argsParser = new ArgsParser(arg0);
int argsCount = argsParser.getArgsCount();
assertEquals(6, argsCount);


** It was a parseable test case! 
refined test name is: testGetArgsCountWithSixArguments
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 10:22:42.862 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/tmp/EvoSuite_pathingJar5028775170502629294.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 10:22:42.886 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5028775170502629294.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 10:22:43.095 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/tmp/EvoSuite_pathingJar5028775170502629294.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 10:22:43.100 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5028775170502629294.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 10:22:43.271 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/tmp/EvoSuite_pathingJar5028775170502629294.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 10:22:43.281 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5028775170502629294.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 10:22:43.387 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/tmp/EvoSuite_pathingJar5028775170502629294.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 10:22:43.389 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5028775170502629294.jar
[MASTER] 10:22:43.476 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/tmp/EvoSuite_pathingJar5028775170502629294.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 10:22:43.478 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5028775170502629294.jar
[MASTER] 10:22:43.558 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/tmp/EvoSuite_pathingJar5028775170502629294.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 10:22:43.559 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5028775170502629294.jar
[MASTER] 10:22:43.665 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/tmp/EvoSuite_pathingJar5028775170502629294.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 10:22:43.666 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5028775170502629294.jar
[MASTER] 10:22:43.744 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/tmp/EvoSuite_pathingJar5028775170502629294.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 10:22:43.745 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5028775170502629294.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 10:22:43.840 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/tmp/EvoSuite_pathingJar5028775170502629294.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 10:22:43.842 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5028775170502629294.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 10:22:43.927 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/tmp/EvoSuite_pathingJar5028775170502629294.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 10:22:43.929 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5028775170502629294.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 10:22:43.992 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/tmp/EvoSuite_pathingJar5028775170502629294.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 10:22:43.993 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5028775170502629294.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 10:22:44.082 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/tmp/EvoSuite_pathingJar5028775170502629294.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 10:22:44.083 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5028775170502629294.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 10:22:44.153 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/tmp/EvoSuite_pathingJar5028775170502629294.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 10:22:44.155 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5028775170502629294.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 10:22:44.207 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/tmp/EvoSuite_pathingJar5028775170502629294.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
[MASTER] 10:22:44.209 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5028775170502629294.jar
* Compiling Tests
[MASTER] 10:22:44.376 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/tmp/EvoSuite_pathingJar5028775170502629294.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 10:22:44.377 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5028775170502629294.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 10:22:44.488 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/tmp/EvoSuite_pathingJar5028775170502629294.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 10:22:44.490 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5028775170502629294.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 10:22:44.573 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/tmp/EvoSuite_pathingJar5028775170502629294.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 10:22:44.575 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5028775170502629294.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 10:22:44.679 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/tmp/EvoSuite_pathingJar5028775170502629294.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 10:22:44.681 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5028775170502629294.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 10:22:44.803 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/tmp/EvoSuite_pathingJar5028775170502629294.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 10:22:44.805 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5028775170502629294.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 10:22:44.910 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/tmp/EvoSuite_pathingJar5028775170502629294.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 10:22:44.913 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5028775170502629294.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 10:22:45.045 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/tmp/EvoSuite_pathingJar5028775170502629294.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 10:22:45.047 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5028775170502629294.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 10:22:45.147 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/tmp/EvoSuite_pathingJar5028775170502629294.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 10:22:45.149 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5028775170502629294.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 10:22:45.281 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/tmp/EvoSuite_pathingJar5028775170502629294.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 10:22:45.283 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5028775170502629294.jar
[MASTER] 10:22:45.387 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/tmp/EvoSuite_pathingJar5028775170502629294.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 10:22:45.388 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5028775170502629294.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 10:22:45.490 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/tmp/EvoSuite_pathingJar5028775170502629294.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 10:22:45.491 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5028775170502629294.jar
[MASTER] 10:22:45.637 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/tmp/EvoSuite_pathingJar5028775170502629294.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 10:22:45.639 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5028775170502629294.jar
[MASTER] 10:22:45.767 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/tmp/EvoSuite_pathingJar5028775170502629294.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 10:22:45.769 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5028775170502629294.jar
[MASTER] 10:22:46.145 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/tmp/EvoSuite_pathingJar5028775170502629294.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 10:22:46.146 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5028775170502629294.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 10:22:46.514 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/tmp/EvoSuite_pathingJar5028775170502629294.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 10:22:46.516 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5028775170502629294.jar
* Writing tests to file
* Writing JUnit test case 'ArgsParser_ESTest' to evosuite-tests
* Done!

* Computation finished
