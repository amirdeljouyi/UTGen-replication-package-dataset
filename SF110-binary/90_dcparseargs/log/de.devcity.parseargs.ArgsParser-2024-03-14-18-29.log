* EvoSuite 1.0.0-SNAPSHOT
* Going to generate test cases for class: de.devcity.parseargs.ArgsParser
* Starting Client-0
* Properties loaded from /home/roham/Results-Utestgen/dataset/SF110-new-res/90_dcparseargs/evosuite-files/evosuite.properties
* Connecting to master process on port 19108
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
* Finished analyzing classpath
* Generating tests for class de.devcity.parseargs.ArgsParser
* Test criteria:
  - Branch Coverage
  - Line Coverage
  - Method-Output Coverage
  - Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 281
* Using seed 1710440991716
* Starting evolution
[Progress:>                             0%] [Cov:>                                  0%]* Initial Number of Goals in DynaMOSA = 65 / 281
[Progress:>                             0%] [Cov:======================>            65%][Progress:>                             0%] [Cov:=======================>           67%][Progress:>                             1%] [Cov:=======================>           68%][Progress:>                             1%] [Cov:=======================>           68%][Progress:>                             1%] [Cov:=======================>           68%][Progress:>                             1%] [Cov:=========================>         73%][Progress:>                             1%] [Cov:=========================>         74%][Progress:>                             2%] [Cov:==========================>        75%][Progress:>                             2%] [Cov:==========================>        75%][Progress:>                             2%] [Cov:==========================>        75%][Progress:>                             2%] [Cov:==========================>        75%][Progress:>                             2%] [Cov:==========================>        75%][Progress:>                             2%] [Cov:==========================>        76%][Progress:>                             2%] [Cov:==========================>        76%][Progress:>                             3%] [Cov:==========================>        76%][Progress:>                             3%] [Cov:==========================>        76%][Progress:>                             3%] [Cov:==========================>        76%][Progress:>                             3%] [Cov:===========================>       79%][Progress:>                             3%] [Cov:===========================>       79%][Progress:>                             3%] [Cov:============================>      80%][Progress:>                             3%] [Cov:============================>      80%][Progress:>                             3%] [Cov:============================>      80%][Progress:>                             3%] [Cov:============================>      80%][Progress:>                             3%] [Cov:============================>      80%][Progress:=>                            4%] [Cov:============================>      80%][Progress:=>                            4%] [Cov:============================>      80%][Progress:=>                            4%] [Cov:============================>      80%][Progress:=>                            4%] [Cov:============================>      80%][Progress:=>                            4%] [Cov:============================>      80%][Progress:=>                            4%] [Cov:============================>      80%][Progress:=>                            4%] [Cov:============================>      80%][Progress:=>                            4%] [Cov:============================>      80%][Progress:=>                            4%] [Cov:============================>      80%][Progress:=>                            4%] [Cov:============================>      80%][Progress:=>                            4%] [Cov:============================>      80%][Progress:=>                            4%] [Cov:============================>      80%][Progress:=>                            5%] [Cov:============================>      80%][Progress:=>                            5%] [Cov:============================>      80%][Progress:=>                            5%] [Cov:============================>      80%][Progress:=>                            5%] [Cov:============================>      80%][Progress:=>                            5%] [Cov:============================>      80%][Progress:=>                            5%] [Cov:============================>      80%][Progress:=>                            5%] [Cov:============================>      80%][Progress:=>                            5%] [Cov:============================>      80%][Progress:=>                            5%] [Cov:============================>      80%][Progress:=>                            5%] [Cov:============================>      80%][Progress:=>                            5%] [Cov:============================>      80%][Progress:=>                            6%] [Cov:============================>      80%][Progress:=>                            6%] [Cov:============================>      80%][Progress:=>                            6%] [Cov:============================>      80%][Progress:=>                            6%] [Cov:============================>      80%][Progress:=>                            6%] [Cov:============================>      80%][Progress:=>                            6%] [Cov:============================>      80%][Progress:=>                            6%] [Cov:============================>      80%][Progress:=>                            6%] [Cov:============================>      80%][Progress:=>                            6%] [Cov:============================>      80%][Progress:=>                            6%] [Cov:============================>      80%][Progress:=>                            6%] [Cov:============================>      80%][Progress:=>                            6%] [Cov:============================>      80%][Progress:=>                            6%] [Cov:============================>      80%][Progress:=>                            6%] [Cov:============================>      80%][Progress:==>                           7%] [Cov:============================>      80%][Progress:==>                           7%] [Cov:============================>      80%][Progress:==>                           7%] [Cov:============================>      80%][Progress:==>                           7%] [Cov:============================>      80%][Progress:==>                           7%] [Cov:============================>      80%][Progress:==>                           7%] [Cov:============================>      80%][Progress:==>                           7%] [Cov:============================>      80%][Progress:==>                           7%] [Cov:============================>      80%][Progress:==>                           7%] [Cov:============================>      80%][Progress:==>                           7%] [Cov:============================>      80%][Progress:==>                           7%] [Cov:============================>      80%][Progress:==>                           7%] [Cov:============================>      80%][Progress:==>                           7%] [Cov:============================>      80%][Progress:==>                           8%] [Cov:============================>      80%][Progress:==>                           8%] [Cov:============================>      80%][Progress:==>                           8%] [Cov:============================>      80%][Progress:==>                           8%] [Cov:============================>      80%][Progress:==>                           8%] [Cov:============================>      80%][Progress:==>                           8%] [Cov:============================>      80%][Progress:==>                           8%] [Cov:============================>      80%][Progress:==>                           8%] [Cov:============================>      80%][Progress:==>                           8%] [Cov:============================>      80%][Progress:==>                           8%] [Cov:============================>      80%][Progress:==>                           8%] [Cov:============================>      80%][Progress:==>                           8%] [Cov:============================>      80%][Progress:==>                           8%] [Cov:============================>      80%][Progress:==>                           8%] [Cov:============================>      80%][Progress:==>                           8%] [Cov:============================>      80%][Progress:==>                           8%] [Cov:============================>      80%][Progress:==>                           9%] [Cov:============================>      80%][Progress:==>                           9%] [Cov:============================>      80%][Progress:==>                           9%] [Cov:============================>      80%][Progress:==>                           9%] [Cov:============================>      80%][Progress:==>                           9%] [Cov:============================>      80%][Progress:==>                           9%] [Cov:============================>      80%][Progress:==>                           9%] [Cov:============================>      80%][Progress:==>                           9%] [Cov:============================>      80%][Progress:==>                           9%] [Cov:============================>      80%][Progress:==>                           9%] [Cov:============================>      80%][Progress:==>                           9%] [Cov:============================>      80%][Progress:==>                           9%] [Cov:============================>      80%][Progress:==>                           9%] [Cov:============================>      80%][Progress:==>                           9%] [Cov:============================>      80%][Progress:===>                          10%] [Cov:============================>      80%][Progress:===>                          10%] [Cov:============================>      80%][Progress:===>                          10%] [Cov:============================>      80%][Progress:===>                          10%] [Cov:============================>      80%][Progress:===>                          10%] [Cov:============================>      80%][Progress:===>                          10%] [Cov:============================>      80%][Progress:===>                          10%] [Cov:============================>      80%][Progress:===>                          10%] [Cov:============================>      80%][Progress:===>                          10%] [Cov:============================>      80%][Progress:===>                          10%] [Cov:============================>      80%][Progress:===>                          10%] [Cov:============================>      80%][Progress:===>                          11%] [Cov:============================>      80%][Progress:===>                          11%] [Cov:============================>      80%][Progress:===>                          11%] [Cov:============================>      80%][Progress:===>                          11%] [Cov:============================>      80%][Progress:===>                          11%] [Cov:============================>      80%][Progress:===>                          11%] [Cov:============================>      80%][Progress:===>                          11%] [Cov:============================>      80%][Progress:===>                          11%] [Cov:============================>      80%][Progress:===>                          11%] [Cov:============================>      82%][Progress:===>                          11%] [Cov:============================>      82%][Progress:===>                          11%] [Cov:============================>      82%][Progress:===>                          11%] [Cov:=============================>     83%][Progress:===>                          11%] [Cov:=============================>     83%][Progress:===>                          11%] [Cov:=============================>     83%][Progress:===>                          11%] [Cov:=============================>     83%][Progress:===>                          11%] [Cov:=============================>     83%][Progress:===>                          11%] [Cov:=============================>     83%][Progress:===>                          12%] [Cov:=============================>     83%][Progress:===>                          12%] [Cov:=============================>     83%][Progress:===>                          12%] [Cov:=============================>     83%][Progress:===>                          12%] [Cov:=============================>     83%][Progress:===>                          12%] [Cov:==============================>    86%][Progress:===>                          12%] [Cov:==============================>    86%][Progress:===>                          12%] [Cov:==============================>    86%][Progress:===>                          12%] [Cov:==============================>    86%][Progress:===>                          12%] [Cov:==============================>    86%][Progress:===>                          12%] [Cov:==============================>    86%][Progress:===>                          12%] [Cov:==============================>    86%][Progress:===>                          12%] [Cov:==============================>    86%][Progress:===>                          13%] [Cov:==============================>    86%][Progress:===>                          13%] [Cov:==============================>    86%][Progress:===>                          13%] [Cov:==============================>    86%][Progress:===>                          13%] [Cov:==============================>    86%][Progress:===>                          13%] [Cov:==============================>    86%][Progress:===>                          13%] [Cov:==============================>    86%][Progress:===>                          13%] [Cov:==============================>    86%][Progress:===>                          13%] [Cov:==============================>    86%][Progress:===>                          13%] [Cov:==============================>    86%][Progress:====>                         14%] [Cov:==============================>    86%][Progress:====>                         14%] [Cov:==============================>    86%][Progress:====>                         14%] [Cov:==============================>    86%][Progress:====>                         14%] [Cov:==============================>    86%][Progress:====>                         14%] [Cov:==============================>    86%][Progress:====>                         14%] [Cov:==============================>    86%][Progress:====>                         14%] [Cov:==============================>    86%][Progress:====>                         14%] [Cov:==============================>    86%][Progress:====>                         14%] [Cov:==============================>    86%][Progress:====>                         14%] [Cov:==============================>    86%][Progress:====>                         15%] [Cov:==============================>    86%][Progress:====>                         15%] [Cov:==============================>    86%][Progress:====>                         15%] [Cov:==============================>    86%][Progress:====>                         15%] [Cov:==============================>    86%][Progress:====>                         15%] [Cov:==============================>    86%][Progress:====>                         15%] [Cov:==============================>    86%][Progress:====>                         15%] [Cov:==============================>    86%][Progress:====>                         15%] [Cov:==============================>    86%][Progress:====>                         15%] [Cov:==============================>    86%][Progress:====>                         15%] [Cov:==============================>    86%][Progress:====>                         15%] [Cov:==============================>    86%][Progress:====>                         15%] [Cov:==============================>    86%][Progress:====>                         15%] [Cov:==============================>    86%][Progress:====>                         15%] [Cov:==============================>    86%][Progress:====>                         16%] [Cov:==============================>    86%][Progress:====>                         16%] [Cov:==============================>    86%][Progress:====>                         16%] [Cov:==============================>    86%][Progress:====>                         16%] [Cov:==============================>    86%][Progress:====>                         16%] [Cov:==============================>    86%][Progress:====>                         16%] [Cov:==============================>    86%][Progress:====>                         16%] [Cov:==============================>    86%][Progress:====>                         16%] [Cov:==============================>    86%][Progress:====>                         16%] [Cov:==============================>    86%][Progress:====>                         16%] [Cov:==============================>    86%][Progress:====>                         16%] [Cov:==============================>    86%][Progress:====>                         16%] [Cov:==============================>    86%][Progress:====>                         16%] [Cov:==============================>    86%][Progress:=====>                        17%] [Cov:==============================>    86%][Progress:=====>                        17%] [Cov:==============================>    86%][Progress:=====>                        17%] [Cov:==============================>    86%][Progress:=====>                        17%] [Cov:==============================>    86%][Progress:=====>                        17%] [Cov:==============================>    86%][Progress:=====>                        17%] [Cov:==============================>    86%][Progress:=====>                        17%] [Cov:==============================>    86%][Progress:=====>                        17%] [Cov:==============================>    86%][Progress:=====>                        17%] [Cov:==============================>    86%][Progress:=====>                        17%] [Cov:==============================>    86%][Progress:=====>                        17%] [Cov:==============================>    86%][Progress:=====>                        17%] [Cov:==============================>    86%][Progress:=====>                        17%] [Cov:==============================>    86%][Progress:=====>                        17%] [Cov:==============================>    86%][Progress:=====>                        18%] [Cov:==============================>    86%][Progress:=====>                        18%] [Cov:==============================>    86%][Progress:=====>                        18%] [Cov:==============================>    86%][Progress:=====>                        18%] [Cov:==============================>    86%][Progress:=====>                        18%] [Cov:==============================>    86%][Progress:=====>                        18%] [Cov:==============================>    86%][Progress:=====>                        18%] [Cov:==============================>    86%][Progress:=====>                        18%] [Cov:==============================>    86%][Progress:=====>                        18%] [Cov:==============================>    86%][Progress:=====>                        18%] [Cov:==============================>    86%][Progress:=====>                        18%] [Cov:==============================>    86%][Progress:=====>                        18%] [Cov:==============================>    86%][Progress:=====>                        18%] [Cov:==============================>    86%][Progress:=====>                        18%] [Cov:==============================>    86%][Progress:=====>                        18%] [Cov:==============================>    86%][Progress:=====>                        19%] [Cov:==============================>    86%][Progress:=====>                        19%] [Cov:==============================>    86%][Progress:=====>                        19%] [Cov:==============================>    86%][Progress:=====>                        19%] [Cov:==============================>    86%][Progress:=====>                        19%] [Cov:==============================>    86%][Progress:=====>                        19%] [Cov:==============================>    86%][Progress:=====>                        19%] [Cov:==============================>    86%][Progress:=====>                        19%] [Cov:==============================>    86%][Progress:=====>                        19%] [Cov:==============================>    86%][Progress:=====>                        19%] [Cov:==============================>    86%][Progress:=====>                        19%] [Cov:==============================>    86%][Progress:======>                       20%] [Cov:==============================>    86%][Progress:======>                       20%] [Cov:==============================>    86%][Progress:======>                       20%] [Cov:==============================>    86%][Progress:======>                       20%] [Cov:==============================>    86%][Progress:======>                       20%] [Cov:==============================>    86%][Progress:======>                       20%] [Cov:==============================>    86%][Progress:======>                       20%] [Cov:==============================>    86%][Progress:======>                       20%] [Cov:==============================>    86%][Progress:======>                       20%] [Cov:==============================>    86%][Progress:======>                       20%] [Cov:==============================>    86%][Progress:======>                       20%] [Cov:==============================>    86%][Progress:======>                       20%] [Cov:==============================>    86%][Progress:======>                       20%] [Cov:==============================>    86%][Progress:======>                       20%] [Cov:==============================>    86%][Progress:======>                       20%] [Cov:==============================>    86%][Progress:======>                       21%] [Cov:==============================>    86%][Progress:======>                       21%] [Cov:==============================>    86%][Progress:======>                       21%] [Cov:==============================>    86%][Progress:======>                       21%] [Cov:==============================>    86%][Progress:======>                       21%] [Cov:==============================>    87%][Progress:======>                       21%] [Cov:==============================>    87%][Progress:======>                       21%] [Cov:==============================>    87%][Progress:======>                       21%] [Cov:==============================>    87%][Progress:======>                       21%] [Cov:==============================>    87%][Progress:======>                       21%] [Cov:==============================>    87%][Progress:======>                       21%] [Cov:==============================>    87%][Progress:======>                       21%] [Cov:==============================>    87%][Progress:======>                       22%] [Cov:==============================>    87%][Progress:======>                       22%] [Cov:==============================>    87%][Progress:======>                       22%] [Cov:==============================>    87%][Progress:======>                       22%] [Cov:==============================>    87%][Progress:======>                       22%] [Cov:==============================>    87%][Progress:======>                       22%] [Cov:==============================>    87%][Progress:======>                       22%] [Cov:==============================>    87%][Progress:======>                       22%] [Cov:==============================>    87%][Progress:======>                       22%] [Cov:==============================>    87%][Progress:======>                       22%] [Cov:==============================>    87%][Progress:======>                       22%] [Cov:==============================>    87%][Progress:======>                       22%] [Cov:==============================>    87%][Progress:======>                       22%] [Cov:==============================>    87%][Progress:======>                       22%] [Cov:==============================>    87%][Progress:======>                       22%] [Cov:==============================>    87%][Progress:======>                       23%] [Cov:==============================>    87%][Progress:======>                       23%] [Cov:==============================>    87%][Progress:======>                       23%] [Cov:==============================>    87%][Progress:======>                       23%] [Cov:==============================>    87%][Progress:======>                       23%] [Cov:==============================>    87%][Progress:======>                       23%] [Cov:==============================>    87%][Progress:======>                       23%] [Cov:==============================>    87%][Progress:======>                       23%] [Cov:==============================>    87%][Progress:=======>                      24%] [Cov:==============================>    87%][Progress:=======>                      24%] [Cov:==============================>    87%][Progress:=======>                      24%] [Cov:==============================>    87%][Progress:=======>                      24%] [Cov:==============================>    87%][Progress:=======>                      24%] [Cov:==============================>    87%][Progress:=======>                      24%] [Cov:==============================>    87%][Progress:=======>                      24%] [Cov:==============================>    87%][Progress:=======>                      24%] [Cov:==============================>    87%][Progress:=======>                      24%] [Cov:==============================>    87%][Progress:=======>                      24%] [Cov:==============================>    87%][Progress:=======>                      24%] [Cov:==============================>    87%][Progress:=======>                      25%] [Cov:==============================>    87%][Progress:=======>                      25%] [Cov:==============================>    87%][Progress:=======>                      25%] [Cov:==============================>    87%][Progress:=======>                      25%] [Cov:==============================>    87%][Progress:=======>                      25%] [Cov:==============================>    87%][Progress:=======>                      25%] [Cov:==============================>    87%][Progress:=======>                      25%] [Cov:==============================>    87%][Progress:=======>                      25%] [Cov:==============================>    87%][Progress:=======>                      25%] [Cov:==============================>    87%][Progress:=======>                      25%] [Cov:==============================>    87%][Progress:=======>                      25%] [Cov:==============================>    87%][Progress:=======>                      26%] [Cov:==============================>    87%][Progress:=======>                      26%] [Cov:==============================>    87%][Progress:=======>                      26%] [Cov:==============================>    87%][Progress:=======>                      26%] [Cov:==============================>    87%][Progress:=======>                      26%] [Cov:==============================>    87%][Progress:=======>                      26%] [Cov:==============================>    87%][Progress:=======>                      26%] [Cov:==============================>    87%][Progress:=======>                      26%] [Cov:==============================>    87%][Progress:=======>                      26%] [Cov:==============================>    87%][Progress:========>                     27%] [Cov:==============================>    87%][Progress:========>                     27%] [Cov:==============================>    87%][Progress:========>                     27%] [Cov:==============================>    87%][Progress:========>                     27%] [Cov:==============================>    87%][Progress:========>                     27%] [Cov:==============================>    87%][Progress:========>                     27%] [Cov:==============================>    87%][Progress:========>                     27%] [Cov:==============================>    87%][Progress:========>                     27%] [Cov:==============================>    87%][Progress:========>                     27%] [Cov:==============================>    87%][Progress:========>                     27%] [Cov:==============================>    87%][Progress:========>                     27%] [Cov:==============================>    87%][Progress:========>                     27%] [Cov:==============================>    87%][Progress:========>                     28%] [Cov:==============================>    87%][Progress:========>                     28%] [Cov:==============================>    87%][Progress:========>                     28%] [Cov:==============================>    87%][Progress:========>                     28%] [Cov:==============================>    87%][Progress:========>                     28%] [Cov:==============================>    87%][Progress:========>                     28%] [Cov:==============================>    87%][Progress:========>                     28%] [Cov:==============================>    87%][Progress:========>                     28%] [Cov:==============================>    87%][Progress:========>                     28%] [Cov:==============================>    87%][Progress:========>                     28%] [Cov:==============================>    87%][Progress:========>                     28%] [Cov:==============================>    87%][Progress:========>                     28%] [Cov:==============================>    87%][Progress:========>                     28%] [Cov:==============================>    87%][Progress:========>                     29%] [Cov:==============================>    87%][Progress:========>                     29%] [Cov:==============================>    87%][Progress:========>                     29%] [Cov:==============================>    87%][Progress:========>                     29%] [Cov:==============================>    87%][Progress:========>                     29%] [Cov:==============================>    87%][Progress:========>                     29%] [Cov:==============================>    87%][Progress:========>                     29%] [Cov:==============================>    87%][Progress:========>                     29%] [Cov:==============================>    87%][Progress:========>                     29%] [Cov:==============================>    87%][Progress:========>                     29%] [Cov:==============================>    87%][Progress:========>                     29%] [Cov:==============================>    87%][Progress:========>                     29%] [Cov:==============================>    87%][Progress:========>                     29%] [Cov:==============================>    87%][Progress:=========>                    30%] [Cov:==============================>    87%][Progress:=========>                    30%] [Cov:==============================>    87%][Progress:=========>                    30%] [Cov:==============================>    87%][Progress:=========>                    30%] [Cov:==============================>    87%][Progress:=========>                    30%] [Cov:==============================>    87%][Progress:=========>                    30%] [Cov:==============================>    87%][Progress:=========>                    30%] [Cov:==============================>    87%][Progress:=========>                    30%] [Cov:==============================>    87%][Progress:=========>                    30%] [Cov:==============================>    87%][Progress:=========>                    30%] [Cov:==============================>    87%][Progress:=========>                    31%] [Cov:==============================>    87%][Progress:=========>                    31%] [Cov:==============================>    87%][Progress:=========>                    31%] [Cov:==============================>    87%][Progress:=========>                    31%] [Cov:==============================>    87%][Progress:=========>                    31%] [Cov:==============================>    87%][Progress:=========>                    31%] [Cov:==============================>    87%][Progress:=========>                    31%] [Cov:==============================>    87%][Progress:=========>                    31%] [Cov:==============================>    87%][Progress:=========>                    31%] [Cov:==============================>    87%][Progress:=========>                    31%] [Cov:==============================>    87%][Progress:=========>                    31%] [Cov:==============================>    88%][Progress:=========>                    32%] [Cov:==============================>    88%][Progress:=========>                    32%] [Cov:==============================>    88%][Progress:=========>                    32%] [Cov:==============================>    88%][Progress:=========>                    32%] [Cov:==============================>    88%][Progress:=========>                    32%] [Cov:==============================>    88%][Progress:=========>                    32%] [Cov:==============================>    88%][Progress:=========>                    32%] [Cov:==============================>    88%][Progress:=========>                    32%] [Cov:==============================>    88%][Progress:=========>                    32%] [Cov:==============================>    88%][Progress:=========>                    32%] [Cov:==============================>    88%][Progress:=========>                    32%] [Cov:==============================>    88%][Progress:=========>                    33%] [Cov:==============================>    88%][Progress:=========>                    33%] [Cov:==============================>    88%][Progress:=========>                    33%] [Cov:==============================>    88%][Progress:=========>                    33%] [Cov:==============================>    88%][Progress:=========>                    33%] [Cov:==============================>    88%][Progress:=========>                    33%] [Cov:==============================>    88%][Progress:=========>                    33%] [Cov:==============================>    88%][Progress:=========>                    33%] [Cov:==============================>    88%][Progress:=========>                    33%] [Cov:==============================>    88%][Progress:=========>                    33%] [Cov:==============================>    88%][Progress:=========>                    33%] [Cov:==============================>    88%][Progress:=========>                    33%] [Cov:==============================>    88%][Progress:==========>                   34%] [Cov:==============================>    88%][Progress:==========>                   34%] [Cov:==============================>    88%][Progress:==========>                   34%] [Cov:==============================>    88%][Progress:==========>                   34%] [Cov:==============================>    88%][Progress:==========>                   34%] [Cov:==============================>    88%][Progress:==========>                   34%] [Cov:==============================>    88%][Progress:==========>                   34%] [Cov:==============================>    88%][Progress:==========>                   35%] [Cov:==============================>    88%][Progress:==========>                   35%] [Cov:==============================>    88%][Progress:==========>                   35%] [Cov:==============================>    88%][Progress:==========>                   35%] [Cov:==============================>    88%][Progress:==========>                   35%] [Cov:==============================>    88%][Progress:==========>                   35%] [Cov:==============================>    88%][Progress:==========>                   35%] [Cov:==============================>    88%][Progress:==========>                   35%] [Cov:==============================>    88%][Progress:==========>                   36%] [Cov:==============================>    88%][Progress:==========>                   36%] [Cov:==============================>    88%][Progress:==========>                   36%] [Cov:==============================>    88%][Progress:==========>                   36%] [Cov:==============================>    88%][Progress:==========>                   36%] [Cov:==============================>    88%][Progress:==========>                   36%] [Cov:==============================>    88%][Progress:==========>                   36%] [Cov:==============================>    88%][Progress:==========>                   36%] [Cov:==============================>    88%][Progress:==========>                   36%] [Cov:==============================>    88%][Progress:==========>                   36%] [Cov:==============================>    88%][Progress:==========>                   36%] [Cov:==============================>    88%][Progress:==========>                   36%] [Cov:==============================>    88%][Progress:===========>                  37%] [Cov:==============================>    88%][Progress:===========>                  37%] [Cov:==============================>    88%][Progress:===========>                  37%] [Cov:==============================>    88%][Progress:===========>                  37%] [Cov:==============================>    88%][Progress:===========>                  37%] [Cov:==============================>    88%][Progress:===========>                  37%] [Cov:==============================>    88%][Progress:===========>                  37%] [Cov:==============================>    88%][Progress:===========>                  37%] [Cov:==============================>    88%][Progress:===========>                  37%] [Cov:==============================>    88%][Progress:===========>                  37%] [Cov:==============================>    88%][Progress:===========>                  37%] [Cov:==============================>    88%][Progress:===========>                  37%] [Cov:==============================>    88%][Progress:===========>                  37%] [Cov:==============================>    88%][Progress:===========>                  37%] [Cov:==============================>    88%][Progress:===========>                  37%] [Cov:==============================>    88%][Progress:===========>                  37%] [Cov:==============================>    88%][Progress:===========>                  37%] [Cov:==============================>    88%][Progress:===========>                  37%] [Cov:==============================>    88%][Progress:===========>                  37%] [Cov:==============================>    88%][Progress:===========>                  38%] [Cov:==============================>    88%][Progress:===========>                  38%] [Cov:==============================>    88%][Progress:===========>                  38%] [Cov:==============================>    88%][Progress:===========>                  38%] [Cov:==============================>    88%][Progress:===========>                  38%] [Cov:===============================>   91%][Progress:===========>                  38%] [Cov:===============================>   91%][Progress:===========>                  38%] [Cov:===============================>   91%][Progress:===========>                  38%] [Cov:===============================>   91%][Progress:===========>                  38%] [Cov:===============================>   91%][Progress:===========>                  38%] [Cov:===============================>   91%][Progress:===========>                  38%] [Cov:===============================>   91%][Progress:===========>                  38%] [Cov:===============================>   91%][Progress:===========>                  38%] [Cov:===============================>   91%][Progress:===========>                  38%] [Cov:===============================>   91%][Progress:===========>                  38%] [Cov:===============================>   91%][Progress:===========>                  38%] [Cov:===============================>   91%][Progress:===========>                  38%] [Cov:================================>  92%][Progress:===========>                  39%] [Cov:================================>  92%][Progress:===========>                  39%] [Cov:================================>  92%][Progress:===========>                  39%] [Cov:================================>  92%][Progress:===========>                  39%] [Cov:================================>  92%][Progress:===========>                  39%] [Cov:================================>  92%][Progress:===========>                  39%] [Cov:================================>  92%][Progress:===========>                  39%] [Cov:================================>  93%][Progress:===========>                  39%] [Cov:================================>  93%][Progress:===========>                  39%] [Cov:================================>  94%][Progress:===========>                  39%] [Cov:================================>  94%][Progress:===========>                  39%] [Cov:================================>  94%][Progress:===========>                  39%] [Cov:================================>  94%][Progress:===========>                  39%] [Cov:================================>  94%][Progress:===========>                  39%] [Cov:================================>  94%][Progress:============>                 40%] [Cov:================================>  94%][Progress:============>                 40%] [Cov:================================>  94%][Progress:============>                 40%] [Cov:================================>  94%][Progress:============>                 40%] [Cov:================================>  94%][Progress:============>                 40%] [Cov:================================>  94%][Progress:============>                 40%] [Cov:================================>  94%][Progress:============>                 40%] [Cov:================================>  94%][Progress:============>                 40%] [Cov:================================>  94%][Progress:============>                 40%] [Cov:================================>  94%][Progress:============>                 40%] [Cov:================================>  94%][Progress:============>                 40%] [Cov:================================>  94%][Progress:============>                 40%] [Cov:================================>  94%][Progress:============>                 40%] [Cov:================================>  94%][Progress:============>                 41%] [Cov:================================>  94%][Progress:============>                 41%] [Cov:================================>  94%][Progress:============>                 41%] [Cov:================================>  94%][Progress:============>                 41%] [Cov:================================>  94%][Progress:============>                 41%] [Cov:================================>  94%][Progress:============>                 41%] [Cov:================================>  94%][Progress:============>                 41%] [Cov:================================>  94%][Progress:============>                 41%] [Cov:================================>  94%][Progress:============>                 41%] [Cov:================================>  94%][Progress:============>                 41%] [Cov:================================>  94%][Progress:============>                 41%] [Cov:================================>  94%][Progress:============>                 41%] [Cov:================================>  94%][Progress:============>                 41%] [Cov:================================>  94%][Progress:============>                 41%] [Cov:================================>  94%][Progress:============>                 41%] [Cov:================================>  94%][Progress:============>                 42%] [Cov:================================>  94%][Progress:============>                 42%] [Cov:================================>  94%][Progress:============>                 42%] [Cov:================================>  94%][Progress:============>                 42%] [Cov:================================>  94%][Progress:============>                 42%] [Cov:================================>  94%][Progress:============>                 42%] [Cov:================================>  94%][Progress:============>                 42%] [Cov:================================>  94%][Progress:============>                 42%] [Cov:================================>  94%][Progress:============>                 42%] [Cov:================================>  94%][Progress:============>                 42%] [Cov:================================>  94%][Progress:============>                 42%] [Cov:================================>  94%][Progress:============>                 42%] [Cov:================================>  94%][Progress:============>                 42%] [Cov:================================>  94%][Progress:============>                 42%] [Cov:================================>  94%][Progress:============>                 42%] [Cov:================================>  94%][Progress:============>                 43%] [Cov:================================>  94%][Progress:============>                 43%] [Cov:================================>  94%][Progress:============>                 43%] [Cov:================================>  94%][Progress:============>                 43%] [Cov:================================>  94%][Progress:============>                 43%] [Cov:================================>  94%][Progress:============>                 43%] [Cov:================================>  94%][Progress:============>                 43%] [Cov:================================>  94%][Progress:============>                 43%] [Cov:================================>  94%][Progress:============>                 43%] [Cov:================================>  94%][Progress:============>                 43%] [Cov:================================>  94%][Progress:============>                 43%] [Cov:================================>  94%][Progress:============>                 43%] [Cov:================================>  94%][Progress:============>                 43%] [Cov:================================>  94%][Progress:============>                 43%] [Cov:================================>  94%][Progress:============>                 43%] [Cov:================================>  94%][Progress:=============>                44%] [Cov:================================>  94%][Progress:=============>                44%] [Cov:================================>  94%][Progress:=============>                44%] [Cov:================================>  94%][Progress:=============>                44%] [Cov:================================>  94%][Progress:=============>                44%] [Cov:================================>  94%][Progress:=============>                44%] [Cov:================================>  94%][Progress:=============>                44%] [Cov:================================>  94%][Progress:=============>                44%] [Cov:================================>  94%][Progress:=============>                44%] [Cov:================================>  94%][Progress:=============>                44%] [Cov:================================>  94%][Progress:=============>                44%] [Cov:================================>  94%][Progress:=============>                44%] [Cov:================================>  94%][Progress:=============>                44%] [Cov:================================>  94%][Progress:=============>                44%] [Cov:================================>  94%][Progress:=============>                44%] [Cov:================================>  94%][Progress:=============>                44%] [Cov:================================>  94%][Progress:=============>                45%] [Cov:================================>  94%][Progress:=============>                45%] [Cov:================================>  94%][Progress:=============>                45%] [Cov:================================>  94%][Progress:=============>                45%] [Cov:================================>  94%][Progress:=============>                45%] [Cov:================================>  94%][Progress:=============>                45%] [Cov:================================>  94%][Progress:=============>                45%] [Cov:================================>  94%][Progress:=============>                45%] [Cov:================================>  94%][Progress:=============>                45%] [Cov:================================>  94%][Progress:=============>                45%] [Cov:================================>  94%][Progress:=============>                45%] [Cov:================================>  94%][Progress:=============>                45%] [Cov:================================>  94%][Progress:=============>                45%] [Cov:================================>  94%][Progress:=============>                45%] [Cov:================================>  94%][Progress:=============>                45%] [Cov:================================>  94%][Progress:=============>                45%] [Cov:================================>  94%][Progress:=============>                46%] [Cov:================================>  94%][Progress:=============>                46%] [Cov:================================>  94%][Progress:=============>                46%] [Cov:================================>  94%][Progress:=============>                46%] [Cov:================================>  94%][Progress:=============>                46%] [Cov:================================>  94%][Progress:=============>                46%] [Cov:================================>  94%][Progress:=============>                46%] [Cov:================================>  94%][Progress:=============>                46%] [Cov:================================>  94%][Progress:=============>                46%] [Cov:================================>  94%][Progress:=============>                46%] [Cov:================================>  94%][Progress:=============>                46%] [Cov:================================>  94%][Progress:=============>                46%] [Cov:================================>  94%][Progress:=============>                46%] [Cov:================================>  94%][Progress:=============>                46%] [Cov:================================>  94%][Progress:=============>                46%] [Cov:================================>  94%][Progress:=============>                46%] [Cov:================================>  94%][Progress:=============>                46%] [Cov:================================>  94%][Progress:=============>                46%] [Cov:================================>  94%][Progress:=============>                46%] [Cov:================================>  94%][Progress:=============>                46%] [Cov:================================>  94%][Progress:=============>                46%] [Cov:================================>  94%][Progress:=============>                46%] [Cov:================================>  94%][Progress:==============>               47%] [Cov:================================>  94%][Progress:==============>               47%] [Cov:================================>  94%][Progress:==============>               47%] [Cov:================================>  94%][Progress:==============>               47%] [Cov:================================>  94%][Progress:==============>               47%] [Cov:================================>  94%][Progress:==============>               47%] [Cov:================================>  94%][Progress:==============>               47%] [Cov:================================>  94%][Progress:==============>               47%] [Cov:================================>  94%][Progress:==============>               47%] [Cov:================================>  94%][Progress:==============>               47%] [Cov:================================>  94%][Progress:==============>               47%] [Cov:================================>  94%][Progress:==============>               47%] [Cov:================================>  94%][Progress:==============>               47%] [Cov:================================>  94%][Progress:==============>               47%] [Cov:================================>  94%][Progress:==============>               47%] [Cov:================================>  94%][Progress:==============>               47%] [Cov:================================>  94%][Progress:==============>               48%] [Cov:================================>  94%][Progress:==============>               48%] [Cov:================================>  94%][Progress:==============>               48%] [Cov:================================>  94%][Progress:==============>               48%] [Cov:================================>  94%][Progress:==============>               48%] [Cov:================================>  94%][Progress:==============>               48%] [Cov:================================>  94%][Progress:==============>               48%] [Cov:================================>  94%][Progress:==============>               48%] [Cov:================================>  94%][Progress:==============>               48%] [Cov:================================>  94%][Progress:==============>               48%] [Cov:================================>  94%][Progress:==============>               48%] [Cov:================================>  94%][Progress:==============>               48%] [Cov:================================>  94%][Progress:==============>               48%] [Cov:================================>  94%][Progress:==============>               48%] [Cov:================================>  94%][Progress:==============>               48%] [Cov:================================>  94%][Progress:==============>               48%] [Cov:================================>  94%][Progress:==============>               49%] [Cov:================================>  94%][Progress:==============>               49%] [Cov:================================>  94%][Progress:==============>               49%] [Cov:================================>  94%][Progress:==============>               49%] [Cov:================================>  94%][Progress:==============>               49%] [Cov:================================>  94%][Progress:==============>               49%] [Cov:================================>  94%][Progress:==============>               49%] [Cov:================================>  94%][Progress:==============>               49%] [Cov:================================>  94%][Progress:==============>               49%] [Cov:================================>  94%][Progress:==============>               49%] [Cov:================================>  94%][Progress:==============>               49%] [Cov:================================>  94%][Progress:==============>               49%] [Cov:================================>  94%][Progress:==============>               49%] [Cov:================================>  94%][Progress:==============>               49%] [Cov:================================>  94%][Progress:==============>               49%] [Cov:================================>  94%][Progress:==============>               49%] [Cov:================================>  94%][Progress:==============>               49%] [Cov:================================>  94%][Progress:==============>               49%] [Cov:================================>  94%][Progress:==============>               49%] [Cov:================================>  94%][Progress:===============>              50%] [Cov:================================>  94%][Progress:===============>              50%] [Cov:================================>  94%][Progress:===============>              50%] [Cov:================================>  94%][Progress:===============>              50%] [Cov:================================>  94%][Progress:===============>              50%] [Cov:================================>  94%][Progress:===============>              50%] [Cov:================================>  94%][Progress:===============>              50%] [Cov:================================>  94%][Progress:===============>              50%] [Cov:================================>  94%][Progress:===============>              50%] [Cov:================================>  94%][Progress:===============>              50%] [Cov:================================>  94%][Progress:===============>              50%] [Cov:================================>  94%][Progress:===============>              50%] [Cov:================================>  94%][Progress:===============>              50%] [Cov:================================>  94%][Progress:===============>              50%] [Cov:================================>  94%][Progress:===============>              50%] [Cov:================================>  94%][Progress:===============>              51%] [Cov:================================>  94%][Progress:===============>              51%] [Cov:================================>  94%][Progress:===============>              51%] [Cov:================================>  94%][Progress:===============>              51%] [Cov:================================>  94%][Progress:===============>              51%] [Cov:================================>  94%][Progress:===============>              51%] [Cov:================================>  94%][Progress:===============>              51%] [Cov:================================>  94%][Progress:===============>              51%] [Cov:================================>  94%][Progress:===============>              51%] [Cov:================================>  94%][Progress:===============>              51%] [Cov:================================>  94%][Progress:===============>              51%] [Cov:================================>  94%][Progress:===============>              51%] [Cov:================================>  94%][Progress:===============>              51%] [Cov:================================>  94%][Progress:===============>              51%] [Cov:================================>  94%][Progress:===============>              51%] [Cov:================================>  94%][Progress:===============>              52%] [Cov:================================>  94%][Progress:===============>              52%] [Cov:================================>  94%][Progress:===============>              52%] [Cov:================================>  94%][Progress:===============>              52%] [Cov:================================>  94%][Progress:===============>              52%] [Cov:================================>  94%][Progress:===============>              52%] [Cov:================================>  94%][Progress:===============>              52%] [Cov:================================>  94%][Progress:===============>              52%] [Cov:================================>  94%][Progress:===============>              52%] [Cov:================================>  94%][Progress:===============>              52%] [Cov:================================>  94%][Progress:===============>              52%] [Cov:================================>  94%][Progress:===============>              52%] [Cov:================================>  94%][Progress:===============>              52%] [Cov:================================>  94%][Progress:===============>              53%] [Cov:================================>  94%][Progress:===============>              53%] [Cov:================================>  94%][Progress:===============>              53%] [Cov:================================>  94%][Progress:===============>              53%] [Cov:================================>  94%][Progress:===============>              53%] [Cov:================================>  94%][Progress:===============>              53%] [Cov:================================>  94%][Progress:===============>              53%] [Cov:================================>  94%][Progress:===============>              53%] [Cov:================================>  94%][Progress:===============>              53%] [Cov:================================>  94%][Progress:===============>              53%] [Cov:================================>  94%][Progress:===============>              53%] [Cov:================================>  94%][Progress:===============>              53%] [Cov:================================>  94%][Progress:===============>              53%] [Cov:================================>  94%][Progress:===============>              53%] [Cov:================================>  94%][Progress:================>             54%] [Cov:================================>  94%][Progress:================>             54%] [Cov:================================>  94%][Progress:================>             54%] [Cov:================================>  94%][Progress:================>             54%] [Cov:================================>  94%][Progress:================>             54%] [Cov:================================>  94%][Progress:================>             54%] [Cov:================================>  94%][Progress:================>             54%] [Cov:================================>  94%][Progress:================>             54%] [Cov:================================>  94%][Progress:================>             54%] [Cov:================================>  94%][Progress:================>             54%] [Cov:================================>  94%][Progress:================>             54%] [Cov:================================>  94%][Progress:================>             54%] [Cov:================================>  94%][Progress:================>             54%] [Cov:================================>  94%][Progress:================>             54%] [Cov:================================>  94%][Progress:================>             54%] [Cov:================================>  94%][Progress:================>             54%] [Cov:================================>  94%][Progress:================>             54%] [Cov:================================>  94%][Progress:================>             54%] [Cov:================================>  94%][Progress:================>             55%] [Cov:================================>  94%][Progress:================>             55%] [Cov:================================>  94%][Progress:================>             55%] [Cov:================================>  94%][Progress:================>             55%] [Cov:================================>  94%][Progress:================>             55%] [Cov:================================>  94%][Progress:================>             55%] [Cov:================================>  94%][Progress:================>             55%] [Cov:================================>  94%][Progress:================>             55%] [Cov:================================>  94%][Progress:================>             55%] [Cov:================================>  94%][Progress:================>             55%] [Cov:================================>  94%][Progress:================>             55%] [Cov:================================>  94%][Progress:================>             55%] [Cov:================================>  94%][Progress:================>             55%] [Cov:================================>  94%][Progress:================>             55%] [Cov:================================>  94%][Progress:================>             56%] [Cov:================================>  94%][Progress:================>             56%] [Cov:================================>  94%][Progress:================>             56%] [Cov:================================>  94%][Progress:================>             56%] [Cov:================================>  94%][Progress:================>             56%] [Cov:================================>  94%][Progress:================>             56%] [Cov:================================>  94%][Progress:================>             56%] [Cov:================================>  94%][Progress:================>             56%] [Cov:================================>  94%][Progress:================>             56%] [Cov:================================>  94%][Progress:================>             56%] [Cov:================================>  94%][Progress:================>             56%] [Cov:================================>  94%][Progress:================>             56%] [Cov:================================>  94%][Progress:================>             56%] [Cov:================================>  94%][Progress:================>             56%] [Cov:================================>  94%][Progress:=================>            57%] [Cov:================================>  94%][Progress:=================>            57%] [Cov:================================>  94%][Progress:=================>            57%] [Cov:================================>  94%][Progress:=================>            57%] [Cov:================================>  94%][Progress:=================>            57%] [Cov:================================>  94%][Progress:=================>            57%] [Cov:================================>  94%][Progress:=================>            57%] [Cov:================================>  94%][Progress:=================>            57%] [Cov:================================>  94%][Progress:=================>            57%] [Cov:================================>  94%][Progress:=================>            57%] [Cov:================================>  94%][Progress:=================>            57%] [Cov:================================>  94%][Progress:=================>            57%] [Cov:================================>  94%][Progress:=================>            57%] [Cov:================================>  94%][Progress:=================>            57%] [Cov:================================>  94%][Progress:=================>            57%] [Cov:================================>  94%][Progress:=================>            57%] [Cov:================================>  94%][Progress:=================>            57%] [Cov:================================>  94%][Progress:=================>            58%] [Cov:================================>  94%][Progress:=================>            58%] [Cov:================================>  94%][Progress:=================>            58%] [Cov:================================>  94%][Progress:=================>            58%] [Cov:================================>  94%][Progress:=================>            58%] [Cov:================================>  94%][Progress:=================>            58%] [Cov:================================>  94%][Progress:=================>            58%] [Cov:================================>  94%][Progress:=================>            58%] [Cov:================================>  94%][Progress:=================>            58%] [Cov:================================>  94%][Progress:=================>            58%] [Cov:================================>  94%][Progress:=================>            58%] [Cov:================================>  94%][Progress:=================>            58%] [Cov:================================>  94%][Progress:=================>            58%] [Cov:================================>  94%][Progress:=================>            59%] [Cov:================================>  94%][Progress:=================>            59%] [Cov:================================>  94%][Progress:=================>            59%] [Cov:================================>  94%][Progress:=================>            59%] [Cov:================================>  94%][Progress:=================>            59%] [Cov:================================>  94%][Progress:=================>            59%] [Cov:================================>  94%][Progress:=================>            59%] [Cov:================================>  94%][Progress:=================>            59%] [Cov:================================>  94%][Progress:=================>            59%] [Cov:================================>  94%][Progress:=================>            59%] [Cov:================================>  94%][Progress:=================>            59%] [Cov:================================>  94%][Progress:=================>            59%] [Cov:================================>  94%][Progress:=================>            59%] [Cov:================================>  94%][Progress:=================>            59%] [Cov:================================>  94%][Progress:==================>           60%] [Cov:================================>  94%][Progress:==================>           60%] [Cov:================================>  94%][Progress:==================>           60%] [Cov:================================>  94%][Progress:==================>           60%] [Cov:================================>  94%][Progress:==================>           60%] [Cov:================================>  94%][Progress:==================>           60%] [Cov:================================>  94%][Progress:==================>           60%] [Cov:================================>  94%][Progress:==================>           60%] [Cov:================================>  94%][Progress:==================>           60%] [Cov:================================>  94%][Progress:==================>           60%] [Cov:================================>  94%][Progress:==================>           60%] [Cov:================================>  94%][Progress:==================>           60%] [Cov:================================>  94%][Progress:==================>           60%] [Cov:================================>  94%][Progress:==================>           60%] [Cov:================================>  94%][Progress:==================>           60%] [Cov:================================>  94%][Progress:==================>           60%] [Cov:================================>  94%][Progress:==================>           61%] [Cov:================================>  94%][Progress:==================>           61%] [Cov:================================>  94%][Progress:==================>           61%] [Cov:================================>  94%][Progress:==================>           61%] [Cov:================================>  94%][Progress:==================>           61%] [Cov:================================>  94%][Progress:==================>           61%] [Cov:================================>  94%][Progress:==================>           61%] [Cov:================================>  94%][Progress:==================>           61%] [Cov:================================>  94%][Progress:==================>           61%] [Cov:================================>  94%][Progress:==================>           61%] [Cov:================================>  94%][Progress:==================>           61%] [Cov:================================>  94%][Progress:==================>           61%] [Cov:================================>  94%][Progress:==================>           61%] [Cov:================================>  94%][Progress:==================>           62%] [Cov:================================>  94%][Progress:==================>           62%] [Cov:================================>  94%][Progress:==================>           62%] [Cov:================================>  94%][Progress:==================>           62%] [Cov:================================>  94%][Progress:==================>           62%] [Cov:================================>  94%][Progress:==================>           62%] [Cov:================================>  94%][Progress:==================>           62%] [Cov:================================>  94%][Progress:==================>           62%] [Cov:================================>  94%][Progress:==================>           62%] [Cov:================================>  94%][Progress:==================>           62%] [Cov:================================>  94%][Progress:==================>           62%] [Cov:================================>  94%][Progress:==================>           62%] [Cov:================================>  94%][Progress:==================>           62%] [Cov:================================>  94%][Progress:==================>           62%] [Cov:================================>  94%][Progress:==================>           62%] [Cov:================================>  94%][Progress:==================>           62%] [Cov:================================>  94%][Progress:==================>           63%] [Cov:================================>  94%][Progress:==================>           63%] [Cov:================================>  94%][Progress:==================>           63%] [Cov:================================>  94%][Progress:==================>           63%] [Cov:================================>  94%][Progress:==================>           63%] [Cov:================================>  94%][Progress:==================>           63%] [Cov:================================>  94%][Progress:==================>           63%] [Cov:================================>  94%][Progress:==================>           63%] [Cov:================================>  94%][Progress:==================>           63%] [Cov:================================>  94%][Progress:==================>           63%] [Cov:================================>  94%][Progress:==================>           63%] [Cov:================================>  94%][Progress:===================>          64%] [Cov:================================>  94%][Progress:===================>          64%] [Cov:================================>  94%][Progress:===================>          64%] [Cov:================================>  94%][Progress:===================>          64%] [Cov:================================>  94%][Progress:===================>          64%] [Cov:================================>  94%][Progress:===================>          64%] [Cov:================================>  94%][Progress:===================>          64%] [Cov:================================>  94%][Progress:===================>          64%] [Cov:================================>  94%][Progress:===================>          64%] [Cov:================================>  94%][Progress:===================>          64%] [Cov:================================>  94%][Progress:===================>          64%] [Cov:================================>  94%][Progress:===================>          64%] [Cov:================================>  94%][Progress:===================>          64%] [Cov:================================>  94%][Progress:===================>          65%] [Cov:================================>  94%][Progress:===================>          65%] [Cov:================================>  94%][Progress:===================>          65%] [Cov:================================>  94%][Progress:===================>          65%] [Cov:================================>  94%][Progress:===================>          65%] [Cov:================================>  94%][Progress:===================>          65%] [Cov:================================>  94%][Progress:===================>          65%] [Cov:================================>  94%][Progress:===================>          65%] [Cov:================================>  94%][Progress:===================>          65%] [Cov:================================>  94%][Progress:===================>          65%] [Cov:================================>  94%][Progress:===================>          65%] [Cov:================================>  94%][Progress:===================>          66%] [Cov:================================>  94%][Progress:===================>          66%] [Cov:================================>  94%][Progress:===================>          66%] [Cov:================================>  94%][Progress:===================>          66%] [Cov:================================>  94%][Progress:===================>          66%] [Cov:================================>  94%][Progress:===================>          66%] [Cov:================================>  94%][Progress:===================>          66%] [Cov:================================>  94%][Progress:===================>          66%] [Cov:================================>  94%][Progress:===================>          66%] [Cov:================================>  94%][Progress:===================>          66%] [Cov:================================>  94%][Progress:===================>          66%] [Cov:================================>  94%][Progress:====================>         67%] [Cov:================================>  94%][Progress:====================>         67%] [Cov:================================>  94%][Progress:====================>         67%] [Cov:================================>  94%][Progress:====================>         67%] [Cov:================================>  94%][Progress:====================>         67%] [Cov:================================>  94%][Progress:====================>         67%] [Cov:================================>  94%][Progress:====================>         67%] [Cov:================================>  94%][Progress:====================>         67%] [Cov:================================>  94%][Progress:====================>         67%] [Cov:================================>  94%][Progress:====================>         67%] [Cov:================================>  94%][Progress:====================>         67%] [Cov:================================>  94%][Progress:====================>         68%] [Cov:================================>  94%][Progress:====================>         68%] [Cov:================================>  94%][Progress:====================>         68%] [Cov:================================>  94%][Progress:====================>         68%] [Cov:================================>  94%][Progress:====================>         68%] [Cov:================================>  94%][Progress:====================>         68%] [Cov:================================>  94%][Progress:====================>         68%] [Cov:================================>  94%][Progress:====================>         68%] [Cov:================================>  94%][Progress:====================>         68%] [Cov:================================>  94%][Progress:====================>         69%] [Cov:================================>  94%][Progress:====================>         69%] [Cov:================================>  94%][Progress:====================>         69%] [Cov:================================>  94%][Progress:====================>         69%] [Cov:================================>  94%][Progress:====================>         69%] [Cov:================================>  94%][Progress:====================>         69%] [Cov:================================>  94%][Progress:====================>         69%] [Cov:================================>  94%][Progress:====================>         69%] [Cov:================================>  94%][Progress:====================>         69%] [Cov:================================>  94%][Progress:====================>         69%] [Cov:================================>  94%][Progress:=====================>        70%] [Cov:================================>  94%][Progress:=====================>        70%] [Cov:================================>  94%][Progress:=====================>        70%] [Cov:================================>  94%][Progress:=====================>        70%] [Cov:================================>  94%][Progress:=====================>        70%] [Cov:================================>  94%][Progress:=====================>        70%] [Cov:================================>  94%][Progress:=====================>        70%] [Cov:================================>  94%][Progress:=====================>        70%] [Cov:================================>  94%][Progress:=====================>        70%] [Cov:================================>  94%][Progress:=====================>        70%] [Cov:================================>  94%][Progress:=====================>        70%] [Cov:================================>  94%][Progress:=====================>        71%] [Cov:================================>  94%][Progress:=====================>        71%] [Cov:================================>  94%][Progress:=====================>        71%] [Cov:================================>  94%][Progress:=====================>        71%] [Cov:================================>  94%][Progress:=====================>        71%] [Cov:================================>  94%][Progress:=====================>        71%] [Cov:================================>  94%][Progress:=====================>        71%] [Cov:================================>  94%][Progress:=====================>        71%] [Cov:================================>  94%][Progress:=====================>        71%] [Cov:================================>  94%][Progress:=====================>        71%] [Cov:================================>  94%][Progress:=====================>        71%] [Cov:================================>  94%][Progress:=====================>        71%] [Cov:================================>  94%][Progress:=====================>        71%] [Cov:================================>  94%][Progress:=====================>        71%] [Cov:================================>  94%][Progress:=====================>        72%] [Cov:================================>  94%][Progress:=====================>        72%] [Cov:================================>  94%][Progress:=====================>        72%] [Cov:================================>  94%][Progress:=====================>        72%] [Cov:================================>  94%][Progress:=====================>        72%] [Cov:================================>  94%][Progress:=====================>        72%] [Cov:================================>  94%][Progress:=====================>        72%] [Cov:================================>  94%][Progress:=====================>        72%] [Cov:================================>  94%][Progress:=====================>        72%] [Cov:================================>  94%][Progress:=====================>        72%] [Cov:================================>  94%][Progress:=====================>        73%] [Cov:================================>  94%][Progress:=====================>        73%] [Cov:================================>  94%][Progress:=====================>        73%] [Cov:================================>  94%][Progress:=====================>        73%] [Cov:================================>  94%][Progress:=====================>        73%] [Cov:================================>  94%][Progress:=====================>        73%] [Cov:================================>  94%][Progress:=====================>        73%] [Cov:================================>  94%][Progress:=====================>        73%] [Cov:================================>  94%][Progress:=====================>        73%] [Cov:================================>  94%][Progress:=====================>        73%] [Cov:================================>  94%][Progress:======================>       74%] [Cov:================================>  94%][Progress:======================>       74%] [Cov:================================>  94%][Progress:======================>       74%] [Cov:================================>  94%][Progress:======================>       74%] [Cov:================================>  94%][Progress:======================>       74%] [Cov:================================>  94%][Progress:======================>       74%] [Cov:================================>  94%][Progress:======================>       74%] [Cov:================================>  94%][Progress:======================>       74%] [Cov:================================>  94%][Progress:======================>       74%] [Cov:================================>  94%][Progress:======================>       74%] [Cov:================================>  94%][Progress:======================>       75%] [Cov:================================>  94%][Progress:======================>       75%] [Cov:================================>  94%][Progress:======================>       75%] [Cov:================================>  94%][Progress:======================>       75%] [Cov:================================>  94%][Progress:======================>       75%] [Cov:================================>  94%][Progress:======================>       75%] [Cov:================================>  94%][Progress:======================>       75%] [Cov:================================>  94%][Progress:======================>       75%] [Cov:================================>  94%][Progress:======================>       75%] [Cov:================================>  94%][Progress:======================>       75%] [Cov:================================>  94%][Progress:======================>       75%] [Cov:================================>  94%][Progress:======================>       76%] [Cov:================================>  94%][Progress:======================>       76%] [Cov:================================>  94%][Progress:======================>       76%] [Cov:================================>  94%][Progress:======================>       76%] [Cov:================================>  94%][Progress:======================>       76%] [Cov:================================>  94%][Progress:======================>       76%] [Cov:================================>  94%][Progress:======================>       76%] [Cov:================================>  94%][Progress:======================>       76%] [Cov:================================>  94%][Progress:======================>       76%] [Cov:================================>  94%][Progress:======================>       76%] [Cov:================================>  94%][Progress:======================>       76%] [Cov:================================>  94%][Progress:======================>       76%] [Cov:================================>  94%][Progress:=======================>      77%] [Cov:================================>  94%][Progress:=======================>      77%] [Cov:================================>  94%][Progress:=======================>      77%] [Cov:================================>  94%][Progress:=======================>      77%] [Cov:================================>  94%][Progress:=======================>      77%] [Cov:================================>  94%][Progress:=======================>      77%] [Cov:================================>  94%][Progress:=======================>      77%] [Cov:================================>  94%][Progress:=======================>      77%] [Cov:================================>  94%][Progress:=======================>      77%] [Cov:================================>  94%][Progress:=======================>      77%] [Cov:================================>  94%][Progress:=======================>      77%] [Cov:================================>  94%][Progress:=======================>      78%] [Cov:================================>  94%][Progress:=======================>      78%] [Cov:================================>  94%][Progress:=======================>      78%] [Cov:================================>  94%][Progress:=======================>      78%] [Cov:================================>  94%][Progress:=======================>      78%] [Cov:================================>  94%][Progress:=======================>      78%] [Cov:================================>  94%][Progress:=======================>      78%] [Cov:================================>  94%][Progress:=======================>      78%] [Cov:================================>  94%][Progress:=======================>      78%] [Cov:================================>  94%][Progress:=======================>      79%] [Cov:================================>  94%][Progress:=======================>      79%] [Cov:================================>  94%][Progress:=======================>      79%] [Cov:================================>  94%][Progress:=======================>      79%] [Cov:================================>  94%][Progress:=======================>      79%] [Cov:================================>  94%][Progress:=======================>      79%] [Cov:================================>  94%][Progress:=======================>      79%] [Cov:================================>  94%][Progress:=======================>      79%] [Cov:================================>  94%][Progress:=======================>      79%] [Cov:================================>  94%][Progress:=======================>      79%] [Cov:================================>  94%][Progress:=======================>      79%] [Cov:================================>  94%][Progress:========================>     80%] [Cov:================================>  94%][Progress:========================>     80%] [Cov:================================>  94%][Progress:========================>     80%] [Cov:================================>  94%][Progress:========================>     80%] [Cov:================================>  94%][Progress:========================>     80%] [Cov:================================>  94%][Progress:========================>     80%] [Cov:================================>  94%][Progress:========================>     80%] [Cov:================================>  94%][Progress:========================>     80%] [Cov:================================>  94%][Progress:========================>     81%] [Cov:================================>  94%][Progress:========================>     81%] [Cov:================================>  94%][Progress:========================>     81%] [Cov:================================>  94%][Progress:========================>     81%] [Cov:================================>  94%][Progress:========================>     81%] [Cov:================================>  94%][Progress:========================>     81%] [Cov:================================>  94%][Progress:========================>     81%] [Cov:================================>  94%][Progress:========================>     81%] [Cov:================================>  94%][Progress:========================>     81%] [Cov:================================>  94%][Progress:========================>     82%] [Cov:================================>  94%][Progress:========================>     82%] [Cov:================================>  94%][Progress:========================>     82%] [Cov:================================>  94%][Progress:========================>     82%] [Cov:================================>  94%][Progress:========================>     82%] [Cov:================================>  94%][Progress:========================>     82%] [Cov:================================>  94%][Progress:========================>     82%] [Cov:================================>  94%][Progress:========================>     82%] [Cov:================================>  94%][Progress:========================>     82%] [Cov:================================>  94%][Progress:========================>     82%] [Cov:================================>  94%][Progress:========================>     83%] [Cov:================================>  94%][Progress:========================>     83%] [Cov:================================>  94%][Progress:========================>     83%] [Cov:================================>  94%][Progress:========================>     83%] [Cov:================================>  94%][Progress:========================>     83%] [Cov:================================>  94%][Progress:========================>     83%] [Cov:================================>  94%][Progress:========================>     83%] [Cov:================================>  94%][Progress:========================>     83%] [Cov:================================>  94%][Progress:========================>     83%] [Cov:================================>  94%][Progress:========================>     83%] [Cov:================================>  94%][Progress:========================>     83%] [Cov:================================>  94%][Progress:========================>     83%] [Cov:================================>  94%][Progress:=========================>    84%] [Cov:================================>  94%][Progress:=========================>    84%] [Cov:================================>  94%][Progress:=========================>    84%] [Cov:================================>  94%][Progress:=========================>    84%] [Cov:================================>  94%][Progress:=========================>    84%] [Cov:================================>  94%][Progress:=========================>    84%] [Cov:================================>  94%][Progress:=========================>    84%] [Cov:================================>  94%][Progress:=========================>    84%] [Cov:================================>  94%][Progress:=========================>    84%] [Cov:================================>  94%][Progress:=========================>    84%] [Cov:================================>  94%][Progress:=========================>    85%] [Cov:================================>  94%][Progress:=========================>    85%] [Cov:================================>  94%][Progress:=========================>    85%] [Cov:================================>  94%][Progress:=========================>    85%] [Cov:================================>  94%][Progress:=========================>    85%] [Cov:================================>  94%][Progress:=========================>    85%] [Cov:================================>  94%][Progress:=========================>    85%] [Cov:================================>  94%][Progress:=========================>    85%] [Cov:================================>  94%][Progress:=========================>    85%] [Cov:================================>  94%][Progress:=========================>    86%] [Cov:================================>  94%][Progress:=========================>    86%] [Cov:================================>  94%][Progress:=========================>    86%] [Cov:================================>  94%][Progress:=========================>    86%] [Cov:================================>  94%][Progress:=========================>    86%] [Cov:================================>  94%][Progress:=========================>    86%] [Cov:================================>  94%][Progress:=========================>    86%] [Cov:================================>  94%][Progress:=========================>    86%] [Cov:================================>  94%][Progress:=========================>    86%] [Cov:================================>  94%][Progress:=========================>    86%] [Cov:================================>  94%][Progress:=========================>    86%] [Cov:================================>  94%][Progress:==========================>   87%] [Cov:================================>  94%][Progress:==========================>   87%] [Cov:================================>  94%][Progress:==========================>   87%] [Cov:================================>  94%][Progress:==========================>   87%] [Cov:================================>  94%][Progress:==========================>   87%] [Cov:================================>  94%][Progress:==========================>   87%] [Cov:================================>  94%][Progress:==========================>   87%] [Cov:================================>  94%][Progress:==========================>   87%] [Cov:================================>  94%][Progress:==========================>   87%] [Cov:================================>  94%][Progress:==========================>   87%] [Cov:================================>  94%][Progress:==========================>   87%] [Cov:================================>  94%][Progress:==========================>   87%] [Cov:================================>  94%][Progress:==========================>   88%] [Cov:================================>  94%][Progress:==========================>   88%] [Cov:================================>  94%][Progress:==========================>   88%] [Cov:================================>  94%][Progress:==========================>   88%] [Cov:================================>  94%][Progress:==========================>   88%] [Cov:================================>  94%][Progress:==========================>   88%] [Cov:================================>  94%][Progress:==========================>   88%] [Cov:================================>  94%][Progress:==========================>   88%] [Cov:================================>  94%][Progress:==========================>   88%] [Cov:================================>  94%][Progress:==========================>   88%] [Cov:================================>  94%][Progress:==========================>   88%] [Cov:================================>  94%][Progress:==========================>   88%] [Cov:================================>  94%][Progress:==========================>   88%] [Cov:================================>  94%][Progress:==========================>   88%] [Cov:================================>  94%][Progress:==========================>   89%] [Cov:================================>  94%][Progress:==========================>   89%] [Cov:================================>  94%][Progress:==========================>   89%] [Cov:================================>  94%][Progress:==========================>   89%] [Cov:================================>  94%][Progress:==========================>   89%] [Cov:================================>  94%][Progress:==========================>   89%] [Cov:================================>  94%][Progress:==========================>   89%] [Cov:================================>  94%][Progress:==========================>   89%] [Cov:================================>  94%][Progress:==========================>   89%] [Cov:================================>  94%][Progress:==========================>   89%] [Cov:================================>  94%][Progress:===========================>  90%] [Cov:================================>  94%][Progress:===========================>  90%] [Cov:================================>  94%][Progress:===========================>  90%] [Cov:================================>  94%][Progress:===========================>  90%] [Cov:================================>  94%][Progress:===========================>  90%] [Cov:================================>  94%][Progress:===========================>  90%] [Cov:================================>  94%][Progress:===========================>  90%] [Cov:================================>  94%][Progress:===========================>  90%] [Cov:================================>  94%][Progress:===========================>  90%] [Cov:================================>  94%][Progress:===========================>  90%] [Cov:================================>  94%][Progress:===========================>  90%] [Cov:================================>  94%][Progress:===========================>  91%] [Cov:================================>  94%][Progress:===========================>  91%] [Cov:================================>  94%][Progress:===========================>  91%] [Cov:================================>  94%][Progress:===========================>  91%] [Cov:================================>  94%][Progress:===========================>  91%] [Cov:================================>  94%][Progress:===========================>  91%] [Cov:================================>  94%][Progress:===========================>  91%] [Cov:================================>  94%][Progress:===========================>  91%] [Cov:================================>  94%][Progress:===========================>  91%] [Cov:================================>  94%][Progress:===========================>  91%] [Cov:================================>  94%][Progress:===========================>  91%] [Cov:================================>  94%][Progress:===========================>  91%] [Cov:================================>  94%][Progress:===========================>  91%] [Cov:================================>  94%][Progress:===========================>  91%] [Cov:================================>  94%][Progress:===========================>  91%] [Cov:================================>  94%][Progress:===========================>  92%] [Cov:================================>  94%][Progress:===========================>  92%] [Cov:================================>  94%][Progress:===========================>  92%] [Cov:================================>  94%][Progress:===========================>  92%] [Cov:================================>  94%][Progress:===========================>  92%] [Cov:================================>  94%][Progress:===========================>  92%] [Cov:================================>  94%][Progress:===========================>  92%] [Cov:================================>  94%][Progress:===========================>  92%] [Cov:================================>  94%][Progress:===========================>  92%] [Cov:================================>  94%][Progress:===========================>  92%] [Cov:================================>  94%][Progress:===========================>  92%] [Cov:================================>  94%][Progress:===========================>  92%] [Cov:================================>  94%][Progress:===========================>  92%] [Cov:================================>  94%][Progress:===========================>  92%] [Cov:================================>  94%][Progress:===========================>  93%] [Cov:================================>  94%][Progress:===========================>  93%] [Cov:================================>  94%][Progress:===========================>  93%] [Cov:================================>  94%][Progress:===========================>  93%] [Cov:================================>  94%][Progress:===========================>  93%] [Cov:================================>  94%][Progress:===========================>  93%] [Cov:================================>  94%][Progress:===========================>  93%] [Cov:================================>  94%][Progress:===========================>  93%] [Cov:================================>  94%][Progress:===========================>  93%] [Cov:================================>  94%][Progress:===========================>  93%] [Cov:================================>  94%][Progress:===========================>  93%] [Cov:================================>  94%][Progress:============================> 94%] [Cov:================================>  94%][Progress:============================> 94%] [Cov:================================>  94%][Progress:============================> 94%] [Cov:================================>  94%][Progress:============================> 94%] [Cov:================================>  94%][Progress:============================> 94%] [Cov:================================>  94%][Progress:============================> 94%] [Cov:================================>  94%][Progress:============================> 94%] [Cov:================================>  94%][Progress:============================> 94%] [Cov:================================>  94%][Progress:============================> 94%] [Cov:================================>  94%][Progress:============================> 94%] [Cov:================================>  94%][Progress:============================> 94%] [Cov:================================>  94%][Progress:============================> 94%] [Cov:================================>  94%][Progress:============================> 95%] [Cov:================================>  94%][Progress:============================> 95%] [Cov:================================>  94%][Progress:============================> 95%] [Cov:================================>  94%][Progress:============================> 95%] [Cov:================================>  94%][Progress:============================> 95%] [Cov:================================>  94%][Progress:============================> 95%] [Cov:================================>  94%][Progress:============================> 95%] [Cov:================================>  94%][Progress:============================> 95%] [Cov:================================>  94%][Progress:============================> 95%] [Cov:================================>  94%][Progress:============================> 95%] [Cov:================================>  94%][Progress:============================> 95%] [Cov:================================>  94%][Progress:============================> 95%] [Cov:================================>  94%][Progress:============================> 95%] [Cov:================================>  94%][Progress:============================> 95%] [Cov:================================>  94%][Progress:============================> 95%] [Cov:================================>  94%][Progress:============================> 96%] [Cov:================================>  94%][Progress:============================> 96%] [Cov:================================>  94%][Progress:============================> 96%] [Cov:================================>  94%][Progress:============================> 96%] [Cov:================================>  94%][Progress:============================> 96%] [Cov:================================>  94%][Progress:============================> 96%] [Cov:================================>  94%][Progress:============================> 96%] [Cov:================================>  94%][Progress:============================> 96%] [Cov:================================>  94%][Progress:============================> 96%] [Cov:================================>  94%][Progress:============================> 96%] [Cov:================================>  94%][Progress:============================> 96%] [Cov:================================>  94%][Progress:============================> 96%] [Cov:================================>  94%][Progress:============================> 96%] [Cov:================================>  94%][Progress:============================> 96%] [Cov:================================>  94%][Progress:============================> 96%] [Cov:================================>  94%][Progress:============================> 96%] [Cov:================================>  94%][Progress:=============================>97%] [Cov:================================>  94%][Progress:=============================>97%] [Cov:================================>  94%][Progress:=============================>97%] [Cov:================================>  94%][Progress:=============================>97%] [Cov:================================>  94%][Progress:=============================>97%] [Cov:================================>  94%][Progress:=============================>97%] [Cov:================================>  94%][Progress:=============================>97%] [Cov:================================>  94%][Progress:=============================>97%] [Cov:================================>  94%][Progress:=============================>97%] [Cov:================================>  94%][Progress:=============================>97%] [Cov:================================>  94%][Progress:=============================>97%] [Cov:================================>  94%][Progress:=============================>97%] [Cov:================================>  94%][Progress:=============================>97%] [Cov:================================>  94%][Progress:=============================>97%] [Cov:================================>  94%][Progress:=============================>97%] [Cov:================================>  94%][Progress:=============================>97%] [Cov:================================>  94%][Progress:=============================>97%] [Cov:================================>  94%][Progress:=============================>98%] [Cov:================================>  94%][Progress:=============================>98%] [Cov:================================>  94%][Progress:=============================>98%] [Cov:================================>  94%][Progress:=============================>98%] [Cov:================================>  94%][Progress:=============================>98%] [Cov:================================>  94%][Progress:=============================>98%] [Cov:================================>  94%][Progress:=============================>98%] [Cov:================================>  94%][Progress:=============================>98%] [Cov:================================>  94%][Progress:=============================>98%] [Cov:================================>  94%][Progress:=============================>98%] [Cov:================================>  94%][Progress:=============================>98%] [Cov:================================>  94%][Progress:=============================>98%] [Cov:================================>  94%][Progress:=============================>98%] [Cov:================================>  94%][Progress:=============================>98%] [Cov:================================>  94%][Progress:=============================>98%] [Cov:================================>  94%][Progress:=============================>98%] [Cov:================================>  94%][Progress:=============================>98%] [Cov:================================>  94%][Progress:=============================>98%] [Cov:================================>  94%][Progress:=============================>98%] [Cov:================================>  94%][Progress:=============================>99%] [Cov:================================>  94%][Progress:=============================>99%] [Cov:================================>  94%][Progress:=============================>99%] [Cov:================================>  94%][Progress:=============================>99%] [Cov:================================>  94%][Progress:=============================>99%] [Cov:================================>  94%][Progress:=============================>99%] [Cov:================================>  94%][Progress:=============================>99%] [Cov:================================>  94%][Progress:=============================>99%] [Cov:================================>  94%][Progress:=============================>99%] [Cov:================================>  94%][Progress:=============================>99%] [Cov:================================>  94%][Progress:=============================>99%] [Cov:================================>  94%][Progress:=============================>99%] [Cov:================================>  94%][Progress:=============================>99%] [Cov:================================>  94%][Progress:=============================>99%] [Cov:================================>  94%][Progress:==============================100%] [Cov:================================>  94%][Progress:==============================100%] [Cov:================================>  94%][Progress:==============================100%] [Cov:================================>  94%][Progress:==============================100%] [Cov:================================>  94%][Progress:==============================100%] [Cov:================================>  94%][Progress:==============================100%] [Cov:================================>  94%][Progress:==============================100%] [Cov:================================>  94%][Progress:==============================100%] [Cov:================================>  94%][Progress:==============================100%] [Cov:================================>  94%][Progress:==============================100%] [Cov:================================>  94%]
* Search finished after 201s and 1268 generations, 626200 statements, best individual has fitness: 10.0
* Generated before the refinement 32 tests with total length 138
statement is: de.devcity.parseargs.ArgsParser()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.devcity.parseargs.ArgsParser
statement code is: ArgsParser argsParser = new ArgsParser()
statement is: getArgs()[Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class [Ljava.lang.String;
statement code is: String[] args = argsParser.getArgs()
test data is: ArgsParser argsParser = new ArgsParser();
argsParser.getArgs();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        int age = 50;
        String name = "Alice Johnson";
    }
}
statement is: int age = 50, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: String name = "Alice Johnson", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
* this is vulnerable: int _int = 50
* this is vulnerable: String string = "Alice Johnson"
TestCase is: int _int = 50;
String string = "Alice Johnson";

statement is: de.devcity.parseargs.ArgsParser()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.devcity.parseargs.ArgsParser
statement code is: ArgsParser argsParser = new ArgsParser()
statement is: setArgs([Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: argsParser.setArgs((String[]) null)
test data is: ArgsParser argsParser = new ArgsParser();
argsParser.setArgs((String[]) null);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        ArgsParser argsParser = new ArgsParser();
        argsParser.setArgs(new String[]{ "-a", "123", "-b", "true" });
    }
}
statement is: ArgsParser argsParser = new ArgsParser(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: argsParser.setArgs(new String[]{ "-a", "123", "-b", "true" }), class spoon.support.reflect.code.CtInvocationImpl
invocation is: argsParser.setArgs(new String[]{ "-a", "123", "-b", "true" }) target is: argsParser method is: setArgs(java.lang.String[])
source statement: de.devcity.parseargs.ArgsParser()V callee: VariableReference: Statement 0, type de.devcity.parseargs.ArgsParserindex is: 0
Matched Method is: setArgs([Ljava/lang/String;)V
i 0 Parameters size() 0 Num of Method Parameters: 1
TestCase is: ArgsParser argsParser = new ArgsParser();
String[] stringArray = null;
argsParser.setArgs(stringArray);

statement is: org.evosuite.testcase.statements.ArrayStatement@264f1765 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [Ljava.lang.String;
statement code is: String[] stringArray = new String[6]
statement is: de.devcity.parseargs.ArgsParser([Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.devcity.parseargs.ArgsParser
statement code is: ArgsParser argsParser = new ArgsParser(arg0)
statement is: getArgsLeftCount()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int argsLeftCount = argsParser.getArgsLeftCount()
test data is: String[] stringArray = new String[6];
ArgsParser argsParser = new ArgsParser(stringArray);
argsParser.getArgsLeftCount();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        String[] stringArray = new String[6];
        stringArray[0] = "arg1";
        stringArray[1] = "-f";
        stringArray[2] = "--foo";
        stringArray[3] = "-b";
        stringArray[4] = "bar";
        stringArray[5] = "baz";
        ArgsParser argsParser = new ArgsParser(stringArray);
        System.out.println(argsParser.getArgsLeftCount());// prints 2 }}

    }
}
statement is: String[] stringArray = new String[6], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [6] Ct is: String[] stringArray = new String[6] isAssignment: false Array: new String[6] Elements: []
lengths: [6] [6]
Their type are: class [Ljava.lang.String; String[]
statement is: stringArray[0] = "arg1", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"arg1" Ct is: stringArray[0] = "arg1"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[1] = "-f", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[1] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"-f" Ct is: stringArray[1] = "-f"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[2] = "--foo", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[2] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"--foo" Ct is: stringArray[2] = "--foo"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[3] = "-b", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[3] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"-b" Ct is: stringArray[3] = "-b"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[4] = "bar", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[4] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"bar" Ct is: stringArray[4] = "bar"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[5] = "baz", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[5] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"baz" Ct is: stringArray[5] = "baz"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: ArgsParser argsParser = new ArgsParser(stringArray), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: System.out.println(argsParser.getArgsLeftCount())// prints 2 }}
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: System.out.println(argsParser.getArgsLeftCount())// prints 2 }}
 target is: System.out method is: println(char[])
TestCase is: String[] stringArray = new String[6];
ArgsParser argsParser = new ArgsParser(stringArray);

statement is: org.evosuite.testcase.statements.ArrayStatement@4479cd78 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [Ljava.lang.String;
statement code is: String[] stringArray = new String[6]
statement is: org.evosuite.testcase.statements.AssignmentStatement@887fc4cb type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.String
statement code is: stringArray[0] = "L!OvKf.uQ`*(WX"
statement is: de.devcity.parseargs.ArgsParser([Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.devcity.parseargs.ArgsParser
statement code is: ArgsParser argsParser = new ArgsParser(arg0)
statement is: getArgsLeftCount()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int argsLeftCount = argsParser.getArgsLeftCount()
test data is: String[] stringArray = new String[6];
stringArray[0] = "L!OvKf.uQ`*(WX";
ArgsParser argsParser = new ArgsParser(stringArray);
argsParser.getArgsLeftCount();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        String[] stringArray = new String[6];
        stringArray[0] = "--help";
        ArgsParser argsParser = new ArgsParser(stringArray);
        argsParser.getArgsLeftCount();
    }
}
statement is: String[] stringArray = new String[6], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [6] Ct is: String[] stringArray = new String[6] isAssignment: false Array: new String[6] Elements: []
lengths: [6] [6]
Their type are: class [Ljava.lang.String; String[]
statement is: stringArray[0] = "--help", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"--help" Ct is: stringArray[0] = "--help"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: ArgsParser argsParser = new ArgsParser(stringArray), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: argsParser.getArgsLeftCount(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: argsParser.getArgsLeftCount() target is: argsParser method is: getArgsLeftCount()
source statement: de.devcity.parseargs.ArgsParser([Ljava/lang/String;)V callee: VariableReference: Statement 2, type de.devcity.parseargs.ArgsParserindex is: 3
Matched Method is: getArgsLeftCount()I
TestCase is: String[] stringArray = new String[6];
String string = "--help";
stringArray[0] = string;
ArgsParser argsParser = new ArgsParser(stringArray);
((ArgsParser) stringArray[0]).getArgsLeftCount();

statement is: org.evosuite.testcase.statements.ArrayStatement@3814eb3d type is: class org.evosuite.testcase.statements.ArrayStatement return type class [Ljava.lang.String;
statement code is: String[] stringArray = new String[6]
statement is: org.evosuite.testcase.statements.AssignmentStatement@42543004 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.String
statement code is: stringArray[0] = "L!OvKf.uQ`*(WX"
statement is: de.devcity.parseargs.ArgsParser([Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.devcity.parseargs.ArgsParser
statement code is: ArgsParser argsParser = new ArgsParser(arg0)
statement is: parseSwitchArgument(Ljava/lang/String;)Lde/devcity/parseargs/arguments/SwitchArgument; type is: class org.evosuite.testcase.statements.MethodStatement return type class de.devcity.parseargs.arguments.SwitchArgument
statement code is: SwitchArgument parseSwitchArgument = argsParser.parseSwitchArgument("--")
test data is: String[] stringArray = new String[6];
stringArray[0] = "L!OvKf.uQ`*(WX";
ArgsParser argsParser = new ArgsParser(stringArray);
argsParser.parseSwitchArgument("--");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        String[] stringArray = new String[6];
        stringArray[0] = "Hello World";
        ArgsParser argsParser = new ArgsParser(stringArray);
        argsParser.parseSwitchArgument("--");
    }
}
statement is: String[] stringArray = new String[6], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [6] Ct is: String[] stringArray = new String[6] isAssignment: false Array: new String[6] Elements: []
lengths: [6] [6]
Their type are: class [Ljava.lang.String; String[]
statement is: stringArray[0] = "Hello World", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"Hello World" Ct is: stringArray[0] = "Hello World"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: ArgsParser argsParser = new ArgsParser(stringArray), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: argsParser.parseSwitchArgument("--"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: argsParser.parseSwitchArgument("--") target is: argsParser method is: parseSwitchArgument(java.lang.String)
source statement: de.devcity.parseargs.ArgsParser([Ljava/lang/String;)V callee: VariableReference: Statement 2, type de.devcity.parseargs.ArgsParserindex is: 3
Matched Method is: parseSwitchArgument(Ljava/lang/String;)Lde/devcity/parseargs/arguments/SwitchArgument;
TestCase is: String[] stringArray = new String[6];
String string = "Hello World";
stringArray[0] = string;
ArgsParser argsParser = new ArgsParser(stringArray);
String string = "--";
((ArgsParser) stringArray[0]).parseSwitchArgument(string);

statement is: org.evosuite.testcase.statements.ArrayStatement@700c477d type is: class org.evosuite.testcase.statements.ArrayStatement return type class [Ljava.lang.String;
statement code is: String[] stringArray = new String[6]
statement is: org.evosuite.testcase.statements.AssignmentStatement@ad7c9a46 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.String
statement code is: stringArray[2] = "----"
statement is: de.devcity.parseargs.ArgsParser([Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.devcity.parseargs.ArgsParser
statement code is: ArgsParser argsParser = new ArgsParser(arg0)
statement is: parseSwitchArgument(Ljava/lang/String;)Lde/devcity/parseargs/arguments/SwitchArgument; type is: class org.evosuite.testcase.statements.MethodStatement return type class de.devcity.parseargs.arguments.SwitchArgument
statement code is: SwitchArgument parseSwitchArgument = argsParser.parseSwitchArgument("--")
test data is: String[] stringArray = new String[6];
stringArray[2] = "----";
ArgsParser argsParser = new ArgsParser(stringArray);
argsParser.parseSwitchArgument("--");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        String[] stringArray = new String[6];
        stringArray[2] = "--help";
        ArgsParser argsParser = new ArgsParser(stringArray);
        argsParser.parseSwitchArgument("--");
    }
}
statement is: String[] stringArray = new String[6], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [6] Ct is: String[] stringArray = new String[6] isAssignment: false Array: new String[6] Elements: []
lengths: [6] [6]
Their type are: class [Ljava.lang.String; String[]
statement is: stringArray[2] = "--help", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[2] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"--help" Ct is: stringArray[2] = "--help"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: ArgsParser argsParser = new ArgsParser(stringArray), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: argsParser.parseSwitchArgument("--"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: argsParser.parseSwitchArgument("--") target is: argsParser method is: parseSwitchArgument(java.lang.String)
source statement: de.devcity.parseargs.ArgsParser([Ljava/lang/String;)V callee: VariableReference: Statement 2, type de.devcity.parseargs.ArgsParserindex is: 3
Matched Method is: parseSwitchArgument(Ljava/lang/String;)Lde/devcity/parseargs/arguments/SwitchArgument;
TestCase is: String[] stringArray = new String[6];
String string = "--help";
stringArray[2] = string;
ArgsParser argsParser = new ArgsParser(stringArray);
String string = "--";
((ArgsParser) stringArray[2]).parseSwitchArgument(string);

statement is: org.evosuite.testcase.statements.ArrayStatement@9831f9d7 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [Ljava.lang.String;
statement code is: String[] stringArray = new String[18]
statement is: org.evosuite.testcase.statements.AssignmentStatement@8ed20835 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.String
statement code is: stringArray[0] = "-(JE[][6fyG"
statement is: de.devcity.parseargs.ArgsParser()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.devcity.parseargs.ArgsParser
statement code is: ArgsParser argsParser = new ArgsParser()
statement is: setArgs([Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: argsParser.setArgs(arg0)
statement is: parseSwitchArgument(Ljava/lang/String;)Lde/devcity/parseargs/arguments/SwitchArgument; type is: class org.evosuite.testcase.statements.MethodStatement return type class de.devcity.parseargs.arguments.SwitchArgument
statement code is: SwitchArgument parseSwitchArgument = argsParser.parseSwitchArgument("y")
test data is: String[] stringArray = new String[18];
stringArray[0] = "-(JE[][6fyG";
ArgsParser argsParser = new ArgsParser();
argsParser.setArgs(stringArray);
argsParser.parseSwitchArgument("y");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        String[] stringArray = new String[18];
        stringArray[0] = "--inputFile";
        ArgsParser argsParser = new ArgsParser();
        argsParser.setArgs(stringArray);
        argsParser.parseSwitchArgument("y");
    }
}
statement is: String[] stringArray = new String[18], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [18] Ct is: String[] stringArray = new String[18] isAssignment: false Array: new String[18] Elements: []
lengths: [18] [18]
Their type are: class [Ljava.lang.String; String[]
statement is: stringArray[0] = "--inputFile", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"--inputFile" Ct is: stringArray[0] = "--inputFile"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: ArgsParser argsParser = new ArgsParser(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: argsParser.setArgs(stringArray), class spoon.support.reflect.code.CtInvocationImpl
invocation is: argsParser.setArgs(stringArray) target is: argsParser method is: setArgs(java.lang.String[])
source statement: de.devcity.parseargs.ArgsParser()V callee: VariableReference: Statement 2, type de.devcity.parseargs.ArgsParserindex is: 3
Matched Method is: setArgs([Ljava/lang/String;)V
statement is: argsParser.parseSwitchArgument("y"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: argsParser.parseSwitchArgument("y") target is: argsParser method is: parseSwitchArgument(java.lang.String)
source statement: de.devcity.parseargs.ArgsParser()V callee: VariableReference: Statement 2, type de.devcity.parseargs.ArgsParserindex is: 3
Matched Method is: parseSwitchArgument(Ljava/lang/String;)Lde/devcity/parseargs/arguments/SwitchArgument;
TestCase is: String[] stringArray = new String[18];
String string = "--inputFile";
stringArray[0] = string;
ArgsParser argsParser = new ArgsParser();
((ArgsParser) stringArray[0]).setArgs(stringArray);
String string = "y";
((ArgsParser) stringArray[0]).parseSwitchArgument(string);

statement is: org.evosuite.testcase.statements.ArrayStatement@9cc86b09 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [Ljava.lang.String;
statement code is: String[] stringArray = new String[7]
statement is: org.evosuite.testcase.statements.AssignmentStatement@50df4709 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.String
statement code is: stringArray[2] = ""
statement is: de.devcity.parseargs.ArgsParser([Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.devcity.parseargs.ArgsParser
statement code is: ArgsParser argsParser = new ArgsParser(arg0)
statement is: parseSwitchArgument(Ljava/lang/String;)Lde/devcity/parseargs/arguments/SwitchArgument; type is: class org.evosuite.testcase.statements.MethodStatement return type class de.devcity.parseargs.arguments.SwitchArgument
statement code is: SwitchArgument parseSwitchArgument = argsParser.parseSwitchArgument("")
test data is: String[] stringArray = new String[7];
stringArray[2] = "";
ArgsParser argsParser = new ArgsParser(stringArray);
argsParser.parseSwitchArgument("");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        String[] stringArray = new String[7];
        stringArray[0] = "--option";
        stringArray[1] = "-s";
        stringArray[2] = "value";
        stringArray[3] = "--another-option";
        stringArray[4] = "--flag";
        stringArray[5] = "arg1 arg2 arg3";
        stringArray[6] = "";
        ArgsParser argsParser = new ArgsParser(stringArray);
        argsParser.parseSwitchArgument("");
    }
}
statement is: String[] stringArray = new String[7], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [7] Ct is: String[] stringArray = new String[7] isAssignment: false Array: new String[7] Elements: []
lengths: [7] [7]
Their type are: class [Ljava.lang.String; String[]
statement is: stringArray[0] = "--option", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"--option" Ct is: stringArray[0] = "--option"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[1] = "-s", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[1] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"-s" Ct is: stringArray[1] = "-s"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[2] = "value", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[2] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"value" Ct is: stringArray[2] = "value"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[3] = "--another-option", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[3] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"--another-option" Ct is: stringArray[3] = "--another-option"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[4] = "--flag", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[4] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"--flag" Ct is: stringArray[4] = "--flag"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[5] = "arg1 arg2 arg3", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[5] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"arg1 arg2 arg3" Ct is: stringArray[5] = "arg1 arg2 arg3"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[6] = "", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[6] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"" Ct is: stringArray[6] = ""
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: ArgsParser argsParser = new ArgsParser(stringArray), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: argsParser.parseSwitchArgument(""), class spoon.support.reflect.code.CtInvocationImpl
invocation is: argsParser.parseSwitchArgument("") target is: argsParser method is: parseSwitchArgument(java.lang.String)
source statement: de.devcity.parseargs.ArgsParser([Ljava/lang/String;)V callee: VariableReference: Statement 2, type de.devcity.parseargs.ArgsParserindex is: 15
Matched Method is: parseSwitchArgument(Ljava/lang/String;)Lde/devcity/parseargs/arguments/SwitchArgument;
TestCase is: String[] stringArray = new String[7];
String string = "--option";
stringArray[2] = string;
String string = "-s";
stringArray[2] = string;
String string = "value";
stringArray[2] = string;
String string = "--another-option";
stringArray[2] = string;
String string = "--flag";
stringArray[2] = string;
String string = "arg1 arg2 arg3";
stringArray[2] = string;
String string = "";
stringArray[2] = string;
ArgsParser argsParser = new ArgsParser(stringArray);
String string = "";
((ArgsParser) stringArray[2]).parseSwitchArgument(string);

statement is: org.evosuite.testcase.statements.ArrayStatement@ebd2e00a type is: class org.evosuite.testcase.statements.ArrayStatement return type class [Ljava.lang.String;
statement code is: String[] stringArray = new String[7]
statement is: org.evosuite.testcase.statements.AssignmentStatement@1a25d6b4 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.String
statement code is: stringArray[0] = "Z%%VSkuZ1X\""
statement is: de.devcity.parseargs.ArgsParser([Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.devcity.parseargs.ArgsParser
statement code is: ArgsParser argsParser = new ArgsParser(arg0)
statement is: parseSwitchArgument(Ljava/lang/String;)Lde/devcity/parseargs/arguments/SwitchArgument; type is: class org.evosuite.testcase.statements.MethodStatement return type class de.devcity.parseargs.arguments.SwitchArgument
statement code is: SwitchArgument parseSwitchArgument = argsParser.parseSwitchArgument("")
test data is: String[] stringArray = new String[7];
stringArray[0] = "Z%%VSkuZ1X\"";
ArgsParser argsParser = new ArgsParser(stringArray);
argsParser.parseSwitchArgument("");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        String[] stringArray = new String[7];
        stringArray[0] = "--help";
        ArgsParser argsParser = new ArgsParser(stringArray);
        argsParser.parseSwitchArgument("");
    }
}
statement is: String[] stringArray = new String[7], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [7] Ct is: String[] stringArray = new String[7] isAssignment: false Array: new String[7] Elements: []
lengths: [7] [7]
Their type are: class [Ljava.lang.String; String[]
statement is: stringArray[0] = "--help", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"--help" Ct is: stringArray[0] = "--help"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: ArgsParser argsParser = new ArgsParser(stringArray), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: argsParser.parseSwitchArgument(""), class spoon.support.reflect.code.CtInvocationImpl
invocation is: argsParser.parseSwitchArgument("") target is: argsParser method is: parseSwitchArgument(java.lang.String)
source statement: de.devcity.parseargs.ArgsParser([Ljava/lang/String;)V callee: VariableReference: Statement 2, type de.devcity.parseargs.ArgsParserindex is: 3
Matched Method is: parseSwitchArgument(Ljava/lang/String;)Lde/devcity/parseargs/arguments/SwitchArgument;
TestCase is: String[] stringArray = new String[7];
String string = "--help";
stringArray[0] = string;
ArgsParser argsParser = new ArgsParser(stringArray);
String string = "";
((ArgsParser) stringArray[0]).parseSwitchArgument(string);

statement is: de.devcity.parseargs.ArgsParser()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.devcity.parseargs.ArgsParser
statement code is: ArgsParser argsParser = new ArgsParser()
statement is: org.evosuite.testcase.statements.ArrayStatement@76bd586c type is: class org.evosuite.testcase.statements.ArrayStatement return type class [Ljava.lang.String;
statement code is: String[] stringArray = new String[3]
statement is: org.evosuite.testcase.statements.AssignmentStatement@803fd313 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.String
statement code is: stringArray[0] = "--"
statement is: setArgs([Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: argsParser.setArgs(arg0)
statement is: parseSwitchArgument(Ljava/lang/String;)Lde/devcity/parseargs/arguments/SwitchArgument; type is: class org.evosuite.testcase.statements.MethodStatement return type class de.devcity.parseargs.arguments.SwitchArgument
statement code is: SwitchArgument parseSwitchArgument = argsParser.parseSwitchArgument("")
test data is: ArgsParser argsParser = new ArgsParser();
String[] stringArray = new String[3];
stringArray[0] = "--";
argsParser.setArgs(stringArray);
argsParser.parseSwitchArgument("");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        ArgsParser argsParser = new ArgsParser();
        String[] stringArray = new String[3];
        stringArray[0] = "--";
        argsParser.setArgs(stringArray);
        argsParser.parseSwitchArgument("-v");
    }
}
statement is: ArgsParser argsParser = new ArgsParser(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: String[] stringArray = new String[3], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [3] Ct is: String[] stringArray = new String[3] isAssignment: false Array: new String[3] Elements: []
lengths: [3] [3]
Their type are: class [Ljava.lang.String; String[]
statement is: stringArray[0] = "--", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"--" Ct is: stringArray[0] = "--"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: argsParser.setArgs(stringArray), class spoon.support.reflect.code.CtInvocationImpl
invocation is: argsParser.setArgs(stringArray) target is: argsParser method is: setArgs(java.lang.String[])
source statement: de.devcity.parseargs.ArgsParser()V callee: VariableReference: Statement 0, type de.devcity.parseargs.ArgsParserindex is: 0
Matched Method is: setArgs([Ljava/lang/String;)V
statement is: argsParser.parseSwitchArgument("-v"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: argsParser.parseSwitchArgument("-v") target is: argsParser method is: parseSwitchArgument(java.lang.String)
source statement: de.devcity.parseargs.ArgsParser()V callee: VariableReference: Statement 0, type de.devcity.parseargs.ArgsParserindex is: 0
Matched Method is: parseSwitchArgument(Ljava/lang/String;)Lde/devcity/parseargs/arguments/SwitchArgument;
TestCase is: ArgsParser argsParser = new ArgsParser();
String[] stringArray = new String[3];
String string = "--";
stringArray[0] = string;
argsParser.setArgs(stringArray);
String string = "-v";
argsParser.parseSwitchArgument(string);

statement is: org.evosuite.testcase.statements.ArrayStatement@7ef8aaf7 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [Ljava.lang.String;
statement code is: String[] stringArray = new String[4]
statement is: org.evosuite.testcase.statements.AssignmentStatement@78bac6ea type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.String
statement code is: stringArray[3] = "-(=E[x[6fyG"
statement is: de.devcity.parseargs.ArgsParser([Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.devcity.parseargs.ArgsParser
statement code is: ArgsParser argsParser = new ArgsParser(arg0)
statement is: parseSwitchArgument(Ljava/lang/String;)Lde/devcity/parseargs/arguments/SwitchArgument; type is: class org.evosuite.testcase.statements.MethodStatement return type class de.devcity.parseargs.arguments.SwitchArgument
statement code is: SwitchArgument parseSwitchArgument = argsParser.parseSwitchArgument("-")
test data is: String[] stringArray = new String[4];
stringArray[3] = "-(=E[x[6fyG";
ArgsParser argsParser = new ArgsParser(stringArray);
argsParser.parseSwitchArgument("-");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        String[] stringArray = new String[5];
        stringArray[0] = "-h";
        stringArray[1] = "--help";
        stringArray[2] = "-i";
        stringArray[3] = "input.txt";
        stringArray[4] = "--output";
        ArgsParser argsParser = new ArgsParser(stringArray);
        argsParser.parseSwitchArgument("-");
    }
}
statement is: String[] stringArray = new String[5], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [5] Ct is: String[] stringArray = new String[4] isAssignment: false Array: new String[5] Elements: []
lengths: [4] [5]
Their type are: class [Ljava.lang.String; String[]
statement is: stringArray[0] = "-h", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"-h" Ct is: stringArray[0] = "-h"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[1] = "--help", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[1] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"--help" Ct is: stringArray[1] = "--help"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[2] = "-i", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[2] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"-i" Ct is: stringArray[2] = "-i"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[3] = "input.txt", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[3] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"input.txt" Ct is: stringArray[3] = "input.txt"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[4] = "--output", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[4] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"--output" Ct is: stringArray[4] = "--output"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: ArgsParser argsParser = new ArgsParser(stringArray), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: argsParser.parseSwitchArgument("-"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: argsParser.parseSwitchArgument("-") target is: argsParser method is: parseSwitchArgument(java.lang.String)
source statement: de.devcity.parseargs.ArgsParser([Ljava/lang/String;)V callee: VariableReference: Statement 2, type de.devcity.parseargs.ArgsParserindex is: 11
Matched Method is: parseSwitchArgument(Ljava/lang/String;)Lde/devcity/parseargs/arguments/SwitchArgument;
TestCase is: String[] stringArray = new String[4];
String string = "-h";
stringArray[3] = string;
String string = "--help";
stringArray[3] = string;
String string = "-i";
stringArray[3] = string;
String string = "input.txt";
stringArray[3] = string;
String string = "--output";
stringArray[3] = string;
ArgsParser argsParser = new ArgsParser(stringArray);
String string = "-";
((ArgsParser) stringArray[3]).parseSwitchArgument(string);

statement is: de.devcity.parseargs.ArgsParser()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.devcity.parseargs.ArgsParser
statement code is: ArgsParser argsParser = new ArgsParser()
statement is: org.evosuite.testcase.statements.ArrayStatement@77683659 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [Ljava.lang.String;
statement code is: String[] stringArray = new String[7]
statement is: org.evosuite.testcase.statements.AssignmentStatement@133bbf2f type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.String
statement code is: stringArray[0] = "-E"
statement is: setArgs([Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: argsParser.setArgs(arg0)
statement is: parseSwitchArgument(Ljava/lang/String;)Lde/devcity/parseargs/arguments/SwitchArgument; type is: class org.evosuite.testcase.statements.MethodStatement return type class de.devcity.parseargs.arguments.SwitchArgument
statement code is: SwitchArgument parseSwitchArgument = argsParser.parseSwitchArgument("E")
test data is: ArgsParser argsParser = new ArgsParser();
String[] stringArray = new String[7];
stringArray[0] = "-E";
argsParser.setArgs(stringArray);
argsParser.parseSwitchArgument("E");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        ArgsParser argsParser = new ArgsParser();
        String[] stringArray = new String[7];
        stringArray[0] = "-e";// notice that we use lowercase "e" instead of uppercase "E"

        argsParser.setArgs(stringArray);
        argsParser.parseSwitchArgument("e");
    }
}
statement is: ArgsParser argsParser = new ArgsParser(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: String[] stringArray = new String[7], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [7] Ct is: String[] stringArray = new String[7] isAssignment: false Array: new String[7] Elements: []
lengths: [7] [7]
Their type are: class [Ljava.lang.String; String[]
statement is: stringArray[0] = "-e"// notice that we use lowercase "e" instead of uppercase "E"
, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"-e" Ct is: stringArray[0] = "-e"// notice that we use lowercase "e" instead of uppercase "E"

target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: argsParser.setArgs(stringArray), class spoon.support.reflect.code.CtInvocationImpl
invocation is: argsParser.setArgs(stringArray) target is: argsParser method is: setArgs(java.lang.String[])
source statement: de.devcity.parseargs.ArgsParser()V callee: VariableReference: Statement 0, type de.devcity.parseargs.ArgsParserindex is: 0
Matched Method is: setArgs([Ljava/lang/String;)V
statement is: argsParser.parseSwitchArgument("e"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: argsParser.parseSwitchArgument("e") target is: argsParser method is: parseSwitchArgument(java.lang.String)
source statement: de.devcity.parseargs.ArgsParser()V callee: VariableReference: Statement 0, type de.devcity.parseargs.ArgsParserindex is: 0
Matched Method is: parseSwitchArgument(Ljava/lang/String;)Lde/devcity/parseargs/arguments/SwitchArgument;
TestCase is: ArgsParser argsParser = new ArgsParser();
String[] stringArray = new String[7];
String string = "-e";
stringArray[0] = string;
argsParser.setArgs(stringArray);
String string = "e";
argsParser.parseSwitchArgument(string);

statement is: org.evosuite.testcase.statements.ArrayStatement@1f73aeb6 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [Ljava.lang.String;
statement code is: String[] stringArray = new String[6]
statement is: org.evosuite.testcase.statements.AssignmentStatement@147e2655 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.String
statement code is: stringArray[0] = "L!OvKf.uQ`*(WX"
statement is: de.devcity.parseargs.ArgsParser([Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.devcity.parseargs.ArgsParser
statement code is: ArgsParser argsParser = new ArgsParser(arg0)
statement is: parseParameterArgument(Ljava/lang/String;)Lde/devcity/parseargs/arguments/ParameterArgument; type is: class org.evosuite.testcase.statements.MethodStatement return type class de.devcity.parseargs.arguments.ParameterArgument
statement code is: ParameterArgument parseParameterArgument = argsParser.parseParameterArgument("----")
test data is: String[] stringArray = new String[6];
stringArray[0] = "L!OvKf.uQ`*(WX";
ArgsParser argsParser = new ArgsParser(stringArray);
argsParser.parseParameterArgument("----");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        String[] stringArray = new String[6];
        stringArray[0] = "LoveKittens.jpg";// A realistic file name with an extension.

        ArgsParser argsParser = new ArgsParser(stringArray);
        argsParser.parseParameterArgument("--output");
    }
}
statement is: String[] stringArray = new String[6], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [6] Ct is: String[] stringArray = new String[6] isAssignment: false Array: new String[6] Elements: []
lengths: [6] [6]
Their type are: class [Ljava.lang.String; String[]
statement is: stringArray[0] = "LoveKittens.jpg"// A realistic file name with an extension.
, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"LoveKittens.jpg" Ct is: stringArray[0] = "LoveKittens.jpg"// A realistic file name with an extension.

target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: ArgsParser argsParser = new ArgsParser(stringArray), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: argsParser.parseParameterArgument("--output"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: argsParser.parseParameterArgument("--output") target is: argsParser method is: parseParameterArgument(java.lang.String)
source statement: de.devcity.parseargs.ArgsParser([Ljava/lang/String;)V callee: VariableReference: Statement 2, type de.devcity.parseargs.ArgsParserindex is: 3
Matched Method is: parseParameterArgument(Ljava/lang/String;)Lde/devcity/parseargs/arguments/ParameterArgument;
TestCase is: String[] stringArray = new String[6];
String string = "LoveKittens.jpg";
stringArray[0] = string;
ArgsParser argsParser = new ArgsParser(stringArray);
String string = "--output";
((ArgsParser) stringArray[0]).parseParameterArgument(string);

statement is: org.evosuite.testcase.statements.ArrayStatement@30c5dd2c type is: class org.evosuite.testcase.statements.ArrayStatement return type class [Ljava.lang.String;
statement code is: String[] stringArray = new String[6]
statement is: org.evosuite.testcase.statements.AssignmentStatement@c2a5f865 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.String
statement code is: stringArray[2] = "----"
statement is: de.devcity.parseargs.ArgsParser([Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.devcity.parseargs.ArgsParser
statement code is: ArgsParser argsParser = new ArgsParser(arg0)
statement is: parseParameterArgument(Ljava/lang/String;)Lde/devcity/parseargs/arguments/ParameterArgument; type is: class org.evosuite.testcase.statements.MethodStatement return type class de.devcity.parseargs.arguments.ParameterArgument
statement code is: ParameterArgument parseParameterArgument = argsParser.parseParameterArgument("--")
test data is: String[] stringArray = new String[6];
stringArray[2] = "----";
ArgsParser argsParser = new ArgsParser(stringArray);
argsParser.parseParameterArgument("--");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        String[] stringArray = new String[6];
        stringArray[2] = "example_input";
        ArgsParser argsParser = new ArgsParser(stringArray);
        argsParser.parseParameterArgument("--");
    }
}
statement is: String[] stringArray = new String[6], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [6] Ct is: String[] stringArray = new String[6] isAssignment: false Array: new String[6] Elements: []
lengths: [6] [6]
Their type are: class [Ljava.lang.String; String[]
statement is: stringArray[2] = "example_input", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[2] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"example_input" Ct is: stringArray[2] = "example_input"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: ArgsParser argsParser = new ArgsParser(stringArray), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: argsParser.parseParameterArgument("--"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: argsParser.parseParameterArgument("--") target is: argsParser method is: parseParameterArgument(java.lang.String)
source statement: de.devcity.parseargs.ArgsParser([Ljava/lang/String;)V callee: VariableReference: Statement 2, type de.devcity.parseargs.ArgsParserindex is: 3
Matched Method is: parseParameterArgument(Ljava/lang/String;)Lde/devcity/parseargs/arguments/ParameterArgument;
TestCase is: String[] stringArray = new String[6];
String string = "example_input";
stringArray[2] = string;
ArgsParser argsParser = new ArgsParser(stringArray);
String string = "--";
((ArgsParser) stringArray[2]).parseParameterArgument(string);

statement is: org.evosuite.testcase.statements.ArrayStatement@36cb0d93 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [Ljava.lang.String;
statement code is: String[] stringArray = new String[6]
statement is: org.evosuite.testcase.statements.AssignmentStatement@5000363b type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.String
statement code is: stringArray[5] = "----"
statement is: de.devcity.parseargs.ArgsParser()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.devcity.parseargs.ArgsParser
statement code is: ArgsParser argsParser = new ArgsParser()
statement is: setArgs([Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: argsParser.setArgs(arg0)
statement is: parseParameterArgument(Ljava/lang/String;)Lde/devcity/parseargs/arguments/ParameterArgument; type is: class org.evosuite.testcase.statements.MethodStatement return type class de.devcity.parseargs.arguments.ParameterArgument
statement code is: ParameterArgument parseParameterArgument = argsParser.parseParameterArgument("--")
test data is: String[] stringArray = new String[6];
stringArray[5] = "----";
ArgsParser argsParser = new ArgsParser();
argsParser.setArgs(stringArray);
argsParser.parseParameterArgument("--");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        String[] stringArray = new String[6];
        stringArray[0] = "java";
        stringArray[1] = "-jar";
        stringArray[2] = "/path/to/my/program.jar";
        stringArray[3] = "-input";
        stringArray[4] = "/path/to/input/file";
        stringArray[5] = "--invalid-parameter";
        ArgsParser argsParser = new ArgsParser();
        argsParser.setArgs(stringArray);
        argsParser.parseParameterArgument("--");
    }
}
statement is: String[] stringArray = new String[6], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [6] Ct is: String[] stringArray = new String[6] isAssignment: false Array: new String[6] Elements: []
lengths: [6] [6]
Their type are: class [Ljava.lang.String; String[]
statement is: stringArray[0] = "java", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"java" Ct is: stringArray[0] = "java"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[1] = "-jar", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[1] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"-jar" Ct is: stringArray[1] = "-jar"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[2] = "/path/to/my/program.jar", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[2] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"/path/to/my/program.jar" Ct is: stringArray[2] = "/path/to/my/program.jar"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[3] = "-input", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[3] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"-input" Ct is: stringArray[3] = "-input"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[4] = "/path/to/input/file", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[4] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"/path/to/input/file" Ct is: stringArray[4] = "/path/to/input/file"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[5] = "--invalid-parameter", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[5] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"--invalid-parameter" Ct is: stringArray[5] = "--invalid-parameter"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: ArgsParser argsParser = new ArgsParser(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: argsParser.setArgs(stringArray), class spoon.support.reflect.code.CtInvocationImpl
invocation is: argsParser.setArgs(stringArray) target is: argsParser method is: setArgs(java.lang.String[])
source statement: de.devcity.parseargs.ArgsParser()V callee: VariableReference: Statement 2, type de.devcity.parseargs.ArgsParserindex is: 13
Matched Method is: setArgs([Ljava/lang/String;)V
statement is: argsParser.parseParameterArgument("--"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: argsParser.parseParameterArgument("--") target is: argsParser method is: parseParameterArgument(java.lang.String)
source statement: de.devcity.parseargs.ArgsParser()V callee: VariableReference: Statement 2, type de.devcity.parseargs.ArgsParserindex is: 13
Matched Method is: parseParameterArgument(Ljava/lang/String;)Lde/devcity/parseargs/arguments/ParameterArgument;
TestCase is: String[] stringArray = new String[6];
String string = "java";
stringArray[5] = string;
String string = "-jar";
stringArray[5] = string;
String string = "/path/to/my/program.jar";
stringArray[5] = string;
String string = "-input";
stringArray[5] = string;
String string = "/path/to/input/file";
stringArray[5] = string;
String string = "--invalid-parameter";
stringArray[5] = string;
ArgsParser argsParser = new ArgsParser();
((ArgsParser) stringArray[5]).setArgs(stringArray);
String string = "--";
((ArgsParser) stringArray[5]).parseParameterArgument(string);

statement is: org.evosuite.testcase.statements.ArrayStatement@613096b8 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [Ljava.lang.String;
statement code is: String[] stringArray = new String[2]
statement is: de.devcity.parseargs.ArgsParser([Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.devcity.parseargs.ArgsParser
statement code is: ArgsParser argsParser = new ArgsParser(arg0)
statement is: org.evosuite.testcase.statements.ArrayStatement@3f780e4b type is: class org.evosuite.testcase.statements.ArrayStatement return type class [Ljava.lang.String;
statement code is: String[] stringArray = new String[2]
statement is: org.evosuite.testcase.statements.AssignmentStatement@7f59bfca type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.String
statement code is: stringArray[0] = "----"
statement is: org.evosuite.testcase.statements.AssignmentStatement@e2e6b248 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.String
statement code is: stringArray[1] = "-"
statement is: setArgs([Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: argsParser.setArgs(arg0)
statement is: parseParameterArgument(Ljava/lang/String;)Lde/devcity/parseargs/arguments/ParameterArgument; type is: class org.evosuite.testcase.statements.MethodStatement return type class de.devcity.parseargs.arguments.ParameterArgument
statement code is: ParameterArgument parseParameterArgument = argsParser.parseParameterArgument("--")
test data is: String[] stringArray = new String[2];
ArgsParser argsParser = new ArgsParser(stringArray);
String[] stringArray = new String[2];
stringArray[0] = "----";
stringArray[1] = "-";
argsParser.setArgs(stringArray);
argsParser.parseParameterArgument("--");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        String[] stringArray = new String[2];
        ArgsParser argsParser = new ArgsParser(stringArray);
        String[] stringArray = new String[2];
        stringArray[0] = "--help";
        stringArray[1] = "-h";
        argsParser.setArgs(stringArray);
        argsParser.parseParameterArgument("--");
    }
}
statement is: String[] stringArray = new String[2], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [2] Ct is: String[] stringArray = new String[2] isAssignment: false Array: new String[2] Elements: []
lengths: [2] [2]
Their type are: class [Ljava.lang.String; String[]
statement is: ArgsParser argsParser = new ArgsParser(stringArray), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: String[] stringArray = new String[2], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [2] Ct is: String[] stringArray = new String[2] isAssignment: false Array: new String[2] Elements: []
lengths: [2] [2]
Their type are: class [Ljava.lang.String; String[]
statement is: stringArray[0] = "--help", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"--help" Ct is: stringArray[0] = "--help"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[1] = "-h", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[1] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"-h" Ct is: stringArray[1] = "-h"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: argsParser.setArgs(stringArray), class spoon.support.reflect.code.CtInvocationImpl
invocation is: argsParser.setArgs(stringArray) target is: argsParser method is: setArgs(java.lang.String[])
source statement: de.devcity.parseargs.ArgsParser([Ljava/lang/String;)V callee: VariableReference: Statement 1, type de.devcity.parseargs.ArgsParserindex is: 1
Matched Method is: setArgs([Ljava/lang/String;)V
statement is: argsParser.parseParameterArgument("--"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: argsParser.parseParameterArgument("--") target is: argsParser method is: parseParameterArgument(java.lang.String)
source statement: de.devcity.parseargs.ArgsParser([Ljava/lang/String;)V callee: VariableReference: Statement 1, type de.devcity.parseargs.ArgsParserindex is: 1
Matched Method is: parseParameterArgument(Ljava/lang/String;)Lde/devcity/parseargs/arguments/ParameterArgument;
TestCase is: String[] stringArray = new String[2];
ArgsParser argsParser = new ArgsParser(stringArray);
String[] stringArray = new String[2];
argsParser.setArgs(stringArray);
String string = "--";
argsParser.parseParameterArgument(string);

statement is: org.evosuite.testcase.statements.ArrayStatement@39f840d4 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [Ljava.lang.String;
statement code is: String[] stringArray = new String[6]
statement is: org.evosuite.testcase.statements.AssignmentStatement@7b845c86 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.String
statement code is: stringArray[0] = "L!OvKf.uQ`*(WX"
statement is: de.devcity.parseargs.ArgsParser([Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.devcity.parseargs.ArgsParser
statement code is: ArgsParser argsParser = new ArgsParser(arg0)
statement is: parseParameterArgument(Ljava/lang/String;)Lde/devcity/parseargs/arguments/ParameterArgument; type is: class org.evosuite.testcase.statements.MethodStatement return type class de.devcity.parseargs.arguments.ParameterArgument
statement code is: ParameterArgument parseParameterArgument = argsParser.parseParameterArgument("-")
test data is: String[] stringArray = new String[6];
stringArray[0] = "L!OvKf.uQ`*(WX";
ArgsParser argsParser = new ArgsParser(stringArray);
argsParser.parseParameterArgument("-");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        String[] stringArray = new String[6];
        stringArray[0] = "L!OvKf.uQ`*(WX";
        ArgsParser argsParser = new ArgsParser(stringArray);
        argsParser.parseParameterArgument("-");
        // Improved test data
        String[] stringArray2 = new String[6];
        stringArray2[0] = "L!OvKf.uQ`*(WX";
        ArgsParser argsParser2 = new ArgsParser(stringArray2);
        argsParser2.parseParameterArgument("--");// Changed from "-" to "--" to make the test data more descriptive and representative of the situation being tested }}

    }
}
statement is: String[] stringArray = new String[6], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [6] Ct is: String[] stringArray = new String[6] isAssignment: false Array: new String[6] Elements: []
lengths: [6] [6]
Their type are: class [Ljava.lang.String; String[]
statement is: stringArray[0] = "L!OvKf.uQ`*(WX", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"L!OvKf.uQ`*(WX" Ct is: stringArray[0] = "L!OvKf.uQ`*(WX"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: ArgsParser argsParser = new ArgsParser(stringArray), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: argsParser.parseParameterArgument("-"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: argsParser.parseParameterArgument("-") target is: argsParser method is: parseParameterArgument(java.lang.String)
source statement: de.devcity.parseargs.ArgsParser([Ljava/lang/String;)V callee: VariableReference: Statement 2, type de.devcity.parseargs.ArgsParserindex is: 3
Matched Method is: parseParameterArgument(Ljava/lang/String;)Lde/devcity/parseargs/arguments/ParameterArgument;
statement is: // Improved test data
String[] stringArray2 = new String[6], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [6] Ct is: String[] stringArray = new String[6] isAssignment: false Array: new String[6] Elements: []
lengths: [6] [6]
Their type are: class [Ljava.lang.String; String[]
statement is: stringArray2[0] = "L!OvKf.uQ`*(WX", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray2[0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"L!OvKf.uQ`*(WX" Ct is: stringArray2[0] = "L!OvKf.uQ`*(WX"
target : stringArray2 class spoon.support.reflect.code.CtLiteralImpl
statement is: ArgsParser argsParser2 = new ArgsParser(stringArray2), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: argsParser2.parseParameterArgument("--")// Changed from "-" to "--" to make the test data more descriptive and representative of the situation being tested }}
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: argsParser2.parseParameterArgument("--")// Changed from "-" to "--" to make the test data more descriptive and representative of the situation being tested }}
 target is: argsParser2 method is: parseParameterArgument(java.lang.String)
source statement: de.devcity.parseargs.ArgsParser([Ljava/lang/String;)V callee: VariableReference: Statement 2, type de.devcity.parseargs.ArgsParserindex is: 9
Matched Method is: parseParameterArgument(Ljava/lang/String;)Lde/devcity/parseargs/arguments/ParameterArgument;
TestCase is: String[] stringArray = new String[6];
String string = "L!OvKf.uQ`*(WX";
stringArray[0] = string;
ArgsParser argsParser = new ArgsParser(stringArray);
String string = "-";
((ArgsParser) stringArray[0]).parseParameterArgument(string);
String[] stringArray = new String[6];
String string = "L!OvKf.uQ`*(WX";
stringArray[0] = string;
ArgsParser argsParser = new ArgsParser(stringArray);
String string = "--";
((ArgsParser) stringArray[0]).parseParameterArgument(string);

statement is: de.devcity.parseargs.ArgsParser()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.devcity.parseargs.ArgsParser
statement code is: ArgsParser argsParser = new ArgsParser()
statement is: org.evosuite.testcase.statements.ArrayStatement@e0eb9892 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [Ljava.lang.String;
statement code is: String[] stringArray = new String[8]
statement is: org.evosuite.testcase.statements.AssignmentStatement@ffdccfd2 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.String
statement code is: stringArray[0] = "-"
statement is: setArgs([Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: argsParser.setArgs(arg0)
statement is: parseParameterArgument(Ljava/lang/String;)Lde/devcity/parseargs/arguments/ParameterArgument; type is: class org.evosuite.testcase.statements.MethodStatement return type class de.devcity.parseargs.arguments.ParameterArgument
statement code is: ParameterArgument parseParameterArgument = argsParser.parseParameterArgument("G")
test data is: ArgsParser argsParser = new ArgsParser();
String[] stringArray = new String[8];
stringArray[0] = "-";
argsParser.setArgs(stringArray);
argsParser.parseParameterArgument("G");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        ArgsParser argsParser = new ArgsParser();
        String[] stringArray = new String[8];
        stringArray[0] = "-";
        argsParser.setArgs(stringArray);
        argsParser.parseParameterArgument("G");
        // Improved test data
        stringArray[1] = "--help";
        argsParser.setArgs(stringArray);
        argsParser.parseParameterArgument("G");
    }
}
statement is: ArgsParser argsParser = new ArgsParser(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: String[] stringArray = new String[8], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [8] Ct is: String[] stringArray = new String[8] isAssignment: false Array: new String[8] Elements: []
lengths: [8] [8]
Their type are: class [Ljava.lang.String; String[]
statement is: stringArray[0] = "-", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"-" Ct is: stringArray[0] = "-"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: argsParser.setArgs(stringArray), class spoon.support.reflect.code.CtInvocationImpl
invocation is: argsParser.setArgs(stringArray) target is: argsParser method is: setArgs(java.lang.String[])
source statement: de.devcity.parseargs.ArgsParser()V callee: VariableReference: Statement 0, type de.devcity.parseargs.ArgsParserindex is: 0
Matched Method is: setArgs([Ljava/lang/String;)V
statement is: argsParser.parseParameterArgument("G"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: argsParser.parseParameterArgument("G") target is: argsParser method is: parseParameterArgument(java.lang.String)
source statement: de.devcity.parseargs.ArgsParser()V callee: VariableReference: Statement 0, type de.devcity.parseargs.ArgsParserindex is: 0
Matched Method is: parseParameterArgument(Ljava/lang/String;)Lde/devcity/parseargs/arguments/ParameterArgument;
statement is: // Improved test data
stringArray[1] = "--help", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[1] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"--help" Ct is: // Improved test data
stringArray[1] = "--help"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: argsParser.setArgs(stringArray), class spoon.support.reflect.code.CtInvocationImpl
invocation is: argsParser.setArgs(stringArray) target is: argsParser method is: setArgs(java.lang.String[])
source statement: de.devcity.parseargs.ArgsParser()V callee: VariableReference: Statement 0, type de.devcity.parseargs.ArgsParserindex is: 0
Matched Method is: setArgs([Ljava/lang/String;)V
statement is: argsParser.parseParameterArgument("G"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: argsParser.parseParameterArgument("G") target is: argsParser method is: parseParameterArgument(java.lang.String)
source statement: de.devcity.parseargs.ArgsParser()V callee: VariableReference: Statement 0, type de.devcity.parseargs.ArgsParserindex is: 0
Matched Method is: parseParameterArgument(Ljava/lang/String;)Lde/devcity/parseargs/arguments/ParameterArgument;
TestCase is: ArgsParser argsParser = new ArgsParser();
String[] stringArray = new String[8];
String string = "-";
stringArray[0] = string;
argsParser.setArgs(stringArray);
String string = "G";
argsParser.parseParameterArgument(string);
String string = "--help";
stringArray[0] = string;
argsParser.setArgs(stringArray);
String string = "G";
argsParser.parseParameterArgument(string);

statement is: org.evosuite.testcase.statements.ArrayStatement@de1e162d type is: class org.evosuite.testcase.statements.ArrayStatement return type class [Ljava.lang.String;
statement code is: String[] stringArray = new String[6]
statement is: org.evosuite.testcase.statements.AssignmentStatement@777e972c type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.String
statement code is: stringArray[1] = "---=E[G"
statement is: de.devcity.parseargs.ArgsParser([Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.devcity.parseargs.ArgsParser
statement code is: ArgsParser argsParser = new ArgsParser(arg0)
statement is: parseParameterArgument(Ljava/lang/String;)Lde/devcity/parseargs/arguments/ParameterArgument; type is: class org.evosuite.testcase.statements.MethodStatement return type class de.devcity.parseargs.arguments.ParameterArgument
statement code is: ParameterArgument parseParameterArgument = argsParser.parseParameterArgument("-")
test data is: String[] stringArray = new String[6];
stringArray[1] = "---=E[G";
ArgsParser argsParser = new ArgsParser(stringArray);
argsParser.parseParameterArgument("-");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        String[] stringArray = new String[6];
        stringArray[1] = "--help";
        ArgsParser argsParser = new ArgsParser(stringArray);
        argsParser.parseParameterArgument("-");
    }
}
statement is: String[] stringArray = new String[6], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [6] Ct is: String[] stringArray = new String[6] isAssignment: false Array: new String[6] Elements: []
lengths: [6] [6]
Their type are: class [Ljava.lang.String; String[]
statement is: stringArray[1] = "--help", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[1] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"--help" Ct is: stringArray[1] = "--help"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: ArgsParser argsParser = new ArgsParser(stringArray), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: argsParser.parseParameterArgument("-"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: argsParser.parseParameterArgument("-") target is: argsParser method is: parseParameterArgument(java.lang.String)
source statement: de.devcity.parseargs.ArgsParser([Ljava/lang/String;)V callee: VariableReference: Statement 2, type de.devcity.parseargs.ArgsParserindex is: 3
Matched Method is: parseParameterArgument(Ljava/lang/String;)Lde/devcity/parseargs/arguments/ParameterArgument;
TestCase is: String[] stringArray = new String[6];
String string = "--help";
stringArray[1] = string;
ArgsParser argsParser = new ArgsParser(stringArray);
String string = "-";
((ArgsParser) stringArray[1]).parseParameterArgument(string);

statement is: org.evosuite.testcase.statements.ArrayStatement@e89bbe08 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [Ljava.lang.String;
statement code is: String[] stringArray = new String[18]
statement is: org.evosuite.testcase.statements.AssignmentStatement@e3ae843f type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.String
statement code is: stringArray[0] = "-(JE[][6fyG"
statement is: de.devcity.parseargs.ArgsParser()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.devcity.parseargs.ArgsParser
statement code is: ArgsParser argsParser = new ArgsParser()
statement is: setArgs([Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: argsParser.setArgs(arg0)
statement is: parseParameterArgument(Ljava/lang/String;)Lde/devcity/parseargs/arguments/ParameterArgument; type is: class org.evosuite.testcase.statements.MethodStatement return type class de.devcity.parseargs.arguments.ParameterArgument
statement code is: ParameterArgument parseParameterArgument = argsParser.parseParameterArgument("G")
test data is: String[] stringArray = new String[18];
stringArray[0] = "-(JE[][6fyG";
ArgsParser argsParser = new ArgsParser();
argsParser.setArgs(stringArray);
argsParser.parseParameterArgument("G");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        String[] stringArray = new String[18];
        stringArray[0] = "-(JE[][6fyG";
        stringArray[1] = "--help";
        stringArray[2] = "-v";
        stringArray[3] = "-q";
        stringArray[4] = "-p";
        stringArray[5] = "-f";
        stringArray[6] = "-e";
        stringArray[7] = "-d";
        stringArray[8] = "-a";
        stringArray[9] = "-c";
        stringArray[10] = "-b";
        stringArray[11] = "--debug";
        stringArray[12] = "--verbose";
        stringArray[13] = "--quiet";
        stringArray[14] = "--profile";
        stringArray[15] = "--force";
        stringArray[16] = "--encrypt";
        stringArray[17] = "--debug";
        ArgsParser argsParser = new ArgsParser();
        argsParser.setArgs(stringArray);
        argsParser.parseParameterArgument("G");
    }
}
statement is: String[] stringArray = new String[18], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [18] Ct is: String[] stringArray = new String[18] isAssignment: false Array: new String[18] Elements: []
lengths: [18] [18]
Their type are: class [Ljava.lang.String; String[]
statement is: stringArray[0] = "-(JE[][6fyG", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"-(JE[][6fyG" Ct is: stringArray[0] = "-(JE[][6fyG"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[1] = "--help", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[1] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"--help" Ct is: stringArray[1] = "--help"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[2] = "-v", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[2] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"-v" Ct is: stringArray[2] = "-v"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[3] = "-q", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[3] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"-q" Ct is: stringArray[3] = "-q"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[4] = "-p", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[4] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"-p" Ct is: stringArray[4] = "-p"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[5] = "-f", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[5] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"-f" Ct is: stringArray[5] = "-f"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[6] = "-e", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[6] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"-e" Ct is: stringArray[6] = "-e"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[7] = "-d", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[7] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"-d" Ct is: stringArray[7] = "-d"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[8] = "-a", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[8] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"-a" Ct is: stringArray[8] = "-a"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[9] = "-c", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[9] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"-c" Ct is: stringArray[9] = "-c"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[10] = "-b", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[10] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"-b" Ct is: stringArray[10] = "-b"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[11] = "--debug", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[11] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"--debug" Ct is: stringArray[11] = "--debug"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[12] = "--verbose", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[12] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"--verbose" Ct is: stringArray[12] = "--verbose"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[13] = "--quiet", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[13] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"--quiet" Ct is: stringArray[13] = "--quiet"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[14] = "--profile", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[14] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"--profile" Ct is: stringArray[14] = "--profile"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[15] = "--force", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[15] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"--force" Ct is: stringArray[15] = "--force"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[16] = "--encrypt", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[16] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"--encrypt" Ct is: stringArray[16] = "--encrypt"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[17] = "--debug", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[17] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"--debug" Ct is: stringArray[17] = "--debug"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: ArgsParser argsParser = new ArgsParser(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: argsParser.setArgs(stringArray), class spoon.support.reflect.code.CtInvocationImpl
invocation is: argsParser.setArgs(stringArray) target is: argsParser method is: setArgs(java.lang.String[])
source statement: de.devcity.parseargs.ArgsParser()V callee: VariableReference: Statement 2, type de.devcity.parseargs.ArgsParserindex is: 37
Matched Method is: setArgs([Ljava/lang/String;)V
statement is: argsParser.parseParameterArgument("G"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: argsParser.parseParameterArgument("G") target is: argsParser method is: parseParameterArgument(java.lang.String)
source statement: de.devcity.parseargs.ArgsParser()V callee: VariableReference: Statement 2, type de.devcity.parseargs.ArgsParserindex is: 37
Matched Method is: parseParameterArgument(Ljava/lang/String;)Lde/devcity/parseargs/arguments/ParameterArgument;
TestCase is: String[] stringArray = new String[18];
String string = "-(JE[][6fyG";
stringArray[0] = string;
String string = "--help";
stringArray[0] = string;
String string = "-v";
stringArray[0] = string;
String string = "-q";
stringArray[0] = string;
String string = "-p";
stringArray[0] = string;
String string = "-f";
stringArray[0] = string;
String string = "-e";
stringArray[0] = string;
String string = "-d";
stringArray[0] = string;
String string = "-a";
stringArray[0] = string;
String string = "-c";
stringArray[0] = string;
String string = "-b";
stringArray[0] = string;
String string = "--debug";
stringArray[0] = string;
String string = "--verbose";
stringArray[0] = string;
String string = "--quiet";
stringArray[0] = string;
String string = "--profile";
stringArray[0] = string;
String string = "--force";
stringArray[0] = string;
String string = "--encrypt";
stringArray[0] = string;
String string = "--debug";
stringArray[0] = string;
ArgsParser argsParser = new ArgsParser();
((ArgsParser) stringArray[0]).setArgs(stringArray);
String string = "G";
((ArgsParser) stringArray[0]).parseParameterArgument(string);

statement is: org.evosuite.testcase.statements.ArrayStatement@4e67ade type is: class org.evosuite.testcase.statements.ArrayStatement return type class [Ljava.lang.String;
statement code is: String[] stringArray = new String[3]
statement is: org.evosuite.testcase.statements.AssignmentStatement@9b58eca4 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.String
statement code is: stringArray[1] = "-y([xo[xSG"
statement is: de.devcity.parseargs.ArgsParser([Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.devcity.parseargs.ArgsParser
statement code is: ArgsParser argsParser = new ArgsParser(arg0)
statement is: parseParameterArgument(Ljava/lang/String;)Lde/devcity/parseargs/arguments/ParameterArgument; type is: class org.evosuite.testcase.statements.MethodStatement return type class de.devcity.parseargs.arguments.ParameterArgument
statement code is: ParameterArgument parseParameterArgument = argsParser.parseParameterArgument("-")
test data is: String[] stringArray = new String[3];
stringArray[1] = "-y([xo[xSG";
ArgsParser argsParser = new ArgsParser(stringArray);
argsParser.parseParameterArgument("-");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        String[] stringArray = new String[3];
        stringArray[1] = "--y([xo[xSG";
        ArgsParser argsParser = new ArgsParser(stringArray);
        argsParser.parseParameterArgument("-");
    }
}
statement is: String[] stringArray = new String[3], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [3] Ct is: String[] stringArray = new String[3] isAssignment: false Array: new String[3] Elements: []
lengths: [3] [3]
Their type are: class [Ljava.lang.String; String[]
statement is: stringArray[1] = "--y([xo[xSG", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[1] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"--y([xo[xSG" Ct is: stringArray[1] = "--y([xo[xSG"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: ArgsParser argsParser = new ArgsParser(stringArray), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: argsParser.parseParameterArgument("-"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: argsParser.parseParameterArgument("-") target is: argsParser method is: parseParameterArgument(java.lang.String)
source statement: de.devcity.parseargs.ArgsParser([Ljava/lang/String;)V callee: VariableReference: Statement 2, type de.devcity.parseargs.ArgsParserindex is: 3
Matched Method is: parseParameterArgument(Ljava/lang/String;)Lde/devcity/parseargs/arguments/ParameterArgument;
TestCase is: String[] stringArray = new String[3];
String string = "--y([xo[xSG";
stringArray[1] = string;
ArgsParser argsParser = new ArgsParser(stringArray);
String string = "-";
((ArgsParser) stringArray[1]).parseParameterArgument(string);

statement is: org.evosuite.testcase.statements.ArrayStatement@47dfe7ee type is: class org.evosuite.testcase.statements.ArrayStatement return type class [Ljava.lang.String;
statement code is: String[] stringArray = new String[3]
statement is: org.evosuite.testcase.statements.AssignmentStatement@dc6855a5 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.String
statement code is: stringArray[0] = "-h(JE[]'6fyG"
statement is: de.devcity.parseargs.ArgsParser([Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.devcity.parseargs.ArgsParser
statement code is: ArgsParser argsParser = new ArgsParser(arg0)
statement is: parseParameterArgument(Ljava/lang/String;)Lde/devcity/parseargs/arguments/ParameterArgument; type is: class org.evosuite.testcase.statements.MethodStatement return type class de.devcity.parseargs.arguments.ParameterArgument
statement code is: ParameterArgument parseParameterArgument = argsParser.parseParameterArgument("]")
test data is: String[] stringArray = new String[3];
stringArray[0] = "-h(JE[]'6fyG";
ArgsParser argsParser = new ArgsParser(stringArray);
argsParser.parseParameterArgument("]");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        String[] stringArray = new String[3];
        stringArray[0] = "--help";// added to clarify the purpose of the test

        ArgsParser argsParser = new ArgsParser(stringArray);
        argsParser.parseParameterArgument("-h");// changed to use the "-h" option instead of "[]" to make it more descriptive }}

    }
}
statement is: String[] stringArray = new String[3], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [3] Ct is: String[] stringArray = new String[3] isAssignment: false Array: new String[3] Elements: []
lengths: [3] [3]
Their type are: class [Ljava.lang.String; String[]
statement is: stringArray[0] = "--help"// added to clarify the purpose of the test
, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"--help" Ct is: stringArray[0] = "--help"// added to clarify the purpose of the test

target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: ArgsParser argsParser = new ArgsParser(stringArray), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: argsParser.parseParameterArgument("-h")// changed to use the "-h" option instead of "[]" to make it more descriptive }}
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: argsParser.parseParameterArgument("-h")// changed to use the "-h" option instead of "[]" to make it more descriptive }}
 target is: argsParser method is: parseParameterArgument(java.lang.String)
source statement: de.devcity.parseargs.ArgsParser([Ljava/lang/String;)V callee: VariableReference: Statement 2, type de.devcity.parseargs.ArgsParserindex is: 3
Matched Method is: parseParameterArgument(Ljava/lang/String;)Lde/devcity/parseargs/arguments/ParameterArgument;
TestCase is: String[] stringArray = new String[3];
String string = "--help";
stringArray[0] = string;
ArgsParser argsParser = new ArgsParser(stringArray);
String string = "-h";
((ArgsParser) stringArray[0]).parseParameterArgument(string);

statement is: org.evosuite.testcase.statements.ArrayStatement@90f91711 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [Ljava.lang.String;
statement code is: String[] stringArray = new String[1]
statement is: org.evosuite.testcase.statements.AssignmentStatement@e2edd26c type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.String
statement code is: stringArray[0] = "-(JE[][6fyG"
statement is: de.devcity.parseargs.ArgsParser()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.devcity.parseargs.ArgsParser
statement code is: ArgsParser argsParser = new ArgsParser()
statement is: setArgs([Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: argsParser.setArgs(arg0)
statement is: parseParameterArgument(Ljava/lang/String;)Lde/devcity/parseargs/arguments/ParameterArgument; type is: class org.evosuite.testcase.statements.MethodStatement return type class de.devcity.parseargs.arguments.ParameterArgument
statement code is: ParameterArgument parseParameterArgument = argsParser.parseParameterArgument("G")
test data is: String[] stringArray = new String[1];
stringArray[0] = "-(JE[][6fyG";
ArgsParser argsParser = new ArgsParser();
argsParser.setArgs(stringArray);
argsParser.parseParameterArgument("G");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        String[] stringArray = new String[2];
        stringArray[0] = "--help";
        stringArray[1] = "-o outputFile.txt";
        ArgsParser argsParser = new ArgsParser();
        argsParser.setArgs(stringArray);
        argsParser.parseParameterArgument("h");
    }
}
statement is: String[] stringArray = new String[2], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [2] Ct is: String[] stringArray = new String[1] isAssignment: false Array: new String[2] Elements: []
lengths: [1] [2]
Their type are: class [Ljava.lang.String; String[]
statement is: stringArray[0] = "--help", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"--help" Ct is: stringArray[0] = "--help"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: stringArray[1] = "-o outputFile.txt", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[1] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"-o outputFile.txt" Ct is: stringArray[1] = "-o outputFile.txt"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: ArgsParser argsParser = new ArgsParser(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: argsParser.setArgs(stringArray), class spoon.support.reflect.code.CtInvocationImpl
invocation is: argsParser.setArgs(stringArray) target is: argsParser method is: setArgs(java.lang.String[])
source statement: de.devcity.parseargs.ArgsParser()V callee: VariableReference: Statement 2, type de.devcity.parseargs.ArgsParserindex is: 5
Matched Method is: setArgs([Ljava/lang/String;)V
statement is: argsParser.parseParameterArgument("h"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: argsParser.parseParameterArgument("h") target is: argsParser method is: parseParameterArgument(java.lang.String)
source statement: de.devcity.parseargs.ArgsParser()V callee: VariableReference: Statement 2, type de.devcity.parseargs.ArgsParserindex is: 5
Matched Method is: parseParameterArgument(Ljava/lang/String;)Lde/devcity/parseargs/arguments/ParameterArgument;
TestCase is: String[] stringArray = new String[1];
String string = "--help";
stringArray[0] = string;
String string = "-o outputFile.txt";
stringArray[0] = string;
ArgsParser argsParser = new ArgsParser();
((ArgsParser) stringArray[0]).setArgs(stringArray);
String string = "h";
((ArgsParser) stringArray[0]).parseParameterArgument(string);

statement is: de.devcity.parseargs.ArgsParser()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.devcity.parseargs.ArgsParser
statement code is: ArgsParser argsParser = new ArgsParser()
statement is: org.evosuite.testcase.statements.ArrayStatement@dbd53db9 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [Ljava.lang.String;
statement code is: String[] stringArray = new String[8]
statement is: org.evosuite.testcase.statements.AssignmentStatement@3a9c3aaa type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.String
statement code is: stringArray[3] = "-(=E[x[6fyG"
statement is: org.evosuite.testcase.statements.AssignmentStatement@448a576c type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.String
statement code is: stringArray[4] = "-(=E[x[6fyG"
statement is: setArgs([Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: argsParser.setArgs(arg0)
statement is: parseParameterArgument(Ljava/lang/String;)Lde/devcity/parseargs/arguments/ParameterArgument; type is: class org.evosuite.testcase.statements.MethodStatement return type class de.devcity.parseargs.arguments.ParameterArgument
statement code is: ParameterArgument parseParameterArgument = argsParser.parseParameterArgument("G")
test data is: ArgsParser argsParser = new ArgsParser();
String[] stringArray = new String[8];
stringArray[3] = "-(=E[x[6fyG";
stringArray[4] = "-(=E[x[6fyG";
argsParser.setArgs(stringArray);
argsParser.parseParameterArgument("G");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        String[] stringArray = new String[8];
        stringArray[3] = "--name=John";
        stringArray[4] = "--age=25";
        argsParser.setArgs(stringArray);
        argsParser.parseParameterArgument("G");
    }
}
statement is: String[] stringArray = new String[8], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [8] Ct is: String[] stringArray = new String[8] isAssignment: false Array: new String[8] Elements: []
lengths: [8] [8]
Their type are: class [Ljava.lang.String; String[]
statement is: stringArray[3] = "--name=John", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[3] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"--name=John" Ct is: stringArray[3] = "--name=John"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
TestCase Could not be added: org.evosuite.testcase.statements.AssignmentStatement@c2b36193
statement is: stringArray[4] = "--age=25", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[4] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"--age=25" Ct is: stringArray[4] = "--age=25"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
TestCase Could not be added: org.evosuite.testcase.statements.AssignmentStatement@d863db69
statement is: argsParser.setArgs(stringArray), class spoon.support.reflect.code.CtInvocationImpl
invocation is: argsParser.setArgs(stringArray) target is: argsParser method is: setArgs(java.lang.String[])
statement is: argsParser.parseParameterArgument("G"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: argsParser.parseParameterArgument("G") target is: argsParser method is: parseParameterArgument(java.lang.String)
* this is vulnerable: String string = "--name=John"
* this is vulnerable: String string = "--age=25"
TestCase is: String[] stringArray = new String[8];
String string = "--name=John";
String string = "--age=25";

statement is: de.devcity.parseargs.ArgsParser()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.devcity.parseargs.ArgsParser
statement code is: ArgsParser argsParser = new ArgsParser()
statement is: org.evosuite.testcase.statements.ArrayStatement@57a65600 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [Ljava.lang.String;
statement code is: String[] stringArray = new String[10]
statement is: org.evosuite.testcase.statements.AssignmentStatement@7c1f2f4b type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.String
statement code is: stringArray[3] = "-G"
statement is: org.evosuite.testcase.statements.AssignmentStatement@8436688a type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.String
statement code is: stringArray[4] = "G"
statement is: setArgs([Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: argsParser.setArgs(arg0)
statement is: parseParameterArgument(Ljava/lang/String;)Lde/devcity/parseargs/arguments/ParameterArgument; type is: class org.evosuite.testcase.statements.MethodStatement return type class de.devcity.parseargs.arguments.ParameterArgument
statement code is: ParameterArgument parseParameterArgument = argsParser.parseParameterArgument("G")
test data is: ArgsParser argsParser = new ArgsParser();
String[] stringArray = new String[10];
stringArray[3] = "-G";
stringArray[4] = "G";
argsParser.setArgs(stringArray);
argsParser.parseParameterArgument("G");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        String[] stringArray = new String[10];
        stringArray[3] = "-g";
        stringArray[4] = "green";
        ArgsParser argsParser = new ArgsParser();
        argsParser.setArgs(stringArray);
        argsParser.parseParameterArgument("G");
    }
}
statement is: String[] stringArray = new String[10], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [10] Ct is: String[] stringArray = new String[10] isAssignment: false Array: new String[10] Elements: []
lengths: [10] [10]
Their type are: class [Ljava.lang.String; String[]
statement is: stringArray[3] = "-g", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[3] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"-g" Ct is: stringArray[3] = "-g"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
TestCase Could not be added: org.evosuite.testcase.statements.AssignmentStatement@be2bf5b8
statement is: stringArray[4] = "green", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[4] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"green" Ct is: stringArray[4] = "green"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
TestCase Could not be added: org.evosuite.testcase.statements.AssignmentStatement@43cb8054
statement is: ArgsParser argsParser = new ArgsParser(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: argsParser.setArgs(stringArray), class spoon.support.reflect.code.CtInvocationImpl
invocation is: argsParser.setArgs(stringArray) target is: argsParser method is: setArgs(java.lang.String[])
source statement: de.devcity.parseargs.ArgsParser()V callee: VariableReference: Statement 0, type de.devcity.parseargs.ArgsParserindex is: 3
Matched Method is: setArgs([Ljava/lang/String;)V
statement is: argsParser.parseParameterArgument("G"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: argsParser.parseParameterArgument("G") target is: argsParser method is: parseParameterArgument(java.lang.String)
source statement: de.devcity.parseargs.ArgsParser()V callee: VariableReference: Statement 0, type de.devcity.parseargs.ArgsParserindex is: 3
Matched Method is: parseParameterArgument(Ljava/lang/String;)Lde/devcity/parseargs/arguments/ParameterArgument;
* this is vulnerable: String string = "-g"
* this is vulnerable: String string = "green"
TestCase is: String[] stringArray = new String[10];
String string = "-g";
String string = "green";
ArgsParser argsParser = new ArgsParser();
((ArgsParser) stringArray).setArgs(stringArray);
String string = "G";
((ArgsParser) stringArray).parseParameterArgument(string);

statement is: org.evosuite.testcase.statements.ArrayStatement@4f11bbdf type is: class org.evosuite.testcase.statements.ArrayStatement return type class [Ljava.lang.String;
statement code is: String[] stringArray = new String[7]
statement is: org.evosuite.testcase.statements.AssignmentStatement@6a8a02e5 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.String
statement code is: stringArray[1] = "-E_[9fy"
statement is: de.devcity.parseargs.ArgsParser()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.devcity.parseargs.ArgsParser
statement code is: ArgsParser argsParser = new ArgsParser()
statement is: setArgs([Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: argsParser.setArgs(arg0)
statement is: parseParameterArgument(Ljava/lang/String;)Lde/devcity/parseargs/arguments/ParameterArgument; type is: class org.evosuite.testcase.statements.MethodStatement return type class de.devcity.parseargs.arguments.ParameterArgument
statement code is: ParameterArgument parseParameterArgument = argsParser.parseParameterArgument("E")
test data is: String[] stringArray = new String[7];
stringArray[1] = "-E_[9fy";
ArgsParser argsParser = new ArgsParser();
argsParser.setArgs(stringArray);
argsParser.parseParameterArgument("E");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        String[] stringArray = new String[7];
        stringArray[1] = "Test_Input";
        ArgsParser argsParser = new ArgsParser();
        argsParser.setArgs(stringArray);
        argsParser.parseParameterArgument("E");
    }
}
statement is: String[] stringArray = new String[7], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [7] Ct is: String[] stringArray = new String[7] isAssignment: false Array: new String[7] Elements: []
lengths: [7] [7]
Their type are: class [Ljava.lang.String; String[]
statement is: stringArray[1] = "Test_Input", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[1] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"Test_Input" Ct is: stringArray[1] = "Test_Input"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
statement is: ArgsParser argsParser = new ArgsParser(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: argsParser.setArgs(stringArray), class spoon.support.reflect.code.CtInvocationImpl
invocation is: argsParser.setArgs(stringArray) target is: argsParser method is: setArgs(java.lang.String[])
source statement: de.devcity.parseargs.ArgsParser()V callee: VariableReference: Statement 2, type de.devcity.parseargs.ArgsParserindex is: 3
Matched Method is: setArgs([Ljava/lang/String;)V
statement is: argsParser.parseParameterArgument("E"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: argsParser.parseParameterArgument("E") target is: argsParser method is: parseParameterArgument(java.lang.String)
source statement: de.devcity.parseargs.ArgsParser()V callee: VariableReference: Statement 2, type de.devcity.parseargs.ArgsParserindex is: 3
Matched Method is: parseParameterArgument(Ljava/lang/String;)Lde/devcity/parseargs/arguments/ParameterArgument;
TestCase is: String[] stringArray = new String[7];
String string = "Test_Input";
stringArray[1] = string;
ArgsParser argsParser = new ArgsParser();
((ArgsParser) stringArray[1]).setArgs(stringArray);
String string = "E";
((ArgsParser) stringArray[1]).parseParameterArgument(string);

statement is: org.evosuite.testcase.statements.ArrayStatement@a9fa361e type is: class org.evosuite.testcase.statements.ArrayStatement return type class [Ljava.lang.String;
statement code is: String[] stringArray = new String[2]
statement is: de.devcity.parseargs.ArgsParser()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class de.devcity.parseargs.ArgsParser
statement code is: ArgsParser argsParser = new ArgsParser()
statement is: setArgs([Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: argsParser.setArgs(arg0)
statement is: parseStringArgument()Ljava/util/List; type is: class org.evosuite.testcase.statements.MethodStatement return type java.util.List<de.devcity.parseargs.arguments.StringArgument>
statement code is: List<StringArgument> parseStringArgument = argsParser.parseStringArgument()
test data is: String[] stringArray = new String[2];
ArgsParser argsParser = new ArgsParser();
argsParser.setArgs(stringArray);
argsParser.parseStringArgument();

* Computation finished
