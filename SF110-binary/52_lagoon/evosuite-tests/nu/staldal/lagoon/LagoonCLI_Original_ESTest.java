/*
 * This file was automatically generated by UTestGen and EvoSuite
 * Tue Mar 12 13:58:01 GMT 2024
 */

package nu.staldal.lagoon;

import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;
import org.junit.jupiter.api.Timeout;
import java.util.concurrent.TimeUnit;
import static org.evosuite.runtime.EvoAssertions.*;
import nu.staldal.lagoon.LagoonCLI;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class LagoonCLI_Original_ESTest extends LagoonCLI_Original_ESTest_scaffolding {

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void testMain0() throws Throwable  {
      String[] arg0 = new String[9];
      arg0[1] = "EZxmo";
      LagoonCLI.main(arg0);
      assertEquals(9, arg0.length);
  }

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void testMain1() throws Throwable  {
      String[] arg0 = new String[1];
      arg0[0] = "nu.staldal.lagoon.core.AuthenticationMissingException";
      LagoonCLI.main(arg0);
      assertEquals(1, arg0.length);
  }

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void testMain2() throws Throwable  {
      String[] arg0 = new String[1];
      arg0[0] = "HA8m5BE_|-@L!}u.sitemap";
      LagoonCLI.main(arg0);
      assertEquals(1, arg0.length);
  }

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void testMain3() throws Throwable  {
      String[] arg0 = new String[1];
      arg0[0] = "#~.xml";
      LagoonCLI.main(arg0);
      assertEquals(1, arg0.length);
  }

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void testMainThrowsNullPointerException0() throws Throwable  {
      String[] arg0 = new String[3];
      arg0[1] = "1";
      // Undeclared exception!
      try { 
        LagoonCLI.main(arg0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void testMainThrowsNullPointerException1() throws Throwable  {
      String[] arg0 = new String[2];
      arg0[1] = "force";
      // Undeclared exception!
      try { 
        LagoonCLI.main(arg0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void testMainThrowsNullPointerException2() throws Throwable  {
      String[] arg0 = new String[6];
      arg0[1] = "build";
      // Undeclared exception!
      try { 
        LagoonCLI.main(arg0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void testMain4() throws Throwable  {
      String[] arg0 = new String[2];
      arg0[1] = "0";
      LagoonCLI.main(arg0);
      assertEquals(2, arg0.length);
  }

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void testMainWithEmptyArray() throws Throwable  {
      String[] arg0 = new String[0];
      LagoonCLI.main(arg0);
      assertEquals(0, arg0.length);
  }

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void testCreatesLagoonCLI() throws Throwable  {
      LagoonCLI lagoonCLI = new LagoonCLI();
  }
}
