* EvoSuite 1.2.1-SNAPSHOT
* Going to generate test cases for class: Joshua.FoxHunt.HuntDisplay
* Starting Client-0
* Properties loaded from /home/ubuntu/UTestGen/Evaluation/getting_results/dataset/SF110/98_trans-locator/evosuite-files/evosuite.properties
* Connecting to master process on port 3914
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 12:13:46.789 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 12:13:46.789 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 12:13:46.817 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 12:13:46.854 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 12:13:46.855 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 12:13:46.855 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
[MASTER] 12:13:48.517 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.ZoneId
[MASTER] 12:13:48.579 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.Temporal
[MASTER] 12:13:48.579 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAccessor
[MASTER] 12:13:48.579 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalField
[MASTER] 12:13:48.579 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalUnit
[MASTER] 12:13:48.579 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAmount
[MASTER] 12:13:48.579 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.Clock
[MASTER] 12:13:48.580 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalQuery
[MASTER] 12:13:48.580 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAdjuster
[MASTER] 12:13:48.591 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.Chronology
[MASTER] 12:13:48.611 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.Era
* Finished analyzing classpath
* Generating tests for class Joshua.FoxHunt.HuntDisplay
* Test criteria:
  - Branch Coverage
  - Line Coverage
  - Method-Output Coverage
  - Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 116
* Using seed 1709295223051
[Progress:>                             0%] [Cov:>                                  0%]* Starting evolution
* Initial Number of Goals in DynaMOSA = 59 / 116
[Progress:>                             2%] [Cov:==========================>        76%][Progress:>                             2%] [Cov:==========================>        76%][Progress:>                             3%] [Cov:===========================>       79%][Progress:>                             3%] [Cov:===========================>       79%][Progress:=>                            4%] [Cov:===========================>       79%][Progress:=>                            4%] [Cov:===========================>       79%][Progress:=>                            5%] [Cov:===========================>       79%][Progress:=>                            5%] [Cov:===========================>       79%][Progress:=>                            5%] [Cov:===========================>       79%][Progress:=>                            6%] [Cov:===========================>       79%][Progress:=>                            6%] [Cov:===========================>       79%][Progress:=>                            6%] [Cov:===========================>       79%][Progress:==>                           7%] [Cov:===========================>       79%][Progress:==>                           7%] [Cov:===========================>       79%][Progress:==>                           7%] [Cov:===========================>       79%][Progress:==>                           8%] [Cov:===========================>       79%][Progress:==>                           8%] [Cov:===========================>       79%][Progress:==>                           8%] [Cov:===========================>       79%][Progress:==>                           9%] [Cov:===========================>       79%][Progress:==>                           9%] [Cov:===========================>       79%][Progress:===>                          10%] [Cov:===========================>       79%][Progress:===>                          10%] [Cov:===========================>       79%][Progress:===>                          10%] [Cov:===========================>       79%][Progress:===>                          10%] [Cov:===========================>       79%][Progress:===>                          11%] [Cov:===========================>       79%][Progress:===>                          11%] [Cov:===========================>       79%][Progress:===>                          11%] [Cov:===========================>       79%][Progress:===>                          12%] [Cov:===========================>       79%][Progress:===>                          12%] [Cov:===========================>       79%][Progress:===>                          12%] [Cov:===========================>       79%][Progress:===>                          13%] [Cov:===========================>       79%][Progress:===>                          13%] [Cov:============================>      80%][Progress:===>                          13%] [Cov:============================>      80%][Progress:===>                          13%] [Cov:============================>      80%][Progress:====>                         14%] [Cov:============================>      80%][Progress:====>                         14%] [Cov:============================>      80%][Progress:====>                         14%] [Cov:============================>      80%][Progress:====>                         15%] [Cov:============================>      80%][Progress:====>                         15%] [Cov:============================>      80%][Progress:====>                         15%] [Cov:============================>      80%][Progress:====>                         16%] [Cov:============================>      80%][Progress:====>                         16%] [Cov:============================>      80%][Progress:=====>                        17%] [Cov:============================>      80%][Progress:=====>                        17%] [Cov:============================>      80%][Progress:=====>                        17%] [Cov:============================>      80%][Progress:=====>                        17%] [Cov:============================>      80%][Progress:=====>                        18%] [Cov:============================>      80%][Progress:=====>                        18%] [Cov:============================>      80%][Progress:=====>                        19%] [Cov:============================>      81%][Progress:=====>                        19%] [Cov:============================>      81%][Progress:=====>                        19%] [Cov:============================>      81%][Progress:=====>                        19%] [Cov:============================>      81%][Progress:======>                       20%] [Cov:============================>      81%][Progress:======>                       21%] [Cov:============================>      81%][Progress:======>                       21%] [Cov:============================>      81%][Progress:======>                       22%] [Cov:============================>      81%][Progress:======>                       22%] [Cov:============================>      81%][Progress:======>                       22%] [Cov:============================>      81%][Progress:======>                       22%] [Cov:============================>      81%][Progress:======>                       22%] [Cov:============================>      81%][Progress:======>                       23%] [Cov:============================>      81%][Progress:======>                       23%] [Cov:============================>      81%][Progress:=======>                      24%] [Cov:============================>      81%][Progress:=======>                      24%] [Cov:============================>      81%][Progress:=======>                      24%] [Cov:============================>      81%][Progress:=======>                      25%] [Cov:============================>      81%][Progress:=======>                      25%] [Cov:============================>      81%][Progress:=======>                      25%] [Cov:============================>      81%][MASTER] 12:14:15.178 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.ChronoLocalDate
[MASTER] 12:14:15.202 [logback-1] WARN  TestCluster - Failed to check cache for java.lang.Comparable<T> : Type points to itself
[Progress:=======>                      26%] [Cov:============================>      81%][Progress:=======>                      26%] [Cov:============================>      81%][Progress:=======>                      26%] [Cov:============================>      81%][Progress:========>                     27%] [Cov:============================>      81%][Progress:========>                     27%] [Cov:============================>      81%][Progress:========>                     27%] [Cov:============================>      81%][Progress:========>                     28%] [Cov:============================>      81%][Progress:========>                     28%] [Cov:============================>      81%][Progress:========>                     29%] [Cov:============================>      81%][Progress:========>                     29%] [Cov:============================>      81%][Progress:========>                     29%] [Cov:============================>      81%][Progress:=========>                    30%] [Cov:============================>      81%][Progress:=========>                    30%] [Cov:============================>      81%][Progress:=========>                    30%] [Cov:============================>      81%][Progress:=========>                    31%] [Cov:============================>      81%][Progress:=========>                    31%] [Cov:============================>      81%][Progress:=========>                    31%] [Cov:============================>      81%][Progress:=========>                    31%] [Cov:============================>      81%][Progress:=========>                    32%] [Cov:============================>      81%][Progress:=========>                    32%] [Cov:============================>      81%][Progress:=========>                    33%] [Cov:============================>      81%][Progress:=========>                    33%] [Cov:============================>      81%][Progress:==========>                   34%] [Cov:============================>      81%][Progress:==========>                   34%] [Cov:============================>      81%][Progress:==========>                   35%] [Cov:============================>      81%][Progress:==========>                   35%] [Cov:============================>      81%][Progress:==========>                   36%] [Cov:============================>      81%][Progress:==========>                   36%] [Cov:============================>      81%][MASTER] 12:14:26.197 [logback-1] WARN  TestCluster - Failed to check cache for javax.swing.RowFilter<M, I>.ComparisonType : Type points to itself
[Progress:===========>                  37%] [Cov:============================>      81%][Progress:===========>                  37%] [Cov:============================>      81%][Progress:===========>                  38%] [Cov:============================>      81%][Progress:===========>                  39%] [Cov:============================>      81%][Progress:===========>                  39%] [Cov:============================>      81%][Progress:============>                 40%] [Cov:============================>      81%][Progress:============>                 40%] [Cov:============================>      81%][Progress:============>                 41%] [Cov:============================>      81%][Progress:============>                 41%] [Cov:============================>      81%][Progress:============>                 42%] [Cov:============================>      81%][Progress:============>                 42%] [Cov:============================>      81%][Progress:============>                 43%] [Cov:============================>      81%][Progress:============>                 43%] [Cov:============================>      81%][Progress:=============>                44%] [Cov:============================>      81%][Progress:=============>                44%] [Cov:============================>      81%][Progress:=============>                44%] [Cov:============================>      81%][Progress:=============>                44%] [Cov:============================>      81%][Progress:=============>                45%] [Cov:============================>      81%][Progress:=============>                45%] [Cov:============================>      81%][Progress:=============>                45%] [Cov:============================>      81%][Progress:=============>                46%] [Cov:============================>      81%][Progress:=============>                46%] [Cov:============================>      81%][Progress:=============>                46%] [Cov:============================>      81%][Progress:==============>               47%] [Cov:============================>      81%][Progress:==============>               47%] [Cov:============================>      81%][Progress:==============>               47%] [Cov:============================>      81%][Progress:==============>               48%] [Cov:============================>      81%][Progress:==============>               48%] [Cov:============================>      81%][Progress:==============>               48%] [Cov:============================>      81%][Progress:==============>               49%] [Cov:============================>      81%][Progress:==============>               49%] [Cov:============================>      81%][Progress:==============>               49%] [Cov:============================>      81%][Progress:==============>               49%] [Cov:============================>      81%][Progress:===============>              50%] [Cov:============================>      81%][Progress:===============>              50%] [Cov:============================>      81%][Progress:===============>              50%] [Cov:============================>      81%][Progress:===============>              50%] [Cov:============================>      81%][Progress:===============>              51%] [Cov:============================>      81%][Progress:===============>              51%] [Cov:============================>      81%][Progress:===============>              51%] [Cov:============================>      81%][Progress:===============>              51%] [Cov:============================>      81%][Progress:===============>              52%] [Cov:============================>      81%][Progress:===============>              52%] [Cov:============================>      81%][Progress:===============>              52%] [Cov:============================>      81%][Progress:===============>              52%] [Cov:============================>      81%][Progress:===============>              53%] [Cov:============================>      81%][Progress:===============>              53%] [Cov:============================>      81%][Progress:===============>              53%] [Cov:============================>      81%][Progress:================>             54%] [Cov:=============================>     84%][Progress:================>             54%] [Cov:=============================>     84%][Progress:================>             55%] [Cov:=============================>     85%][Progress:================>             55%] [Cov:=============================>     85%][Progress:================>             56%] [Cov:=============================>     85%][Progress:=================>            57%] [Cov:=============================>     85%][Progress:=================>            58%] [Cov:=============================>     85%][Progress:=================>            58%] [Cov:=============================>     85%][Progress:=================>            59%] [Cov:=============================>     85%][Progress:=================>            59%] [Cov:=============================>     85%][Progress:==================>           60%] [Cov:=============================>     85%][Progress:==================>           61%] [Cov:=============================>     85%][Progress:==================>           61%] [Cov:=============================>     85%][Progress:==================>           61%] [Cov:=============================>     85%][Progress:==================>           61%] [Cov:=============================>     85%][Progress:==================>           62%] [Cov:=============================>     85%][Progress:==================>           62%] [Cov:=============================>     85%][Progress:==================>           63%] [Cov:=============================>     85%][Progress:==================>           63%] [Cov:=============================>     85%][Progress:==================>           63%] [Cov:=============================>     85%][Progress:===================>          64%] [Cov:=============================>     85%][Progress:===================>          64%] [Cov:=============================>     85%][Progress:===================>          65%] [Cov:=============================>     85%][Progress:===================>          65%] [Cov:=============================>     85%][Progress:===================>          65%] [Cov:=============================>     85%][Progress:===================>          66%] [Cov:=============================>     85%][Progress:===================>          66%] [Cov:=============================>     85%][Progress:===================>          66%] [Cov:=============================>     85%][Progress:====================>         67%] [Cov:=============================>     85%][Progress:====================>         67%] [Cov:=============================>     85%][Progress:====================>         67%] [Cov:=============================>     85%][Progress:====================>         67%] [Cov:=============================>     85%][Progress:====================>         68%] [Cov:=============================>     85%][Progress:====================>         68%] [Cov:=============================>     85%][Progress:====================>         68%] [Cov:=============================>     85%][Progress:====================>         69%] [Cov:=============================>     85%][Progress:====================>         69%] [Cov:=============================>     85%][Progress:====================>         69%] [Cov:=============================>     85%][Progress:=====================>        70%] [Cov:=============================>     85%][Progress:=====================>        70%] [Cov:=============================>     85%][Progress:=====================>        70%] [Cov:=============================>     85%][Progress:=====================>        71%] [Cov:=============================>     85%][Progress:=====================>        71%] [Cov:=============================>     85%][Progress:=====================>        71%] [Cov:=============================>     85%][Progress:=====================>        72%] [Cov:=============================>     85%][Progress:=====================>        72%] [Cov:=============================>     85%][Progress:=====================>        73%] [Cov:=============================>     85%][Progress:=====================>        73%] [Cov:=============================>     85%][Progress:=====================>        73%] [Cov:=============================>     85%][Progress:======================>       74%] [Cov:=============================>     85%][Progress:======================>       74%] [Cov:=============================>     85%][Progress:======================>       75%] [Cov:=============================>     85%][Progress:======================>       75%] [Cov:==============================>    87%][Progress:======================>       76%] [Cov:==============================>    87%][Progress:======================>       76%] [Cov:==============================>    87%][Progress:======================>       76%] [Cov:==============================>    87%][Progress:======================>       76%] [Cov:==============================>    87%][Progress:======================>       76%] [Cov:==============================>    87%][Progress:=======================>      77%] [Cov:==============================>    87%][Progress:=======================>      77%] [Cov:===============================>   91%][Progress:=======================>      77%] [Cov:===============================>   91%][Progress:=======================>      78%] [Cov:===============================>   91%][Progress:=======================>      78%] [Cov:===============================>   91%][Progress:=======================>      79%] [Cov:===============================>   91%][Progress:========================>     80%] [Cov:===============================>   91%][Progress:========================>     81%] [Cov:===============================>   91%][Progress:========================>     81%] [Cov:===============================>   91%][Progress:========================>     82%] [Cov:===============================>   91%][Progress:========================>     82%] [Cov:===============================>   91%][Progress:========================>     83%] [Cov:===============================>   91%][Progress:========================>     83%] [Cov:===============================>   91%][Progress:========================>     83%] [Cov:===============================>   91%][Progress:========================>     83%] [Cov:===============================>   91%][Progress:=========================>    84%] [Cov:===============================>   91%][Progress:=========================>    84%] [Cov:===============================>   91%][Progress:=========================>    84%] [Cov:===============================>   91%][Progress:=========================>    85%] [Cov:===============================>   91%][Progress:=========================>    86%] [Cov:===============================>   91%][Progress:=========================>    86%] [Cov:===============================>   91%][Progress:==========================>   87%] [Cov:===============================>   91%][Progress:==========================>   88%] [Cov:===============================>   91%][Progress:==========================>   88%] [Cov:===============================>   91%][Progress:==========================>   89%] [Cov:===============================>   91%][Progress:==========================>   89%] [Cov:===============================>   91%][Progress:===========================>  90%] [Cov:===============================>   91%][Progress:===========================>  91%] [Cov:===============================>   91%][Progress:===========================>  91%] [Cov:===============================>   91%][Progress:===========================>  92%] [Cov:===============================>   91%][Progress:===========================>  92%] [Cov:===============================>   91%][Progress:===========================>  93%] [Cov:===============================>   91%][Progress:===========================>  93%] [Cov:===============================>   91%][Progress:===========================>  93%] [Cov:===============================>   91%][Progress:===========================>  93%] [Cov:===============================>   91%][Progress:============================> 94%] [Cov:===============================>   91%][Progress:============================> 94%] [Cov:===============================>   91%][Progress:============================> 94%] [Cov:===============================>   91%][Progress:============================> 94%] [Cov:===============================>   91%][Progress:============================> 94%] [Cov:===============================>   91%][Progress:============================> 95%] [Cov:===============================>   91%][Progress:============================> 95%] [Cov:===============================>   91%][Progress:============================> 95%] [Cov:===============================>   91%][Progress:============================> 95%] [Cov:===============================>   91%][Progress:============================> 96%] [Cov:===============================>   91%][Progress:============================> 96%] [Cov:===============================>   91%][Progress:============================> 96%] [Cov:===============================>   91%][Progress:============================> 96%] [Cov:===============================>   91%][Progress:=============================>97%] [Cov:===============================>   91%][Progress:=============================>97%] [Cov:===============================>   91%][Progress:=============================>97%] [Cov:===============================>   91%][Progress:=============================>97%] [Cov:===============================>   91%][Progress:=============================>98%] [Cov:===============================>   91%][Progress:=============================>98%] [Cov:===============================>   91%][Progress:=============================>98%] [Cov:===============================>   91%][MASTER] 12:15:28.289 [logback-1] WARN  TestCluster - Failed to check cache for java.util.Enumeration<E> : Type points to itself
[Progress:=============================>99%] [Cov:===============================>   91%][Progress:=============================>99%] [Cov:===============================>   91%][Progress:=============================>99%] [Cov:===============================>   91%][Progress:=============================>99%] [Cov:===============================>   91%][Progress:==============================100%] [Cov:===============================>   91%][Progress:==============================100%] [Cov:===============================>   91%][Progress:==============================100%] [Cov:===============================>   91%][Progress:==============================100%] [Cov:===============================>   91%][Progress:==============================100%] [Cov:===============================>   91%]
* Search finished after 101s and 265 generations, 79925 statements, best individual has fitness: 9.0
* Generated before the refinement 10 tests with total length 47
statement is: Joshua.FoxHunt.HuntDisplay()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class Joshua.FoxHunt.HuntDisplay
statement code is: HuntDisplay huntDisplay = new HuntDisplay()
statement is: getPreferredSize()Ljava/awt/Dimension; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.awt.Dimension
statement code is: Dimension preferredSize = huntDisplay.getPreferredSize()
statement is: setSize(II)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: dimension.setSize((-4499), (-1749))
statement is: getPreferredSize()Ljava/awt/Dimension; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.awt.Dimension
statement code is: Dimension preferredSize = huntDisplay.getPreferredSize()
test data is: HuntDisplay huntDisplay = new HuntDisplay();
Dimension preferredSize = huntDisplay.getPreferredSize();
preferredSize.setSize((-4499), (-1749));
huntDisplay.getPreferredSize();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        HuntDisplay huntDisplay = new HuntDisplay();
        Dimension preferredSize = huntDisplay.getPreferredSize();
        preferredSize.setSize(-4499, -1749);
        huntDisplay.getPreferredSize();
        // Improved test data:
        HuntDisplay huntDisplay = new HuntDisplay();
        Dimension preferredSize = huntDisplay.getPreferredSize();
        preferredSize.setSize(-4499, -1749);
        huntDisplay.getPreferredSize();
    }
}
statement is: HuntDisplay huntDisplay = new HuntDisplay(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Dimension preferredSize = huntDisplay.getPreferredSize(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: huntDisplay.getPreferredSize() target is: huntDisplay method is: getPreferredSize()
source statement: Joshua.FoxHunt.HuntDisplay()V callee: VariableReference: Statement 0, type Joshua.FoxHunt.HuntDisplayindex is: 0
source statement: Joshua.FoxHunt.HuntDisplay()V callee: VariableReference: Statement 0, type Joshua.FoxHunt.HuntDisplayindex is: 0
Matched Method is: getPreferredSize()Ljava/awt/Dimension;
statement is: preferredSize.setSize(-4499, -1749), class spoon.support.reflect.code.CtInvocationImpl
invocation is: preferredSize.setSize(-4499, -1749) target is: preferredSize method is: setSize(int,int)
source statement: getPreferredSize()Ljava/awt/Dimension; callee: VariableReference: Statement 1, type java.awt.Dimensionindex is: 1
Matched Method is: setSize(II)V
i 0 Parameters size() 0 Num of Method Parameters: 2
i 1 Parameters size() 0 Num of Method Parameters: 2
statement is: huntDisplay.getPreferredSize(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: huntDisplay.getPreferredSize() target is: huntDisplay method is: getPreferredSize()
source statement: Joshua.FoxHunt.HuntDisplay()V callee: VariableReference: Statement 0, type Joshua.FoxHunt.HuntDisplayindex is: 0
source statement: Joshua.FoxHunt.HuntDisplay()V callee: VariableReference: Statement 0, type Joshua.FoxHunt.HuntDisplayindex is: 0
Matched Method is: getPreferredSize()Ljava/awt/Dimension;
statement is: // Improved test data:
HuntDisplay huntDisplay = new HuntDisplay(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Dimension preferredSize = huntDisplay.getPreferredSize(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: huntDisplay.getPreferredSize() target is: huntDisplay method is: getPreferredSize()
source statement: Joshua.FoxHunt.HuntDisplay()V callee: VariableReference: Statement 0, type Joshua.FoxHunt.HuntDisplayindex is: 6
source statement: Joshua.FoxHunt.HuntDisplay()V callee: VariableReference: Statement 0, type Joshua.FoxHunt.HuntDisplayindex is: 6
Matched Method is: getPreferredSize()Ljava/awt/Dimension;
statement is: preferredSize.setSize(-4499, -1749), class spoon.support.reflect.code.CtInvocationImpl
invocation is: preferredSize.setSize(-4499, -1749) target is: preferredSize method is: setSize(int,int)
source statement: getPreferredSize()Ljava/awt/Dimension; callee: VariableReference: Statement 1, type java.awt.Dimensionindex is: 1
Matched Method is: setSize(II)V
i 0 Parameters size() 0 Num of Method Parameters: 2
i 1 Parameters size() 0 Num of Method Parameters: 2
statement is: huntDisplay.getPreferredSize(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: huntDisplay.getPreferredSize() target is: huntDisplay method is: getPreferredSize()
source statement: Joshua.FoxHunt.HuntDisplay()V callee: VariableReference: Statement 0, type Joshua.FoxHunt.HuntDisplayindex is: 6
source statement: Joshua.FoxHunt.HuntDisplay()V callee: VariableReference: Statement 0, type Joshua.FoxHunt.HuntDisplayindex is: 6
Matched Method is: getPreferredSize()Ljava/awt/Dimension;
TestCase is: HuntDisplay huntDisplay = new HuntDisplay();
Dimension preferredSize = huntDisplay.getPreferredSize();
int _int = null;
int _int = null;
preferredSize.setSize(_int, _int);
huntDisplay.getPreferredSize();
HuntDisplay huntDisplay = new HuntDisplay();
huntDisplay.getPreferredSize();
int _int = null;
int _int = null;
preferredSize.setSize(_int, _int);
huntDisplay.getPreferredSize();

statement is: Joshua.FoxHunt.HuntDisplay()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class Joshua.FoxHunt.HuntDisplay
statement code is: HuntDisplay huntDisplay = new HuntDisplay()
statement is: Joshua.FoxHunt.TrigPoint(DDD)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class Joshua.FoxHunt.TrigPoint
statement code is: TrigPoint trigPoint = new TrigPoint(1, 2989.14, 2989.14)
statement is: addPoint(LJoshua/FoxHunt/TrigPoint;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: huntDisplay.addPoint(arg0)
statement is: java.awt.image.BufferedImage(III)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.awt.image.BufferedImage
statement code is: BufferedImage bufferedImage = new BufferedImage(1, 3213, 2)
statement is: createGraphics()Ljava/awt/Graphics2D; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.awt.Graphics2D
statement code is: Graphics2D createGraphics = bufferedImage.createGraphics()
statement is: paintComponent(Ljava/awt/Graphics;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: huntDisplay.paintComponent(arg0)
test data is: HuntDisplay huntDisplay = new HuntDisplay();
TrigPoint trigPoint = new TrigPoint(1, 2989.14, 2989.14);
huntDisplay.addPoint(trigPoint);
BufferedImage bufferedImage = new BufferedImage(1, 3213, 2);
Graphics2D createGraphics = bufferedImage.createGraphics();
huntDisplay.paintComponent(createGraphics);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        HuntDisplay huntDisplay = new HuntDisplay();
        TrigPoint trigPoint = new TrigPoint(1, 2989.14, 2989.14);
        huntDisplay.addPoint(trigPoint);
        BufferedImage bufferedImage = new BufferedImage(1000, 3213, 2);
        Graphics2D createGraphics = bufferedImage.createGraphics();
        huntDisplay.paintComponent(createGraphics);
    }
}
statement is: HuntDisplay huntDisplay = new HuntDisplay(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: TrigPoint trigPoint = new TrigPoint(1, 2989.14, 2989.14), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: huntDisplay.addPoint(trigPoint), class spoon.support.reflect.code.CtInvocationImpl
invocation is: huntDisplay.addPoint(trigPoint) target is: huntDisplay method is: addPoint(TrigPoint)
source statement: Joshua.FoxHunt.HuntDisplay()V callee: VariableReference: Statement 0, type Joshua.FoxHunt.HuntDisplayindex is: 0
Matched Method is: addPoint(LJoshua/FoxHunt/TrigPoint;)V
statement is: BufferedImage bufferedImage = new BufferedImage(1000, 3213, 2), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Graphics2D createGraphics = bufferedImage.createGraphics(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: bufferedImage.createGraphics() target is: bufferedImage method is: createGraphics()
source statement: java.awt.image.BufferedImage(III)V callee: VariableReference: Statement 3, type java.awt.image.BufferedImageindex is: 9
Matched Method is: createGraphics()Ljava/awt/Graphics2D;
statement is: huntDisplay.paintComponent(createGraphics), class spoon.support.reflect.code.CtInvocationImpl
invocation is: huntDisplay.paintComponent(createGraphics) target is: huntDisplay method is: paintComponent(Graphics2D)
source statement: Joshua.FoxHunt.HuntDisplay()V callee: VariableReference: Statement 0, type Joshua.FoxHunt.HuntDisplayindex is: 0
Matched Method is: paintComponent(Ljava/awt/Graphics;)V
TestCase is: HuntDisplay huntDisplay = new HuntDisplay();
int _int = 1;
double _double = 2989.14;
double _double = 2989.14;
TrigPoint trigPoint = new TrigPoint(_int, _double, _double);
huntDisplay.addPoint(trigPoint);
int _int = 1000;
int _int = 3213;
int _int = 2;
BufferedImage bufferedImage = new BufferedImage(_int, _int, _int);
Graphics2D createGraphics = ((BufferedImage) _double).createGraphics();
huntDisplay.paintComponent(createGraphics);

statement is: Joshua.FoxHunt.HuntDisplay()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class Joshua.FoxHunt.HuntDisplay
statement code is: HuntDisplay huntDisplay = new HuntDisplay()
statement is: getMinimumSize()Ljava/awt/Dimension; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.awt.Dimension
statement code is: Dimension minimumSize = huntDisplay.getMinimumSize()
statement is: org.evosuite.testcase.statements.AssignmentStatement@5345c480 type is: class org.evosuite.testcase.statements.AssignmentStatement return type int
statement code is: dimension.height = (-20)
statement is: getMinimumSize()Ljava/awt/Dimension; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.awt.Dimension
statement code is: Dimension minimumSize = huntDisplay.getMinimumSize()
test data is: HuntDisplay huntDisplay = new HuntDisplay();
Dimension minimumSize = huntDisplay.getMinimumSize();
minimumSize.height = (-20);
huntDisplay.getMinimumSize();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        HuntDisplay huntDisplay = new HuntDisplay();
        Dimension minimumSize = huntDisplay.getMinimumSize();
        minimumSize.height = -10;
        huntDisplay.getMinimumSize();
    }
}
statement is: HuntDisplay huntDisplay = new HuntDisplay(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Dimension minimumSize = huntDisplay.getMinimumSize(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: huntDisplay.getMinimumSize() target is: huntDisplay method is: getMinimumSize()
source statement: Joshua.FoxHunt.HuntDisplay()V callee: VariableReference: Statement 0, type Joshua.FoxHunt.HuntDisplayindex is: 0
source statement: Joshua.FoxHunt.HuntDisplay()V callee: VariableReference: Statement 0, type Joshua.FoxHunt.HuntDisplayindex is: 0
Matched Method is: getMinimumSize()Ljava/awt/Dimension;
statement is: minimumSize.height = -10, class spoon.support.reflect.code.CtAssignmentImpl
statement is: huntDisplay.getMinimumSize(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: huntDisplay.getMinimumSize() target is: huntDisplay method is: getMinimumSize()
source statement: Joshua.FoxHunt.HuntDisplay()V callee: VariableReference: Statement 0, type Joshua.FoxHunt.HuntDisplayindex is: 0
source statement: Joshua.FoxHunt.HuntDisplay()V callee: VariableReference: Statement 0, type Joshua.FoxHunt.HuntDisplayindex is: 0
Matched Method is: getMinimumSize()Ljava/awt/Dimension;
TestCase is: HuntDisplay huntDisplay = new HuntDisplay();
huntDisplay.getMinimumSize();
huntDisplay.getMinimumSize();

statement is: Joshua.FoxHunt.HuntDisplay()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class Joshua.FoxHunt.HuntDisplay
statement code is: HuntDisplay huntDisplay = new HuntDisplay()
statement is: java.awt.image.BufferedImage(III)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.awt.image.BufferedImage
statement code is: BufferedImage bufferedImage = new BufferedImage(1, 3213, 2)
statement is: createGraphics()Ljava/awt/Graphics2D; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.awt.Graphics2D
statement code is: Graphics2D createGraphics = bufferedImage.createGraphics()
statement is: paintComponent(Ljava/awt/Graphics;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: huntDisplay.paintComponent(arg0)
test data is: HuntDisplay huntDisplay = new HuntDisplay();
BufferedImage bufferedImage = new BufferedImage(1, 3213, 2);
Graphics2D createGraphics = bufferedImage.createGraphics();
huntDisplay.paintComponent(createGraphics);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Testing the paintComponent method of the HuntDisplay class
        int width = 10;
        int height = 20;
        BufferedImage displayImage = new BufferedImage(width, height, 2);
        Graphics2D createGraphics = displayImage.createGraphics();
        huntDisplay.paintComponent(createGraphics);
    }
}
statement is: // Testing the paintComponent method of the HuntDisplay class
int width = 10, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: int height = 20, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: BufferedImage displayImage = new BufferedImage(width, height, 2), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Graphics2D createGraphics = displayImage.createGraphics(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: displayImage.createGraphics() target is: displayImage method is: createGraphics()
source statement: java.awt.image.BufferedImage(III)V callee: VariableReference: Statement 1, type java.awt.image.BufferedImageindex is: 3
Matched Method is: createGraphics()Ljava/awt/Graphics2D;
statement is: huntDisplay.paintComponent(createGraphics), class spoon.support.reflect.code.CtInvocationImpl
invocation is: huntDisplay.paintComponent(createGraphics) target is: huntDisplay method is: paintComponent(Graphics2D)
TestCase is: int _int = 10;
int _int = 20;
int _int = 2;
BufferedImage bufferedImage = new BufferedImage(_int, _int, _int);
((BufferedImage) _int).createGraphics();

statement is: java.awt.image.BufferedImage(III)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.awt.image.BufferedImage
statement code is: BufferedImage bufferedImage = new BufferedImage(10, 10, 10)
statement is: createGraphics()Ljava/awt/Graphics2D; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.awt.Graphics2D
statement code is: Graphics2D createGraphics = bufferedImage.createGraphics()
statement is: Joshua.FoxHunt.HuntDisplay()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class Joshua.FoxHunt.HuntDisplay
statement code is: HuntDisplay huntDisplay = new HuntDisplay()
statement is: Joshua.FoxHunt.Landmark(DDLjavax/swing/ImageIcon;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class Joshua.FoxHunt.Landmark
statement code is: Landmark landmark = new Landmark(10, 10, (ImageIcon) null)
statement is: addLandMark(LJoshua/FoxHunt/Landmark;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: huntDisplay.addLandMark(arg0)
statement is: paintComponent(Ljava/awt/Graphics;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: huntDisplay.paintComponent(arg0)
test data is: BufferedImage bufferedImage = new BufferedImage(10, 10, 10);
Graphics2D createGraphics = bufferedImage.createGraphics();
HuntDisplay huntDisplay = new HuntDisplay();
Landmark landmark = new Landmark(10, 10, (ImageIcon) null);
huntDisplay.addLandMark(landmark);
huntDisplay.paintComponent(createGraphics);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        BufferedImage bufferedImage = new BufferedImage(10, 10, 10);
        Graphics2D createGraphics = bufferedImage.createGraphics();
        HuntDisplay huntDisplay = new HuntDisplay();
        Landmark landmark = new Landmark(10, 10, new ImageIcon("path/to/image"));
        huntDisplay.addLandMark(landmark);
        huntDisplay.paintComponent(createGraphics);
    }
}
statement is: BufferedImage bufferedImage = new BufferedImage(10, 10, 10), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Graphics2D createGraphics = bufferedImage.createGraphics(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: bufferedImage.createGraphics() target is: bufferedImage method is: createGraphics()
source statement: java.awt.image.BufferedImage(III)V callee: VariableReference: Statement 0, type java.awt.image.BufferedImageindex is: 3
Matched Method is: createGraphics()Ljava/awt/Graphics2D;
statement is: HuntDisplay huntDisplay = new HuntDisplay(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Landmark landmark = new Landmark(10, 10, new ImageIcon("path/to/image")), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: huntDisplay.addLandMark(landmark), class spoon.support.reflect.code.CtInvocationImpl
invocation is: huntDisplay.addLandMark(landmark) target is: huntDisplay method is: addLandMark(Landmark)
source statement: Joshua.FoxHunt.HuntDisplay()V callee: VariableReference: Statement 2, type Joshua.FoxHunt.HuntDisplayindex is: 5
Matched Method is: addLandMark(LJoshua/FoxHunt/Landmark;)V
statement is: huntDisplay.paintComponent(createGraphics), class spoon.support.reflect.code.CtInvocationImpl
invocation is: huntDisplay.paintComponent(createGraphics) target is: huntDisplay method is: paintComponent(Graphics2D)
source statement: Joshua.FoxHunt.HuntDisplay()V callee: VariableReference: Statement 2, type Joshua.FoxHunt.HuntDisplayindex is: 5
Matched Method is: paintComponent(Ljava/awt/Graphics;)V
TestCase is: int _int = 10;
int _int = 10;
int _int = 10;
BufferedImage bufferedImage = new BufferedImage(_int, _int, _int);
Graphics2D createGraphics = ((BufferedImage) _int).createGraphics();
HuntDisplay huntDisplay = new HuntDisplay();
int _int = 10;
int _int = 10;
Landmark landmark = new Landmark(_int, _int, (ImageIcon) null);
((HuntDisplay) _int).addLandMark(landmark);
((HuntDisplay) _int).paintComponent(createGraphics);

statement is: Joshua.FoxHunt.HuntDisplay()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class Joshua.FoxHunt.HuntDisplay
statement code is: HuntDisplay huntDisplay = new HuntDisplay()
statement is: Joshua.FoxHunt.TrigPoint(DDD)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class Joshua.FoxHunt.TrigPoint
statement code is: TrigPoint trigPoint = new TrigPoint(0.0, 0.0, (double) 50)
statement is: addPoint(LJoshua/FoxHunt/TrigPoint;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: huntDisplay.addPoint(arg0)
statement is: javax.swing.ImageIcon()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class javax.swing.ImageIcon
statement code is: ImageIcon imageIcon = new ImageIcon()
statement is: Joshua.FoxHunt.Landmark(DDLjavax/swing/ImageIcon;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class Joshua.FoxHunt.Landmark
statement code is: Landmark landmark = new Landmark((-1121.5992913188), 50, arg2)
statement is: addLandMark(LJoshua/FoxHunt/Landmark;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: huntDisplay.addLandMark(arg0)
statement is: paintComponent(Ljava/awt/Graphics;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: huntDisplay.paintComponent((Graphics) null)
test data is: HuntDisplay huntDisplay = new HuntDisplay();
TrigPoint trigPoint = new TrigPoint(0.0, 0.0, (double) 50);
huntDisplay.addPoint(trigPoint);
ImageIcon imageIcon = new ImageIcon();
Landmark landmark = new Landmark((-1121.5992913188), 50, imageIcon);
huntDisplay.addLandMark(landmark);
huntDisplay.paintComponent((Graphics) null);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        HuntDisplay huntDisplay = new HuntDisplay();
        TrigPoint trigPoint = new TrigPoint(0.0, 34.92, ((double) (50)));
        huntDisplay.addPoint(trigPoint);
        ImageIcon imageIcon = new ImageIcon("path/to/image.jpg");
        Landmark landmark = new Landmark(-1121.5992913188, 50, imageIcon);
        huntDisplay.addLandMark(landmark);
        huntDisplay.paintComponent(((Graphics) (null)));
    }
}
statement is: HuntDisplay huntDisplay = new HuntDisplay(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: TrigPoint trigPoint = new TrigPoint(0.0, 34.92, ((double) (50))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: huntDisplay.addPoint(trigPoint), class spoon.support.reflect.code.CtInvocationImpl
invocation is: huntDisplay.addPoint(trigPoint) target is: huntDisplay method is: addPoint(TrigPoint)
source statement: Joshua.FoxHunt.HuntDisplay()V callee: VariableReference: Statement 0, type Joshua.FoxHunt.HuntDisplayindex is: 0
Matched Method is: addPoint(LJoshua/FoxHunt/TrigPoint;)V
statement is: ImageIcon imageIcon = new ImageIcon("path/to/image.jpg"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Landmark landmark = new Landmark(-1121.5992913188, 50, imageIcon), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: huntDisplay.addLandMark(landmark), class spoon.support.reflect.code.CtInvocationImpl
invocation is: huntDisplay.addLandMark(landmark) target is: huntDisplay method is: addLandMark(Landmark)
source statement: Joshua.FoxHunt.HuntDisplay()V callee: VariableReference: Statement 0, type Joshua.FoxHunt.HuntDisplayindex is: 0
Matched Method is: addLandMark(LJoshua/FoxHunt/Landmark;)V
statement is: huntDisplay.paintComponent(((Graphics) (null))), class spoon.support.reflect.code.CtInvocationImpl
invocation is: huntDisplay.paintComponent(((Graphics) (null))) target is: huntDisplay method is: paintComponent(Graphics)
source statement: Joshua.FoxHunt.HuntDisplay()V callee: VariableReference: Statement 0, type Joshua.FoxHunt.HuntDisplayindex is: 0
Matched Method is: paintComponent(Ljava/awt/Graphics;)V
i 0 Parameters size() 0 Num of Method Parameters: 1
TestCase is: HuntDisplay huntDisplay = new HuntDisplay();
double _double = 0.0;
double _double = 34.92;
int _int = 50;
TrigPoint trigPoint = new TrigPoint(_double, _double, (double) _int);
huntDisplay.addPoint(trigPoint);
int _int = 50;
Landmark landmark = new Landmark(_int, 50, (ImageIcon) _int);
huntDisplay.addLandMark(landmark);
Graphics graphics = null;
huntDisplay.paintComponent(graphics);

statement is: Joshua.FoxHunt.HuntDisplay()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class Joshua.FoxHunt.HuntDisplay
statement code is: HuntDisplay huntDisplay = new HuntDisplay()
statement is: Joshua.FoxHunt.TrigPoint(DDIZ)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class Joshua.FoxHunt.TrigPoint
statement code is: TrigPoint trigPoint = new TrigPoint(180.0, 1266.618965, 50, true)
statement is: addPoint(LJoshua/FoxHunt/TrigPoint;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: huntDisplay.addPoint(arg0)
statement is: paintComponent(Ljava/awt/Graphics;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: huntDisplay.paintComponent((Graphics) null)
test data is: HuntDisplay huntDisplay = new HuntDisplay();
TrigPoint trigPoint = new TrigPoint(180.0, 1266.618965, 50, true);
huntDisplay.addPoint(trigPoint);
huntDisplay.paintComponent((Graphics) null);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        HuntDisplay huntDisplay = new HuntDisplay();
        TrigPoint trigPoint = new TrigPoint(200.5, 3739.1, 49, true);
        huntDisplay.addPoint(trigPoint);
        huntDisplay.paintComponent(((Graphics) (null)));
    }
}
statement is: HuntDisplay huntDisplay = new HuntDisplay(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: TrigPoint trigPoint = new TrigPoint(200.5, 3739.1, 49, true), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: huntDisplay.addPoint(trigPoint), class spoon.support.reflect.code.CtInvocationImpl
invocation is: huntDisplay.addPoint(trigPoint) target is: huntDisplay method is: addPoint(TrigPoint)
source statement: Joshua.FoxHunt.HuntDisplay()V callee: VariableReference: Statement 0, type Joshua.FoxHunt.HuntDisplayindex is: 0
Matched Method is: addPoint(LJoshua/FoxHunt/TrigPoint;)V
statement is: huntDisplay.paintComponent(((Graphics) (null))), class spoon.support.reflect.code.CtInvocationImpl
invocation is: huntDisplay.paintComponent(((Graphics) (null))) target is: huntDisplay method is: paintComponent(Graphics)
source statement: Joshua.FoxHunt.HuntDisplay()V callee: VariableReference: Statement 0, type Joshua.FoxHunt.HuntDisplayindex is: 0
Matched Method is: paintComponent(Ljava/awt/Graphics;)V
i 0 Parameters size() 0 Num of Method Parameters: 1
TestCase is: HuntDisplay huntDisplay = new HuntDisplay();
double _double = 200.5;
double _double = 3739.1;
int _int = 49;
boolean _boolean = true;
TrigPoint trigPoint = new TrigPoint(_double, _double, _int, _boolean);
huntDisplay.addPoint(trigPoint);
Graphics graphics = null;
huntDisplay.paintComponent(graphics);

statement is: Joshua.FoxHunt.HuntDisplay()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class Joshua.FoxHunt.HuntDisplay
statement code is: HuntDisplay huntDisplay = new HuntDisplay()
statement is: getMinimumSize()Ljava/awt/Dimension; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.awt.Dimension
statement code is: Dimension minimumSize = huntDisplay.getMinimumSize()
statement is: org.evosuite.testcase.statements.AssignmentStatement@56de2e7e type is: class org.evosuite.testcase.statements.AssignmentStatement return type int
statement code is: dimension.height = 0
statement is: getMinimumSize()Ljava/awt/Dimension; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.awt.Dimension
statement code is: Dimension minimumSize = huntDisplay.getMinimumSize()
test data is: HuntDisplay huntDisplay = new HuntDisplay();
Dimension minimumSize = huntDisplay.getMinimumSize();
minimumSize.height = 0;
huntDisplay.getMinimumSize();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        HuntDisplay huntDisplay = new HuntDisplay();
        Dimension minimumSize = huntDisplay.getMinimumSize();
        minimumSize.height = 500;
        huntDisplay.getMinimumSize();
    }
}
statement is: HuntDisplay huntDisplay = new HuntDisplay(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Dimension minimumSize = huntDisplay.getMinimumSize(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: huntDisplay.getMinimumSize() target is: huntDisplay method is: getMinimumSize()
source statement: Joshua.FoxHunt.HuntDisplay()V callee: VariableReference: Statement 0, type Joshua.FoxHunt.HuntDisplayindex is: 0
source statement: Joshua.FoxHunt.HuntDisplay()V callee: VariableReference: Statement 0, type Joshua.FoxHunt.HuntDisplayindex is: 0
Matched Method is: getMinimumSize()Ljava/awt/Dimension;
statement is: minimumSize.height = 500, class spoon.support.reflect.code.CtAssignmentImpl
statement is: huntDisplay.getMinimumSize(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: huntDisplay.getMinimumSize() target is: huntDisplay method is: getMinimumSize()
source statement: Joshua.FoxHunt.HuntDisplay()V callee: VariableReference: Statement 0, type Joshua.FoxHunt.HuntDisplayindex is: 0
source statement: Joshua.FoxHunt.HuntDisplay()V callee: VariableReference: Statement 0, type Joshua.FoxHunt.HuntDisplayindex is: 0
Matched Method is: getMinimumSize()Ljava/awt/Dimension;
TestCase is: HuntDisplay huntDisplay = new HuntDisplay();
huntDisplay.getMinimumSize();
huntDisplay.getMinimumSize();

statement is: Joshua.FoxHunt.HuntDisplay()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class Joshua.FoxHunt.HuntDisplay
statement code is: HuntDisplay huntDisplay = new HuntDisplay()
statement is: getMinimumSize()Ljava/awt/Dimension; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.awt.Dimension
statement code is: Dimension minimumSize = huntDisplay.getMinimumSize()
statement is: setSize(II)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: dimension.setSize(0, 200)
statement is: getMinimumSize()Ljava/awt/Dimension; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.awt.Dimension
statement code is: Dimension minimumSize = huntDisplay.getMinimumSize()
test data is: HuntDisplay huntDisplay = new HuntDisplay();
Dimension minimumSize = huntDisplay.getMinimumSize();
minimumSize.setSize(0, 200);
huntDisplay.getMinimumSize();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        HuntDisplay huntDisplay = new HuntDisplay();
        Dimension minimumSize = huntDisplay.getMinimumSize();
        minimumSize.setSize(10, 50);// Improved test data

        huntDisplay.getMinimumSize();
    }
}
statement is: HuntDisplay huntDisplay = new HuntDisplay(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Dimension minimumSize = huntDisplay.getMinimumSize(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: huntDisplay.getMinimumSize() target is: huntDisplay method is: getMinimumSize()
source statement: Joshua.FoxHunt.HuntDisplay()V callee: VariableReference: Statement 0, type Joshua.FoxHunt.HuntDisplayindex is: 0
source statement: Joshua.FoxHunt.HuntDisplay()V callee: VariableReference: Statement 0, type Joshua.FoxHunt.HuntDisplayindex is: 0
Matched Method is: getMinimumSize()Ljava/awt/Dimension;
statement is: minimumSize.setSize(10, 50)// Improved test data
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: minimumSize.setSize(10, 50)// Improved test data
 target is: minimumSize method is: setSize(int,int)
source statement: getMinimumSize()Ljava/awt/Dimension; callee: VariableReference: Statement 1, type java.awt.Dimensionindex is: 1
Matched Method is: setSize(II)V
statement is: huntDisplay.getMinimumSize(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: huntDisplay.getMinimumSize() target is: huntDisplay method is: getMinimumSize()
source statement: Joshua.FoxHunt.HuntDisplay()V callee: VariableReference: Statement 0, type Joshua.FoxHunt.HuntDisplayindex is: 0
source statement: Joshua.FoxHunt.HuntDisplay()V callee: VariableReference: Statement 0, type Joshua.FoxHunt.HuntDisplayindex is: 0
Matched Method is: getMinimumSize()Ljava/awt/Dimension;
TestCase is: HuntDisplay huntDisplay = new HuntDisplay();
Dimension minimumSize = huntDisplay.getMinimumSize();
int _int = 10;
int _int = 50;
minimumSize.setSize(_int, _int);
huntDisplay.getMinimumSize();

statement is: Joshua.FoxHunt.HuntDisplay()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class Joshua.FoxHunt.HuntDisplay
statement code is: HuntDisplay huntDisplay = new HuntDisplay()
statement is: getPreferredSize()Ljava/awt/Dimension; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.awt.Dimension
statement code is: Dimension preferredSize = huntDisplay.getPreferredSize()
statement is: setSize(II)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: dimension.setSize((-1), 0)
statement is: getPreferredSize()Ljava/awt/Dimension; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.awt.Dimension
statement code is: Dimension preferredSize = huntDisplay.getPreferredSize()
test data is: HuntDisplay huntDisplay = new HuntDisplay();
Dimension preferredSize = huntDisplay.getPreferredSize();
preferredSize.setSize((-1), 0);
huntDisplay.getPreferredSize();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        HuntDisplay huntDisplay = new HuntDisplay();
        Dimension preferredSize = huntDisplay.getPreferredSize();
        preferredSize.setSize(200, 100);// Set a more descriptive size

        huntDisplay.getPreferredSize();
    }
}
statement is: HuntDisplay huntDisplay = new HuntDisplay(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Dimension preferredSize = huntDisplay.getPreferredSize(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: huntDisplay.getPreferredSize() target is: huntDisplay method is: getPreferredSize()
source statement: Joshua.FoxHunt.HuntDisplay()V callee: VariableReference: Statement 0, type Joshua.FoxHunt.HuntDisplayindex is: 0
source statement: Joshua.FoxHunt.HuntDisplay()V callee: VariableReference: Statement 0, type Joshua.FoxHunt.HuntDisplayindex is: 0
Matched Method is: getPreferredSize()Ljava/awt/Dimension;
statement is: preferredSize.setSize(200, 100)// Set a more descriptive size
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: preferredSize.setSize(200, 100)// Set a more descriptive size
 target is: preferredSize method is: setSize(int,int)
source statement: getPreferredSize()Ljava/awt/Dimension; callee: VariableReference: Statement 1, type java.awt.Dimensionindex is: 1
Matched Method is: setSize(II)V
statement is: huntDisplay.getPreferredSize(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: huntDisplay.getPreferredSize() target is: huntDisplay method is: getPreferredSize()
source statement: Joshua.FoxHunt.HuntDisplay()V callee: VariableReference: Statement 0, type Joshua.FoxHunt.HuntDisplayindex is: 0
source statement: Joshua.FoxHunt.HuntDisplay()V callee: VariableReference: Statement 0, type Joshua.FoxHunt.HuntDisplayindex is: 0
Matched Method is: getPreferredSize()Ljava/awt/Dimension;
TestCase is: HuntDisplay huntDisplay = new HuntDisplay();
Dimension preferredSize = huntDisplay.getPreferredSize();
int _int = 200;
int _int = 100;
preferredSize.setSize(_int, _int);
huntDisplay.getPreferredSize();

* test suite isTestSuite: 20
Test 0: 
HuntDisplay huntDisplay = new HuntDisplay();
Dimension preferredSize = huntDisplay.getPreferredSize();
preferredSize.setSize((-4499), (-1749));
huntDisplay.getPreferredSize();
Test 1: 
HuntDisplay huntDisplay = new HuntDisplay();
TrigPoint trigPoint = new TrigPoint(1, 2989.14, 2989.14);
huntDisplay.addPoint(trigPoint);
BufferedImage bufferedImage = new BufferedImage(1, 3213, 2);
Graphics2D createGraphics = bufferedImage.createGraphics();
huntDisplay.paintComponent(createGraphics);
Test 2: 
HuntDisplay huntDisplay = new HuntDisplay();
Dimension minimumSize = huntDisplay.getMinimumSize();
minimumSize.height = (-20);
huntDisplay.getMinimumSize();
Test 3: 
HuntDisplay huntDisplay = new HuntDisplay();
BufferedImage bufferedImage = new BufferedImage(1, 3213, 2);
Graphics2D createGraphics = bufferedImage.createGraphics();
huntDisplay.paintComponent(createGraphics);
Test 4: 
BufferedImage bufferedImage = new BufferedImage(10, 10, 10);
Graphics2D createGraphics = bufferedImage.createGraphics();
HuntDisplay huntDisplay = new HuntDisplay();
Landmark landmark = new Landmark(10, 10, (ImageIcon) null);
huntDisplay.addLandMark(landmark);
// Undeclared exception!
try { 
  huntDisplay.paintComponent(createGraphics);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("Joshua.FoxHunt.HuntDisplay", e);
}

Test 5: 
HuntDisplay huntDisplay = new HuntDisplay();
TrigPoint trigPoint = new TrigPoint(0.0, 0.0, (double) 50);
huntDisplay.addPoint(trigPoint);
ImageIcon imageIcon = new ImageIcon();
Landmark landmark = new Landmark((-1121.5992913188), 50, imageIcon);
huntDisplay.addLandMark(landmark);
// Undeclared exception!
try { 
  huntDisplay.paintComponent((Graphics) null);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("Joshua.FoxHunt.HuntDisplay", e);
}

Test 6: 
HuntDisplay huntDisplay = new HuntDisplay();
TrigPoint trigPoint = new TrigPoint(180.0, 1266.618965, 50, true);
huntDisplay.addPoint(trigPoint);
// Undeclared exception!
try { 
  huntDisplay.paintComponent((Graphics) null);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("Joshua.FoxHunt.HuntDisplay", e);
}

Test 7: 
HuntDisplay huntDisplay = new HuntDisplay();
Dimension minimumSize = huntDisplay.getMinimumSize();
minimumSize.height = 0;
huntDisplay.getMinimumSize();
Test 8: 
HuntDisplay huntDisplay = new HuntDisplay();
Dimension minimumSize = huntDisplay.getMinimumSize();
minimumSize.setSize(0, 200);
huntDisplay.getMinimumSize();
Test 9: 
HuntDisplay huntDisplay = new HuntDisplay();
Dimension preferredSize = huntDisplay.getPreferredSize();
preferredSize.setSize((-1), 0);
huntDisplay.getPreferredSize();
Test 10: 
HuntDisplay huntDisplay = new HuntDisplay();
Dimension preferredSize = huntDisplay.getPreferredSize();
preferredSize.setSize((int) (Integer) null, (int) (Integer) null);
huntDisplay.getPreferredSize();
HuntDisplay huntDisplay = new HuntDisplay();
huntDisplay.getPreferredSize();
int _int = null;
int _int = null;
preferredSize.setSize(_int, _int);
huntDisplay.getPreferredSize();

Test 11: 
HuntDisplay huntDisplay = new HuntDisplay();
TrigPoint trigPoint = new TrigPoint(1, 2989.14, 2989.14);
huntDisplay.addPoint(trigPoint);
BufferedImage bufferedImage = new BufferedImage(1000, 3213, 2);
Graphics2D createGraphics = ((BufferedImage)2989.14).createGraphics();
huntDisplay.paintComponent(createGraphics);

Test 12: 
HuntDisplay huntDisplay = new HuntDisplay();
huntDisplay.getMinimumSize();
huntDisplay.getMinimumSize();

Test 13: 
BufferedImage bufferedImage = new BufferedImage(10, 20, 2);
((BufferedImage)20).createGraphics();

Test 14: 
int _int = 10;
BufferedImage bufferedImage = new BufferedImage(10, 10, 10);
Graphics2D createGraphics = ((BufferedImage)10).createGraphics();
HuntDisplay huntDisplay = new HuntDisplay();
int _int = 10;
int _int = 10;
Landmark landmark = new Landmark(_int, _int, (ImageIcon) null);
((HuntDisplay) _int).addLandMark(landmark);
((HuntDisplay) _int).paintComponent(createGraphics);

Test 15: 
HuntDisplay huntDisplay = new HuntDisplay();
TrigPoint trigPoint = new TrigPoint(0.0, 34.92, (double) 50);
huntDisplay.addPoint(trigPoint);
Landmark landmark = new Landmark(50, 50, (ImageIcon) 50);
huntDisplay.addLandMark(landmark);
Graphics graphics = null;
huntDisplay.paintComponent(graphics);

Test 16: 
HuntDisplay huntDisplay = new HuntDisplay();
TrigPoint trigPoint = new TrigPoint(200.5, 3739.1, 49, true);
huntDisplay.addPoint(trigPoint);
huntDisplay.paintComponent((Graphics) null);

Test 17: 
HuntDisplay huntDisplay = new HuntDisplay();
huntDisplay.getMinimumSize();
huntDisplay.getMinimumSize();

Test 18: 
HuntDisplay huntDisplay = new HuntDisplay();
Dimension minimumSize = huntDisplay.getMinimumSize();
minimumSize.setSize(10, 50);
huntDisplay.getMinimumSize();

Test 19: 
HuntDisplay huntDisplay = new HuntDisplay();
Dimension preferredSize = huntDisplay.getPreferredSize();
preferredSize.setSize(200, 100);
huntDisplay.getPreferredSize();


* Generated after the refinement and before minimization 20 tests with total length 99
* test suite isTestSuite: 20
Test 0: 
HuntDisplay huntDisplay = new HuntDisplay();
Dimension preferredSize = huntDisplay.getPreferredSize();
preferredSize.setSize((-4499), (-1749));
huntDisplay.getPreferredSize();
Test 1: 
HuntDisplay huntDisplay = new HuntDisplay();
TrigPoint trigPoint = new TrigPoint(1, 2989.14, 2989.14);
huntDisplay.addPoint(trigPoint);
BufferedImage bufferedImage = new BufferedImage(1, 3213, 2);
Graphics2D createGraphics = bufferedImage.createGraphics();
huntDisplay.paintComponent(createGraphics);
Test 2: 
HuntDisplay huntDisplay = new HuntDisplay();
Dimension minimumSize = huntDisplay.getMinimumSize();
minimumSize.height = (-20);
huntDisplay.getMinimumSize();
Test 3: 
HuntDisplay huntDisplay = new HuntDisplay();
BufferedImage bufferedImage = new BufferedImage(1, 3213, 2);
Graphics2D createGraphics = bufferedImage.createGraphics();
huntDisplay.paintComponent(createGraphics);
Test 4: 
BufferedImage bufferedImage = new BufferedImage(10, 10, 10);
Graphics2D createGraphics = bufferedImage.createGraphics();
HuntDisplay huntDisplay = new HuntDisplay();
Landmark landmark = new Landmark(10, 10, (ImageIcon) null);
huntDisplay.addLandMark(landmark);
// Undeclared exception!
try { 
  huntDisplay.paintComponent(createGraphics);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("Joshua.FoxHunt.HuntDisplay", e);
}

Test 5: 
HuntDisplay huntDisplay = new HuntDisplay();
TrigPoint trigPoint = new TrigPoint(0.0, 0.0, (double) 50);
huntDisplay.addPoint(trigPoint);
ImageIcon imageIcon = new ImageIcon();
Landmark landmark = new Landmark((-1121.5992913188), 50, imageIcon);
huntDisplay.addLandMark(landmark);
// Undeclared exception!
try { 
  huntDisplay.paintComponent((Graphics) null);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("Joshua.FoxHunt.HuntDisplay", e);
}

Test 6: 
HuntDisplay huntDisplay = new HuntDisplay();
TrigPoint trigPoint = new TrigPoint(180.0, 1266.618965, 50, true);
huntDisplay.addPoint(trigPoint);
// Undeclared exception!
try { 
  huntDisplay.paintComponent((Graphics) null);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("Joshua.FoxHunt.HuntDisplay", e);
}

Test 7: 
HuntDisplay huntDisplay = new HuntDisplay();
Dimension minimumSize = huntDisplay.getMinimumSize();
minimumSize.height = 0;
huntDisplay.getMinimumSize();
Test 8: 
HuntDisplay huntDisplay = new HuntDisplay();
Dimension minimumSize = huntDisplay.getMinimumSize();
minimumSize.setSize(0, 200);
huntDisplay.getMinimumSize();
Test 9: 
HuntDisplay huntDisplay = new HuntDisplay();
Dimension preferredSize = huntDisplay.getPreferredSize();
preferredSize.setSize((-1), 0);
huntDisplay.getPreferredSize();
Test 10: 
HuntDisplay huntDisplay = new HuntDisplay();
Dimension preferredSize = huntDisplay.getPreferredSize();
preferredSize.setSize((int) (Integer) null, (int) (Integer) null);
huntDisplay.getPreferredSize();
HuntDisplay huntDisplay = new HuntDisplay();
huntDisplay.getPreferredSize();
int _int = null;
int _int = null;
preferredSize.setSize(_int, _int);
huntDisplay.getPreferredSize();

Test 11: 
HuntDisplay huntDisplay = new HuntDisplay();
TrigPoint trigPoint = new TrigPoint(1, 2989.14, 2989.14);
huntDisplay.addPoint(trigPoint);
BufferedImage bufferedImage = new BufferedImage(1000, 3213, 2);
Graphics2D createGraphics = ((BufferedImage)2989.14).createGraphics();
huntDisplay.paintComponent(createGraphics);

Test 12: 
HuntDisplay huntDisplay = new HuntDisplay();
huntDisplay.getMinimumSize();
huntDisplay.getMinimumSize();

Test 13: 
BufferedImage bufferedImage = new BufferedImage(10, 20, 2);
((BufferedImage)20).createGraphics();

Test 14: 
int _int = 10;
BufferedImage bufferedImage = new BufferedImage(10, 10, 10);
Graphics2D createGraphics = ((BufferedImage)10).createGraphics();
HuntDisplay huntDisplay = new HuntDisplay();
int _int = 10;
int _int = 10;
Landmark landmark = new Landmark(_int, _int, (ImageIcon) null);
((HuntDisplay) _int).addLandMark(landmark);
((HuntDisplay) _int).paintComponent(createGraphics);

Test 15: 
HuntDisplay huntDisplay = new HuntDisplay();
TrigPoint trigPoint = new TrigPoint(0.0, 34.92, (double) 50);
huntDisplay.addPoint(trigPoint);
Landmark landmark = new Landmark(50, 50, (ImageIcon) 50);
huntDisplay.addLandMark(landmark);
Graphics graphics = null;
huntDisplay.paintComponent(graphics);

Test 16: 
HuntDisplay huntDisplay = new HuntDisplay();
TrigPoint trigPoint = new TrigPoint(200.5, 3739.1, 49, true);
huntDisplay.addPoint(trigPoint);
huntDisplay.paintComponent((Graphics) null);

Test 17: 
HuntDisplay huntDisplay = new HuntDisplay();
huntDisplay.getMinimumSize();
huntDisplay.getMinimumSize();

Test 18: 
HuntDisplay huntDisplay = new HuntDisplay();
Dimension minimumSize = huntDisplay.getMinimumSize();
minimumSize.setSize(10, 50);
huntDisplay.getMinimumSize();

Test 19: 
HuntDisplay huntDisplay = new HuntDisplay();
Dimension preferredSize = huntDisplay.getPreferredSize();
preferredSize.setSize(200, 100);
huntDisplay.getPreferredSize();


* Minimizing test suite
* test suite isTestSuite: 9
Test 0: 
HuntDisplay huntDisplay = new HuntDisplay();
Dimension preferredSize = huntDisplay.getPreferredSize();
preferredSize.setSize((-4499), (-1749));
huntDisplay.getPreferredSize();
Test 1: 
HuntDisplay huntDisplay = new HuntDisplay();
TrigPoint trigPoint = new TrigPoint(200.5, 3739.1, 49, true);
huntDisplay.addPoint(trigPoint);
// Undeclared exception!
try { 
  huntDisplay.paintComponent((Graphics) null);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("Joshua.FoxHunt.HuntDisplay", e);
}

Test 2: 
HuntDisplay huntDisplay = new HuntDisplay();
Dimension minimumSize = huntDisplay.getMinimumSize();
minimumSize.height = (-20);
huntDisplay.getMinimumSize();
Test 3: 
BufferedImage bufferedImage = new BufferedImage(10, 10, 10);
Graphics2D createGraphics = bufferedImage.createGraphics();
HuntDisplay huntDisplay = new HuntDisplay();
Landmark landmark = new Landmark(10, 10, (ImageIcon) null);
huntDisplay.addLandMark(landmark);
// Undeclared exception!
try { 
  huntDisplay.paintComponent(createGraphics);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("Joshua.FoxHunt.HuntDisplay", e);
}

Test 4: 
HuntDisplay huntDisplay = new HuntDisplay();
TrigPoint trigPoint = new TrigPoint(0.0, 0.0, (double) 50);
huntDisplay.addPoint(trigPoint);
ImageIcon imageIcon = new ImageIcon();
Landmark landmark = new Landmark((-1121.5992913188), 50, imageIcon);
huntDisplay.addLandMark(landmark);
// Undeclared exception!
try { 
  huntDisplay.paintComponent((Graphics) null);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("Joshua.FoxHunt.HuntDisplay", e);
}

Test 5: 
HuntDisplay huntDisplay = new HuntDisplay();
Dimension minimumSize = huntDisplay.getMinimumSize();
minimumSize.height = 0;
huntDisplay.getMinimumSize();
Test 6: 
HuntDisplay huntDisplay = new HuntDisplay();
Dimension minimumSize = huntDisplay.getMinimumSize();
minimumSize.setSize(0, 200);
huntDisplay.getMinimumSize();
Test 7: 
HuntDisplay huntDisplay = new HuntDisplay();
Dimension preferredSize = huntDisplay.getPreferredSize();
preferredSize.setSize((-1), 0);
huntDisplay.getPreferredSize();
Test 8: 
HuntDisplay huntDisplay = new HuntDisplay();
TrigPoint trigPoint = new TrigPoint(1, 2989.14, 2989.14);
huntDisplay.addPoint(trigPoint);
BufferedImage bufferedImage = new BufferedImage(1, 3213, 2);
Graphics2D createGraphics = bufferedImage.createGraphics();
huntDisplay.paintComponent(createGraphics);

* Going to analyze the coverage criteria
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 96%
* Total number of goals: 23
* Number of covered goals: 22
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 94%
* Total number of goals: 50
* Number of covered goals: 47
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 71%
* Total number of goals: 14
* Number of covered goals: 10
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 6
* Number of covered goals: 6
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 96%
* Total number of goals: 23
* Number of covered goals: 22
* Generated 9 tests with total length 43
* Resulting test suite's coverage: 91% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 30%
* Compiling and checking tests
Going to execute: removeTestsThatDoNotCompile
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: HuntDisplay huntDisplay = new HuntDisplay();
TrigPoint arg0 = new TrigPoint(200.5, 3739.1, 49, true);
huntDisplay.addPoint(arg0);
// Undeclared exception!
try { 
  huntDisplay.paintComponent((Graphics) null);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("Joshua.FoxHunt.HuntDisplay", e);
}


** It was a parseable test case! 
refined test name is: testAddPointThrowsNullPointerException
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 12:16:15.245 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/tmp/EvoSuite_pathingJar998696914078127978.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 12:16:15.271 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar998696914078127978.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
* Writing tests to file
[MASTER] 12:16:15.430 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/tmp/EvoSuite_pathingJar998696914078127978.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 12:16:15.432 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar998696914078127978.jar
* Writing JUnit test case 'HuntDisplay_ESTest' to evosuite-tests
* Done!

* Computation finished
