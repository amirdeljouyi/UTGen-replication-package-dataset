* EvoSuite 1.0.0-SNAPSHOT
* Going to generate test cases for class: Joshua.FoxHunt.HuntDisplay
* Starting Client-0
* Properties loaded from /home/roham/Results-Utestgen/dataset/SF110-new-res/98_trans-locator/evosuite-files/evosuite.properties
* Connecting to master process on port 19637
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 00:42:51.423 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 00:42:51.427 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 00:42:51.481 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 00:42:51.621 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 00:42:51.631 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 00:42:51.633 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
[MASTER] 00:42:57.454 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.ZoneId
[MASTER] 00:42:57.749 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.Temporal
[MASTER] 00:42:57.759 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAccessor
[MASTER] 00:42:57.761 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalField
[MASTER] 00:42:57.762 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalUnit
[MASTER] 00:42:57.770 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAmount
[MASTER] 00:42:57.775 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.Clock
[MASTER] 00:42:57.776 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalQuery
[MASTER] 00:42:57.778 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAdjuster
[MASTER] 00:42:57.827 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.Chronology
[MASTER] 00:42:57.863 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.Era
* Finished analyzing classpath
* Generating tests for class Joshua.FoxHunt.HuntDisplay
* Test criteria:
  - Branch Coverage
  - Line Coverage
  - Method-Output Coverage
  - Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 116
[Progress:>                             0%] [Cov:>                                  0%]* Using seed 1710463363696
* Starting evolution
* Initial Number of Goals in DynaMOSA = 59 / 116
[Progress:==>                           7%] [Cov:========================>          70%][Progress:==>                           8%] [Cov:========================>          70%][Progress:==>                           8%] [Cov:==========================>        75%][Progress:==>                           9%] [Cov:==========================>        75%][Progress:==>                           9%] [Cov:==========================>        75%][Progress:==>                           9%] [Cov:==========================>        75%][Progress:===>                          10%] [Cov:==========================>        75%][Progress:===>                          10%] [Cov:==========================>        77%][Progress:===>                          10%] [Cov:==========================>        77%][Progress:===>                          11%] [Cov:==========================>        77%][Progress:===>                          11%] [Cov:==========================>        77%][Progress:===>                          11%] [Cov:==========================>        77%][Progress:===>                          11%] [Cov:==========================>        77%][Progress:===>                          12%] [Cov:==========================>        77%][Progress:===>                          12%] [Cov:==========================>        77%][Progress:===>                          12%] [Cov:==========================>        77%][Progress:===>                          12%] [Cov:==========================>        77%][Progress:===>                          13%] [Cov:==========================>        77%][Progress:===>                          13%] [Cov:==========================>        77%][Progress:===>                          13%] [Cov:==========================>        77%][Progress:===>                          13%] [Cov:==========================>        77%][Progress:===>                          13%] [Cov:==========================>        77%][Progress:===>                          13%] [Cov:==========================>        77%][Progress:====>                         14%] [Cov:==========================>        77%][Progress:====>                         14%] [Cov:==========================>        77%][Progress:====>                         14%] [Cov:==========================>        77%][Progress:====>                         14%] [Cov:==========================>        77%][Progress:====>                         14%] [Cov:==========================>        77%][Progress:====>                         14%] [Cov:==========================>        77%][Progress:====>                         14%] [Cov:==========================>        77%][Progress:====>                         15%] [Cov:==========================>        77%][Progress:====>                         15%] [Cov:==========================>        77%][Progress:====>                         15%] [Cov:==========================>        77%][Progress:====>                         15%] [Cov:==========================>        77%][Progress:====>                         15%] [Cov:==========================>        77%][Progress:====>                         15%] [Cov:==========================>        77%][Progress:====>                         16%] [Cov:==========================>        77%][Progress:====>                         16%] [Cov:==========================>        77%][Progress:====>                         16%] [Cov:==========================>        77%][Progress:====>                         16%] [Cov:==========================>        77%][Progress:====>                         16%] [Cov:==========================>        77%][Progress:====>                         16%] [Cov:==========================>        77%][Progress:=====>                        17%] [Cov:==========================>        77%][Progress:=====>                        17%] [Cov:==========================>        77%][Progress:=====>                        17%] [Cov:==========================>        77%][Progress:=====>                        17%] [Cov:==========================>        77%][Progress:=====>                        17%] [Cov:==========================>        77%][Progress:=====>                        17%] [Cov:==========================>        77%][Progress:=====>                        17%] [Cov:==========================>        77%][Progress:=====>                        18%] [Cov:==========================>        77%][Progress:=====>                        18%] [Cov:==========================>        77%][Progress:=====>                        18%] [Cov:==========================>        77%][Progress:=====>                        18%] [Cov:==========================>        77%][Progress:=====>                        18%] [Cov:==========================>        77%][MASTER] 00:43:19.446 [logback-1] WARN  TestCluster - Failed to check cache for javax.swing.RowFilter<M, I>.ComparisonType : Type points to itself
[Progress:=====>                        19%] [Cov:==========================>        77%][Progress:=====>                        19%] [Cov:==========================>        77%][Progress:=====>                        19%] [Cov:==========================>        77%][Progress:=====>                        19%] [Cov:==========================>        77%][Progress:=====>                        19%] [Cov:==========================>        77%][Progress:======>                       20%] [Cov:==========================>        77%][Progress:======>                       20%] [Cov:==========================>        77%][Progress:======>                       20%] [Cov:==========================>        77%][Progress:======>                       20%] [Cov:==========================>        77%][Progress:======>                       20%] [Cov:==========================>        77%][Progress:======>                       20%] [Cov:==========================>        77%][Progress:======>                       20%] [Cov:==========================>        77%][Progress:======>                       21%] [Cov:==========================>        77%][Progress:======>                       21%] [Cov:==========================>        77%][Progress:======>                       21%] [Cov:==========================>        77%][Progress:======>                       21%] [Cov:==========================>        77%][Progress:======>                       21%] [Cov:==========================>        77%][Progress:======>                       21%] [Cov:==========================>        77%][Progress:======>                       21%] [Cov:============================>      81%][Progress:======>                       21%] [Cov:============================>      81%][Progress:======>                       21%] [Cov:============================>      81%][Progress:======>                       21%] [Cov:============================>      81%][Progress:======>                       22%] [Cov:============================>      81%][Progress:======>                       22%] [Cov:============================>      81%][Progress:======>                       22%] [Cov:============================>      81%][Progress:======>                       22%] [Cov:============================>      81%][Progress:======>                       22%] [Cov:============================>      81%][Progress:======>                       22%] [Cov:============================>      81%][Progress:======>                       23%] [Cov:============================>      81%][Progress:======>                       23%] [Cov:============================>      81%][Progress:======>                       23%] [Cov:============================>      81%][Progress:======>                       23%] [Cov:============================>      81%][Progress:======>                       23%] [Cov:============================>      81%][Progress:======>                       23%] [Cov:============================>      81%][Progress:======>                       23%] [Cov:============================>      81%][Progress:=======>                      24%] [Cov:============================>      81%][Progress:=======>                      24%] [Cov:============================>      81%][Progress:=======>                      24%] [Cov:============================>      81%][Progress:=======>                      24%] [Cov:============================>      81%][Progress:=======>                      24%] [Cov:============================>      81%][Progress:=======>                      24%] [Cov:============================>      81%][Progress:=======>                      24%] [Cov:============================>      81%][Progress:=======>                      24%] [Cov:============================>      81%][Progress:=======>                      25%] [Cov:============================>      81%][Progress:=======>                      25%] [Cov:============================>      81%][Progress:=======>                      25%] [Cov:============================>      81%][Progress:=======>                      25%] [Cov:============================>      81%][Progress:=======>                      25%] [Cov:============================>      81%][Progress:=======>                      25%] [Cov:============================>      81%][Progress:=======>                      25%] [Cov:============================>      81%][Progress:=======>                      26%] [Cov:============================>      81%][Progress:=======>                      26%] [Cov:============================>      81%][Progress:=======>                      26%] [Cov:============================>      81%][Progress:=======>                      26%] [Cov:============================>      81%][Progress:=======>                      26%] [Cov:============================>      81%][Progress:========>                     27%] [Cov:============================>      81%][Progress:========>                     27%] [Cov:============================>      81%][Progress:========>                     27%] [Cov:============================>      81%][Progress:========>                     27%] [Cov:============================>      81%][Progress:========>                     27%] [Cov:============================>      81%][Progress:========>                     27%] [Cov:============================>      81%][Progress:========>                     27%] [Cov:============================>      81%][Progress:========>                     27%] [Cov:============================>      81%][Progress:========>                     27%] [Cov:============================>      81%][Progress:========>                     28%] [Cov:============================>      81%][Progress:========>                     28%] [Cov:============================>      81%][Progress:========>                     28%] [Cov:============================>      81%][Progress:========>                     28%] [Cov:============================>      81%][Progress:========>                     28%] [Cov:============================>      81%][Progress:========>                     28%] [Cov:============================>      81%][Progress:========>                     28%] [Cov:=============================>     85%][Progress:========>                     28%] [Cov:=============================>     85%][Progress:========>                     28%] [Cov:=============================>     85%][Progress:========>                     28%] [Cov:=============================>     85%][Progress:========>                     29%] [Cov:=============================>     85%][Progress:========>                     29%] [Cov:=============================>     85%][Progress:========>                     29%] [Cov:=============================>     85%][Progress:========>                     29%] [Cov:==============================>    87%][Progress:========>                     29%] [Cov:==============================>    87%][Progress:=========>                    30%] [Cov:==============================>    87%][Progress:=========>                    30%] [Cov:==============================>    87%][Progress:=========>                    30%] [Cov:==============================>    87%][Progress:=========>                    30%] [Cov:==============================>    87%][Progress:=========>                    30%] [Cov:==============================>    87%][Progress:=========>                    30%] [Cov:==============================>    87%][Progress:=========>                    30%] [Cov:==============================>    87%][Progress:=========>                    30%] [Cov:==============================>    87%][Progress:=========>                    30%] [Cov:==============================>    87%][Progress:=========>                    30%] [Cov:==============================>    87%][Progress:=========>                    31%] [Cov:==============================>    87%][Progress:=========>                    31%] [Cov:==============================>    87%][Progress:=========>                    31%] [Cov:==============================>    87%][Progress:=========>                    31%] [Cov:==============================>    87%][Progress:=========>                    31%] [Cov:==============================>    87%][Progress:=========>                    31%] [Cov:==============================>    87%][Progress:=========>                    31%] [Cov:==============================>    87%][Progress:=========>                    32%] [Cov:==============================>    87%][Progress:=========>                    32%] [Cov:==============================>    87%][Progress:=========>                    32%] [Cov:==============================>    87%][Progress:=========>                    32%] [Cov:==============================>    87%][Progress:=========>                    32%] [Cov:==============================>    87%][Progress:=========>                    32%] [Cov:==============================>    87%][Progress:=========>                    33%] [Cov:==============================>    87%][Progress:=========>                    33%] [Cov:==============================>    87%][Progress:=========>                    33%] [Cov:==============================>    87%][Progress:=========>                    33%] [Cov:==============================>    87%][Progress:=========>                    33%] [Cov:==============================>    87%][Progress:=========>                    33%] [Cov:==============================>    87%][Progress:=========>                    33%] [Cov:==============================>    87%][Progress:=========>                    33%] [Cov:==============================>    87%][Progress:==========>                   34%] [Cov:==============================>    87%][Progress:==========>                   34%] [Cov:==============================>    87%][Progress:==========>                   34%] [Cov:==============================>    87%][Progress:==========>                   34%] [Cov:==============================>    87%][Progress:==========>                   34%] [Cov:==============================>    87%][Progress:==========>                   34%] [Cov:==============================>    87%][Progress:==========>                   34%] [Cov:==============================>    87%][Progress:==========>                   34%] [Cov:==============================>    87%][Progress:==========>                   34%] [Cov:==============================>    87%][Progress:==========>                   34%] [Cov:==============================>    87%][Progress:==========>                   35%] [Cov:==============================>    87%][Progress:==========>                   35%] [Cov:==============================>    87%][Progress:==========>                   35%] [Cov:==============================>    87%][Progress:==========>                   35%] [Cov:==============================>    87%][Progress:==========>                   35%] [Cov:==============================>    87%][Progress:==========>                   35%] [Cov:==============================>    87%][Progress:==========>                   35%] [Cov:==============================>    87%][Progress:==========>                   35%] [Cov:==============================>    87%][Progress:==========>                   35%] [Cov:==============================>    87%][Progress:==========>                   36%] [Cov:==============================>    87%][Progress:==========>                   36%] [Cov:==============================>    87%][Progress:==========>                   36%] [Cov:==============================>    87%][Progress:==========>                   36%] [Cov:==============================>    87%][Progress:==========>                   36%] [Cov:==============================>    87%][Progress:==========>                   36%] [Cov:==============================>    87%][Progress:==========>                   36%] [Cov:==============================>    87%][Progress:==========>                   36%] [Cov:==============================>    87%][Progress:==========>                   36%] [Cov:==============================>    87%][Progress:==========>                   36%] [Cov:==============================>    87%][Progress:==========>                   36%] [Cov:==============================>    87%][Progress:===========>                  37%] [Cov:==============================>    87%][Progress:===========>                  37%] [Cov:==============================>    87%][Progress:===========>                  37%] [Cov:==============================>    87%][Progress:===========>                  37%] [Cov:==============================>    87%][Progress:===========>                  37%] [Cov:==============================>    87%][Progress:===========>                  37%] [Cov:==============================>    87%][Progress:===========>                  37%] [Cov:==============================>    87%][Progress:===========>                  37%] [Cov:==============================>    87%][Progress:===========>                  37%] [Cov:==============================>    87%][Progress:===========>                  37%] [Cov:==============================>    87%][Progress:===========>                  38%] [Cov:==============================>    87%][Progress:===========>                  38%] [Cov:==============================>    87%][Progress:===========>                  38%] [Cov:==============================>    87%][Progress:===========>                  38%] [Cov:==============================>    87%][Progress:===========>                  38%] [Cov:===============================>   89%][Progress:===========>                  38%] [Cov:===============================>   89%][Progress:===========>                  38%] [Cov:===============================>   89%][Progress:===========>                  38%] [Cov:===============================>   89%][Progress:===========>                  38%] [Cov:===============================>   89%][Progress:===========>                  39%] [Cov:===============================>   89%][Progress:===========>                  39%] [Cov:===============================>   89%][Progress:===========>                  39%] [Cov:===============================>   89%][Progress:===========>                  39%] [Cov:===============================>   89%][Progress:===========>                  39%] [Cov:===============================>   89%][Progress:===========>                  39%] [Cov:===============================>   89%][Progress:===========>                  39%] [Cov:===============================>   89%][Progress:===========>                  39%] [Cov:===============================>   89%][Progress:===========>                  39%] [Cov:===============================>   89%][Progress:===========>                  39%] [Cov:===============================>   89%][Progress:===========>                  39%] [Cov:===============================>   89%][Progress:===========>                  39%] [Cov:===============================>   89%][Progress:============>                 40%] [Cov:===============================>   89%][Progress:============>                 40%] [Cov:===============================>   89%][Progress:============>                 40%] [Cov:===============================>   89%][Progress:============>                 40%] [Cov:===============================>   89%][Progress:============>                 40%] [Cov:===============================>   89%][Progress:============>                 40%] [Cov:===============================>   89%][Progress:============>                 40%] [Cov:===============================>   89%][Progress:============>                 40%] [Cov:===============================>   89%][Progress:============>                 41%] [Cov:===============================>   89%][Progress:============>                 41%] [Cov:===============================>   89%][Progress:============>                 41%] [Cov:===============================>   89%][Progress:============>                 41%] [Cov:===============================>   89%][Progress:============>                 41%] [Cov:===============================>   89%][Progress:============>                 41%] [Cov:===============================>   89%][Progress:============>                 41%] [Cov:===============================>   89%][Progress:============>                 41%] [Cov:===============================>   89%][Progress:============>                 41%] [Cov:===============================>   89%][Progress:============>                 42%] [Cov:===============================>   89%][Progress:============>                 42%] [Cov:===============================>   89%][Progress:============>                 42%] [Cov:===============================>   89%][Progress:============>                 42%] [Cov:===============================>   89%][Progress:============>                 42%] [Cov:===============================>   89%][Progress:============>                 43%] [Cov:===============================>   89%][Progress:============>                 43%] [Cov:===============================>   89%][Progress:============>                 43%] [Cov:===============================>   89%][Progress:============>                 43%] [Cov:===============================>   89%][Progress:============>                 43%] [Cov:===============================>   89%][Progress:============>                 43%] [Cov:===============================>   89%][Progress:============>                 43%] [Cov:===============================>   89%][Progress:============>                 43%] [Cov:===============================>   89%][Progress:=============>                44%] [Cov:===============================>   89%][Progress:=============>                44%] [Cov:===============================>   89%][Progress:=============>                44%] [Cov:===============================>   89%][Progress:=============>                44%] [Cov:===============================>   89%][Progress:=============>                44%] [Cov:===============================>   89%][Progress:=============>                44%] [Cov:===============================>   89%][Progress:=============>                44%] [Cov:===============================>   89%][Progress:=============>                44%] [Cov:===============================>   89%][Progress:=============>                44%] [Cov:===============================>   89%][Progress:=============>                44%] [Cov:===============================>   89%][Progress:=============>                44%] [Cov:===============================>   89%][Progress:=============>                45%] [Cov:===============================>   89%][Progress:=============>                45%] [Cov:===============================>   89%][Progress:=============>                45%] [Cov:===============================>   89%][Progress:=============>                45%] [Cov:===============================>   89%][Progress:=============>                45%] [Cov:===============================>   89%][Progress:=============>                45%] [Cov:===============================>   89%][Progress:=============>                45%] [Cov:===============================>   89%][Progress:=============>                45%] [Cov:===============================>   89%][Progress:=============>                45%] [Cov:===============================>   89%][Progress:=============>                45%] [Cov:===============================>   89%][Progress:=============>                45%] [Cov:===============================>   91%][Progress:=============>                45%] [Cov:===============================>   91%][Progress:=============>                45%] [Cov:===============================>   91%][Progress:=============>                46%] [Cov:===============================>   91%][Progress:=============>                46%] [Cov:===============================>   91%][Progress:=============>                46%] [Cov:===============================>   91%][Progress:=============>                46%] [Cov:===============================>   91%][Progress:=============>                46%] [Cov:===============================>   91%][Progress:=============>                46%] [Cov:===============================>   91%][Progress:=============>                46%] [Cov:===============================>   91%][Progress:=============>                46%] [Cov:===============================>   91%][Progress:=============>                46%] [Cov:===============================>   91%][Progress:=============>                46%] [Cov:===============================>   91%][Progress:==============>               47%] [Cov:===============================>   91%][Progress:==============>               47%] [Cov:===============================>   91%][Progress:==============>               47%] [Cov:===============================>   91%][Progress:==============>               47%] [Cov:===============================>   91%][Progress:==============>               47%] [Cov:===============================>   91%][Progress:==============>               47%] [Cov:===============================>   91%][Progress:==============>               47%] [Cov:===============================>   91%][Progress:==============>               47%] [Cov:===============================>   91%][Progress:==============>               47%] [Cov:===============================>   91%][Progress:==============>               48%] [Cov:===============================>   91%][Progress:==============>               48%] [Cov:===============================>   91%][Progress:==============>               48%] [Cov:===============================>   91%][Progress:==============>               48%] [Cov:===============================>   91%][Progress:==============>               48%] [Cov:===============================>   91%][Progress:==============>               48%] [Cov:===============================>   91%][Progress:==============>               48%] [Cov:===============================>   91%][Progress:==============>               48%] [Cov:===============================>   91%][Progress:==============>               48%] [Cov:===============================>   91%][Progress:==============>               48%] [Cov:===============================>   91%][Progress:==============>               48%] [Cov:===============================>   91%][Progress:==============>               48%] [Cov:===============================>   91%][Progress:==============>               49%] [Cov:===============================>   91%][Progress:==============>               49%] [Cov:===============================>   91%][Progress:==============>               49%] [Cov:===============================>   91%][Progress:==============>               49%] [Cov:===============================>   91%][Progress:==============>               49%] [Cov:===============================>   91%][Progress:==============>               49%] [Cov:===============================>   91%][Progress:==============>               49%] [Cov:===============================>   91%][Progress:==============>               49%] [Cov:===============================>   91%][Progress:==============>               49%] [Cov:===============================>   91%][Progress:==============>               49%] [Cov:===============================>   91%][Progress:==============>               49%] [Cov:===============================>   91%][Progress:==============>               49%] [Cov:===============================>   91%][Progress:==============>               49%] [Cov:===============================>   91%][Progress:===============>              50%] [Cov:===============================>   91%][Progress:===============>              50%] [Cov:===============================>   91%][Progress:===============>              50%] [Cov:===============================>   91%][Progress:===============>              50%] [Cov:===============================>   91%][Progress:===============>              50%] [Cov:===============================>   91%][Progress:===============>              50%] [Cov:===============================>   91%][Progress:===============>              50%] [Cov:===============================>   91%][Progress:===============>              50%] [Cov:===============================>   91%][Progress:===============>              50%] [Cov:===============================>   91%][Progress:===============>              51%] [Cov:===============================>   91%][Progress:===============>              51%] [Cov:===============================>   91%][Progress:===============>              51%] [Cov:===============================>   91%][Progress:===============>              51%] [Cov:===============================>   91%][Progress:===============>              51%] [Cov:===============================>   91%][Progress:===============>              51%] [Cov:===============================>   91%][Progress:===============>              51%] [Cov:===============================>   91%][Progress:===============>              51%] [Cov:===============================>   91%][Progress:===============>              51%] [Cov:===============================>   91%][Progress:===============>              52%] [Cov:===============================>   91%][Progress:===============>              52%] [Cov:===============================>   91%][Progress:===============>              52%] [Cov:===============================>   91%][Progress:===============>              52%] [Cov:===============================>   91%][Progress:===============>              52%] [Cov:===============================>   91%][Progress:===============>              52%] [Cov:===============================>   91%][Progress:===============>              52%] [Cov:===============================>   91%][Progress:===============>              52%] [Cov:===============================>   91%][Progress:===============>              52%] [Cov:===============================>   91%][Progress:===============>              52%] [Cov:===============================>   91%][Progress:===============>              52%] [Cov:===============================>   91%][Progress:===============>              52%] [Cov:===============================>   91%][Progress:===============>              52%] [Cov:===============================>   91%][Progress:===============>              53%] [Cov:===============================>   91%][Progress:===============>              53%] [Cov:===============================>   91%][Progress:===============>              53%] [Cov:===============================>   91%][Progress:===============>              53%] [Cov:===============================>   91%][Progress:===============>              53%] [Cov:===============================>   91%][Progress:===============>              53%] [Cov:===============================>   91%][Progress:===============>              53%] [Cov:===============================>   91%][Progress:===============>              53%] [Cov:===============================>   91%][Progress:===============>              53%] [Cov:===============================>   91%][MASTER] 00:43:54.170 [logback-1] WARN  TestCluster - Failed to check cache for java.util.function.Function<T, R> : Type points to itself
[Progress:===============>              53%] [Cov:===============================>   91%][Progress:===============>              53%] [Cov:===============================>   91%][Progress:===============>              53%] [Cov:===============================>   91%][Progress:===============>              53%] [Cov:===============================>   91%][Progress:================>             54%] [Cov:===============================>   91%][Progress:================>             54%] [Cov:===============================>   91%][Progress:================>             54%] [Cov:===============================>   91%][Progress:================>             54%] [Cov:===============================>   91%][Progress:================>             54%] [Cov:===============================>   91%][Progress:================>             54%] [Cov:===============================>   91%][Progress:================>             54%] [Cov:===============================>   91%][Progress:================>             54%] [Cov:===============================>   91%][Progress:================>             54%] [Cov:===============================>   91%][Progress:================>             54%] [Cov:===============================>   91%][Progress:================>             54%] [Cov:===============================>   91%][Progress:================>             54%] [Cov:===============================>   91%][Progress:================>             54%] [Cov:===============================>   91%][Progress:================>             55%] [Cov:===============================>   91%][Progress:================>             55%] [Cov:===============================>   91%][Progress:================>             55%] [Cov:===============================>   91%][Progress:================>             55%] [Cov:===============================>   91%][Progress:================>             55%] [Cov:===============================>   91%][Progress:================>             55%] [Cov:===============================>   91%][Progress:================>             55%] [Cov:===============================>   91%][Progress:================>             55%] [Cov:===============================>   91%][Progress:================>             55%] [Cov:===============================>   91%][Progress:================>             55%] [Cov:===============================>   91%][Progress:================>             55%] [Cov:===============================>   91%][Progress:================>             56%] [Cov:===============================>   91%][Progress:================>             56%] [Cov:===============================>   91%][Progress:================>             56%] [Cov:===============================>   91%][Progress:================>             56%] [Cov:===============================>   91%][Progress:================>             56%] [Cov:===============================>   91%][Progress:================>             56%] [Cov:===============================>   91%][Progress:================>             56%] [Cov:===============================>   91%][Progress:================>             56%] [Cov:===============================>   91%][Progress:================>             56%] [Cov:===============================>   91%][Progress:================>             56%] [Cov:===============================>   91%][Progress:=================>            57%] [Cov:===============================>   91%][Progress:=================>            57%] [Cov:===============================>   91%][Progress:=================>            57%] [Cov:===============================>   91%][Progress:=================>            57%] [Cov:===============================>   91%][Progress:=================>            57%] [Cov:===============================>   91%][Progress:=================>            57%] [Cov:===============================>   91%][Progress:=================>            57%] [Cov:===============================>   91%][Progress:=================>            57%] [Cov:===============================>   91%][Progress:=================>            57%] [Cov:===============================>   91%][Progress:=================>            57%] [Cov:===============================>   91%][Progress:=================>            57%] [Cov:===============================>   91%][Progress:=================>            57%] [Cov:===============================>   91%][Progress:=================>            58%] [Cov:===============================>   91%][Progress:=================>            58%] [Cov:===============================>   91%][Progress:=================>            58%] [Cov:===============================>   91%][Progress:=================>            58%] [Cov:===============================>   91%][MASTER] 00:43:58.780 [logback-1] WARN  TestCluster - Failed to check cache for java.util.Comparator<T> : Type points to itself
[Progress:=================>            58%] [Cov:===============================>   91%][Progress:=================>            58%] [Cov:===============================>   91%][Progress:=================>            58%] [Cov:===============================>   91%][Progress:=================>            58%] [Cov:===============================>   91%][Progress:=================>            58%] [Cov:===============================>   91%][Progress:=================>            58%] [Cov:===============================>   91%][Progress:=================>            58%] [Cov:===============================>   91%][Progress:=================>            58%] [Cov:===============================>   91%][Progress:=================>            58%] [Cov:===============================>   91%][Progress:=================>            58%] [Cov:===============================>   91%][Progress:=================>            59%] [Cov:===============================>   91%][Progress:=================>            59%] [Cov:===============================>   91%][Progress:=================>            59%] [Cov:===============================>   91%][Progress:=================>            59%] [Cov:===============================>   91%][Progress:=================>            59%] [Cov:===============================>   91%][Progress:=================>            59%] [Cov:===============================>   91%][Progress:=================>            59%] [Cov:===============================>   91%][Progress:=================>            59%] [Cov:===============================>   91%][Progress:=================>            59%] [Cov:===============================>   91%][Progress:=================>            59%] [Cov:===============================>   91%][Progress:=================>            59%] [Cov:===============================>   91%][Progress:=================>            59%] [Cov:===============================>   91%][Progress:=================>            59%] [Cov:===============================>   91%][Progress:=================>            59%] [Cov:===============================>   91%][Progress:=================>            59%] [Cov:===============================>   91%][Progress:=================>            59%] [Cov:===============================>   91%][Progress:==================>           60%] [Cov:===============================>   91%][Progress:==================>           60%] [Cov:===============================>   91%][Progress:==================>           60%] [Cov:===============================>   91%][Progress:==================>           60%] [Cov:===============================>   91%][Progress:==================>           60%] [Cov:===============================>   91%][Progress:==================>           60%] [Cov:===============================>   91%][Progress:==================>           60%] [Cov:===============================>   91%][Progress:==================>           60%] [Cov:===============================>   91%][Progress:==================>           60%] [Cov:===============================>   91%][Progress:==================>           60%] [Cov:===============================>   91%][Progress:==================>           60%] [Cov:===============================>   91%][Progress:==================>           60%] [Cov:================================>  92%][Progress:==================>           61%] [Cov:================================>  92%][Progress:==================>           61%] [Cov:================================>  92%][Progress:==================>           61%] [Cov:================================>  92%][Progress:==================>           61%] [Cov:================================>  92%][Progress:==================>           61%] [Cov:================================>  92%][Progress:==================>           61%] [Cov:================================>  92%][Progress:==================>           61%] [Cov:================================>  92%][Progress:==================>           61%] [Cov:================================>  92%][Progress:==================>           61%] [Cov:================================>  92%][Progress:==================>           61%] [Cov:================================>  92%][Progress:==================>           62%] [Cov:================================>  92%][Progress:==================>           62%] [Cov:================================>  92%][Progress:==================>           62%] [Cov:================================>  92%][Progress:==================>           62%] [Cov:================================>  92%][Progress:==================>           62%] [Cov:================================>  92%][Progress:==================>           62%] [Cov:================================>  92%][Progress:==================>           62%] [Cov:================================>  92%][Progress:==================>           62%] [Cov:================================>  92%][Progress:==================>           62%] [Cov:================================>  92%][Progress:==================>           62%] [Cov:================================>  92%][Progress:==================>           62%] [Cov:================================>  92%][Progress:==================>           62%] [Cov:================================>  92%][Progress:==================>           62%] [Cov:================================>  92%][Progress:==================>           63%] [Cov:================================>  92%][Progress:==================>           63%] [Cov:================================>  92%][Progress:==================>           63%] [Cov:================================>  92%][Progress:==================>           63%] [Cov:================================>  92%][Progress:==================>           63%] [Cov:================================>  92%][Progress:==================>           63%] [Cov:================================>  92%][Progress:==================>           63%] [Cov:================================>  92%][Progress:==================>           63%] [Cov:================================>  92%][Progress:==================>           63%] [Cov:================================>  92%][Progress:==================>           63%] [Cov:================================>  92%][Progress:==================>           63%] [Cov:================================>  92%][Progress:==================>           63%] [Cov:================================>  92%][Progress:===================>          64%] [Cov:================================>  92%][Progress:===================>          64%] [Cov:================================>  92%][Progress:===================>          64%] [Cov:================================>  92%][Progress:===================>          64%] [Cov:================================>  92%][Progress:===================>          64%] [Cov:================================>  92%][Progress:===================>          64%] [Cov:================================>  92%][Progress:===================>          64%] [Cov:================================>  92%][Progress:===================>          64%] [Cov:================================>  92%][Progress:===================>          64%] [Cov:================================>  92%][Progress:===================>          64%] [Cov:================================>  92%][Progress:===================>          64%] [Cov:================================>  92%][Progress:===================>          64%] [Cov:================================>  92%][Progress:===================>          64%] [Cov:================================>  92%][Progress:===================>          65%] [Cov:================================>  92%][Progress:===================>          65%] [Cov:================================>  92%][Progress:===================>          65%] [Cov:================================>  92%][Progress:===================>          65%] [Cov:================================>  92%][Progress:===================>          65%] [Cov:================================>  92%][Progress:===================>          65%] [Cov:================================>  92%][Progress:===================>          65%] [Cov:================================>  92%][Progress:===================>          65%] [Cov:================================>  92%][Progress:===================>          65%] [Cov:================================>  92%][Progress:===================>          65%] [Cov:================================>  92%][Progress:===================>          65%] [Cov:================================>  92%][Progress:===================>          65%] [Cov:================================>  92%][Progress:===================>          65%] [Cov:================================>  92%][Progress:===================>          65%] [Cov:================================>  92%][Progress:===================>          65%] [Cov:================================>  92%][Progress:===================>          66%] [Cov:================================>  92%][Progress:===================>          66%] [Cov:================================>  92%][MASTER] 00:44:06.652 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.ChronoLocalDate
[MASTER] 00:44:06.687 [logback-1] WARN  TestCluster - Failed to check cache for java.lang.Comparable<T> : Type points to itself
[Progress:===================>          66%] [Cov:================================>  92%][Progress:===================>          66%] [Cov:================================>  92%][Progress:===================>          66%] [Cov:================================>  92%][Progress:===================>          66%] [Cov:================================>  92%][Progress:===================>          66%] [Cov:================================>  92%][Progress:===================>          66%] [Cov:================================>  92%][Progress:===================>          66%] [Cov:================================>  92%][Progress:===================>          66%] [Cov:================================>  92%][Progress:===================>          66%] [Cov:================================>  92%][Progress:===================>          66%] [Cov:================================>  92%][Progress:====================>         67%] [Cov:================================>  92%][Progress:====================>         67%] [Cov:================================>  92%][Progress:====================>         67%] [Cov:================================>  94%][Progress:====================>         67%] [Cov:================================>  94%][Progress:====================>         67%] [Cov:================================>  94%][Progress:====================>         67%] [Cov:================================>  94%][Progress:====================>         67%] [Cov:================================>  94%][Progress:====================>         67%] [Cov:================================>  94%][Progress:====================>         67%] [Cov:================================>  94%][Progress:====================>         67%] [Cov:================================>  94%][Progress:====================>         67%] [Cov:================================>  94%][Progress:====================>         68%] [Cov:================================>  94%][Progress:====================>         68%] [Cov:================================>  94%][Progress:====================>         68%] [Cov:================================>  94%][Progress:====================>         68%] [Cov:================================>  94%][Progress:====================>         68%] [Cov:================================>  94%][Progress:====================>         68%] [Cov:================================>  94%][Progress:====================>         68%] [Cov:================================>  94%][Progress:====================>         68%] [Cov:================================>  94%][Progress:====================>         68%] [Cov:================================>  94%][Progress:====================>         68%] [Cov:================================>  94%][Progress:====================>         68%] [Cov:================================>  94%][Progress:====================>         68%] [Cov:================================>  94%][Progress:====================>         68%] [Cov:================================>  94%][Progress:====================>         68%] [Cov:================================>  94%][Progress:====================>         68%] [Cov:================================>  94%][Progress:====================>         69%] [Cov:================================>  94%][Progress:====================>         69%] [Cov:================================>  94%][Progress:====================>         69%] [Cov:================================>  94%][Progress:====================>         69%] [Cov:================================>  94%][Progress:====================>         69%] [Cov:================================>  94%][Progress:====================>         69%] [Cov:================================>  94%][Progress:====================>         69%] [Cov:================================>  94%][Progress:====================>         69%] [Cov:================================>  94%][Progress:====================>         69%] [Cov:================================>  94%][Progress:====================>         69%] [Cov:================================>  94%][Progress:====================>         69%] [Cov:================================>  94%][Progress:====================>         69%] [Cov:================================>  94%][Progress:====================>         69%] [Cov:================================>  94%][Progress:=====================>        70%] [Cov:================================>  94%][Progress:=====================>        70%] [Cov:================================>  94%][Progress:=====================>        70%] [Cov:================================>  94%][Progress:=====================>        70%] [Cov:================================>  94%][Progress:=====================>        70%] [Cov:================================>  94%][Progress:=====================>        70%] [Cov:================================>  94%][Progress:=====================>        70%] [Cov:================================>  94%][Progress:=====================>        70%] [Cov:================================>  94%][Progress:=====================>        70%] [Cov:================================>  94%][Progress:=====================>        70%] [Cov:================================>  94%][Progress:=====================>        70%] [Cov:================================>  94%][Progress:=====================>        70%] [Cov:================================>  94%][Progress:=====================>        70%] [Cov:================================>  94%][Progress:=====================>        71%] [Cov:================================>  94%][Progress:=====================>        71%] [Cov:================================>  94%][Progress:=====================>        71%] [Cov:================================>  94%][Progress:=====================>        71%] [Cov:================================>  94%][Progress:=====================>        71%] [Cov:================================>  94%][Progress:=====================>        71%] [Cov:================================>  94%][Progress:=====================>        71%] [Cov:================================>  94%][Progress:=====================>        71%] [Cov:================================>  94%][Progress:=====================>        71%] [Cov:================================>  94%][Progress:=====================>        71%] [Cov:================================>  94%][Progress:=====================>        71%] [Cov:================================>  94%][Progress:=====================>        71%] [Cov:================================>  94%][Progress:=====================>        71%] [Cov:================================>  94%][Progress:=====================>        71%] [Cov:================================>  94%][Progress:=====================>        71%] [Cov:================================>  94%][Progress:=====================>        71%] [Cov:================================>  94%][Progress:=====================>        71%] [Cov:================================>  94%][Progress:=====================>        72%] [Cov:================================>  94%][Progress:=====================>        72%] [Cov:================================>  94%][Progress:=====================>        72%] [Cov:================================>  94%][Progress:=====================>        72%] [Cov:================================>  94%][Progress:=====================>        72%] [Cov:================================>  94%][Progress:=====================>        72%] [Cov:================================>  94%][Progress:=====================>        72%] [Cov:================================>  94%][Progress:=====================>        72%] [Cov:================================>  94%][Progress:=====================>        72%] [Cov:================================>  94%][Progress:=====================>        72%] [Cov:================================>  94%][Progress:=====================>        72%] [Cov:================================>  94%][Progress:=====================>        72%] [Cov:================================>  94%][Progress:=====================>        72%] [Cov:================================>  94%][Progress:=====================>        73%] [Cov:================================>  94%][Progress:=====================>        73%] [Cov:================================>  94%][Progress:=====================>        73%] [Cov:================================>  94%][Progress:=====================>        73%] [Cov:================================>  94%][Progress:=====================>        73%] [Cov:================================>  94%][Progress:=====================>        73%] [Cov:================================>  94%][Progress:=====================>        73%] [Cov:================================>  94%][Progress:=====================>        73%] [Cov:================================>  94%][Progress:=====================>        73%] [Cov:================================>  94%][Progress:=====================>        73%] [Cov:================================>  94%][Progress:=====================>        73%] [Cov:================================>  94%][Progress:======================>       74%] [Cov:================================>  94%][Progress:======================>       74%] [Cov:================================>  94%][Progress:======================>       74%] [Cov:================================>  94%][Progress:======================>       74%] [Cov:================================>  94%][Progress:======================>       74%] [Cov:================================>  94%][Progress:======================>       74%] [Cov:================================>  94%][Progress:======================>       74%] [Cov:================================>  94%][Progress:======================>       74%] [Cov:================================>  94%][Progress:======================>       74%] [Cov:================================>  94%][Progress:======================>       74%] [Cov:================================>  94%][Progress:======================>       74%] [Cov:================================>  94%][Progress:======================>       74%] [Cov:================================>  94%][Progress:======================>       74%] [Cov:================================>  94%][Progress:======================>       75%] [Cov:================================>  94%][Progress:======================>       75%] [Cov:================================>  94%][Progress:======================>       75%] [Cov:================================>  94%][Progress:======================>       75%] [Cov:================================>  94%][Progress:======================>       75%] [Cov:================================>  94%][Progress:======================>       75%] [Cov:================================>  94%][Progress:======================>       75%] [Cov:================================>  94%][Progress:======================>       75%] [Cov:================================>  94%][Progress:======================>       75%] [Cov:================================>  94%][Progress:======================>       75%] [Cov:================================>  94%][Progress:======================>       75%] [Cov:================================>  94%][Progress:======================>       76%] [Cov:================================>  94%][Progress:======================>       76%] [Cov:================================>  94%][Progress:======================>       76%] [Cov:================================>  94%][Progress:======================>       76%] [Cov:================================>  94%][Progress:======================>       76%] [Cov:================================>  94%][Progress:======================>       76%] [Cov:================================>  94%][Progress:======================>       76%] [Cov:================================>  94%][Progress:======================>       76%] [Cov:================================>  94%][Progress:=======================>      77%] [Cov:================================>  94%][Progress:=======================>      77%] [Cov:================================>  94%][Progress:=======================>      77%] [Cov:================================>  94%][Progress:=======================>      77%] [Cov:================================>  94%][Progress:=======================>      77%] [Cov:================================>  94%][Progress:=======================>      77%] [Cov:================================>  94%][Progress:=======================>      77%] [Cov:================================>  94%][Progress:=======================>      77%] [Cov:=================================> 95%][Progress:=======================>      77%] [Cov:=================================> 95%][Progress:=======================>      77%] [Cov:=================================> 95%][Progress:=======================>      77%] [Cov:=================================> 95%][Progress:=======================>      77%] [Cov:=================================> 95%][Progress:=======================>      77%] [Cov:=================================> 95%][Progress:=======================>      78%] [Cov:=================================> 95%][Progress:=======================>      78%] [Cov:=================================> 95%][Progress:=======================>      78%] [Cov:=================================> 95%][Progress:=======================>      78%] [Cov:=================================> 95%][Progress:=======================>      78%] [Cov:=================================> 95%][Progress:=======================>      78%] [Cov:==================================>98%][Progress:=======================>      78%] [Cov:==================================>98%][Progress:=======================>      78%] [Cov:==================================>98%][Progress:=======================>      78%] [Cov:==================================>98%][Progress:=======================>      78%] [Cov:==================================>98%][Progress:=======================>      78%] [Cov:==================================>98%][Progress:=======================>      78%] [Cov:==================================>98%][Progress:=======================>      78%] [Cov:==================================>98%][Progress:=======================>      78%] [Cov:==================================>98%][Progress:=======================>      78%] [Cov:==================================>98%][Progress:=======================>      78%] [Cov:==================================>98%][Progress:=======================>      79%] [Cov:==================================>98%][Progress:=======================>      79%] [Cov:==================================>98%][Progress:=======================>      79%] [Cov:==================================>98%][Progress:=======================>      79%] [Cov:==================================>98%][Progress:=======================>      79%] [Cov:==================================>98%][Progress:=======================>      79%] [Cov:==================================>98%][Progress:=======================>      79%] [Cov:==================================>98%][Progress:=======================>      79%] [Cov:==================================>98%][Progress:=======================>      79%] [Cov:==================================>98%][Progress:=======================>      79%] [Cov:==================================>98%][Progress:=======================>      79%] [Cov:==================================>98%][Progress:=======================>      79%] [Cov:==================================>98%][Progress:=======================>      79%] [Cov:==================================>98%][Progress:=======================>      79%] [Cov:==================================>98%][Progress:=======================>      79%] [Cov:==================================>98%][Progress:========================>     80%] [Cov:==================================>98%][Progress:========================>     80%] [Cov:==================================>98%][Progress:========================>     80%] [Cov:==================================>98%][Progress:========================>     80%] [Cov:==================================>98%][Progress:========================>     80%] [Cov:==================================>98%][Progress:========================>     80%] [Cov:==================================>98%][Progress:========================>     80%] [Cov:==================================>98%][Progress:========================>     80%] [Cov:==================================>98%][Progress:========================>     80%] [Cov:==================================>98%][Progress:========================>     80%] [Cov:==================================>98%][Progress:========================>     80%] [Cov:==================================>98%][Progress:========================>     80%] [Cov:==================================>98%][Progress:========================>     80%] [Cov:==================================>98%][Progress:========================>     80%] [Cov:==================================>98%][Progress:========================>     81%] [Cov:==================================>98%][Progress:========================>     81%] [Cov:==================================>98%][Progress:========================>     81%] [Cov:==================================>98%][Progress:========================>     81%] [Cov:==================================>98%][Progress:========================>     81%] [Cov:==================================>98%][Progress:========================>     81%] [Cov:==================================>98%][Progress:========================>     81%] [Cov:==================================>98%][Progress:========================>     81%] [Cov:==================================>98%][MASTER] 00:44:22.015 [logback-1] WARN  TestCluster - Failed to check cache for java.util.Enumeration<E> : Type points to itself
[Progress:========================>     81%] [Cov:==================================>98%][Progress:========================>     81%] [Cov:==================================>98%][Progress:========================>     81%] [Cov:==================================>98%][Progress:========================>     81%] [Cov:==================================>98%][Progress:========================>     81%] [Cov:==================================>98%][Progress:========================>     81%] [Cov:==================================>98%][Progress:========================>     81%] [Cov:==================================>98%][Progress:========================>   [Progress:=============>                45%] [Cov:=================================> 97%][Progress:=============>                45%] [Cov:=================================> 97%][Progress:=============>                45%] [Cov:=================================> 97%][Progress:=============>                45%] [Cov:=================================> 97%][Progress:=============>                45%] [Cov:=================================> 97%][Progress:=============>                45%] [Cov:=================================> 97%][Progress:=============>                45%] [Cov:=================================> 97%][Progress:=============>                45%] [Cov:=================================> 97%][Progress:=============>                46%] [Cov:=================================> 97%][Progress:=============>                46%] [Cov:=================================> 97%][Progress:=============>                46%] [Cov:=================================> 97%][Progress:=============>                46%] [Cov:=================================> 97%][Progress:=============>                46%] [Cov:=================================> 97%][Progress:=============>                46%] [Cov:=================================> 97%][Progress:=============>                46%] [Cov:=================================> 97%][Progress:=============>                46%] [Cov:=================================> 97%][Progress:=============>                46%] [Cov:=================================> 97%][Progress:=============>                46%] [Cov:=================================> 97%][Progress:==========** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        HuntDisplay huntDisplay = new HuntDisplay();
        Dimension preferredSize = huntDisplay.getPreferredSize();
        preferredSize.height = 300;// Changed to a more descriptive value, such as the height of a standard monitor.

        huntDisplay.getPreferredSize();
    }
}
statement is: HuntDisplay huntDisplay = new HuntDisplay(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Dimension preferredSize = huntDisplay.getPreferredSize(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: huntDisplay.getPreferredSize() target is: huntDisplay method is: getPreferredSize()
source statement: Joshua.FoxHunt.HuntDisplay()V callee: VariableReference: Statement 0, type Joshua.FoxHunt.HuntDisplayindex is: 0
source statement: Joshua.FoxHunt.HuntDisplay()V callee: VariableReference: Statement 0, type Joshua.FoxHunt.HuntDisplayindex is: 0
Matched Method is: getPreferredSize()Ljava/awt/Dimension;
statement is: preferredSize.height = 300// Changed to a more descriptive value, such as the height of a standard monitor.
, class spoon.support.reflect.code.CtAssignmentImpl
statement is: huntDisplay.getPreferredSize(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: huntDisplay.getPreferredSize() target is: huntDisplay method is: getPreferredSize()
source statement: Joshua.FoxHunt.HuntDisplay()V callee: VariableReference: Statement 0, type Joshua.FoxHunt.HuntDisplayindex is: 0
source statement: Joshua.FoxHunt.HuntDisplay()V callee: VariableReference: Statement 0, type Joshua.FoxHunt.HuntDisplayindex is: 0
Matched Method is: getPreferredSize()Ljava/awt/Dimension;
TestCase is: HuntDisplay huntDisplay = new HuntDisplay();
huntDisplay.getPreferredSize();
huntDisplay.getPreferredSize();

statement is: Joshua.FoxHunt.HuntDisplay()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class Joshua.FoxHunt.HuntDisplay
statement code is: HuntDisplay huntDisplay = new HuntDisplay()
statement is: getMinimumSize()Ljava/awt/Dimension; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.awt.Dimension
statement code is: Dimension minimumSize = huntDisplay.getMinimumSize()
statement is: org.evosuite.testcase.statements.AssignmentStatement@c87a642d type is: class org.evosuite.testcase.statements.AssignmentStatement return type int
statement code is: dimension.height = (-687)
statement is: getMinimumSize()Ljava/awt/Dimension; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.awt.Dimension
statement code is: Dimension minimumSize = huntDisplay.getMinimumSize()
test data is: HuntDisplay huntDisplay = new HuntDisplay();
Dimension minimumSize = huntDisplay.getMinimumSize();
minimumSize.height = (-687);
huntDisplay.getMinimumSize();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        HuntDisplay huntDisplay = new HuntDisplay();
        Dimension minimumSize = huntDisplay.getMinimumSize();
        minimumSize.height = 10;
        huntDisplay.getMinimumSize();
    }
}
statement is: HuntDisplay huntDisplay = new HuntDisplay(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Dimension minimumSize = huntDisplay.getMinimumSize(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: huntDisplay.getMinimumSize() target is: huntDisplay method is: getMinimumSize()
source statement: Joshua.FoxHunt.HuntDisplay()V callee: VariableReference: Statement 0, type Joshua.FoxHunt.HuntDisplayindex is: 0
source statement: Joshua.FoxHunt.HuntDisplay()V callee: VariableReference: Statement 0, type Joshua.FoxHunt.HuntDisplayindex is: 0
Matched Method is: getMinimumSize()Ljava/awt/Dimension;
statement is: minimumSize.height = 10, class spoon.support.reflect.code.CtAssignmentImpl
statement is: huntDisplay.getMinimumSize(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: huntDisplay.getMinimumSize() target is: huntDisplay method is: getMinimumSize()
source statement: Joshua.FoxHunt.HuntDisplay()V callee: VariableReference: Statement 0, type Joshua.FoxHunt.HuntDisplayindex is: 0
source statement: Joshua.FoxHunt.HuntDisplay()V callee: VariableReference: Statement 0, type Joshua.FoxHunt.HuntDisplayindex is: 0
Matched Method is: getMinimumSize()Ljava/awt/Dimension;
TestCase is: HuntDisplay huntDisplay = new HuntDisplay();
huntDisplay.getMinimumSize();
huntDisplay.getMinimumSize();

statement is: Joshua.FoxHunt.HuntDisplay()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class Joshua.FoxHunt.HuntDisplay
statement code is: HuntDisplay huntDisplay = new HuntDisplay()
statement is: java.awt.image.BufferedImage(III)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.awt.image.BufferedImage
statement code is: BufferedImage bufferedImage = new BufferedImage(5, 5, 5)
statement is: createGraphics()Ljava/awt/Graphics2D; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.awt.Graphics2D
statement code is: Graphics2D createGraphics = bufferedImage.createGraphics()
statement is: paintComponent(Ljava/awt/Graphics;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: huntDisplay.paintComponent(arg0)
test data is: HuntDisplay huntDisplay = new HuntDisplay();
BufferedImage bufferedImage = new BufferedImage(5, 5, 5);
Graphics2D createGraphics = bufferedImage.createGraphics();
huntDisplay.paintComponent(createGraphics);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        HuntDisplay huntDisplay = new HuntDisplay();
        BufferedImage bufferedImage = new BufferedImage(5, 5, 5);
        Graphics2D createGraphics = bufferedImage.createGraphics();
        huntDisplay.paintComponent(createGraphics);
    }
}
statement is: HuntDisplay huntDisplay = new HuntDisplay(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: BufferedImage bufferedImage = new BufferedImage(5, 5, 5), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Graphics2D createGraphics = bufferedImage.createGraphics(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: bufferedImage.createGraphics() target is: bufferedImage method is: createGraphics()
source statement: java.awt.image.BufferedImage(III)V callee: VariableReference: Statement 1, type java.awt.image.BufferedImageindex is: 4
Matched Method is: createGraphics()Ljava/awt/Graphics2D;
statement is: huntDisplay.paintComponent(createGraphics), class spoon.support.reflect.code.CtInvocationImpl
invocation is: huntDisplay.paintComponent(createGraphics) target is: huntDisplay method is: paintComponent(Graphics2D)
source statement: Joshua.FoxHunt.HuntDisplay()V callee: VariableReference: Statement 0, type Joshua.FoxHunt.HuntDisplayindex is: 0
Matched Method is: paintComponent(Ljava/awt/Graphics;)V
TestCase is: HuntDisplay huntDisplay = new HuntDisplay();
int _int = 5;
int _int = 5;
int _int = 5;
BufferedImage bufferedImage = new BufferedImage(_int, _int, _int);
Graphics2D createGraphics = ((BufferedImage) _int).createGraphics();
huntDisplay.paintComponent(createGraphics);

statement is: Joshua.FoxHunt.HuntDisplay()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class Joshua.FoxHunt.HuntDisplay
statement code is: HuntDisplay huntDisplay = new HuntDisplay()
statement is: javax.swing.ImageIcon()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class javax.swing.ImageIcon
statement code is: ImageIcon imageIcon = new ImageIcon()
statement is: Joshua.FoxHunt.TrigPoint(DDD)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class Joshua.FoxHunt.TrigPoint
statement code is: TrigPoint trigPoint = new TrigPoint((-1641.55115857238), (-1641.55115857238), (-1641.55115857238))
statement is: addPoint(LJoshua/FoxHunt/TrigPoint;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: huntDisplay.addPoint(arg0)
statement is: Joshua.FoxHunt.Landmark(DDLjavax/swing/ImageIcon;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class Joshua.FoxHunt.Landmark
statement code is: Landmark landmark = new Landmark((-1934.5294300615287), (-1934.5294300615287), arg2)
statement is: addLandMark(LJoshua/FoxHunt/Landmark;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: huntDisplay.addLandMark(arg0)
statement is: java.awt.image.BufferedImage(III)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.awt.image.BufferedImage
statement code is: BufferedImage bufferedImage = new BufferedImage(5, 5, 5)
statement is: createGraphics()Ljava/awt/Graphics2D; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.awt.Graphics2D
statement code is: Graphics2D createGraphics = bufferedImage.createGraphics()
statement is: paintComponent(Ljava/awt/Graphics;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: huntDisplay.paintComponent(arg0)
test data is: HuntDisplay huntDisplay = new HuntDisplay();
ImageIcon imageIcon = new ImageIcon();
TrigPoint trigPoint = new TrigPoint((-1641.55115857238), (-1641.55115857238), (-1641.55115857238));
huntDisplay.addPoint(trigPoint);
Landmark landmark = new Landmark((-1934.5294300615287), (-1934.5294300615287), imageIcon);
huntDisplay.addLandMark(landmark);
BufferedImage bufferedImage = new BufferedImage(5, 5, 5);
Graphics2D createGraphics = bufferedImage.createGraphics();
huntDisplay.paintComponent(createGraphics);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        HuntDisplay huntDisplay = new HuntDisplay();
        ImageIcon imageIcon = new ImageIcon("https://www.example.com/image1.jpg");// Changed to a more descriptive and representative image URL

        TrigPoint trigPoint = new TrigPoint(-1641.55115857238, -1641.55115857238, -1641.55115857238);
        huntDisplay.addPoint(trigPoint);
        Landmark landmark = new Landmark(-1934.5294300615287, -1934.5294300615287, imageIcon);// Changed the values to more descriptive and representative numbers

        huntDisplay.addLandMark(landmark);
        BufferedImage bufferedImage = new BufferedImage(5, 5, 5);
        Graphics2D createGraphics = bufferedImage.createGraphics();
        huntDisplay.paintComponent(createGraphics);
    }
}
statement is: HuntDisplay huntDisplay = new HuntDisplay(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: ImageIcon imageIcon = new ImageIcon("https://www.example.com/image1.jpg")// Changed to a more descriptive and representative image URL
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: TrigPoint trigPoint = new TrigPoint(-1641.55115857238, -1641.55115857238, -1641.55115857238), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: huntDisplay.addPoint(trigPoint), class spoon.support.reflect.code.CtInvocationImpl
invocation is: huntDisplay.addPoint(trigPoint) target is: huntDisplay method is: addPoint(TrigPoint)
source statement: Joshua.FoxHunt.HuntDisplay()V callee: VariableReference: Statement 0, type Joshua.FoxHunt.HuntDisplayindex is: 0
Matched Method is: addPoint(LJoshua/FoxHunt/TrigPoint;)V
statement is: Landmark landmark = new Landmark(-1934.5294300615287, -1934.5294300615287, imageIcon)// Changed the values to more descriptive and representative numbers
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: huntDisplay.addLandMark(landmark), class spoon.support.reflect.code.CtInvocationImpl
invocation is: huntDisplay.addLandMark(landmark) target is: huntDisplay method is: addLandMark(Landmark)
source statement: Joshua.FoxHunt.HuntDisplay()V callee: VariableReference: Statement 0, type Joshua.FoxHunt.HuntDisplayindex is: 0
Matched Method is: addLandMark(LJoshua/FoxHunt/Landmark;)V
statement is: BufferedImage bufferedImage = new BufferedImage(5, 5, 5), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Graphics2D createGraphics = bufferedImage.createGraphics(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: bufferedImage.createGraphics() target is: bufferedImage method is: createGraphics()
source statement: java.awt.image.BufferedImage(III)V callee: VariableReference: Statement 6, type java.awt.image.BufferedImageindex is: 8
Matched Method is: createGraphics()Ljava/awt/Graphics2D;
statement is: huntDisplay.paintComponent(createGraphics), class spoon.support.reflect.code.CtInvocationImpl
invocation is: huntDisplay.paintComponent(createGraphics) target is: huntDisplay method is: paintComponent(Graphics2D)
source statement: Joshua.FoxHunt.HuntDisplay()V callee: VariableReference: Statement 0, type Joshua.FoxHunt.HuntDisplayindex is: 0
Matched Method is: paintComponent(Ljava/awt/Graphics;)V
TestCase is: HuntDisplay huntDisplay = new HuntDisplay();
TrigPoint trigPoint = new TrigPoint((-1641.55115857238), (-1641.55115857238), (-1641.55115857238));
huntDisplay.addPoint(trigPoint);
Landmark landmark = new Landmark((-1934.5294300615287), (-1934.5294300615287), (ImageIcon) trigPoint);
huntDisplay.addLandMark(landmark);
int _int = 5;
int _int = 5;
int _int = 5;
BufferedImage bufferedImage = new BufferedImage(_int, _int, _int);
Graphics2D createGraphics = ((BufferedImage) _int).createGraphics();
huntDisplay.paintComponent(createGraphics);

statement is: Joshua.FoxHunt.HuntDisplay()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class Joshua.FoxHunt.HuntDisplay
statement code is: HuntDisplay huntDisplay = new HuntDisplay()
statement is: Joshua.FoxHunt.TrigPoint(DDDZ)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class Joshua.FoxHunt.TrigPoint
statement code is: TrigPoint trigPoint = new TrigPoint(0.0, 0.0, 0.0, true)
statement is: addPoint(LJoshua/FoxHunt/TrigPoint;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: huntDisplay.addPoint(arg0)
statement is: paintComponent(Ljava/awt/Graphics;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: huntDisplay.paintComponent((Graphics) null)
test data is: HuntDisplay huntDisplay = new HuntDisplay();
TrigPoint trigPoint = new TrigPoint(0.0, 0.0, 0.0, true);
huntDisplay.addPoint(trigPoint);
huntDisplay.paintComponent((Graphics) null);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        HuntDisplay huntDisplay = new HuntDisplay();
        TrigPoint trigPoint = new TrigPoint(30.0, 45.0, 90.0, true);
        huntDisplay.addPoint(trigPoint);
        huntDisplay.paintComponent(((Graphics) (null)));
    }
}
statement is: HuntDisplay huntDisplay = new HuntDisplay(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: TrigPoint trigPoint = new TrigPoint(30.0, 45.0, 90.0, true), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: huntDisplay.addPoint(trigPoint), class spoon.support.reflect.code.CtInvocationImpl
invocation is: huntDisplay.addPoint(trigPoint) target is: huntDisplay method is: addPoint(TrigPoint)
source statement: Joshua.FoxHunt.HuntDisplay()V callee: VariableReference: Statement 0, type Joshua.FoxHunt.HuntDisplayindex is: 0
Matched Method is: addPoint(LJoshua/FoxHunt/TrigPoint;)V
statement is: huntDisplay.paintComponent(((Graphics) (null))), class spoon.support.reflect.code.CtInvocationImpl
invocation is: huntDisplay.paintComponent(((Graphics) (null))) target is: huntDisplay method is: paintComponent(Graphics)
source statement: Joshua.FoxHunt.HuntDisplay()V callee: VariableReference: Statement 0, type Joshua.FoxHunt.HuntDisplayindex is: 0
Matched Method is: paintComponent(Ljava/awt/Graphics;)V
i 0 Parameters size() 0 Num of Method Parameters: 1
TestCase is: HuntDisplay huntDisplay = new HuntDisplay();
double _double = 30.0;
double _double = 45.0;
double _double = 90.0;
boolean _boolean = true;
TrigPoint trigPoint = new TrigPoint(_double, _double, _double, _boolean);
huntDisplay.addPoint(trigPoint);
Graphics graphics = null;
huntDisplay.paintComponent(graphics);

statement is: Joshua.FoxHunt.HuntDisplay()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class Joshua.FoxHunt.HuntDisplay
statement code is: HuntDisplay huntDisplay = new HuntDisplay()
statement is: getMinimumSize()Ljava/awt/Dimension; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.awt.Dimension
statement code is: Dimension minimumSize = huntDisplay.getMinimumSize()
statement is: setSize(DD)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: dimension.setSize(0.0, 0.0)
statement is: getMinimumSize()Ljava/awt/Dimension; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.awt.Dimension
statement code is: Dimension minimumSize = huntDisplay.getMinimumSize()
test data is: HuntDisplay huntDisplay = new HuntDisplay();
Dimension minimumSize = huntDisplay.getMinimumSize();
minimumSize.setSize(0.0, 0.0);
huntDisplay.getMinimumSize();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        HuntDisplay huntDisplay = new HuntDisplay();
        Dimension minimumSize = huntDisplay.getMinimumSize();
        minimumSize.setSize(50.0, 100.0);
        huntDisplay.getMinimumSize();
    }
}
statement is: HuntDisplay huntDisplay = new HuntDisplay(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Dimension minimumSize = huntDisplay.getMinimumSize(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: huntDisplay.getMinimumSize() target is: huntDisplay method is: getMinimumSize()
source statement: Joshua.FoxHunt.HuntDisplay()V callee: VariableReference: Statement 0, type Joshua.FoxHunt.HuntDisplayindex is: 0
source statement: Joshua.FoxHunt.HuntDisplay()V callee: VariableReference: Statement 0, type Joshua.FoxHunt.HuntDisplayindex is: 0
Matched Method is: getMinimumSize()Ljava/awt/Dimension;
statement is: minimumSize.setSize(50.0, 100.0), class spoon.support.reflect.code.CtInvocationImpl
invocation is: minimumSize.setSize(50.0, 100.0) target is: minimumSize method is: setSize(double,double)
source statement: getMinimumSize()Ljava/awt/Dimension; callee: VariableReference: Statement 1, type java.awt.Dimensionindex is: 1
Matched Method is: setSize(DD)V
statement is: huntDisplay.getMinimumSize(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: huntDisplay.getMinimumSize() target is: huntDisplay method is: getMinimumSize()
source statement: Joshua.FoxHunt.HuntDisplay()V callee: VariableReference: Statement 0, type Joshua.FoxHunt.HuntDisplayindex is: 0
source statement: Joshua.FoxHunt.HuntDisplay()V callee: VariableReference: Statement 0, type Joshua.FoxHunt.HuntDisplayindex is: 0
Matched Method is: getMinimumSize()Ljava/awt/Dimension;
TestCase is: HuntDisplay huntDisplay = new HuntDisplay();
Dimension minimumSize = huntDisplay.getMinimumSize();
double _double = 50.0;
double _double = 100.0;
minimumSize.setSize(_double, _double);
huntDisplay.getMinimumSize();

statement is: Joshua.FoxHunt.HuntDisplay()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class Joshua.FoxHunt.HuntDisplay
statement code is: HuntDisplay huntDisplay = new HuntDisplay()
statement is: java.awt.Dimension()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.awt.Dimension
statement code is: Dimension dimension = new Dimension()
statement is: getMinimumSize()Ljava/awt/Dimension; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.awt.Dimension
statement code is: Dimension minimumSize = huntDisplay.getMinimumSize()
statement is: org.evosuite.testcase.statements.AssignmentStatement@133db1ab type is: class org.evosuite.testcase.statements.AssignmentStatement return type int
statement code is: dimension.width = (-687)
statement is: setSize(Ljava/awt/Dimension;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: dimension.setSize(arg0)
statement is: getMinimumSize()Ljava/awt/Dimension; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.awt.Dimension
statement code is: Dimension minimumSize = huntDisplay.getMinimumSize()
test data is: HuntDisplay huntDisplay = new HuntDisplay();
Dimension dimension = new Dimension();
Dimension minimumSize = huntDisplay.getMinimumSize();
dimension.width = (-687);
minimumSize.setSize(dimension);
huntDisplay.getMinimumSize();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        HuntDisplay huntDisplay = new HuntDisplay();
        Dimension dimension = new Dimension();
        Dimension minimumSize = huntDisplay.getMinimumSize();
        dimension.width = -687;
        minimumSize.setSize(dimension);
        huntDisplay.getMinimumSize();
    }
}
statement is: HuntDisplay huntDisplay = new HuntDisplay(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Dimension dimension = new Dimension(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Dimension minimumSize = huntDisplay.getMinimumSize(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: huntDisplay.getMinimumSize() target is: huntDisplay method is: getMinimumSize()
source statement: Joshua.FoxHunt.HuntDisplay()V callee: VariableReference: Statement 0, type Joshua.FoxHunt.HuntDisplayindex is: 0
source statement: Joshua.FoxHunt.HuntDisplay()V callee: VariableReference: Statement 0, type Joshua.FoxHunt.HuntDisplayindex is: 0
Matched Method is: getMinimumSize()Ljava/awt/Dimension;
statement is: dimension.width = -687, class spoon.support.reflect.code.CtAssignmentImpl
statement is: minimumSize.setSize(dimension), class spoon.support.reflect.code.CtInvocationImpl
invocation is: minimumSize.setSize(dimension) target is: minimumSize method is: setSize(Dimension)
source statement: getMinimumSize()Ljava/awt/Dimension; callee: VariableReference: Statement 2, type java.awt.Dimensionindex is: 2
Matched Method is: setSize(Ljava/awt/Dimension;)V
statement is: huntDisplay.getMinimumSize(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: huntDisplay.getMinimumSize() target is: huntDisplay method is: getMinimumSize()
source statement: Joshua.FoxHunt.HuntDisplay()V callee: VariableReference: Statement 0, type Joshua.FoxHunt.HuntDisplayindex is: 0
source statement: Joshua.FoxHunt.HuntDisplay()V callee: VariableReference: Statement 0, type Joshua.FoxHunt.HuntDisplayindex is: 0
Matched Method is: getMinimumSize()Ljava/awt/Dimension;
TestCase is: HuntDisplay huntDisplay = new HuntDisplay();
Dimension dimension = new Dimension();
Dimension minimumSize = huntDisplay.getMinimumSize();
minimumSize.setSize(dimension);
huntDisplay.getMinimumSize();

statement is: Joshua.FoxHunt.HuntDisplay()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class Joshua.FoxHunt.HuntDisplay
statement code is: HuntDisplay huntDisplay = new HuntDisplay()
statement is: org.evosuite.testcase.statements.AssignmentStatement@591baaf9 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.awt.Dimension
statement code is: huntDisplay.minSize = null
statement is: getMinimumSize()Ljava/awt/Dimension; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.awt.Dimension
statement code is: Dimension minimumSize = huntDisplay.getMinimumSize()
test data is: HuntDisplay huntDisplay = new HuntDisplay();
huntDisplay.minSize = null;
huntDisplay.getMinimumSize();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        HuntDisplay huntDisplay = new HuntDisplay();
        huntDisplay.minSize = new Dimension(10, 20);
        huntDisplay.getMinimumSize();
    }
}
statement is: HuntDisplay huntDisplay = new HuntDisplay(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: huntDisplay.minSize = new Dimension(10, 20), class spoon.support.reflect.code.CtAssignmentImpl
statement is: huntDisplay.getMinimumSize(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: huntDisplay.getMinimumSize() target is: huntDisplay method is: getMinimumSize()
source statement: Joshua.FoxHunt.HuntDisplay()V callee: VariableReference: Statement 0, type Joshua.FoxHunt.HuntDisplayindex is: 0
Matched Method is: getMinimumSize()Ljava/awt/Dimension;
TestCase is: HuntDisplay huntDisplay = new HuntDisplay();
huntDisplay.getMinimumSize();

statement is: Joshua.FoxHunt.HuntDisplay()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class Joshua.FoxHunt.HuntDisplay
statement code is: HuntDisplay huntDisplay = new HuntDisplay()
statement is: getPreferredSize()Ljava/awt/Dimension; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.awt.Dimension
statement code is: Dimension preferredSize = huntDisplay.getPreferredSize()
statement is: setSize(DD)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: dimension.setSize(0.0, 0.0)
statement is: getPreferredSize()Ljava/awt/Dimension; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.awt.Dimension
statement code is: Dimension preferredSize = huntDisplay.getPreferredSize()
test data is: HuntDisplay huntDisplay = new HuntDisplay();
Dimension preferredSize = huntDisplay.getPreferredSize();
preferredSize.setSize(0.0, 0.0);
huntDisplay.getPreferredSize();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        HuntDisplay huntDisplay = new HuntDisplay();
        Dimension preferredSize = huntDisplay.getPreferredSize();
        preferredSize.setSize(500.0, 200.0);
        huntDisplay.getPreferredSize();
    }
}
statement is: HuntDisplay huntDisplay = new HuntDisplay(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Dimension preferredSize = huntDisplay.getPreferredSize(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: huntDisplay.getPreferredSize() target is: huntDisplay method is: getPreferredSize()
source statement: Joshua.FoxHunt.HuntDisplay()V callee: VariableReference: Statement 0, type Joshua.FoxHunt.HuntDisplayindex is: 0
source statement: Joshua.FoxHunt.HuntDisplay()V callee: VariableReference: Statement 0, type Joshua.FoxHunt.HuntDisplayindex is: 0
Matched Method is: getPreferredSize()Ljava/awt/Dimension;
statement is: preferredSize.setSize(500.0, 200.0), class spoon.support.reflect.code.CtInvocationImpl
invocation is: preferredSize.setSize(500.0, 200.0) target is: preferredSize method is: setSize(double,double)
source statement: getPreferredSize()Ljava/awt/Dimension; callee: VariableReference: Statement 1, type java.awt.Dimensionindex is: 1
Matched Method is: setSize(DD)V
statement is: huntDisplay.getPreferredSize(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: huntDisplay.getPreferredSize() target is: huntDisplay method is: getPreferredSize()
source statement: Joshua.FoxHunt.HuntDisplay()V callee: VariableReference: Statement 0, type Joshua.FoxHunt.HuntDisplayindex is: 0
source statement: Joshua.FoxHunt.HuntDisplay()V callee: VariableReference: Statement 0, type Joshua.FoxHunt.HuntDisplayindex is: 0
Matched Method is: getPreferredSize()Ljava/awt/Dimension;
TestCase is: HuntDisplay huntDisplay = new HuntDisplay();
Dimension preferredSize = huntDisplay.getPreferredSize();
double _double = 500.0;
double _double = 200.0;
preferredSize.setSize(_double, _double);
huntDisplay.getPreferredSize();

statement is: Joshua.FoxHunt.HuntDisplay()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class Joshua.FoxHunt.HuntDisplay
statement code is: HuntDisplay huntDisplay = new HuntDisplay()
statement is: org.evosuite.testcase.statements.AssignmentStatement@e64182cc type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.awt.Dimension
statement code is: huntDisplay.prefSize = null
statement is: getPreferredSize()Ljava/awt/Dimension; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.awt.Dimension
statement code is: Dimension preferredSize = huntDisplay.getPreferredSize()
test data is: HuntDisplay huntDisplay = new HuntDisplay();
huntDisplay.prefSize = null;
huntDisplay.getPreferredSize();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        HuntDisplay huntDisplay = new HuntDisplay();
        assertNull(huntDisplay.getPreferredSize());
    }
}
statement is: HuntDisplay huntDisplay = new HuntDisplay(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: assertNull(huntDisplay.getPreferredSize()), class spoon.support.reflect.code.CtInvocationImpl
invocation is: assertNull(huntDisplay.getPreferredSize()) target is:  method is: assertNull(<unknown>)
TestCase is: HuntDisplay huntDisplay = new HuntDisplay();

* test suite isTestSuite: 20
Test 0: 
HuntDisplay huntDisplay = new HuntDisplay();
Dimension preferredSize = huntDisplay.getPreferredSize();
preferredSize.height = (-1);
huntDisplay.getPreferredSize();
Test 1: 
HuntDisplay huntDisplay = new HuntDisplay();
Dimension minimumSize = huntDisplay.getMinimumSize();
minimumSize.height = (-687);
huntDisplay.getMinimumSize();
Test 2: 
HuntDisplay huntDisplay = new HuntDisplay();
BufferedImage bufferedImage = new BufferedImage(5, 5, 5);
Graphics2D createGraphics = bufferedImage.createGraphics();
huntDisplay.paintComponent(createGraphics);
Test 3: 
HuntDisplay huntDisplay = new HuntDisplay();
ImageIcon imageIcon = new ImageIcon();
TrigPoint trigPoint = new TrigPoint((-1641.55115857238), (-1641.55115857238), (-1641.55115857238));
huntDisplay.addPoint(trigPoint);
Landmark landmark = new Landmark((-1934.5294300615287), (-1934.5294300615287), imageIcon);
huntDisplay.addLandMark(landmark);
BufferedImage bufferedImage = new BufferedImage(5, 5, 5);
Graphics2D createGraphics = bufferedImage.createGraphics();
huntDisplay.paintComponent(createGraphics);
Test 4: 
HuntDisplay huntDisplay = new HuntDisplay();
TrigPoint trigPoint = new TrigPoint(0.0, 0.0, 0.0, true);
huntDisplay.addPoint(trigPoint);
// Undeclared exception!
try { 
  huntDisplay.paintComponent((Graphics) null);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("Joshua.FoxHunt.HuntDisplay", e);
}

Test 5: 
HuntDisplay huntDisplay = new HuntDisplay();
Dimension minimumSize = huntDisplay.getMinimumSize();
minimumSize.setSize(0.0, 0.0);
huntDisplay.getMinimumSize();
Test 6: 
HuntDisplay huntDisplay = new HuntDisplay();
Dimension dimension = new Dimension();
Dimension minimumSize = huntDisplay.getMinimumSize();
dimension.width = (-687);
minimumSize.setSize(dimension);
huntDisplay.getMinimumSize();
Test 7: 
HuntDisplay huntDisplay = new HuntDisplay();
huntDisplay.minSize = null;
huntDisplay.getMinimumSize();
Test 8: 
HuntDisplay huntDisplay = new HuntDisplay();
Dimension preferredSize = huntDisplay.getPreferredSize();
preferredSize.setSize(0.0, 0.0);
huntDisplay.getPreferredSize();
Test 9: 
HuntDisplay huntDisplay = new HuntDisplay();
huntDisplay.prefSize = null;
huntDisplay.getPreferredSize();
Test 10: 
HuntDisplay huntDisplay = new HuntDisplay();
huntDisplay.getPreferredSize();
huntDisplay.getPreferredSize();

Test 11: 
HuntDisplay huntDisplay = new HuntDisplay();
huntDisplay.getMinimumSize();
huntDisplay.getMinimumSize();

Test 12: 
HuntDisplay huntDisplay = new HuntDisplay();
BufferedImage bufferedImage = new BufferedImage(5, 5, 5);
Graphics2D createGraphics = ((BufferedImage)5).createGraphics();
huntDisplay.paintComponent(createGraphics);

Test 13: 
HuntDisplay huntDisplay = new HuntDisplay();
TrigPoint trigPoint = new TrigPoint((-1641.55115857238), (-1641.55115857238), (-1641.55115857238));
huntDisplay.addPoint(trigPoint);
Landmark landmark = new Landmark((-1934.5294300615287), (-1934.5294300615287), (ImageIcon) trigPoint);
huntDisplay.addLandMark(landmark);
int _int = 5;
int _int = 5;
int _int = 5;
BufferedImage bufferedImage = new BufferedImage(_int, _int, _int);
Graphics2D createGraphics = ((BufferedImage) _int).createGraphics();
huntDisplay.paintComponent(createGraphics);

Test 14: 
HuntDisplay huntDisplay = new HuntDisplay();
TrigPoint trigPoint = new TrigPoint(30.0, 45.0, 90.0, true);
huntDisplay.addPoint(trigPoint);
huntDisplay.paintComponent((Graphics) null);

Test 15: 
HuntDisplay huntDisplay = new HuntDisplay();
Dimension minimumSize = huntDisplay.getMinimumSize();
minimumSize.setSize(50.0, 100.0);
huntDisplay.getMinimumSize();

Test 16: 
HuntDisplay huntDisplay = new HuntDisplay();
Dimension dimension = new Dimension();
Dimension minimumSize = huntDisplay.getMinimumSize();
minimumSize.setSize(dimension);
huntDisplay.getMinimumSize();

Test 17: 
HuntDisplay huntDisplay = new HuntDisplay();
huntDisplay.getMinimumSize();

Test 18: 
HuntDisplay huntDisplay = new HuntDisplay();
Dimension preferredSize = huntDisplay.getPreferredSize();
preferredSize.setSize(500.0, 200.0);
huntDisplay.getPreferredSize();

Test 19: 
HuntDisplay huntDisplay = new HuntDisplay();


* Generated after the refinement and before minimization 20 tests with total length 86
* test suite isTestSuite: 20
Test 0: 
HuntDisplay huntDisplay = new HuntDisplay();
Dimension preferredSize = huntDisplay.getPreferredSize();
preferredSize.height = (-1);
huntDisplay.getPreferredSize();
Test 1: 
HuntDisplay huntDisplay = new HuntDisplay();
Dimension minimumSize = huntDisplay.getMinimumSize();
minimumSize.height = (-687);
huntDisplay.getMinimumSize();
Test 2: 
HuntDisplay huntDisplay = new HuntDisplay();
BufferedImage bufferedImage = new BufferedImage(5, 5, 5);
Graphics2D createGraphics = bufferedImage.createGraphics();
huntDisplay.paintComponent(createGraphics);
Test 3: 
HuntDisplay huntDisplay = new HuntDisplay();
ImageIcon imageIcon = new ImageIcon();
TrigPoint trigPoint = new TrigPoint((-1641.55115857238), (-1641.55115857238), (-1641.55115857238));
huntDisplay.addPoint(trigPoint);
Landmark landmark = new Landmark((-1934.5294300615287), (-1934.5294300615287), imageIcon);
huntDisplay.addLandMark(landmark);
BufferedImage bufferedImage = new BufferedImage(5, 5, 5);
Graphics2D createGraphics = bufferedImage.createGraphics();
huntDisplay.paintComponent(createGraphics);
Test 4: 
HuntDisplay huntDisplay = new HuntDisplay();
TrigPoint trigPoint = new TrigPoint(0.0, 0.0, 0.0, true);
huntDisplay.addPoint(trigPoint);
// Undeclared exception!
try { 
  huntDisplay.paintComponent((Graphics) null);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("Joshua.FoxHunt.HuntDisplay", e);
}

Test 5: 
HuntDisplay huntDisplay = new HuntDisplay();
Dimension minimumSize = huntDisplay.getMinimumSize();
minimumSize.setSize(0.0, 0.0);
huntDisplay.getMinimumSize();
Test 6: 
HuntDisplay huntDisplay = new HuntDisplay();
Dimension dimension = new Dimension();
Dimension minimumSize = huntDisplay.getMinimumSize();
dimension.width = (-687);
minimumSize.setSize(dimension);
huntDisplay.getMinimumSize();
Test 7: 
HuntDisplay huntDisplay = new HuntDisplay();
huntDisplay.minSize = null;
huntDisplay.getMinimumSize();
Test 8: 
HuntDisplay huntDisplay = new HuntDisplay();
Dimension preferredSize = huntDisplay.getPreferredSize();
preferredSize.setSize(0.0, 0.0);
huntDisplay.getPreferredSize();
Test 9: 
HuntDisplay huntDisplay = new HuntDisplay();
huntDisplay.prefSize = null;
huntDisplay.getPreferredSize();
Test 10: 
HuntDisplay huntDisplay = new HuntDisplay();
huntDisplay.getPreferredSize();
huntDisplay.getPreferredSize();

Test 11: 
HuntDisplay huntDisplay = new HuntDisplay();
huntDisplay.getMinimumSize();
huntDisplay.getMinimumSize();

Test 12: 
HuntDisplay huntDisplay = new HuntDisplay();
BufferedImage bufferedImage = new BufferedImage(5, 5, 5);
Graphics2D createGraphics = ((BufferedImage)5).createGraphics();
huntDisplay.paintComponent(createGraphics);

Test 13: 
HuntDisplay huntDisplay = new HuntDisplay();
TrigPoint trigPoint = new TrigPoint((-1641.55115857238), (-1641.55115857238), (-1641.55115857238));
huntDisplay.addPoint(trigPoint);
Landmark landmark = new Landmark((-1934.5294300615287), (-1934.5294300615287), (ImageIcon) trigPoint);
huntDisplay.addLandMark(landmark);
int _int = 5;
int _int = 5;
int _int = 5;
BufferedImage bufferedImage = new BufferedImage(_int, _int, _int);
Graphics2D createGraphics = ((BufferedImage) _int).createGraphics();
huntDisplay.paintComponent(createGraphics);

Test 14: 
HuntDisplay huntDisplay = new HuntDisplay();
TrigPoint trigPoint = new TrigPoint(30.0, 45.0, 90.0, true);
huntDisplay.addPoint(trigPoint);
huntDisplay.paintComponent((Graphics) null);

Test 15: 
HuntDisplay huntDisplay = new HuntDisplay();
Dimension minimumSize = huntDisplay.getMinimumSize();
minimumSize.setSize(50.0, 100.0);
huntDisplay.getMinimumSize();

Test 16: 
HuntDisplay huntDisplay = new HuntDisplay();
Dimension dimension = new Dimension();
Dimension minimumSize = huntDisplay.getMinimumSize();
minimumSize.setSize(dimension);
huntDisplay.getMinimumSize();

Test 17: 
HuntDisplay huntDisplay = new HuntDisplay();
huntDisplay.getMinimumSize();

Test 18: 
HuntDisplay huntDisplay = new HuntDisplay();
Dimension preferredSize = huntDisplay.getPreferredSize();
preferredSize.setSize(500.0, 200.0);
huntDisplay.getPreferredSize();

Test 19: 
HuntDisplay huntDisplay = new HuntDisplay();


* Minimizing test suite
* test suite isTestSuite: 10
Test 0: 
HuntDisplay huntDisplay = new HuntDisplay();
Dimension preferredSize = huntDisplay.getPreferredSize();
preferredSize.height = (-1);
huntDisplay.getPreferredSize();
Test 1: 
HuntDisplay huntDisplay = new HuntDisplay();
TrigPoint trigPoint = new TrigPoint(30.0, 45.0, 90.0, true);
huntDisplay.addPoint(trigPoint);
// Undeclared exception!
try { 
  huntDisplay.paintComponent((Graphics) null);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("Joshua.FoxHunt.HuntDisplay", e);
}

Test 2: 
HuntDisplay huntDisplay = new HuntDisplay();
Dimension minimumSize = huntDisplay.getMinimumSize();
minimumSize.height = (-687);
huntDisplay.getMinimumSize();
Test 3: 
HuntDisplay huntDisplay = new HuntDisplay();
ImageIcon imageIcon = new ImageIcon();
TrigPoint trigPoint = new TrigPoint((-1641.55115857238), (-1641.55115857238), (-1641.55115857238));
huntDisplay.addPoint(trigPoint);
Landmark landmark = new Landmark((-1934.5294300615287), (-1934.5294300615287), imageIcon);
huntDisplay.addLandMark(landmark);
BufferedImage bufferedImage = new BufferedImage(5, 5, 5);
Graphics2D createGraphics = bufferedImage.createGraphics();
huntDisplay.paintComponent(createGraphics);
Test 4: 
HuntDisplay huntDisplay = new HuntDisplay();
BufferedImage bufferedImage = new BufferedImage(5, 5, 5);
Graphics2D createGraphics = bufferedImage.createGraphics();
huntDisplay.paintComponent(createGraphics);
Test 5: 
HuntDisplay huntDisplay = new HuntDisplay();
Dimension dimension = new Dimension();
Dimension minimumSize = huntDisplay.getMinimumSize();
minimumSize.setSize(dimension);
huntDisplay.getMinimumSize();
Test 6: 
HuntDisplay huntDisplay = new HuntDisplay();
Dimension dimension = new Dimension();
Dimension minimumSize = huntDisplay.getMinimumSize();
dimension.width = (-687);
minimumSize.setSize(dimension);
huntDisplay.getMinimumSize();
Test 7: 
HuntDisplay huntDisplay = new HuntDisplay();
huntDisplay.minSize = null;
huntDisplay.getMinimumSize();
Test 8: 
HuntDisplay huntDisplay = new HuntDisplay();
Dimension preferredSize = huntDisplay.getPreferredSize();
preferredSize.setSize(0.0, 0.0);
huntDisplay.getPreferredSize();
Test 9: 
HuntDisplay huntDisplay = new HuntDisplay();
huntDisplay.prefSize = null;
huntDisplay.getPreferredSize();

* Going to analyze the coverage criteria
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 100%
* Total number of goals: 23
* Number of covered goals: 23
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 100%
* Total number of goals: 50
* Number of covered goals: 50
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 93%
* Total number of goals: 14
* Number of covered goals: 13
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 6
* Number of covered goals: 6
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 100%
* Total number of goals: 23
* Number of covered goals: 23
* Generated 10 tests with total length 46
* Resulting test suite's coverage: 100% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 37%
* Compiling and checking tests
Going to execute: removeTestsThatDoNotCompile
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: HuntDisplay huntDisplay = new HuntDisplay();
TrigPoint arg0 = new TrigPoint(30.0, 45.0, 90.0, true);
huntDisplay.addPoint(arg0);
// Undeclared exception!
try { 
  huntDisplay.paintComponent((Graphics) null);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("Joshua.FoxHunt.HuntDisplay", e);
}


** It was a parseable test case! 
refined test name is: testAddPointWithNullGraphicsContext
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: HuntDisplay huntDisplay = new HuntDisplay();
BufferedImage bufferedImage = new BufferedImage(5, 5, 5);
Graphics2D arg0 = bufferedImage.createGraphics();
huntDisplay.paintComponent(arg0);
assertFalse(huntDisplay.isFocusCycleRoot());


** It was a parseable test case! 
refined test name is: testHuntDisplayIsNotFocusCycleRoot
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: HuntDisplay huntDisplay = new HuntDisplay();
huntDisplay.minSize = null;
Dimension minimumSize = huntDisplay.getMinimumSize();
assertNull(minimumSize);


** It was a parseable test case! 
refined test name is: testGetMinimumSizeReturnsNullWhenMinSizeIsNull
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: HuntDisplay huntDisplay = new HuntDisplay();
huntDisplay.prefSize = null;
Dimension preferredSize = huntDisplay.getPreferredSize();
assertNull(preferredSize);


** It was a parseable test case! 
refined test name is: testGetPreferredSizeWithNullPrefSizeReturnsNull
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 01:25:21.190 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar2465979632416051112.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 01:25:21.213 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2465979632416051112.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 01:25:21.328 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar2465979632416051112.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 01:25:21.329 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2465979632416051112.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 01:25:21.439 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar2465979632416051112.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 01:25:21.440 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2465979632416051112.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 01:25:21.544 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar2465979632416051112.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 01:25:21.549 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2465979632416051112.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 01:25:21.661 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar2465979632416051112.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 01:25:21.662 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2465979632416051112.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 01:25:21.766 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar2465979632416051112.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 01:25:21.767 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2465979632416051112.jar
[MASTER] 01:25:22.022 [logback-1] WARN  TimeController - Already entered in phase: INLINING. This will mess up the timing calculations.
* test suite isTestSuite: 10
Test 0: 
HuntDisplay huntDisplay = new HuntDisplay();
Dimension preferredSize = huntDisplay.getPreferredSize();
preferredSize.height = (-1);
huntDisplay.getPreferredSize();
Test 1: 
HuntDisplay huntDisplay = new HuntDisplay();
Dimension minimumSize = huntDisplay.getMinimumSize();
minimumSize.height = (-687);
huntDisplay.getMinimumSize();
Test 2: 
HuntDisplay huntDisplay = new HuntDisplay();
BufferedImage bufferedImage = new BufferedImage(5, 5, 5);
Graphics2D createGraphics = bufferedImage.createGraphics();
huntDisplay.paintComponent(createGraphics);
Test 3: 
HuntDisplay huntDisplay = new HuntDisplay();
ImageIcon imageIcon = new ImageIcon();
TrigPoint trigPoint = new TrigPoint((-1641.55115857238), (-1641.55115857238), (-1641.55115857238));
huntDisplay.addPoint(trigPoint);
Landmark landmark = new Landmark((-1934.5294300615287), (-1934.5294300615287), imageIcon);
huntDisplay.addLandMark(landmark);
BufferedImage bufferedImage = new BufferedImage(5, 5, 5);
Graphics2D createGraphics = bufferedImage.createGraphics();
huntDisplay.paintComponent(createGraphics);
Test 4: 
HuntDisplay huntDisplay = new HuntDisplay();
TrigPoint trigPoint = new TrigPoint(0.0, 0.0, 0.0, true);
huntDisplay.addPoint(trigPoint);
// Undeclared exception!
try { 
  huntDisplay.paintComponent((Graphics) null);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("Joshua.FoxHunt.HuntDisplay", e);
}

Test 5: 
HuntDisplay huntDisplay = new HuntDisplay();
Dimension minimumSize = huntDisplay.getMinimumSize();
minimumSize.setSize(0.0, 0.0);
huntDisplay.getMinimumSize();
Test 6: 
HuntDisplay huntDisplay = new HuntDisplay();
Dimension dimension = new Dimension();
Dimension minimumSize = huntDisplay.getMinimumSize();
dimension.width = (-687);
minimumSize.setSize(dimension);
huntDisplay.getMinimumSize();
Test 7: 
HuntDisplay huntDisplay = new HuntDisplay();
huntDisplay.minSize = null;
huntDisplay.getMinimumSize();
Test 8: 
HuntDisplay huntDisplay = new HuntDisplay();
Dimension preferredSize = huntDisplay.getPreferredSize();
preferredSize.setSize(0.0, 0.0);
huntDisplay.getPreferredSize();
Test 9: 
HuntDisplay huntDisplay = new HuntDisplay();
huntDisplay.prefSize = null;
huntDisplay.getPreferredSize();

* Minimizing test suite
* test suite isTestSuite: 10
Test 0: 
HuntDisplay huntDisplay = new HuntDisplay();
Dimension preferredSize = huntDisplay.getPreferredSize();
preferredSize.height = (-1);
huntDisplay.getPreferredSize();
Test 1: 
HuntDisplay huntDisplay = new HuntDisplay();
Dimension minimumSize = huntDisplay.getMinimumSize();
minimumSize.height = (-687);
huntDisplay.getMinimumSize();
Test 2: 
HuntDisplay huntDisplay = new HuntDisplay();
BufferedImage bufferedImage = new BufferedImage(5, 5, 5);
Graphics2D createGraphics = bufferedImage.createGraphics();
huntDisplay.paintComponent(createGraphics);
Test 3: 
HuntDisplay huntDisplay = new HuntDisplay();
ImageIcon imageIcon = new ImageIcon();
TrigPoint trigPoint = new TrigPoint((-1641.55115857238), (-1641.55115857238), (-1641.55115857238));
huntDisplay.addPoint(trigPoint);
Landmark landmark = new Landmark((-1934.5294300615287), (-1934.5294300615287), imageIcon);
huntDisplay.addLandMark(landmark);
BufferedImage bufferedImage = new BufferedImage(5, 5, 5);
Graphics2D createGraphics = bufferedImage.createGraphics();
huntDisplay.paintComponent(createGraphics);
Test 4: 
HuntDisplay huntDisplay = new HuntDisplay();
TrigPoint trigPoint = new TrigPoint(0.0, 0.0, 0.0, true);
huntDisplay.addPoint(trigPoint);
// Undeclared exception!
try { 
  huntDisplay.paintComponent((Graphics) null);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("Joshua.FoxHunt.HuntDisplay", e);
}

Test 5: 
HuntDisplay huntDisplay = new HuntDisplay();
Dimension minimumSize = huntDisplay.getMinimumSize();
minimumSize.setSize(0.0, 0.0);
huntDisplay.getMinimumSize();
Test 6: 
HuntDisplay huntDisplay = new HuntDisplay();
Dimension dimension = new Dimension();
Dimension minimumSize = huntDisplay.getMinimumSize();
dimension.width = (-687);
minimumSize.setSize(dimension);
huntDisplay.getMinimumSize();
Test 7: 
HuntDisplay huntDisplay = new HuntDisplay();
huntDisplay.minSize = null;
huntDisplay.getMinimumSize();
Test 8: 
HuntDisplay huntDisplay = new HuntDisplay();
Dimension preferredSize = huntDisplay.getPreferredSize();
preferredSize.setSize(0.0, 0.0);
huntDisplay.getPreferredSize();
Test 9: 
HuntDisplay huntDisplay = new HuntDisplay();
huntDisplay.prefSize = null;
huntDisplay.getPreferredSize();

[MASTER] 01:25:23.881 [logback-1] WARN  TimeController - Already entered in phase: MINIMIZATION. This will mess up the timing calculations.
* Going to analyze the coverage criteria
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 100%
* Total number of goals: 23
* Number of covered goals: 23
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 100%
* Total number of goals: 50
* Number of covered goals: 50
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 93%
* Total number of goals: 14
* Number of covered goals: 13
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 6
* Number of covered goals: 6
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 100%
* Total number of goals: 23
* Number of covered goals: 23
[MASTER] 01:25:23.916 [logback-1] WARN  TimeController - Already entered in phase: COVERAGE_ANALYSIS. This will mess up the timing calculations.
* Generated 10 tests with total length 45
* Resulting test suite's coverage: 100% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 35%
* Compiling and checking tests
[MASTER] 01:25:24.982 [logback-1] WARN  TimeController - Already entered in phase: ASSERTION_GENERATION. This will mess up the timing calculations.
Going to execute: removeTestsThatDoNotCompile
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 01:25:25.681 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar2465979632416051112.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 01:25:25.682 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2465979632416051112.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 01:25:25.785 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar2465979632416051112.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 01:25:25.786 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2465979632416051112.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 01:25:25.868 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar2465979632416051112.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 01:25:25.871 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2465979632416051112.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 01:25:25.930 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar2465979632416051112.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 01:25:25.931 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2465979632416051112.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
** Write a test suite: 1 called: 1 to improve: false
** Write a test suite: 2 called: 2 to improve: false
** Write a test suite: 3 called: 3 to improve: false
[MASTER] 01:25:26.011 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar2465979632416051112.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 01:25:26.012 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2465979632416051112.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
** Write a test suite: 1 called: 1 to improve: false
** Write a test suite: 2 called: 2 to improve: false
** Write a test suite: 3 called: 3 to improve: false
[MASTER] 01:25:26.223 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar2465979632416051112.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
* Writing tests to file
[MASTER] 01:25:26.224 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2465979632416051112.jar
[MASTER] 01:25:26.243 [logback-1] WARN  TimeController - Already entered in phase: JUNIT_CHECK. This will mess up the timing calculations.
* Writing JUnit test case 'HuntDisplay_ESTest' to evosuite-tests
* Writing JUnit test case 'HuntDisplay_Original_ESTest' to evosuite-tests
** Write a test suite: 0 called: 0 to improve: false
** Write a test suite: 1 called: 1 to improve: false
** Write a test suite: 2 called: 2 to improve: false
** Write a test suite: 3 called: 3 to improve: false
* Done!

* Computation finished
t.code.CtConstructorCallImpl
statement is: huntDisplay.addPoint(trigPoint), class spoon.support.reflect.code.CtInvocationImpl
invocation is: huntDisplay.addPoint(trigPoint) target is: huntDisplay method is: addPoint(TrigPoint)
source statement: Joshua.FoxHunt.HuntDisplay()V callee: VariableReference: Statement 0, type Joshua.FoxHunt.HuntDisplayindex is: 0
Matched Method is: addPoint(LJoshua/FoxHunt/TrigPoint;)V
statement is: BufferedImage bufferedImage = new BufferedImage(10, 10, 10), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Graphics2D createGraphics = bufferedImage.createGraphics(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: bufferedImage.createGraphics() target is: bufferedImage method is: createGraphics()
source statement: java.awt.image.BufferedImage(III)V callee: VariableReference: Statement 3, type java.awt.image.BufferedImageindex is: 10
Matched Method is: createGraphics()Ljava/awt/Graphics2D;
statement is: ImageIcon imageIcon = new ImageIcon("path/to/image.jpg"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Landmark landmark = new Landmark(10, 10, imageIcon), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: huntDisplay.addLandMark(landmark), class spoon.support.reflect.code.CtInvocationImpl
invocation is: huntDisplay.addLandMark(landmark) target is: huntDisplay method is: addLandMark(Landmark)
source statement: Joshua.FoxHunt.HuntDisplay()V callee: VariableReference: Statement 0, type Joshua.FoxHunt.HuntDisplayindex is: 0
Matched Method is: addLandMark(LJoshua/FoxHunt/Landmark;)V
statement is: huntDisplay.paintComponent(createGraphics), class spoon.support.reflect.code.CtInvocationImpl
invocation is: huntDisplay.paintComponent(createGraphics) target is: huntDisplay method is: paintComponent(Graphics2D)
source statement: Joshua.FoxHunt.HuntDisplay()V callee: VariableReference: Statement 0, type Joshua.FoxHunt.HuntDisplayindex is: 0
Matched Method is: paintComponent(Ljava/awt/Graphics;)V
TestCase is: HuntDisplay huntDisplay = new HuntDisplay();
double _double = 10.5;
double _double = 23.7;
double _double = 98.4;
boolean _boolean = true;
TrigPoint trigPoint = new TrigPoint(_double, _double, (int) _double, _boolean);
huntDisplay.addPoint(trigPoint);
int _int = 10;
int _int = 10;
int _int = 10;
BufferedImage bufferedImage = new BufferedImage(_int, _int, _int);
Graphics2D createGraphics = ((BufferedImage) _double).createGraphics();
int _int = 10;
int _int = 10;
Landmark landmark = new Landmark(_int, _int, (ImageIcon) trigPoint);
huntDisplay.addLandMark(landmark);
huntDisplay.paintComponent(createGraphics);

statement is: Joshua.FoxHunt.HuntDisplay()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class Joshua.FoxHunt.HuntDisplay
statement code is: HuntDisplay huntDisplay = new HuntDisplay()
statement is: Joshua.FoxHunt.TrigPoint(DDIZ)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class Joshua.FoxHunt.TrigPoint
statement code is: TrigPoint trigPoint = new TrigPoint(2312.0, 2312.0, 50, true)
statement is: addPoint(LJoshua/FoxHunt/TrigPoint;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: huntDisplay.addPoint(arg0)
statement is: paintComponent(Ljava/awt/Graphics;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: huntDisplay.paintComponent((Graphics) null)
test data is: HuntDisplay huntDisplay = new HuntDisplay();
TrigPoint trigPoint = new TrigPoint(2312.0, 2312.0, 50, true);
huntDisplay.addPoint(trigPoint);
huntDisplay.paintComponent((Graphics) null);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        HuntDisplay huntDisplay = new HuntDisplay();
        TrigPoint trigPoint = new TrigPoint(2312.0, 2312.0, 50, true);
        huntDisplay.addPoint(trigPoint);
        huntDisplay.paintComponent(((Graphics) (null)));
    }
}
statement is: HuntDisplay huntDisplay = new HuntDisplay(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: TrigPoint trigPoint = new TrigPoint(2312.0, 2312.0, 50, true), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: huntDisplay.addPoint(trigPoint), class spoon.support.reflect.code.CtInvocationImpl
invocation is: huntDisplay.addPoint(trigPoint) target is: huntDisplay method is: addPoint(TrigPoint)
source statement: Joshua.FoxHunt.HuntDisplay()V callee: VariableReference: Statement 0, type Joshua.FoxHunt.HuntDisplayindex is: 0
Matched Method is: addPoint(LJoshua/FoxHunt/TrigPoint;)V
statement is: huntDisplay.paintComponent(((Graphics) (null))), class spoon.support.reflect.code.CtInvocationImpl
invocation is: huntDisplay.paintComponent(((Graphics) (null))) target is: huntDisplay method is: paintComponent(Graphics)
source statement: Joshua.FoxHunt.HuntDisplay()V callee: VariableReference: Statement 0, type Joshua.FoxHunt.HuntDisplayindex is: 0
Matched Method is: paintComponent(Ljava/awt/Graphics;)V
i 0 Parameters size() 0 Num of Method Parameters: 1
TestCase is: HuntDisplay huntDisplay = new HuntDisplay();
double _double = 2312.0;
double _double = 2312.0;
int _int = 50;
boolean _boolean = true;
TrigPoint trigPoint = new TrigPoint(_double, _double, _int, _boolean);
huntDisplay.addPoint(trigPoint);
Graphics graphics = null;
huntDisplay.paintComponent(graphics);

statement is: Joshua.FoxHunt.HuntDisplay()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class Joshua.FoxHunt.HuntDisplay
statement code is: HuntDisplay huntDisplay = new HuntDisplay()
statement is: getPreferredSize()Ljava/awt/Dimension; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.awt.Dimension
statement code is: Dimension preferredSize = huntDisplay.getPreferredSize()
statement is: setSize(II)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: dimension.setSize((-1), 400)
statement is: getMinimumSize()Ljava/awt/Dimension; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.awt.Dimension
statement code is: Dimension minimumSize = huntDisplay.getMinimumSize()
statement is: setSize(Ljava/awt/geom/Dimension2D;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: dimension.setSize((Dimension2D) arg0)
statement is: getMinimumSize()Ljava/awt/Dimension; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.awt.Dimension
statement code is: Dimension minimumSize = huntDisplay.getMinimumSize()
test data is: HuntDisplay huntDisplay = new HuntDisplay();
Dimension preferredSize = huntDisplay.getPreferredSize();
preferredSize.setSize((-1), 400);
Dimension minimumSize = huntDisplay.getMinimumSize();
minimumSize.setSize((Dimension2D) preferredSize);
huntDisplay.getMinimumSize();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        HuntDisplay huntDisplay = new HuntDisplay();
        Dimension preferredSize = huntDisplay.getPreferredSize();
        preferredSize.setSize(-1, 400);// The preferred size is set to a negative value (-1) to ensure that the component takes up as much space as possible in its container.

        Dimension minimumSize = huntDisplay.getMinimumSize();
        minimumSize.setSize(((Dimension2D) (preferredSize)));// The minimum size is set to the same value as the preferred size to ensure that the component does not shrink beyond its preferred size.

        huntDisplay.getMinimumSize();
    }
}
statement is: HuntDisplay huntDisplay = new HuntDisplay(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Dimension preferredSize = huntDisplay.getPreferredSize(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: huntDisplay.getPreferredSize() target is: huntDisplay method is: getPreferredSize()
source statement: Joshua.FoxHunt.HuntDisplay()V callee: VariableReference: Statement 0, type Joshua.FoxHunt.HuntDisplayindex is: 0
Matched Method is: getPreferredSize()Ljava/awt/Dimension;
statement is: preferredSize.setSize(-1, 400)// The preferred size is set to a negative value (-1) to ensure that the component takes up as much space as possible in its container.
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: preferredSize.setSize(-1, 400)// The preferred size is set to a negative value (-1) to ensure that the component takes up as much space as possible in its container.
 target is: preferredSize method is: setSize(int,int)
source statement: getPreferredSize()Ljava/awt/Dimension; callee: VariableReference: Statement 1, type java.awt.Dimensionindex is: 1
Matched Method is: setSize(II)V
i 1 Parameters size() 1 Num of Method Parameters: 2
statement is: Dimension minimumSize = huntDisplay.getMinimumSize(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: huntDisplay.getMinimumSize() target is: huntDisplay method is: getMinimumSize()
source statement: Joshua.FoxHunt.HuntDisplay()V callee: VariableReference: Statement 0, type Joshua.FoxHunt.HuntDisplayindex is: 0
source statement: Joshua.FoxHunt.HuntDisplay()V callee: VariableReference: Statement 0, type Joshua.FoxHunt.HuntDisplayindex is: 0
Matched Method is: getMinimumSize()Ljava/awt/Dimension;
statement is: minimumSize.setSize(((Dimension2D) (preferredSize)))// The minimum size is set to the same value as the preferred size to ensure that the component does not shrink beyond its preferred size.
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: minimumSize.setSize(((Dimension2D) (preferredSize)))// The minimum size is set to the same value as the preferred size to ensure that the component does not shrink beyond its preferred size.
 target is: minimumSize method is: setSize(Dimension2D)
source statement: getMinimumSize()Ljava/awt/Dimension; callee: VariableReference: Statement 3, type java.awt.Dimensionindex is: 5
Matched Method is: setSize(Ljava/awt/geom/Dimension2D;)V
statement is: huntDisplay.getMinimumSize(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: huntDisplay.getMinimumSize() target is: huntDisplay method is: getMinimumSize()
source statement: Joshua.FoxHunt.HuntDisplay()V callee: VariableReference: Statement 0, type Joshua.FoxHunt.HuntDisplayindex is: 0
source statement: Joshua.FoxHunt.HuntDisplay()V callee: VariableReference: Statement 0, type Joshua.FoxHunt.HuntDisplayindex is: 0
Matched Method is: getMinimumSize()Ljava/awt/Dimension;
TestCase is: HuntDisplay huntDisplay = new HuntDisplay();
Dimension preferredSize = huntDisplay.getPreferredSize();
int _int = 400;
int _int = null;
preferredSize.setSize(_int, _int);
huntDisplay.getMinimumSize();
((Dimension2D) _int).setSize((Dimension2D) preferredSize);
huntDisplay.getMinimumSize();

statement is: Joshua.FoxHunt.HuntDisplay()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class Joshua.FoxHunt.HuntDisplay
statement code is: HuntDisplay huntDisplay = new HuntDisplay()
statement is: org.evosuite.testcase.statements.AssignmentStatement@1a2b74e0 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.awt.Dimension
statement code is: huntDisplay.minSize = null
statement is: getMinimumSize()Ljava/awt/Dimension; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.awt.Dimension
statement code is: Dimension minimumSize = huntDisplay.getMinimumSize()
test data is: HuntDisplay huntDisplay = new HuntDisplay();
huntDisplay.minSize = null;
huntDisplay.getMinimumSize();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        HuntDisplay huntDisplay = new HuntDisplay();
        huntDisplay.minSize = "A";
        huntDisplay.getMinimumSize();
    }
}
statement is: HuntDisplay huntDisplay = new HuntDisplay(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: huntDisplay.minSize = "A", class spoon.support.reflect.code.CtAssignmentImpl
statement is: huntDisplay.getMinimumSize(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: huntDisplay.getMinimumSize() target is: huntDisplay method is: getMinimumSize()
source statement: Joshua.FoxHunt.HuntDisplay()V callee: VariableReference: Statement 0, type Joshua.FoxHunt.HuntDisplayindex is: 0
Matched Method is: getMinimumSize()Ljava/awt/Dimension;
TestCase is: HuntDisplay huntDisplay = new HuntDisplay();
huntDisplay.getMinimumSize();

statement is: Joshua.FoxHunt.HuntDisplay()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class Joshua.FoxHunt.HuntDisplay
statement code is: HuntDisplay huntDisplay = new HuntDisplay()
statement is: getPreferredSize()Ljava/awt/Dimension; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.awt.Dimension
statement code is: Dimension preferredSize = huntDisplay.getPreferredSize()
statement is: setSize(DD)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: dimension.setSize((double) 400, (double) (-1))
statement is: getPreferredSize()Ljava/awt/Dimension; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.awt.Dimension
statement code is: Dimension preferredSize = huntDisplay.getPreferredSize()
test data is: HuntDisplay huntDisplay = new HuntDisplay();
Dimension preferredSize = huntDisplay.getPreferredSize();
preferredSize.setSize((double) 400, (double) (-1));
huntDisplay.getPreferredSize();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        HuntDisplay huntDisplay = new HuntDisplay();
        Dimension preferredSize = huntDisplay.getPreferredSize();
        preferredSize.setSize(((double) (600)), ((double) (-1)));
        huntDisplay.getPreferredSize();
    }
}
statement is: HuntDisplay huntDisplay = new HuntDisplay(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Dimension preferredSize = huntDisplay.getPreferredSize(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: huntDisplay.getPreferredSize() target is: huntDisplay method is: getPreferredSize()
source statement: Joshua.FoxHunt.HuntDisplay()V callee: VariableReference: Statement 0, type Joshua.FoxHunt.HuntDisplayindex is: 0
source statement: Joshua.FoxHunt.HuntDisplay()V callee: VariableReference: Statement 0, type Joshua.FoxHunt.HuntDisplayindex is: 0
Matched Method is: getPreferredSize()Ljava/awt/Dimension;
statement is: preferredSize.setSize(((double) (600)), ((double) (-1))), class spoon.support.reflect.code.CtInvocationImpl
invocation is: preferredSize.setSize(((double) (600)), ((double) (-1))) target is: preferredSize method is: setSize(double,double)
source statement: getPreferredSize()Ljava/awt/Dimension; callee: VariableReference: Statement 1, type java.awt.Dimensionindex is: 1
Matched Method is: setSize(DD)V
i 1 Parameters size() 1 Num of Method Parameters: 2
statement is: huntDisplay.getPreferredSize(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: huntDisplay.getPreferredSize() target is: huntDisplay method is: getPreferredSize()
source statement: Joshua.FoxHunt.HuntDisplay()V callee: VariableReference: Statement 0, type Joshua.FoxHunt.HuntDisplayindex is: 0
source statement: Joshua.FoxHunt.HuntDisplay()V callee: VariableReference: Statement 0, type Joshua.FoxHunt.HuntDisplayindex is: 0
Matched Method is: getPreferredSize()Ljava/awt/Dimension;
TestCase is: HuntDisplay huntDisplay = new HuntDisplay();
Dimension preferredSize = huntDisplay.getPreferredSize();
int _int = 600;
int _int = null;
preferredSize.setSize((double) _int, (double) _int);
huntDisplay.getPreferredSize();

statement is: Joshua.FoxHunt.HuntDisplay()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class Joshua.FoxHunt.HuntDisplay
statement code is: HuntDisplay huntDisplay = new HuntDisplay()
statement is: getPreferredSize()Ljava/awt/Dimension; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.awt.Dimension
statement code is: Dimension preferredSize = huntDisplay.getPreferredSize()
statement is: setSize(II)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: dimension.setSize((-2366), 0)
statement is: getPreferredSize()Ljava/awt/Dimension; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.awt.Dimension
statement code is: Dimension preferredSize = huntDisplay.getPreferredSize()
test data is: HuntDisplay huntDisplay = new HuntDisplay();
Dimension preferredSize = huntDisplay.getPreferredSize();
preferredSize.setSize((-2366), 0);
huntDisplay.getPreferredSize();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        HuntDisplay huntDisplay = new HuntDisplay();
        Dimension preferredSize = huntDisplay.getPreferredSize();
        preferredSize.setSize(Dimension(1000, 500));// Setting a more illustrative value for the width and height of the dimension object.

        huntDisplay.getPreferredSize();
    }
}
statement is: HuntDisplay huntDisplay = new HuntDisplay(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Dimension preferredSize = huntDisplay.getPreferredSize(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: huntDisplay.getPreferredSize() target is: huntDisplay method is: getPreferredSize()
source statement: Joshua.FoxHunt.HuntDisplay()V callee: VariableReference: Statement 0, type Joshua.FoxHunt.HuntDisplayindex is: 0
source statement: Joshua.FoxHunt.HuntDisplay()V callee: VariableReference: Statement 0, type Joshua.FoxHunt.HuntDisplayindex is: 0
Matched Method is: getPreferredSize()Ljava/awt/Dimension;
statement is: preferredSize.setSize(Dimension(1000, 500))// Setting a more illustrative value for the width and height of the dimension object.
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: preferredSize.setSize(Dimension(1000, 500))// Setting a more illustrative value for the width and height of the dimension object.
 target is: preferredSize method is: setSize()
statement is: huntDisplay.getPreferredSize(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: huntDisplay.getPreferredSize() target is: huntDisplay method is: getPreferredSize()
source statement: Joshua.FoxHunt.HuntDisplay()V callee: VariableReference: Statement 0, type Joshua.FoxHunt.HuntDisplayindex is: 0
source statement: Joshua.FoxHunt.HuntDisplay()V callee: VariableReference: Statement 0, type Joshua.FoxHunt.HuntDisplayindex is: 0
Matched Method is: getPreferredSize()Ljava/awt/Dimension;
TestCase is: HuntDisplay huntDisplay = new HuntDisplay();
huntDisplay.getPreferredSize();
huntDisplay.getPreferredSize();

statement is: Joshua.FoxHunt.HuntDisplay()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class Joshua.FoxHunt.HuntDisplay
statement code is: HuntDisplay huntDisplay = new HuntDisplay()
statement is: getPreferredSize()Ljava/awt/Dimension; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.awt.Dimension
statement code is: Dimension preferredSize = huntDisplay.getPreferredSize()
statement is: setSize(DD)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: dimension.setSize(0.0, (double) 50)
statement is: getPreferredSize()Ljava/awt/Dimension; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.awt.Dimension
statement code is: Dimension preferredSize = huntDisplay.getPreferredSize()
test data is: HuntDisplay huntDisplay = new HuntDisplay();
Dimension preferredSize = huntDisplay.getPreferredSize();
preferredSize.setSize(0.0, (double) 50);
huntDisplay.getPreferredSize();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        HuntDisplay huntDisplay = new HuntDisplay();
        Dimension preferredSize = huntDisplay.getPreferredSize();
        preferredSize.setSize(0.0, ((double) (50)));
        huntDisplay.getPreferredSize();
    }
}
statement is: HuntDisplay huntDisplay = new HuntDisplay(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Dimension preferredSize = huntDisplay.getPreferredSize(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: huntDisplay.getPreferredSize() target is: huntDisplay method is: getPreferredSize()
source statement: Joshua.FoxHunt.HuntDisplay()V callee: VariableReference: Statement 0, type Joshua.FoxHunt.HuntDisplayindex is: 0
source statement: Joshua.FoxHunt.HuntDisplay()V callee: VariableReference: Statement 0, type Joshua.FoxHunt.HuntDisplayindex is: 0
Matched Method is: getPreferredSize()Ljava/awt/Dimension;
statement is: preferredSize.setSize(0.0, ((double) (50))), class spoon.support.reflect.code.CtInvocationImpl
invocation is: preferredSize.setSize(0.0, ((double) (50))) target is: preferredSize method is: setSize(double,double)
source statement: getPreferredSize()Ljava/awt/Dimension; callee: VariableReference: Statement 1, type java.awt.Dimensionindex is: 1
Matched Method is: setSize(DD)V
statement is: huntDisplay.getPreferredSize(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: huntDisplay.getPreferredSize() target is: huntDisplay method is: getPreferredSize()
source statement: Joshua.FoxHunt.HuntDisplay()V callee: VariableReference: Statement 0, type Joshua.FoxHunt.HuntDisplayindex is: 0
source statement: Joshua.FoxHunt.HuntDisplay()V callee: VariableReference: Statement 0, type Joshua.FoxHunt.HuntDisplayindex is: 0
Matched Method is: getPreferredSize()Ljava/awt/Dimension;
TestCase is: HuntDisplay huntDisplay = new HuntDisplay();
Dimension preferredSize = huntDisplay.getPreferredSize();
double _double = 0.0;
int _int = 50;
preferredSize.setSize(_double, (double) _int);
huntDisplay.getPreferredSize();

statement is: Joshua.FoxHunt.HuntDisplay()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class Joshua.FoxHunt.HuntDisplay
statement code is: HuntDisplay huntDisplay = new HuntDisplay()
statement is: org.evosuite.testcase.statements.AssignmentStatement@c3b07b64 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.awt.Dimension
statement code is: huntDisplay.prefSize = null
statement is: getPreferredSize()Ljava/awt/Dimension; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.awt.Dimension
statement code is: Dimension preferredSize = huntDisplay.getPreferredSize()
test data is: HuntDisplay huntDisplay = new HuntDisplay();
huntDisplay.prefSize = null;
huntDisplay.getPreferredSize();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        HuntDisplay huntDisplay = new HuntDisplay();
        huntDisplay.prefSize = new Dimension(300, 50);// setting the preferred size to 300x50

        huntDisplay.getPreferredSize();
    }
}
statement is: HuntDisplay huntDisplay = new HuntDisplay(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: huntDisplay.prefSize = new Dimension(300, 50)// setting the preferred size to 300x50
, class spoon.support.reflect.code.CtAssignmentImpl
statement is: huntDisplay.getPreferredSize(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: huntDisplay.getPreferredSize() target is: huntDisplay method is: getPreferredSize()
source statement: Joshua.FoxHunt.HuntDisplay()V callee: VariableReference: Statement 0, type Joshua.FoxHunt.HuntDisplayindex is: 0
Matched Method is: getPreferredSize()Ljava/awt/Dimension;
TestCase is: HuntDisplay huntDisplay = new HuntDisplay();
huntDisplay.getPreferredSize();

* test suite isTestSuite: 22
Test 0: 
HuntDisplay huntDisplay = new HuntDisplay();
Dimension preferredSize = huntDisplay.getPreferredSize();
BasicDesktopPaneUI basicDesktopPaneUI = new BasicDesktopPaneUI();
Dimension minimumSize = basicDesktopPaneUI.getMinimumSize(huntDisplay);
preferredSize.setSize(minimumSize);
huntDisplay.minSize = preferredSize;
huntDisplay.getMinimumSize();

Test 1: 
HuntDisplay huntDisplay = new HuntDisplay();
Dimension minimumSize = huntDisplay.getMinimumSize();
minimumSize.setSize((double) 400, (double) (-1));
huntDisplay.getMinimumSize();
Test 2: 
HuntDisplay huntDisplay = new HuntDisplay();
BufferedImage bufferedImage = new BufferedImage(10, 10, 10);
Graphics2D createGraphics = bufferedImage.createGraphics();
huntDisplay.paintComponent(createGraphics);
Test 3: 
HuntDisplay huntDisplay = new HuntDisplay();
TrigPoint trigPoint = new TrigPoint(0.0, 0.0, 0, false);
huntDisplay.addPoint(trigPoint);
BufferedImage bufferedImage = new BufferedImage(10, 10, 10);
Graphics2D createGraphics = bufferedImage.createGraphics();
ImageIcon imageIcon = new ImageIcon();
Landmark landmark = new Landmark(10, 10, imageIcon);
huntDisplay.addLandMark(landmark);
huntDisplay.paintComponent(createGraphics);
Test 4: 
HuntDisplay huntDisplay = new HuntDisplay();
TrigPoint trigPoint = new TrigPoint(2312.0, 2312.0, 50, true);
huntDisplay.addPoint(trigPoint);
// Undeclared exception!
try { 
  huntDisplay.paintComponent((Graphics) null);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("Joshua.FoxHunt.HuntDisplay", e);
}

Test 5: 
HuntDisplay huntDisplay = new HuntDisplay();
Dimension preferredSize = huntDisplay.getPreferredSize();
preferredSize.setSize((-1), 400);
Dimension minimumSize = huntDisplay.getMinimumSize();
minimumSize.setSize((Dimension2D) preferredSize);
huntDisplay.getMinimumSize();
Test 6: 
HuntDisplay huntDisplay = new HuntDisplay();
huntDisplay.minSize = null;
huntDisplay.getMinimumSize();
Test 7: 
HuntDisplay huntDisplay = new HuntDisplay();
Dimension preferredSize = huntDisplay.getPreferredSize();
preferredSize.setSize((double) 400, (double) (-1));
huntDisplay.getPreferredSize();
Test 8: 
HuntDisplay huntDisplay = new HuntDisplay();
Dimension preferredSize = huntDisplay.getPreferredSize();
preferredSize.setSize((-2366), 0);
huntDisplay.getPreferredSize();
Test 9: 
HuntDisplay huntDisplay = new HuntDisplay();
Dimension preferredSize = huntDisplay.getPreferredSize();
preferredSize.setSize(0.0, (double) 50);
huntDisplay.getPreferredSize();
Test 10: 
HuntDisplay huntDisplay = new HuntDisplay();
huntDisplay.prefSize = null;
huntDisplay.getPreferredSize();
Test 11: 
HuntDisplay huntDisplay = new HuntDisplay();
BasicDesktopPaneUI basicDesktopPaneUI = new BasicDesktopPaneUI();
huntDisplay.getMinimumSize();

Test 12: 
HuntDisplay huntDisplay = new HuntDisplay();
Dimension minimumSize = huntDisplay.getMinimumSize();
minimumSize.setSize((double) 400, (double) 500);
huntDisplay.getMinimumSize();

Test 13: 
HuntDisplay huntDisplay = new HuntDisplay();
int _int = 100;
BufferedImage bufferedImage = new BufferedImage(100, 50, 24);
Graphics2D createGraphics = ((BufferedImage) _int).createGraphics();
huntDisplay.paintComponent(createGraphics);

Test 14: 
HuntDisplay huntDisplay = new HuntDisplay();
double _double = 98.4;
TrigPoint trigPoint = new TrigPoint(10.5, 23.7, (int) 98.4, true);
huntDisplay.addPoint(trigPoint);
int _int = 10;
int _int = 10;
int _int = 10;
BufferedImage bufferedImage = new BufferedImage(_int, _int, _int);
Graphics2D createGraphics = ((BufferedImage) _double).createGraphics();
int _int = 10;
int _int = 10;
Landmark landmark = new Landmark(_int, _int, (ImageIcon) trigPoint);
huntDisplay.addLandMark(landmark);
huntDisplay.paintComponent(createGraphics);

Test 15: 
HuntDisplay huntDisplay = new HuntDisplay();
TrigPoint trigPoint = new TrigPoint(2312.0, 2312.0, 50, true);
huntDisplay.addPoint(trigPoint);
huntDisplay.paintComponent((Graphics) null);

Test 16: 
HuntDisplay huntDisplay = new HuntDisplay();
Dimension preferredSize = huntDisplay.getPreferredSize();
int _int = null;
preferredSize.setSize(400, (int) (Integer) null);
huntDisplay.getMinimumSize();
((Dimension2D) _int).setSize((Dimension2D) preferredSize);
huntDisplay.getMinimumSize();

Test 17: 
HuntDisplay huntDisplay = new HuntDisplay();
huntDisplay.getMinimumSize();

Test 18: 
HuntDisplay huntDisplay = new HuntDisplay();
Dimension preferredSize = huntDisplay.getPreferredSize();
preferredSize.setSize((double) 600, (double) (Double) null);
huntDisplay.getPreferredSize();

Test 19: 
HuntDisplay huntDisplay = new HuntDisplay();
huntDisplay.getPreferredSize();
huntDisplay.getPreferredSize();

Test 20: 
HuntDisplay huntDisplay = new HuntDisplay();
Dimension preferredSize = huntDisplay.getPreferredSize();
preferredSize.setSize(0.0, (double) 50);
huntDisplay.getPreferredSize();

Test 21: 
HuntDisplay huntDisplay = new HuntDisplay();
huntDisplay.getPreferredSize();


* Generated after the refinement and before minimization 22 tests with total length 104
* test suite isTestSuite: 22
Test 0: 
HuntDisplay huntDisplay = new HuntDisplay();
Dimension preferredSize = huntDisplay.getPreferredSize();
BasicDesktopPaneUI basicDesktopPaneUI = new BasicDesktopPaneUI();
Dimension minimumSize = basicDesktopPaneUI.getMinimumSize(huntDisplay);
preferredSize.setSize(minimumSize);
huntDisplay.minSize = preferredSize;
huntDisplay.getMinimumSize();

Test 1: 
HuntDisplay huntDisplay = new HuntDisplay();
Dimension minimumSize = huntDisplay.getMinimumSize();
minimumSize.setSize((double) 400, (double) (-1));
huntDisplay.getMinimumSize();
Test 2: 
HuntDisplay huntDisplay = new HuntDisplay();
BufferedImage bufferedImage = new BufferedImage(10, 10, 10);
Graphics2D createGraphics = bufferedImage.createGraphics();
huntDisplay.paintComponent(createGraphics);
Test 3: 
HuntDisplay huntDisplay = new HuntDisplay();
TrigPoint trigPoint = new TrigPoint(0.0, 0.0, 0, false);
huntDisplay.addPoint(trigPoint);
BufferedImage bufferedImage = new BufferedImage(10, 10, 10);
Graphics2D createGraphics = bufferedImage.createGraphics();
ImageIcon imageIcon = new ImageIcon();
Landmark landmark = new Landmark(10, 10, imageIcon);
huntDisplay.addLandMark(landmark);
huntDisplay.paintComponent(createGraphics);
Test 4: 
HuntDisplay huntDisplay = new HuntDisplay();
TrigPoint trigPoint = new TrigPoint(2312.0, 2312.0, 50, true);
huntDisplay.addPoint(trigPoint);
// Undeclared exception!
try { 
  huntDisplay.paintComponent((Graphics) null);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("Joshua.FoxHunt.HuntDisplay", e);
}

Test 5: 
HuntDisplay huntDisplay = new HuntDisplay();
Dimension preferredSize = huntDisplay.getPreferredSize();
preferredSize.setSize((-1), 400);
Dimension minimumSize = huntDisplay.getMinimumSize();
minimumSize.setSize((Dimension2D) preferredSize);
huntDisplay.getMinimumSize();
Test 6: 
HuntDisplay huntDisplay = new HuntDisplay();
huntDisplay.minSize = null;
huntDisplay.getMinimumSize();
Test 7: 
HuntDisplay huntDisplay = new HuntDisplay();
Dimension preferredSize = huntDisplay.getPreferredSize();
preferredSize.setSize((double) 400, (double) (-1));
huntDisplay.getPreferredSize();
Test 8: 
HuntDisplay huntDisplay = new HuntDisplay();
Dimension preferredSize = huntDisplay.getPreferredSize();
preferredSize.setSize((-2366), 0);
huntDisplay.getPreferredSize();
Test 9: 
HuntDisplay huntDisplay = new HuntDisplay();
Dimension preferredSize = huntDisplay.getPreferredSize();
preferredSize.setSize(0.0, (double) 50);
huntDisplay.getPreferredSize();
Test 10: 
HuntDisplay huntDisplay = new HuntDisplay();
huntDisplay.prefSize = null;
huntDisplay.getPreferredSize();
Test 11: 
HuntDisplay huntDisplay = new HuntDisplay();
BasicDesktopPaneUI basicDesktopPaneUI = new BasicDesktopPaneUI();
huntDisplay.getMinimumSize();

Test 12: 
HuntDisplay huntDisplay = new HuntDisplay();
Dimension minimumSize = huntDisplay.getMinimumSize();
minimumSize.setSize((double) 400, (double) 500);
huntDisplay.getMinimumSize();

Test 13: 
HuntDisplay huntDisplay = new HuntDisplay();
int _int = 100;
BufferedImage bufferedImage = new BufferedImage(100, 50, 24);
Graphics2D createGraphics = ((BufferedImage) _int).createGraphics();
huntDisplay.paintComponent(createGraphics);

Test 14: 
HuntDisplay huntDisplay = new HuntDisplay();
double _double = 98.4;
TrigPoint trigPoint = new TrigPoint(10.5, 23.7, (int) 98.4, true);
huntDisplay.addPoint(trigPoint);
int _int = 10;
int _int = 10;
int _int = 10;
BufferedImage bufferedImage = new BufferedImage(_int, _int, _int);
Graphics2D createGraphics = ((BufferedImage) _double).createGraphics();
int _int = 10;
int _int = 10;
Landmark landmark = new Landmark(_int, _int, (ImageIcon) trigPoint);
huntDisplay.addLandMark(landmark);
huntDisplay.paintComponent(createGraphics);

Test 15: 
HuntDisplay huntDisplay = new HuntDisplay();
TrigPoint trigPoint = new TrigPoint(2312.0, 2312.0, 50, true);
huntDisplay.addPoint(trigPoint);
huntDisplay.paintComponent((Graphics) null);

Test 16: 
HuntDisplay huntDisplay = new HuntDisplay();
Dimension preferredSize = huntDisplay.getPreferredSize();
int _int = null;
preferredSize.setSize(400, (int) (Integer) null);
huntDisplay.getMinimumSize();
((Dimension2D) _int).setSize((Dimension2D) preferredSize);
huntDisplay.getMinimumSize();

Test 17: 
HuntDisplay huntDisplay = new HuntDisplay();
huntDisplay.getMinimumSize();

Test 18: 
HuntDisplay huntDisplay = new HuntDisplay();
Dimension preferredSize = huntDisplay.getPreferredSize();
preferredSize.setSize((double) 600, (double) (Double) null);
huntDisplay.getPreferredSize();

Test 19: 
HuntDisplay huntDisplay = new HuntDisplay();
huntDisplay.getPreferredSize();
huntDisplay.getPreferredSize();

Test 20: 
HuntDisplay huntDisplay = new HuntDisplay();
Dimension preferredSize = huntDisplay.getPreferredSize();
preferredSize.setSize(0.0, (double) 50);
huntDisplay.getPreferredSize();

Test 21: 
HuntDisplay huntDisplay = new HuntDisplay();
huntDisplay.getPreferredSize();


* Minimizing test suite
* test suite isTestSuite: 11
Test 0: 
HuntDisplay huntDisplay = new HuntDisplay();
Dimension preferredSize = huntDisplay.getPreferredSize();
BasicDesktopPaneUI basicDesktopPaneUI = new BasicDesktopPaneUI();
Dimension minimumSize = basicDesktopPaneUI.getMinimumSize(huntDisplay);
preferredSize.setSize(minimumSize);
huntDisplay.minSize = preferredSize;
huntDisplay.getMinimumSize();

Test 1: 
HuntDisplay huntDisplay = new HuntDisplay();
TrigPoint trigPoint = new TrigPoint(2312.0, 2312.0, 50, true);
huntDisplay.addPoint(trigPoint);
// Undeclared exception!
try { 
  huntDisplay.paintComponent((Graphics) null);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("Joshua.FoxHunt.HuntDisplay", e);
}

Test 2: 
HuntDisplay huntDisplay = new HuntDisplay();
Dimension minimumSize = huntDisplay.getMinimumSize();
minimumSize.setSize((double) 400, (double) (-1));
huntDisplay.getMinimumSize();
Test 3: 
HuntDisplay huntDisplay = new HuntDisplay();
TrigPoint trigPoint = new TrigPoint(0.0, 0.0, 0, false);
huntDisplay.addPoint(trigPoint);
BufferedImage bufferedImage = new BufferedImage(10, 10, 10);
Graphics2D createGraphics = bufferedImage.createGraphics();
ImageIcon imageIcon = new ImageIcon();
Landmark landmark = new Landmark(10, 10, imageIcon);
huntDisplay.addLandMark(landmark);
huntDisplay.paintComponent(createGraphics);
Test 4: 
HuntDisplay huntDisplay = new HuntDisplay();
BufferedImage bufferedImage = new BufferedImage(10, 10, 10);
Graphics2D createGraphics = bufferedImage.createGraphics();
huntDisplay.paintComponent(createGraphics);
Test 5: 
HuntDisplay huntDisplay = new HuntDisplay();
Dimension preferredSize = huntDisplay.getPreferredSize();
preferredSize.setSize((-1), 400);
Dimension minimumSize = huntDisplay.getMinimumSize();
minimumSize.setSize((Dimension2D) preferredSize);
huntDisplay.getMinimumSize();
Test 6: 
HuntDisplay huntDisplay = new HuntDisplay();
huntDisplay.minSize = null;
huntDisplay.getMinimumSize();
Test 7: 
HuntDisplay huntDisplay = new HuntDisplay();
Dimension preferredSize = huntDisplay.getPreferredSize();
preferredSize.setSize((double) 400, (double) (-1));
huntDisplay.getPreferredSize();
Test 8: 
HuntDisplay huntDisplay = new HuntDisplay();
Dimension preferredSize = huntDisplay.getPreferredSize();
preferredSize.setSize((-2366), 0);
huntDisplay.getPreferredSize();
Test 9: 
HuntDisplay huntDisplay = new HuntDisplay();
Dimension preferredSize = huntDisplay.getPreferredSize();
preferredSize.setSize(0.0, (double) 50);
huntDisplay.getPreferredSize();
Test 10: 
HuntDisplay huntDisplay = new HuntDisplay();
huntDisplay.prefSize = null;
huntDisplay.getPreferredSize();

* Going to analyze the coverage criteria
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 100%
* Total number of goals: 23
* Number of covered goals: 23
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 100%
* Total number of goals: 50
* Number of covered goals: 50
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 100%
* Total number of goals: 14
* Number of covered goals: 14
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 6
* Number of covered goals: 6
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 100%
* Total number of goals: 23
* Number of covered goals: 23
* Generated 11 tests with total length 52
* Resulting test suite's coverage: 100% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 36%
* Compiling and checking tests
Going to execute: removeTestsThatDoNotCompile
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: HuntDisplay huntDisplay = new HuntDisplay();
TrigPoint arg0 = new TrigPoint(2312.0, 2312.0, 50, true);
huntDisplay.addPoint(arg0);
// Undeclared exception!
try { 
  huntDisplay.paintComponent((Graphics) null);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("Joshua.FoxHunt.HuntDisplay", e);
}


** It was a parseable test case! 
refined test name is: testAddPointWithNullValueThrowsException
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: HuntDisplay huntDisplay = new HuntDisplay();
BufferedImage bufferedImage = new BufferedImage(10, 10, 10);
Graphics2D arg0 = bufferedImage.createGraphics();
huntDisplay.paintComponent(arg0);
assertFalse(huntDisplay.isFocusTraversalPolicyProvider());


** It was a parseable test case! 
refined test name is: testHuntDisplayNoFocusTraversalPolicyProvider
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: HuntDisplay huntDisplay = new HuntDisplay();
huntDisplay.minSize = null;
Dimension minimumSize = huntDisplay.getMinimumSize();
assertNull(minimumSize);


** It was a parseable test case! 
refined test name is: testGetMinimumSizeNoValueSetReturnsNull
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: HuntDisplay huntDisplay = new HuntDisplay();
huntDisplay.prefSize = null;
Dimension preferredSize = huntDisplay.getPreferredSize();
assertNull(preferredSize);


** It was a parseable test case! 
refined test name is: testGetPreferredSizeReturnsNullWhenPrefSizeIsNull
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 01:26:52.290 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/tmp/EvoSuite_pathingJar3425765302164138801.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 01:26:52.319 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3425765302164138801.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 01:26:52.392 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/tmp/EvoSuite_pathingJar3425765302164138801.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 01:26:52.394 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3425765302164138801.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 01:26:52.476 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/tmp/EvoSuite_pathingJar3425765302164138801.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 01:26:52.478 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3425765302164138801.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 01:26:52.530 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/tmp/EvoSuite_pathingJar3425765302164138801.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 01:26:52.532 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3425765302164138801.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 01:26:52.598 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/tmp/EvoSuite_pathingJar3425765302164138801.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 01:26:52.600 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3425765302164138801.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 01:26:52.679 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/tmp/EvoSuite_pathingJar3425765302164138801.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 01:26:52.682 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3425765302164138801.jar
[MASTER] 01:26:52.833 [logback-1] WARN  TimeController - Already entered in phase: INLINING. This will mess up the timing calculations.
* test suite isTestSuite: 11
Test 0: 
HuntDisplay huntDisplay = new HuntDisplay();
Dimension preferredSize = huntDisplay.getPreferredSize();
BasicDesktopPaneUI basicDesktopPaneUI = new BasicDesktopPaneUI();
Dimension minimumSize = basicDesktopPaneUI.getMinimumSize(huntDisplay);
preferredSize.setSize(minimumSize);
huntDisplay.minSize = preferredSize;
huntDisplay.getMinimumSize();

Test 1: 
HuntDisplay huntDisplay = new HuntDisplay();
Dimension minimumSize = huntDisplay.getMinimumSize();
minimumSize.setSize((double) 400, (double) (-1));
huntDisplay.getMinimumSize();
Test 2: 
HuntDisplay huntDisplay = new HuntDisplay();
BufferedImage bufferedImage = new BufferedImage(10, 10, 10);
Graphics2D createGraphics = bufferedImage.createGraphics();
huntDisplay.paintComponent(createGraphics);
Test 3: 
HuntDisplay huntDisplay = new HuntDisplay();
TrigPoint trigPoint = new TrigPoint(0.0, 0.0, 0, false);
huntDisplay.addPoint(trigPoint);
BufferedImage bufferedImage = new BufferedImage(10, 10, 10);
Graphics2D createGraphics = bufferedImage.createGraphics();
ImageIcon imageIcon = new ImageIcon();
Landmark landmark = new Landmark(10, 10, imageIcon);
huntDisplay.addLandMark(landmark);
huntDisplay.paintComponent(createGraphics);
Test 4: 
HuntDisplay huntDisplay = new HuntDisplay();
TrigPoint trigPoint = new TrigPoint(2312.0, 2312.0, 50, true);
huntDisplay.addPoint(trigPoint);
// Undeclared exception!
try { 
  huntDisplay.paintComponent((Graphics) null);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("Joshua.FoxHunt.HuntDisplay", e);
}

Test 5: 
HuntDisplay huntDisplay = new HuntDisplay();
Dimension preferredSize = huntDisplay.getPreferredSize();
preferredSize.setSize((-1), 400);
Dimension minimumSize = huntDisplay.getMinimumSize();
minimumSize.setSize((Dimension2D) preferredSize);
huntDisplay.getMinimumSize();
Test 6: 
HuntDisplay huntDisplay = new HuntDisplay();
huntDisplay.minSize = null;
huntDisplay.getMinimumSize();
Test 7: 
HuntDisplay huntDisplay = new HuntDisplay();
Dimension preferredSize = huntDisplay.getPreferredSize();
preferredSize.setSize((double) 400, (double) (-1));
huntDisplay.getPreferredSize();
Test 8: 
HuntDisplay huntDisplay = new HuntDisplay();
Dimension preferredSize = huntDisplay.getPreferredSize();
preferredSize.setSize((-2366), 0);
huntDisplay.getPreferredSize();
Test 9: 
HuntDisplay huntDisplay = new HuntDisplay();
Dimension preferredSize = huntDisplay.getPreferredSize();
preferredSize.setSize(0.0, (double) 50);
huntDisplay.getPreferredSize();
Test 10: 
HuntDisplay huntDisplay = new HuntDisplay();
huntDisplay.prefSize = null;
huntDisplay.getPreferredSize();

* Minimizing test suite
* test suite isTestSuite: 11
Test 0: 
HuntDisplay huntDisplay = new HuntDisplay();
Dimension preferredSize = huntDisplay.getPreferredSize();
BasicDesktopPaneUI basicDesktopPaneUI = new BasicDesktopPaneUI();
Dimension minimumSize = basicDesktopPaneUI.getMinimumSize(huntDisplay);
preferredSize.setSize(minimumSize);
huntDisplay.minSize = preferredSize;
huntDisplay.getMinimumSize();

Test 1: 
HuntDisplay huntDisplay = new HuntDisplay();
Dimension minimumSize = huntDisplay.getMinimumSize();
minimumSize.setSize((double) 400, (double) (-1));
huntDisplay.getMinimumSize();
Test 2: 
HuntDisplay huntDisplay = new HuntDisplay();
BufferedImage bufferedImage = new BufferedImage(10, 10, 10);
Graphics2D createGraphics = bufferedImage.createGraphics();
huntDisplay.paintComponent(createGraphics);
Test 3: 
HuntDisplay huntDisplay = new HuntDisplay();
TrigPoint trigPoint = new TrigPoint(0.0, 0.0, 0, false);
huntDisplay.addPoint(trigPoint);
BufferedImage bufferedImage = new BufferedImage(10, 10, 10);
Graphics2D createGraphics = bufferedImage.createGraphics();
ImageIcon imageIcon = new ImageIcon();
Landmark landmark = new Landmark(10, 10, imageIcon);
huntDisplay.addLandMark(landmark);
huntDisplay.paintComponent(createGraphics);
Test 4: 
HuntDisplay huntDisplay = new HuntDisplay();
TrigPoint trigPoint = new TrigPoint(2312.0, 2312.0, 50, true);
huntDisplay.addPoint(trigPoint);
// Undeclared exception!
try { 
  huntDisplay.paintComponent((Graphics) null);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("Joshua.FoxHunt.HuntDisplay", e);
}

Test 5: 
HuntDisplay huntDisplay = new HuntDisplay();
Dimension preferredSize = huntDisplay.getPreferredSize();
preferredSize.setSize((-1), 400);
Dimension minimumSize = huntDisplay.getMinimumSize();
minimumSize.setSize((Dimension2D) preferredSize);
huntDisplay.getMinimumSize();
Test 6: 
HuntDisplay huntDisplay = new HuntDisplay();
huntDisplay.minSize = null;
huntDisplay.getMinimumSize();
Test 7: 
HuntDisplay huntDisplay = new HuntDisplay();
Dimension preferredSize = huntDisplay.getPreferredSize();
preferredSize.setSize((double) 400, (double) (-1));
huntDisplay.getPreferredSize();
Test 8: 
HuntDisplay huntDisplay = new HuntDisplay();
Dimension preferredSize = huntDisplay.getPreferredSize();
preferredSize.setSize((-2366), 0);
huntDisplay.getPreferredSize();
Test 9: 
HuntDisplay huntDisplay = new HuntDisplay();
Dimension preferredSize = huntDisplay.getPreferredSize();
preferredSize.setSize(0.0, (double) 50);
huntDisplay.getPreferredSize();
Test 10: 
HuntDisplay huntDisplay = new HuntDisplay();
huntDisplay.prefSize = null;
huntDisplay.getPreferredSize();

[MASTER] 01:26:55.575 [logback-1] WARN  TimeController - Already entered in phase: MINIMIZATION. This will mess up the timing calculations.
* Going to analyze the coverage criteria
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 100%
* Total number of goals: 23
* Number of covered goals: 23
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 100%
* Total number of goals: 50
* Number of covered goals: 50
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 100%
* Total number of goals: 14
* Number of covered goals: 14
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 6
* Number of covered goals: 6
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 100%
* Total number of goals: 23
* Number of covered goals: 23
* Generated 11 tests with total length 52
* Resulting test suite's coverage: 100% (average coverage for all fitness functions)
* Generating assertions
[MASTER] 01:26:55.650 [logback-1] WARN  TimeController - Already entered in phase: COVERAGE_ANALYSIS. This will mess up the timing calculations.
* Resulting test suite's mutation score: 37%
* Compiling and checking tests
[MASTER] 01:26:57.967 [logback-1] WARN  TimeController - Already entered in phase: ASSERTION_GENERATION. This will mess up the timing calculations.
Going to execute: removeTestsThatDoNotCompile
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 01:26:59.119 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/tmp/EvoSuite_pathingJar3425765302164138801.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 01:26:59.120 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3425765302164138801.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 01:26:59.244 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/tmp/EvoSuite_pathingJar3425765302164138801.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 01:26:59.246 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3425765302164138801.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 01:26:59.325 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/tmp/EvoSuite_pathingJar3425765302164138801.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 01:26:59.327 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3425765302164138801.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 01:26:59.414 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/tmp/EvoSuite_pathingJar3425765302164138801.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 01:26:59.415 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3425765302164138801.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
** Write a test suite: 1 called: 1 to improve: false
** Write a test suite: 2 called: 2 to improve: false
** Write a test suite: 3 called: 3 to improve: false
[MASTER] 01:26:59.542 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/tmp/EvoSuite_pathingJar3425765302164138801.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 01:26:59.544 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3425765302164138801.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
** Write a test suite: 1 called: 1 to improve: false
** Write a test suite: 2 called: 2 to improve: false
** Write a test suite: 3 called: 3 to improve: false
[MASTER] 01:26:59.676 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/tmp/EvoSuite_pathingJar3425765302164138801.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 01:26:59.678 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3425765302164138801.jar
* Writing tests to file
[MASTER] 01:26:59.680 [logback-1] WARN  TimeController - Already entered in phase: JUNIT_CHECK. This will mess up the timing calculations.
* Writing JUnit test case 'HuntDisplay_ESTest' to evosuite-tests
* Writing JUnit test case 'HuntDisplay_Original_ESTest' to evosuite-tests
** Write a test suite: 0 called: 0 to improve: false
** Write a test suite: 1 called: 1 to improve: false
** Write a test suite: 2 called: 2 to improve: false
** Write a test suite: 3 called: 3 to improve: false
* Done!

* Computation finished
