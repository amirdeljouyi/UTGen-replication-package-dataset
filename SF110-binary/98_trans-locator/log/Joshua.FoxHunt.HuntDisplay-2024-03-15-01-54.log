* EvoSuite 1.0.0-SNAPSHOT
* Going to generate test cases for class: Joshua.FoxHunt.HuntDisplay
* Starting Client-0
* Properties loaded from /home/roham/Results-Utestgen/dataset/SF110-new-res/98_trans-locator/evosuite-files/evosuite.properties
* Connecting to master process on port 6921
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 01:54:28.666 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 01:54:28.667 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 01:54:28.717 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 01:54:28.794 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 01:54:28.796 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 01:54:28.799 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
[MASTER] 01:54:30.927 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.ZoneId
[MASTER] 01:54:30.990 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.Temporal
[MASTER] 01:54:30.991 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAccessor
[MASTER] 01:54:30.991 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalField
[MASTER] 01:54:30.992 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalUnit
[MASTER] 01:54:30.992 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAmount
[MASTER] 01:54:30.992 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.Clock
[MASTER] 01:54:30.993 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalQuery
[MASTER] 01:54:30.993 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAdjuster
[MASTER] 01:54:31.011 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.Chronology
[MASTER] 01:54:31.023 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.Era
* Finished analyzing classpath
* Generating tests for class Joshua.FoxHunt.HuntDisplay
* Test criteria:
  - Branch Coverage
  - Line Coverage
  - Method-Output Coverage
  - Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 116
* Using seed 1710467665346
* Starting evolution
[Progress:>                             0%] [Cov:>                                  0%]* Initial Number of Goals in DynaMOSA = 59 / 116
[Progress:>                             0%] [Cov:=======================>           66%][Progress:>                             2%] [Cov:=======================>           66%][Progress:>                             2%] [Cov:=======================>           68%][Progress:>                             3%] [Cov:=======================>           68%][Progress:>                             3%] [Cov:=======================>           68%][Progress:>                             3%] [Cov:=========================>         74%][Progress:>                             3%] [Cov:=========================>         74%][Progress:>                             3%] [Cov:=========================>         74%][Progress:>                             3%] [Cov:=========================>         74%][Progress:>                             3%] [Cov:=========================>         74%][Progress:>                             3%] [Cov:=========================>         74%][Progress:>                             3%] [Cov:=========================>         74%][Progress:>                             3%] [Cov:=========================>         74%][Progress:>                             3%] [Cov:=========================>         74%][Progress:>                             3%] [Cov:=========================>         74%][Progress:=>                            4%] [Cov:=========================>         74%][Progress:=>                            4%] [Cov:=========================>         74%][Progress:=>                            4%] [Cov:=========================>         74%][Progress:=>                            4%] [Cov:=========================>         74%][Progress:=>                            4%] [Cov:=========================>         74%][Progress:=>                            4%] [Cov:=========================>         74%][Progress:=>                            4%] [Cov:=========================>         74%][Progress:=>                            4%] [Cov:=========================>         74%][Progress:=>                            4%] [Cov:=========================>         74%][Progress:=>                            4%] [Cov:=========================>         74%][Progress:=>                            4%] [Cov:=========================>         74%][Progress:=>                            4%] [Cov:=========================>         74%][Progress:=>                            4%] [Cov:=========================>         74%][Progress:=>                            4%] [Cov:=========================>         74%][Progress:=>                            4%] [Cov:=========================>         74%][Progress:=>                            5%] [Cov:=========================>         74%][Progress:=>                            5%] [Cov:=========================>         74%][Progress:=>                            5%] [Cov:=========================>         74%][Progress:=>                            5%] [Cov:=========================>         74%][Progress:=>                            5%] [Cov:=========================>         74%][Progress:=>                            5%] [Cov:=========================>         74%][Progress:=>                            5%] [Cov:=========================>         74%][Progress:=>                            5%] [Cov:=========================>         74%][Progress:=>                            5%] [Cov:=========================>         74%][Progress:=>                            5%] [Cov:=========================>         74%][Progress:=>                            5%] [Cov:=========================>         74%][Progress:=>                            5%] [Cov:=========================>         74%][Progress:=>                            5%] [Cov:=========================>         74%][Progress:=>                            6%] [Cov:=========================>         74%][Progress:=>                            6%] [Cov:=========================>         74%][Progress:=>                            6%] [Cov:=========================>         74%][Progress:=>                            6%] [Cov:===========================>       78%][Progress:=>                            6%] [Cov:===========================>       78%][Progress:=>                            6%] [Cov:===========================>       78%][Progress:=>                            6%] [Cov:===========================>       78%][Progress:=>                            6%] [Cov:===========================>       78%][Progress:=>                            6%] [Cov:===========================>       78%][Progress:=>                            6%] [Cov:===========================>       78%][Progress:=>                            6%] [Cov:===========================>       78%][Progress:=>                            6%] [Cov:===========================>       78%][Progress:=>                            6%] [Cov:===========================>       78%][Progress:=>                            6%] [Cov:===========================>       78%][Progress:==>                           7%] [Cov:===========================>       78%][Progress:==>                           7%] [Cov:===========================>       78%][Progress:==>                           7%] [Cov:===========================>       78%][Progress:==>                           7%] [Cov:===========================>       78%][Progress:==>                           7%] [Cov:===========================>       78%][Progress:==>                           7%] [Cov:===========================>       78%][Progress:==>                           7%] [Cov:===========================>       78%][Progress:==>                           7%] [Cov:===========================>       78%][Progress:==>                           7%] [Cov:===========================>       78%][Progress:==>                           7%] [Cov:===========================>       78%][Progress:==>                           7%] [Cov:===========================>       78%][Progress:==>                           7%] [Cov:===========================>       78%][Progress:==>                           7%] [Cov:===========================>       78%][Progress:==>                           7%] [Cov:===========================>       78%][Progress:==>                           7%] [Cov:===========================>       78%][Progress:==>                           7%] [Cov:===========================>       78%][Progress:==>                           7%] [Cov:===========================>       78%][Progress:==>                           7%] [Cov:===========================>       78%][Progress:==>                           7%] [Cov:===========================>       78%][Progress:==>                           8%] [Cov:===========================>       78%][Progress:==>                           8%] [Cov:===========================>       78%][Progress:==>                           8%] [Cov:===========================>       78%][Progress:==>                           8%] [Cov:===========================>       78%][Progress:==>                           8%] [Cov:===========================>       78%][Progress:==>                           8%] [Cov:===========================>       78%][Progress:==>                           8%] [Cov:===========================>       78%][Progress:==>                           8%] [Cov:===========================>       78%][Progress:==>                           8%] [Cov:===========================>       78%][Progress:==>                           8%] [Cov:===========================>       78%][Progress:==>                           8%] [Cov:===========================>       78%][Progress:==>                           8%] [Cov:===========================>       78%][Progress:==>                           8%] [Cov:============================>      82%][Progress:==>                           8%] [Cov:============================>      82%][Progress:==>                           8%] [Cov:============================>      82%][Progress:==>                           8%] [Cov:============================>      82%][Progress:==>                           9%] [Cov:============================>      82%][Progress:==>                           9%] [Cov:============================>      82%][Progress:==>                           9%] [Cov:============================>      82%][Progress:==>                           9%] [Cov:============================>      82%][MASTER] 01:54:50.097 [logback-1] WARN  TestCluster - Failed to check cache for javax.swing.RowFilter<M, I>.ComparisonType : Type points to itself
[Progress:==>                           9%] [Cov:=============================>     84%][Progress:==>                           9%] [Cov:=============================>     84%][Progress:==>                           9%] [Cov:=============================>     84%][Progress:==>                           9%] [Cov:=============================>     84%][Progress:==>                           9%] [Cov:=============================>     84%][Progress:==>                           9%] [Cov:=============================>     84%][Progress:==>                           9%] [Cov:=============================>     84%][Progress:==>                           9%] [Cov:=============================>     84%][Progress:==>                           9%] [Cov:=============================>     84%][Progress:==>                           9%] [Cov:=============================>     84%][Progress:==>                           9%] [Cov:=============================>     84%][Progress:==>                           9%] [Cov:=============================>     84%][Progress:==>                           9%] [Cov:=============================>     84%][Progress:==>                           9%] [Cov:=============================>     84%][Progress:==>                           9%] [Cov:=============================>     84%][Progress:==>                           9%] [Cov:=============================>     84%][Progress:==>                           9%] [Cov:==============================>    88%][Progress:===>                          10%] [Cov:==============================>    88%][Progress:===>                          10%] [Cov:==============================>    88%][Progress:===>                          10%] [Cov:==============================>    88%][Progress:===>                          10%] [Cov:==============================>    88%][Progress:===>                          10%] [Cov:==============================>    88%][Progress:===>                          10%] [Cov:==============================>    88%][Progress:===>                          10%] [Cov:==============================>    88%][Progress:===>                          10%] [Cov:==============================>    88%][Progress:===>                          10%] [Cov:==============================>    88%][Progress:===>                          10%] [Cov:==============================>    88%][Progress:===>                          10%] [Cov:==============================>    88%][Progress:===>                          10%] [Cov:==============================>    88%][Progress:===>                          10%] [Cov:==============================>    88%][Progress:===>                          10%] [Cov:==============================>    88%][Progress:===>                          10%] [Cov:==============================>    88%][Progress:===>                          11%] [Cov:==============================>    88%][Progress:===>                          11%] [Cov:==============================>    88%][Progress:===>                          11%] [Cov:==============================>    88%][Progress:===>                          11%] [Cov:==============================>    88%][Progress:===>                          11%] [Cov:==============================>    88%][Progress:===>                          11%] [Cov:==============================>    88%][Progress:===>                          11%] [Cov:==============================>    88%][Progress:===>                          11%] [Cov:==============================>    88%][Progress:===>                          11%] [Cov:==============================>    88%][Progress:===>                          11%] [Cov:==============================>    88%][Progress:===>                          11%] [Cov:==============================>    88%][Progress:===>                          11%] [Cov:==============================>    88%][Progress:===>                          11%] [Cov:==============================>    88%][Progress:===>                          11%] [Cov:==============================>    88%][Progress:===>                          11%] [Cov:==============================>    88%][Progress:===>                          11%] [Cov:==============================>    88%][Progress:===>                          11%] [Cov:==============================>    88%][Progress:===>                          11%] [Cov:==============================>    88%][Progress:===>                          11%] [Cov:==============================>    88%][Progress:===>                          11%] [Cov:==============================>    88%][Progress:===>                          11%] [Cov:==============================>    88%][Progress:===>                          12%] [Cov:==============================>    88%][Progress:===>                          12%] [Cov:==============================>    88%][Progress:===>                          12%] [Cov:==============================>    88%][Progress:===>                          12%] [Cov:==============================>    88%][Progress:===>                          12%] [Cov:==============================>    88%][Progress:===>                          12%] [Cov:==============================>    88%][Progress:===>                          12%] [Cov:==============================>    88%][Progress:===>                          12%] [Cov:==============================>    88%][Progress:===>                          12%] [Cov:==============================>    88%][Progress:===>                          12%] [Cov:==============================>    88%][Progress:===>                          12%] [Cov:==============================>    88%][Progress:===>                          12%] [Cov:==============================>    88%][Progress:===>                          12%] [Cov:==============================>    88%][Progress:===>                          12%] [Cov:==============================>    88%][Progress:===>                          12%] [Cov:==============================>    88%][Progress:===>                          12%] [Cov:==============================>    88%][Progress:===>                          12%] [Cov:==============================>    88%][Progress:===>                          12%] [Cov:==============================>    88%][Progress:===>                          12%] [Cov:==============================>    88%][Progress:===>                          12%] [Cov:==============================>    88%][Progress:===>                          12%] [Cov:==============================>    88%][Progress:===>                          12%] [Cov:==============================>    88%][Progress:===>                          12%] [Cov:==============================>    88%][Progress:===>                          12%] [Cov:==============================>    88%][Progress:===>                          13%] [Cov:==============================>    88%][Progress:===>                          13%] [Cov:===============================>   89%][Progress:===>                          13%] [Cov:===============================>   89%][Progress:===>                          13%] [Cov:===============================>   89%][Progress:===>                          13%] [Cov:===============================>   89%][Progress:===>                          13%] [Cov:===============================>   89%][Progress:===>                          13%] [Cov:===============================>   89%][Progress:===>                          13%] [Cov:===============================>   89%][Progress:===>                          13%] [Cov:===============================>   89%][Progress:===>                          13%] [Cov:===============================>   89%][Progress:===>                          13%] [Cov:===============================>   89%][Progress:===>                          13%] [Cov:===============================>   89%][Progress:===>                          13%] [Cov:===============================>   89%][Progress:===>                          13%] [Cov:===============================>   89%][Progress:===>                          13%] [Cov:===============================>   89%][Progress:===>                          13%] [Cov:===============================>   89%][Progress:===>                          13%] [Cov:===============================>   89%][Progress:===>                          13%] [Cov:===============================>   89%][Progress:===>                          13%] [Cov:===============================>   89%][Progress:===>                          13%] [Cov:===============================>   89%][Progress:===>                          13%] [Cov:===============================>   89%][Progress:====>                         14%] [Cov:===============================>   89%][Progress:====>                         14%] [Cov:===============================>   89%][Progress:====>                         14%] [Cov:===============================>   89%][Progress:====>                         14%] [Cov:===============================>   89%][Progress:====>                         14%] [Cov:===============================>   89%][Progress:====>                         14%] [Cov:===============================>   89%][Progress:====>                         14%] [Cov:===============================>   89%][Progress:====>                         14%] [Cov:===============================>   89%][Progress:====>                         14%] [Cov:===============================>   89%][Progress:====>                         14%] [Cov:===============================>   89%][Progress:====>                         14%] [Cov:===============================>   89%][Progress:====>                         14%] [Cov:===============================>   89%][Progress:====>                         14%] [Cov:===============================>   89%][Progress:====>                         14%] [Cov:===============================>   89%][Progress:====>                         14%] [Cov:===============================>   89%][Progress:====>                         14%] [Cov:===============================>   89%][Progress:====>                         14%] [Cov:===============================>   89%][Progress:====>                         14%] [Cov:===============================>   89%][Progress:====>                         14%] [Cov:===============================>   89%][Progress:====>                         14%] [Cov:===============================>   89%][Progress:====>                         14%] [Cov:===============================>   91%][Progress:====>                         15%] [Cov:===============================>   91%][Progress:====>                         15%] [Cov:===============================>   91%][Progress:====>                         15%] [Cov:===============================>   91%][Progress:====>                         15%] [Cov:===============================>   91%][Progress:====>                         15%] [Cov:===============================>   91%][Progress:====>                         15%] [Cov:===============================>   91%][Progress:====>                         15%] [Cov:===============================>   91%][Progress:====>                         15%] [Cov:===============================>   91%][Progress:====>                         15%] [Cov:===============================>   91%][Progress:====>                         15%] [Cov:===============================>   91%][Progress:====>                         15%] [Cov:===============================>   91%][Progress:====>                         15%] [Cov:===============================>   91%][Progress:====>                         15%] [Cov:===============================>   91%][Progress:====>                         15%] [Cov:===============================>   91%][Progress:====>                         15%] [Cov:===============================>   91%][Progress:====>                         15%] [Cov:===============================>   91%][Progress:====>                         15%] [Cov:===============================>   91%][Progress:====>                         15%] [Cov:===============================>   91%][Progress:====>                         15%] [Cov:===============================>   91%][Progress:====>                         15%] [Cov:===============================>   91%][Progress:====>                         15%] [Cov:===============================>   91%][Progress:====>                         15%] [Cov:===============================>   91%][Progress:====>                         15%] [Cov:===============================>   91%][Progress:====>                         15%] [Cov:===============================>   91%][Progress:====>                         15%] [Cov:===============================>   91%][Progress:====>                         15%] [Cov:===============================>   91%][Progress:====>                         16%] [Cov:===============================>   91%][Progress:====>                         16%] [Cov:===============================>   91%][Progress:====>                         16%] [Cov:===============================>   91%][Progress:====>                         16%] [Cov:===============================>   91%][Progress:====>                         16%] [Cov:===============================>   91%][Progress:====>                         16%] [Cov:===============================>   91%][Progress:====>                         16%] [Cov:===============================>   91%][Progress:====>                         16%] [Cov:===============================>   91%][Progress:====>                         16%] [Cov:===============================>   91%][Progress:====>                         16%] [Cov:===============================>   91%][Progress:====>                         16%] [Cov:===============================>   91%][Progress:====>                         16%] [Cov:===============================>   91%][Progress:====>                         16%] [Cov:===============================>   91%][Progress:====>                         16%] [Cov:===============================>   91%][Progress:====>                         16%] [Cov:===============================>   91%][Progress:====>                         16%] [Cov:===============================>   91%][Progress:====>                         16%] [Cov:===============================>   91%][Progress:====>                         16%] [Cov:===============================>   91%][Progress:====>                         16%] [Cov:===============================>   91%][Progress:====>                         16%] [Cov:===============================>   91%][Progress:====>                         16%] [Cov:===============================>   91%][Progress:====>                         16%] [Cov:===============================>   91%][Progress:====>                         16%] [Cov:===============================>   91%][Progress:=====>                        17%] [Cov:===============================>   91%][Progress:=====>                        17%] [Cov:===============================>   91%][Progress:=====>                        17%] [Cov:===============================>   91%][Progress:=====>                        17%] [Cov:===============================>   91%][Progress:=====>                        17%] [Cov:===============================>   91%][Progress:=====>                        17%] [Cov:===============================>   91%][Progress:=====>                        17%] [Cov:===============================>   91%][Progress:=====>                        17%] [Cov:===============================>   91%][Progress:=====>                        17%] [Cov:===============================>   91%][Progress:=====>                        17%] [Cov:===============================>   91%][Progress:=====>                        17%] [Cov:===============================>   91%][Progress:=====>                        17%] [Cov:===============================>   91%][Progress:=====>                        17%] [Cov:===============================>   91%][Progress:=====>                        17%] [Cov:===============================>   91%][Progress:=====>                        17%] [Cov:===============================>   91%][Progress:=====>                        17%] [Cov:===============================>   91%][Progress:=====>                        17%] [Cov:===============================>   91%][Progress:=====>                        17%] [Cov:===============================>   91%][Progress:=====>                        17%] [Cov:===============================>   91%][Progress:=====>                        17%] [Cov:===============================>   91%][Progress:=====>                        17%] [Cov:===============================>   91%][Progress:=====>                        17%] [Cov:===============================>   91%][Progress:=====>                        17%] [Cov:===============================>   91%][Progress:=====>                        18%] [Cov:===============================>   91%][Progress:=====>                        18%] [Cov:===============================>   91%][Progress:=====>                        18%] [Cov:===============================>   91%][Progress:=====>                        18%] [Cov:===============================>   91%][Progress:=====>                        18%] [Cov:===============================>   91%][Progress:=====>                        18%] [Cov:===============================>   91%][Progress:=====>                        18%] [Cov:===============================>   91%][Progress:=====>                        18%] [Cov:===============================>   91%][Progress:=====>                        18%] [Cov:===============================>   91%][Progress:=====>                        18%] [Cov:===============================>   91%][Progress:=====>                        18%] [Cov:===============================>   91%][Progress:=====>                        18%] [Cov:===============================>   91%][Progress:=====>                        18%] [Cov:===============================>   91%][Progress:=====>                        18%] [Cov:===============================>   91%][Progress:=====>                        18%] [Cov:===============================>   91%][Progress:=====>                        18%] [Cov:===============================>   91%][Progress:=====>                        18%] [Cov:===============================>   91%][Progress:=====>                        18%] [Cov:===============================>   91%][Progress:=====>                        18%] [Cov:===============================>   91%][Progress:=====>                        18%] [Cov:===============================>   91%][Progress:=====>                        19%] [Cov:===============================>   91%][Progress:=====>                        19%] [Cov:===============================>   91%][Progress:=====>                        19%] [Cov:===============================>   91%][Progress:=====>                        19%] [Cov:===============================>   91%][Progress:=====>                        19%] [Cov:===============================>   91%][Progress:=====>                        19%] [Cov:===============================>   91%][Progress:=====>                        19%] [Cov:===============================>   91%][Progress:=====>                        19%] [Cov:===============================>   91%][Progress:=====>                        19%] [Cov:===============================>   91%][Progress:=====>                        19%] [Cov:===============================>   91%][Progress:=====>                        19%] [Cov:===============================>   91%][Progress:=====>                        19%] [Cov:===============================>   91%][Progress:=====>                        19%] [Cov:===============================>   91%][Progress:=====>                        19%] [Cov:===============================>   91%][Progress:=====>                        19%] [Cov:===============================>   91%][Progress:=====>                        19%] [Cov:===============================>   91%][Progress:=====>                        19%] [Cov:===============================>   91%][Progress:=====>                        19%] [Cov:===============================>   91%][Progress:=====>                        19%] [Cov:===============================>   91%][Progress:=====>                        19%] [Cov:===============================>   91%][Progress:=====>                        19%] [Cov:===============================>   91%][Progress:=====>                        19%] [Cov:===============================>   91%][Progress:=====>                        19%] [Cov:===============================>   91%][Progress:=====>                        19%] [Cov:===============================>   91%][Progress:=====>                        19%] [Cov:===============================>   91%][Progress:=====>                        19%] [Cov:===============================>   91%][Progress:======>                       20%] [Cov:===============================>   91%][Progress:======>                       20%] [Cov:===============================>   91%][Progress:======>                       20%] [Cov:===============================>   91%][Progress:======>                       20%] [Cov:===============================>   91%][Progress:======>                       20%] [Cov:===============================>   91%][Progress:======>                       20%] [Cov:===============================>   91%][Progress:======>                       20%] [Cov:===============================>   91%][Progress:======>                       20%] [Cov:===============================>   91%][Progress:======>                       20%] [Cov:===============================>   91%][Progress:======>                       20%] [Cov:===============================>   91%][Progress:======>                       20%] [Cov:===============================>   91%][Progress:======>                       20%] [Cov:================================>  92%][Progress:======>                       20%] [Cov:================================>  92%][Progress:======>                       20%] [Cov:================================>  92%][Progress:======>                       20%] [Cov:================================>  92%][Progress:======>                       20%] [Cov:================================>  92%][Progress:======>                       20%] [Cov:================================>  92%][Progress:======>                       20%] [Cov:================================>  92%][Progress:======>                       20%] [Cov:================================>  92%][Progress:======>                       21%] [Cov:================================>  92%][Progress:======>                       21%] [Cov:================================>  92%][Progress:======>                       21%] [Cov:================================>  92%][Progress:======>                       21%] [Cov:================================>  92%][Progress:======>                       21%] [Cov:================================>  92%][Progress:======>                       21%] [Cov:================================>  92%][Progress:======>                       21%] [Cov:================================>  92%][Progress:======>                       21%] [Cov:================================>  92%][Progress:======>                       21%] [Cov:================================>  92%][Progress:======>                       21%] [Cov:================================>  92%][Progress:======>                       21%] [Cov:================================>  92%][Progress:======>                       21%] [Cov:================================>  92%][Progress:======>                       21%] [Cov:================================>  92%][Progress:======>                       21%] [Cov:================================>  92%][Progress:======>                       21%] [Cov:================================>  92%][Progress:======>                       21%] [Cov:================================>  92%][Progress:======>                       21%] [Cov:================================>  92%][Progress:======>                       21%] [Cov:================================>  92%][Progress:======>                       21%] [Cov:================================>  92%][Progress:======>                       21%] [Cov:================================>  92%][Progress:======>                       21%] [Cov:================================>  92%][Progress:======>                       21%] [Cov:================================>  92%][Progress:======>                       22%] [Cov:================================>  92%][Progress:======>                       22%] [Cov:================================>  92%][Progress:======>                       22%] [Cov:================================>  92%][Progress:======>                       22%] [Cov:================================>  92%][Progress:======>                       22%] [Cov:================================>  92%][Progress:======>                       22%] [Cov:================================>  92%][Progress:======>                       22%] [Cov:================================>  92%][Progress:======>                       22%] [Cov:================================>  92%][Progress:======>                       22%] [Cov:================================>  92%][Progress:======>                       22%] [Cov:================================>  92%][Progress:======>                       22%] [Cov:================================>  92%][Progress:======>                       22%] [Cov:================================>  92%][Progress:======>                       22%] [Cov:================================>  92%][Progress:======>                       22%] [Cov:================================>  92%][Progress:======>                       22%] [Cov:================================>  92%][Progress:======>                       22%] [Cov:================================>  92%][Progress:======>                       22%] [Cov:================================>  92%][Progress:======>                       22%] [Cov:=================================> 95%][Progress:======>                       22%] [Cov:=================================> 95%][Progress:======>                       22%] [Cov:=================================> 95%][Progress:======>                       22%] [Cov:=================================> 97%][Progress:======>                       22%] [Cov:==================================>98%][MASTER] 01:55:17.759 [logback-1] WARN  TestCluster - Failed to check cache for java.util.Enumeration<E> : Type points to itself
[Progress:======>                       23%] [Cov:==================================>98%][Progress:======>                       23%] [Cov:==================================>98%][Progress:======>                       23%] [Cov:==================================>98%][Progress:======>                       23%] [Cov:==================================>98%][Progress:======>                       23%] [Cov:==================================>98%][Progress:======>                       23%] [Cov:==================================>98%][Progress:======>                       23%] [Cov:==================================>98%][Progress:======>                       23%] [Cov:==================================>98%][Progress:======>                       23%] [Cov:==================================>98%][Progress:======>                       23%] [Cov:==================================>98%][Progress:======>                       23%] [Cov:==================================>98%][Progress:======>                       23%] [Cov:==================================>98%][Progress:======>                       23%] [Cov:==================================>98%][Progress:======>                       23%] [Cov:==================================>98%][Progress:======>                       23%] [Cov:==================================>98%][Progress:======>                       23%] [Cov:==================================>98%][Progress:======>                       23%] [Cov:==================================>98%][Progress:======>                       23%] [Cov:==================================>98%][Progress:======>                       23%] [Cov:==================================>98%][Progress:======>                       23%] [Cov:==================================>98%][Progress:======>                       23%] [Cov:==================================>98%][Progress:=======>                      24%] [Cov:==================================>98%][Progress:=======>                      24%] [Cov:==================================>98%][Progress:=======>                      24%] [Cov:==================================>98%][Progress:=======>                      24%] [Cov:==================================>98%][Progress:=======>                      24%] [Cov:==================================>98%][Progress:=======>                      24%] [Cov:==================================>98%][Progress:=======>                      24%] [Cov:==================================>98%][Progress:=======>                      24%] [Cov:==================================>98%][Progress:=======>                      24%] [Cov:==================================>98%][Progress:=======>                      24%] [Cov:==================================>98%][Progress:=======>                      24%] [Cov:==================================>98%][Progress:=======>                      24%] [Cov:==================================>98%][Progress:=======>                      24%] [Cov:==================================>98%][Progress:=======>                      24%] [Cov:==================================>98%][Progress:=======>                      24%] [Cov:==================================>98%][Progress:=======>                      24%] [Cov:==================================>98%][Progress:=======>                      24%] [Cov:==================================>98%][Progress:=======>                      24%] [Cov:==================================>98%][Progress:=======>                      24%] [Cov:==================================>98%][Progress:=======>                      25%] [Cov:==================================>98%][Progress:=======>                      25%] [Cov:==================================>98%][Progress:=======>                      25%] [Cov:==================================>98%][Progress:=======>                      25%] [Cov:==================================>98%][Progress:=======>                      25%] [Cov:==================================>98%][Progress:=======>                      25%] [Cov:==================================>98%][Progress:=======>                      25%] [Cov:==================================>98%][Progress:=======>                      25%] [Cov:==================================>98%][Progress:=======>                      25%] [Cov:==================================>98%][Progress:=======>                      25%] [Cov:==================================>98%][Progress:=======>                      25%] [Cov:==================================>98%][Progress:=======>                      25%] [Cov:==================================>98%][Progress:=======>                      25%] [Cov:==================================>98%][Progress:=======>                      25%] [Cov:==================================>98%][Progress:=======>                      25%] [Cov:==================================>98%][Progress:=======>                      25%] [Cov:==================================>98%][Progress:=======>                      25%] [Cov:==================================>98%][Progress:=======>                      25%] [Cov:==================================>98%][Progress:=======>                      25%] [Cov:==================================>98%][Progress:=======>                      25%] [Cov:==================================>98%][Progress:=======>                      25%] [Cov:==================================>98%][Progress:=======>                      25%] [Cov:==================================>98%][Progress:=======>                      25%] [Cov:==================================>98%][Progress:=======>                      25%] [Cov:==================================>98%][Progress:=======>                      25%] [Cov:==================================>98%][Progress:=======>                      25%] [Cov:==================================>98%][Progress:=======>                      25%] [Cov:==================================>98%][Progress:=======>                      25%] [Cov:==================================>98%][Progress:=======>                      25%] [Cov:==================================>98%][Progress:=======>                      25%] [Cov:==================================>98%][Progress:=======>                      25%] [Cov:==================================>98%][Progress:=======>                      25%] [Cov:==================================>98%][Progress:=======>                      25%] [Cov:==================================>98%][Progress:=======>                      26%] [Cov:==================================>98%][Progress:=======>                      26%] [Cov:==================================>98%][Progress:=======>                      26%] [Cov:==================================>98%][Progress:=======>                      26%] [Cov:==================================>98%][Progress:=======>                      26%] [Cov:==================================>98%][Progress:=======>                      26%] [Cov:==================================>98%][Progress:=======>                      26%] [Cov:==================================>98%][Progress:=======>                      26%] [Cov:==================================>98%][Progress:=======>                      26%] [Cov:==================================>98%][Progress:=======>                      26%] [Cov:==================================>98%][Progress:=======>                      26%] [Cov:==================================>98%][Progress:=======>                      26%] [Cov:==================================>98%][Progress:=======>                      26%] [Cov:==================================>98%][Progress:=======>                      26%] [Cov:==================================>98%][Progress:=======>                      26%] [Cov:==================================>98%][Progress:=======>                      26%] [Cov:==================================>98%][Progress:=======>                      26%] [Cov:==================================>98%][Progress:=======>                      26%] [Cov:==================================>98%][Progress:=======>                      26%] [Cov:==================================>98%][Progress:=======>                      26%] [Cov:==================================>98%][Progress:=======>                      26%] [Cov:==================================>98%][Progress:=======>                      26%] [Cov:==================================>98%][Progress:=======>                      26%] [Cov:==================================>98%][Progress:=======>                      26%] [Cov:==================================>98%][Progress:=======>                      26%] [Cov:==================================>98%][Progress:=======>                      26%] [Cov:==================================>98%][Progress:=======>                      26%] [Cov:==================================>98%][Progress:=======>                      26%] [Cov:==================================>98%][Progress:=======>                      26%] [Cov:==================================>98%][Progress:=======>                      26%] [Cov:==================================>98%][Progress:=======>                      26%] [Cov:==================================>98%][Progress:=======>                      26%] [Cov:==================================>98%][Progress:========>                     27%] [Cov:==================================>98%][Progress:========>                     27%] [Cov:==================================>98%][Progress:========>                     27%] [Cov:==================================>98%][Progress:========>                     27%] [Cov:==================================>98%][Progress:========>                     27%] [Cov:==================================>98%][Progress:========>                     27%] [Cov:==================================>98%][Progress:========>                     27%] [Cov:==================================>98%][Progress:========>                     27%] [Cov:==================================>98%][Progress:========>                     27%] [Cov:==================================>98%][Progress:========>                     27%] [Cov:==================================>98%][Progress:========>                     27%] [Cov:==================================>98%][Progress:========>                     27%] [Cov:==================================>98%][Progress:========>                     27%] [Cov:==================================>98%][Progress:========>                     27%] [Cov:==================================>98%][Progress:========>                     27%] [Cov:==================================>98%][Progress:========>                     27%] [Cov:==================================>98%][Progress:========>                     27%] [Cov:==================================>98%][Progress:========>                     27%] [Cov:==================================>98%][Progress:========>                     27%] [Cov:==================================>98%][Progress:========>                     27%] [Cov:==================================>98%][Progress:========>                     27%] [Cov:==================================>98%][Progress:========>                     27%] [Cov:==================================>98%][Progress:========>                     27%] [Cov:==================================>98%][Progress:========>                     27%] [Cov:==================================>98%][Progress:========>                     27%] [Cov:==================================>98%][Progress:========>                     27%] [Cov:==================================>98%][Progress:========>                     27%] [Cov:==================================>98%][Progress:========>                     27%] [Cov:==================================>98%][Progress:========>                     27%] [Cov:==================================>98%][Progress:========>                     27%] [Cov:==================================>98%][Progress:========>                     27%] [Cov:==================================>98%][Progress:========>                     27%] [Cov:==================================>98%][Progress:========>                     28%] [Cov:==================================>98%][Progress:========>                     28%] [Cov:==================================>98%][Progress:========>                     28%] [Cov:==================================>98%][Progress:========>                     28%] [Cov:==================================>98%][Progress:========>                     28%] [Cov:==================================>98%][Progress:========>                     28%] [Cov:==================================>98%][Progress:========>                     28%] [Cov:==================================>98%][Progress:========>                     28%] [Cov:==================================>98%][Progress:========>                     28%] [Cov:==================================>98%][Progress:========>                     28%] [Cov:==================================>98%][Progress:========>                     28%] [Cov:==================================>98%][Progress:========>                     28%] [Cov:==================================>98%][Progress:========>                     28%] [Cov:==================================>98%][Progress:========>                     28%] [Cov:==================================>98%][Progress:========>                     28%] [Cov:==================================>98%][Progress:========>                     28%] [Cov:==================================>98%][Progress:========>                     28%] [Cov:==================================>98%][Progress:========>                     28%] [Cov:==================================>98%][Progress:========>                     28%] [Cov:==================================>98%][Progress:========>                     28%] [Cov:==================================>98%][Progress:========>                     28%] [Cov:==================================>98%][Progress:========>                     28%] [Cov:==================================>98%][Progress:========>                     28%] [Cov:==================================>98%][Progress:========>                     28%] [Cov:==================================>98%][Progress:========>                     28%] [Cov:==================================>98%][Progress:========>                     28%] [Cov:==================================>98%][Progress:========>                     28%] [Cov:==================================>98%][Progress:========>                     28%] [Cov:==================================>98%][Progress:========>                     28%] [Cov:==================================>98%][Progress:========>                     29%] [Cov:==================================>98%][Progress:========>                     29%] [Cov:==================================>98%][Progress:========>                     29%] [Cov:==================================>98%][Progress:========>                     29%] [Cov:==================================>98%][Progress:========>                     29%] [Cov:==================================>98%][Progress:========>                     29%] [Cov:==================================>98%][Progress:========>                     29%] [Cov:==================================>98%][Progress:========>                     29%] [Cov:==================================>98%][Progress:========>                     29%] [Cov:==================================>98%][Progress:========>                     29%] [Cov:==================================>98%][Progress:========>                     29%] [Cov:==================================>98%][Progress:========>                     29%] [Cov:==================================>98%][Progress:========>                     29%] [Cov:==================================>98%][Progress:========>                     29%] [Cov:==================================>98%][Progress:========>                     29%] [Cov:==================================>98%][Progress:========>                     29%] [Cov:==================================>98%][Progress:========>                     29%] [Cov:==================================>98%][Progress:========>                     29%] [Cov:==================================>98%][Progress:========>                     29%] [Cov:==================================>98%][Progress:========>                     29%] [Cov:==================================>98%][Progress:========>                     29%] [Cov:==================================>98%][Progress:========>                     29%] [Cov:==================================>98%][Progress:========>                     29%] [Cov:==================================>98%][Progress:========>                     29%] [Cov:==================================>98%][Progress:========>                     29%] [Cov:==================================>98%][Progress:========>                     29%] [Cov:==================================>98%][Progress:========>                     29%] [Cov:==================================>98%][Progress:========>                     29%] [Cov:==================================>98%][Progress:========>                     29%] [Cov:==================================>98%][Progress:========>                     29%] [Cov:==================================>98%][Progress:========>                     29%] [Cov:==================================>98%][Progress:========>                     29%] [Cov:==================================>98%][Progress:========>                     29%] [Cov:==================================>98%][Progress:========>                     29%] [Cov:==================================>98%][Progress:=========>                    30%] [Cov:==================================>98%][Progress:=========>                    30%] [Cov:==================================>98%][Progress:=========>                    30%] [Cov:==================================>98%][Progress:=========>                    30%] [Cov:==================================>98%][Progress:=========>                    30%] [Cov:==================================>98%][Progress:=========>                    30%] [Cov:==================================>98%][Progress:=========>                    30%] [Cov:==================================>98%][Progress:=========>                    30%] [Cov:==================================>98%][Progress:=========>                    30%] [Cov:==================================>98%][Progress:=========>                    30%] [Cov:==================================>98%][Progress:=========>                    30%] [Cov:==================================>98%][Progress:=========>                    30%] [Cov:==================================>98%][Progress:=========>                    30%] [Cov:==================================>98%][Progress:=========>                    30%] [Cov:==================================>98%][Progress:=========>                    30%] [Cov:==================================>98%][Progress:=========>                    30%] [Cov:==================================>98%][Progress:=========>                    30%] [Cov:==================================>98%][Progress:=========>                    30%] [Cov:==================================>98%][Progress:=========>                    30%] [Cov:==================================>98%][Progress:=========>                    30%] [Cov:==================================>98%][Progress:=========>                    30%] [Cov:==================================>98%][Progress:=========>                    30%] [Cov:==================================>98%][Progress:=========>                    30%] [Cov:==================================>98%][Progress:=========>                    30%] [Cov:==================================>98%][Progress:=========>                    30%] [Cov:==================================>98%][Progress:=========>                    30%] [Cov:==================================>98%][Progress:=========>                    30%] [Cov:==================================>98%][Progress:=========>                    30%] [Cov:==================================>98%][Progress:=========>                    30%] [Cov:==================================>98%][Progress:=========>                    30%] [Cov:==================================>98%][Progress:=========>                    30%] [Cov:==================================>98%][Progress:=========>                    30%] [Cov:==================================>98%][Progress:=========>                    30%] [Cov:==================================>98%][Progress:=========>                    30%] [Cov:==================================>98%][Progress:=========>                    31%] [Cov:==================================>98%][Progress:=========>                    31%] [Cov:==================================>98%][Progress:=========>                    31%] [Cov:==================================>98%][Progress:=========>                    31%] [Cov:==================================>98%][Progress:=========>                    31%] [Cov:==================================>98%][Progress:=========>                    31%] [Cov:==================================>98%][Progress:=========>                    31%] [Cov:==================================>98%][Progress:=========>                    31%] [Cov:==================================>98%][Progress:=========>                    31%] [Cov:==================================>98%][Progress:=========>                    31%] [Cov:==================================>98%][Progress:=========>                    31%] [Cov:==================================>98%][Progress:=========>                    31%] [Cov:==================================>98%][Progress:=========>                    31%] [Cov:==================================>98%][Progress:=========>                    31%] [Cov:==================================>98%][Progress:=========>                    31%] [Cov:==================================>98%][Progress:=========>                    31%] [Cov:==================================>98%][Progress:=========>                    31%] [Cov:==================================>98%][Progress:=========>                    31%] [Cov:==================================>98%][Progress:=========>                    31%] [Cov:==================================>98%][Progress:=========>                    31%] [Cov:==================================>98%][Progress:=========>                    31%] [Cov:==================================>98%][Progress:=========>                    31%] [Cov:==================================>98%][Progress:=========>                    31%] [Cov:==================================>98%][Progress:=========>                    31%] [Cov:==================================>98%][Progress:=========>                    31%] [Cov:==================================>98%][Progress:=========>                    31%] [Cov:==================================>98%][MASTER] 01:55:35.775 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.chrono.ChronoLocalDate
[MASTER] 01:55:35.819 [logback-1] WARN  TestCluster - Failed to check cache for java.lang.Comparable<T> : Type points to itself
[Progress:=========>                    32%] [Cov:==================================>98%][Progress:=========>                    32%] [Cov:==================================>98%][Progress:=========>                    32%] [Cov:==================================>98%][Progress:=========>                    32%] [Cov:==================================>98%][Progress:=========>                    32%] [Cov:==================================>98%][Progress:=========>                    32%] [Cov:==================================>98%][Progress:=========>                    32%] [Cov:==================================>98%][Progress:=========>                    32%] [Cov:==================================>98%][Progress:=========>                    32%] [Cov:==================================>98%][Progress:=========>                    32%] [Cov:==================================>98%][Progress:=========>                    32%] [Cov:==================================>98%][Progress:=========>                    32%] [Cov:==================================>98%][Progress:=========>                    32%] [Cov:==================================>98%][Progress:=========>                    32%] [Cov:==================================>98%][Progress:=========>                    32%] [Cov:==================================>98%][Progress:=========>                    32%] [Cov:==================================>98%][Progress:=========>                    32%] [Cov:==================================>98%][Progress:=========>                    32%] [Cov:==================================>98%][Progress:=========>                    32%] [Cov:==================================>98%][Progress:=========>                    32%] [Cov:==================================>98%][Progress:=========>                    32%] [Cov:==================================>98%][Progress:=========>                    32%] [Cov:==================================>98%][Progress:=========>                    32%] [Cov:==================================>98%][Progress:=========>                    32%] [Cov:==================================>98%][Progress:=========>                    32%] [Cov:==================================>98%][Progress:=========>                    32%] [Cov:==================================>98%][Progress:=========>                    33%] [Cov:==================================>98%][Progress:=========>                    33%] [Cov:==================================>98%][Progress:=========>                    33%] [Cov:==================================>98%][Progress:=========>                    33%] [Cov:==================================>98%][Progress:=========>                    33%] [Cov:==================================>98%][Progress:=========>                    33%] [Cov:==================================>98%][Progress:=========>                    33%] [Cov:==================================>98%][Progress:=========>                    33%] [Cov:==================================>98%][Progress:=========>                    33%] [Cov:==================================>98%][Progress:=========>                    33%] [Cov:==================================>98%][Progress:=========>                    33%] [Cov:==================================>98%][Progress:=========>                    33%] [Cov:===================================100%]
* Search finished after 67s and 693 generations, 201716 statements, best individual has fitness: 0.0
* Generated before the refinement 11 tests with total length 49
statement is: Joshua.FoxHunt.HuntDisplay()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class Joshua.FoxHunt.HuntDisplay
statement code is: HuntDisplay huntDisplay = new HuntDisplay()
statement is: getPreferredSize()Ljava/awt/Dimension; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.awt.Dimension
statement code is: Dimension preferredSize = huntDisplay.getPreferredSize()
statement is: setSize(II)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: dimension.setSize(200, (int) (byte) (-105))
statement is: getPreferredSize()Ljava/awt/Dimension; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.awt.Dimension
statement code is: Dimension preferredSize = huntDisplay.getPreferredSize()
test data is: HuntDisplay huntDisplay = new HuntDisplay();
Dimension preferredSize = huntDisplay.getPreferredSize();
preferredSize.setSize(200, (int) (byte) (-105));
huntDisplay.getPreferredSize();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        HuntDisplay huntDisplay = new HuntDisplay();
        Dimension preferredSize = huntDisplay.getPreferredSize();
        preferredSize.setSize(200, 20);
        huntDisplay.getPreferredSize();
    }
}
statement is: HuntDisplay huntDisplay = new HuntDisplay(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Dimension preferredSize = huntDisplay.getPreferredSize(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: huntDisplay.getPreferredSize() target is: huntDisplay method is: getPreferredSize()
source statement: Joshua.FoxHunt.HuntDisplay()V callee: VariableReference: Statement 0, type Joshua.FoxHunt.HuntDisplayindex is: 0
source statement: Joshua.FoxHunt.HuntDisplay()V callee: VariableReference: Statement 0, type Joshua.FoxHunt.HuntDisplayindex is: 0
Matched Method is: getPreferredSize()Ljava/awt/Dimension;
statement is: preferredSize.setSize(200, 20), class spoon.support.reflect.code.CtInvocationImpl
invocation is: preferredSize.setSize(200, 20) target is: preferredSize method is: setSize(int,int)
source statement: getPreferredSize()Ljava/awt/Dimension; callee: VariableReference: Statement 1, type java.awt.Dimensionindex is: 1
Matched Method is: setSize(II)V
statement is: huntDisplay.getPreferredSize(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: huntDisplay.getPreferredSize() target is: huntDisplay method is: getPreferredSize()
source statement: Joshua.FoxHunt.HuntDisplay()V callee: VariableReference: Statement 0, type Joshua.FoxHunt.HuntDisplayindex is: 0
source statement: Joshua.FoxHunt.HuntDisplay()V callee: VariableReference: Statement 0, type Joshua.FoxHunt.HuntDisplayindex is: 0
Matched Method is: getPreferredSize()Ljava/awt/Dimension;
TestCase is: HuntDisplay huntDisplay = new HuntDisplay();
Dimension preferredSize = huntDisplay.getPreferredSize();
int _int = 200;
int _int = 20;
preferredSize.setSize(_int, _int);
huntDisplay.getPreferredSize();

statement is: Joshua.FoxHunt.HuntDisplay()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class Joshua.FoxHunt.HuntDisplay
statement code is: HuntDisplay huntDisplay = new HuntDisplay()
statement is: getMinimumSize()Ljava/awt/Dimension; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.awt.Dimension
statement code is: Dimension minimumSize = huntDisplay.getMinimumSize()
statement is: org.evosuite.testcase.statements.AssignmentStatement@4aee7531 type is: class org.evosuite.testcase.statements.AssignmentStatement return type int
statement code is: dimension.height = (-1)
statement is: getMinimumSize()Ljava/awt/Dimension; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.awt.Dimension
statement code is: Dimension minimumSize = huntDisplay.getMinimumSize()
test data is: HuntDisplay huntDisplay = new HuntDisplay();
Dimension minimumSize = huntDisplay.getMinimumSize();
minimumSize.height = (-1);
huntDisplay.getMinimumSize();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        HuntDisplay huntDisplay = new HuntDisplay();
        Dimension minimumSize = huntDisplay.getMinimumSize();
        minimumSize.height = 10;
        huntDisplay.getMinimumSize();
    }
}
statement is: HuntDisplay huntDisplay = new HuntDisplay(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Dimension minimumSize = huntDisplay.getMinimumSize(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: huntDisplay.getMinimumSize() target is: huntDisplay method is: getMinimumSize()
source statement: Joshua.FoxHunt.HuntDisplay()V callee: VariableReference: Statement 0, type Joshua.FoxHunt.HuntDisplayindex is: 0
source statement: Joshua.FoxHunt.HuntDisplay()V callee: VariableReference: Statement 0, type Joshua.FoxHunt.HuntDisplayindex is: 0
Matched Method is: getMinimumSize()Ljava/awt/Dimension;
statement is: minimumSize.height = 10, class spoon.support.reflect.code.CtAssignmentImpl
statement is: huntDisplay.getMinimumSize(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: huntDisplay.getMinimumSize() target is: huntDisplay method is: getMinimumSize()
source statement: Joshua.FoxHunt.HuntDisplay()V callee: VariableReference: Statement 0, type Joshua.FoxHunt.HuntDisplayindex is: 0
source statement: Joshua.FoxHunt.HuntDisplay()V callee: VariableReference: Statement 0, type Joshua.FoxHunt.HuntDisplayindex is: 0
Matched Method is: getMinimumSize()Ljava/awt/Dimension;
TestCase is: HuntDisplay huntDisplay = new HuntDisplay();
huntDisplay.getMinimumSize();
huntDisplay.getMinimumSize();

statement is: Joshua.FoxHunt.HuntDisplay()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class Joshua.FoxHunt.HuntDisplay
statement code is: HuntDisplay huntDisplay = new HuntDisplay()
statement is: java.awt.image.BufferedImage(III)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.awt.image.BufferedImage
statement code is: BufferedImage bufferedImage = new BufferedImage(9, 9, 9)
statement is: Joshua.FoxHunt.TrigPoint(DDD)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class Joshua.FoxHunt.TrigPoint
statement code is: TrigPoint trigPoint = new TrigPoint(180.0, 9, 180.0)
statement is: addPoint(LJoshua/FoxHunt/TrigPoint;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: huntDisplay.addPoint(arg0)
statement is: createGraphics()Ljava/awt/Graphics2D; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.awt.Graphics2D
statement code is: Graphics2D createGraphics = bufferedImage.createGraphics()
statement is: paintComponent(Ljava/awt/Graphics;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: huntDisplay.paintComponent(arg0)
test data is: HuntDisplay huntDisplay = new HuntDisplay();
BufferedImage bufferedImage = new BufferedImage(9, 9, 9);
TrigPoint trigPoint = new TrigPoint(180.0, 9, 180.0);
huntDisplay.addPoint(trigPoint);
Graphics2D createGraphics = bufferedImage.createGraphics();
huntDisplay.paintComponent(createGraphics);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        HuntDisplay huntDisplay = new HuntDisplay();
        BufferedImage bufferedImage = new BufferedImage(9, 9, 9);
        TrigPoint trigPoint = new TrigPoint(180.0, 9, 180.0);
        huntDisplay.addPoint(trigPoint);
        Graphics2D createGraphics = bufferedImage.createGraphics();
        huntDisplay.paintComponent(createGraphics);
        // Improved test data
        HuntDisplay huntDisplay = new HuntDisplay();
        BufferedImage bufferedImage = new BufferedImage(10, 10, 9);
        TrigPoint trigPoint = new TrigPoint(270.0, 10, 360.0);
        huntDisplay.addPoint(trigPoint);
        Graphics2D createGraphics = bufferedImage.createGraphics();
        huntDisplay.paintComponent(createGraphics);
    }
}
statement is: HuntDisplay huntDisplay = new HuntDisplay(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: BufferedImage bufferedImage = new BufferedImage(9, 9, 9), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: TrigPoint trigPoint = new TrigPoint(180.0, 9, 180.0), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: huntDisplay.addPoint(trigPoint), class spoon.support.reflect.code.CtInvocationImpl
invocation is: huntDisplay.addPoint(trigPoint) target is: huntDisplay method is: addPoint(TrigPoint)
source statement: Joshua.FoxHunt.HuntDisplay()V callee: VariableReference: Statement 0, type Joshua.FoxHunt.HuntDisplayindex is: 0
Matched Method is: addPoint(LJoshua/FoxHunt/TrigPoint;)V
statement is: Graphics2D createGraphics = bufferedImage.createGraphics(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: bufferedImage.createGraphics() target is: bufferedImage method is: createGraphics()
source statement: java.awt.image.BufferedImage(III)V callee: VariableReference: Statement 1, type java.awt.image.BufferedImageindex is: 4
Matched Method is: createGraphics()Ljava/awt/Graphics2D;
statement is: huntDisplay.paintComponent(createGraphics), class spoon.support.reflect.code.CtInvocationImpl
invocation is: huntDisplay.paintComponent(createGraphics) target is: huntDisplay method is: paintComponent(Graphics2D)
source statement: Joshua.FoxHunt.HuntDisplay()V callee: VariableReference: Statement 0, type Joshua.FoxHunt.HuntDisplayindex is: 0
Matched Method is: paintComponent(Ljava/awt/Graphics;)V
statement is: // Improved test data
HuntDisplay huntDisplay = new HuntDisplay(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: BufferedImage bufferedImage = new BufferedImage(10, 10, 9), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: TrigPoint trigPoint = new TrigPoint(270.0, 10, 360.0), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: huntDisplay.addPoint(trigPoint), class spoon.support.reflect.code.CtInvocationImpl
invocation is: huntDisplay.addPoint(trigPoint) target is: huntDisplay method is: addPoint(TrigPoint)
source statement: Joshua.FoxHunt.HuntDisplay()V callee: VariableReference: Statement 0, type Joshua.FoxHunt.HuntDisplayindex is: 12
Matched Method is: addPoint(LJoshua/FoxHunt/TrigPoint;)V
statement is: Graphics2D createGraphics = bufferedImage.createGraphics(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: bufferedImage.createGraphics() target is: bufferedImage method is: createGraphics()
source statement: java.awt.image.BufferedImage(III)V callee: VariableReference: Statement 1, type java.awt.image.BufferedImageindex is: 16
Matched Method is: createGraphics()Ljava/awt/Graphics2D;
statement is: huntDisplay.paintComponent(createGraphics), class spoon.support.reflect.code.CtInvocationImpl
invocation is: huntDisplay.paintComponent(createGraphics) target is: huntDisplay method is: paintComponent(Graphics2D)
source statement: Joshua.FoxHunt.HuntDisplay()V callee: VariableReference: Statement 0, type Joshua.FoxHunt.HuntDisplayindex is: 12
Matched Method is: paintComponent(Ljava/awt/Graphics;)V
TestCase is: HuntDisplay huntDisplay = new HuntDisplay();
int _int = 9;
int _int = 9;
int _int = 9;
BufferedImage bufferedImage = new BufferedImage(_int, _int, _int);
double _double = 180.0;
int _int = 9;
double _double = 180.0;
TrigPoint trigPoint = new TrigPoint(_double, _int, _double);
huntDisplay.addPoint(trigPoint);
Graphics2D createGraphics = ((BufferedImage) _int).createGraphics();
huntDisplay.paintComponent(createGraphics);
HuntDisplay huntDisplay = new HuntDisplay();
int _int = 10;
int _int = 10;
int _int = 9;
BufferedImage bufferedImage = new BufferedImage(_int, _int, _int);
double _double = 270.0;
int _int = 10;
double _double = 360.0;
TrigPoint trigPoint = new TrigPoint(_double, _int, _double);
huntDisplay.addPoint(trigPoint);
Graphics2D createGraphics = ((BufferedImage) _int).createGraphics();
huntDisplay.paintComponent(createGraphics);

statement is: Joshua.FoxHunt.HuntDisplay()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class Joshua.FoxHunt.HuntDisplay
statement code is: HuntDisplay huntDisplay = new HuntDisplay()
statement is: javax.swing.ImageIcon()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class javax.swing.ImageIcon
statement code is: ImageIcon imageIcon = new ImageIcon()
statement is: Joshua.FoxHunt.Landmark(DDLjavax/swing/ImageIcon;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class Joshua.FoxHunt.Landmark
statement code is: Landmark landmark = new Landmark(9, 9, arg2)
statement is: addLandMark(LJoshua/FoxHunt/Landmark;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: huntDisplay.addLandMark(arg0)
statement is: java.awt.image.BufferedImage(III)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.awt.image.BufferedImage
statement code is: BufferedImage bufferedImage = new BufferedImage(9, 9, 9)
statement is: Joshua.FoxHunt.TrigPoint(DDD)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class Joshua.FoxHunt.TrigPoint
statement code is: TrigPoint trigPoint = new TrigPoint(180.0, 9, 180.0)
statement is: addPoint(LJoshua/FoxHunt/TrigPoint;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: huntDisplay.addPoint(arg0)
statement is: createGraphics()Ljava/awt/Graphics2D; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.awt.Graphics2D
statement code is: Graphics2D createGraphics = bufferedImage.createGraphics()
statement is: paintComponent(Ljava/awt/Graphics;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: huntDisplay.paintComponent(arg0)
test data is: HuntDisplay huntDisplay = new HuntDisplay();
ImageIcon imageIcon = new ImageIcon();
Landmark landmark = new Landmark(9, 9, imageIcon);
huntDisplay.addLandMark(landmark);
BufferedImage bufferedImage = new BufferedImage(9, 9, 9);
TrigPoint trigPoint = new TrigPoint(180.0, 9, 180.0);
huntDisplay.addPoint(trigPoint);
Graphics2D createGraphics = bufferedImage.createGraphics();
huntDisplay.paintComponent(createGraphics);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        HuntDisplay huntDisplay = new HuntDisplay();
        ImageIcon imageIcon = new ImageIcon("path/to/image");
        Landmark landmark = new Landmark(9, 9, imageIcon);
        huntDisplay.addLandMark(landmark);
        BufferedImage bufferedImage = new BufferedImage(9, 9, BufferedImage.TYPE_INT_RGB);
        TrigPoint trigPoint = new TrigPoint(180.0, 9, 180.0);
        huntDisplay.addPoint(trigPoint);
        Graphics2D createGraphics = bufferedImage.createGraphics();
        huntDisplay.paintComponent(createGraphics);
    }
}
statement is: HuntDisplay huntDisplay = new HuntDisplay(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: ImageIcon imageIcon = new ImageIcon("path/to/image"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Landmark landmark = new Landmark(9, 9, imageIcon), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: huntDisplay.addLandMark(landmark), class spoon.support.reflect.code.CtInvocationImpl
invocation is: huntDisplay.addLandMark(landmark) target is: huntDisplay method is: addLandMark(Landmark)
source statement: Joshua.FoxHunt.HuntDisplay()V callee: VariableReference: Statement 0, type Joshua.FoxHunt.HuntDisplayindex is: 0
Matched Method is: addLandMark(LJoshua/FoxHunt/Landmark;)V
statement is: BufferedImage bufferedImage = new BufferedImage(9, 9, BufferedImage.TYPE_INT_RGB), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: TrigPoint trigPoint = new TrigPoint(180.0, 9, 180.0), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: huntDisplay.addPoint(trigPoint), class spoon.support.reflect.code.CtInvocationImpl
invocation is: huntDisplay.addPoint(trigPoint) target is: huntDisplay method is: addPoint(TrigPoint)
source statement: Joshua.FoxHunt.HuntDisplay()V callee: VariableReference: Statement 0, type Joshua.FoxHunt.HuntDisplayindex is: 0
Matched Method is: addPoint(LJoshua/FoxHunt/TrigPoint;)V
statement is: Graphics2D createGraphics = bufferedImage.createGraphics(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: bufferedImage.createGraphics() target is: bufferedImage method is: createGraphics()
source statement: java.awt.image.BufferedImage(III)V callee: VariableReference: Statement 4, type java.awt.image.BufferedImageindex is: 7
Matched Method is: createGraphics()Ljava/awt/Graphics2D;
statement is: huntDisplay.paintComponent(createGraphics), class spoon.support.reflect.code.CtInvocationImpl
invocation is: huntDisplay.paintComponent(createGraphics) target is: huntDisplay method is: paintComponent(Graphics2D)
source statement: Joshua.FoxHunt.HuntDisplay()V callee: VariableReference: Statement 0, type Joshua.FoxHunt.HuntDisplayindex is: 0
Matched Method is: paintComponent(Ljava/awt/Graphics;)V
TestCase is: HuntDisplay huntDisplay = new HuntDisplay();
int _int = 9;
int _int = 9;
Landmark landmark = new Landmark(_int, _int, (ImageIcon) _int);
huntDisplay.addLandMark(landmark);
int _int = 9;
int _int = 9;
BufferedImage bufferedImage = new BufferedImage(_int, _int, 9);
double _double = 180.0;
int _int = 9;
double _double = 180.0;
TrigPoint trigPoint = new TrigPoint(_double, _int, _double);
huntDisplay.addPoint(trigPoint);
Graphics2D createGraphics = ((BufferedImage) _void).createGraphics();
huntDisplay.paintComponent(createGraphics);

statement is: Joshua.FoxHunt.HuntDisplay()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class Joshua.FoxHunt.HuntDisplay
statement code is: HuntDisplay huntDisplay = new HuntDisplay()
statement is: Joshua.FoxHunt.TrigPoint(DDDZ)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class Joshua.FoxHunt.TrigPoint
statement code is: TrigPoint trigPoint = new TrigPoint(2043.964, 2043.964, 2043.964, true)
statement is: addPoint(LJoshua/FoxHunt/TrigPoint;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: huntDisplay.addPoint(arg0)
statement is: paintComponent(Ljava/awt/Graphics;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: huntDisplay.paintComponent((Graphics) null)
test data is: HuntDisplay huntDisplay = new HuntDisplay();
TrigPoint trigPoint = new TrigPoint(2043.964, 2043.964, 2043.964, true);
huntDisplay.addPoint(trigPoint);
huntDisplay.paintComponent((Graphics) null);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        HuntDisplay huntDisplay = new HuntDisplay();
        TrigPoint trigPoint = new TrigPoint(2043.964, 2043.964, 2043.964, true);// Replace with more descriptive and representative values for the x, y, z coordinates and the boolean value

        huntDisplay.addPoint(trigPoint);
        huntDisplay.paintComponent(((Graphics) (null)));
    }
}
statement is: HuntDisplay huntDisplay = new HuntDisplay(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: TrigPoint trigPoint = new TrigPoint(2043.964, 2043.964, 2043.964, true)// Replace with more descriptive and representative values for the x, y, z coordinates and the boolean value
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: huntDisplay.addPoint(trigPoint), class spoon.support.reflect.code.CtInvocationImpl
invocation is: huntDisplay.addPoint(trigPoint) target is: huntDisplay method is: addPoint(TrigPoint)
source statement: Joshua.FoxHunt.HuntDisplay()V callee: VariableReference: Statement 0, type Joshua.FoxHunt.HuntDisplayindex is: 0
Matched Method is: addPoint(LJoshua/FoxHunt/TrigPoint;)V
statement is: huntDisplay.paintComponent(((Graphics) (null))), class spoon.support.reflect.code.CtInvocationImpl
invocation is: huntDisplay.paintComponent(((Graphics) (null))) target is: huntDisplay method is: paintComponent(Graphics)
source statement: Joshua.FoxHunt.HuntDisplay()V callee: VariableReference: Statement 0, type Joshua.FoxHunt.HuntDisplayindex is: 0
Matched Method is: paintComponent(Ljava/awt/Graphics;)V
i 0 Parameters size() 0 Num of Method Parameters: 1
TestCase is: HuntDisplay huntDisplay = new HuntDisplay();
double _double = 2043.964;
double _double = 2043.964;
double _double = 2043.964;
boolean _boolean = true;
TrigPoint trigPoint = new TrigPoint(_double, _double, _double, _boolean);
huntDisplay.addPoint(trigPoint);
Graphics graphics = null;
huntDisplay.paintComponent(graphics);

statement is: Joshua.FoxHunt.HuntDisplay()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class Joshua.FoxHunt.HuntDisplay
statement code is: HuntDisplay huntDisplay = new HuntDisplay()
statement is: getMinimumSize()Ljava/awt/Dimension; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.awt.Dimension
statement code is: Dimension minimumSize = huntDisplay.getMinimumSize()
statement is: org.evosuite.testcase.statements.AssignmentStatement@bc121b7a type is: class org.evosuite.testcase.statements.AssignmentStatement return type int
statement code is: dimension.height = 0
statement is: getMinimumSize()Ljava/awt/Dimension; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.awt.Dimension
statement code is: Dimension minimumSize = huntDisplay.getMinimumSize()
test data is: HuntDisplay huntDisplay = new HuntDisplay();
Dimension minimumSize = huntDisplay.getMinimumSize();
minimumSize.height = 0;
huntDisplay.getMinimumSize();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        HuntDisplay huntDisplay = new HuntDisplay();
        Dimension minimumSize = huntDisplay.getMinimumSize();
        minimumSize.height = 50;// change to a more descriptive value, such as 100 or 200

        huntDisplay.getMinimumSize();
    }
}
statement is: HuntDisplay huntDisplay = new HuntDisplay(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Dimension minimumSize = huntDisplay.getMinimumSize(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: huntDisplay.getMinimumSize() target is: huntDisplay method is: getMinimumSize()
source statement: Joshua.FoxHunt.HuntDisplay()V callee: VariableReference: Statement 0, type Joshua.FoxHunt.HuntDisplayindex is: 0
source statement: Joshua.FoxHunt.HuntDisplay()V callee: VariableReference: Statement 0, type Joshua.FoxHunt.HuntDisplayindex is: 0
Matched Method is: getMinimumSize()Ljava/awt/Dimension;
statement is: minimumSize.height = 50// change to a more descriptive value, such as 100 or 200
, class spoon.support.reflect.code.CtAssignmentImpl
statement is: huntDisplay.getMinimumSize(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: huntDisplay.getMinimumSize() target is: huntDisplay method is: getMinimumSize()
source statement: Joshua.FoxHunt.HuntDisplay()V callee: VariableReference: Statement 0, type Joshua.FoxHunt.HuntDisplayindex is: 0
source statement: Joshua.FoxHunt.HuntDisplay()V callee: VariableReference: Statement 0, type Joshua.FoxHunt.HuntDisplayindex is: 0
Matched Method is: getMinimumSize()Ljava/awt/Dimension;
TestCase is: HuntDisplay huntDisplay = new HuntDisplay();
huntDisplay.getMinimumSize();
huntDisplay.getMinimumSize();

statement is: Joshua.FoxHunt.HuntDisplay()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class Joshua.FoxHunt.HuntDisplay
statement code is: HuntDisplay huntDisplay = new HuntDisplay()
statement is: getMinimumSize()Ljava/awt/Dimension; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.awt.Dimension
statement code is: Dimension minimumSize = huntDisplay.getMinimumSize()
statement is: setSize(II)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: dimension.setSize((-5329), 659)
statement is: getMinimumSize()Ljava/awt/Dimension; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.awt.Dimension
statement code is: Dimension minimumSize = huntDisplay.getMinimumSize()
test data is: HuntDisplay huntDisplay = new HuntDisplay();
Dimension minimumSize = huntDisplay.getMinimumSize();
minimumSize.setSize((-5329), 659);
huntDisplay.getMinimumSize();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        HuntDisplay huntDisplay = new HuntDisplay();
        Dimension minimumSize = huntDisplay.getMinimumSize();
        minimumSize.setSize(-5329, 659);// Improved test data: replaced the negative value with a more descriptive example (-5329) to make it easier to understand what the code is testing.

        huntDisplay.getMinimumSize();
    }
}
statement is: HuntDisplay huntDisplay = new HuntDisplay(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Dimension minimumSize = huntDisplay.getMinimumSize(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: huntDisplay.getMinimumSize() target is: huntDisplay method is: getMinimumSize()
source statement: Joshua.FoxHunt.HuntDisplay()V callee: VariableReference: Statement 0, type Joshua.FoxHunt.HuntDisplayindex is: 0
source statement: Joshua.FoxHunt.HuntDisplay()V callee: VariableReference: Statement 0, type Joshua.FoxHunt.HuntDisplayindex is: 0
Matched Method is: getMinimumSize()Ljava/awt/Dimension;
statement is: minimumSize.setSize(-5329, 659)// Improved test data: replaced the negative value with a more descriptive example (-5329) to make it easier to understand what the code is testing.
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: minimumSize.setSize(-5329, 659)// Improved test data: replaced the negative value with a more descriptive example (-5329) to make it easier to understand what the code is testing.
 target is: minimumSize method is: setSize(int,int)
source statement: getMinimumSize()Ljava/awt/Dimension; callee: VariableReference: Statement 1, type java.awt.Dimensionindex is: 1
Matched Method is: setSize(II)V
i 1 Parameters size() 1 Num of Method Parameters: 2
statement is: huntDisplay.getMinimumSize(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: huntDisplay.getMinimumSize() target is: huntDisplay method is: getMinimumSize()
source statement: Joshua.FoxHunt.HuntDisplay()V callee: VariableReference: Statement 0, type Joshua.FoxHunt.HuntDisplayindex is: 0
source statement: Joshua.FoxHunt.HuntDisplay()V callee: VariableReference: Statement 0, type Joshua.FoxHunt.HuntDisplayindex is: 0
Matched Method is: getMinimumSize()Ljava/awt/Dimension;
TestCase is: HuntDisplay huntDisplay = new HuntDisplay();
Dimension minimumSize = huntDisplay.getMinimumSize();
int _int = 659;
int _int = null;
minimumSize.setSize(_int, _int);
huntDisplay.getMinimumSize();

statement is: Joshua.FoxHunt.HuntDisplay()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class Joshua.FoxHunt.HuntDisplay
statement code is: HuntDisplay huntDisplay = new HuntDisplay()
statement is: org.evosuite.testcase.statements.AssignmentStatement@e5a2e747 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.awt.Dimension
statement code is: huntDisplay.minSize = null
statement is: getMinimumSize()Ljava/awt/Dimension; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.awt.Dimension
statement code is: Dimension minimumSize = huntDisplay.getMinimumSize()
test data is: HuntDisplay huntDisplay = new HuntDisplay();
huntDisplay.minSize = null;
huntDisplay.getMinimumSize();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        HuntDisplay huntDisplay = new HuntDisplay();
        huntDisplay.minSize = new Dimension(50, 100);
        huntDisplay.getMinimumSize();
        HuntDisplay huntDisplay2 = new HuntDisplay();
        huntDisplay2.minSize = new Dimension(0, 0);
        huntDisplay2.getMinimumSize();
        HuntDisplay huntDisplay3 = new HuntDisplay();
        huntDisplay3.minSize = null;
        huntDisplay3.getMinimumSize();
    }
}
statement is: HuntDisplay huntDisplay = new HuntDisplay(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: huntDisplay.minSize = new Dimension(50, 100), class spoon.support.reflect.code.CtAssignmentImpl
statement is: huntDisplay.getMinimumSize(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: huntDisplay.getMinimumSize() target is: huntDisplay method is: getMinimumSize()
source statement: Joshua.FoxHunt.HuntDisplay()V callee: VariableReference: Statement 0, type Joshua.FoxHunt.HuntDisplayindex is: 0
Matched Method is: getMinimumSize()Ljava/awt/Dimension;
statement is: HuntDisplay huntDisplay2 = new HuntDisplay(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: huntDisplay2.minSize = new Dimension(0, 0), class spoon.support.reflect.code.CtAssignmentImpl
statement is: huntDisplay2.getMinimumSize(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: huntDisplay2.getMinimumSize() target is: huntDisplay2 method is: getMinimumSize()
source statement: Joshua.FoxHunt.HuntDisplay()V callee: VariableReference: Statement 0, type Joshua.FoxHunt.HuntDisplayindex is: 2
Matched Method is: getMinimumSize()Ljava/awt/Dimension;
statement is: HuntDisplay huntDisplay3 = new HuntDisplay(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: huntDisplay3.minSize = null, class spoon.support.reflect.code.CtAssignmentImpl
statement is: huntDisplay3.getMinimumSize(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: huntDisplay3.getMinimumSize() target is: huntDisplay3 method is: getMinimumSize()
source statement: Joshua.FoxHunt.HuntDisplay()V callee: VariableReference: Statement 0, type Joshua.FoxHunt.HuntDisplayindex is: 4
Matched Method is: getMinimumSize()Ljava/awt/Dimension;
TestCase is: HuntDisplay huntDisplay = new HuntDisplay();
huntDisplay.getMinimumSize();
HuntDisplay huntDisplay = new HuntDisplay();
huntDisplay.getMinimumSize();
HuntDisplay huntDisplay = new HuntDisplay();
huntDisplay.getMinimumSize();

statement is: Joshua.FoxHunt.HuntDisplay()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class Joshua.FoxHunt.HuntDisplay
statement code is: HuntDisplay huntDisplay = new HuntDisplay()
statement is: getPreferredSize()Ljava/awt/Dimension; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.awt.Dimension
statement code is: Dimension preferredSize = huntDisplay.getPreferredSize()
statement is: setSize(DD)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: dimension.setSize((double) (-1), 0.0)
statement is: getPreferredSize()Ljava/awt/Dimension; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.awt.Dimension
statement code is: Dimension preferredSize = huntDisplay.getPreferredSize()
test data is: HuntDisplay huntDisplay = new HuntDisplay();
Dimension preferredSize = huntDisplay.getPreferredSize();
preferredSize.setSize((double) (-1), 0.0);
huntDisplay.getPreferredSize();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Dimension actualSize = huntDisplay.getPreferredSize();
        Assert.assertEquals(actualSize, new Dimension(100.0, 100.0));// assert that the actual size matches the expected value }}

    }
}
statement is: Dimension actualSize = huntDisplay.getPreferredSize(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: huntDisplay.getPreferredSize() target is: huntDisplay method is: getPreferredSize()
statement is: Assert.assertEquals(actualSize, new Dimension(100.0, 100.0))// assert that the actual size matches the expected value }}
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: Assert.assertEquals(actualSize, new Dimension(100.0, 100.0))// assert that the actual size matches the expected value }}
 target is: Assert method is: assertEquals(Dimension,Dimension)
statement is: Joshua.FoxHunt.HuntDisplay()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class Joshua.FoxHunt.HuntDisplay
statement code is: HuntDisplay huntDisplay = new HuntDisplay()
statement is: getPreferredSize()Ljava/awt/Dimension; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.awt.Dimension
statement code is: Dimension preferredSize = huntDisplay.getPreferredSize()
statement is: org.evosuite.testcase.statements.AssignmentStatement@9e50a8f1 type is: class org.evosuite.testcase.statements.AssignmentStatement return type int
statement code is: dimension.width = 0
statement is: getPreferredSize()Ljava/awt/Dimension; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.awt.Dimension
statement code is: Dimension preferredSize = huntDisplay.getPreferredSize()
test data is: HuntDisplay huntDisplay = new HuntDisplay();
Dimension preferredSize = huntDisplay.getPreferredSize();
preferredSize.width = 0;
huntDisplay.getPreferredSize();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        and = $missing$;
    }
}
statement is: and = $missing$, class spoon.support.reflect.code.CtAssignmentImpl
statement is: Joshua.FoxHunt.HuntDisplay()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class Joshua.FoxHunt.HuntDisplay
statement code is: HuntDisplay huntDisplay = new HuntDisplay()
statement is: org.evosuite.testcase.statements.AssignmentStatement@48c532aa type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.awt.Dimension
statement code is: huntDisplay.prefSize = null
statement is: getPreferredSize()Ljava/awt/Dimension; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.awt.Dimension
statement code is: Dimension preferredSize = huntDisplay.getPreferredSize()
test data is: HuntDisplay huntDisplay = new HuntDisplay();
huntDisplay.prefSize = null;
huntDisplay.getPreferredSize();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        HuntDisplay huntDisplay = new HuntDisplay();
        huntDisplay.prefSize = new Dimension(50, 20);
        String str = "Hello World";
        char ch = 'A';
        int i = 10;
        double d = 3.14;
    }
}
statement is: HuntDisplay huntDisplay = new HuntDisplay(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: huntDisplay.prefSize = new Dimension(50, 20), class spoon.support.reflect.code.CtAssignmentImpl
statement is: String str = "Hello World", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: char ch = 'A', class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: int i = 10, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: double d = 3.14, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
* this is vulnerable: String string = "Hello World"
* this is vulnerable: char _char = 'A'
* this is vulnerable: int _int = 10
* this is vulnerable: double _double = 3.14
TestCase is: HuntDisplay huntDisplay = new HuntDisplay();
String string = "Hello World";
char _char = 'A';
int _int = 10;
double _double = 3.14;

* test suite isTestSuite: 20
Test 0: 
HuntDisplay huntDisplay = new HuntDisplay();
Dimension preferredSize = huntDisplay.getPreferredSize();
preferredSize.setSize(200, (int) (byte) (-105));
huntDisplay.getPreferredSize();
Test 1: 
HuntDisplay huntDisplay = new HuntDisplay();
Dimension minimumSize = huntDisplay.getMinimumSize();
minimumSize.height = (-1);
huntDisplay.getMinimumSize();
Test 2: 
HuntDisplay huntDisplay = new HuntDisplay();
BufferedImage bufferedImage = new BufferedImage(9, 9, 9);
TrigPoint trigPoint = new TrigPoint(180.0, 9, 180.0);
huntDisplay.addPoint(trigPoint);
Graphics2D createGraphics = bufferedImage.createGraphics();
huntDisplay.paintComponent(createGraphics);
Test 3: 
HuntDisplay huntDisplay = new HuntDisplay();
ImageIcon imageIcon = new ImageIcon();
Landmark landmark = new Landmark(9, 9, imageIcon);
huntDisplay.addLandMark(landmark);
BufferedImage bufferedImage = new BufferedImage(9, 9, 9);
TrigPoint trigPoint = new TrigPoint(180.0, 9, 180.0);
huntDisplay.addPoint(trigPoint);
Graphics2D createGraphics = bufferedImage.createGraphics();
huntDisplay.paintComponent(createGraphics);
Test 4: 
HuntDisplay huntDisplay = new HuntDisplay();
TrigPoint trigPoint = new TrigPoint(2043.964, 2043.964, 2043.964, true);
huntDisplay.addPoint(trigPoint);
// Undeclared exception!
try { 
  huntDisplay.paintComponent((Graphics) null);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("Joshua.FoxHunt.HuntDisplay", e);
}

Test 5: 
HuntDisplay huntDisplay = new HuntDisplay();
Dimension minimumSize = huntDisplay.getMinimumSize();
minimumSize.height = 0;
huntDisplay.getMinimumSize();
Test 6: 
HuntDisplay huntDisplay = new HuntDisplay();
Dimension minimumSize = huntDisplay.getMinimumSize();
minimumSize.setSize((-5329), 659);
huntDisplay.getMinimumSize();
Test 7: 
HuntDisplay huntDisplay = new HuntDisplay();
huntDisplay.minSize = null;
huntDisplay.getMinimumSize();
Test 8: 
HuntDisplay huntDisplay = new HuntDisplay();
Dimension preferredSize = huntDisplay.getPreferredSize();
preferredSize.setSize((double) (-1), 0.0);
huntDisplay.getPreferredSize();
Test 9: 
HuntDisplay huntDisplay = new HuntDisplay();
Dimension preferredSize = huntDisplay.getPreferredSize();
preferredSize.width = 0;
huntDisplay.getPreferredSize();
Test 10: 
HuntDisplay huntDisplay = new HuntDisplay();
huntDisplay.prefSize = null;
huntDisplay.getPreferredSize();
Test 11: 
HuntDisplay huntDisplay = new HuntDisplay();
Dimension preferredSize = huntDisplay.getPreferredSize();
preferredSize.setSize(200, 20);
huntDisplay.getPreferredSize();

Test 12: 
HuntDisplay huntDisplay = new HuntDisplay();
huntDisplay.getMinimumSize();
huntDisplay.getMinimumSize();

Test 13: 
HuntDisplay huntDisplay = new HuntDisplay();
int _int = 9;
BufferedImage bufferedImage = new BufferedImage(9, 9, 9);
TrigPoint trigPoint = new TrigPoint(180.0, 9, 180.0);
huntDisplay.addPoint(trigPoint);
Graphics2D createGraphics = ((BufferedImage)9).createGraphics();
huntDisplay.paintComponent(createGraphics);
HuntDisplay huntDisplay = new HuntDisplay();
int _int = 10;
int _int = 10;
int _int = 9;
BufferedImage bufferedImage = new BufferedImage(_int, _int, _int);
double _double = 270.0;
int _int = 10;
double _double = 360.0;
TrigPoint trigPoint = new TrigPoint(_double, _int, _double);
huntDisplay.addPoint(trigPoint);
Graphics2D createGraphics = ((BufferedImage) _int).createGraphics();
huntDisplay.paintComponent(createGraphics);

Test 14: 
HuntDisplay huntDisplay = new HuntDisplay();
Landmark landmark = new Landmark(9, 9, (ImageIcon) 9);
huntDisplay.addLandMark(landmark);
int _int = 9;
int _int = 9;
BufferedImage bufferedImage = new BufferedImage(_int, _int, 9);
double _double = 180.0;
int _int = 9;
double _double = 180.0;
TrigPoint trigPoint = new TrigPoint(_double, _int, _double);
huntDisplay.addPoint(trigPoint);
Graphics2D createGraphics = ((BufferedImage) _void).createGraphics();
huntDisplay.paintComponent(createGraphics);

Test 15: 
HuntDisplay huntDisplay = new HuntDisplay();
TrigPoint trigPoint = new TrigPoint(2043.964, 2043.964, 2043.964, true);
huntDisplay.addPoint(trigPoint);
huntDisplay.paintComponent((Graphics) null);

Test 16: 
HuntDisplay huntDisplay = new HuntDisplay();
huntDisplay.getMinimumSize();
huntDisplay.getMinimumSize();

Test 17: 
HuntDisplay huntDisplay = new HuntDisplay();
Dimension minimumSize = huntDisplay.getMinimumSize();
minimumSize.setSize(659, (int) (Integer) null);
huntDisplay.getMinimumSize();

Test 18: 
HuntDisplay huntDisplay = new HuntDisplay();
huntDisplay.getMinimumSize();
HuntDisplay huntDisplay = new HuntDisplay();
huntDisplay.getMinimumSize();
HuntDisplay huntDisplay = new HuntDisplay();
huntDisplay.getMinimumSize();

Test 19: 
HuntDisplay huntDisplay = new HuntDisplay();


* Generated after the refinement and before minimization 20 tests with total length 106
* test suite isTestSuite: 20
Test 0: 
HuntDisplay huntDisplay = new HuntDisplay();
Dimension preferredSize = huntDisplay.getPreferredSize();
preferredSize.setSize(200, (int) (byte) (-105));
huntDisplay.getPreferredSize();
Test 1: 
HuntDisplay huntDisplay = new HuntDisplay();
Dimension minimumSize = huntDisplay.getMinimumSize();
minimumSize.height = (-1);
huntDisplay.getMinimumSize();
Test 2: 
HuntDisplay huntDisplay = new HuntDisplay();
BufferedImage bufferedImage = new BufferedImage(9, 9, 9);
TrigPoint trigPoint = new TrigPoint(180.0, 9, 180.0);
huntDisplay.addPoint(trigPoint);
Graphics2D createGraphics = bufferedImage.createGraphics();
huntDisplay.paintComponent(createGraphics);
Test 3: 
HuntDisplay huntDisplay = new HuntDisplay();
ImageIcon imageIcon = new ImageIcon();
Landmark landmark = new Landmark(9, 9, imageIcon);
huntDisplay.addLandMark(landmark);
BufferedImage bufferedImage = new BufferedImage(9, 9, 9);
TrigPoint trigPoint = new TrigPoint(180.0, 9, 180.0);
huntDisplay.addPoint(trigPoint);
Graphics2D createGraphics = bufferedImage.createGraphics();
huntDisplay.paintComponent(createGraphics);
Test 4: 
HuntDisplay huntDisplay = new HuntDisplay();
TrigPoint trigPoint = new TrigPoint(2043.964, 2043.964, 2043.964, true);
huntDisplay.addPoint(trigPoint);
// Undeclared exception!
try { 
  huntDisplay.paintComponent((Graphics) null);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("Joshua.FoxHunt.HuntDisplay", e);
}

Test 5: 
HuntDisplay huntDisplay = new HuntDisplay();
Dimension minimumSize = huntDisplay.getMinimumSize();
minimumSize.height = 0;
huntDisplay.getMinimumSize();
Test 6: 
HuntDisplay huntDisplay = new HuntDisplay();
Dimension minimumSize = huntDisplay.getMinimumSize();
minimumSize.setSize((-5329), 659);
huntDisplay.getMinimumSize();
Test 7: 
HuntDisplay huntDisplay = new HuntDisplay();
huntDisplay.minSize = null;
huntDisplay.getMinimumSize();
Test 8: 
HuntDisplay huntDisplay = new HuntDisplay();
Dimension preferredSize = huntDisplay.getPreferredSize();
preferredSize.setSize((double) (-1), 0.0);
huntDisplay.getPreferredSize();
Test 9: 
HuntDisplay huntDisplay = new HuntDisplay();
Dimension preferredSize = huntDisplay.getPreferredSize();
preferredSize.width = 0;
huntDisplay.getPreferredSize();
Test 10: 
HuntDisplay huntDisplay = new HuntDisplay();
huntDisplay.prefSize = null;
huntDisplay.getPreferredSize();
Test 11: 
HuntDisplay huntDisplay = new HuntDisplay();
Dimension preferredSize = huntDisplay.getPreferredSize();
preferredSize.setSize(200, 20);
huntDisplay.getPreferredSize();

Test 12: 
HuntDisplay huntDisplay = new HuntDisplay();
huntDisplay.getMinimumSize();
huntDisplay.getMinimumSize();

Test 13: 
HuntDisplay huntDisplay = new HuntDisplay();
int _int = 9;
BufferedImage bufferedImage = new BufferedImage(9, 9, 9);
TrigPoint trigPoint = new TrigPoint(180.0, 9, 180.0);
huntDisplay.addPoint(trigPoint);
Graphics2D createGraphics = ((BufferedImage)9).createGraphics();
huntDisplay.paintComponent(createGraphics);
HuntDisplay huntDisplay = new HuntDisplay();
int _int = 10;
int _int = 10;
int _int = 9;
BufferedImage bufferedImage = new BufferedImage(_int, _int, _int);
double _double = 270.0;
int _int = 10;
double _double = 360.0;
TrigPoint trigPoint = new TrigPoint(_double, _int, _double);
huntDisplay.addPoint(trigPoint);
Graphics2D createGraphics = ((BufferedImage) _int).createGraphics();
huntDisplay.paintComponent(createGraphics);

Test 14: 
HuntDisplay huntDisplay = new HuntDisplay();
Landmark landmark = new Landmark(9, 9, (ImageIcon) 9);
huntDisplay.addLandMark(landmark);
int _int = 9;
int _int = 9;
BufferedImage bufferedImage = new BufferedImage(_int, _int, 9);
double _double = 180.0;
int _int = 9;
double _double = 180.0;
TrigPoint trigPoint = new TrigPoint(_double, _int, _double);
huntDisplay.addPoint(trigPoint);
Graphics2D createGraphics = ((BufferedImage) _void).createGraphics();
huntDisplay.paintComponent(createGraphics);

Test 15: 
HuntDisplay huntDisplay = new HuntDisplay();
TrigPoint trigPoint = new TrigPoint(2043.964, 2043.964, 2043.964, true);
huntDisplay.addPoint(trigPoint);
huntDisplay.paintComponent((Graphics) null);

Test 16: 
HuntDisplay huntDisplay = new HuntDisplay();
huntDisplay.getMinimumSize();
huntDisplay.getMinimumSize();

Test 17: 
HuntDisplay huntDisplay = new HuntDisplay();
Dimension minimumSize = huntDisplay.getMinimumSize();
minimumSize.setSize(659, (int) (Integer) null);
huntDisplay.getMinimumSize();

Test 18: 
HuntDisplay huntDisplay = new HuntDisplay();
huntDisplay.getMinimumSize();
HuntDisplay huntDisplay = new HuntDisplay();
huntDisplay.getMinimumSize();
HuntDisplay huntDisplay = new HuntDisplay();
huntDisplay.getMinimumSize();

Test 19: 
HuntDisplay huntDisplay = new HuntDisplay();


* Minimizing test suite
* test suite isTestSuite: 11
Test 0: 
HuntDisplay huntDisplay = new HuntDisplay();
Dimension preferredSize = huntDisplay.getPreferredSize();
preferredSize.setSize(200, (int) (byte) (-105));
huntDisplay.getPreferredSize();
Test 1: 
HuntDisplay huntDisplay = new HuntDisplay();
TrigPoint trigPoint = new TrigPoint(2043.964, 2043.964, 2043.964, true);
huntDisplay.addPoint(trigPoint);
// Undeclared exception!
try { 
  huntDisplay.paintComponent((Graphics) null);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("Joshua.FoxHunt.HuntDisplay", e);
}

Test 2: 
HuntDisplay huntDisplay = new HuntDisplay();
Dimension minimumSize = huntDisplay.getMinimumSize();
minimumSize.height = (-1);
huntDisplay.getMinimumSize();
Test 3: 
HuntDisplay huntDisplay = new HuntDisplay();
ImageIcon imageIcon = new ImageIcon();
Landmark landmark = new Landmark(9, 9, imageIcon);
huntDisplay.addLandMark(landmark);
BufferedImage bufferedImage = new BufferedImage(9, 9, 9);
TrigPoint trigPoint = new TrigPoint(180.0, 9, 180.0);
huntDisplay.addPoint(trigPoint);
Graphics2D createGraphics = bufferedImage.createGraphics();
huntDisplay.paintComponent(createGraphics);
Test 4: 
HuntDisplay huntDisplay = new HuntDisplay();
BufferedImage bufferedImage = new BufferedImage(9, 9, 9);
Graphics2D createGraphics = bufferedImage.createGraphics();
huntDisplay.paintComponent(createGraphics);
Test 5: 
HuntDisplay huntDisplay = new HuntDisplay();
Dimension minimumSize = huntDisplay.getMinimumSize();
minimumSize.height = 0;
huntDisplay.getMinimumSize();
Test 6: 
HuntDisplay huntDisplay = new HuntDisplay();
Dimension minimumSize = huntDisplay.getMinimumSize();
minimumSize.setSize((-5329), 659);
huntDisplay.getMinimumSize();
Test 7: 
HuntDisplay huntDisplay = new HuntDisplay();
huntDisplay.minSize = null;
huntDisplay.getMinimumSize();
Test 8: 
HuntDisplay huntDisplay = new HuntDisplay();
Dimension preferredSize = huntDisplay.getPreferredSize();
preferredSize.setSize((double) (-1), 0.0);
huntDisplay.getPreferredSize();
Test 9: 
HuntDisplay huntDisplay = new HuntDisplay();
Dimension preferredSize = huntDisplay.getPreferredSize();
preferredSize.width = 0;
huntDisplay.getPreferredSize();
Test 10: 
HuntDisplay huntDisplay = new HuntDisplay();
huntDisplay.prefSize = null;
huntDisplay.getPreferredSize();

* Going to analyze the coverage criteria
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 100%
* Total number of goals: 23
* Number of covered goals: 23
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 100%
* Total number of goals: 50
* Number of covered goals: 50
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 93%
* Total number of goals: 14
* Number of covered goals: 13
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 6
* Number of covered goals: 6
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 100%
* Total number of goals: 23
* Number of covered goals: 23
* Generated 11 tests with total length 47
* Resulting test suite's coverage: 100% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 36%
* Compiling and checking tests
Going to execute: removeTestsThatDoNotCompile
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: HuntDisplay huntDisplay = new HuntDisplay();
TrigPoint arg0 = new TrigPoint(2043.964, 2043.964, 2043.964, true);
huntDisplay.addPoint(arg0);
// Undeclared exception!
try { 
  huntDisplay.paintComponent((Graphics) null);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("Joshua.FoxHunt.HuntDisplay", e);
}


** It was a parseable test case! 
refined test name is: testAddPointnullGraphicsthrowsNullPointerException
* Compiling Tests
refined test name is: testAddPointAndPaintComponentWithNullGraphics
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: HuntDisplay huntDisplay = new HuntDisplay();
BufferedImage bufferedImage = new BufferedImage(9, 9, 9);
Graphics2D arg0 = bufferedImage.createGraphics();
huntDisplay.paintComponent(arg0);
assertFalse(huntDisplay.isFocusTraversalPolicyProvider());


** It was a parseable test case! 
refined test name is: testFocusTraversalPolicyProviderIsFalse
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: HuntDisplay huntDisplay = new HuntDisplay();
huntDisplay.minSize = null;
Dimension minimumSize = huntDisplay.getMinimumSize();
assertNull(minimumSize);


** It was a parseable test case! 
refined test name is: testGetMinimumSizeReturnsNullWhenSizeIsSetToNull
* Compiling Tests
refined test name is: testGetMinimumSizeWhenSetToNull
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: HuntDisplay huntDisplay = new HuntDisplay();
huntDisplay.prefSize = null;
Dimension preferredSize = huntDisplay.getPreferredSize();
assertNull(preferredSize);


** It was a parseable test case! 
refined test name is: testGetPreferredSizeWhenNotSet
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 03:07:22.089 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar6001384034367754672.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 03:07:22.150 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar6001384034367754672.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 03:07:22.257 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar6001384034367754672.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 03:07:22.259 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar6001384034367754672.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 03:07:22.340 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar6001384034367754672.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 03:07:22.342 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar6001384034367754672.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 03:07:22.430 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar6001384034367754672.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 03:07:22.432 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar6001384034367754672.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
** Write a test suite: 2 called: 1 to improve: false
[MASTER] 03:07:22.619 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar6001384034367754672.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 03:07:22.621 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar6001384034367754672.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 1 called: 0 to improve: false
** Write a test suite: 3 called: 1 to improve: false
[MASTER] 03:07:22.775 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar6001384034367754672.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 03:07:22.778 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar6001384034367754672.jar
[MASTER] 03:07:22.965 [logback-1] WARN  TimeController - Already entered in phase: INLINING. This will mess up the timing calculations.
* test suite isTestSuite: 11
Test 0: 
HuntDisplay huntDisplay = new HuntDisplay();
Dimension preferredSize = huntDisplay.getPreferredSize();
preferredSize.setSize(200, (int) (byte) (-105));
huntDisplay.getPreferredSize();
Test 1: 
HuntDisplay huntDisplay = new HuntDisplay();
Dimension minimumSize = huntDisplay.getMinimumSize();
minimumSize.height = (-1);
huntDisplay.getMinimumSize();
Test 2: 
HuntDisplay huntDisplay = new HuntDisplay();
BufferedImage bufferedImage = new BufferedImage(9, 9, 9);
TrigPoint trigPoint = new TrigPoint(180.0, 9, 180.0);
huntDisplay.addPoint(trigPoint);
Graphics2D createGraphics = bufferedImage.createGraphics();
huntDisplay.paintComponent(createGraphics);
Test 3: 
HuntDisplay huntDisplay = new HuntDisplay();
ImageIcon imageIcon = new ImageIcon();
Landmark landmark = new Landmark(9, 9, imageIcon);
huntDisplay.addLandMark(landmark);
BufferedImage bufferedImage = new BufferedImage(9, 9, 9);
TrigPoint trigPoint = new TrigPoint(180.0, 9, 180.0);
huntDisplay.addPoint(trigPoint);
Graphics2D createGraphics = bufferedImage.createGraphics();
huntDisplay.paintComponent(createGraphics);
Test 4: 
HuntDisplay huntDisplay = new HuntDisplay();
TrigPoint trigPoint = new TrigPoint(2043.964, 2043.964, 2043.964, true);
huntDisplay.addPoint(trigPoint);
// Undeclared exception!
try { 
  huntDisplay.paintComponent((Graphics) null);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("Joshua.FoxHunt.HuntDisplay", e);
}

Test 5: 
HuntDisplay huntDisplay = new HuntDisplay();
Dimension minimumSize = huntDisplay.getMinimumSize();
minimumSize.height = 0;
huntDisplay.getMinimumSize();
Test 6: 
HuntDisplay huntDisplay = new HuntDisplay();
Dimension minimumSize = huntDisplay.getMinimumSize();
minimumSize.setSize((-5329), 659);
huntDisplay.getMinimumSize();
Test 7: 
HuntDisplay huntDisplay = new HuntDisplay();
huntDisplay.minSize = null;
huntDisplay.getMinimumSize();
Test 8: 
HuntDisplay huntDisplay = new HuntDisplay();
Dimension preferredSize = huntDisplay.getPreferredSize();
preferredSize.setSize((double) (-1), 0.0);
huntDisplay.getPreferredSize();
Test 9: 
HuntDisplay huntDisplay = new HuntDisplay();
Dimension preferredSize = huntDisplay.getPreferredSize();
preferredSize.width = 0;
huntDisplay.getPreferredSize();
Test 10: 
HuntDisplay huntDisplay = new HuntDisplay();
huntDisplay.prefSize = null;
huntDisplay.getPreferredSize();

* Minimizing test suite
[MASTER] 03:07:27.097 [logback-1] WARN  TimeController - Already entered in phase: MINIMIZATION. This will mess up the timing calculations.
* test suite isTestSuite: 11
Test 0: 
HuntDisplay huntDisplay = new HuntDisplay();
Dimension preferredSize = huntDisplay.getPreferredSize();
preferredSize.setSize(200, (int) (byte) (-105));
huntDisplay.getPreferredSize();
Test 1: 
HuntDisplay huntDisplay = new HuntDisplay();
Dimension minimumSize = huntDisplay.getMinimumSize();
minimumSize.height = (-1);
huntDisplay.getMinimumSize();
Test 2: 
HuntDisplay huntDisplay = new HuntDisplay();
BufferedImage bufferedImage = new BufferedImage(9, 9, 9);
TrigPoint trigPoint = new TrigPoint(180.0, 9, 180.0);
huntDisplay.addPoint(trigPoint);
Graphics2D createGraphics = bufferedImage.createGraphics();
huntDisplay.paintComponent(createGraphics);
Test 3: 
HuntDisplay huntDisplay = new HuntDisplay();
ImageIcon imageIcon = new ImageIcon();
Landmark landmark = new Landmark(9, 9, imageIcon);
huntDisplay.addLandMark(landmark);
BufferedImage bufferedImage = new BufferedImage(9, 9, 9);
TrigPoint trigPoint = new TrigPoint(180.0, 9, 180.0);
huntDisplay.addPoint(trigPoint);
Graphics2D createGraphics = bufferedImage.createGraphics();
huntDisplay.paintComponent(createGraphics);
Test 4: 
HuntDisplay huntDisplay = new HuntDisplay();
TrigPoint trigPoint = new TrigPoint(2043.964, 2043.964, 2043.964, true);
huntDisplay.addPoint(trigPoint);
// Undeclared exception!
try { 
  huntDisplay.paintComponent((Graphics) null);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("Joshua.FoxHunt.HuntDisplay", e);
}

Test 5: 
HuntDisplay huntDisplay = new HuntDisplay();
Dimension minimumSize = huntDisplay.getMinimumSize();
minimumSize.height = 0;
huntDisplay.getMinimumSize();
Test 6: 
HuntDisplay huntDisplay = new HuntDisplay();
Dimension minimumSize = huntDisplay.getMinimumSize();
minimumSize.setSize((-5329), 659);
huntDisplay.getMinimumSize();
Test 7: 
HuntDisplay huntDisplay = new HuntDisplay();
huntDisplay.minSize = null;
huntDisplay.getMinimumSize();
Test 8: 
HuntDisplay huntDisplay = new HuntDisplay();
Dimension preferredSize = huntDisplay.getPreferredSize();
preferredSize.setSize((double) (-1), 0.0);
huntDisplay.getPreferredSize();
Test 9: 
HuntDisplay huntDisplay = new HuntDisplay();
Dimension preferredSize = huntDisplay.getPreferredSize();
preferredSize.width = 0;
huntDisplay.getPreferredSize();
Test 10: 
HuntDisplay huntDisplay = new HuntDisplay();
huntDisplay.prefSize = null;
huntDisplay.getPreferredSize();

* Going to analyze the coverage criteria
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 100%
* Total number of goals: 23
* Number of covered goals: 23
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 100%
* Total number of goals: 50
* Number of covered goals: 50
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 93%
* Total number of goals: 14
* Number of covered goals: 13
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 6
* Number of covered goals: 6
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 100%
* Total number of goals: 23
* Number of covered goals: 23
* Generated 11 tests with total length 49
* Resulting test suite's coverage: 100% (average coverage for all fitness functions)
* Generating assertions
[MASTER] 03:07:27.134 [logback-1] WARN  TimeController - Already entered in phase: COVERAGE_ANALYSIS. This will mess up the timing calculations.
* Resulting test suite's mutation score: 48%
* Compiling and checking tests
[MASTER] 03:07:30.198 [logback-1] WARN  TimeController - Already entered in phase: ASSERTION_GENERATION. This will mess up the timing calculations.
Going to execute: removeTestsThatDoNotCompile
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 03:07:31.471 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar6001384034367754672.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 03:07:31.478 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar6001384034367754672.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 03:07:31.608 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar6001384034367754672.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 03:07:31.609 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar6001384034367754672.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 03:07:31.702 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar6001384034367754672.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 03:07:31.704 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar6001384034367754672.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
** Write a test suite: 1 called: 1 to improve: false
** Write a test suite: 2 called: 2 to improve: false
[MASTER] 03:07:31.841 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar6001384034367754672.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 03:07:31.843 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar6001384034367754672.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
** Write a test suite: 1 called: 1 to improve: false
** Write a test suite: 2 called: 2 to improve: false
[MASTER] 03:07:31.984 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar6001384034367754672.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 03:07:31.986 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar6001384034367754672.jar
* Writing tests to file
[MASTER] 03:07:31.990 [logback-1] WARN  TimeController - Already entered in phase: JUNIT_CHECK. This will mess up the timing calculations.
* Writing JUnit test case 'HuntDisplay_ESTest' to evosuite-tests
** Write a test suite: 1 called: 0 to improve: false
** Write a test suite: 3 called: 1 to improve: false
* Writing JUnit test case 'HuntDisplay_Original_ESTest' to evosuite-tests
** Write a test suite: 0 called: 0 to improve: false
** Write a test suite: 1 called: 1 to improve: false
** Write a test suite: 2 called: 2 to improve: false
* Done!

* Computation finished
