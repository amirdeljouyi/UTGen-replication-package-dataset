* EvoSuite 1.0.0-SNAPSHOT
* Going to generate test cases for class: wheel.asm.ClassWriter
* Starting Client-0
* Properties loaded from /home/roham/Results-Utestgen/dataset/SF110-new-res/80_wheelwebtool/evosuite-files/evosuite.properties
* Connecting to master process on port 21883
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 20:25:52.176 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 20:25:52.185 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 20:25:52.186 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 20:25:52.195 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.Temporal
[MASTER] 20:25:52.196 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.ZoneId
[MASTER] 20:25:52.198 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAccessor
[MASTER] 20:25:52.198 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalField
[MASTER] 20:25:52.199 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalUnit
[MASTER] 20:25:52.201 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAmount
[MASTER] 20:25:52.202 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.Clock
[MASTER] 20:25:52.204 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalQuery
[MASTER] 20:25:52.206 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAdjuster
[MASTER] 20:25:52.209 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 20:25:52.240 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 20:25:52.244 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
* Finished analyzing classpath
* Generating tests for class wheel.asm.ClassWriter
* Test criteria:
  - Branch Coverage
  - Line Coverage
  - Method-Output Coverage
  - Top-Level Method Coverage
  - Context Branch Coverage
[Progress:>                             0%] [Cov:>                                  0%]* Total number of test goals for DYNAMOSA: 778
* Using seed 1710275148081
* Starting evolution
* Initial Number of Goals in DynaMOSA = 346 / 778
[Progress:=>                            6%] [Cov:==================>                53%][Progress:==>                           7%] [Cov:====================>              58%][Progress:==>                           8%] [Cov:====================>              59%][Progress:==>                           9%] [Cov:======================>            65%][Progress:==>                           9%] [Cov:=======================>           67%][Progress:==>                           9%] [Cov:========================>          69%][Progress:====>                         15%] [Cov:========================>          69%][Progress:====>                         16%] [Cov:========================>          69%][Progress:====>                         16%] [Cov:========================>          70%][Progress:====>                         16%] [Cov:========================>          70%][Progress:====>                         16%] [Cov:========================>          70%][Progress:=====>                        17%] [Cov:=========================>         72%][Progress:=====>                        17%] [Cov:=========================>         73%][Progress:=====>                        17%] [Cov:=========================>         73%][Progress:=====>                        17%] [Cov:=========================>         73%][Progress:=====>                        18%] [Cov:=========================>         73%][Progress:=====>                        18%] [Cov:=========================>         73%][Progress:=====>                        18%] [Cov:=========================>         73%][Progress:=====>                        18%] [Cov:=========================>         74%][Progress:=====>                        19%] [Cov:=========================>         74%][Progress:=======>                      24%] [Cov:==========================>        75%][Progress:=======>                      24%] [Cov:==========================>        75%][Progress:=======>                      24%] [Cov:==========================>        75%][Progress:=======>                      24%] [Cov:==========================>        75%][Progress:=======>                      25%] [Cov:==========================>        75%][Progress:=======>                      25%] [Cov:==========================>        75%][Progress:=========>                    30%] [Cov:==========================>        75%][Progress:=========>                    31%] [Cov:==========================>        75%][Progress:=========>                    31%] [Cov:==========================>        75%][Progress:=========>                    31%] [Cov:==========================>        75%][Progress:==========>                   36%] [Cov:==========================>        75%][Progress:============>                 41%] [Cov:==========================>        75%][Progress:============>                 42%] [Cov:==========================>        75%][Progress:============>                 42%] [Cov:==========================>        75%][Progress:============>                 42%] [Cov:==========================>        76%][Progress:============>                 42%] [Cov:==========================>        76%][Progress:============>                 42%] [Cov:==========================>        76%][Progress:============>                 42%] [Cov:==========================>        76%][Progress:==============>               48%] [Cov:==========================>        76%][Progress:===============>              53%] [Cov:==========================>        76%][Progress:===============>              53%] [Cov:==========================>        76%][Progress:===============>              53%] [Cov:==========================>        76%][Progress:===============>              53%] [Cov:==========================>        76%][Progress:===============>              53%] [Cov:==========================>        76%][Progress:================>             54%] [Cov:==========================>        77%][Progress:================>             54%] [Cov:==========================>        77%][Progress:================>             54%] [Cov:==========================>        77%][Progress:================>             54%] [Cov:==========================>        77%][Progress:================>             54%] [Cov:==========================>        77%][Progress:================>             54%] [Cov:==========================>        77%][Progress:================>             54%] [Cov:===========================>       78%][Progress:================>             54%] [Cov:===========================>       78%][Progress:=================>            59%] [Cov:===========================>       78%][Progress:==================>           60%] [Cov:===========================>       78%][Progress:==================>           60%] [Cov:===========================>       78%][Progress:===================>          65%] [Cov:===========================>       78%][Progress:======================>       75%] [Cov:===========================>       78%][Progress:======================>       75%] [Cov:===========================>       78%][Progress:======================>       75%] [Cov:===========================>       78%][Progress:======================>       75%] [Cov:===========================>       78%][Progress:======================>       76%] [Cov:===========================>       78%][Progress:======================>       76%] [Cov:===========================>       78%][Progress:======================>       76%] [Cov:===========================>       78%][Progress:======================>       76%] [Cov:===========================>       78%][Progress:======================>       76%] [Cov:===========================>       78%][Progress:======================>       76%] [Cov:===========================>       78%][Progress:======================>       76%] [Cov:===========================>       78%][Progress:======================>       76%] [Cov:===========================>       78%][Progress:=======================>      77%] [Cov:===========================>       78%][Progress:=======================>      77%] [Cov:===========================>       78%][Progress:=======================>      77%] [Cov:===========================>       78%][Progress:=======================>      77%] [Cov:===========================>       78%][Progress:=======================>      77%] [Cov:===========================>       78%][Progress:=======================>      77%] [Cov:===========================>       78%][Progress:=======================>      77%] [Cov:===========================>       78%][Progress:=======================>      77%] [Cov:===========================>       78%][Progress:=======================>      78%] [Cov:===========================>       78%][Progress:=======================>      78%] [Cov:===========================>       78%][Progress:========================>     83%] [Cov:===========================>       78%][Progress:========================>     83%] [Cov:===========================>       78%][Progress:========================>     83%] [Cov:===========================>       78%][Progress:========================>     83%] [Cov:===========================>       78%][Progress:========================>     83%] [Cov:===========================>       78%][Progress:========================>     83%] [Cov:===========================>       78%][Progress:========================>     83%] [Cov:===========================>       78%][Progress:=========================>    84%] [Cov:===========================>       78%][Progress:=========================>    84%] [Cov:===========================>       78%][Progress:=========================>    84%] [Cov:===========================>       78%][Progress:=========================>    84%] [Cov:===========================>       78%][Progress:=========================>    84%] [Cov:===========================>       78%][Progress:=========================>    84%] [Cov:===========================>       78%][Progress:=========================>    84%] [Cov:===========================>       78%][Progress:=========================>    84%] [Cov:===========================>       78%][Progress:=========================>    84%] [Cov:===========================>       78%][Progress:=========================>    84%] [Cov:============================>      80%][Progress:===========================>  90%] [Cov:============================>      80%][Progress:===========================>  90%] [Cov:============================>      80%][Progress:===========================>  90%] [Cov:============================>      80%][Progress:===========================>  90%] [Cov:============================>      80%][Progress:===========================>  90%] [Cov:============================>      80%][Progress:===========================>  90%] [Cov:============================>      80%][Progress:===========================>  90%] [Cov:============================>      80%][Progress:===========================>  90%] [Cov:============================>      80%][Progress:===========================>  90%] [Cov:============================>      80%][Progress:===========================>  91%] [Cov:============================>      80%][Progress:===========================>  91%] [Cov:============================>      80%][Progress:===========================>  91%] [Cov:============================>      80%][Progress:===========================>  91%] [Cov:============================>      80%][Progress:===========================>  91%] [Cov:============================>      80%][Progress:===========================>  91%] [Cov:============================>      81%][Progress:===========================>  91%] [Cov:============================>      81%][Progress:===========================>  91%] [Cov:============================>      81%][Progress:===========================>  91%] [Cov:============================>      81%][Progress:===========================>  92%] [Cov:============================>      81%][Progress:===========================>  92%] [Cov:============================>      81%][Progress:===========================>  92%] [Cov:============================>      81%][Progress:===========================>  92%] [Cov:============================>      81%][Progress:===========================>  92%] [Cov:============================>      81%][Progress:===========================>  92%] [Cov:============================>      81%][Progress:===========================>  92%] [Cov:============================>      81%][Progress:===========================>  92%] [Cov:============================>      81%][Progress:===========================>  92%] [Cov:============================>      81%][Progress:===========================>  92%] [Cov:============================>      81%][Progress:===========================>  93%] [Cov:============================>      81%][Progress:===========================>  93%] [Cov:============================>      81%][Progress:===========================>  93%] [Cov:============================>      81%][Progress:===========================>  93%] [Cov:============================>      81%][Progress:===========================>  93%] [Cov:============================>      81%][Progress:===========================>  93%] [Cov:============================>      81%][Progress:===========================>  93%] [Cov:============================>      81%][Progress:===========================>  93%] [Cov:============================>      81%][Progress:===========================>  93%] [Cov:============================>      81%][Progress:===========================>  93%] [Cov:============================>      81%][Progress:============================> 94%] [Cov:============================>      81%][Progress:============================> 94%] [Cov:============================>      81%][Progress:============================> 94%] [Cov:============================>      81%][Progress:============================> 94%] [Cov:============================>      81%][Progress:============================> 94%] [Cov:============================>      81%][Progress:============================> 94%] [Cov:============================>      81%][Progress:============================> 94%] [Cov:============================>      81%][Progress:============================> 94%] [Cov:============================>      81%][Progress:============================> 94%] [Cov:============================>      81%][Progress:============================> 94%] [Cov:============================>      81%][Progress:============================> 94%] [Cov:============================>      81%][Progress:============================> 94%] [Cov:============================>      81%][Progress:============================> 95%] [Cov:============================>      81%][Progress:============================> 95%] [Cov:============================>      81%][Progress:============================> 95%] [Cov:============================>      81%][Progress:============================> 95%] [Cov:============================>      81%][Progress:============================> 95%] [Cov:============================>      81%][Progress:============================> 95%] [Cov:============================>      81%][Progress:============================> 95%] [Cov:============================>      81%][Progress:============================> 95%] [Cov:============================>      81%][Progress:============================> 95%] [Cov:============================>      81%][Progress:============================> 95%] [Cov:============================>      81%][Progress:==============================100%] [Cov:============================>      81%][Progress:==============================100%] [Cov:============================>      81%]
* Search finished after 102s and 156 generations, 53250 statements, best individual has fitness: 107.0
* Generated before the refinement 47 tests with total length 147
statement is: wheel.asm.ClassWriter(I)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class wheel.asm.ClassWriter
statement code is: ClassWriter classWriter = new ClassWriter((-1502))
statement is: org.evosuite.testcase.statements.ArrayStatement@3349977e type is: class org.evosuite.testcase.statements.ArrayStatement return type class [Ljava.lang.String;
statement code is: String[] stringArray = new String[3]
statement is: org.evosuite.testcase.statements.AssignmentStatement@5a3569c6 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.String
statement code is: stringArray[0] = "wheel.asm.ClassAdapter"
statement is: org.evosuite.testcase.statements.AssignmentStatement@a5796fc7 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.String
statement code is: stringArray[1] = ""
statement is: org.evosuite.testcase.statements.AssignmentStatement@beadedca type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.String
statement code is: stringArray[2] = ""
statement is: visit(IILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: classWriter.visit(3221, 15, "", "", "wheel.asm.ClassAdapter", arg5)
statement is: org.evosuite.testcase.statements.AssignmentStatement@67fb7cad type is: class org.evosuite.testcase.statements.AssignmentStatement return type boolean
statement code is: classWriter.invalidFrames = true
statement is: toByteArray()[B type is: class org.evosuite.testcase.statements.MethodStatement return type class [B
statement code is: byte[] byteArray = classWriter.toByteArray()
test data is: ClassWriter classWriter = new ClassWriter((-1502));
String[] stringArray = new String[3];
stringArray[0] = "wheel.asm.ClassAdapter";
stringArray[1] = "";
stringArray[2] = "";
classWriter.visit(3221, 15, "", "", "wheel.asm.ClassAdapter", stringArray);
classWriter.invalidFrames = true;
classWriter.toByteArray();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        String[] stringArray = new String[3];
        stringArray[0] = "com.example.myapp.MyClass";
        stringArray[1] = "java/lang/Object";
        stringArray[2] = "com.example.myapp.MyInterface";
        classWriter.visit(3221, 15, "", "", "com.example.myapp.MyClass", stringArray);
        classWriter.invalidFrames = true;
        classWriter.toByteArray();
    }
}
statement is: String[] stringArray = new String[3], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [3] Ct is: String[] stringArray = new String[3] isAssignment: false Array: new String[3] Elements: []
lengths: [3] [3]
Their type are: class [Ljava.lang.String; String[]
statement is: stringArray[0] = "com.example.myapp.MyClass", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"com.example.myapp.MyClass" Ct is: stringArray[0] = "com.example.myapp.MyClass"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
TestCase Could not be added: org.evosuite.testcase.statements.AssignmentStatement@3db460c0
statement is: stringArray[1] = "java/lang/Object", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[1] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"java/lang/Object" Ct is: stringArray[1] = "java/lang/Object"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
TestCase Could not be added: org.evosuite.testcase.statements.AssignmentStatement@4d0898c8
statement is: stringArray[2] = "com.example.myapp.MyInterface", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[2] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"com.example.myapp.MyInterface" Ct is: stringArray[2] = "com.example.myapp.MyInterface"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
TestCase Could not be added: org.evosuite.testcase.statements.AssignmentStatement@d6a2bb98
statement is: classWriter.visit(3221, 15, "", "", "com.example.myapp.MyClass", stringArray), class spoon.support.reflect.code.CtInvocationImpl
invocation is: classWriter.visit(3221, 15, "", "", "com.example.myapp.MyClass", stringArray) target is: classWriter method is: visit(int,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String[])
statement is: classWriter.invalidFrames = true, class spoon.support.reflect.code.CtAssignmentImpl
statement is: classWriter.toByteArray(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: classWriter.toByteArray() target is: classWriter method is: toByteArray()
* this is vulnerable: String string = "com.example.myapp.MyClass"
* this is vulnerable: String string = "java/lang/Object"
* this is vulnerable: String string = "com.example.myapp.MyInterface"
TestCase is: String[] stringArray = new String[3];
String string = "com.example.myapp.MyClass";
String string = "java/lang/Object";
String string = "com.example.myapp.MyInterface";

statement is: wheel.asm.ClassWriter(I)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class wheel.asm.ClassWriter
statement code is: ClassWriter classWriter = new ClassWriter((-2192))
statement is: newConst(Ljava/lang/Object;)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int newConst = classWriter.newConst("/D")
statement is: visitField(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)Lwheel/asm/FieldVisitor; type is: class org.evosuite.testcase.statements.MethodStatement return type class wheel.asm.FieldWriter
statement code is: FieldWriter visitField = (FieldWriter)classWriter.visitField((-737), "/D", "/D", "/D", "/D")
test data is: ClassWriter classWriter = new ClassWriter((-2192));
classWriter.newConst("/D");
classWriter.visitField((-737), "/D", "/D", "/D", "/D");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        classWriter.newConst("The answer to life, the universe, and everything is 42.");
        classWriter.visitField(10, "message", "java/lang/String", null, "Hello World!");
        classWriter.visitField(5, "pi", "double", null, 3.14);
    }
}
statement is: classWriter.newConst("The answer to life, the universe, and everything is 42."), class spoon.support.reflect.code.CtInvocationImpl
invocation is: classWriter.newConst("The answer to life, the universe, and everything is 42.") target is: classWriter method is: newConst(java.lang.String)
statement is: classWriter.visitField(10, "message", "java/lang/String", null, "Hello World!"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: classWriter.visitField(10, "message", "java/lang/String", null, "Hello World!") target is: classWriter method is: visitField(int,java.lang.String,java.lang.String,<unknown>,java.lang.String)
statement is: classWriter.visitField(5, "pi", "double", null, 3.14), class spoon.support.reflect.code.CtInvocationImpl
invocation is: classWriter.visitField(5, "pi", "double", null, 3.14) target is: classWriter method is: visitField(int,java.lang.String,java.lang.String,<unknown>,double)
statement is: wheel.asm.ClassWriter(I)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class wheel.asm.ClassWriter
statement code is: ClassWriter classWriter = new ClassWriter((-5007))
statement is: visit(IILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: classWriter.visit(4, (-1320), "", (String) null, "yl]/B)oCC", (String[]) null)
test data is: ClassWriter classWriter = new ClassWriter((-5007));
classWriter.visit(4, (-1320), "", (String) null, "yl]/B)oCC", (String[]) null);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        classWriter.visit(4, ACC_PUBLIC | ACC_SUPER, "MyClass", ((String[]) (null)));
    }
}
statement is: classWriter.visit(4, ACC_PUBLIC | ACC_SUPER, "MyClass", ((String[]) (null))), class spoon.support.reflect.code.CtInvocationImpl
invocation is: classWriter.visit(4, ACC_PUBLIC | ACC_SUPER, "MyClass", ((String[]) (null))) target is: classWriter method is: visit(int,java.lang.String,java.lang.String[])
statement is: wheel.asm.ClassWriter(I)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class wheel.asm.ClassWriter
statement code is: ClassWriter classWriter = new ClassWriter(0)
statement is: visit(IILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: classWriter.visit(3376, (-2371), "", "The array of prefixes must not be null", (String) null, (String[]) null)
test data is: ClassWriter classWriter = new ClassWriter(0);
classWriter.visit(3376, (-2371), "", "The array of prefixes must not be null", (String) null, (String[]) null);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        classWriter.visit(3376, -2371, "", "The array of prefixes must not be null", new String[]{ "The array of prefixes must not be null" }, ((String[]) (null)));
    }
}
statement is: classWriter.visit(3376, -2371, "", "The array of prefixes must not be null", new String[]{ "The array of prefixes must not be null" }, ((String[]) (null))), class spoon.support.reflect.code.CtInvocationImpl
invocation is: classWriter.visit(3376, -2371, "", "The array of prefixes must not be null", new String[]{ "The array of prefixes must not be null" }, ((String[]) (null))) target is: classWriter method is: visit(int,int,java.lang.String,java.lang.String,java.lang.String[],java.lang.String[])
statement is: wheel.asm.ClassWriter(I)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class wheel.asm.ClassWriter
statement code is: ClassWriter classWriter = new ClassWriter(16777221)
statement is: org.evosuite.testcase.statements.ArrayStatement@48a71cb4 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [Ljava.lang.String;
statement code is: String[] stringArray = new String[0]
statement is: visit(IILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: classWriter.visit(16777221, 1122, "", "[cl\"?YvUe{=\"b>XqbA", "[cl\"?YvUe{=\"b>XqbA", arg5)
test data is: ClassWriter classWriter = new ClassWriter(16777221);
String[] stringArray = new String[0];
classWriter.visit(16777221, 1122, "", "[cl\"?YvUe{=\"b>XqbA", "[cl\"?YvUe{=\"b>XqbA", stringArray);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        String[] stringArray = new String[]{ "Hello World!" };
    }
}
statement is: String[] stringArray = new String[]{ "Hello World!" }, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [] Ct is: String[] stringArray = new String[0] isAssignment: false Array: new String[]{ "Hello World!" } Elements: ["Hello World!"]
lengths: [0] []
statement is: wheel.asm.ClassWriter(I)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class wheel.asm.ClassWriter
statement code is: ClassWriter classWriter = new ClassWriter(193)
statement is: visitSource(Ljava/lang/String;Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: classWriter.visitSource((String) null, (String) null)
test data is: ClassWriter classWriter = new ClassWriter(193);
classWriter.visitSource((String) null, (String) null);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        classWriter.visitSource("Test.java", "UTF-8");
    }
}
statement is: classWriter.visitSource("Test.java", "UTF-8"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: classWriter.visitSource("Test.java", "UTF-8") target is: classWriter method is: visitSource(java.lang.String,java.lang.String)
statement is: wheel.asm.ClassWriter(I)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class wheel.asm.ClassWriter
statement code is: ClassWriter classWriter = new ClassWriter(0)
statement is: visitOuterClass(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: classWriter.visitOuterClass("/)nZoQI$6{[>,$6~", (String) null, (String) null)
test data is: ClassWriter classWriter = new ClassWriter(0);
classWriter.visitOuterClass("/)nZoQI$6{[>,$6~", (String) null, (String) null);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Improved test data: }}
    }
}
statement is: // Improved test data: }}, class spoon.support.reflect.code.CtCommentImpl
statement is: wheel.asm.ClassWriter(I)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class wheel.asm.ClassWriter
statement code is: ClassWriter classWriter = new ClassWriter(592)
statement is: visitOuterClass(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: classWriter.visitOuterClass("%/xFdFS3d'dq)L-", "%/xFdFS3d'dq)L-", "%/xFdFS3d'dq)L-")
statement is: toByteArray()[B type is: class org.evosuite.testcase.statements.MethodStatement return type class [B
statement code is: byte[] byteArray = classWriter.toByteArray()
test data is: ClassWriter classWriter = new ClassWriter(592);
classWriter.visitOuterClass("%/xFdFS3d'dq)L-", "%/xFdFS3d'dq)L-", "%/xFdFS3d'dq)L-");
classWriter.toByteArray();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        classWriter.toByteArray();
    }
}
statement is: classWriter.toByteArray(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: classWriter.toByteArray() target is: classWriter method is: toByteArray()
statement is: wheel.asm.ClassWriter(I)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class wheel.asm.ClassWriter
statement code is: ClassWriter classWriter = new ClassWriter(0)
statement is: visitOuterClass(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: classWriter.visitOuterClass("", "wH[g9PKXmf`s,dh=+~", (String) null)
test data is: ClassWriter classWriter = new ClassWriter(0);
classWriter.visitOuterClass("", "wH[g9PKXmf`s,dh=+~", (String) null);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // It visits an outer class and checks if it is properly recorded.
        // Test 1: Visit an outer class with a valid name and check if it is properly recorded.
        classWriter.visitOuterClass("com/example/MyTestClass", "wH[g9PKXmf`s,dh=+~", ((String) (null)));
        assertEquals(classWriter.getOuterClass(), "com/example/MyTestClass");
        // Test 2: Visit an outer class with a valid name and check if it is properly recorded.
        classWriter.visitOuterClass("com/example/MyOtherTestClass", "wH[g9PKXmf`s,dh=+~", ((String) (null)));
        assertEquals(classWriter.getOuterClass(), "com/example/MyOtherTestClass");
        // Test 3: Visit an outer class with a valid name and check if it is properly recorded. }}
    }
}
statement is: // It visits an outer class and checks if it is properly recorded.
// Test 1: Visit an outer class with a valid name and check if it is properly recorded.
classWriter.visitOuterClass("com/example/MyTestClass", "wH[g9PKXmf`s,dh=+~", ((String) (null))), class spoon.support.reflect.code.CtInvocationImpl
invocation is: // It visits an outer class and checks if it is properly recorded.
// Test 1: Visit an outer class with a valid name and check if it is properly recorded.
classWriter.visitOuterClass("com/example/MyTestClass", "wH[g9PKXmf`s,dh=+~", ((String) (null))) target is: classWriter method is: visitOuterClass(java.lang.String,java.lang.String,java.lang.String)
statement is: assertEquals(classWriter.getOuterClass(), "com/example/MyTestClass"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: assertEquals(classWriter.getOuterClass(), "com/example/MyTestClass") target is:  method is: assertEquals(<unknown>,java.lang.String)
statement is: // Test 2: Visit an outer class with a valid name and check if it is properly recorded.
classWriter.visitOuterClass("com/example/MyOtherTestClass", "wH[g9PKXmf`s,dh=+~", ((String) (null))), class spoon.support.reflect.code.CtInvocationImpl
invocation is: // Test 2: Visit an outer class with a valid name and check if it is properly recorded.
classWriter.visitOuterClass("com/example/MyOtherTestClass", "wH[g9PKXmf`s,dh=+~", ((String) (null))) target is: classWriter method is: visitOuterClass(java.lang.String,java.lang.String,java.lang.String)
statement is: assertEquals(classWriter.getOuterClass(), "com/example/MyOtherTestClass"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: assertEquals(classWriter.getOuterClass(), "com/example/MyOtherTestClass") target is:  method is: assertEquals(<unknown>,java.lang.String)
statement is: // Test 3: Visit an outer class with a valid name and check if it is properly recorded. }}, class spoon.support.reflect.code.CtCommentImpl
statement is: wheel.asm.ClassWriter(I)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class wheel.asm.ClassWriter
statement code is: ClassWriter classWriter = new ClassWriter(360)
statement is: visitAnnotation(Ljava/lang/String;Z)Lwheel/asm/AnnotationVisitor; type is: class org.evosuite.testcase.statements.MethodStatement return type class wheel.asm.AnnotationWriter
statement code is: AnnotationWriter visitAnnotation = (AnnotationWriter)classWriter.visitAnnotation("", false)
statement is: toByteArray()[B type is: class org.evosuite.testcase.statements.MethodStatement return type class [B
statement code is: byte[] byteArray = classWriter.toByteArray()
test data is: ClassWriter classWriter = new ClassWriter(360);
classWriter.visitAnnotation("", false);
classWriter.toByteArray();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        @Replace
        the hardcoded;
        values and;
        with more;
        examples : Instead = $missing$;
        class version {
            use a;

            more representative;

            value such;

            Instead of;

            using an;

            empty String;

            the annotation;

            use a;

            more descriptive;

            name such;
        }
    }
}
statement is: @Replace
the hardcoded, class spoon.support.reflect.code.CtLocalVariableImpl
statement is: values and, class spoon.support.reflect.code.CtLocalVariableImpl
statement is: with more, class spoon.support.reflect.code.CtLocalVariableImpl
statement is: examples : Instead = $missing$, class spoon.support.reflect.code.CtAssignmentImpl
statement is: class version {
    use a;

    more representative;

    value such;

    Instead of;

    using an;

    empty String;

    the annotation;

    use a;

    more descriptive;

    name such;
}, class spoon.support.reflect.declaration.CtClassImpl
statement is: wheel.asm.ClassWriter(I)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class wheel.asm.ClassWriter
statement code is: ClassWriter classWriter = new ClassWriter(27)
statement is: visitAnnotation(Ljava/lang/String;Z)Lwheel/asm/AnnotationVisitor; type is: class org.evosuite.testcase.statements.MethodStatement return type class wheel.asm.AnnotationWriter
statement code is: AnnotationWriter visitAnnotation = (AnnotationWriter)classWriter.visitAnnotation("", true)
statement is: toByteArray()[B type is: class org.evosuite.testcase.statements.MethodStatement return type class [B
statement code is: byte[] byteArray = classWriter.toByteArray()
test data is: ClassWriter classWriter = new ClassWriter(27);
classWriter.visitAnnotation("", true);
classWriter.toByteArray();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        classWriter.visitAnnotation("Ljava/lang/annotation/Retention;", true);
        classWriter.toByteArray();
    }
}
statement is: classWriter.visitAnnotation("Ljava/lang/annotation/Retention;", true), class spoon.support.reflect.code.CtInvocationImpl
invocation is: classWriter.visitAnnotation("Ljava/lang/annotation/Retention;", true) target is: classWriter method is: visitAnnotation(java.lang.String,boolean)
statement is: classWriter.toByteArray(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: classWriter.toByteArray() target is: classWriter method is: toByteArray()
statement is: wheel.asm.ClassWriter(I)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class wheel.asm.ClassWriter
statement code is: ClassWriter classWriter = new ClassWriter(0)
statement is: visitInnerClass(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;I)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: classWriter.visitInnerClass("E", "E", "E", 972)
statement is: visitInnerClass(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;I)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: classWriter.visitInnerClass((String) null, (String) null, "E", 972)
test data is: ClassWriter classWriter = new ClassWriter(0);
classWriter.visitInnerClass("E", "E", "E", 972);
classWriter.visitInnerClass((String) null, (String) null, "E", 972);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Integer employeeId = 1;// replace with a more descriptive id

        String employeeName = "John Doe";// replace with a more descriptive name

        String employeeDepartment = "Engineering";// replace with a more descriptive department }}

    }
}
statement is: Integer employeeId = 1// replace with a more descriptive id
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: String employeeName = "John Doe"// replace with a more descriptive name
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: String employeeDepartment = "Engineering"// replace with a more descriptive department }}
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
* this is vulnerable: int _int = 1
* this is vulnerable: String string = "John Doe"
* this is vulnerable: String string = "Engineering"
TestCase is: int _int = 1;
String string = "John Doe";
String string = "Engineering";

statement is: wheel.asm.ClassWriter(I)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class wheel.asm.ClassWriter
statement code is: ClassWriter classWriter = new ClassWriter(1433)
statement is: visitInnerClass(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;I)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: classWriter.visitInnerClass((String) null, (String) null, (String) null, 1433)
test data is: ClassWriter classWriter = new ClassWriter(1433);
classWriter.visitInnerClass((String) null, (String) null, (String) null, 1433);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        and = $missing$;
    }
}
statement is: and = $missing$, class spoon.support.reflect.code.CtAssignmentImpl
statement is: wheel.asm.ClassWriter(I)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class wheel.asm.ClassWriter
statement code is: ClassWriter classWriter = new ClassWriter(32)
statement is: visitField(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)Lwheel/asm/FieldVisitor; type is: class org.evosuite.testcase.statements.MethodStatement return type class wheel.asm.FieldWriter
statement code is: FieldWriter visitField = (FieldWriter)classWriter.visitField(202, "l", "l", "SourceDebugExtension", "l")
statement is: toByteArray()[B type is: class org.evosuite.testcase.statements.MethodStatement return type class [B
statement code is: byte[] byteArray = classWriter.toByteArray()
test data is: ClassWriter classWriter = new ClassWriter(32);
classWriter.visitField(202, "l", "l", "SourceDebugExtension", "l");
classWriter.toByteArray();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        classWriter.visitField(202, "l", "l", "SourceDebugExtension", "/* The value of this field is likely to be part of the debugging information for the class being written */");
        classWriter.toByteArray();
    }
}
statement is: classWriter.visitField(202, "l", "l", "SourceDebugExtension", "/* The value of this field is likely to be part of the debugging information for the class being written */"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: classWriter.visitField(202, "l", "l", "SourceDebugExtension", "/* The value of this field is likely to be part of the debugging information for the class being written */") target is: classWriter method is: visitField(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
statement is: classWriter.toByteArray(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: classWriter.toByteArray() target is: classWriter method is: toByteArray()
statement is: wheel.asm.ClassWriter(I)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class wheel.asm.ClassWriter
statement code is: ClassWriter classWriter = new ClassWriter(7)
statement is: org.evosuite.testcase.statements.ArrayStatement@12ad106c type is: class org.evosuite.testcase.statements.ArrayStatement return type class [Ljava.lang.String;
statement code is: String[] stringArray = new String[6]
statement is: org.evosuite.testcase.statements.AssignmentStatement@356dc2e8 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.String
statement code is: stringArray[0] = ""
statement is: org.evosuite.testcase.statements.AssignmentStatement@a586c2dc type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.String
statement code is: stringArray[1] = ""
statement is: org.evosuite.testcase.statements.AssignmentStatement@d37d7463 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.String
statement code is: stringArray[2] = "Qx)*T/G_6` )"
statement is: org.evosuite.testcase.statements.AssignmentStatement@77084145 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.String
statement code is: stringArray[3] = ""
statement is: org.evosuite.testcase.statements.AssignmentStatement@11e7061 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.String
statement code is: stringArray[4] = "Qx)*T/G_6` )"
statement is: org.evosuite.testcase.statements.AssignmentStatement@d024b797 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.String
statement code is: stringArray[5] = ""
statement is: wheel.asm.MethodWriter(Lwheel/asm/ClassWriter;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;ZZ)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class wheel.asm.MethodWriter
statement code is: MethodWriter methodWriter = new MethodWriter(arg0, 3, "Qx)*T/G_6` )", "Qx)*T/G_6` )", "", arg5, true, false)
statement is: toByteArray()[B type is: class org.evosuite.testcase.statements.MethodStatement return type class [B
statement code is: byte[] byteArray = classWriter.toByteArray()
test data is: ClassWriter classWriter = new ClassWriter(7);
String[] stringArray = new String[6];
stringArray[0] = "";
stringArray[1] = "";
stringArray[2] = "Qx)*T/G_6` )";
stringArray[3] = "";
stringArray[4] = "Qx)*T/G_6` )";
stringArray[5] = "";
MethodWriter methodWriter = new MethodWriter(classWriter, 3, "Qx)*T/G_6` )", "Qx)*T/G_6` )", "", stringArray, true, false);
classWriter.toByteArray();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        String[] stringArray = new String[6];
        stringArray[0] = "ABCDEFGHIJKLMNOPQRSTUVWXYZ";
        stringArray[1] = "abcdefghijklmnopqrstuvwxyz";
        stringArray[2] = "0123456789";
        stringArray[3] = "$%^&*()_+-=[]{}|;\':\"<>,./?";
        stringArray[4] = "!@#$%^&*()_+-=[]{}|;\':\"<>,./?";
        stringArray[5] = "\n\t\r";
        MethodWriter methodWriter = new MethodWriter(classWriter, 3, "Qx)*T/G_6` )", "Qx)*T/G_6` )", "", stringArray, true, false);
        classWriter.toByteArray();
    }
}
statement is: String[] stringArray = new String[6], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [6] Ct is: String[] stringArray = new String[6] isAssignment: false Array: new String[6] Elements: []
lengths: [6] [6]
Their type are: class [Ljava.lang.String; String[]
statement is: stringArray[0] = "ABCDEFGHIJKLMNOPQRSTUVWXYZ", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"ABCDEFGHIJKLMNOPQRSTUVWXYZ" Ct is: stringArray[0] = "ABCDEFGHIJKLMNOPQRSTUVWXYZ"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
TestCase Could not be added: org.evosuite.testcase.statements.AssignmentStatement@274cb361
statement is: stringArray[1] = "abcdefghijklmnopqrstuvwxyz", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[1] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"abcdefghijklmnopqrstuvwxyz" Ct is: stringArray[1] = "abcdefghijklmnopqrstuvwxyz"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
TestCase Could not be added: org.evosuite.testcase.statements.AssignmentStatement@6beb98b3
statement is: stringArray[2] = "0123456789", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[2] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"0123456789" Ct is: stringArray[2] = "0123456789"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
TestCase Could not be added: org.evosuite.testcase.statements.AssignmentStatement@3b26dafc
statement is: stringArray[3] = "$%^&*()_+-=[]{}|;\':\"<>,./?", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[3] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"$%^&*()_+-=[]{}|;\':\"<>,./?" Ct is: stringArray[3] = "$%^&*()_+-=[]{}|;\':\"<>,./?"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
TestCase Could not be added: org.evosuite.testcase.statements.AssignmentStatement@bc31f821
statement is: stringArray[4] = "!@#$%^&*()_+-=[]{}|;\':\"<>,./?", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[4] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"!@#$%^&*()_+-=[]{}|;\':\"<>,./?" Ct is: stringArray[4] = "!@#$%^&*()_+-=[]{}|;\':\"<>,./?"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
TestCase Could not be added: org.evosuite.testcase.statements.AssignmentStatement@88551ef7
statement is: stringArray[5] = "\n\t\r", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[5] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"\n\t\r" Ct is: stringArray[5] = "\n\t\r"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
TestCase Could not be added: org.evosuite.testcase.statements.AssignmentStatement@57a84a43
statement is: MethodWriter methodWriter = new MethodWriter(classWriter, 3, "Qx)*T/G_6` )", "Qx)*T/G_6` )", "", stringArray, true, false), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: classWriter.toByteArray(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: classWriter.toByteArray() target is: classWriter method is: toByteArray()
* this is vulnerable: String string = "ABCDEFGHIJKLMNOPQRSTUVWXYZ"
* this is vulnerable: String string = "abcdefghijklmnopqrstuvwxyz"
* this is vulnerable: String string = "0123456789"
* this is vulnerable: String string = "$%^&*()_+-=[]{}|;':\"<>,./?"
* this is vulnerable: String string = "!@#$%^&*()_+-=[]{}|;':\"<>,./?"
* this is vulnerable: String string = "\n\t\r"
TestCase is: String[] stringArray = new String[6];
String string = "ABCDEFGHIJKLMNOPQRSTUVWXYZ";
String string = "abcdefghijklmnopqrstuvwxyz";
String string = "0123456789";
String string = "$%^&*()_+-=[]{}|;':\"<>,./?";
String string = "!@#$%^&*()_+-=[]{}|;':\"<>,./?";
String string = "\n\t\r";
int _int = 3;
String string = "Qx)*T/G_6` )";
String string = "Qx)*T/G_6` )";
String string = "";
boolean _boolean = true;
boolean _boolean = false;
MethodWriter methodWriter = new MethodWriter((ClassWriter) _int, (int) string, string, string, (String) stringArray, (String[]) _boolean, _boolean, false);

statement is: wheel.asm.ClassWriter(I)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class wheel.asm.ClassWriter
statement code is: ClassWriter classWriter = new ClassWriter(8)
statement is: visitSource(Ljava/lang/String;Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: classWriter.visitSource("-HA7$2t= lb+M", "org.apache.commons.io.filefilter.SizeFileFilter")
statement is: toByteArray()[B type is: class org.evosuite.testcase.statements.MethodStatement return type class [B
statement code is: byte[] byteArray = classWriter.toByteArray()
test data is: ClassWriter classWriter = new ClassWriter(8);
classWriter.visitSource("-HA7$2t= lb+M", "org.apache.commons.io.filefilter.SizeFileFilter");
classWriter.toByteArray();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        classWriter.visitSource("-HA7$2t= lb+M", "org.apache.commons.io.filefilter.SizeFileFilter");
        int sizeLimit = 1024;// Change the value of size limit to a more descriptive example, such as 10 MB or 5 GB

        classWriter.toByteArray();
    }
}
statement is: classWriter.visitSource("-HA7$2t= lb+M", "org.apache.commons.io.filefilter.SizeFileFilter"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: classWriter.visitSource("-HA7$2t= lb+M", "org.apache.commons.io.filefilter.SizeFileFilter") target is: classWriter method is: visitSource(java.lang.String,java.lang.String)
statement is: int sizeLimit = 1024// Change the value of size limit to a more descriptive example, such as 10 MB or 5 GB
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: classWriter.toByteArray(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: classWriter.toByteArray() target is: classWriter method is: toByteArray()
* this is vulnerable: int _int = 1024
TestCase is: int _int = 1024;

statement is: wheel.asm.ClassWriter(I)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class wheel.asm.ClassWriter
statement code is: ClassWriter classWriter = new ClassWriter(1433)
statement is: visitInnerClass(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;I)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: classWriter.visitInnerClass("", "", "", 26)
statement is: toByteArray()[B type is: class org.evosuite.testcase.statements.MethodStatement return type class [B
statement code is: byte[] byteArray = classWriter.toByteArray()
test data is: ClassWriter classWriter = new ClassWriter(1433);
classWriter.visitInnerClass("", "", "", 26);
classWriter.toByteArray();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        classWriter.toByteArray();
    }
}
statement is: classWriter.toByteArray(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: classWriter.toByteArray() target is: classWriter method is: toByteArray()
statement is: wheel.asm.ClassWriter(I)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class wheel.asm.ClassWriter
statement code is: ClassWriter classWriter = new ClassWriter(220)
statement is: wheel.asm.Attribute(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class wheel.asm.Attribute
statement code is: Attribute attribute = new Attribute("YL4c9z q[='mygML")
statement is: org.evosuite.testcase.statements.ArrayStatement@33a480e0 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [B
statement code is: byte[] byteArray = new byte[3]
statement is: org.evosuite.testcase.statements.AssignmentStatement@7931bf99 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class [B
statement code is: attribute.value = byteArray
statement is: visitAttribute(Lwheel/asm/Attribute;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: classWriter.visitAttribute(arg0)
statement is: toByteArray()[B type is: class org.evosuite.testcase.statements.MethodStatement return type class [B
statement code is: byte[] byteArray = classWriter.toByteArray()
test data is: ClassWriter classWriter = new ClassWriter(220);
Attribute attribute = new Attribute("YL4c9z q[='mygML");
byte[] byteArray = new byte[3];
attribute.value = byteArray;
classWriter.visitAttribute(attribute);
classWriter.toByteArray();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Attribute attribute = new Attribute("YL4c9z q[='mygML");
        byte[] byteArray = new byte[3];
        attribute.value = byteArray;
        classWriter.visitAttribute(attribute);
        classWriter.toByteArray();
    }
}
statement is: Attribute attribute = new Attribute("YL4c9z q[='mygML"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: byte[] byteArray = new byte[3], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [3] Ct is: byte[] byteArray = new byte[3] isAssignment: false Array: new byte[3] Elements: []
lengths: [3] [3]
Their type are: class [B byte[]
statement is: attribute.value = byteArray, class spoon.support.reflect.code.CtAssignmentImpl
statement is: classWriter.visitAttribute(attribute), class spoon.support.reflect.code.CtInvocationImpl
invocation is: classWriter.visitAttribute(attribute) target is: classWriter method is: visitAttribute(Attribute)
statement is: classWriter.toByteArray(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: classWriter.toByteArray() target is: classWriter method is: toByteArray()
TestCase is: String string = "YL4c9z q[='mygML";
Attribute attribute = new Attribute(string);
byte[] byteArray = new byte[3];

statement is: wheel.asm.ClassWriter(I)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class wheel.asm.ClassWriter
statement code is: ClassWriter classWriter = new ClassWriter(1566)
statement is: java.lang.Character(C)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.lang.Character
statement code is: Character character = new Character('Q')
statement is: newConst(Ljava/lang/Object;)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int newConst = classWriter.newConst(arg0)
test data is: ClassWriter classWriter = new ClassWriter(1566);
Character character = new Character('Q');
classWriter.newConst(character);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Character character = new Character('Z');
        classWriter.newConst(character);
    }
}
statement is: Character character = new Character('Z'), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: classWriter.newConst(character), class spoon.support.reflect.code.CtInvocationImpl
invocation is: classWriter.newConst(character) target is: classWriter method is: newConst(java.lang.Character)
TestCase is: char _char = 'Z';
Character character = new Character(_char);

statement is: wheel.asm.ClassWriter(I)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class wheel.asm.ClassWriter
statement code is: ClassWriter classWriter = new ClassWriter((-2527))
statement is: org.evosuite.testcase.statements.ArrayStatement@937bafca type is: class org.evosuite.testcase.statements.ArrayStatement return type class [Lwheel.asm.Item;
statement code is: Item[] itemArray = new Item[9]
statement is: newConstItem(Ljava/lang/Object;)Lwheel/asm/Item; type is: class org.evosuite.testcase.statements.MethodStatement return type class wheel.asm.Item
statement code is: Item newConstItem = classWriter.newConstItem(itemArray[0])
test data is: ClassWriter classWriter = new ClassWriter((-2527));
Item[] itemArray = new Item[9];
classWriter.newConstItem(itemArray[0]);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Item[] itemArray = new Item[10];
        for (int i = 0; i < itemArray.length; i++) {
            itemArray[i] = new Item("Item " + i, 10 * i);
        }
        classWriter.newConstItem(itemArray[5]);
    }
}
statement is: Item[] itemArray = new Item[10], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [10] Ct is: Item[] itemArray = new Item[9] isAssignment: false Array: new Item[10] Elements: []
lengths: [9] [10]
Their type are: class [Lwheel.asm.Item; Item[]
statement is: for (int i = 0; i < itemArray.length; i++) {
    itemArray[i] = new Item("Item " + i, 10 * i);
}, class spoon.support.reflect.code.CtForImpl
statement is: classWriter.newConstItem(itemArray[5]), class spoon.support.reflect.code.CtInvocationImpl
invocation is: classWriter.newConstItem(itemArray[5]) target is: classWriter method is: newConstItem()
TestCase is: Item[] itemArray = new Item[9];

statement is: wheel.asm.ClassWriter(I)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class wheel.asm.ClassWriter
statement code is: ClassWriter classWriter = new ClassWriter(27)
statement is: newMethod(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int newMethod = classWriter.newMethod("$xcH8'RasE_8i", "$xcH8'RasE_8i", "zM8Q^-<D}'1!_", false)
test data is: ClassWriter classWriter = new ClassWriter(27);
classWriter.newMethod("$xcH8'RasE_8i", "$xcH8'RasE_8i", "zM8Q^-<D}'1!_", false);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Testing method with a more complex signature
        classWriter.newMethod("$xcH8'RasE_8i", "$xcH8'RasE_8i", "zM8Q^-<D}'1!_", true);
        // Testing method with a more complex body }}
    }
}
statement is: // Testing method with a more complex signature
classWriter.newMethod("$xcH8'RasE_8i", "$xcH8'RasE_8i", "zM8Q^-<D}'1!_", true), class spoon.support.reflect.code.CtInvocationImpl
invocation is: // Testing method with a more complex signature
classWriter.newMethod("$xcH8'RasE_8i", "$xcH8'RasE_8i", "zM8Q^-<D}'1!_", true) target is: classWriter method is: newMethod(java.lang.String,java.lang.String,java.lang.String,boolean)
statement is: // Testing method with a more complex body }}, class spoon.support.reflect.code.CtCommentImpl
statement is: wheel.asm.ClassWriter(I)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class wheel.asm.ClassWriter
statement code is: ClassWriter classWriter = new ClassWriter(185)
statement is: newMethodItem(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)Lwheel/asm/Item; type is: class org.evosuite.testcase.statements.MethodStatement return type class wheel.asm.Item
statement code is: Item newMethodItem = classWriter.newMethodItem("SourceFile", "SourceFile", "SourceFile", true)
statement is: newMethodItem(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)Lwheel/asm/Item; type is: class org.evosuite.testcase.statements.MethodStatement return type class wheel.asm.Item
statement code is: Item newMethodItem = classWriter.newMethodItem("SourceFile", "SourceFile", "SourceFile", true)
test data is: ClassWriter classWriter = new ClassWriter(185);
classWriter.newMethodItem("SourceFile", "SourceFile", "SourceFile", true);
classWriter.newMethodItem("SourceFile", "SourceFile", "SourceFile", true);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        classWriter.newMethodItem("SourceFile", "SourceFile", "SourceFile", true);
        classWriter.newMethodItem("SourceFile", "SourceFile", "SourceFile", true);
        classWriter.newMethodItem("SourceFile", "SourceFile", "SourceFile", true);
        classWriter.newMethodItem("SourceFile", "SourceFile", "SourceFile", true);
    }
}
statement is: classWriter.newMethodItem("SourceFile", "SourceFile", "SourceFile", true), class spoon.support.reflect.code.CtInvocationImpl
invocation is: classWriter.newMethodItem("SourceFile", "SourceFile", "SourceFile", true) target is: classWriter method is: newMethodItem(java.lang.String,java.lang.String,java.lang.String,boolean)
statement is: classWriter.newMethodItem("SourceFile", "SourceFile", "SourceFile", true), class spoon.support.reflect.code.CtInvocationImpl
invocation is: classWriter.newMethodItem("SourceFile", "SourceFile", "SourceFile", true) target is: classWriter method is: newMethodItem(java.lang.String,java.lang.String,java.lang.String,boolean)
statement is: classWriter.newMethodItem("SourceFile", "SourceFile", "SourceFile", true), class spoon.support.reflect.code.CtInvocationImpl
invocation is: classWriter.newMethodItem("SourceFile", "SourceFile", "SourceFile", true) target is: classWriter method is: newMethodItem(java.lang.String,java.lang.String,java.lang.String,boolean)
statement is: classWriter.newMethodItem("SourceFile", "SourceFile", "SourceFile", true), class spoon.support.reflect.code.CtInvocationImpl
invocation is: classWriter.newMethodItem("SourceFile", "SourceFile", "SourceFile", true) target is: classWriter method is: newMethodItem(java.lang.String,java.lang.String,java.lang.String,boolean)
statement is: wheel.asm.ClassWriter(I)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class wheel.asm.ClassWriter
statement code is: ClassWriter classWriter = new ClassWriter(12)
statement is: newInteger(I)Lwheel/asm/Item; type is: class org.evosuite.testcase.statements.MethodStatement return type class wheel.asm.Item
statement code is: Item newInteger = classWriter.newInteger(12)
statement is: newInteger(I)Lwheel/asm/Item; type is: class org.evosuite.testcase.statements.MethodStatement return type class wheel.asm.Item
statement code is: Item newInteger = classWriter.newInteger(12)
test data is: ClassWriter classWriter = new ClassWriter(12);
classWriter.newInteger(12);
classWriter.newInteger(12);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        classWriter.newInteger(12);
        classWriter.newInteger(12);
    }
}
statement is: classWriter.newInteger(12), class spoon.support.reflect.code.CtInvocationImpl
invocation is: classWriter.newInteger(12) target is: classWriter method is: newInteger(int)
statement is: classWriter.newInteger(12), class spoon.support.reflect.code.CtInvocationImpl
invocation is: classWriter.newInteger(12) target is: classWriter method is: newInteger(int)
statement is: wheel.asm.ClassWriter(I)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class wheel.asm.ClassWriter
statement code is: ClassWriter classWriter = new ClassWriter(12)
statement is: newFloat(F)Lwheel/asm/Item; type is: class org.evosuite.testcase.statements.MethodStatement return type class wheel.asm.Item
statement code is: Item newFloat = classWriter.newFloat(12)
statement is: newFloat(F)Lwheel/asm/Item; type is: class org.evosuite.testcase.statements.MethodStatement return type class wheel.asm.Item
statement code is: Item newFloat = classWriter.newFloat(12)
test data is: ClassWriter classWriter = new ClassWriter(12);
classWriter.newFloat(12);
classWriter.newFloat(12);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Improved test data
        int a = 10;
        float b = 3.14F;
        String c = "Hello, world!";
        char d = 'A';
        classWriter.newFloat(a);
        classWriter.newFloat(b);
        classWriter.newFloat(c);
        classWriter.newFloat(d);
    }
}
statement is: // Improved test data
int a = 10, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: float b = 3.14F, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: String c = "Hello, world!", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: char d = 'A', class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: classWriter.newFloat(a), class spoon.support.reflect.code.CtInvocationImpl
invocation is: classWriter.newFloat(a) target is: classWriter method is: newFloat(int)
statement is: classWriter.newFloat(b), class spoon.support.reflect.code.CtInvocationImpl
invocation is: classWriter.newFloat(b) target is: classWriter method is: newFloat(float)
statement is: classWriter.newFloat(c), class spoon.support.reflect.code.CtInvocationImpl
invocation is: classWriter.newFloat(c) target is: classWriter method is: newFloat(java.lang.String)
statement is: classWriter.newFloat(d), class spoon.support.reflect.code.CtInvocationImpl
invocation is: classWriter.newFloat(d) target is: classWriter method is: newFloat(char)
* this is vulnerable: int _int = 10
* this is vulnerable: float _float = 3.14F
* this is vulnerable: String string = "Hello, world!"
* this is vulnerable: char _char = 'A'
TestCase is: int _int = 10;
float _float = 3.14F;
String string = "Hello, world!";
char _char = 'A';

statement is: wheel.asm.ClassWriter(I)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class wheel.asm.ClassWriter
statement code is: ClassWriter classWriter = new ClassWriter(7)
statement is: newLong(J)Lwheel/asm/Item; type is: class org.evosuite.testcase.statements.MethodStatement return type class wheel.asm.Item
statement code is: Item newLong = classWriter.newLong(7)
statement is: newLong(J)Lwheel/asm/Item; type is: class org.evosuite.testcase.statements.MethodStatement return type class wheel.asm.Item
statement code is: Item newLong = classWriter.newLong(7)
test data is: ClassWriter classWriter = new ClassWriter(7);
classWriter.newLong(7);
classWriter.newLong(7);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        classWriter.newLong(10);
        classWriter.newLong(10);
    }
}
statement is: classWriter.newLong(10), class spoon.support.reflect.code.CtInvocationImpl
invocation is: classWriter.newLong(10) target is: classWriter method is: newLong(int)
statement is: classWriter.newLong(10), class spoon.support.reflect.code.CtInvocationImpl
invocation is: classWriter.newLong(10) target is: classWriter method is: newLong(int)
statement is: wheel.asm.ClassWriter(I)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class wheel.asm.ClassWriter
statement code is: ClassWriter classWriter = new ClassWriter(221)
statement is: newDouble(D)Lwheel/asm/Item; type is: class org.evosuite.testcase.statements.MethodStatement return type class wheel.asm.Item
statement code is: Item newDouble = classWriter.newDouble(221)
statement is: newDouble(D)Lwheel/asm/Item; type is: class org.evosuite.testcase.statements.MethodStatement return type class wheel.asm.Item
statement code is: Item newDouble = classWriter.newDouble(221)
test data is: ClassWriter classWriter = new ClassWriter(221);
classWriter.newDouble(221);
classWriter.newDouble(221);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        classWriter.newDouble(221);
        classWriter.newDouble(221);
        // Improved test data:
        ClassWriter classWriter = new ClassWriter(221);
        classWriter.newDouble(2018);
        classWriter.newDouble(2023);
    }
}
statement is: classWriter.newDouble(221), class spoon.support.reflect.code.CtInvocationImpl
invocation is: classWriter.newDouble(221) target is: classWriter method is: newDouble(int)
statement is: classWriter.newDouble(221), class spoon.support.reflect.code.CtInvocationImpl
invocation is: classWriter.newDouble(221) target is: classWriter method is: newDouble(int)
statement is: // Improved test data:
ClassWriter classWriter = new ClassWriter(221), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: classWriter.newDouble(2018), class spoon.support.reflect.code.CtInvocationImpl
invocation is: classWriter.newDouble(2018) target is: classWriter method is: newDouble(int)
source statement: wheel.asm.ClassWriter(I)V callee: VariableReference: Statement 0, type wheel.asm.ClassWriterindex is: 1
source statement: wheel.asm.ClassWriter(I)V callee: VariableReference: Statement 0, type wheel.asm.ClassWriterindex is: 1
Matched Method is: newDouble(D)Lwheel/asm/Item;
statement is: classWriter.newDouble(2023), class spoon.support.reflect.code.CtInvocationImpl
invocation is: classWriter.newDouble(2023) target is: classWriter method is: newDouble(int)
source statement: wheel.asm.ClassWriter(I)V callee: VariableReference: Statement 0, type wheel.asm.ClassWriterindex is: 1
source statement: wheel.asm.ClassWriter(I)V callee: VariableReference: Statement 0, type wheel.asm.ClassWriterindex is: 1
Matched Method is: newDouble(D)Lwheel/asm/Item;
TestCase is: int _int = 221;
ClassWriter classWriter = new ClassWriter(_int);
int _int = 2018;
((ClassWriter) _int).newDouble(_int);
int _int = 2023;
((ClassWriter) _int).newDouble(_int);

statement is: wheel.asm.ClassWriter(I)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class wheel.asm.ClassWriter
statement code is: ClassWriter classWriter = new ClassWriter((-1502))
statement is: newField(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int newField = classWriter.newField("JSR/RET are not supported with computeFrames option", "JSR/RET are not supported with computeFrames option", "JSR/RET are not supported with computeFrames option")
statement is: newMethodItem(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)Lwheel/asm/Item; type is: class org.evosuite.testcase.statements.MethodStatement return type class wheel.asm.Item
statement code is: Item newMethodItem = classWriter.newMethodItem("JSR/RET are not supported with computeFrames option", "JSR/RET are not supported with computeFrames option", "JSR/RET are not supported with computeFrames option", true)
test data is: ClassWriter classWriter = new ClassWriter((-1502));
classWriter.newField("JSR/RET are not supported with computeFrames option", "JSR/RET are not supported with computeFrames option", "JSR/RET are not supported with computeFrames option");
classWriter.newMethodItem("JSR/RET are not supported with computeFrames option", "JSR/RET are not supported with computeFrames option", "JSR/RET are not supported with computeFrames option", true);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        classWriter.newField("Invalid opcode 188 in instruction at offset 136", "invalidOpcodeInInstruction", "invalidOpcodeInInstruction");
        classWriter.newMethodItem("Invalid opcode 188 in instruction at offset 136", "invalidOpcodeInInstruction", "invalidOpcodeInInstruction", false);
    }
}
statement is: classWriter.newField("Invalid opcode 188 in instruction at offset 136", "invalidOpcodeInInstruction", "invalidOpcodeInInstruction"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: classWriter.newField("Invalid opcode 188 in instruction at offset 136", "invalidOpcodeInInstruction", "invalidOpcodeInInstruction") target is: classWriter method is: newField(java.lang.String,java.lang.String,java.lang.String)
statement is: classWriter.newMethodItem("Invalid opcode 188 in instruction at offset 136", "invalidOpcodeInInstruction", "invalidOpcodeInInstruction", false), class spoon.support.reflect.code.CtInvocationImpl
invocation is: classWriter.newMethodItem("Invalid opcode 188 in instruction at offset 136", "invalidOpcodeInInstruction", "invalidOpcodeInInstruction", false) target is: classWriter method is: newMethodItem(java.lang.String,java.lang.String,java.lang.String,boolean)
statement is: wheel.asm.ClassWriter(I)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class wheel.asm.ClassWriter
statement code is: ClassWriter classWriter = new ClassWriter(27)
statement is: addType(Ljava/lang/String;)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int addType = classWriter.addType("$xcH8'RasE_8i")
statement is: addType(Ljava/lang/String;)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int addType = classWriter.addType("$xcH8'RasE_8i")
test data is: ClassWriter classWriter = new ClassWriter(27);
classWriter.addType("$xcH8'RasE_8i");
classWriter.addType("$xcH8'RasE_8i");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        classWriter.addType("$xcH8'RasE_8i");// A unique identifier for the first type

        classWriter.addType("$xcH8'RasE_8i");// A unique identifier for the second type }}

    }
}
statement is: classWriter.addType("$xcH8'RasE_8i")// A unique identifier for the first type
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: classWriter.addType("$xcH8'RasE_8i")// A unique identifier for the first type
 target is: classWriter method is: addType(java.lang.String)
statement is: classWriter.addType("$xcH8'RasE_8i")// A unique identifier for the second type }}
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: classWriter.addType("$xcH8'RasE_8i")// A unique identifier for the second type }}
 target is: classWriter method is: addType(java.lang.String)
statement is: wheel.asm.ClassWriter(I)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class wheel.asm.ClassWriter
statement code is: ClassWriter classWriter = new ClassWriter((-58))
statement is: addUninitializedType(Ljava/lang/String;I)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int addUninitializedType = classWriter.addUninitializedType("", (-1))
statement is: addUninitializedType(Ljava/lang/String;I)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int addUninitializedType = classWriter.addUninitializedType("", (-1))
test data is: ClassWriter classWriter = new ClassWriter((-58));
classWriter.addUninitializedType("", (-1));
classWriter.addUninitializedType("", (-1));

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        classWriter.addUninitializedType("Integer", 20);
        classWriter.addUninitializedType("Double", 30.5);
        classWriter.addUninitializedType("String", "Hello World");
        classWriter.addUninitializedType("Character", 'A');
    }
}
statement is: classWriter.addUninitializedType("Integer", 20), class spoon.support.reflect.code.CtInvocationImpl
invocation is: classWriter.addUninitializedType("Integer", 20) target is: classWriter method is: addUninitializedType(java.lang.String,int)
statement is: classWriter.addUninitializedType("Double", 30.5), class spoon.support.reflect.code.CtInvocationImpl
invocation is: classWriter.addUninitializedType("Double", 30.5) target is: classWriter method is: addUninitializedType(java.lang.String,double)
statement is: classWriter.addUninitializedType("String", "Hello World"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: classWriter.addUninitializedType("String", "Hello World") target is: classWriter method is: addUninitializedType(java.lang.String,java.lang.String)
statement is: classWriter.addUninitializedType("Character", 'A'), class spoon.support.reflect.code.CtInvocationImpl
invocation is: classWriter.addUninitializedType("Character", 'A') target is: classWriter method is: addUninitializedType(java.lang.String,char)
statement is: wheel.asm.ClassWriter(I)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class wheel.asm.ClassWriter
statement code is: ClassWriter classWriter = new ClassWriter(7)
statement is: org.evosuite.testcase.statements.ArrayStatement@2df46e4f type is: class org.evosuite.testcase.statements.ArrayStatement return type class [Lwheel.asm.Item;
statement code is: Item[] itemArray = new Item[1]
statement is: org.evosuite.testcase.statements.AssignmentStatement@2335b95a type is: class org.evosuite.testcase.statements.AssignmentStatement return type class [Lwheel.asm.Item;
statement code is: classWriter.typeTable = itemArray
statement is: addType(Ljava/lang/String;)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int addType = classWriter.addType("wheel.asm.ClassAdapter")
test data is: ClassWriter classWriter = new ClassWriter(7);
Item[] itemArray = new Item[1];
classWriter.typeTable = itemArray;
classWriter.addType("wheel.asm.ClassAdapter");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Item[] itemArray = new Item[1];
        classWriter.typeTable = itemArray;
        classWriter.addType("wheel.asm.ClassAdapter");
        classWriter.addType("java.lang.Integer");
    }
}
statement is: Item[] itemArray = new Item[1], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [1] Ct is: Item[] itemArray = new Item[1] isAssignment: false Array: new Item[1] Elements: []
lengths: [1] [1]
Their type are: class [Lwheel.asm.Item; Item[]
statement is: classWriter.typeTable = itemArray, class spoon.support.reflect.code.CtAssignmentImpl
statement is: classWriter.addType("wheel.asm.ClassAdapter"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: classWriter.addType("wheel.asm.ClassAdapter") target is: classWriter method is: addType(java.lang.String)
statement is: classWriter.addType("java.lang.Integer"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: classWriter.addType("java.lang.Integer") target is: classWriter method is: addType(java.lang.String)
TestCase is: Item[] itemArray = new Item[1];

statement is: wheel.asm.ClassWriter(I)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class wheel.asm.ClassWriter
statement code is: ClassWriter classWriter = new ClassWriter((-940))
statement is: getCommonSuperClass(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.lang.String
statement code is: String commonSuperClass = classWriter.getCommonSuperClass("wheel.asm.Attribute", "wheel.asm.Label")
test data is: ClassWriter classWriter = new ClassWriter((-940));
classWriter.getCommonSuperClass("wheel.asm.Attribute", "wheel.asm.Label");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Even more improved test data }}
    }
}
statement is: // Even more improved test data }}, class spoon.support.reflect.code.CtCommentImpl
statement is: wheel.asm.ClassWriter(I)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class wheel.asm.ClassWriter
statement code is: ClassWriter classWriter = new ClassWriter(7)
statement is: getCommonSuperClass(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.lang.String
statement code is: String commonSuperClass = classWriter.getCommonSuperClass("org.apache.commons.io.filefilter.FalseFileFilter", "org.apache.commons.io.filefilter.FalseFileFilter")
test data is: ClassWriter classWriter = new ClassWriter(7);
classWriter.getCommonSuperClass("org.apache.commons.io.filefilter.FalseFileFilter", "org.apache.commons.io.filefilter.FalseFileFilter");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        and = $missing$;
    }
}
statement is: and = $missing$, class spoon.support.reflect.code.CtAssignmentImpl
statement is: wheel.asm.ClassWriter(I)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class wheel.asm.ClassWriter
statement code is: ClassWriter classWriter = new ClassWriter(198)
statement is: getCommonSuperClass(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.lang.String
statement code is: String commonSuperClass = classWriter.getCommonSuperClass("wheel.asm.Label", "java/lang/Object")
test data is: ClassWriter classWriter = new ClassWriter(198);
classWriter.getCommonSuperClass("wheel.asm.Label", "java/lang/Object");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Improved test data:
        // Instead of using the primitive value 198, we can use a more descriptive and representative value for the parameter.
        // We also changed the strings to more illustrative examples. }}
    }
}
statement is: // Improved test data:, class spoon.support.reflect.code.CtCommentImpl
statement is: // Instead of using the primitive value 198, we can use a more descriptive and representative value for the parameter., class spoon.support.reflect.code.CtCommentImpl
statement is: // We also changed the strings to more illustrative examples. }}, class spoon.support.reflect.code.CtCommentImpl
statement is: wheel.asm.ClassWriter(I)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class wheel.asm.ClassWriter
statement code is: ClassWriter classWriter = new ClassWriter((-2149))
statement is: org.evosuite.testcase.statements.AssignmentStatement@b7b8c0e8 type is: class org.evosuite.testcase.statements.AssignmentStatement return type int
statement code is: classWriter.threshold = (-2149)
statement is: newDouble(D)Lwheel/asm/Item; type is: class org.evosuite.testcase.statements.MethodStatement return type class wheel.asm.Item
statement code is: Item newDouble = classWriter.newDouble((-2149))
test data is: ClassWriter classWriter = new ClassWriter((-2149));
classWriter.threshold = (-2149);
classWriter.newDouble((-2149));

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        classWriter.threshold = 10;
        classWriter.newDouble(10);
    }
}
statement is: classWriter.threshold = 10, class spoon.support.reflect.code.CtAssignmentImpl
statement is: classWriter.newDouble(10), class spoon.support.reflect.code.CtInvocationImpl
invocation is: classWriter.newDouble(10) target is: classWriter method is: newDouble(int)
statement is: wheel.asm.ClassReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class wheel.asm.ClassReader
statement code is: ClassReader classReader = new ClassReader("org.apache.commons.io.filefilter.FalseFileFilter")
statement is: wheel.asm.ClassWriter(Lwheel/asm/ClassReader;I)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class wheel.asm.ClassWriter
statement code is: ClassWriter classWriter = new ClassWriter(arg0, (-484))
statement is: newConstItem(Ljava/lang/Object;)Lwheel/asm/Item; type is: class org.evosuite.testcase.statements.MethodStatement return type class wheel.asm.Item
statement code is: Item newConstItem = classWriter.newConstItem("org.apache.commons.io.filefilter.FalseFileFilter")
test data is: ClassReader classReader = new ClassReader("org.apache.commons.io.filefilter.FalseFileFilter");
ClassWriter classWriter = new ClassWriter(classReader, (-484));
classWriter.newConstItem("org.apache.commons.io.filefilter.FalseFileFilter");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        classWriter.visitEnd();
    }
}
statement is: classWriter.visitEnd(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: classWriter.visitEnd() target is: classWriter method is: visitEnd()
statement is: wheel.asm.ClassWriter(I)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class wheel.asm.ClassWriter
statement code is: ClassWriter classWriter = new ClassWriter(0)
statement is: visitEnd()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: classWriter.visitEnd()
test data is: ClassWriter classWriter = new ClassWriter(0);
classWriter.visitEnd();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        classWriter.visitEnd();
        // Improved test data:
        // Replace the primitive values with more descriptive examples:
        int myInt = 42;
        double myDouble = 3.14;
        String myString = "Hello, World!";
        char myChar = 'a';
        // Replace the String literals with more representative examples:
        String[] myStrings = new String[]{ "apple", "banana", "cherry" };
        String myConcatenatedString = "Hello, " + "World!";
    }
}
statement is: classWriter.visitEnd(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: classWriter.visitEnd() target is: classWriter method is: visitEnd()
statement is: // Improved test data:
// Replace the primitive values with more descriptive examples:
int myInt = 42, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: double myDouble = 3.14, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: String myString = "Hello, World!", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: char myChar = 'a', class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: // Replace the String literals with more representative examples:
String[] myStrings = new String[]{ "apple", "banana", "cherry" }, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
statement is: String myConcatenatedString = "Hello, " + "World!", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtBinaryOperatorImpl
IT HAS NOT BEEN SUPPORTED YET: "Hello, " + "World!"
* this is vulnerable: int _int = 42
* this is vulnerable: double _double = 3.14
* this is vulnerable: String string = "Hello, World!"
* this is vulnerable: char _char = 'a'
TestCase is: int _int = 42;
double _double = 3.14;
String string = "Hello, World!";
char _char = 'a';

statement is: wheel.asm.ClassWriter(I)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class wheel.asm.ClassWriter
statement code is: ClassWriter classWriter = new ClassWriter((-2527))
statement is: newFieldItem(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lwheel/asm/Item; type is: class org.evosuite.testcase.statements.MethodStatement return type class wheel.asm.Item
statement code is: Item newFieldItem = classWriter.newFieldItem("", "", "")
statement is: newFieldItem(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lwheel/asm/Item; type is: class org.evosuite.testcase.statements.MethodStatement return type class wheel.asm.Item
statement code is: Item newFieldItem = classWriter.newFieldItem("", "", "")
test data is: ClassWriter classWriter = new ClassWriter((-2527));
classWriter.newFieldItem("", "", "");
classWriter.newFieldItem("", "", "");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        classWriter.newFieldItem("name", "String", "\"John Doe\"");
        classWriter.newFieldItem("age", "Integer", "25");
    }
}
statement is: classWriter.newFieldItem("name", "String", "\"John Doe\""), class spoon.support.reflect.code.CtInvocationImpl
invocation is: classWriter.newFieldItem("name", "String", "\"John Doe\"") target is: classWriter method is: newFieldItem(java.lang.String,java.lang.String,java.lang.String)
statement is: classWriter.newFieldItem("age", "Integer", "25"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: classWriter.newFieldItem("age", "Integer", "25") target is: classWriter method is: newFieldItem(java.lang.String,java.lang.String,java.lang.String)
statement is: wheel.asm.ClassWriter(I)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class wheel.asm.ClassWriter
statement code is: ClassWriter classWriter = new ClassWriter(256)
statement is: newNameType(Ljava/lang/String;Ljava/lang/String;)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int newNameType = classWriter.newNameType("DWRUm37bm/O!^7Z{'NQ", "DWRUm37bm/O!^7Z{'NQ")
statement is: newNameType(Ljava/lang/String;Ljava/lang/String;)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int newNameType = classWriter.newNameType("DWRUm37bm/O!^7Z{'NQ", "DWRUm37bm/O!^7Z{'NQ")
test data is: ClassWriter classWriter = new ClassWriter(256);
classWriter.newNameType("DWRUm37bm/O!^7Z{'NQ", "DWRUm37bm/O!^7Z{'NQ");
classWriter.newNameType("DWRUm37bm/O!^7Z{'NQ", "DWRUm37bm/O!^7Z{'NQ");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        classWriter.newNameType("Alice", "Bob");
        classWriter.newNameType("Charlie", "David");
        classWriter.newNameType("Eve", "Frank");
        classWriter.newNameType("Grace", "Henry");
    }
}
statement is: classWriter.newNameType("Alice", "Bob"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: classWriter.newNameType("Alice", "Bob") target is: classWriter method is: newNameType(java.lang.String,java.lang.String)
statement is: classWriter.newNameType("Charlie", "David"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: classWriter.newNameType("Charlie", "David") target is: classWriter method is: newNameType(java.lang.String,java.lang.String)
statement is: classWriter.newNameType("Eve", "Frank"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: classWriter.newNameType("Eve", "Frank") target is: classWriter method is: newNameType(java.lang.String,java.lang.String)
statement is: classWriter.newNameType("Grace", "Henry"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: classWriter.newNameType("Grace", "Henry") target is: classWriter method is: newNameType(java.lang.String,java.lang.String)
statement is: wheel.asm.ClassReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class wheel.asm.ClassReader
statement code is: ClassReader classReader = new ClassReader("wheel.asm.ClassWriter")
statement is: wheel.asm.ClassWriter(Lwheel/asm/ClassReader;I)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class wheel.asm.ClassWriter
statement code is: ClassWriter classWriter = new ClassWriter(arg0, (-473))
statement is: newClass(Ljava/lang/String;)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int newClass = classWriter.newClass("")
test data is: ClassReader classReader = new ClassReader("wheel.asm.ClassWriter");
ClassWriter classWriter = new ClassWriter(classReader, (-473));
classWriter.newClass("");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Improved test data: }}
    }
}
statement is: // Improved test data: }}, class spoon.support.reflect.code.CtCommentImpl
statement is: wheel.asm.ClassWriter(I)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class wheel.asm.ClassWriter
statement code is: ClassWriter classWriter = new ClassWriter(1222)
statement is: newClassItem(Ljava/lang/String;)Lwheel/asm/Item; type is: class org.evosuite.testcase.statements.MethodStatement return type class wheel.asm.Item
statement code is: Item newClassItem = classWriter.newClassItem("InnerClasses")
test data is: ClassWriter classWriter = new ClassWriter(1222);
classWriter.newClassItem("InnerClasses");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Improved test data:
        String className = "com.example.MyClass";
        int accessFlags = "ACC_PUBLIC | ACC_FINAL";
        List<String> innerClassNames = Arrays.asList("com.example.MyClass$Inner", "com.example.MyClass$Inner$Deeper");
        List<Integer> innerAccessFlags = Arrays.asList("ACC_PUBLIC | ACC_STATIC", "ACC_PROTECTED | ACC_FINAL");
    }
}
statement is: // Improved test data:
String className = "com.example.MyClass", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: int accessFlags = "ACC_PUBLIC | ACC_FINAL", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: List<String> innerClassNames = Arrays.asList("com.example.MyClass$Inner", "com.example.MyClass$Inner$Deeper"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: Arrays.asList("com.example.MyClass$Inner", "com.example.MyClass$Inner$Deeper") target is: Arrays method is: asList(java.lang.String,java.lang.String)
statement is: List<Integer> innerAccessFlags = Arrays.asList("ACC_PUBLIC | ACC_STATIC", "ACC_PROTECTED | ACC_FINAL"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: Arrays.asList("ACC_PUBLIC | ACC_STATIC", "ACC_PROTECTED | ACC_FINAL") target is: Arrays method is: asList(java.lang.String,java.lang.String)
* this is vulnerable: String string = "com.example.MyClass"
* this is vulnerable: String string = "ACC_PUBLIC | ACC_FINAL"
TestCase is: String string = "com.example.MyClass";
String string = "ACC_PUBLIC | ACC_FINAL";

statement is: wheel.asm.ClassWriter(I)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class wheel.asm.ClassWriter
statement code is: ClassWriter classWriter = new ClassWriter((-1529))
statement is: org.evosuite.testcase.statements.AssignmentStatement@b3ca67d4 type is: class org.evosuite.testcase.statements.AssignmentStatement return type int
statement code is: classWriter.index = (-1529)
statement is: newField(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int newField = classWriter.newField("U*", "U*", "U*")
test data is: ClassWriter classWriter = new ClassWriter((-1529));
classWriter.index = (-1529);
classWriter.newField("U*", "U*", "U*");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        classWriter.index = 8;
        classWriter.newField("java.lang.String", "Ljava/lang/String;", "myString");
    }
}
statement is: classWriter.index = 8, class spoon.support.reflect.code.CtAssignmentImpl
statement is: classWriter.newField("java.lang.String", "Ljava/lang/String;", "myString"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: classWriter.newField("java.lang.String", "Ljava/lang/String;", "myString") target is: classWriter method is: newField(java.lang.String,java.lang.String,java.lang.String)
statement is: wheel.asm.ClassWriter(I)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class wheel.asm.ClassWriter
statement code is: ClassWriter classWriter = new ClassWriter((-2359))
statement is: org.evosuite.testcase.statements.AssignmentStatement@869e6e66 type is: class org.evosuite.testcase.statements.AssignmentStatement return type int
statement code is: classWriter.index = (-2359)
statement is: newNameType(Ljava/lang/String;Ljava/lang/String;)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int newNameType = classWriter.newNameType("n:qL!}%_J~7e\"A1", "i+-]B$CJy0pHe5trj")
test data is: ClassWriter classWriter = new ClassWriter((-2359));
classWriter.index = (-2359);
classWriter.newNameType("n:qL!}%_J~7e\"A1", "i+-]B$CJy0pHe5trj");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        classWriter.index = -2359;
    }
}
statement is: classWriter.index = -2359, class spoon.support.reflect.code.CtAssignmentImpl
statement is: wheel.asm.ClassWriter(I)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class wheel.asm.ClassWriter
statement code is: ClassWriter classWriter = new ClassWriter((-1517))
statement is: org.evosuite.testcase.statements.AssignmentStatement@177cc363 type is: class org.evosuite.testcase.statements.AssignmentStatement return type int
statement code is: classWriter.index = (-69)
statement is: newUTF8(Ljava/lang/String;)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int newUTF8 = classWriter.newUTF8("{SNQj&?23#{i,er,")
test data is: ClassWriter classWriter = new ClassWriter((-1517));
classWriter.index = (-69);
classWriter.newUTF8("{SNQj&?23#{i,er,");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        classWriter.index = 0xface;
        classWriter.newUTF8("This is a descriptive string for testing purposes.");
    }
}
statement is: classWriter.index = 0xface, class spoon.support.reflect.code.CtAssignmentImpl
statement is: classWriter.newUTF8("This is a descriptive string for testing purposes."), class spoon.support.reflect.code.CtInvocationImpl
invocation is: classWriter.newUTF8("This is a descriptive string for testing purposes.") target is: classWriter method is: newUTF8(java.lang.String)
statement is: wheel.asm.ClassWriter(I)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class wheel.asm.ClassWriter
statement code is: ClassWriter classWriter = new ClassWriter(7)
statement is: newUTF8(Ljava/lang/String;)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int newUTF8 = classWriter.newUTF8("org.apache.commons.io.filefilter.FalseFileFilter")
test data is: ClassWriter classWriter = new ClassWriter(7);
classWriter.newUTF8("org.apache.commons.io.filefilter.FalseFileFilter");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // New primitive values to make the test data more descriptive and representative of the situation being tested
        ClassWriter classWriter = new ClassWriter(7);
        classWriter.newUTF8("com.example.filefilter.FalseFileFilter");
    }
}
statement is: // New primitive values to make the test data more descriptive and representative of the situation being tested
ClassWriter classWriter = new ClassWriter(7), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: classWriter.newUTF8("com.example.filefilter.FalseFileFilter"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: classWriter.newUTF8("com.example.filefilter.FalseFileFilter") target is: classWriter method is: newUTF8(java.lang.String)
source statement: wheel.asm.ClassWriter(I)V callee: VariableReference: Statement 0, type wheel.asm.ClassWriterindex is: 1
Matched Method is: newUTF8(Ljava/lang/String;)I
TestCase is: int _int = 7;
ClassWriter classWriter = new ClassWriter(_int);
String string = "com.example.filefilter.FalseFileFilter";
((ClassWriter) _int).newUTF8(string);

statement is: wheel.asm.ClassWriter(I)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class wheel.asm.ClassWriter
statement code is: ClassWriter classWriter = new ClassWriter((-752))
statement is: org.evosuite.testcase.statements.ArrayStatement@a6e3c633 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [Ljava.lang.String;
statement code is: String[] stringArray = new String[2]
statement is: org.evosuite.testcase.statements.AssignmentStatement@17cc7cda type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.String
statement code is: stringArray[0] = ""
statement is: org.evosuite.testcase.statements.AssignmentStatement@8cc9c2a3 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.String
statement code is: stringArray[1] = "02^b!x|SK&er8N8["
statement is: visitMethod(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)Lwheel/asm/MethodVisitor; type is: class org.evosuite.testcase.statements.MethodStatement return type class wheel.asm.MethodWriter
statement code is: MethodWriter visitMethod = (MethodWriter)classWriter.visitMethod((-752), "02^b!x|SK&er8N8[", "", "02^b!x|SK&er8N8[", arg4)
test data is: ClassWriter classWriter = new ClassWriter((-752));
String[] stringArray = new String[2];
stringArray[0] = "";
stringArray[1] = "02^b!x|SK&er8N8[";
classWriter.visitMethod((-752), "02^b!x|SK&er8N8[", "", "02^b!x|SK&er8N8[", stringArray);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        String[] stringArray = new String[2];
        stringArray[0] = "This is a test string";
        stringArray[1] = "Another test string";
    }
}
statement is: String[] stringArray = new String[2], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [2] Ct is: String[] stringArray = new String[2] isAssignment: false Array: new String[2] Elements: []
lengths: [2] [2]
Their type are: class [Ljava.lang.String; String[]
statement is: stringArray[0] = "This is a test string", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"This is a test string" Ct is: stringArray[0] = "This is a test string"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
TestCase Could not be added: org.evosuite.testcase.statements.AssignmentStatement@1962e31b
statement is: stringArray[1] = "Another test string", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : stringArray[1] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl String Assignment:"Another test string" Ct is: stringArray[1] = "Another test string"
target : stringArray class spoon.support.reflect.code.CtLiteralImpl
TestCase Could not be added: org.evosuite.testcase.statements.AssignmentStatement@6cf5b218
* this is vulnerable: String string = "This is a test string"
* this is vulnerable: String string = "Another test string"
TestCase is: String[] stringArray = new String[2];
String string = "This is a test string";
String string = "Another test string";

statement is: wheel.asm.ClassWriter(I)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class wheel.asm.ClassWriter
statement code is: ClassWriter classWriter = new ClassWriter((-940))
statement is: getCommonSuperClass(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.lang.String
statement code is: String commonSuperClass = classWriter.getCommonSuperClass("org.apache.commons.io.filefilter.AgeFileFilter", "[Xt9k:6&J |z")
test data is: ClassWriter classWriter = new ClassWriter((-940));
classWriter.getCommonSuperClass("org.apache.commons.io.filefilter.AgeFileFilter", "[Xt9k:6&J |z");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Improved test data }}
    }
}
statement is: // Improved test data }}, class spoon.support.reflect.code.CtCommentImpl
statement is: wheel.asm.ClassWriter(I)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class wheel.asm.ClassWriter
statement code is: ClassWriter classWriter = new ClassWriter(33554432)
statement is: addType(Ljava/lang/String;)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int addType = classWriter.addType("org.apache.commons.io.filefilter.TrueFileFilter")
statement is: addUninitializedType(Ljava/lang/String;I)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int addUninitializedType = classWriter.addUninitializedType("", 33554432)
statement is: addUninitializedType(Ljava/lang/String;I)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int addUninitializedType = classWriter.addUninitializedType("", 2)
statement is: getMergedType(II)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int mergedType = classWriter.getMergedType(3, 1)
test data is: ClassWriter classWriter = new ClassWriter(33554432);
classWriter.addType("org.apache.commons.io.filefilter.TrueFileFilter");
classWriter.addUninitializedType("", 33554432);
classWriter.addUninitializedType("", 2);
classWriter.getMergedType(3, 1);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        classWriter.addType("org.apache.commons.io.filefilter.TrueFileFilter");
        classWriter.addUninitializedType("", 33554432);
        classWriter.addUninitializedType("", 2);
        classWriter.getMergedType(3, 1);
    }
}
statement is: classWriter.addType("org.apache.commons.io.filefilter.TrueFileFilter"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: classWriter.addType("org.apache.commons.io.filefilter.TrueFileFilter") target is: classWriter method is: addType(java.lang.String)
statement is: classWriter.addUninitializedType("", 33554432), class spoon.support.reflect.code.CtInvocationImpl
invocation is: classWriter.addUninitializedType("", 33554432) target is: classWriter method is: addUninitializedType(java.lang.String,int)
statement is: classWriter.addUninitializedType("", 2), class spoon.support.reflect.code.CtInvocationImpl
invocation is: classWriter.addUninitializedType("", 2) target is: classWriter method is: addUninitializedType(java.lang.String,int)
statement is: classWriter.getMergedType(3, 1), class spoon.support.reflect.code.CtInvocationImpl
invocation is: classWriter.getMergedType(3, 1) target is: classWriter method is: getMergedType(int,int)
* test suite isTestSuite: 61
Test 0: 
ClassWriter classWriter = new ClassWriter((-1502));
String[] stringArray = new String[3];
stringArray[0] = "wheel.asm.ClassAdapter";
stringArray[1] = "";
stringArray[2] = "";
classWriter.visit(3221, 15, "", "", "wheel.asm.ClassAdapter", stringArray);
classWriter.invalidFrames = true;
classWriter.toByteArray();
Test 1: 
ClassWriter classWriter = new ClassWriter((-2192));
classWriter.newConst("/D");
classWriter.visitField((-737), "/D", "/D", "/D", "/D");
Test 2: 
ClassWriter classWriter = new ClassWriter((-5007));
classWriter.visit(4, (-1320), "", (String) null, "yl]/B)oCC", (String[]) null);
Test 3: 
ClassWriter classWriter = new ClassWriter(0);
classWriter.visit(3376, (-2371), "", "The array of prefixes must not be null", (String) null, (String[]) null);
Test 4: 
ClassWriter classWriter = new ClassWriter(16777221);
String[] stringArray = new String[0];
classWriter.visit(16777221, 1122, "", "[cl\"?YvUe{=\"b>XqbA", "[cl\"?YvUe{=\"b>XqbA", stringArray);
Test 5: 
ClassWriter classWriter = new ClassWriter(193);
classWriter.visitSource((String) null, (String) null);
Test 6: 
ClassWriter classWriter = new ClassWriter(0);
classWriter.visitOuterClass("/)nZoQI$6{[>,$6~", (String) null, (String) null);
Test 7: 
ClassWriter classWriter = new ClassWriter(592);
classWriter.visitOuterClass("%/xFdFS3d'dq)L-", "%/xFdFS3d'dq)L-", "%/xFdFS3d'dq)L-");
classWriter.toByteArray();
Test 8: 
ClassWriter classWriter = new ClassWriter(0);
classWriter.visitOuterClass("", "wH[g9PKXmf`s,dh=+~", (String) null);
Test 9: 
ClassWriter classWriter = new ClassWriter(360);
classWriter.visitAnnotation("", false);
classWriter.toByteArray();
Test 10: 
ClassWriter classWriter = new ClassWriter(27);
classWriter.visitAnnotation("", true);
classWriter.toByteArray();
Test 11: 
ClassWriter classWriter = new ClassWriter(0);
classWriter.visitInnerClass("E", "E", "E", 972);
classWriter.visitInnerClass((String) null, (String) null, "E", 972);
Test 12: 
ClassWriter classWriter = new ClassWriter(1433);
classWriter.visitInnerClass((String) null, (String) null, (String) null, 1433);
Test 13: 
ClassWriter classWriter = new ClassWriter(32);
classWriter.visitField(202, "l", "l", "SourceDebugExtension", "l");
classWriter.toByteArray();
Test 14: 
ClassWriter classWriter = new ClassWriter(7);
String[] stringArray = new String[6];
stringArray[0] = "";
stringArray[1] = "";
stringArray[2] = "Qx)*T/G_6` )";
stringArray[3] = "";
stringArray[4] = "Qx)*T/G_6` )";
stringArray[5] = "";
MethodWriter methodWriter = new MethodWriter(classWriter, 3, "Qx)*T/G_6` )", "Qx)*T/G_6` )", "", stringArray, true, false);
classWriter.toByteArray();
Test 15: 
ClassWriter classWriter = new ClassWriter(8);
classWriter.visitSource("-HA7$2t= lb+M", "org.apache.commons.io.filefilter.SizeFileFilter");
classWriter.toByteArray();
Test 16: 
ClassWriter classWriter = new ClassWriter(1433);
classWriter.visitInnerClass("", "", "", 26);
classWriter.toByteArray();
Test 17: 
ClassWriter classWriter = new ClassWriter(220);
Attribute attribute = new Attribute("YL4c9z q[='mygML");
byte[] byteArray = new byte[3];
attribute.value = byteArray;
classWriter.visitAttribute(attribute);
classWriter.toByteArray();
Test 18: 
ClassWriter classWriter = new ClassWriter(1566);
Character character = new Character('Q');
classWriter.newConst(character);
Test 19: 
ClassWriter classWriter = new ClassWriter((-2527));
Item[] itemArray = new Item[9];
// Undeclared exception!
try { 
  classWriter.newConstItem(itemArray[0]);
  fail("Expecting exception: IllegalArgumentException");

} catch(IllegalArgumentException e) {
   //
   // value null
   //
   verifyException("wheel.asm.ClassWriter", e);
}

Test 20: 
ClassWriter classWriter = new ClassWriter(27);
classWriter.newMethod("$xcH8'RasE_8i", "$xcH8'RasE_8i", "zM8Q^-<D}'1!_", false);
Test 21: 
ClassWriter classWriter = new ClassWriter(185);
classWriter.newMethodItem("SourceFile", "SourceFile", "SourceFile", true);
classWriter.newMethodItem("SourceFile", "SourceFile", "SourceFile", true);
Test 22: 
ClassWriter classWriter = new ClassWriter(12);
classWriter.newInteger(12);
classWriter.newInteger(12);
Test 23: 
ClassWriter classWriter = new ClassWriter(12);
classWriter.newFloat(12);
classWriter.newFloat(12);
Test 24: 
ClassWriter classWriter = new ClassWriter(7);
classWriter.newLong(7);
classWriter.newLong(7);
Test 25: 
ClassWriter classWriter = new ClassWriter(221);
classWriter.newDouble(221);
classWriter.newDouble(221);
Test 26: 
ClassWriter classWriter = new ClassWriter((-1502));
classWriter.newField("JSR/RET are not supported with computeFrames option", "JSR/RET are not supported with computeFrames option", "JSR/RET are not supported with computeFrames option");
classWriter.newMethodItem("JSR/RET are not supported with computeFrames option", "JSR/RET are not supported with computeFrames option", "JSR/RET are not supported with computeFrames option", true);
Test 27: 
ClassWriter classWriter = new ClassWriter(27);
classWriter.addType("$xcH8'RasE_8i");
classWriter.addType("$xcH8'RasE_8i");
Test 28: 
ClassWriter classWriter = new ClassWriter((-58));
classWriter.addUninitializedType("", (-1));
classWriter.addUninitializedType("", (-1));
Test 29: 
ClassWriter classWriter = new ClassWriter(7);
Item[] itemArray = new Item[1];
classWriter.typeTable = itemArray;
classWriter.addType("wheel.asm.ClassAdapter");
Test 30: 
ClassWriter classWriter = new ClassWriter((-940));
classWriter.getCommonSuperClass("wheel.asm.Attribute", "wheel.asm.Label");
Test 31: 
ClassWriter classWriter = new ClassWriter(7);
classWriter.getCommonSuperClass("org.apache.commons.io.filefilter.FalseFileFilter", "org.apache.commons.io.filefilter.FalseFileFilter");
Test 32: 
ClassWriter classWriter = new ClassWriter(198);
classWriter.getCommonSuperClass("wheel.asm.Label", "java/lang/Object");
Test 33: 
ClassWriter classWriter = new ClassWriter((-2149));
classWriter.threshold = (-2149);
classWriter.newDouble((-2149));
Test 34: 
ClassReader classReader = new ClassReader("org.apache.commons.io.filefilter.FalseFileFilter");
ClassWriter classWriter = new ClassWriter(classReader, (-484));
classWriter.newConstItem("org.apache.commons.io.filefilter.FalseFileFilter");
Test 35: 
ClassWriter classWriter = new ClassWriter(0);
classWriter.visitEnd();
Test 36: 
ClassWriter classWriter = new ClassWriter((-2527));
classWriter.newFieldItem("", "", "");
classWriter.newFieldItem("", "", "");
Test 37: 
ClassWriter classWriter = new ClassWriter(256);
classWriter.newNameType("DWRUm37bm/O!^7Z{'NQ", "DWRUm37bm/O!^7Z{'NQ");
classWriter.newNameType("DWRUm37bm/O!^7Z{'NQ", "DWRUm37bm/O!^7Z{'NQ");
Test 38: 
ClassReader classReader = new ClassReader("wheel.asm.ClassWriter");
ClassWriter classWriter = new ClassWriter(classReader, (-473));
classWriter.newClass("");
Test 39: 
ClassWriter classWriter = new ClassWriter(1222);
classWriter.newClassItem("InnerClasses");
Test 40: 
ClassWriter classWriter = new ClassWriter((-1529));
classWriter.index = (-1529);
classWriter.newField("U*", "U*", "U*");
Test 41: 
ClassWriter classWriter = new ClassWriter((-2359));
classWriter.index = (-2359);
classWriter.newNameType("n:qL!}%_J~7e\"A1", "i+-]B$CJy0pHe5trj");
Test 42: 
ClassWriter classWriter = new ClassWriter((-1517));
classWriter.index = (-69);
classWriter.newUTF8("{SNQj&?23#{i,er,");
Test 43: 
ClassWriter classWriter = new ClassWriter(7);
classWriter.newUTF8("org.apache.commons.io.filefilter.FalseFileFilter");
Test 44: 
ClassWriter classWriter = new ClassWriter((-752));
String[] stringArray = new String[2];
stringArray[0] = "";
stringArray[1] = "02^b!x|SK&er8N8[";
classWriter.visitMethod((-752), "02^b!x|SK&er8N8[", "", "02^b!x|SK&er8N8[", stringArray);
Test 45: 
ClassWriter classWriter = new ClassWriter((-940));
// Undeclared exception!
try { 
  classWriter.getCommonSuperClass("org.apache.commons.io.filefilter.AgeFileFilter", "[Xt9k:6&J |z");
  fail("Expecting exception: RuntimeException");

} catch(RuntimeException e) {
   //
   // java.lang.ClassNotFoundException: [Xt9k:6&J |z
   //
   verifyException("wheel.asm.ClassWriter", e);
}

Test 46: 
ClassWriter classWriter = new ClassWriter(33554432);
classWriter.addType("org.apache.commons.io.filefilter.TrueFileFilter");
classWriter.addUninitializedType("", 33554432);
classWriter.addUninitializedType("", 2);
// Undeclared exception!
try { 
  classWriter.getMergedType(3, 1);
  fail("Expecting exception: RuntimeException");

} catch(RuntimeException e) {
   //
   // java.lang.ClassNotFoundException: 
   //
   verifyException("wheel.asm.ClassWriter", e);
}

Test 47: 
String[] stringArray = new String[3];

Test 48: 

Test 49: 
String[] stringArray = new String[6];
MethodWriter methodWriter = new MethodWriter((ClassWriter) 3, (int) "Qx)*T/G_6` )", "Qx)*T/G_6` )", "", (String) stringArray, (String[]) true, false, false);

Test 50: 

Test 51: 
Attribute attribute = new Attribute("YL4c9z q[='mygML");
byte[] byteArray = new byte[3];

Test 52: 
Character character = new Character('Z');

Test 53: 
Item[] itemArray = new Item[9];

Test 54: 

Test 55: 
int _int = 221;
ClassWriter classWriter = new ClassWriter(221);
((ClassWriter)221).newDouble(2018);
int _int = 2023;
((ClassWriter) _int).newDouble(_int);

Test 56: 
Item[] itemArray = new Item[1];

Test 57: 

Test 58: 

Test 59: 
ClassWriter classWriter = new ClassWriter(7);
((ClassWriter)7).newUTF8("com.example.filefilter.FalseFileFilter");

Test 60: 
String[] stringArray = new String[2];


* Generated after the refinement and before minimization 61 tests with total length 163
* test suite isTestSuite: 61
Test 0: 
ClassWriter classWriter = new ClassWriter((-1502));
String[] stringArray = new String[3];
stringArray[0] = "wheel.asm.ClassAdapter";
stringArray[1] = "";
stringArray[2] = "";
classWriter.visit(3221, 15, "", "", "wheel.asm.ClassAdapter", stringArray);
classWriter.invalidFrames = true;
classWriter.toByteArray();
Test 1: 
ClassWriter classWriter = new ClassWriter((-2192));
classWriter.newConst("/D");
classWriter.visitField((-737), "/D", "/D", "/D", "/D");
Test 2: 
ClassWriter classWriter = new ClassWriter((-5007));
classWriter.visit(4, (-1320), "", (String) null, "yl]/B)oCC", (String[]) null);
Test 3: 
ClassWriter classWriter = new ClassWriter(0);
classWriter.visit(3376, (-2371), "", "The array of prefixes must not be null", (String) null, (String[]) null);
Test 4: 
ClassWriter classWriter = new ClassWriter(16777221);
String[] stringArray = new String[0];
classWriter.visit(16777221, 1122, "", "[cl\"?YvUe{=\"b>XqbA", "[cl\"?YvUe{=\"b>XqbA", stringArray);
Test 5: 
ClassWriter classWriter = new ClassWriter(193);
classWriter.visitSource((String) null, (String) null);
Test 6: 
ClassWriter classWriter = new ClassWriter(0);
classWriter.visitOuterClass("/)nZoQI$6{[>,$6~", (String) null, (String) null);
Test 7: 
ClassWriter classWriter = new ClassWriter(592);
classWriter.visitOuterClass("%/xFdFS3d'dq)L-", "%/xFdFS3d'dq)L-", "%/xFdFS3d'dq)L-");
classWriter.toByteArray();
Test 8: 
ClassWriter classWriter = new ClassWriter(0);
classWriter.visitOuterClass("", "wH[g9PKXmf`s,dh=+~", (String) null);
Test 9: 
ClassWriter classWriter = new ClassWriter(360);
classWriter.visitAnnotation("", false);
classWriter.toByteArray();
Test 10: 
ClassWriter classWriter = new ClassWriter(27);
classWriter.visitAnnotation("", true);
classWriter.toByteArray();
Test 11: 
ClassWriter classWriter = new ClassWriter(0);
classWriter.visitInnerClass("E", "E", "E", 972);
classWriter.visitInnerClass((String) null, (String) null, "E", 972);
Test 12: 
ClassWriter classWriter = new ClassWriter(1433);
classWriter.visitInnerClass((String) null, (String) null, (String) null, 1433);
Test 13: 
ClassWriter classWriter = new ClassWriter(32);
classWriter.visitField(202, "l", "l", "SourceDebugExtension", "l");
classWriter.toByteArray();
Test 14: 
ClassWriter classWriter = new ClassWriter(7);
String[] stringArray = new String[6];
stringArray[0] = "";
stringArray[1] = "";
stringArray[2] = "Qx)*T/G_6` )";
stringArray[3] = "";
stringArray[4] = "Qx)*T/G_6` )";
stringArray[5] = "";
MethodWriter methodWriter = new MethodWriter(classWriter, 3, "Qx)*T/G_6` )", "Qx)*T/G_6` )", "", stringArray, true, false);
classWriter.toByteArray();
Test 15: 
ClassWriter classWriter = new ClassWriter(8);
classWriter.visitSource("-HA7$2t= lb+M", "org.apache.commons.io.filefilter.SizeFileFilter");
classWriter.toByteArray();
Test 16: 
ClassWriter classWriter = new ClassWriter(1433);
classWriter.visitInnerClass("", "", "", 26);
classWriter.toByteArray();
Test 17: 
ClassWriter classWriter = new ClassWriter(220);
Attribute attribute = new Attribute("YL4c9z q[='mygML");
byte[] byteArray = new byte[3];
attribute.value = byteArray;
classWriter.visitAttribute(attribute);
classWriter.toByteArray();
Test 18: 
ClassWriter classWriter = new ClassWriter(1566);
Character character = new Character('Q');
classWriter.newConst(character);
Test 19: 
ClassWriter classWriter = new ClassWriter((-2527));
Item[] itemArray = new Item[9];
// Undeclared exception!
try { 
  classWriter.newConstItem(itemArray[0]);
  fail("Expecting exception: IllegalArgumentException");

} catch(IllegalArgumentException e) {
   //
   // value null
   //
   verifyException("wheel.asm.ClassWriter", e);
}

Test 20: 
ClassWriter classWriter = new ClassWriter(27);
classWriter.newMethod("$xcH8'RasE_8i", "$xcH8'RasE_8i", "zM8Q^-<D}'1!_", false);
Test 21: 
ClassWriter classWriter = new ClassWriter(185);
classWriter.newMethodItem("SourceFile", "SourceFile", "SourceFile", true);
classWriter.newMethodItem("SourceFile", "SourceFile", "SourceFile", true);
Test 22: 
ClassWriter classWriter = new ClassWriter(12);
classWriter.newInteger(12);
classWriter.newInteger(12);
Test 23: 
ClassWriter classWriter = new ClassWriter(12);
classWriter.newFloat(12);
classWriter.newFloat(12);
Test 24: 
ClassWriter classWriter = new ClassWriter(7);
classWriter.newLong(7);
classWriter.newLong(7);
Test 25: 
ClassWriter classWriter = new ClassWriter(221);
classWriter.newDouble(221);
classWriter.newDouble(221);
Test 26: 
ClassWriter classWriter = new ClassWriter((-1502));
classWriter.newField("JSR/RET are not supported with computeFrames option", "JSR/RET are not supported with computeFrames option", "JSR/RET are not supported with computeFrames option");
classWriter.newMethodItem("JSR/RET are not supported with computeFrames option", "JSR/RET are not supported with computeFrames option", "JSR/RET are not supported with computeFrames option", true);
Test 27: 
ClassWriter classWriter = new ClassWriter(27);
classWriter.addType("$xcH8'RasE_8i");
classWriter.addType("$xcH8'RasE_8i");
Test 28: 
ClassWriter classWriter = new ClassWriter((-58));
classWriter.addUninitializedType("", (-1));
classWriter.addUninitializedType("", (-1));
Test 29: 
ClassWriter classWriter = new ClassWriter(7);
Item[] itemArray = new Item[1];
classWriter.typeTable = itemArray;
classWriter.addType("wheel.asm.ClassAdapter");
Test 30: 
ClassWriter classWriter = new ClassWriter((-940));
classWriter.getCommonSuperClass("wheel.asm.Attribute", "wheel.asm.Label");
Test 31: 
ClassWriter classWriter = new ClassWriter(7);
classWriter.getCommonSuperClass("org.apache.commons.io.filefilter.FalseFileFilter", "org.apache.commons.io.filefilter.FalseFileFilter");
Test 32: 
ClassWriter classWriter = new ClassWriter(198);
classWriter.getCommonSuperClass("wheel.asm.Label", "java/lang/Object");
Test 33: 
ClassWriter classWriter = new ClassWriter((-2149));
classWriter.threshold = (-2149);
classWriter.newDouble((-2149));
Test 34: 
ClassReader classReader = new ClassReader("org.apache.commons.io.filefilter.FalseFileFilter");
ClassWriter classWriter = new ClassWriter(classReader, (-484));
classWriter.newConstItem("org.apache.commons.io.filefilter.FalseFileFilter");
Test 35: 
ClassWriter classWriter = new ClassWriter(0);
classWriter.visitEnd();
Test 36: 
ClassWriter classWriter = new ClassWriter((-2527));
classWriter.newFieldItem("", "", "");
classWriter.newFieldItem("", "", "");
Test 37: 
ClassWriter classWriter = new ClassWriter(256);
classWriter.newNameType("DWRUm37bm/O!^7Z{'NQ", "DWRUm37bm/O!^7Z{'NQ");
classWriter.newNameType("DWRUm37bm/O!^7Z{'NQ", "DWRUm37bm/O!^7Z{'NQ");
Test 38: 
ClassReader classReader = new ClassReader("wheel.asm.ClassWriter");
ClassWriter classWriter = new ClassWriter(classReader, (-473));
classWriter.newClass("");
Test 39: 
ClassWriter classWriter = new ClassWriter(1222);
classWriter.newClassItem("InnerClasses");
Test 40: 
ClassWriter classWriter = new ClassWriter((-1529));
classWriter.index = (-1529);
classWriter.newField("U*", "U*", "U*");
Test 41: 
ClassWriter classWriter = new ClassWriter((-2359));
classWriter.index = (-2359);
classWriter.newNameType("n:qL!}%_J~7e\"A1", "i+-]B$CJy0pHe5trj");
Test 42: 
ClassWriter classWriter = new ClassWriter((-1517));
classWriter.index = (-69);
classWriter.newUTF8("{SNQj&?23#{i,er,");
Test 43: 
ClassWriter classWriter = new ClassWriter(7);
classWriter.newUTF8("org.apache.commons.io.filefilter.FalseFileFilter");
Test 44: 
ClassWriter classWriter = new ClassWriter((-752));
String[] stringArray = new String[2];
stringArray[0] = "";
stringArray[1] = "02^b!x|SK&er8N8[";
classWriter.visitMethod((-752), "02^b!x|SK&er8N8[", "", "02^b!x|SK&er8N8[", stringArray);
Test 45: 
ClassWriter classWriter = new ClassWriter((-940));
// Undeclared exception!
try { 
  classWriter.getCommonSuperClass("org.apache.commons.io.filefilter.AgeFileFilter", "[Xt9k:6&J |z");
  fail("Expecting exception: RuntimeException");

} catch(RuntimeException e) {
   //
   // java.lang.ClassNotFoundException: [Xt9k:6&J |z
   //
   verifyException("wheel.asm.ClassWriter", e);
}

Test 46: 
ClassWriter classWriter = new ClassWriter(33554432);
classWriter.addType("org.apache.commons.io.filefilter.TrueFileFilter");
classWriter.addUninitializedType("", 33554432);
classWriter.addUninitializedType("", 2);
// Undeclared exception!
try { 
  classWriter.getMergedType(3, 1);
  fail("Expecting exception: RuntimeException");

} catch(RuntimeException e) {
   //
   // java.lang.ClassNotFoundException: 
   //
   verifyException("wheel.asm.ClassWriter", e);
}

Test 47: 
String[] stringArray = new String[3];

Test 48: 

Test 49: 
String[] stringArray = new String[6];
MethodWriter methodWriter = new MethodWriter((ClassWriter) 3, (int) "Qx)*T/G_6` )", "Qx)*T/G_6` )", "", (String) stringArray, (String[]) true, false, false);

Test 50: 

Test 51: 
Attribute attribute = new Attribute("YL4c9z q[='mygML");
byte[] byteArray = new byte[3];

Test 52: 
Character character = new Character('Z');

Test 53: 
Item[] itemArray = new Item[9];

Test 54: 

Test 55: 
int _int = 221;
ClassWriter classWriter = new ClassWriter(221);
((ClassWriter)221).newDouble(2018);
int _int = 2023;
((ClassWriter) _int).newDouble(_int);

Test 56: 
Item[] itemArray = new Item[1];

Test 57: 

Test 58: 

Test 59: 
ClassWriter classWriter = new ClassWriter(7);
((ClassWriter)7).newUTF8("com.example.filefilter.FalseFileFilter");

Test 60: 
String[] stringArray = new String[2];


* Minimizing test suite
* test suite isTestSuite: 47
Test 0: 
ClassWriter classWriter = new ClassWriter((-1502));
classWriter.newField("JSR/RET are not supported with computeFrames option", "JSR/RET are not supported with computeFrames option", "JSR/RET are not supported with computeFrames option");
classWriter.newMethodItem("JSR/RET are not supported with computeFrames option", "JSR/RET are not supported with computeFrames option", "JSR/RET are not supported with computeFrames option", true);
Test 1: 
ClassReader classReader = new ClassReader("org.apache.commons.io.filefilter.FalseFileFilter");
ClassWriter classWriter = new ClassWriter(classReader, (-484));
classWriter.newConstItem("org.apache.commons.io.filefilter.FalseFileFilter");
Test 2: 
ClassWriter classWriter = new ClassWriter(27);
classWriter.newMethod("$xcH8'RasE_8i", "$xcH8'RasE_8i", "zM8Q^-<D}'1!_", false);
Test 3: 
ClassWriter classWriter = new ClassWriter(0);
classWriter.visitEnd();
Test 4: 
ClassWriter classWriter = new ClassWriter((-2192));
classWriter.newConst("/D");
classWriter.visitField((-737), "/D", "/D", "/D", "/D");
Test 5: 
ClassWriter classWriter = new ClassWriter((-5007));
classWriter.visit(4, (-1320), "", (String) null, "yl]/B)oCC", (String[]) null);
Test 6: 
ClassWriter classWriter = new ClassWriter(0);
classWriter.visit(3376, (-2371), "", "The array of prefixes must not be null", (String) null, (String[]) null);
Test 7: 
ClassWriter classWriter = new ClassWriter(16777221);
String[] stringArray = new String[0];
classWriter.visit(16777221, 1122, "", "[cl\"?YvUe{=\"b>XqbA", "[cl\"?YvUe{=\"b>XqbA", stringArray);
Test 8: 
ClassWriter classWriter = new ClassWriter(193);
classWriter.visitSource((String) null, (String) null);
Test 9: 
ClassWriter classWriter = new ClassWriter(8);
classWriter.visitSource("-HA7$2t= lb+M", "org.apache.commons.io.filefilter.SizeFileFilter");
classWriter.toByteArray();
Test 10: 
ClassWriter classWriter = new ClassWriter(0);
classWriter.visitOuterClass("/)nZoQI$6{[>,$6~", (String) null, (String) null);
Test 11: 
ClassWriter classWriter = new ClassWriter(0);
classWriter.visitOuterClass("", "wH[g9PKXmf`s,dh=+~", (String) null);
Test 12: 
ClassWriter classWriter = new ClassWriter(592);
classWriter.visitOuterClass("%/xFdFS3d'dq)L-", "%/xFdFS3d'dq)L-", "%/xFdFS3d'dq)L-");
classWriter.toByteArray();
Test 13: 
ClassWriter classWriter = new ClassWriter(360);
classWriter.visitAnnotation("", false);
classWriter.toByteArray();
Test 14: 
ClassWriter classWriter = new ClassWriter(27);
classWriter.visitAnnotation("", true);
classWriter.toByteArray();
Test 15: 
ClassWriter classWriter = new ClassWriter(0);
classWriter.visitInnerClass("E", "E", "E", 972);
classWriter.visitInnerClass((String) null, (String) null, "E", 972);
Test 16: 
ClassWriter classWriter = new ClassWriter(1433);
classWriter.visitInnerClass((String) null, (String) null, (String) null, 1433);
Test 17: 
ClassWriter classWriter = new ClassWriter(32);
classWriter.visitField(202, "l", "l", "SourceDebugExtension", "l");
classWriter.toByteArray();
Test 18: 
ClassWriter classWriter = new ClassWriter(7);
String[] stringArray = new String[6];
stringArray[0] = "";
stringArray[1] = "";
stringArray[2] = "Qx)*T/G_6` )";
stringArray[3] = "";
stringArray[4] = "Qx)*T/G_6` )";
stringArray[5] = "";
MethodWriter methodWriter = new MethodWriter(classWriter, 3, "Qx)*T/G_6` )", "Qx)*T/G_6` )", "", stringArray, true, false);
classWriter.toByteArray();
Test 19: 
ClassWriter classWriter = new ClassWriter(1433);
classWriter.visitInnerClass("", "", "", 26);
classWriter.toByteArray();
Test 20: 
ClassWriter classWriter = new ClassWriter(220);
Attribute attribute = new Attribute("YL4c9z q[='mygML");
byte[] byteArray = new byte[3];
attribute.value = byteArray;
classWriter.visitAttribute(attribute);
classWriter.toByteArray();
Test 21: 
ClassWriter classWriter = new ClassWriter((-1502));
classWriter.invalidFrames = true;
// Undeclared exception!
try { 
  classWriter.toByteArray();
  fail("Expecting exception: ArrayIndexOutOfBoundsException");

} catch(ArrayIndexOutOfBoundsException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 22: 
ClassWriter classWriter = new ClassWriter(1566);
Character character = new Character('Q');
classWriter.newConst(character);
Test 23: 
ClassWriter classWriter = new ClassWriter((-2527));
Item[] itemArray = new Item[9];
// Undeclared exception!
try { 
  classWriter.newConstItem(itemArray[0]);
  fail("Expecting exception: IllegalArgumentException");

} catch(IllegalArgumentException e) {
   //
   // value null
   //
   verifyException("wheel.asm.ClassWriter", e);
}

Test 24: 
ClassWriter classWriter = new ClassWriter((-2527));
classWriter.newFieldItem("", "", "");
classWriter.newFieldItem("", "", "");
Test 25: 
ClassWriter classWriter = new ClassWriter(185);
classWriter.newMethodItem("SourceFile", "SourceFile", "SourceFile", true);
classWriter.newMethodItem("SourceFile", "SourceFile", "SourceFile", true);
Test 26: 
ClassWriter classWriter = new ClassWriter(12);
classWriter.newInteger(12);
classWriter.newInteger(12);
Test 27: 
ClassWriter classWriter = new ClassWriter(12);
classWriter.newFloat(12);
classWriter.newFloat(12);
Test 28: 
ClassWriter classWriter = new ClassWriter(7);
classWriter.newLong(7);
classWriter.newLong(7);
Test 29: 
ClassWriter classWriter = new ClassWriter(221);
classWriter.newDouble(221);
classWriter.newDouble(221);
Test 30: 
ClassWriter classWriter = new ClassWriter(27);
classWriter.addType("$xcH8'RasE_8i");
classWriter.addType("$xcH8'RasE_8i");
Test 31: 
ClassWriter classWriter = new ClassWriter((-58));
classWriter.addUninitializedType("", (-1));
classWriter.addUninitializedType("", (-1));
Test 32: 
ClassWriter classWriter = new ClassWriter(7);
Item[] itemArray = new Item[1];
classWriter.typeTable = itemArray;
classWriter.addType("wheel.asm.ClassAdapter");
Test 33: 
ClassWriter classWriter = new ClassWriter((-940));
classWriter.getCommonSuperClass("wheel.asm.Attribute", "wheel.asm.Label");
Test 34: 
ClassWriter classWriter = new ClassWriter(7);
classWriter.getCommonSuperClass("org.apache.commons.io.filefilter.FalseFileFilter", "org.apache.commons.io.filefilter.FalseFileFilter");
Test 35: 
ClassWriter classWriter = new ClassWriter(198);
classWriter.getCommonSuperClass("wheel.asm.Label", "java/lang/Object");
Test 36: 
ClassWriter classWriter = new ClassWriter(256);
classWriter.newNameType("DWRUm37bm/O!^7Z{'NQ", "DWRUm37bm/O!^7Z{'NQ");
classWriter.newNameType("DWRUm37bm/O!^7Z{'NQ", "DWRUm37bm/O!^7Z{'NQ");
Test 37: 
ClassReader classReader = new ClassReader("wheel.asm.ClassWriter");
ClassWriter classWriter = new ClassWriter(classReader, (-473));
classWriter.newClass("");
Test 38: 
ClassWriter classWriter = new ClassWriter(1222);
classWriter.newClassItem("InnerClasses");
Test 39: 
ClassWriter classWriter = new ClassWriter((-1529));
classWriter.index = (-1529);
classWriter.newField("U*", "U*", "U*");
Test 40: 
ClassWriter classWriter = new ClassWriter((-2359));
classWriter.index = (-2359);
classWriter.newNameType("n:qL!}%_J~7e\"A1", "i+-]B$CJy0pHe5trj");
Test 41: 
ClassWriter classWriter = new ClassWriter((-1517));
classWriter.index = (-69);
classWriter.newUTF8("{SNQj&?23#{i,er,");
Test 42: 
ClassWriter classWriter = new ClassWriter(7);
classWriter.newUTF8("org.apache.commons.io.filefilter.FalseFileFilter");
Test 43: 
ClassWriter classWriter = new ClassWriter((-752));
String[] stringArray = new String[2];
stringArray[0] = "";
stringArray[1] = "02^b!x|SK&er8N8[";
classWriter.visitMethod((-752), "02^b!x|SK&er8N8[", "", "02^b!x|SK&er8N8[", stringArray);
Test 44: 
ClassWriter classWriter = new ClassWriter((-940));
// Undeclared exception!
try { 
  classWriter.getCommonSuperClass("org.apache.commons.io.filefilter.AgeFileFilter", "[Xt9k:6&J |z");
  fail("Expecting exception: RuntimeException");

} catch(RuntimeException e) {
   //
   // java.lang.ClassNotFoundException: [Xt9k:6&J |z
   //
   verifyException("wheel.asm.ClassWriter", e);
}

Test 45: 
ClassWriter classWriter = new ClassWriter(33554432);
classWriter.addType("org.apache.commons.io.filefilter.TrueFileFilter");
classWriter.addUninitializedType("", 33554432);
classWriter.addUninitializedType("", 2);
// Undeclared exception!
try { 
  classWriter.getMergedType(3, 1);
  fail("Expecting exception: RuntimeException");

} catch(RuntimeException e) {
   //
   // java.lang.ClassNotFoundException: 
   //
   verifyException("wheel.asm.ClassWriter", e);
}

Test 46: 
ClassWriter classWriter = new ClassWriter((-1502));
String[] stringArray = new String[3];
stringArray[0] = "wheel.asm.ClassAdapter";
stringArray[1] = "";
stringArray[2] = "";
classWriter.visit(3221, 15, "", "", "wheel.asm.ClassAdapter", stringArray);
classWriter.invalidFrames = true;
classWriter.toByteArray();

* Going to analyze the coverage criteria
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 86%
* Total number of goals: 174
* Number of covered goals: 150
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 92%
* Total number of goals: 345
* Number of covered goals: 317
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 44%
* Total number of goals: 55
* Number of covered goals: 24
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 30
* Number of covered goals: 30
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 86%
* Total number of goals: 174
* Number of covered goals: 150
* Generated 47 tests with total length 147
* Resulting test suite's coverage: 82% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 14%
* Compiling and checking tests
Going to execute: removeTestsThatDoNotCompile
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: ClassWriter classWriter = new ClassWriter((-1502));
classWriter.newField("JSR/RET are not supported with computeFrames option", "JSR/RET are not supported with computeFrames option", "JSR/RET are not supported with computeFrames option");
Item newMethodItem = classWriter.newMethodItem("JSR/RET are not supported with computeFrames option", "JSR/RET are not supported with computeFrames option", "JSR/RET are not supported with computeFrames option", true);
assertNotNull(newMethodItem);


** It was a parseable test case! 
refined test name is: testCreateMethodItemWithComputeFramesOption
* Compiling Tests
refined test name is: testCreateNewFieldWithCorrectParameters
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: ClassReader arg0 = new ClassReader("org.apache.commons.io.filefilter.FalseFileFilter");
ClassWriter classWriter = new ClassWriter(arg0, (-484));
Item newConstItem = classWriter.newConstItem("org.apache.commons.io.filefilter.FalseFileFilter");
assertNotNull(newConstItem);


** It was a parseable test case! 
refined test name is: testNewConstItemWithSameClassName
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: ClassWriter classWriter = new ClassWriter(27);
int newMethod = classWriter.newMethod("$xcH8'RasE_8i", "$xcH8'RasE_8i", "zM8Q^-<D}'1!_", false);
assertEquals(5, newMethod);


** It was a parseable test case! 
refined test name is: testCreateNewMethodWithValidArguments
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: ClassWriter classWriter = new ClassWriter(0);
classWriter.visitEnd();
assertEquals(2, ClassWriter.COMPUTE_FRAMES);


** It was a parseable test case! 
refined test name is: testComputeFrames
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: ClassWriter classWriter = new ClassWriter((-2192));
classWriter.newConst("/D");
FieldVisitor visitField = classWriter.visitField((-737), "/D", "/D", "/D", "/D");
assertNotNull(visitField);


** It was a parseable test case! 
refined test name is: testNewConstant
* Compiling Tests
refined test name is: testVisitFieldWithValidField
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: ClassWriter classWriter = new ClassWriter((-5007));
classWriter.visit(4, (-1320), "", (String) null, "yl]/B)oCC", (String[]) null);
assertEquals(2, ClassWriter.COMPUTE_FRAMES);


** It was a parseable test case! 
refined test name is: testClassWriterVisitComputeFramesWithArgumentTwo
* Compiling Tests
refined test name is: testClassWriterVisitComputesFrames
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: ClassWriter classWriter = new ClassWriter(0);
classWriter.visit(3376, (-2371), "", "The array of prefixes must not be null", (String) null, (String[]) null);
assertEquals(2, ClassWriter.COMPUTE_FRAMES);


** It was a parseable test case! 
refined test name is: testMethodWithNullPrefixArray
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: ClassWriter classWriter = new ClassWriter(16777221);
String[] arg5 = new String[0];
classWriter.visit(16777221, 1122, "", "[cl\"?YvUe{=\"b>XqbA", "[cl\"?YvUe{=\"b>XqbA", arg5);
assertEquals(0, arg5.length);


** It was a parseable test case! 
refined test name is: testVisitClassAndMembersEmptyArray
source code formatter error: 40:2: error: class, interface, or enum expected testCode is: /*
 * This file was automatically generated by UTestGen and EvoSuite
 * Tue Mar 12 20:53:35 GMT 2024
 */

package wheel.asm;

import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;
import org.junit.jupiter.api.Timeout;
import java.util.concurrent.TimeUnit;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import wheel.asm.ClassWriter;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class ClassWriter_18_tmp__ESTest extends ClassWriter_18_tmp__ESTest_scaffolding {

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void testVisitClassAndMembersEmptyArray() throws Throwable  {
      // Define the name of the class and its version number
      String className = "MyTestClass";
      int versionNumber = 1122;
      
      // Define the signature and access flags for the class
      String signature = "[cl\"?YvUe{=\"b>XqbA";
      int accessFlags = 16777221;
      
      // Create a new String array with no elements
      String[] arg5 = new String[0];
      
      // Visit the class and its members using the ClassWriter instance
      classWriter.visit(versionNumber, accessFlags, className, signature, signature, arg5);
      
      // Assert that the length of the String array is 0
      assertEquals(0, arg5.length);}
  }
}

* Compiling Tests
refined test name is: testCreateNewInstanceWithEmptyStringArray
source code formatter error: 40:2: error: class, interface, or enum expected testCode is: /*
 * This file was automatically generated by UTestGen and EvoSuite
 * Tue Mar 12 20:54:34 GMT 2024
 */

package wheel.asm;

import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;
import org.junit.jupiter.api.Timeout;
import java.util.concurrent.TimeUnit;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import wheel.asm.ClassWriter;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class ClassWriter_19_tmp__ESTest extends ClassWriter_19_tmp__ESTest_scaffolding {

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void testCreateNewInstanceWithEmptyStringArray() throws Throwable  {
      // Define the name of the class and its version number
      String className = "MyTestClass";
      int versionNumber = 1122;
      
      // Define the signature and access flags for the class
      String signature = "[cl\"?YvUe{=\"b>XqbA";
      int accessFlags = 16777221;
      
      // Create a new String array with no elements
      String[] arg5 = new String[0];
      
      // Visit the class and its members using the ClassWriter instance
      classWriter.visit(versionNumber, accessFlags, className, signature, signature, arg5);
      
      // Assert that the length of the String array is 0
      assertEquals(0, arg5.length);}
  }
}

* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: ClassWriter classWriter = new ClassWriter(193);
classWriter.visitSource((String) null, (String) null);
assertEquals(2, ClassWriter.COMPUTE_FRAMES);


** It was a parseable test case! 
refined test name is: testVisitSourceNullValues
* Compiling Tests
refined test name is: testVisitSourceWithNullNameAndDebugInfo
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: ClassWriter classWriter = new ClassWriter(8);
classWriter.visitSource("-HA7$2t= lb+M", "org.apache.commons.io.filefilter.SizeFileFilter");
byte[] byteArray = classWriter.toByteArray();
assertEquals(137, byteArray.length);


** It was a parseable test case! 
refined test name is: testCompileFileFilter
* Compiling Tests
refined test name is: testSizeFileFilterCompilesToValidClassFile
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: ClassWriter classWriter = new ClassWriter(0);
classWriter.visitOuterClass("/)nZoQI$6{[>,$6~", (String) null, (String) null);
assertEquals(1, ClassWriter.COMPUTE_MAXS);


** It was a parseable test case! 
refined test name is: testVisitOuterClassWithNullInnerClasses
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: ClassWriter classWriter = new ClassWriter(0);
classWriter.visitOuterClass("", "wH[g9PKXmf`s,dh=+~", (String) null);
assertEquals(1, ClassWriter.COMPUTE_MAXS);


** It was a parseable test case! 
refined test name is: testMaxStackSizeComputedCorrectly
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: ClassWriter classWriter = new ClassWriter(592);
classWriter.visitOuterClass("%/xFdFS3d'dq)L-", "%/xFdFS3d'dq)L-", "%/xFdFS3d'dq)L-");
byte[] byteArray = classWriter.toByteArray();
assertEquals(78, byteArray.length);


** It was a parseable test case! 
refined test name is: testVisitOuterClass
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: ClassWriter classWriter = new ClassWriter(360);
classWriter.visitAnnotation("", false);
byte[] byteArray = classWriter.toByteArray();
assertEquals(69, byteArray.length);


** It was a parseable test case! 
refined test name is: testClassWriterToByteArrayLength
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: ClassWriter classWriter = new ClassWriter(27);
classWriter.visitAnnotation("", true);
byte[] byteArray = classWriter.toByteArray();
assertEquals(67, byteArray.length);


** It was a parseable test case! 
refined test name is: testClassWriterOutputLengthIsCorrect
* Compiling Tests
refined test name is: testWriteByteArrayToClass
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: ClassWriter classWriter = new ClassWriter(0);
classWriter.visitInnerClass("E", "E", "E", 972);
classWriter.visitInnerClass((String) null, (String) null, "E", 972);
assertEquals(1, ClassWriter.COMPUTE_MAXS);


** It was a parseable test case! 
refined test name is: testVisitInnerClass
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: ClassWriter classWriter = new ClassWriter(1433);
classWriter.visitInnerClass((String) null, (String) null, (String) null, 1433);
assertEquals(1, ClassWriter.COMPUTE_MAXS);


** It was a parseable test case! 
refined test name is: testGetClassNameReturnsCorrectString
* Compiling Tests
refined test name is: testGetClassName
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: ClassWriter classWriter = new ClassWriter(32);
classWriter.visitField(202, "l", "l", "SourceDebugExtension", "l");
byte[] byteArray = classWriter.toByteArray();
assertEquals(106, byteArray.length);


** It was a parseable test case! 
refined test name is: testVisitFieldaddsValidFieldToClassWriter
* Compiling Tests
refined test name is: testFieldDefinition
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: ClassWriter arg0 = new ClassWriter(7);
String[] arg5 = new String[6];
arg5[0] = "";
arg5[1] = "";
arg5[2] = "Qx)*T/G_6` )";
arg5[3] = "";
arg5[4] = "Qx)*T/G_6` )";
arg5[5] = "";
MethodWriter methodWriter = new MethodWriter(arg0, 3, "Qx)*T/G_6` )", "Qx)*T/G_6` )", "", arg5, true, false);
byte[] byteArray = arg0.toByteArray();
assertEquals(109, byteArray.length);


** It was a parseable test case! 
refined test name is: testMethodWriterShouldWriteExpectedNumberOfBytes
* Compiling Tests
refined test name is: testMethodWriterWritesExpectedBytes
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: ClassWriter classWriter = new ClassWriter(1433);
classWriter.visitInnerClass("", "", "", 26);
byte[] byteArray = classWriter.toByteArray();
assertEquals(61, byteArray.length);


** It was a parseable test case! 
refined test name is: testClassWriterLength
* Compiling Tests
refined test name is: testClassFileLengthIsAsExpected
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: ClassWriter classWriter = new ClassWriter((-1502));
classWriter.invalidFrames = true;
// Undeclared exception!
try { 
  classWriter.toByteArray();
  fail("Expecting exception: ArrayIndexOutOfBoundsException");

} catch(ArrayIndexOutOfBoundsException e) {
   //
   // 51966
   //
   verifyException("wheel.asm.ClassReader", e);
}


** It was a parseable test case! 
refined test name is: testToByteArrayWithNegativeArgumentThrowsException
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: ClassWriter classWriter = new ClassWriter(1566);
Character arg0 = new Character('Q');
int newConst = classWriter.newConst(arg0);
assertEquals(1, newConst);


** It was a parseable test case! 
refined test name is: testNewConstReturnsCorrectIndex
* Compiling Tests
refined test name is: testNewConstReturnsCorrectIndexOfCreatedConstant
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: ClassWriter classWriter = new ClassWriter((-2527));
Item[] itemArray = new Item[9];
// Undeclared exception!
try { 
  classWriter.newConstItem(itemArray[0]);
  fail("Expecting exception: IllegalArgumentException");

} catch(IllegalArgumentException e) {
   //
   // value null
   //
   verifyException("wheel.asm.ClassWriter", e);
}


** It was a parseable test case! 
refined test name is: testNewConstItemWithNullValue
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: ClassWriter classWriter = new ClassWriter(27);
classWriter.addType("$xcH8'RasE_8i");
int addType = classWriter.addType("$xcH8'RasE_8i");
assertEquals(1, addType);


** It was a parseable test case! 
refined test name is: testAddTypeSuccessfully
* Compiling Tests
refined test name is: testAddType
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: ClassWriter classWriter = new ClassWriter((-58));
classWriter.addUninitializedType("", (-1));
int addUninitializedType = classWriter.addUninitializedType("", (-1));
assertEquals(1, addUninitializedType);


** It was a parseable test case! 
refined test name is: testAddUninitializedTypeValidIndexReturnsOne
* Compiling Tests
refined test name is: testAddUninitializedTypeWithNegativeIndex
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: ClassWriter classWriter = new ClassWriter(7);
Item[] itemArray = new Item[1];
classWriter.typeTable = itemArray;
int addType = classWriter.addType("wheel.asm.ClassAdapter");
assertEquals(1, addType);


** It was a parseable test case! 
refined test name is: testAddTypeMethodWithValidInputReturnsOne
* Compiling Tests
refined test name is: testAddTypeReturnsOneWhenTypeIsAddedSuccessfully
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: ClassWriter classWriter = new ClassWriter((-940));
String commonSuperClass = classWriter.getCommonSuperClass("wheel.asm.Attribute", "wheel.asm.Label");
assertEquals("java/lang/Object", commonSuperClass);


** It was a parseable test case! 
refined test name is: testGetCommonSuperClass
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: ClassWriter classWriter = new ClassWriter(7);
String commonSuperClass = classWriter.getCommonSuperClass("org.apache.commons.io.filefilter.FalseFileFilter", "org.apache.commons.io.filefilter.FalseFileFilter");
assertEquals("org.apache.commons.io.filefilter.FalseFileFilter", commonSuperClass);


** It was a parseable test case! 
refined test name is: testGetCommonSuperClassForFalseFileFilters
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: ClassWriter classWriter = new ClassWriter(198);
String commonSuperClass = classWriter.getCommonSuperClass("wheel.asm.Label", "java/lang/Object");
assertNotNull(commonSuperClass);
assertEquals("java/lang/Object", commonSuperClass);


** It was a parseable test case! 
refined test name is: testGetCommonSuperClass
* Compiling Tests
refined test name is: testGetCommonSuperClassLabelAndObjectReturnsObject
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: ClassWriter classWriter = new ClassWriter(256);
classWriter.newNameType("DWRUm37bm/O!^7Z{'NQ", "DWRUm37bm/O!^7Z{'NQ");
int newNameType = classWriter.newNameType("DWRUm37bm/O!^7Z{'NQ", "DWRUm37bm/O!^7Z{'NQ");
assertEquals(2, newNameType);


** It was a parseable test case! 
refined test name is: testNewNameTypeShouldReturnUniqueIntegerValue
* Compiling Tests
refined test name is: testNewNameTypeWithValidInputs
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: ClassReader arg0 = new ClassReader("wheel.asm.ClassWriter");
ClassWriter classWriter = new ClassWriter(arg0, (-473));
int newClass = classWriter.newClass("");
assertEquals(641, newClass);


** It was a parseable test case! 
refined test name is: testNewClassMethodReturnsCorrectValue
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: ClassWriter classWriter = new ClassWriter(1222);
Item newClassItem = classWriter.newClassItem("InnerClasses");
assertNotNull(newClassItem);


** It was a parseable test case! 
refined test name is: testCreateNewClassItemShouldNotBeNull
* Compiling Tests
refined test name is: testNewClassItemShouldNotBeNull
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: ClassWriter classWriter = new ClassWriter((-1529));
classWriter.index = (-1529);
int newField = classWriter.newField("U*", "U*", "U*");
assertEquals((-1526), newField);


** It was a parseable test case! 
refined test name is: testNewFieldNegativeIndex
* Compiling Tests
refined test name is: testCreateNewFieldWithNegativeIndex
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: ClassWriter classWriter = new ClassWriter((-2359));
classWriter.index = (-2359);
int newNameType = classWriter.newNameType("n:qL!}%_J~7e\"A1", "i+-]B$CJy0pHe5trj");
assertEquals((-2357), newNameType);


** It was a parseable test case! 
refined test name is: testNewNameTypeWithValidInput
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: ClassWriter classWriter = new ClassWriter((-1517));
classWriter.index = (-69);
int newUTF8 = classWriter.newUTF8("{SNQj&?23#{i,er,");
assertEquals((-69), newUTF8);


** It was a parseable test case! 
refined test name is: testNewUTF8WithInvalidCharacter
* Compiling Tests
refined test name is: testNewUTF8WithInvalidCharacters
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: ClassWriter classWriter = new ClassWriter(7);
int newUTF8 = classWriter.newUTF8("org.apache.commons.io.filefilter.FalseFileFilter");
assertEquals(1, newUTF8);


** It was a parseable test case! 
refined test name is: testNewUTF8AddsStringToConstantPoolAndReturnsIndex
* Compiling Tests
refined test name is: testNewUTF8StringAddedToConstantPool
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: ClassWriter classWriter = new ClassWriter((-752));
String[] arg4 = new String[2];
arg4[0] = "";
arg4[1] = "02^b!x|SK&er8N8[";
MethodVisitor visitMethod = classWriter.visitMethod((-752), "02^b!x|SK&er8N8[", "", "02^b!x|SK&er8N8[", arg4);
assertNotNull(visitMethod);


** It was a parseable test case! 
refined test name is: testVisitMethodReturnsNonNullMethodVisitor
* Compiling Tests
refined test name is: testVisitMethodReturnsNonNullMethodVisitorObject
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: ClassWriter classWriter = new ClassWriter((-940));
// Undeclared exception!
try { 
  classWriter.getCommonSuperClass("org.apache.commons.io.filefilter.AgeFileFilter", "[Xt9k:6&J |z");
  fail("Expecting exception: RuntimeException");

} catch(RuntimeException e) {
   //
   // java.lang.ClassNotFoundException: [Xt9k:6&J |z
   //
   verifyException("wheel.asm.ClassWriter", e);
}


** It was a parseable test case! 
refined test name is: testGetCommonSuperClassInvalidClasses
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: ClassWriter classWriter = new ClassWriter(33554432);
classWriter.addType("org.apache.commons.io.filefilter.TrueFileFilter");
classWriter.addUninitializedType("", 33554432);
classWriter.addUninitializedType("", 2);
// Undeclared exception!
try { 
  classWriter.getMergedType(3, 1);
  fail("Expecting exception: RuntimeException");

} catch(RuntimeException e) {
   //
   // java.lang.ClassNotFoundException: 
   //
   verifyException("wheel.asm.ClassWriter", e);
}


** It was a parseable test case! 
refined test name is: testGetMergedTypethrowsExceptionWhenTypeNotFound
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: ClassWriter classWriter = new ClassWriter((-1502));
String[] arg5 = new String[3];
arg5[0] = "wheel.asm.ClassAdapter";
arg5[1] = "";
arg5[2] = "";
classWriter.visit(3221, 15, "", "", "wheel.asm.ClassAdapter", arg5);
classWriter.invalidFrames = true;
byte[] byteArray = classWriter.toByteArray();
assertEquals(84, byteArray.length);


** It was a parseable test case! 
refined test name is: testClassWriterInvalidFrames
* Compiling Tests
refined test name is: testClassWriterVisitWithInvalidData
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 21:33:02.430 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/tmp/EvoSuite_pathingJar6253038583986324065.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 21:33:02.464 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar6253038583986324065.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 21:33:02.549 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/tmp/EvoSuite_pathingJar6253038583986324065.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 21:33:02.551 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar6253038583986324065.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 21:33:02.616 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/tmp/EvoSuite_pathingJar6253038583986324065.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 21:33:02.617 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar6253038583986324065.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 21:33:02.711 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/tmp/EvoSuite_pathingJar6253038583986324065.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 21:33:02.713 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar6253038583986324065.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 21:33:02.770 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/tmp/EvoSuite_pathingJar6253038583986324065.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 21:33:02.772 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar6253038583986324065.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 21:33:02.824 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/tmp/EvoSuite_pathingJar6253038583986324065.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 21:33:02.826 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar6253038583986324065.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 21:33:02.898 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/tmp/EvoSuite_pathingJar6253038583986324065.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 21:33:02.900 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar6253038583986324065.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 21:33:02.972 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/tmp/EvoSuite_pathingJar6253038583986324065.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 21:33:02.973 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar6253038583986324065.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 21:33:03.045 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/tmp/EvoSuite_pathingJar6253038583986324065.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 21:33:03.047 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar6253038583986324065.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 21:33:03.138 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/tmp/EvoSuite_pathingJar6253038583986324065.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 21:33:03.141 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar6253038583986324065.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 21:33:03.234 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/tmp/EvoSuite_pathingJar6253038583986324065.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 21:33:03.236 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar6253038583986324065.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 21:33:03.323 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/tmp/EvoSuite_pathingJar6253038583986324065.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 21:33:03.325 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar6253038583986324065.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 21:33:03.405 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/tmp/EvoSuite_pathingJar6253038583986324065.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 21:33:03.407 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar6253038583986324065.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 21:33:03.484 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/tmp/EvoSuite_pathingJar6253038583986324065.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 21:33:03.486 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar6253038583986324065.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 21:33:03.558 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/tmp/EvoSuite_pathingJar6253038583986324065.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 21:33:03.560 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar6253038583986324065.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 21:33:03.661 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/tmp/EvoSuite_pathingJar6253038583986324065.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 21:33:03.663 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar6253038583986324065.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 21:33:03.756 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/tmp/EvoSuite_pathingJar6253038583986324065.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 21:33:03.757 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar6253038583986324065.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 21:33:03.986 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/tmp/EvoSuite_pathingJar6253038583986324065.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 21:33:03.987 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar6253038583986324065.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 21:33:04.196 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/tmp/EvoSuite_pathingJar6253038583986324065.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 21:33:04.198 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar6253038583986324065.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 21:33:04.318 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/tmp/EvoSuite_pathingJar6253038583986324065.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 21:33:04.320 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar6253038583986324065.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 21:33:04.400 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/tmp/EvoSuite_pathingJar6253038583986324065.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 21:33:04.401 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar6253038583986324065.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 21:33:04.511 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/tmp/EvoSuite_pathingJar6253038583986324065.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 21:33:04.515 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar6253038583986324065.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 21:33:04.605 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/tmp/EvoSuite_pathingJar6253038583986324065.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 21:33:04.606 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar6253038583986324065.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 21:33:04.656 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/tmp/EvoSuite_pathingJar6253038583986324065.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 21:33:04.657 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar6253038583986324065.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 21:33:04.785 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/tmp/EvoSuite_pathingJar6253038583986324065.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 21:33:04.787 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar6253038583986324065.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 21:33:04.956 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/tmp/EvoSuite_pathingJar6253038583986324065.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 21:33:04.958 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar6253038583986324065.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 21:33:05.049 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/tmp/EvoSuite_pathingJar6253038583986324065.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 21:33:05.050 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar6253038583986324065.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 21:33:05.232 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/tmp/EvoSuite_pathingJar6253038583986324065.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 21:33:05.238 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar6253038583986324065.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 21:33:05.345 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/tmp/EvoSuite_pathingJar6253038583986324065.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 21:33:05.347 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar6253038583986324065.jar
[MASTER] 21:33:05.415 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/tmp/EvoSuite_pathingJar6253038583986324065.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 21:33:05.416 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar6253038583986324065.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 21:33:05.687 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/tmp/EvoSuite_pathingJar6253038583986324065.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 21:33:05.688 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar6253038583986324065.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 21:33:05.866 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/tmp/EvoSuite_pathingJar6253038583986324065.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 21:33:05.868 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar6253038583986324065.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 21:33:05.954 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/tmp/EvoSuite_pathingJar6253038583986324065.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 21:33:05.954 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar6253038583986324065.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 21:33:06.049 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/tmp/EvoSuite_pathingJar6253038583986324065.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 21:33:06.049 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar6253038583986324065.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 21:33:06.129 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/tmp/EvoSuite_pathingJar6253038583986324065.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 21:33:06.130 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar6253038583986324065.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
Going to execute: handleTestsThatAreUnstable
[MASTER] 21:33:06.170 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/tmp/EvoSuite_pathingJar6253038583986324065.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 21:33:06.171 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar6253038583986324065.jar
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 21:33:06.230 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/tmp/EvoSuite_pathingJar6253038583986324065.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
[MASTER] 21:33:06.230 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar6253038583986324065.jar
* Compiling Tests
[MASTER] 21:33:06.274 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/tmp/EvoSuite_pathingJar6253038583986324065.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 21:33:06.275 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar6253038583986324065.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 21:33:06.317 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/tmp/EvoSuite_pathingJar6253038583986324065.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 21:33:06.320 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar6253038583986324065.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
Going to execute: handleTestsThatAreUnstable
[MASTER] 21:33:06.487 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/tmp/EvoSuite_pathingJar6253038583986324065.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 21:33:06.491 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar6253038583986324065.jar
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
** Write a test suite: 4 called: 1 to improve: false
** Write a test suite: 5 called: 2 to improve: false
** Write a test suite: 7 called: 3 to improve: false
** Write a test suite: 8 called: 4 to improve: false
** Write a test suite: 9 called: 5 to improve: false
** Write a test suite: 14 called: 6 to improve: false
** Write a test suite: 16 called: 7 to improve: false
** Write a test suite: 17 called: 8 to improve: false
** Write a test suite: 18 called: 9 to improve: false
** Write a test suite: 19 called: 10 to improve: false
** Write a test suite: 21 called: 11 to improve: false
** Write a test suite: 23 called: 12 to improve: false
** Write a test suite: 24 called: 13 to improve: false
** Write a test suite: 25 called: 14 to improve: false
** Write a test suite: 28 called: 15 to improve: false
** Write a test suite: 29 called: 16 to improve: false
** Write a test suite: 31 called: 17 to improve: false
** Write a test suite: 32 called: 18 to improve: false
** Write a test suite: 34 called: 19 to improve: false
** Write a test suite: 35 called: 20 to improve: false
** Write a test suite: 36 called: 21 to improve: false
** Write a test suite: 39 called: 22 to improve: false
[MASTER] 21:33:07.190 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/tmp/EvoSuite_pathingJar6253038583986324065.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 21:33:07.191 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar6253038583986324065.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
** Write a test suite: 3 called: 1 to improve: false
** Write a test suite: 4 called: 2 to improve: false
** Write a test suite: 5 called: 3 to improve: false
** Write a test suite: 7 called: 4 to improve: false
** Write a test suite: 8 called: 5 to improve: false
** Write a test suite: 10 called: 6 to improve: false
** Write a test suite: 11 called: 7 to improve: false
** Write a test suite: 14 called: 8 to improve: false
** Write a test suite: 15 called: 9 to improve: false
** Write a test suite: 16 called: 10 to improve: false
** Write a test suite: 18 called: 11 to improve: false
** Write a test suite: 20 called: 12 to improve: false
** Write a test suite: 21 called: 13 to improve: false
** Write a test suite: 22 called: 14 to improve: false
** Write a test suite: 23 called: 15 to improve: false
** Write a test suite: 25 called: 16 to improve: false
** Write a test suite: 30 called: 17 to improve: false
** Write a test suite: 31 called: 18 to improve: false
** Write a test suite: 32 called: 19 to improve: false
** Write a test suite: 34 called: 20 to improve: false
** Write a test suite: 35 called: 21 to improve: false
** Write a test suite: 39 called: 22 to improve: false
[MASTER] 21:33:07.753 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/tmp/EvoSuite_pathingJar6253038583986324065.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 21:33:07.754 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar6253038583986324065.jar
[MASTER] 21:33:08.413 [logback-1] WARN  TimeController - Already entered in phase: INLINING. This will mess up the timing calculations.
* test suite isTestSuite: 47
Test 0: 
ClassWriter classWriter = new ClassWriter((-1502));
String[] stringArray = new String[3];
stringArray[0] = "wheel.asm.ClassAdapter";
stringArray[1] = "";
stringArray[2] = "";
classWriter.visit(3221, 15, "", "", "wheel.asm.ClassAdapter", stringArray);
classWriter.invalidFrames = true;
classWriter.toByteArray();
Test 1: 
ClassWriter classWriter = new ClassWriter((-2192));
classWriter.newConst("/D");
classWriter.visitField((-737), "/D", "/D", "/D", "/D");
Test 2: 
ClassWriter classWriter = new ClassWriter((-5007));
classWriter.visit(4, (-1320), "", (String) null, "yl]/B)oCC", (String[]) null);
Test 3: 
ClassWriter classWriter = new ClassWriter(0);
classWriter.visit(3376, (-2371), "", "The array of prefixes must not be null", (String) null, (String[]) null);
Test 4: 
ClassWriter classWriter = new ClassWriter(16777221);
String[] stringArray = new String[0];
classWriter.visit(16777221, 1122, "", "[cl\"?YvUe{=\"b>XqbA", "[cl\"?YvUe{=\"b>XqbA", stringArray);
Test 5: 
ClassWriter classWriter = new ClassWriter(193);
classWriter.visitSource((String) null, (String) null);
Test 6: 
ClassWriter classWriter = new ClassWriter(0);
classWriter.visitOuterClass("/)nZoQI$6{[>,$6~", (String) null, (String) null);
Test 7: 
ClassWriter classWriter = new ClassWriter(592);
classWriter.visitOuterClass("%/xFdFS3d'dq)L-", "%/xFdFS3d'dq)L-", "%/xFdFS3d'dq)L-");
classWriter.toByteArray();
Test 8: 
ClassWriter classWriter = new ClassWriter(0);
classWriter.visitOuterClass("", "wH[g9PKXmf`s,dh=+~", (String) null);
Test 9: 
ClassWriter classWriter = new ClassWriter(360);
classWriter.visitAnnotation("", false);
classWriter.toByteArray();
Test 10: 
ClassWriter classWriter = new ClassWriter(27);
classWriter.visitAnnotation("", true);
classWriter.toByteArray();
Test 11: 
ClassWriter classWriter = new ClassWriter(0);
classWriter.visitInnerClass("E", "E", "E", 972);
classWriter.visitInnerClass((String) null, (String) null, "E", 972);
Test 12: 
ClassWriter classWriter = new ClassWriter(1433);
classWriter.visitInnerClass((String) null, (String) null, (String) null, 1433);
Test 13: 
ClassWriter classWriter = new ClassWriter(32);
classWriter.visitField(202, "l", "l", "SourceDebugExtension", "l");
classWriter.toByteArray();
Test 14: 
ClassWriter classWriter = new ClassWriter(7);
String[] stringArray = new String[6];
stringArray[0] = "";
stringArray[1] = "";
stringArray[2] = "Qx)*T/G_6` )";
stringArray[3] = "";
stringArray[4] = "Qx)*T/G_6` )";
stringArray[5] = "";
MethodWriter methodWriter = new MethodWriter(classWriter, 3, "Qx)*T/G_6` )", "Qx)*T/G_6` )", "", stringArray, true, false);
classWriter.toByteArray();
Test 15: 
ClassWriter classWriter = new ClassWriter(8);
classWriter.visitSource("-HA7$2t= lb+M", "org.apache.commons.io.filefilter.SizeFileFilter");
classWriter.toByteArray();
Test 16: 
ClassWriter classWriter = new ClassWriter(1433);
classWriter.visitInnerClass("", "", "", 26);
classWriter.toByteArray();
Test 17: 
ClassWriter classWriter = new ClassWriter(220);
Attribute attribute = new Attribute("YL4c9z q[='mygML");
byte[] byteArray = new byte[3];
attribute.value = byteArray;
classWriter.visitAttribute(attribute);
classWriter.toByteArray();
Test 18: 
ClassWriter classWriter = new ClassWriter(1566);
Character character = new Character('Q');
classWriter.newConst(character);
Test 19: 
ClassWriter classWriter = new ClassWriter((-2527));
Item[] itemArray = new Item[9];
// Undeclared exception!
try { 
  classWriter.newConstItem(itemArray[0]);
  fail("Expecting exception: IllegalArgumentException");

} catch(IllegalArgumentException e) {
   //
   // value null
   //
   verifyException("wheel.asm.ClassWriter", e);
}

Test 20: 
ClassWriter classWriter = new ClassWriter(27);
classWriter.newMethod("$xcH8'RasE_8i", "$xcH8'RasE_8i", "zM8Q^-<D}'1!_", false);
Test 21: 
ClassWriter classWriter = new ClassWriter(185);
classWriter.newMethodItem("SourceFile", "SourceFile", "SourceFile", true);
classWriter.newMethodItem("SourceFile", "SourceFile", "SourceFile", true);
Test 22: 
ClassWriter classWriter = new ClassWriter(12);
classWriter.newInteger(12);
classWriter.newInteger(12);
Test 23: 
ClassWriter classWriter = new ClassWriter(12);
classWriter.newFloat(12);
classWriter.newFloat(12);
Test 24: 
ClassWriter classWriter = new ClassWriter(7);
classWriter.newLong(7);
classWriter.newLong(7);
Test 25: 
ClassWriter classWriter = new ClassWriter(221);
classWriter.newDouble(221);
classWriter.newDouble(221);
Test 26: 
ClassWriter classWriter = new ClassWriter((-1502));
classWriter.newField("JSR/RET are not supported with computeFrames option", "JSR/RET are not supported with computeFrames option", "JSR/RET are not supported with computeFrames option");
classWriter.newMethodItem("JSR/RET are not supported with computeFrames option", "JSR/RET are not supported with computeFrames option", "JSR/RET are not supported with computeFrames option", true);
Test 27: 
ClassWriter classWriter = new ClassWriter(27);
classWriter.addType("$xcH8'RasE_8i");
classWriter.addType("$xcH8'RasE_8i");
Test 28: 
ClassWriter classWriter = new ClassWriter((-58));
classWriter.addUninitializedType("", (-1));
classWriter.addUninitializedType("", (-1));
Test 29: 
ClassWriter classWriter = new ClassWriter(7);
Item[] itemArray = new Item[1];
classWriter.typeTable = itemArray;
classWriter.addType("wheel.asm.ClassAdapter");
Test 30: 
ClassWriter classWriter = new ClassWriter((-940));
classWriter.getCommonSuperClass("wheel.asm.Attribute", "wheel.asm.Label");
Test 31: 
ClassWriter classWriter = new ClassWriter(7);
classWriter.getCommonSuperClass("org.apache.commons.io.filefilter.FalseFileFilter", "org.apache.commons.io.filefilter.FalseFileFilter");
Test 32: 
ClassWriter classWriter = new ClassWriter(198);
classWriter.getCommonSuperClass("wheel.asm.Label", "java/lang/Object");
Test 33: 
ClassWriter classWriter = new ClassWriter((-2149));
classWriter.threshold = (-2149);
classWriter.newDouble((-2149));
Test 34: 
ClassReader classReader = new ClassReader("org.apache.commons.io.filefilter.FalseFileFilter");
ClassWriter classWriter = new ClassWriter(classReader, (-484));
classWriter.newConstItem("org.apache.commons.io.filefilter.FalseFileFilter");
Test 35: 
ClassWriter classWriter = new ClassWriter(0);
classWriter.visitEnd();
Test 36: 
ClassWriter classWriter = new ClassWriter((-2527));
classWriter.newFieldItem("", "", "");
classWriter.newFieldItem("", "", "");
Test 37: 
ClassWriter classWriter = new ClassWriter(256);
classWriter.newNameType("DWRUm37bm/O!^7Z{'NQ", "DWRUm37bm/O!^7Z{'NQ");
classWriter.newNameType("DWRUm37bm/O!^7Z{'NQ", "DWRUm37bm/O!^7Z{'NQ");
Test 38: 
ClassReader classReader = new ClassReader("wheel.asm.ClassWriter");
ClassWriter classWriter = new ClassWriter(classReader, (-473));
classWriter.newClass("");
Test 39: 
ClassWriter classWriter = new ClassWriter(1222);
classWriter.newClassItem("InnerClasses");
Test 40: 
ClassWriter classWriter = new ClassWriter((-1529));
classWriter.index = (-1529);
classWriter.newField("U*", "U*", "U*");
Test 41: 
ClassWriter classWriter = new ClassWriter((-2359));
classWriter.index = (-2359);
classWriter.newNameType("n:qL!}%_J~7e\"A1", "i+-]B$CJy0pHe5trj");
Test 42: 
ClassWriter classWriter = new ClassWriter((-1517));
classWriter.index = (-69);
classWriter.newUTF8("{SNQj&?23#{i,er,");
Test 43: 
ClassWriter classWriter = new ClassWriter(7);
classWriter.newUTF8("org.apache.commons.io.filefilter.FalseFileFilter");
Test 44: 
ClassWriter classWriter = new ClassWriter((-752));
String[] stringArray = new String[2];
stringArray[0] = "";
stringArray[1] = "02^b!x|SK&er8N8[";
classWriter.visitMethod((-752), "02^b!x|SK&er8N8[", "", "02^b!x|SK&er8N8[", stringArray);
Test 45: 
ClassWriter classWriter = new ClassWriter((-940));
// Undeclared exception!
try { 
  classWriter.getCommonSuperClass("org.apache.commons.io.filefilter.AgeFileFilter", "[Xt9k:6&J |z");
  fail("Expecting exception: RuntimeException");

} catch(RuntimeException e) {
   //
   // java.lang.ClassNotFoundException: [Xt9k:6&J |z
   //
   verifyException("wheel.asm.ClassWriter", e);
}

Test 46: 
ClassWriter classWriter = new ClassWriter(33554432);
classWriter.addType("org.apache.commons.io.filefilter.TrueFileFilter");
classWriter.addUninitializedType("", 33554432);
classWriter.addUninitializedType("", 2);
// Undeclared exception!
try { 
  classWriter.getMergedType(3, 1);
  fail("Expecting exception: RuntimeException");

} catch(RuntimeException e) {
   //
   // java.lang.ClassNotFoundException: 
   //
   verifyException("wheel.asm.ClassWriter", e);
}


* Minimizing test suite
[MASTER] 21:33:16.184 [logback-1] WARN  TimeController - Already entered in phase: MINIMIZATION. This will mess up the timing calculations.
* test suite isTestSuite: 47
Test 0: 
ClassWriter classWriter = new ClassWriter((-1502));
classWriter.newField("JSR/RET are not supported with computeFrames option", "JSR/RET are not supported with computeFrames option", "JSR/RET are not supported with computeFrames option");
classWriter.newMethodItem("JSR/RET are not supported with computeFrames option", "JSR/RET are not supported with computeFrames option", "JSR/RET are not supported with computeFrames option", true);
Test 1: 
ClassReader classReader = new ClassReader("org.apache.commons.io.filefilter.FalseFileFilter");
ClassWriter classWriter = new ClassWriter(classReader, (-484));
classWriter.newConstItem("org.apache.commons.io.filefilter.FalseFileFilter");
Test 2: 
ClassWriter classWriter = new ClassWriter(27);
classWriter.newMethod("$xcH8'RasE_8i", "$xcH8'RasE_8i", "zM8Q^-<D}'1!_", false);
Test 3: 
ClassWriter classWriter = new ClassWriter(0);
classWriter.visitEnd();
Test 4: 
ClassWriter classWriter = new ClassWriter((-2192));
classWriter.newConst("/D");
classWriter.visitField((-737), "/D", "/D", "/D", "/D");
Test 5: 
ClassWriter classWriter = new ClassWriter((-5007));
classWriter.visit(4, (-1320), "", (String) null, "yl]/B)oCC", (String[]) null);
Test 6: 
ClassWriter classWriter = new ClassWriter(0);
classWriter.visit(3376, (-2371), "", "The array of prefixes must not be null", (String) null, (String[]) null);
Test 7: 
ClassWriter classWriter = new ClassWriter(16777221);
String[] stringArray = new String[0];
classWriter.visit(16777221, 1122, "", "[cl\"?YvUe{=\"b>XqbA", "[cl\"?YvUe{=\"b>XqbA", stringArray);
Test 8: 
ClassWriter classWriter = new ClassWriter(193);
classWriter.visitSource((String) null, (String) null);
Test 9: 
ClassWriter classWriter = new ClassWriter(8);
classWriter.visitSource("-HA7$2t= lb+M", "org.apache.commons.io.filefilter.SizeFileFilter");
classWriter.toByteArray();
Test 10: 
ClassWriter classWriter = new ClassWriter(0);
classWriter.visitOuterClass("/)nZoQI$6{[>,$6~", (String) null, (String) null);
Test 11: 
ClassWriter classWriter = new ClassWriter(0);
classWriter.visitOuterClass("", "wH[g9PKXmf`s,dh=+~", (String) null);
Test 12: 
ClassWriter classWriter = new ClassWriter(592);
classWriter.visitOuterClass("%/xFdFS3d'dq)L-", "%/xFdFS3d'dq)L-", "%/xFdFS3d'dq)L-");
classWriter.toByteArray();
Test 13: 
ClassWriter classWriter = new ClassWriter(360);
classWriter.visitAnnotation("", false);
classWriter.toByteArray();
Test 14: 
ClassWriter classWriter = new ClassWriter(27);
classWriter.visitAnnotation("", true);
classWriter.toByteArray();
Test 15: 
ClassWriter classWriter = new ClassWriter(0);
classWriter.visitInnerClass("E", "E", "E", 972);
classWriter.visitInnerClass((String) null, (String) null, "E", 972);
Test 16: 
ClassWriter classWriter = new ClassWriter(1433);
classWriter.visitInnerClass((String) null, (String) null, (String) null, 1433);
Test 17: 
ClassWriter classWriter = new ClassWriter(32);
classWriter.visitField(202, "l", "l", "SourceDebugExtension", "l");
classWriter.toByteArray();
Test 18: 
ClassWriter classWriter = new ClassWriter(7);
String[] stringArray = new String[6];
stringArray[0] = "";
stringArray[1] = "";
stringArray[2] = "Qx)*T/G_6` )";
stringArray[3] = "";
stringArray[4] = "Qx)*T/G_6` )";
stringArray[5] = "";
MethodWriter methodWriter = new MethodWriter(classWriter, 3, "Qx)*T/G_6` )", "Qx)*T/G_6` )", "", stringArray, true, false);
classWriter.toByteArray();
Test 19: 
ClassWriter classWriter = new ClassWriter(1433);
classWriter.visitInnerClass("", "", "", 26);
classWriter.toByteArray();
Test 20: 
ClassWriter classWriter = new ClassWriter(220);
Attribute attribute = new Attribute("YL4c9z q[='mygML");
byte[] byteArray = new byte[3];
attribute.value = byteArray;
classWriter.visitAttribute(attribute);
classWriter.toByteArray();
Test 21: 
ClassWriter classWriter = new ClassWriter((-1502));
classWriter.invalidFrames = true;
// Undeclared exception!
try { 
  classWriter.toByteArray();
  fail("Expecting exception: ArrayIndexOutOfBoundsException");

} catch(ArrayIndexOutOfBoundsException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 22: 
ClassWriter classWriter = new ClassWriter(1566);
Character character = new Character('Q');
classWriter.newConst(character);
Test 23: 
ClassWriter classWriter = new ClassWriter((-2527));
Item[] itemArray = new Item[9];
// Undeclared exception!
try { 
  classWriter.newConstItem(itemArray[0]);
  fail("Expecting exception: IllegalArgumentException");

} catch(IllegalArgumentException e) {
   //
   // value null
   //
   verifyException("wheel.asm.ClassWriter", e);
}

Test 24: 
ClassWriter classWriter = new ClassWriter((-2527));
classWriter.newFieldItem("", "", "");
classWriter.newFieldItem("", "", "");
Test 25: 
ClassWriter classWriter = new ClassWriter(185);
classWriter.newMethodItem("SourceFile", "SourceFile", "SourceFile", true);
classWriter.newMethodItem("SourceFile", "SourceFile", "SourceFile", true);
Test 26: 
ClassWriter classWriter = new ClassWriter(12);
classWriter.newInteger(12);
classWriter.newInteger(12);
Test 27: 
ClassWriter classWriter = new ClassWriter(12);
classWriter.newFloat(12);
classWriter.newFloat(12);
Test 28: 
ClassWriter classWriter = new ClassWriter(7);
classWriter.newLong(7);
classWriter.newLong(7);
Test 29: 
ClassWriter classWriter = new ClassWriter(221);
classWriter.newDouble(221);
classWriter.newDouble(221);
Test 30: 
ClassWriter classWriter = new ClassWriter(27);
classWriter.addType("$xcH8'RasE_8i");
classWriter.addType("$xcH8'RasE_8i");
Test 31: 
ClassWriter classWriter = new ClassWriter((-58));
classWriter.addUninitializedType("", (-1));
classWriter.addUninitializedType("", (-1));
Test 32: 
ClassWriter classWriter = new ClassWriter(7);
Item[] itemArray = new Item[1];
classWriter.typeTable = itemArray;
classWriter.addType("wheel.asm.ClassAdapter");
Test 33: 
ClassWriter classWriter = new ClassWriter((-940));
classWriter.getCommonSuperClass("wheel.asm.Attribute", "wheel.asm.Label");
Test 34: 
ClassWriter classWriter = new ClassWriter(7);
classWriter.getCommonSuperClass("org.apache.commons.io.filefilter.FalseFileFilter", "org.apache.commons.io.filefilter.FalseFileFilter");
Test 35: 
ClassWriter classWriter = new ClassWriter(198);
classWriter.getCommonSuperClass("wheel.asm.Label", "java/lang/Object");
Test 36: 
ClassWriter classWriter = new ClassWriter(256);
classWriter.newNameType("DWRUm37bm/O!^7Z{'NQ", "DWRUm37bm/O!^7Z{'NQ");
classWriter.newNameType("DWRUm37bm/O!^7Z{'NQ", "DWRUm37bm/O!^7Z{'NQ");
Test 37: 
ClassReader classReader = new ClassReader("wheel.asm.ClassWriter");
ClassWriter classWriter = new ClassWriter(classReader, (-473));
classWriter.newClass("");
Test 38: 
ClassWriter classWriter = new ClassWriter(1222);
classWriter.newClassItem("InnerClasses");
Test 39: 
ClassWriter classWriter = new ClassWriter((-1529));
classWriter.index = (-1529);
classWriter.newField("U*", "U*", "U*");
Test 40: 
ClassWriter classWriter = new ClassWriter((-2359));
classWriter.index = (-2359);
classWriter.newNameType("n:qL!}%_J~7e\"A1", "i+-]B$CJy0pHe5trj");
Test 41: 
ClassWriter classWriter = new ClassWriter((-1517));
classWriter.index = (-69);
classWriter.newUTF8("{SNQj&?23#{i,er,");
Test 42: 
ClassWriter classWriter = new ClassWriter(7);
classWriter.newUTF8("org.apache.commons.io.filefilter.FalseFileFilter");
Test 43: 
ClassWriter classWriter = new ClassWriter((-752));
String[] stringArray = new String[2];
stringArray[0] = "";
stringArray[1] = "02^b!x|SK&er8N8[";
classWriter.visitMethod((-752), "02^b!x|SK&er8N8[", "", "02^b!x|SK&er8N8[", stringArray);
Test 44: 
ClassWriter classWriter = new ClassWriter((-940));
// Undeclared exception!
try { 
  classWriter.getCommonSuperClass("org.apache.commons.io.filefilter.AgeFileFilter", "[Xt9k:6&J |z");
  fail("Expecting exception: RuntimeException");

} catch(RuntimeException e) {
   //
   // java.lang.ClassNotFoundException: [Xt9k:6&J |z
   //
   verifyException("wheel.asm.ClassWriter", e);
}

Test 45: 
ClassWriter classWriter = new ClassWriter(33554432);
classWriter.addType("org.apache.commons.io.filefilter.TrueFileFilter");
classWriter.addUninitializedType("", 33554432);
classWriter.addUninitializedType("", 2);
// Undeclared exception!
try { 
  classWriter.getMergedType(3, 1);
  fail("Expecting exception: RuntimeException");

} catch(RuntimeException e) {
   //
   // java.lang.ClassNotFoundException: 
   //
   verifyException("wheel.asm.ClassWriter", e);
}

Test 46: 
ClassWriter classWriter = new ClassWriter((-1502));
String[] stringArray = new String[3];
stringArray[0] = "wheel.asm.ClassAdapter";
stringArray[1] = "";
stringArray[2] = "";
classWriter.visit(3221, 15, "", "", "wheel.asm.ClassAdapter", stringArray);
classWriter.invalidFrames = true;
classWriter.toByteArray();

* Going to analyze the coverage criteria
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 86%
* Total number of goals: 174
* Number of covered goals: 150
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 92%
* Total number of goals: 345
* Number of covered goals: 317
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 44%
* Total number of goals: 55
* Number of covered goals: 24
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 30
* Number of covered goals: 30
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 86%
* Total number of goals: 174
* Number of covered goals: 150
* Generated 47 tests with total length 147
* Resulting test suite's coverage: 82% (average coverage for all fitness functions)
* Generating assertions
[MASTER] 21:33:16.501 [logback-1] WARN  TimeController - Already entered in phase: COVERAGE_ANALYSIS. This will mess up the timing calculations.
* Resulting test suite's mutation score: 14%
* Compiling and checking tests
[MASTER] 21:33:41.549 [logback-1] WARN  TimeController - Already entered in phase: ASSERTION_GENERATION. This will mess up the timing calculations.
Going to execute: removeTestsThatDoNotCompile
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 21:33:43.839 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/tmp/EvoSuite_pathingJar6253038583986324065.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 21:33:43.840 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar6253038583986324065.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 21:33:43.930 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/tmp/EvoSuite_pathingJar6253038583986324065.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 21:33:43.931 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar6253038583986324065.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 21:33:43.996 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/tmp/EvoSuite_pathingJar6253038583986324065.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 21:33:43.997 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar6253038583986324065.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 21:33:44.054 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/tmp/EvoSuite_pathingJar6253038583986324065.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 21:33:44.054 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar6253038583986324065.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 21:33:44.113 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/tmp/EvoSuite_pathingJar6253038583986324065.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 21:33:44.114 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar6253038583986324065.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 21:33:44.189 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/tmp/EvoSuite_pathingJar6253038583986324065.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 21:33:44.190 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar6253038583986324065.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 21:33:44.249 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/tmp/EvoSuite_pathingJar6253038583986324065.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 21:33:44.251 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar6253038583986324065.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 21:33:44.310 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/tmp/EvoSuite_pathingJar6253038583986324065.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 21:33:44.311 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar6253038583986324065.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 21:33:44.402 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/tmp/EvoSuite_pathingJar6253038583986324065.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 21:33:44.407 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar6253038583986324065.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 21:33:44.474 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/tmp/EvoSuite_pathingJar6253038583986324065.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 21:33:44.475 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar6253038583986324065.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 21:33:44.532 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/tmp/EvoSuite_pathingJar6253038583986324065.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 21:33:44.533 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar6253038583986324065.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 21:33:44.580 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/tmp/EvoSuite_pathingJar6253038583986324065.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 21:33:44.581 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar6253038583986324065.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 21:33:44.634 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/tmp/EvoSuite_pathingJar6253038583986324065.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 21:33:44.636 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar6253038583986324065.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 21:33:44.699 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/tmp/EvoSuite_pathingJar6253038583986324065.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 21:33:44.700 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar6253038583986324065.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 21:33:44.746 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/tmp/EvoSuite_pathingJar6253038583986324065.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 21:33:44.747 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar6253038583986324065.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 21:33:44.813 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/tmp/EvoSuite_pathingJar6253038583986324065.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 21:33:44.814 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar6253038583986324065.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 21:33:44.889 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/tmp/EvoSuite_pathingJar6253038583986324065.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 21:33:44.892 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar6253038583986324065.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 21:33:44.981 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/tmp/EvoSuite_pathingJar6253038583986324065.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 21:33:44.981 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar6253038583986324065.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 21:33:45.040 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/tmp/EvoSuite_pathingJar6253038583986324065.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 21:33:45.041 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar6253038583986324065.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 21:33:45.091 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/tmp/EvoSuite_pathingJar6253038583986324065.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 21:33:45.092 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar6253038583986324065.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 21:33:45.141 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/tmp/EvoSuite_pathingJar6253038583986324065.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 21:33:45.142 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar6253038583986324065.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 21:33:45.192 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/tmp/EvoSuite_pathingJar6253038583986324065.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 21:33:45.193 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar6253038583986324065.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 21:33:45.262 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/tmp/EvoSuite_pathingJar6253038583986324065.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 21:33:45.264 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar6253038583986324065.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 21:33:45.320 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/tmp/EvoSuite_pathingJar6253038583986324065.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 21:33:45.321 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar6253038583986324065.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 21:33:45.394 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/tmp/EvoSuite_pathingJar6253038583986324065.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 21:33:45.395 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar6253038583986324065.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 21:33:45.478 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/tmp/EvoSuite_pathingJar6253038583986324065.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 21:33:45.479 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar6253038583986324065.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 21:33:45.548 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/tmp/EvoSuite_pathingJar6253038583986324065.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 21:33:45.549 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar6253038583986324065.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 21:33:45.612 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/tmp/EvoSuite_pathingJar6253038583986324065.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 21:33:45.614 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar6253038583986324065.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 21:33:45.694 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/tmp/EvoSuite_pathingJar6253038583986324065.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 21:33:45.696 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar6253038583986324065.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 21:33:46.140 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/tmp/EvoSuite_pathingJar6253038583986324065.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 21:33:46.141 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar6253038583986324065.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 21:33:46.216 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/tmp/EvoSuite_pathingJar6253038583986324065.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
[MASTER] 21:33:46.216 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar6253038583986324065.jar
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 21:33:46.248 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/tmp/EvoSuite_pathingJar6253038583986324065.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 21:33:46.248 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar6253038583986324065.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 21:33:46.274 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/tmp/EvoSuite_pathingJar6253038583986324065.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 21:33:46.274 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar6253038583986324065.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 21:33:46.300 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/tmp/EvoSuite_pathingJar6253038583986324065.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 21:33:46.301 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar6253038583986324065.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 21:33:46.330 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/tmp/EvoSuite_pathingJar6253038583986324065.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 21:33:46.331 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar6253038583986324065.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 21:33:46.364 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/tmp/EvoSuite_pathingJar6253038583986324065.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 21:33:46.364 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar6253038583986324065.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 21:33:46.396 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/tmp/EvoSuite_pathingJar6253038583986324065.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 21:33:46.397 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar6253038583986324065.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 21:33:46.474 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/tmp/EvoSuite_pathingJar6253038583986324065.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 21:33:46.475 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar6253038583986324065.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 21:33:46.534 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/tmp/EvoSuite_pathingJar6253038583986324065.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 21:33:46.535 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar6253038583986324065.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
** Write a test suite: 1 called: 1 to improve: false
** Write a test suite: 2 called: 2 to improve: false
** Write a test suite: 3 called: 3 to improve: false
** Write a test suite: 4 called: 4 to improve: false
** Write a test suite: 5 called: 5 to improve: false
** Write a test suite: 6 called: 6 to improve: false
** Write a test suite: 7 called: 7 to improve: false
** Write a test suite: 8 called: 8 to improve: false
** Write a test suite: 9 called: 9 to improve: false
** Write a test suite: 10 called: 10 to improve: false
** Write a test suite: 11 called: 11 to improve: false
** Write a test suite: 12 called: 12 to improve: false
** Write a test suite: 13 called: 13 to improve: false
** Write a test suite: 14 called: 14 to improve: false
** Write a test suite: 15 called: 15 to improve: false
** Write a test suite: 16 called: 16 to improve: false
** Write a test suite: 17 called: 17 to improve: false
** Write a test suite: 18 called: 18 to improve: false
** Write a test suite: 19 called: 19 to improve: false
** Write a test suite: 20 called: 20 to improve: false
** Write a test suite: 21 called: 21 to improve: false
** Write a test suite: 22 called: 22 to improve: false
** Write a test suite: 23 called: 23 to improve: false
** Write a test suite: 24 called: 24 to improve: false
** Write a test suite: 25 called: 25 to improve: false
** Write a test suite: 26 called: 26 to improve: false
** Write a test suite: 27 called: 27 to improve: false
** Write a test suite: 28 called: 28 to improve: false
** Write a test suite: 29 called: 29 to improve: false
** Write a test suite: 30 called: 30 to improve: false
** Write a test suite: 31 called: 31 to improve: false
** Write a test suite: 32 called: 32 to improve: false
** Write a test suite: 33 called: 33 to improve: false
** Write a test suite: 34 called: 34 to improve: false
** Write a test suite: 35 called: 35 to improve: false
** Write a test suite: 36 called: 36 to improve: false
** Write a test suite: 37 called: 37 to improve: false
** Write a test suite: 38 called: 38 to improve: false
[MASTER] 21:33:46.994 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/tmp/EvoSuite_pathingJar6253038583986324065.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 21:33:46.996 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar6253038583986324065.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
** Write a test suite: 1 called: 1 to improve: false
** Write a test suite: 2 called: 2 to improve: false
** Write a test suite: 3 called: 3 to improve: false
** Write a test suite: 4 called: 4 to improve: false
** Write a test suite: 5 called: 5 to improve: false
** Write a test suite: 6 called: 6 to improve: false
** Write a test suite: 7 called: 7 to improve: false
** Write a test suite: 8 called: 8 to improve: false
** Write a test suite: 9 called: 9 to improve: false
** Write a test suite: 10 called: 10 to improve: false
** Write a test suite: 11 called: 11 to improve: false
** Write a test suite: 12 called: 12 to improve: false
** Write a test suite: 13 called: 13 to improve: false
** Write a test suite: 14 called: 14 to improve: false
** Write a test suite: 15 called: 15 to improve: false
** Write a test suite: 16 called: 16 to improve: false
** Write a test suite: 17 called: 17 to improve: false
** Write a test suite: 18 called: 18 to improve: false
** Write a test suite: 19 called: 19 to improve: false
** Write a test suite: 20 called: 20 to improve: false
** Write a test suite: 21 called: 21 to improve: false
** Write a test suite: 22 called: 22 to improve: false
** Write a test suite: 23 called: 23 to improve: false
** Write a test suite: 24 called: 24 to improve: false
** Write a test suite: 25 called: 25 to improve: false
** Write a test suite: 26 called: 26 to improve: false
** Write a test suite: 27 called: 27 to improve: false
** Write a test suite: 28 called: 28 to improve: false
** Write a test suite: 29 called: 29 to improve: false
** Write a test suite: 30 called: 30 to improve: false
** Write a test suite: 31 called: 31 to improve: false
** Write a test suite: 32 called: 32 to improve: false
** Write a test suite: 33 called: 33 to improve: false
** Write a test suite: 34 called: 34 to improve: false
** Write a test suite: 35 called: 35 to improve: false
** Write a test suite: 36 called: 36 to improve: false
** Write a test suite: 37 called: 37 to improve: false
** Write a test suite: 38 called: 38 to improve: false
[MASTER] 21:33:47.424 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/tmp/EvoSuite_pathingJar6253038583986324065.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 21:33:47.425 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar6253038583986324065.jar
* Writing tests to file
[MASTER] 21:33:47.427 [logback-1] WARN  TimeController - Already entered in phase: JUNIT_CHECK. This will mess up the timing calculations.
* Writing JUnit test case 'ClassWriter_ESTest' to evosuite-tests
** Write a test suite: 0 called: 0 to improve: false
** Write a test suite: 3 called: 1 to improve: false
** Write a test suite: 4 called: 2 to improve: false
** Write a test suite: 5 called: 3 to improve: false
** Write a test suite: 7 called: 4 to improve: false
** Write a test suite: 8 called: 5 to improve: false
** Write a test suite: 10 called: 6 to improve: false
** Write a test suite: 11 called: 7 to improve: false
** Write a test suite: 14 called: 8 to improve: false
** Write a test suite: 15 called: 9 to improve: false
** Write a test suite: 16 called: 10 to improve: false
** Write a test suite: 18 called: 11 to improve: false
** Write a test suite: 20 called: 12 to improve: false
** Write a test suite: 21 called: 13 to improve: false
** Write a test suite: 22 called: 14 to improve: false
** Write a test suite: 23 called: 15 to improve: false
** Write a test suite: 25 called: 16 to improve: false
** Write a test suite: 30 called: 17 to improve: false
** Write a test suite: 31 called: 18 to improve: false
** Write a test suite: 32 called: 19 to improve: false
** Write a test suite: 34 called: 20 to improve: false
** Write a test suite: 35 called: 21 to improve: false
** Write a test suite: 39 called: 22 to improve: false
* Writing JUnit test case 'ClassWriter_Original_ESTest' to evosuite-tests
** Write a test suite: 0 called: 0 to improve: false
** Write a test suite: 1 called: 1 to improve: false
** Write a test suite: 2 called: 2 to improve: false
** Write a test suite: 3 called: 3 to improve: false
** Write a test suite: 4 called: 4 to improve: false
** Write a test suite: 5 called: 5 to improve: false
** Write a test suite: 6 called: 6 to improve: false
** Write a test suite: 7 called: 7 to improve: false
** Write a test suite: 8 called: 8 to improve: false
** Write a test suite: 9 called: 9 to improve: false
** Write a test suite: 10 called: 10 to improve: false
** Write a test suite: 11 called: 11 to improve: false
** Write a test suite: 12 called: 12 to improve: false
** Write a test suite: 13 called: 13 to improve: false
** Write a test suite: 14 called: 14 to improve: false
** Write a test suite: 15 called: 15 to improve: false
** Write a test suite: 16 called: 16 to improve: false
** Write a test suite: 17 called: 17 to improve: false
** Write a test suite: 18 called: 18 to improve: false
** Write a test suite: 19 called: 19 to improve: false
** Write a test suite: 20 called: 20 to improve: false
** Write a test suite: 21 called: 21 to improve: false
** Write a test suite: 22 called: 22 to improve: false
** Write a test suite: 23 called: 23 to improve: false
** Write a test suite: 24 called: 24 to improve: false
** Write a test suite: 25 called: 25 to improve: false
** Write a test suite: 26 called: 26 to improve: false
** Write a test suite: 27 called: 27 to improve: false
** Write a test suite: 28 called: 28 to improve: false
** Write a test suite: 29 called: 29 to improve: false
** Write a test suite: 30 called: 30 to improve: false
** Write a test suite: 31 called: 31 to improve: false
** Write a test suite: 32 called: 32 to improve: false
** Write a test suite: 33 called: 33 to improve: false
** Write a test suite: 34 called: 34 to improve: false
** Write a test suite: 35 called: 35 to improve: false
** Write a test suite: 36 called: 36 to improve: false
** Write a test suite: 37 called: 37 to improve: false
** Write a test suite: 38 called: 38 to improve: false
* Done!

* Computation finished
