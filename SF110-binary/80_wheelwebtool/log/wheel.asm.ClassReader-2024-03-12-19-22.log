* EvoSuite 1.0.0-SNAPSHOT
* Going to generate test cases for class: wheel.asm.ClassReader
* Starting Client-0
* Properties loaded from /home/roham/Results-Utestgen/dataset/SF110-new-res/80_wheelwebtool/evosuite-files/evosuite.properties
* Connecting to master process on port 15131
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 19:22:51.718 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 19:22:51.722 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 19:22:51.723 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 19:22:51.745 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.Temporal
[MASTER] 19:22:51.746 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.ZoneId
[MASTER] 19:22:51.747 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAccessor
[MASTER] 19:22:51.748 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalField
[MASTER] 19:22:51.749 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalUnit
[MASTER] 19:22:51.750 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAmount
[MASTER] 19:22:51.751 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.Clock
[MASTER] 19:22:51.755 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalQuery
[MASTER] 19:22:51.757 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAdjuster
[MASTER] 19:22:51.761 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 19:22:51.810 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 19:22:51.813 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
* Finished analyzing classpath
* Generating tests for class wheel.asm.ClassReader
* Test criteria:
  - Branch Coverage
  - Line Coverage
  - Method-Output Coverage
  - Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 2563
* Using seed 1710271362851
* Starting evolution
[Progress:>                             0%] [Cov:>                                  0%]* Initial Number of Goals in DynaMOSA = 240 / 2563
[Progress:>                             1%] [Cov:=>                                 3%][Progress:>                             1%] [Cov:=>                                 3%][Progress:>                             2%] [Cov:===>                               9%][Progress:>                             3%] [Cov:=====>                             15%][Progress:==>                           8%] [Cov:=======>                           20%][Progress:===>                          10%] [Cov:===============>                   43%][Progress:===>                          12%] [Cov:================>                  46%][Progress:====>                         14%] [Cov:================>                  48%][Progress:=====>                        18%] [Cov:=================>                 50%][Progress:======>                       20%] [Cov:=================>                 50%][Progress:======>                       23%] [Cov:=================>                 50%][Progress:=======>                      24%] [Cov:=================>                 51%][Progress:=======>                      26%] [Cov:=================>                 51%][Progress:========>                     27%] [Cov:=================>                 51%][Progress:========>                     28%] [Cov:=================>                 51%][Progress:=========>                    32%] [Cov:=================>                 51%][Progress:==========>                   35%] [Cov:=================>                 51%][Progress:===========>                  37%] [Cov:=================>                 51%][Progress:===========>                  39%] [Cov:=================>                 51%][Progress:============>                 41%] [Cov:=================>                 51%][Progress:==============>               48%] [Cov:==================>                52%][Progress:===============>              51%] [Cov:==================>                52%][Progress:===============>              53%] [Cov:==================>                52%][Progress:================>             55%] [Cov:==================>                52%][Progress:=================>            57%] [Cov:==================>                52%][Progress:=================>            59%] [Cov:==================>                52%][Progress:==================>           61%] [Cov:==================>                52%][Progress:==================>           63%] [Cov:==================>                52%][Progress:===================>          64%] [Cov:==================>                52%][Progress:===================>          66%] [Cov:==================>                52%][Progress:====================>         67%] [Cov:==================>                52%][Progress:======================>       74%] [Cov:==================>                52%][Progress:======================>       76%] [Cov:==================>                52%][Progress:========================>     82%] [Cov:==================>                52%][Progress:=========================>    85%] [Cov:==================>                52%][Progress:=========================>    85%] [Cov:==================>                52%][Progress:==========================>   87%] [Cov:==================>                54%][Progress:==========================>   88%] [Cov:==================>                54%][Progress:==========================>   89%] [Cov:==================>                54%][Progress:===========================>  90%] [Cov:==================>                54%][Progress:============================> 96%] [Cov:===================>               55%][Progress:==============================100%] [Cov:===================>               55%]
* Search finished after 103s and 41 generations, 15920 statements, best individual has fitness: 1415.0
* Generated before the refinement 37 tests with total length 93
statement is: wheel.asm.ClassReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class wheel.asm.ClassReader
statement code is: ClassReader classReader = new ClassReader("wheel.asm.Opcodes")
statement is: getAccess()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int access = classReader.getAccess()
test data is: ClassReader classReader = new ClassReader("wheel.asm.Opcodes");
classReader.getAccess();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        classReader.getAccess(ACC_PUBLIC);
    }
}
statement is: classReader.getAccess(ACC_PUBLIC), class spoon.support.reflect.code.CtInvocationImpl
invocation is: classReader.getAccess(ACC_PUBLIC) target is: classReader method is: getAccess()
statement is: wheel.asm.ClassReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class wheel.asm.ClassReader
statement code is: ClassReader classReader = new ClassReader("wheel.asm.Opcodes")
statement is: readByte(I)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int readByte = classReader.readByte(4)
test data is: ClassReader classReader = new ClassReader("wheel.asm.Opcodes");
classReader.readByte(4);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Improved test data:
        // Replace the primitive value 4 with a more descriptive example, such as "OP_IINC" to indicate that we are testing the "iinc" instruction.
        classReader.readByte("OP_IINC");
    }
}
statement is: // Improved test data:
// Replace the primitive value 4 with a more descriptive example, such as "OP_IINC" to indicate that we are testing the "iinc" instruction.
classReader.readByte("OP_IINC"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: // Improved test data:
// Replace the primitive value 4 with a more descriptive example, such as "OP_IINC" to indicate that we are testing the "iinc" instruction.
classReader.readByte("OP_IINC") target is: classReader method is: readByte(java.lang.String)
statement is: wheel.asm.ClassReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class wheel.asm.ClassReader
statement code is: ClassReader classReader = new ClassReader("wheel.asm.Opcodes")
statement is: readLong(I)J type is: class org.evosuite.testcase.statements.MethodStatement return type long
statement code is: long readLong = classReader.readLong(1)
test data is: ClassReader classReader = new ClassReader("wheel.asm.Opcodes");
classReader.readLong(1);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        classReader.readLong(1L);// using a long value instead of an int to demonstrate a more descriptive input }}

    }
}
statement is: classReader.readLong(1L)// using a long value instead of an int to demonstrate a more descriptive input }}
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: classReader.readLong(1L)// using a long value instead of an int to demonstrate a more descriptive input }}
 target is: classReader method is: readLong(long)
statement is: wheel.asm.ClassReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class wheel.asm.ClassReader
statement code is: ClassReader classReader = new ClassReader("wheel.asm.Opcodes")
statement is: getClassName()Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.lang.String
statement code is: String className = classReader.getClassName()
test data is: ClassReader classReader = new ClassReader("wheel.asm.Opcodes");
classReader.getClassName();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Improved test data: }}
    }
}
statement is: // Improved test data: }}, class spoon.support.reflect.code.CtCommentImpl
statement is: wheel.asm.ClassReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class wheel.asm.ClassReader
statement code is: ClassReader classReader = new ClassReader("org.apache.commons.io.filefilter.WildcardFilter")
statement is: wheel.asm.ClassReader([BII)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class wheel.asm.ClassReader
statement code is: ClassReader classReader = new ClassReader(classReader.b, 4, 1121)
test data is: ClassReader classReader = new ClassReader("org.apache.commons.io.filefilter.WildcardFilter");
ClassReader classReader = new ClassReader(classReader.b, 4, 1121);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Improved test data }}
    }
}
statement is: // Improved test data }}, class spoon.support.reflect.code.CtCommentImpl
statement is: wheel.asm.ClassReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class wheel.asm.ClassReader
statement code is: ClassReader classReader = new ClassReader("wheel.asm.Opcodes")
statement is: wheel.asm.ClassReader([BII)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class wheel.asm.ClassReader
statement code is: ClassReader classReader = new ClassReader(classReader.b, 71, 3942)
test data is: ClassReader classReader = new ClassReader("wheel.asm.Opcodes");
ClassReader classReader = new ClassReader(classReader.b, 71, 3942);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        System.out.println = $missing$;
    }
}
statement is: System.out.println = $missing$, class spoon.support.reflect.code.CtAssignmentImpl
statement is: wheel.asm.ClassReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class wheel.asm.ClassReader
statement code is: ClassReader classReader = new ClassReader("org.apache.commons.io.filefilter.EmptyFileFilter")
statement is: getSuperName()Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.lang.String
statement code is: String superName = classReader.getSuperName()
test data is: ClassReader classReader = new ClassReader("org.apache.commons.io.filefilter.EmptyFileFilter");
classReader.getSuperName();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        classReader.getSuperName();
        // Improved test data
        String superclassName = "java.lang.Object";
        int superclassIdx = 0;
        Assert.assertEquals(superclassName, classReader.getSuperName());
    }
}
statement is: classReader.getSuperName(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: classReader.getSuperName() target is: classReader method is: getSuperName()
statement is: // Improved test data
String superclassName = "java.lang.Object", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: int superclassIdx = 0, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: Assert.assertEquals(superclassName, classReader.getSuperName()), class spoon.support.reflect.code.CtInvocationImpl
invocation is: Assert.assertEquals(superclassName, classReader.getSuperName()) target is: Assert method is: assertEquals(java.lang.String)
* this is vulnerable: String string = "java.lang.Object"
* this is vulnerable: int _int = 0
TestCase is: String string = "java.lang.Object";
int _int = 0;

statement is: wheel.asm.ClassReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class wheel.asm.ClassReader
statement code is: ClassReader classReader = new ClassReader("wheel.asm.Opcodes")
statement is: getInterfaces()[Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class [Ljava.lang.String;
statement code is: String[] interfaces = classReader.getInterfaces()
test data is: ClassReader classReader = new ClassReader("wheel.asm.Opcodes");
classReader.getInterfaces();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        classReader.getImplementedInterfaces();
    }
}
statement is: classReader.getImplementedInterfaces(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: classReader.getImplementedInterfaces() target is: classReader method is: getImplementedInterfaces()
statement is: wheel.asm.ClassReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class wheel.asm.ClassReader
statement code is: ClassReader classReader = new ClassReader("org.apache.commons.io.filefilter.WildcardFilter")
statement is: wheel.asm.ClassWriter(Lwheel/asm/ClassReader;I)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class wheel.asm.ClassWriter
statement code is: ClassWriter classWriter = new ClassWriter(arg0, (-3597))
test data is: ClassReader classReader = new ClassReader("org.apache.commons.io.filefilter.WildcardFilter");
ClassWriter classWriter = new ClassWriter(classReader, (-3597));

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Improved test data }}
    }
}
statement is: // Improved test data }}, class spoon.support.reflect.code.CtCommentImpl
statement is: wheel.asm.ClassReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class wheel.asm.ClassReader
statement code is: ClassReader classReader = new ClassReader("wheel.asm.Opcodes")
statement is: wheel.asm.ClassReader([BII)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class wheel.asm.ClassReader
statement code is: ClassReader classReader = new ClassReader(classReader.b, 3040, 4)
statement is: wheel.asm.ClassWriter(Lwheel/asm/ClassReader;I)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class wheel.asm.ClassWriter
statement code is: ClassWriter classWriter = new ClassWriter(arg0, 2)
test data is: ClassReader classReader = new ClassReader("wheel.asm.Opcodes");
ClassReader classReader = new ClassReader(classReader.b, 3040, 4);
ClassWriter classWriter = new ClassWriter(classReader, 2);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Replace the hardcoded values with more descriptive and representative examples }}
    }
}
statement is: // Replace the hardcoded values with more descriptive and representative examples }}, class spoon.support.reflect.code.CtCommentImpl
statement is: wheel.asm.ClassReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class wheel.asm.ClassReader
statement code is: ClassReader classReader = new ClassReader("EnclosingMethod")
test data is: ClassReader classReader = new ClassReader("EnclosingMethod");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Improved test data
        ClassReader classReader = new ClassReader("EnclosingMethod");
        classReader.setTarget(new EnclosingMethod());
        String className = "EnclosingMethod";
        EnclosingMethod enclosingMethod = new EnclosingMethod();
        assertEquals(className, classReader.getClassName());
        assertEquals(enclosingMethod, classReader.getTarget());
    }
}
statement is: // Improved test data
ClassReader classReader = new ClassReader("EnclosingMethod"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: classReader.setTarget(new EnclosingMethod()), class spoon.support.reflect.code.CtInvocationImpl
invocation is: classReader.setTarget(new EnclosingMethod()) target is: classReader method is: setTarget(EnclosingMethod)
statement is: String className = "EnclosingMethod", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: EnclosingMethod enclosingMethod = new EnclosingMethod(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: assertEquals(className, classReader.getClassName()), class spoon.support.reflect.code.CtInvocationImpl
invocation is: assertEquals(className, classReader.getClassName()) target is:  method is: assertEquals(java.lang.String,<unknown>)
statement is: assertEquals(enclosingMethod, classReader.getTarget()), class spoon.support.reflect.code.CtInvocationImpl
invocation is: assertEquals(enclosingMethod, classReader.getTarget()) target is:  method is: assertEquals(<unknown>,<unknown>)
* this is vulnerable: String string = "EnclosingMethod"
TestCase is: String string = "EnclosingMethod";
ClassReader classReader = new ClassReader(string);
String string = "EnclosingMethod";

statement is: org.evosuite.testcase.statements.ArrayStatement@3c5cb6a2 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [B
statement code is: byte[] byteArray = new byte[0]
statement is: java.io.ByteArrayInputStream([B)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.ByteArrayInputStream
statement code is: ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(arg0)
statement is: wheel.asm.ClassReader(Ljava/io/InputStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class wheel.asm.ClassReader
statement code is: ClassReader classReader = new ClassReader(arg0)
test data is: byte[] byteArray = new byte[0];
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
ClassReader classReader = new ClassReader(byteArrayInputStream);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        byte[] byteArray = new byte[]{ 100, -25, 76 };
        String string = "This is a test string.";
        int integer = 10000;
        double doubleValue = 3.14159;
        char charValue = 'A';
        ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
    }
}
statement is: byte[] byteArray = new byte[]{ 100, -25, 76 }, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [] Ct is: byte[] byteArray = new byte[0] isAssignment: false Array: new byte[]{ 100, -25, 76 } Elements: [100, -25, 76]
lengths: [0] []
statement is: String string = "This is a test string.", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: int integer = 10000, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: double doubleValue = 3.14159, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: char charValue = 'A', class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
* this is vulnerable: int _int = 10000
* this is vulnerable: double _double = 3.14159
* this is vulnerable: char _char = 'A'
TestCase is: byte[] byteArray = "This is a test string.";
int _int = 10000;
double _double = 3.14159;
char _char = 'A';
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);

statement is: wheel.asm.ClassReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class wheel.asm.ClassReader
statement code is: ClassReader classReader = new ClassReader("wheel.asm.Item")
statement is: wheel.asm.ClassWriter(I)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class wheel.asm.ClassWriter
statement code is: ClassWriter classWriter = new ClassWriter(2147483645)
statement is: accept(Lwheel/asm/ClassVisitor;I)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: classReader.accept((ClassVisitor) arg0, 2)
statement is: org.evosuite.testcase.statements.ArrayStatement@2020e226 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [C
statement code is: char[] charArray = new char[4]
statement is: readClass(I[C)Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.lang.String
statement code is: String readClass = classReader.readClass(76, arg1)
test data is: ClassReader classReader = new ClassReader("wheel.asm.Item");
ClassWriter classWriter = new ClassWriter(2147483645);
classReader.accept((ClassVisitor) classWriter, 2);
char[] charArray = new char[4];
classReader.readClass(76, charArray);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        char[] charArray = new char[4];
        classReader.readClass(76, charArray);
        // Improved test data
        int itemId = 101;
        String itemName = "Test Item 2";
        double price = 8.99;
        int quantityInStock = 2;
        char category = 'C';
    }
}
statement is: char[] charArray = new char[4], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [4] Ct is: char[] charArray = new char[4] isAssignment: false Array: new char[4] Elements: []
lengths: [4] [4]
Their type are: class [C char[]
statement is: classReader.readClass(76, charArray), class spoon.support.reflect.code.CtInvocationImpl
invocation is: classReader.readClass(76, charArray) target is: classReader method is: readClass(int,char[])
statement is: // Improved test data
int itemId = 101, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: String itemName = "Test Item 2", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: double price = 8.99, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: int quantityInStock = 2, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: char category = 'C', class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
* this is vulnerable: int _int = 101
* this is vulnerable: String string = "Test Item 2"
* this is vulnerable: double _double = 8.99
* this is vulnerable: int _int = 2
* this is vulnerable: char _char = 'C'
TestCase is: char[] charArray = new char[4];
int _int = 101;
String string = "Test Item 2";
double _double = 8.99;
int _int = 2;
char _char = 'C';

statement is: wheel.asm.ClassReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class wheel.asm.ClassReader
statement code is: ClassReader classReader = new ClassReader("wheel.asm.Opcodes")
statement is: org.evosuite.testcase.statements.ArrayStatement@582cf54e type is: class org.evosuite.testcase.statements.ArrayStatement return type class [C
statement code is: char[] charArray = new char[12]
statement is: readUTF8(I[C)Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.lang.String
statement code is: String readUTF8 = classReader.readUTF8(4, arg1)
test data is: ClassReader classReader = new ClassReader("wheel.asm.Opcodes");
char[] charArray = new char[12];
classReader.readUTF8(4, charArray);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        char[] charArray = new char[10];
        classReader.readUTF8(5, charArray);
    }
}
statement is: char[] charArray = new char[10], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [10] Ct is: char[] charArray = new char[12] isAssignment: false Array: new char[10] Elements: []
lengths: [12] [10]
Their type are: class [C char[]
statement is: classReader.readUTF8(5, charArray), class spoon.support.reflect.code.CtInvocationImpl
invocation is: classReader.readUTF8(5, charArray) target is: classReader method is: readUTF8(int,char[])
TestCase is: char[] charArray = new char[12];

statement is: wheel.asm.ClassReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class wheel.asm.ClassReader
statement code is: ClassReader classReader = new ClassReader("org.apache.commons.io.filefilter.EmptyFileFilter")
statement is: org.evosuite.testcase.statements.ArrayStatement@80e2648f type is: class org.evosuite.testcase.statements.ArrayStatement return type class [C
statement code is: char[] charArray = new char[2]
statement is: readConst(I[C)Ljava/lang/Object; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.lang.Object
statement code is: Object readConst = classReader.readConst(15, arg1)
test data is: ClassReader classReader = new ClassReader("org.apache.commons.io.filefilter.EmptyFileFilter");
char[] charArray = new char[2];
classReader.readConst(15, charArray);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        char[] charArray = new char[2];
        classReader.readConst(15, charArray);
        charArray[0] = 'A';
        charArray[1] = 'B';
        String str = "Hello World";
        int i = 4;
        double d = 3.14;
    }
}
statement is: char[] charArray = new char[2], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [2] Ct is: char[] charArray = new char[2] isAssignment: false Array: new char[2] Elements: []
lengths: [2] [2]
Their type are: class [C char[]
statement is: classReader.readConst(15, charArray), class spoon.support.reflect.code.CtInvocationImpl
invocation is: classReader.readConst(15, charArray) target is: classReader method is: readConst(int,char[])
statement is: charArray[0] = 'A', class spoon.support.reflect.code.CtAssignmentImpl
Assigned : charArray[0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl char Assignment:'A' Ct is: charArray[0] = 'A'
target : charArray class spoon.support.reflect.code.CtLiteralImpl
statement is: charArray[1] = 'B', class spoon.support.reflect.code.CtAssignmentImpl
Assigned : charArray[1] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl char Assignment:'B' Ct is: charArray[1] = 'B'
target : charArray class spoon.support.reflect.code.CtLiteralImpl
statement is: String str = "Hello World", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: int i = 4, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: double d = 3.14, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
* this is vulnerable: String string = "Hello World"
* this is vulnerable: int _int = 4
* this is vulnerable: double _double = 3.14
TestCase is: char[] charArray = new char[2];
String string = "Hello World";
int _int = 4;
double _double = 3.14;

statement is: wheel.asm.ClassReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class wheel.asm.ClassReader
statement code is: ClassReader classReader = new ClassReader("wheel.asm.Opcodes")
statement is: readConst(I[C)Ljava/lang/Object; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.lang.Integer
statement code is: Integer readConst = (Integer)classReader.readConst(1, (char[]) null)
test data is: ClassReader classReader = new ClassReader("wheel.asm.Opcodes");
classReader.readConst(1, (char[]) null);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        classReader.readConst(1, ((char[]) ('a')), 'b', 'c');
    }
}
statement is: classReader.readConst(1, ((char[]) ('a')), 'b', 'c'), class spoon.support.reflect.code.CtInvocationImpl
invocation is: classReader.readConst(1, ((char[]) ('a')), 'b', 'c') target is: classReader method is: readConst(int,char[],char,char)
statement is: wheel.asm.ClassReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class wheel.asm.ClassReader
statement code is: ClassReader classReader = new ClassReader("wheel.asm.Opcodes")
statement is: readShort(I)S type is: class org.evosuite.testcase.statements.MethodStatement return type short
statement code is: short readShort = classReader.readShort(15)
test data is: ClassReader classReader = new ClassReader("wheel.asm.Opcodes");
classReader.readShort(15);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        classReader.readShort(((short) (0x1234)));
    }
}
statement is: classReader.readShort(((short) (0x1234))), class spoon.support.reflect.code.CtInvocationImpl
invocation is: classReader.readShort(((short) (0x1234))) target is: classReader method is: readShort(short)
statement is: wheel.asm.ClassReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class wheel.asm.ClassReader
statement code is: ClassReader classReader = new ClassReader("org.apache.commons.io.filefilter.WildcardFilter")
statement is: readInt(I)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int readInt = classReader.readInt(1)
test data is: ClassReader classReader = new ClassReader("org.apache.commons.io.filefilter.WildcardFilter");
classReader.readInt(1);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        classReader.readInt(9);// Reading an integer with the value 9 to simulate a scenario where the filter matches a file with the name "test.txt". }}

    }
}
statement is: classReader.readInt(9)// Reading an integer with the value 9 to simulate a scenario where the filter matches a file with the name "test.txt". }}
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: classReader.readInt(9)// Reading an integer with the value 9 to simulate a scenario where the filter matches a file with the name "test.txt". }}
 target is: classReader method is: readInt(int)
statement is: wheel.asm.ClassReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class wheel.asm.ClassReader
statement code is: ClassReader classReader = new ClassReader("org.apache.commons.io.filefilter.WildcardFilter")
statement is: org.evosuite.testcase.statements.ArrayStatement@30260963 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [C
statement code is: char[] charArray = new char[1]
statement is: readClass(I[C)Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.lang.String
statement code is: String readClass = classReader.readClass(21, arg1)
test data is: ClassReader classReader = new ClassReader("org.apache.commons.io.filefilter.WildcardFilter");
char[] charArray = new char[1];
classReader.readClass(21, charArray);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        char[] charArray = new char[1];
        classReader.readClass(21, charArray);
        // Improved test data
        int fileSize = 5000;// Arbitrary number of bytes

        String fileName = "example.txt";
        char[] charArray = new char[fileSize];
        for (int i = 0; i < fileSize; i++) {
            charArray[i] = 'a';
        }
        classReader.readClass(fileName, charArray);
        // Alternative test data
        int fileSize = 10000;// Arbitrary number of bytes

        String fileName = "example2.txt";
        char[] charArray = new char[fileSize];
        for (int i = 0; i < fileSize; i++) {
            charArray[i] = 'b';
        }
        classReader.readClass(fileName, charArray);
        // Another alternative test data
        int fileSize = 20000;// Arbitrary number of bytes

        String fileName = "example3.txt";
        char[] charArray = new char[fileSize];
        for (int i = 0; i < fileSize; i++) {
            charArray[i] = 'c';
        }
    }
}
statement is: char[] charArray = new char[1], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [1] Ct is: char[] charArray = new char[1] isAssignment: false Array: new char[1] Elements: []
lengths: [1] [1]
Their type are: class [C char[]
statement is: classReader.readClass(21, charArray), class spoon.support.reflect.code.CtInvocationImpl
invocation is: classReader.readClass(21, charArray) target is: classReader method is: readClass(int,char[])
statement is: // Improved test data
int fileSize = 5000// Arbitrary number of bytes
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: String fileName = "example.txt", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: char[] charArray = new char[fileSize], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [fileSize] Ct is: char[] charArray = new char[1] isAssignment: false Array: new char[fileSize] Elements: []
lengths: [1] [fileSize]
Their type are: class [C char[]
statement is: for (int i = 0; i < fileSize; i++) {
    charArray[i] = 'a';
}, class spoon.support.reflect.code.CtForImpl
statement is: classReader.readClass(fileName, charArray), class spoon.support.reflect.code.CtInvocationImpl
invocation is: classReader.readClass(fileName, charArray) target is: classReader method is: readClass(java.lang.String,char[])
statement is: // Alternative test data
int fileSize = 10000// Arbitrary number of bytes
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: String fileName = "example2.txt", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: char[] charArray = new char[fileSize], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [fileSize] Ct is: char[] charArray = new char[1] isAssignment: false Array: new char[fileSize] Elements: []
lengths: [1] [fileSize]
Their type are: class [C char[]
statement is: for (int i = 0; i < fileSize; i++) {
    charArray[i] = 'b';
}, class spoon.support.reflect.code.CtForImpl
statement is: classReader.readClass(fileName, charArray), class spoon.support.reflect.code.CtInvocationImpl
invocation is: classReader.readClass(fileName, charArray) target is: classReader method is: readClass(java.lang.String,char[])
statement is: // Another alternative test data
int fileSize = 20000// Arbitrary number of bytes
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: String fileName = "example3.txt", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: char[] charArray = new char[fileSize], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [fileSize] Ct is: char[] charArray = new char[1] isAssignment: false Array: new char[fileSize] Elements: []
lengths: [1] [fileSize]
Their type are: class [C char[]
statement is: for (int i = 0; i < fileSize; i++) {
    charArray[i] = 'c';
}, class spoon.support.reflect.code.CtForImpl
* this is vulnerable: int _int = 5000
* this is vulnerable: String string = "example.txt"
* this is vulnerable: int _int = 10000
* this is vulnerable: String string = "example2.txt"
* this is vulnerable: int _int = 20000
* this is vulnerable: String string = "example3.txt"
TestCase is: char[] charArray = new char[1];
int _int = 5000;
String string = "example.txt";
char[] charArray = new char[1];
int _int = 10000;
String string = "example2.txt";
char[] charArray = new char[1];
int _int = 20000;
String string = "example3.txt";
char[] charArray = new char[1];

statement is: wheel.asm.ClassReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class wheel.asm.ClassReader
statement code is: ClassReader classReader = new ClassReader("org.apache.commons.io.filefilter.WildcardFilter")
statement is: readUnsignedShort(I)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int readUnsignedShort = classReader.readUnsignedShort(33)
test data is: ClassReader classReader = new ClassReader("org.apache.commons.io.filefilter.WildcardFilter");
classReader.readUnsignedShort(33);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        classReader.readUnsignedShort(34);
    }
}
statement is: classReader.readUnsignedShort(34), class spoon.support.reflect.code.CtInvocationImpl
invocation is: classReader.readUnsignedShort(34) target is: classReader method is: readUnsignedShort(int)
statement is: wheel.asm.ClassReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class wheel.asm.ClassReader
statement code is: ClassReader classReader = new ClassReader("org.apache.commons.io.filefilter.EmptyFileFilter")
statement is: wheel.asm.ClassWriter(I)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class wheel.asm.ClassWriter
statement code is: ClassWriter classWriter = new ClassWriter(15)
statement is: org.evosuite.testcase.statements.ArrayStatement@940c163e type is: class org.evosuite.testcase.statements.ArrayStatement return type class [Lwheel.asm.Attribute;
statement code is: Attribute[] attributeArray = new Attribute[0]
statement is: accept(Lwheel/asm/ClassVisitor;[Lwheel/asm/Attribute;I)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: classReader.accept((ClassVisitor) arg0, arg1, 4552)
test data is: ClassReader classReader = new ClassReader("org.apache.commons.io.filefilter.EmptyFileFilter");
ClassWriter classWriter = new ClassWriter(15);
Attribute[] attributeArray = new Attribute[0];
classReader.accept((ClassVisitor) classWriter, attributeArray, 4552);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Attribute[] attributeArray = new Attribute[0];
        classReader.accept(((ClassVisitor) (classWriter)), attributeArray, 4552);
        // Improved test data
        String filePath = "C:\\path\\to\\file.txt";
        FileFilter emptyFileFilter = EmptyFileFilter.EMPTY;
        File file = new File(filePath);
        boolean isEmpty = emptyFileFilter.accept(file);
    }
}
statement is: Attribute[] attributeArray = new Attribute[0], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [0] Ct is: Attribute[] attributeArray = new Attribute[0] isAssignment: false Array: new Attribute[0] Elements: []
lengths: [0] [0]
Their type are: class [Lwheel.asm.Attribute; Attribute[]
statement is: classReader.accept(((ClassVisitor) (classWriter)), attributeArray, 4552), class spoon.support.reflect.code.CtInvocationImpl
invocation is: classReader.accept(((ClassVisitor) (classWriter)), attributeArray, 4552) target is: classReader method is: accept(ClassVisitor,Attribute[],int)
statement is: // Improved test data
String filePath = "C:\\path\\to\\file.txt", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: FileFilter emptyFileFilter = EmptyFileFilter.EMPTY, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: EmptyFileFilter.EMPTY is EmptyFileFilter
statement is: File file = new File(filePath), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: boolean isEmpty = emptyFileFilter.accept(file), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: emptyFileFilter.accept(file) target is: emptyFileFilter method is: accept(File)
* this is vulnerable: String string = "C:\\path\\to\\file.txt"
TestCase is: Attribute[] attributeArray = new Attribute[0];
String string = "C:\\path\\to\\file.txt";

statement is: wheel.asm.ClassReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class wheel.asm.ClassReader
statement code is: ClassReader classReader = new ClassReader("org.apache.commons.io.filefilter.EmptyFileFilter")
statement is: wheel.asm.ClassWriter(Lwheel/asm/ClassReader;I)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class wheel.asm.ClassWriter
statement code is: ClassWriter classWriter = new ClassWriter(arg0, 1)
statement is: accept(Lwheel/asm/ClassVisitor;[Lwheel/asm/Attribute;I)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: classReader.accept((ClassVisitor) arg0, (Attribute[]) null, 1155)
test data is: ClassReader classReader = new ClassReader("org.apache.commons.io.filefilter.EmptyFileFilter");
ClassWriter classWriter = new ClassWriter(classReader, 1);
classReader.accept((ClassVisitor) classWriter, (Attribute[]) null, 1155);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        classReader.accept(((ClassVisitor) (classWriter)), ((Attribute[]) (null)), 256);// Using a different value for the flags parameter to exercise the code path that uses this value. }}

    }
}
statement is: classReader.accept(((ClassVisitor) (classWriter)), ((Attribute[]) (null)), 256)// Using a different value for the flags parameter to exercise the code path that uses this value. }}
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: classReader.accept(((ClassVisitor) (classWriter)), ((Attribute[]) (null)), 256)// Using a different value for the flags parameter to exercise the code path that uses this value. }}
 target is: classReader method is: accept(ClassVisitor,Attribute[],int)
statement is: wheel.asm.ClassReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class wheel.asm.ClassReader
statement code is: ClassReader classReader = new ClassReader("wheel.asm.Opcodes")
statement is: wheel.asm.ClassWriter(I)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class wheel.asm.ClassWriter
statement code is: ClassWriter classWriter = new ClassWriter(3040)
statement is: accept(Lwheel/asm/ClassVisitor;[Lwheel/asm/Attribute;I)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: classReader.accept((ClassVisitor) arg0, (Attribute[]) null, 2)
test data is: ClassReader classReader = new ClassReader("wheel.asm.Opcodes");
ClassWriter classWriter = new ClassWriter(3040);
classReader.accept((ClassVisitor) classWriter, (Attribute[]) null, 2);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        integerValue = 10;
        doubleValue = 3.14;
        stringValue = "Hello, world!";
        charValue = 'a';
    }
}
statement is: integerValue = 10, class spoon.support.reflect.code.CtAssignmentImpl
statement is: doubleValue = 3.14, class spoon.support.reflect.code.CtAssignmentImpl
statement is: stringValue = "Hello, world!", class spoon.support.reflect.code.CtAssignmentImpl
statement is: charValue = 'a', class spoon.support.reflect.code.CtAssignmentImpl
statement is: wheel.asm.ClassReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class wheel.asm.ClassReader
statement code is: ClassReader classReader = new ClassReader("org.apache.commons.io.filefilter.WildcardFilter")
statement is: wheel.asm.ClassWriter(I)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class wheel.asm.ClassWriter
statement code is: ClassWriter classWriter = new ClassWriter((-2897))
statement is: accept(Lwheel/asm/ClassVisitor;[Lwheel/asm/Attribute;I)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: classReader.accept((ClassVisitor) arg0, (Attribute[]) null, 54)
test data is: ClassReader classReader = new ClassReader("org.apache.commons.io.filefilter.WildcardFilter");
ClassWriter classWriter = new ClassWriter((-2897));
classReader.accept((ClassVisitor) classWriter, (Attribute[]) null, 54);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        classReader.accept(((ClassVisitor) (classWriter)), ((Attribute[]) (null)), 54);
        // Test data for testing the ClassWriter constructor
        ClassReader classReader = new ClassReader("org.apache.commons.io.filefilter.WildcardFilter");
        ClassWriter classWriter = new ClassWriter(-2897, ((int) (Math.pow(10, 3))));
        classReader.accept(((ClassVisitor) (classWriter)), ((Attribute[]) (null)), 54);
        // Test data for testing the accept() method with a non-null ClassVisitor parameter
        ClassReader classReader = new ClassReader("org.apache.commons.io.filefilter.WildcardFilter");
        ClassWriter classWriter = new ClassWriter(-2897);
        classReader.accept(((ClassVisitor) (classWriter)), ((Attribute[]) (null)), 54);
        // Test data for testing the accept() method with a null Attribute array parameter
        ClassReader classReader = new ClassReader("org.apache.commons.io.filefilter.WildcardFilter");
        ClassWriter classWriter = new ClassWriter(-2897);
        classReader.accept(((ClassVisitor) (classWriter)), ((Attribute[]) (null)), 54);
        // Test data for testing the accept() method with a non-null Attribute array parameter
        ClassReader classReader = new ClassReader("org.apache.commons.io.filefilter.WildcardFilter");
        ClassWriter classWriter = new ClassWriter(-2897);
        classReader.accept(((ClassVisitor) (classWriter)), ((Attribute[]) (null)), 54);
    }
}
statement is: classReader.accept(((ClassVisitor) (classWriter)), ((Attribute[]) (null)), 54), class spoon.support.reflect.code.CtInvocationImpl
invocation is: classReader.accept(((ClassVisitor) (classWriter)), ((Attribute[]) (null)), 54) target is: classReader method is: accept(ClassVisitor,Attribute[],int)
statement is: // Test data for testing the ClassWriter constructor
ClassReader classReader = new ClassReader("org.apache.commons.io.filefilter.WildcardFilter"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: ClassWriter classWriter = new ClassWriter(-2897, ((int) (Math.pow(10, 3)))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: classReader.accept(((ClassVisitor) (classWriter)), ((Attribute[]) (null)), 54), class spoon.support.reflect.code.CtInvocationImpl
invocation is: classReader.accept(((ClassVisitor) (classWriter)), ((Attribute[]) (null)), 54) target is: classReader method is: accept(ClassVisitor,Attribute[],int)
source statement: wheel.asm.ClassReader(Ljava/lang/String;)V callee: VariableReference: Statement 0, type wheel.asm.ClassReaderindex is: 1
Matched Method is: accept(Lwheel/asm/ClassVisitor;[Lwheel/asm/Attribute;I)V
i 1 Parameters size() 1 Num of Method Parameters: 3
i 2 Parameters size() 1 Num of Method Parameters: 3
statement is: // Test data for testing the accept() method with a non-null ClassVisitor parameter
ClassReader classReader = new ClassReader("org.apache.commons.io.filefilter.WildcardFilter"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: ClassWriter classWriter = new ClassWriter(-2897), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: classReader.accept(((ClassVisitor) (classWriter)), ((Attribute[]) (null)), 54), class spoon.support.reflect.code.CtInvocationImpl
invocation is: classReader.accept(((ClassVisitor) (classWriter)), ((Attribute[]) (null)), 54) target is: classReader method is: accept(ClassVisitor,Attribute[],int)
source statement: wheel.asm.ClassReader(Ljava/lang/String;)V callee: VariableReference: Statement 0, type wheel.asm.ClassReaderindex is: 7
Matched Method is: accept(Lwheel/asm/ClassVisitor;[Lwheel/asm/Attribute;I)V
i 2 Parameters size() 2 Num of Method Parameters: 3
statement is: // Test data for testing the accept() method with a null Attribute array parameter
ClassReader classReader = new ClassReader("org.apache.commons.io.filefilter.WildcardFilter"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: ClassWriter classWriter = new ClassWriter(-2897), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: classReader.accept(((ClassVisitor) (classWriter)), ((Attribute[]) (null)), 54), class spoon.support.reflect.code.CtInvocationImpl
invocation is: classReader.accept(((ClassVisitor) (classWriter)), ((Attribute[]) (null)), 54) target is: classReader method is: accept(ClassVisitor,Attribute[],int)
source statement: wheel.asm.ClassReader(Ljava/lang/String;)V callee: VariableReference: Statement 0, type wheel.asm.ClassReaderindex is: 13
Matched Method is: accept(Lwheel/asm/ClassVisitor;[Lwheel/asm/Attribute;I)V
i 2 Parameters size() 2 Num of Method Parameters: 3
statement is: // Test data for testing the accept() method with a non-null Attribute array parameter
ClassReader classReader = new ClassReader("org.apache.commons.io.filefilter.WildcardFilter"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: ClassWriter classWriter = new ClassWriter(-2897), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: classReader.accept(((ClassVisitor) (classWriter)), ((Attribute[]) (null)), 54), class spoon.support.reflect.code.CtInvocationImpl
invocation is: classReader.accept(((ClassVisitor) (classWriter)), ((Attribute[]) (null)), 54) target is: classReader method is: accept(ClassVisitor,Attribute[],int)
source statement: wheel.asm.ClassReader(Ljava/lang/String;)V callee: VariableReference: Statement 0, type wheel.asm.ClassReaderindex is: 19
Matched Method is: accept(Lwheel/asm/ClassVisitor;[Lwheel/asm/Attribute;I)V
i 2 Parameters size() 2 Num of Method Parameters: 3
TestCase is: String string = "org.apache.commons.io.filefilter.WildcardFilter";
ClassReader classReader = new ClassReader(string);
int _int = 54;
Attribute[] attributeArray = null;
int _int = null;
((ClassReader) string).accept((ClassVisitor) _int, attributeArray, _int);
String string = "org.apache.commons.io.filefilter.WildcardFilter";
ClassReader classReader = new ClassReader(string);
ClassWriter classWriter = new ClassWriter((-2897));
int _int = 54;
int _int = null;
((ClassReader) string).accept((ClassVisitor) classWriter, (Attribute[]) _int, _int);
String string = "org.apache.commons.io.filefilter.WildcardFilter";
ClassReader classReader = new ClassReader(string);
ClassWriter classWriter = new ClassWriter((-2897));
int _int = 54;
int _int = null;
((ClassReader) string).accept((ClassVisitor) classWriter, (Attribute[]) _int, _int);
String string = "org.apache.commons.io.filefilter.WildcardFilter";
ClassReader classReader = new ClassReader(string);
ClassWriter classWriter = new ClassWriter((-2897));
int _int = 54;
int _int = null;
((ClassReader) string).accept((ClassVisitor) classWriter, (Attribute[]) _int, _int);

statement is: wheel.asm.ClassReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class wheel.asm.ClassReader
statement code is: ClassReader classReader = new ClassReader("org.apache.commons.io.filefilter.WildcardFilter")
statement is: wheel.asm.ClassWriter(I)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class wheel.asm.ClassWriter
statement code is: ClassWriter classWriter = new ClassWriter(1)
statement is: org.evosuite.testcase.statements.ArrayStatement@f73de8 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [Lwheel.asm.Attribute;
statement code is: Attribute[] attributeArray = new Attribute[9]
statement is: accept(Lwheel/asm/ClassVisitor;[Lwheel/asm/Attribute;I)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: classReader.accept((ClassVisitor) arg0, arg1, (-1))
test data is: ClassReader classReader = new ClassReader("org.apache.commons.io.filefilter.WildcardFilter");
ClassWriter classWriter = new ClassWriter(1);
Attribute[] attributeArray = new Attribute[9];
classReader.accept((ClassVisitor) classWriter, attributeArray, (-1));

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Attribute[] attributeArray = new Attribute[9];
        classReader.accept(((ClassVisitor) (classWriter)), attributeArray, -1);
        // Improved test data
        classReader = new ClassReader("org.apache.commons.io.filefilter.NameFileFilter");
        classWriter = new ClassWriter(1);
        attributeArray = new Attribute[9];
        classReader.accept(((ClassVisitor) (classWriter)), attributeArray, -1);
        // Improved test data
        classReader = new ClassReader("org.apache.commons.io.filefilter.PrefixFileFilter");
        classWriter = new ClassWriter(1);
        attributeArray = new Attribute[9];
        classReader.accept(((ClassVisitor) (classWriter)), attributeArray, -1);
        // Improved test data
        classReader = new ClassReader("org.apache.commons.io.filefilter.RegexFileFilter");
        classWriter = new ClassWriter(1);
        attributeArray = new Attribute[9];
        classReader.accept(((ClassVisitor) (classWriter)), attributeArray, -1);
        // Improved test data
        classReader = new ClassReader("org.apache.commons.io.filefilter.SuffixFileFilter");
        classWriter = new ClassWriter(1);
        attributeArray = new Attribute[9];
    }
}
statement is: Attribute[] attributeArray = new Attribute[9], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [9] Ct is: Attribute[] attributeArray = new Attribute[9] isAssignment: false Array: new Attribute[9] Elements: []
lengths: [9] [9]
Their type are: class [Lwheel.asm.Attribute; Attribute[]
statement is: classReader.accept(((ClassVisitor) (classWriter)), attributeArray, -1), class spoon.support.reflect.code.CtInvocationImpl
invocation is: classReader.accept(((ClassVisitor) (classWriter)), attributeArray, -1) target is: classReader method is: accept(ClassVisitor,Attribute[],int)
statement is: // Improved test data
classReader = new ClassReader("org.apache.commons.io.filefilter.NameFileFilter"), class spoon.support.reflect.code.CtAssignmentImpl
statement is: classWriter = new ClassWriter(1), class spoon.support.reflect.code.CtAssignmentImpl
statement is: attributeArray = new Attribute[9], class spoon.support.reflect.code.CtAssignmentImpl
statement is: classReader.accept(((ClassVisitor) (classWriter)), attributeArray, -1), class spoon.support.reflect.code.CtInvocationImpl
invocation is: classReader.accept(((ClassVisitor) (classWriter)), attributeArray, -1) target is: classReader method is: accept(ClassVisitor,Attribute[],int)
statement is: // Improved test data
classReader = new ClassReader("org.apache.commons.io.filefilter.PrefixFileFilter"), class spoon.support.reflect.code.CtAssignmentImpl
statement is: classWriter = new ClassWriter(1), class spoon.support.reflect.code.CtAssignmentImpl
statement is: attributeArray = new Attribute[9], class spoon.support.reflect.code.CtAssignmentImpl
statement is: classReader.accept(((ClassVisitor) (classWriter)), attributeArray, -1), class spoon.support.reflect.code.CtInvocationImpl
invocation is: classReader.accept(((ClassVisitor) (classWriter)), attributeArray, -1) target is: classReader method is: accept(ClassVisitor,Attribute[],int)
statement is: // Improved test data
classReader = new ClassReader("org.apache.commons.io.filefilter.RegexFileFilter"), class spoon.support.reflect.code.CtAssignmentImpl
statement is: classWriter = new ClassWriter(1), class spoon.support.reflect.code.CtAssignmentImpl
statement is: attributeArray = new Attribute[9], class spoon.support.reflect.code.CtAssignmentImpl
statement is: classReader.accept(((ClassVisitor) (classWriter)), attributeArray, -1), class spoon.support.reflect.code.CtInvocationImpl
invocation is: classReader.accept(((ClassVisitor) (classWriter)), attributeArray, -1) target is: classReader method is: accept(ClassVisitor,Attribute[],int)
statement is: // Improved test data
classReader = new ClassReader("org.apache.commons.io.filefilter.SuffixFileFilter"), class spoon.support.reflect.code.CtAssignmentImpl
statement is: classWriter = new ClassWriter(1), class spoon.support.reflect.code.CtAssignmentImpl
statement is: attributeArray = new Attribute[9], class spoon.support.reflect.code.CtAssignmentImpl
TestCase is: Attribute[] attributeArray = new Attribute[9];

statement is: wheel.asm.ClassReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class wheel.asm.ClassReader
statement code is: ClassReader classReader = new ClassReader("wheel.asm.Opcodes")
statement is: org.evosuite.testcase.statements.ArrayStatement@4638fadc type is: class org.evosuite.testcase.statements.ArrayStatement return type class [C
statement code is: char[] charArray = new char[1]
statement is: wheel.asm.ClassWriter(Lwheel/asm/ClassReader;I)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class wheel.asm.ClassWriter
statement code is: ClassWriter classWriter = new ClassWriter(arg0, 11)
statement is: readUTF8(I[C)Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.lang.String
statement code is: String readUTF8 = classReader.readUTF8(11, arg1)
test data is: ClassReader classReader = new ClassReader("wheel.asm.Opcodes");
char[] charArray = new char[1];
ClassWriter classWriter = new ClassWriter(classReader, 11);
classReader.readUTF8(11, charArray);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        char[] charArray = new char[1];
        ClassWriter classWriter = new ClassWriter(classReader, 0xcafebabe);
        classReader.readUTF8(0xcafebabe, charArray);
    }
}
statement is: char[] charArray = new char[1], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [1] Ct is: char[] charArray = new char[1] isAssignment: false Array: new char[1] Elements: []
lengths: [1] [1]
Their type are: class [C char[]
statement is: ClassWriter classWriter = new ClassWriter(classReader, 0xcafebabe), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: classReader.readUTF8(0xcafebabe, charArray), class spoon.support.reflect.code.CtInvocationImpl
invocation is: classReader.readUTF8(0xcafebabe, charArray) target is: classReader method is: readUTF8(int,char[])
TestCase is: char[] charArray = new char[1];
int _int = (-889275714);
ClassWriter classWriter = new ClassWriter((ClassReader) _int, 11);

statement is: wheel.asm.ClassReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class wheel.asm.ClassReader
statement code is: ClassReader classReader = new ClassReader("wheel.asm.Opcodes")
statement is: readConst(I[C)Ljava/lang/Object; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.lang.Integer
statement code is: Integer readConst = (Integer)classReader.readConst(126, (char[]) null)
test data is: ClassReader classReader = new ClassReader("wheel.asm.Opcodes");
classReader.readConst(126, (char[]) null);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        classReader.readConst(19, ((char[]) (null)));
    }
}
statement is: classReader.readConst(19, ((char[]) (null))), class spoon.support.reflect.code.CtInvocationImpl
invocation is: classReader.readConst(19, ((char[]) (null))) target is: classReader method is: readConst(int,char[])
statement is: wheel.asm.ClassReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class wheel.asm.ClassReader
statement code is: ClassReader classReader = new ClassReader("wheel.asm.Opcodes")
statement is: getItem(I)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int item = classReader.getItem(2)
test data is: ClassReader classReader = new ClassReader("wheel.asm.Opcodes");
classReader.getItem(2);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        classReader.getItem(15);
    }
}
statement is: classReader.getItem(15), class spoon.support.reflect.code.CtInvocationImpl
invocation is: classReader.getItem(15) target is: classReader method is: getItem(int)
statement is: wheel.asm.ClassReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class wheel.asm.ClassReader
statement code is: ClassReader classReader = new ClassReader("wheel.asm.Opcodes")
statement is: readByte(I)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int readByte = classReader.readByte(0)
test data is: ClassReader classReader = new ClassReader("wheel.asm.Opcodes");
classReader.readByte(0);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        classReader.readByte(0xcafebabe);
    }
}
statement is: classReader.readByte(0xcafebabe), class spoon.support.reflect.code.CtInvocationImpl
invocation is: classReader.readByte(0xcafebabe) target is: classReader method is: readByte(int)
statement is: wheel.asm.ClassReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class wheel.asm.ClassReader
statement code is: ClassReader classReader = new ClassReader("wheel.asm.Opcodes")
statement is: org.evosuite.testcase.statements.ArrayStatement@bcbeb33b type is: class org.evosuite.testcase.statements.ArrayStatement return type class [C
statement code is: char[] charArray = new char[9]
statement is: readConst(I[C)Ljava/lang/Object; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.lang.String
statement code is: String readConst = (String)classReader.readConst(16, arg1)
test data is: ClassReader classReader = new ClassReader("wheel.asm.Opcodes");
char[] charArray = new char[9];
classReader.readConst(16, charArray);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        char[] charArray = new char[9];
        classReader.readConst(0x10, charArray);
    }
}
statement is: char[] charArray = new char[9], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [9] Ct is: char[] charArray = new char[9] isAssignment: false Array: new char[9] Elements: []
lengths: [9] [9]
Their type are: class [C char[]
statement is: classReader.readConst(0x10, charArray), class spoon.support.reflect.code.CtInvocationImpl
invocation is: classReader.readConst(0x10, charArray) target is: classReader method is: readConst(int,char[])
TestCase is: char[] charArray = new char[9];

statement is: wheel.asm.ClassReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class wheel.asm.ClassReader
statement code is: ClassReader classReader = new ClassReader("org.apache.commons.io.filefilter.EmptyFileFilter")
statement is: readInt(I)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int readInt = classReader.readInt(33)
test data is: ClassReader classReader = new ClassReader("org.apache.commons.io.filefilter.EmptyFileFilter");
classReader.readInt(33);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        classReader.readInt(10);
    }
}
statement is: classReader.readInt(10), class spoon.support.reflect.code.CtInvocationImpl
invocation is: classReader.readInt(10) target is: classReader method is: readInt(int)
statement is: wheel.asm.ClassReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class wheel.asm.ClassReader
statement code is: ClassReader classReader = new ClassReader("wheel.asm.Opcodes")
statement is: readLong(I)J type is: class org.evosuite.testcase.statements.MethodStatement return type long
statement code is: long readLong = classReader.readLong(2897)
test data is: ClassReader classReader = new ClassReader("wheel.asm.Opcodes");
classReader.readLong(2897);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        classReader.readLong(1234567890);
    }
}
statement is: classReader.readLong(1234567890), class spoon.support.reflect.code.CtInvocationImpl
invocation is: classReader.readLong(1234567890) target is: classReader method is: readLong(int)
statement is: wheel.asm.ClassReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class wheel.asm.ClassReader
statement code is: ClassReader classReader = new ClassReader("wheel.asm.Opcodes")
statement is: readShort(I)S type is: class org.evosuite.testcase.statements.MethodStatement return type short
statement code is: short readShort = classReader.readShort(1)
test data is: ClassReader classReader = new ClassReader("wheel.asm.Opcodes");
classReader.readShort(1);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        classReader.readShort(0xca5e);
    }
}
statement is: classReader.readShort(0xca5e), class spoon.support.reflect.code.CtInvocationImpl
invocation is: classReader.readShort(0xca5e) target is: classReader method is: readShort(int)
statement is: wheel.asm.ClassReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class wheel.asm.ClassReader
statement code is: ClassReader classReader = new ClassReader("wheel.asm.Opcodes")
statement is: org.evosuite.testcase.statements.ArrayStatement@83844f99 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [C
statement code is: char[] charArray = new char[7]
statement is: readUTF8(I[C)Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.lang.String
statement code is: String readUTF8 = classReader.readUTF8(59, arg1)
test data is: ClassReader classReader = new ClassReader("wheel.asm.Opcodes");
char[] charArray = new char[7];
classReader.readUTF8(59, charArray);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        char[] charArray = new char[7];
        classReader.readUTF8(59, "Hello, world!");
    }
}
statement is: char[] charArray = new char[7], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [7] Ct is: char[] charArray = new char[7] isAssignment: false Array: new char[7] Elements: []
lengths: [7] [7]
Their type are: class [C char[]
statement is: classReader.readUTF8(59, "Hello, world!"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: classReader.readUTF8(59, "Hello, world!") target is: classReader method is: readUTF8(int,java.lang.String)
TestCase is: char[] charArray = new char[7];

statement is: wheel.asm.ClassReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class wheel.asm.ClassReader
statement code is: ClassReader classReader = new ClassReader("wheel.asm.Opcodes")
statement is: wheel.asm.ClassReader([B)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class wheel.asm.ClassReader
statement code is: ClassReader classReader = new ClassReader(classReader.b)
test data is: ClassReader classReader = new ClassReader("wheel.asm.Opcodes");
ClassReader classReader = new ClassReader(classReader.b);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Changed the primitive values to illustrate a more realistic scenario
        int b = 20;// This is an arbitrary value that represents a valid integer value

        double d = 3.14;// This is an arbitrary value that represents a valid double value

        String s = "Hello, World!";// This is an arbitrary string that represents a valid character sequence

        char c = 'a';// This is an arbitrary character that represents a valid ASCII character }}

    }
}
statement is: // Changed the primitive values to illustrate a more realistic scenario
int b = 20// This is an arbitrary value that represents a valid integer value
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: double d = 3.14// This is an arbitrary value that represents a valid double value
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: String s = "Hello, World!"// This is an arbitrary string that represents a valid character sequence
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: char c = 'a'// This is an arbitrary character that represents a valid ASCII character }}
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
* this is vulnerable: int _int = 20
* this is vulnerable: double _double = 3.14
* this is vulnerable: String string = "Hello, World!"
* this is vulnerable: char _char = 'a'
TestCase is: int _int = 20;
double _double = 3.14;
String string = "Hello, World!";
char _char = 'a';

statement is: wheel.asm.ClassReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class wheel.asm.ClassReader
statement code is: ClassReader classReader = new ClassReader("wheel.asm.Opcodes")
statement is: wheel.asm.ClassWriter(I)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class wheel.asm.ClassWriter
statement code is: ClassWriter classWriter = new ClassWriter(2003)
statement is: copyPool(Lwheel/asm/ClassWriter;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: classReader.copyPool(arg0)
test data is: ClassReader classReader = new ClassReader("wheel.asm.Opcodes");
ClassWriter classWriter = new ClassWriter(2003);
classReader.copyPool(classWriter);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Improved test data
        int primitiveIntValue = 10;// Changed from 4 to 10 for better representation

        double primitiveDoubleValue = 3.14;// Changed from 2.71828 to 3.14 for better representation

        String stringValue = "hello";// Changed from "world" to "hello" for better representation

        char charValue = 'c';// Changed from 'a' to 'c' for better representation }}

    }
}
statement is: // Improved test data
int primitiveIntValue = 10// Changed from 4 to 10 for better representation
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: double primitiveDoubleValue = 3.14// Changed from 2.71828 to 3.14 for better representation
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: String stringValue = "hello"// Changed from "world" to "hello" for better representation
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: char charValue = 'c'// Changed from 'a' to 'c' for better representation }}
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
* this is vulnerable: int _int = 10
* this is vulnerable: double _double = 3.14
* this is vulnerable: String string = "hello"
* this is vulnerable: char _char = 'c'
TestCase is: int _int = 10;
double _double = 3.14;
String string = "hello";
char _char = 'c';

statement is: wheel.asm.ClassReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class wheel.asm.ClassReader
statement code is: ClassReader classReader = new ClassReader("org.apache.commons.io.filefilter.WildcardFilter")
statement is: readLabel(I[Lwheel/asm/Label;)Lwheel/asm/Label; type is: class org.evosuite.testcase.statements.MethodStatement return type class wheel.asm.Label
statement code is: Label readLabel = classReader.readLabel(70, (Label[]) null)
test data is: ClassReader classReader = new ClassReader("org.apache.commons.io.filefilter.WildcardFilter");
classReader.readLabel(70, (Label[]) null);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        classReader.readLabel(70, new Label[]{ new Label("*.txt"), new Label("*.doc") });
    }
}
statement is: classReader.readLabel(70, new Label[]{ new Label("*.txt"), new Label("*.doc") }), class spoon.support.reflect.code.CtInvocationImpl
invocation is: classReader.readLabel(70, new Label[]{ new Label("*.txt"), new Label("*.doc") }) target is: classReader method is: readLabel(int,Label[])
* test suite isTestSuite: 52
Test 0: 
ClassReader classReader = new ClassReader("wheel.asm.Opcodes");
classReader.getAccess();
Test 1: 
ClassReader classReader = new ClassReader("wheel.asm.Opcodes");
classReader.readByte(4);
Test 2: 
ClassReader classReader = new ClassReader("wheel.asm.Opcodes");
classReader.readLong(1);
Test 3: 
ClassReader classReader = new ClassReader("wheel.asm.Opcodes");
classReader.getClassName();
Test 4: 
ClassReader classReader = new ClassReader("org.apache.commons.io.filefilter.WildcardFilter");
ClassReader classReader = null;
try {
  classReader = new ClassReader(classReader.b, 4, 1121);
  fail("Expecting exception: ArrayIndexOutOfBoundsException");

} catch(ArrayIndexOutOfBoundsException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 5: 
ClassReader classReader = new ClassReader("wheel.asm.Opcodes");
ClassReader classReader = null;
try {
  classReader = new ClassReader(classReader.b, 71, 3942);
  fail("Expecting exception: ArrayIndexOutOfBoundsException");

} catch(ArrayIndexOutOfBoundsException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 6: 
ClassReader classReader = new ClassReader("org.apache.commons.io.filefilter.EmptyFileFilter");
classReader.getSuperName();
Test 7: 
ClassReader classReader = new ClassReader("wheel.asm.Opcodes");
classReader.getInterfaces();
Test 8: 
ClassReader classReader = new ClassReader("org.apache.commons.io.filefilter.WildcardFilter");
ClassWriter classWriter = new ClassWriter(classReader, (-3597));
Test 9: 
ClassReader classReader = new ClassReader("wheel.asm.Opcodes");
ClassReader classReader = new ClassReader(classReader.b, 3040, 4);
ClassWriter classWriter = null;
try {
  classWriter = new ClassWriter(classReader, 2);
  fail("Expecting exception: ArrayIndexOutOfBoundsException");

} catch(ArrayIndexOutOfBoundsException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 10: 
ClassReader classReader = null;
try {
  classReader = new ClassReader("EnclosingMethod");
  fail("Expecting exception: IOException");

} catch(Throwable e) {
   //
   // Class not found
   //
   verifyException("wheel.asm.ClassReader", e);
}

Test 11: 
byte[] byteArray = new byte[0];
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
ClassReader classReader = null;
try {
  classReader = new ClassReader(byteArrayInputStream);
  fail("Expecting exception: ArrayIndexOutOfBoundsException");

} catch(ArrayIndexOutOfBoundsException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 12: 
ClassReader classReader = new ClassReader("wheel.asm.Item");
ClassWriter classWriter = new ClassWriter(2147483645);
classReader.accept((ClassVisitor) classWriter, 2);
char[] charArray = new char[4];
classReader.readClass(76, charArray);
Test 13: 
ClassReader classReader = new ClassReader("wheel.asm.Opcodes");
char[] charArray = new char[12];
// Undeclared exception!
try { 
  classReader.readUTF8(4, charArray);
  fail("Expecting exception: ArrayIndexOutOfBoundsException");

} catch(ArrayIndexOutOfBoundsException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 14: 
ClassReader classReader = new ClassReader("org.apache.commons.io.filefilter.EmptyFileFilter");
char[] charArray = new char[2];
// Undeclared exception!
try { 
  classReader.readConst(15, charArray);
  fail("Expecting exception: ArrayIndexOutOfBoundsException");

} catch(ArrayIndexOutOfBoundsException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 15: 
ClassReader classReader = new ClassReader("wheel.asm.Opcodes");
// Undeclared exception!
try { 
  classReader.readConst(1, (char[]) null);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 16: 
ClassReader classReader = new ClassReader("wheel.asm.Opcodes");
classReader.readShort(15);
Test 17: 
ClassReader classReader = new ClassReader("org.apache.commons.io.filefilter.WildcardFilter");
classReader.readInt(1);
Test 18: 
ClassReader classReader = new ClassReader("org.apache.commons.io.filefilter.WildcardFilter");
char[] charArray = new char[1];
// Undeclared exception!
try { 
  classReader.readClass(21, charArray);
  fail("Expecting exception: ArrayIndexOutOfBoundsException");

} catch(ArrayIndexOutOfBoundsException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 19: 
ClassReader classReader = new ClassReader("org.apache.commons.io.filefilter.WildcardFilter");
classReader.readUnsignedShort(33);
Test 20: 
ClassReader classReader = new ClassReader("org.apache.commons.io.filefilter.EmptyFileFilter");
ClassWriter classWriter = new ClassWriter(15);
Attribute[] attributeArray = new Attribute[0];
classReader.accept((ClassVisitor) classWriter, attributeArray, 4552);
Test 21: 
ClassReader classReader = new ClassReader("org.apache.commons.io.filefilter.EmptyFileFilter");
ClassWriter classWriter = new ClassWriter(classReader, 1);
classReader.accept((ClassVisitor) classWriter, (Attribute[]) null, 1155);
Test 22: 
ClassReader classReader = new ClassReader("wheel.asm.Opcodes");
ClassWriter classWriter = new ClassWriter(3040);
classReader.accept((ClassVisitor) classWriter, (Attribute[]) null, 2);
Test 23: 
ClassReader classReader = new ClassReader("org.apache.commons.io.filefilter.WildcardFilter");
ClassWriter classWriter = new ClassWriter((-2897));
classReader.accept((ClassVisitor) classWriter, (Attribute[]) null, 54);
Test 24: 
ClassReader classReader = new ClassReader("org.apache.commons.io.filefilter.WildcardFilter");
ClassWriter classWriter = new ClassWriter(1);
Attribute[] attributeArray = new Attribute[9];
classReader.accept((ClassVisitor) classWriter, attributeArray, (-1));
Test 25: 
ClassReader classReader = new ClassReader("wheel.asm.Opcodes");
char[] charArray = new char[1];
ClassWriter classWriter = new ClassWriter(classReader, 11);
classReader.readUTF8(11, charArray);
Test 26: 
ClassReader classReader = new ClassReader("wheel.asm.Opcodes");
classReader.readConst(126, (char[]) null);
Test 27: 
ClassReader classReader = new ClassReader("wheel.asm.Opcodes");
classReader.getItem(2);
Test 28: 
ClassReader classReader = new ClassReader("wheel.asm.Opcodes");
classReader.readByte(0);
Test 29: 
ClassReader classReader = new ClassReader("wheel.asm.Opcodes");
char[] charArray = new char[9];
classReader.readConst(16, charArray);
Test 30: 
ClassReader classReader = new ClassReader("org.apache.commons.io.filefilter.EmptyFileFilter");
classReader.readInt(33);
Test 31: 
ClassReader classReader = new ClassReader("wheel.asm.Opcodes");
classReader.readLong(2897);
Test 32: 
ClassReader classReader = new ClassReader("wheel.asm.Opcodes");
classReader.readShort(1);
Test 33: 
ClassReader classReader = new ClassReader("wheel.asm.Opcodes");
char[] charArray = new char[7];
classReader.readUTF8(59, charArray);
Test 34: 
ClassReader classReader = new ClassReader("wheel.asm.Opcodes");
ClassReader classReader = new ClassReader(classReader.b);
Test 35: 
ClassReader classReader = new ClassReader("wheel.asm.Opcodes");
ClassWriter classWriter = new ClassWriter(2003);
classReader.copyPool(classWriter);
Test 36: 
ClassReader classReader = new ClassReader("org.apache.commons.io.filefilter.WildcardFilter");
// Undeclared exception!
try { 
  classReader.readLabel(70, (Label[]) null);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 37: 

Test 38: 
ClassReader classReader = new ClassReader("EnclosingMethod");

Test 39: 
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream((byte[]) "This is a test string.");

Test 40: 
char[] charArray = new char[4];

Test 41: 
char[] charArray = new char[12];

Test 42: 
char[] charArray = new char[2];

Test 43: 
char[] charArray = new char[1];
char[] charArray = new char[1];
char[] charArray = new char[1];
char[] charArray = new char[1];

Test 44: 
Attribute[] attributeArray = new Attribute[0];

Test 45: 
String string = "org.apache.commons.io.filefilter.WildcardFilter";
ClassReader classReader = new ClassReader("org.apache.commons.io.filefilter.WildcardFilter");
((ClassReader)"org.apache.commons.io.filefilter.WildcardFilter").accept((ClassVisitor) 54, (Attribute[]) null, (int) (Integer) null);
String string = "org.apache.commons.io.filefilter.WildcardFilter";
ClassReader classReader = new ClassReader(string);
ClassWriter classWriter = new ClassWriter((-2897));
int _int = 54;
int _int = null;
((ClassReader) string).accept((ClassVisitor) classWriter, (Attribute[]) _int, _int);
String string = "org.apache.commons.io.filefilter.WildcardFilter";
ClassReader classReader = new ClassReader(string);
ClassWriter classWriter = new ClassWriter((-2897));
int _int = 54;
int _int = null;
((ClassReader) string).accept((ClassVisitor) classWriter, (Attribute[]) _int, _int);
String string = "org.apache.commons.io.filefilter.WildcardFilter";
ClassReader classReader = new ClassReader(string);
ClassWriter classWriter = new ClassWriter((-2897));
int _int = 54;
int _int = null;
((ClassReader) string).accept((ClassVisitor) classWriter, (Attribute[]) _int, _int);

Test 46: 
Attribute[] attributeArray = new Attribute[9];

Test 47: 
char[] charArray = new char[1];
ClassWriter classWriter = new ClassWriter((ClassReader) (-889275714), 11);

Test 48: 
char[] charArray = new char[9];

Test 49: 
char[] charArray = new char[7];

Test 50: 

Test 51: 


* Generated after the refinement and before minimization 52 tests with total length 129
* test suite isTestSuite: 52
Test 0: 
ClassReader classReader = new ClassReader("wheel.asm.Opcodes");
classReader.getAccess();
Test 1: 
ClassReader classReader = new ClassReader("wheel.asm.Opcodes");
classReader.readByte(4);
Test 2: 
ClassReader classReader = new ClassReader("wheel.asm.Opcodes");
classReader.readLong(1);
Test 3: 
ClassReader classReader = new ClassReader("wheel.asm.Opcodes");
classReader.getClassName();
Test 4: 
ClassReader classReader = new ClassReader("org.apache.commons.io.filefilter.WildcardFilter");
ClassReader classReader = null;
try {
  classReader = new ClassReader(classReader.b, 4, 1121);
  fail("Expecting exception: ArrayIndexOutOfBoundsException");

} catch(ArrayIndexOutOfBoundsException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 5: 
ClassReader classReader = new ClassReader("wheel.asm.Opcodes");
ClassReader classReader = null;
try {
  classReader = new ClassReader(classReader.b, 71, 3942);
  fail("Expecting exception: ArrayIndexOutOfBoundsException");

} catch(ArrayIndexOutOfBoundsException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 6: 
ClassReader classReader = new ClassReader("org.apache.commons.io.filefilter.EmptyFileFilter");
classReader.getSuperName();
Test 7: 
ClassReader classReader = new ClassReader("wheel.asm.Opcodes");
classReader.getInterfaces();
Test 8: 
ClassReader classReader = new ClassReader("org.apache.commons.io.filefilter.WildcardFilter");
ClassWriter classWriter = new ClassWriter(classReader, (-3597));
Test 9: 
ClassReader classReader = new ClassReader("wheel.asm.Opcodes");
ClassReader classReader = new ClassReader(classReader.b, 3040, 4);
ClassWriter classWriter = null;
try {
  classWriter = new ClassWriter(classReader, 2);
  fail("Expecting exception: ArrayIndexOutOfBoundsException");

} catch(ArrayIndexOutOfBoundsException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 10: 
ClassReader classReader = null;
try {
  classReader = new ClassReader("EnclosingMethod");
  fail("Expecting exception: IOException");

} catch(Throwable e) {
   //
   // Class not found
   //
   verifyException("wheel.asm.ClassReader", e);
}

Test 11: 
byte[] byteArray = new byte[0];
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
ClassReader classReader = null;
try {
  classReader = new ClassReader(byteArrayInputStream);
  fail("Expecting exception: ArrayIndexOutOfBoundsException");

} catch(ArrayIndexOutOfBoundsException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 12: 
ClassReader classReader = new ClassReader("wheel.asm.Item");
ClassWriter classWriter = new ClassWriter(2147483645);
classReader.accept((ClassVisitor) classWriter, 2);
char[] charArray = new char[4];
classReader.readClass(76, charArray);
Test 13: 
ClassReader classReader = new ClassReader("wheel.asm.Opcodes");
char[] charArray = new char[12];
// Undeclared exception!
try { 
  classReader.readUTF8(4, charArray);
  fail("Expecting exception: ArrayIndexOutOfBoundsException");

} catch(ArrayIndexOutOfBoundsException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 14: 
ClassReader classReader = new ClassReader("org.apache.commons.io.filefilter.EmptyFileFilter");
char[] charArray = new char[2];
// Undeclared exception!
try { 
  classReader.readConst(15, charArray);
  fail("Expecting exception: ArrayIndexOutOfBoundsException");

} catch(ArrayIndexOutOfBoundsException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 15: 
ClassReader classReader = new ClassReader("wheel.asm.Opcodes");
// Undeclared exception!
try { 
  classReader.readConst(1, (char[]) null);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 16: 
ClassReader classReader = new ClassReader("wheel.asm.Opcodes");
classReader.readShort(15);
Test 17: 
ClassReader classReader = new ClassReader("org.apache.commons.io.filefilter.WildcardFilter");
classReader.readInt(1);
Test 18: 
ClassReader classReader = new ClassReader("org.apache.commons.io.filefilter.WildcardFilter");
char[] charArray = new char[1];
// Undeclared exception!
try { 
  classReader.readClass(21, charArray);
  fail("Expecting exception: ArrayIndexOutOfBoundsException");

} catch(ArrayIndexOutOfBoundsException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 19: 
ClassReader classReader = new ClassReader("org.apache.commons.io.filefilter.WildcardFilter");
classReader.readUnsignedShort(33);
Test 20: 
ClassReader classReader = new ClassReader("org.apache.commons.io.filefilter.EmptyFileFilter");
ClassWriter classWriter = new ClassWriter(15);
Attribute[] attributeArray = new Attribute[0];
classReader.accept((ClassVisitor) classWriter, attributeArray, 4552);
Test 21: 
ClassReader classReader = new ClassReader("org.apache.commons.io.filefilter.EmptyFileFilter");
ClassWriter classWriter = new ClassWriter(classReader, 1);
classReader.accept((ClassVisitor) classWriter, (Attribute[]) null, 1155);
Test 22: 
ClassReader classReader = new ClassReader("wheel.asm.Opcodes");
ClassWriter classWriter = new ClassWriter(3040);
classReader.accept((ClassVisitor) classWriter, (Attribute[]) null, 2);
Test 23: 
ClassReader classReader = new ClassReader("org.apache.commons.io.filefilter.WildcardFilter");
ClassWriter classWriter = new ClassWriter((-2897));
classReader.accept((ClassVisitor) classWriter, (Attribute[]) null, 54);
Test 24: 
ClassReader classReader = new ClassReader("org.apache.commons.io.filefilter.WildcardFilter");
ClassWriter classWriter = new ClassWriter(1);
Attribute[] attributeArray = new Attribute[9];
classReader.accept((ClassVisitor) classWriter, attributeArray, (-1));
Test 25: 
ClassReader classReader = new ClassReader("wheel.asm.Opcodes");
char[] charArray = new char[1];
ClassWriter classWriter = new ClassWriter(classReader, 11);
classReader.readUTF8(11, charArray);
Test 26: 
ClassReader classReader = new ClassReader("wheel.asm.Opcodes");
classReader.readConst(126, (char[]) null);
Test 27: 
ClassReader classReader = new ClassReader("wheel.asm.Opcodes");
classReader.getItem(2);
Test 28: 
ClassReader classReader = new ClassReader("wheel.asm.Opcodes");
classReader.readByte(0);
Test 29: 
ClassReader classReader = new ClassReader("wheel.asm.Opcodes");
char[] charArray = new char[9];
classReader.readConst(16, charArray);
Test 30: 
ClassReader classReader = new ClassReader("org.apache.commons.io.filefilter.EmptyFileFilter");
classReader.readInt(33);
Test 31: 
ClassReader classReader = new ClassReader("wheel.asm.Opcodes");
classReader.readLong(2897);
Test 32: 
ClassReader classReader = new ClassReader("wheel.asm.Opcodes");
classReader.readShort(1);
Test 33: 
ClassReader classReader = new ClassReader("wheel.asm.Opcodes");
char[] charArray = new char[7];
classReader.readUTF8(59, charArray);
Test 34: 
ClassReader classReader = new ClassReader("wheel.asm.Opcodes");
ClassReader classReader = new ClassReader(classReader.b);
Test 35: 
ClassReader classReader = new ClassReader("wheel.asm.Opcodes");
ClassWriter classWriter = new ClassWriter(2003);
classReader.copyPool(classWriter);
Test 36: 
ClassReader classReader = new ClassReader("org.apache.commons.io.filefilter.WildcardFilter");
// Undeclared exception!
try { 
  classReader.readLabel(70, (Label[]) null);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 37: 

Test 38: 
ClassReader classReader = new ClassReader("EnclosingMethod");

Test 39: 
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream((byte[]) "This is a test string.");

Test 40: 
char[] charArray = new char[4];

Test 41: 
char[] charArray = new char[12];

Test 42: 
char[] charArray = new char[2];

Test 43: 
char[] charArray = new char[1];
char[] charArray = new char[1];
char[] charArray = new char[1];
char[] charArray = new char[1];

Test 44: 
Attribute[] attributeArray = new Attribute[0];

Test 45: 
String string = "org.apache.commons.io.filefilter.WildcardFilter";
ClassReader classReader = new ClassReader("org.apache.commons.io.filefilter.WildcardFilter");
((ClassReader)"org.apache.commons.io.filefilter.WildcardFilter").accept((ClassVisitor) 54, (Attribute[]) null, (int) (Integer) null);
String string = "org.apache.commons.io.filefilter.WildcardFilter";
ClassReader classReader = new ClassReader(string);
ClassWriter classWriter = new ClassWriter((-2897));
int _int = 54;
int _int = null;
((ClassReader) string).accept((ClassVisitor) classWriter, (Attribute[]) _int, _int);
String string = "org.apache.commons.io.filefilter.WildcardFilter";
ClassReader classReader = new ClassReader(string);
ClassWriter classWriter = new ClassWriter((-2897));
int _int = 54;
int _int = null;
((ClassReader) string).accept((ClassVisitor) classWriter, (Attribute[]) _int, _int);
String string = "org.apache.commons.io.filefilter.WildcardFilter";
ClassReader classReader = new ClassReader(string);
ClassWriter classWriter = new ClassWriter((-2897));
int _int = 54;
int _int = null;
((ClassReader) string).accept((ClassVisitor) classWriter, (Attribute[]) _int, _int);

Test 46: 
Attribute[] attributeArray = new Attribute[9];

Test 47: 
char[] charArray = new char[1];
ClassWriter classWriter = new ClassWriter((ClassReader) (-889275714), 11);

Test 48: 
char[] charArray = new char[9];

Test 49: 
char[] charArray = new char[7];

Test 50: 

Test 51: 


* Minimizing test suite
* test suite isTestSuite: 37
Test 0: 
ClassReader classReader = new ClassReader("wheel.asm.Opcodes");
classReader.readShort(1);
Test 1: 
ClassReader classReader = new ClassReader("wheel.asm.Item");
ClassWriter classWriter = new ClassWriter(2147483645);
classReader.accept((ClassVisitor) classWriter, 2);
char[] charArray = new char[4];
classReader.readClass(76, charArray);
Test 2: 
ClassReader classReader = new ClassReader("wheel.asm.Opcodes");
classReader.getAccess();
Test 3: 
ClassReader classReader = new ClassReader("wheel.asm.Opcodes");
classReader.getItem(2);
Test 4: 
ClassReader classReader = new ClassReader("wheel.asm.Opcodes");
classReader.readByte(0);
Test 5: 
ClassReader classReader = new ClassReader("wheel.asm.Opcodes");
classReader.readLong(1);
Test 6: 
ClassReader classReader = new ClassReader("wheel.asm.Opcodes");
classReader.getClassName();
Test 7: 
ClassReader classReader = new ClassReader("org.apache.commons.io.filefilter.WildcardFilter");
ClassReader classReader = null;
try {
  classReader = new ClassReader(classReader.b, 4, 1121);
  fail("Expecting exception: ArrayIndexOutOfBoundsException");

} catch(ArrayIndexOutOfBoundsException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 8: 
ClassReader classReader = new ClassReader("wheel.asm.Opcodes");
ClassReader classReader = null;
try {
  classReader = new ClassReader(classReader.b, 71, 3942);
  fail("Expecting exception: ArrayIndexOutOfBoundsException");

} catch(ArrayIndexOutOfBoundsException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 9: 
ClassReader classReader = new ClassReader("org.apache.commons.io.filefilter.EmptyFileFilter");
classReader.getSuperName();
Test 10: 
ClassReader classReader = new ClassReader("wheel.asm.Opcodes");
classReader.getInterfaces();
Test 11: 
ClassReader classReader = new ClassReader("org.apache.commons.io.filefilter.WildcardFilter");
ClassWriter classWriter = new ClassWriter(classReader, (-3597));
Test 12: 
ClassReader classReader = new ClassReader("wheel.asm.Opcodes");
ClassWriter classWriter = new ClassWriter(2003);
classReader.copyPool(classWriter);
Test 13: 
ClassReader classReader = new ClassReader("wheel.asm.Opcodes");
ClassReader classReader = new ClassReader(classReader.b, 3040, 4);
ClassWriter classWriter = null;
try {
  classWriter = new ClassWriter(classReader, 2);
  fail("Expecting exception: ArrayIndexOutOfBoundsException");

} catch(ArrayIndexOutOfBoundsException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 14: 
ClassReader classReader = null;
try {
  classReader = new ClassReader("EnclosingMethod");
  fail("Expecting exception: IOException");

} catch(Throwable e) {
   //
   // Class not found
   //
   verifyException("wheel.asm.ClassReader", e);
}

Test 15: 
byte[] byteArray = new byte[0];
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
ClassReader classReader = null;
try {
  classReader = new ClassReader(byteArrayInputStream);
  fail("Expecting exception: ArrayIndexOutOfBoundsException");

} catch(ArrayIndexOutOfBoundsException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 16: 
ClassReader classReader = new ClassReader("org.apache.commons.io.filefilter.EmptyFileFilter");
ClassWriter classWriter = new ClassWriter(classReader, 1);
classReader.accept((ClassVisitor) classWriter, (Attribute[]) null, 1155);
Test 17: 
ClassReader classReader = new ClassReader("org.apache.commons.io.filefilter.EmptyFileFilter");
ClassWriter classWriter = new ClassWriter(15);
Attribute[] attributeArray = new Attribute[0];
classReader.accept((ClassVisitor) classWriter, attributeArray, 4552);
Test 18: 
ClassReader classReader = new ClassReader("wheel.asm.Opcodes");
ClassWriter classWriter = new ClassWriter(3040);
classReader.accept((ClassVisitor) classWriter, (Attribute[]) null, 2);
Test 19: 
ClassReader classReader = new ClassReader("org.apache.commons.io.filefilter.WildcardFilter");
ClassWriter classWriter = new ClassWriter((-2897));
classReader.accept((ClassVisitor) classWriter, (Attribute[]) null, 54);
Test 20: 
ClassReader classReader = new ClassReader("org.apache.commons.io.filefilter.WildcardFilter");
ClassWriter classWriter = new ClassWriter(1);
Attribute[] attributeArray = new Attribute[9];
classReader.accept((ClassVisitor) classWriter, attributeArray, (-1));
Test 21: 
ClassReader classReader = new ClassReader("org.apache.commons.io.filefilter.EmptyFileFilter");
char[] charArray = new char[2];
// Undeclared exception!
try { 
  classReader.readConst(15, charArray);
  fail("Expecting exception: ArrayIndexOutOfBoundsException");

} catch(ArrayIndexOutOfBoundsException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 22: 
ClassReader classReader = new ClassReader("wheel.asm.Opcodes");
char[] charArray = new char[12];
// Undeclared exception!
try { 
  classReader.readUTF8(4, charArray);
  fail("Expecting exception: ArrayIndexOutOfBoundsException");

} catch(ArrayIndexOutOfBoundsException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 23: 
ClassReader classReader = new ClassReader("wheel.asm.Opcodes");
// Undeclared exception!
try { 
  classReader.readConst(1, (char[]) null);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 24: 
ClassReader classReader = new ClassReader("org.apache.commons.io.filefilter.EmptyFileFilter");
classReader.readInt(33);
Test 25: 
ClassReader classReader = new ClassReader("org.apache.commons.io.filefilter.WildcardFilter");
char[] charArray = new char[1];
// Undeclared exception!
try { 
  classReader.readClass(21, charArray);
  fail("Expecting exception: ArrayIndexOutOfBoundsException");

} catch(ArrayIndexOutOfBoundsException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 26: 
ClassReader classReader = new ClassReader("org.apache.commons.io.filefilter.WildcardFilter");
classReader.readUnsignedShort(33);
Test 27: 
ClassReader classReader = new ClassReader("wheel.asm.Opcodes");
char[] charArray = new char[1];
ClassWriter classWriter = new ClassWriter(classReader, 11);
classReader.readUTF8(11, charArray);
Test 28: 
ClassReader classReader = new ClassReader("wheel.asm.Opcodes");
classReader.readConst(126, (char[]) null);
Test 29: 
ClassReader classReader = new ClassReader("wheel.asm.Opcodes");
classReader.readByte(4);
Test 30: 
ClassReader classReader = new ClassReader("wheel.asm.Opcodes");
char[] charArray = new char[9];
classReader.readConst(16, charArray);
Test 31: 
ClassReader classReader = new ClassReader("org.apache.commons.io.filefilter.WildcardFilter");
classReader.readInt(1);
Test 32: 
ClassReader classReader = new ClassReader("wheel.asm.Opcodes");
classReader.readLong(2897);
Test 33: 
ClassReader classReader = new ClassReader("wheel.asm.Opcodes");
classReader.readShort(15);
Test 34: 
ClassReader classReader = new ClassReader("wheel.asm.Opcodes");
char[] charArray = new char[7];
classReader.readUTF8(59, charArray);
Test 35: 
ClassReader classReader = new ClassReader("wheel.asm.Opcodes");
ClassReader classReader = new ClassReader(classReader.b);
Test 36: 
ClassReader classReader = new ClassReader("org.apache.commons.io.filefilter.WildcardFilter");
// Undeclared exception!
try { 
  classReader.readLabel(70, (Label[]) null);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}


* Going to analyze the coverage criteria
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 42%
* Total number of goals: 817
* Number of covered goals: 343
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 53%
* Total number of goals: 868
* Number of covered goals: 462
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 45%
* Total number of goals: 40
* Number of covered goals: 18
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 21
* Number of covered goals: 21
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 38%
* Total number of goals: 817
* Number of covered goals: 310
* Generated 37 tests with total length 93
* Resulting test suite's coverage: 55% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 30%
* Compiling and checking tests
Going to execute: removeTestsThatDoNotCompile
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: ClassReader classReader = new ClassReader("wheel.asm.Opcodes");
short readShort = classReader.readShort(1);
assertEquals((short) (-326), readShort);
assertEquals(3040, classReader.header);


** It was a parseable test case! 
refined test name is: testReadShortWithNegativeNumber
* Compiling Tests
refined test name is: testReadShortMethod
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: ClassReader classReader = new ClassReader("wheel.asm.Item");
ClassWriter arg0 = new ClassWriter(2147483645);
classReader.accept((ClassVisitor) arg0, 2);
char[] arg1 = new char[4];
String readClass = classReader.readClass(76, arg1);
assertEquals("java/lang/String", readClass);


** It was a parseable test case! 
refined test name is: testItemReadWrite
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: ClassReader classReader = new ClassReader("wheel.asm.Opcodes");
int access = classReader.getAccess();
assertEquals(1537, access);


** It was a parseable test case! 
refined test name is: testGetAccessReturnsExpectedValue
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: ClassReader classReader = new ClassReader("wheel.asm.Opcodes");
int item = classReader.getItem(2);
assertEquals(14, item);
assertEquals(3040, classReader.header);


** It was a parseable test case! 
refined test name is: testGetItemAndHeader
* Compiling Tests
refined test name is: testGetItemAndHeaderField
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: ClassReader classReader = new ClassReader("wheel.asm.Opcodes");
int readByte = classReader.readByte(0);
assertEquals(1537, classReader.getAccess());
assertEquals(202, readByte);


** It was a parseable test case! 
refined test name is: testReadByteWithAccessFlagOpcodes
* Compiling Tests
refined test name is: testReadByteMethod
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: ClassReader classReader = new ClassReader("wheel.asm.Opcodes");
long readLong = classReader.readLong(1);
assertEquals((-91551935198383615L), readLong);
assertEquals(3040, classReader.header);


** It was a parseable test case! 
refined test name is: testReadLongWithCorrectArgument
* Compiling Tests
refined test name is: testReadLongWithValidArgument
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: ClassReader classReader = new ClassReader("wheel.asm.Opcodes");
String className = classReader.getClassName();
assertEquals(1537, classReader.getAccess());
assertEquals("wheel/asm/Opcodes", className);


** It was a parseable test case! 
refined test name is: testClassReaderGetClassName
* Compiling Tests
refined test name is: testAccessFlagsAndClassName
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: ClassReader classReader = new ClassReader("org.apache.commons.io.filefilter.EmptyFileFilter");
assertEquals(703, classReader.header);

String superName = classReader.getSuperName();
assertNotNull(superName);
assertEquals("org/apache/commons/io/filefilter/AbstractFileFilter", superName);


** It was a parseable test case! 
refined test name is: testReadEmptyFileFilterHeader
* Compiling Tests
refined test name is: testReadHeaderAndSuperClass
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: ClassReader classReader = new ClassReader("wheel.asm.Opcodes");
String[] interfaces = classReader.getInterfaces();
assertEquals(3040, classReader.header);
assertEquals(0, interfaces.length);


** It was a parseable test case! 
refined test name is: testClassDoesNotImplementAnyInterfaces
* Compiling Tests
refined test name is: testClassDoesNotImplementAnyInterfaces
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: ClassReader arg0 = new ClassReader("org.apache.commons.io.filefilter.WildcardFilter");
ClassWriter classWriter = new ClassWriter(arg0, (-3597));
assertEquals(1, ClassWriter.COMPUTE_MAXS);


** It was a parseable test case! 
refined test name is: testComputeMaxS
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: ClassReader classReader = new ClassReader("wheel.asm.Opcodes");
ClassWriter arg0 = new ClassWriter(2003);
classReader.copyPool(arg0);
assertEquals(3040, classReader.header);


** It was a parseable test case! 
refined test name is: testCopyPool
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: ClassReader classReader = new ClassReader("wheel.asm.Opcodes");
ClassReader arg0 = new ClassReader(classReader.b, 3040, 4);
ClassWriter classWriter = null;
try {
  classWriter = new ClassWriter(arg0, 2);
  fail("Expecting exception: ArrayIndexOutOfBoundsException");

} catch(ArrayIndexOutOfBoundsException e) {
   //
   // 6400
   //
   verifyException("wheel.asm.ClassReader", e);
}


** It was a parseable test case! 
refined test name is: testArrayIndexOutOfBoundsException
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: ClassReader classReader = null;
try {
  classReader = new ClassReader("EnclosingMethod");
  fail("Expecting exception: IOException");

} catch(Throwable e) {
   //
   // Class not found
   //
   verifyException("wheel.asm.ClassReader", e);
}


** It was a parseable test case! 
refined test name is: testEnclosingMethodNotFound
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: ClassReader classReader = new ClassReader("org.apache.commons.io.filefilter.EmptyFileFilter");
ClassWriter arg0 = new ClassWriter(15);
Attribute[] arg1 = new Attribute[0];
classReader.accept((ClassVisitor) arg0, arg1, 4552);
assertEquals(2, ClassReader.SKIP_DEBUG);


** It was a parseable test case! 
refined test name is: testAcceptMethodSetsSkipDebugFlag
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: ClassReader classReader = new ClassReader("wheel.asm.Opcodes");
ClassWriter arg0 = new ClassWriter(3040);
classReader.accept((ClassVisitor) arg0, (Attribute[]) null, 2);
assertEquals(1, ClassReader.SKIP_CODE);


** It was a parseable test case! 
refined test name is: testAcceptMethodWithNullAttributes
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: ClassReader classReader = new ClassReader("org.apache.commons.io.filefilter.WildcardFilter");
ClassWriter arg0 = new ClassWriter((-2897));
classReader.accept((ClassVisitor) arg0, (Attribute[]) null, 54);
assertEquals(1, ClassReader.SKIP_CODE);


** It was a parseable test case! 
refined test name is: testAcceptMethodReturnsCorrectSkipCode
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: ClassReader classReader = new ClassReader("org.apache.commons.io.filefilter.WildcardFilter");
ClassWriter arg0 = new ClassWriter(1);
Attribute[] arg1 = new Attribute[9];
classReader.accept((ClassVisitor) arg0, arg1, (-1));
assertEquals(1, ClassReader.SKIP_CODE);


** It was a parseable test case! 
refined test name is: testAcceptsClassVisitorWithSkipCode
* Compiling Tests
refined test name is: testAcceptMethodWithSkipCodeOne
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: ClassReader classReader = new ClassReader("org.apache.commons.io.filefilter.EmptyFileFilter");
char[] arg1 = new char[2];
// Undeclared exception!
try { 
  classReader.readConst(15, arg1);
  fail("Expecting exception: ArrayIndexOutOfBoundsException");

} catch(ArrayIndexOutOfBoundsException e) {
   //
   // 2
   //
   verifyException("wheel.asm.ClassReader", e);
}


** It was a parseable test case! 
refined test name is: testReadConstThrowsArrayIndexOutOfBoundsException
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: ClassReader classReader = new ClassReader("wheel.asm.Opcodes");
char[] arg1 = new char[12];
// Undeclared exception!
try { 
  classReader.readUTF8(4, arg1);
  fail("Expecting exception: ArrayIndexOutOfBoundsException");

} catch(ArrayIndexOutOfBoundsException e) {
   //
   // 12
   //
   verifyException("wheel.asm.ClassReader", e);
}


** It was a parseable test case! 
refined test name is: testReadUTF8ThrowsArrayIndexOutOfBoundsException
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: ClassReader classReader = new ClassReader("wheel.asm.Opcodes");
// Undeclared exception!
try { 
  classReader.readConst(1, (char[]) null);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("wheel.asm.ClassReader", e);
}


** It was a parseable test case! 
refined test name is: testReadConstWithSecondArgumentNull
* Compiling Tests
refined test name is: testReadConstWithInvalidArgument
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: ClassReader classReader = new ClassReader("org.apache.commons.io.filefilter.EmptyFileFilter");
int readInt = classReader.readInt(33);
assertEquals(167773440, readInt);
assertEquals(703, classReader.header);


** It was a parseable test case! 
refined test name is: testReadIntwithValidInputreturnsExpectedOutput
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: ClassReader classReader = new ClassReader("org.apache.commons.io.filefilter.WildcardFilter");
char[] arg1 = new char[1];
// Undeclared exception!
try { 
  classReader.readClass(21, arg1);
  fail("Expecting exception: ArrayIndexOutOfBoundsException");

} catch(ArrayIndexOutOfBoundsException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}


** It was a parseable test case! 
refined test name is: testReadClassThrowsArrayIndexOutOfBoundsException
* Compiling Tests
refined test name is: testReadClassthrowsArrayIndexOutOfBoundsException
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: ClassReader classReader = new ClassReader("org.apache.commons.io.filefilter.WildcardFilter");
int readUnsignedShort = classReader.readUnsignedShort(33);
assertEquals(1121, classReader.header);
assertEquals(12808, readUnsignedShort);


** It was a parseable test case! 
refined test name is: testHeaderValuesOfWildcardFilterClassReader
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: ClassReader arg0 = new ClassReader("wheel.asm.Opcodes");
char[] arg1 = new char[1];
ClassWriter classWriter = new ClassWriter(arg0, 11);
String readUTF8 = arg0.readUTF8(11, arg1);
assertEquals(1537, arg0.getAccess());
assertEquals("java/lang/Integer", readUTF8);


** It was a parseable test case! 
refined test name is: testReadUTF8FromClassReaderWithOffset
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: ClassReader classReader = new ClassReader("wheel.asm.Opcodes");
Object readConst = classReader.readConst(126, (char[]) null);
assertEquals(25, readConst);
assertEquals(1537, classReader.getAccess());


** It was a parseable test case! 
refined test name is: testReadConstWithNullArray
* Compiling Tests
refined test name is: testReadConstWithNullAsSecondArgument
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: ClassReader classReader = new ClassReader("wheel.asm.Opcodes");
int readByte = classReader.readByte(4);
assertEquals(0, readByte);
assertEquals(3040, classReader.header);


** It was a parseable test case! 
refined test name is: testReadByteFromFile
* Compiling Tests
refined test name is: testReadByteAtPosition4
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: ClassReader classReader = new ClassReader("wheel.asm.Opcodes");
char[] arg1 = new char[9];
Object readConst = classReader.readConst(16, arg1);
assertEquals(3040, classReader.header);
assertEquals("\u0001\uA240\n\u0001\uB240\n", readConst);


** It was a parseable test case! 
refined test name is: testReadConstantFromClassFileWithIndex16
* Compiling Tests
refined test name is: testReadConstWithIndex16
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: ClassReader classReader = new ClassReader("org.apache.commons.io.filefilter.WildcardFilter");
int readInt = classReader.readInt(1);
assertEquals(1121, classReader.header);
assertEquals((-21316096), readInt);


** It was a parseable test case! 
refined test name is: testReadNegativeInt
* Compiling Tests
refined test name is: testReadIntReturnsNegativeValue
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: ClassReader classReader = new ClassReader("wheel.asm.Opcodes");
long readLong = classReader.readLong(2897);
assertEquals(1537, classReader.getAccess());
assertEquals(72068947506459235L, readLong);


** It was a parseable test case! 
refined test name is: testReadLongMethod
* Compiling Tests
refined test name is: testReadLongMethodWithOffset2897
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: ClassReader classReader = new ClassReader("wheel.asm.Opcodes");
short readShort = classReader.readShort(15);
assertEquals(1537, classReader.getAccess());
assertEquals((short)257, readShort);


** It was a parseable test case! 
refined test name is: testReadShortReadsCorrectValueAtOffset
* Compiling Tests
refined test name is: testReadShort
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: ClassReader classReader = new ClassReader("wheel.asm.Opcodes");
char[] arg1 = new char[7];
String readUTF8 = classReader.readUTF8(59, arg1);
assertEquals("", readUTF8);
assertEquals(3040, classReader.header);


** It was a parseable test case! 
refined test name is: testReadUTF8ReturnsEmptyStringAndHeaderIsSet
* Compiling Tests
refined test name is: testReadUTF8WithInvalidArgumentsReturnsEmptyString
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: ClassReader classReader = new ClassReader("org.apache.commons.io.filefilter.WildcardFilter");
// Undeclared exception!
try { 
  classReader.readLabel(70, (Label[]) null);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("wheel.asm.ClassReader", e);
}


** It was a parseable test case! 
refined test name is: testReadLabelthrowsNullPointerException
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 20:22:56.545 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar7040699290644457501.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 20:22:56.569 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7040699290644457501.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 20:22:56.881 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar7040699290644457501.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 20:22:56.882 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7040699290644457501.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 20:22:57.006 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar7040699290644457501.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 20:22:57.008 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7040699290644457501.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 20:22:57.163 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar7040699290644457501.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 20:22:57.165 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7040699290644457501.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 20:22:57.338 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar7040699290644457501.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 20:22:57.339 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7040699290644457501.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 20:22:57.501 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar7040699290644457501.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 20:22:57.503 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7040699290644457501.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 20:22:57.651 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar7040699290644457501.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 20:22:57.652 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7040699290644457501.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 20:22:57.746 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar7040699290644457501.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 20:22:57.747 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7040699290644457501.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 20:22:57.873 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar7040699290644457501.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
[MASTER] 20:22:57.874 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7040699290644457501.jar
* Compiling Tests
[MASTER] 20:22:58.099 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar7040699290644457501.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 20:22:58.100 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7040699290644457501.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 20:22:58.639 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar7040699290644457501.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 20:22:58.640 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7040699290644457501.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 20:22:58.859 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar7040699290644457501.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 20:22:58.861 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7040699290644457501.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 20:22:58.924 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar7040699290644457501.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 20:22:58.925 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7040699290644457501.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 20:22:59.107 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar7040699290644457501.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 20:22:59.108 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7040699290644457501.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 20:22:59.739 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar7040699290644457501.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 20:22:59.742 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7040699290644457501.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 20:23:00.091 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar7040699290644457501.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 20:23:00.093 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7040699290644457501.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 20:23:00.247 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar7040699290644457501.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 20:23:00.248 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7040699290644457501.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 20:23:00.346 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar7040699290644457501.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 20:23:00.347 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7040699290644457501.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 20:23:00.561 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar7040699290644457501.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 20:23:00.569 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7040699290644457501.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 20:23:00.798 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar7040699290644457501.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 20:23:00.801 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7040699290644457501.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 20:23:00.894 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar7040699290644457501.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 20:23:00.895 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7040699290644457501.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 20:23:01.004 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar7040699290644457501.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 20:23:01.005 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7040699290644457501.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 20:23:01.131 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar7040699290644457501.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 20:23:01.132 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7040699290644457501.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 20:23:01.624 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar7040699290644457501.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 20:23:01.625 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7040699290644457501.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
Going to execute: handleTestsThatAreUnstable
[MASTER] 20:23:01.747 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar7040699290644457501.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 20:23:01.747 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7040699290644457501.jar
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 20:23:01.871 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar7040699290644457501.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 20:23:01.872 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7040699290644457501.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 20:23:02.028 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar7040699290644457501.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 20:23:02.029 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7040699290644457501.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 20:23:02.144 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar7040699290644457501.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 20:23:02.145 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7040699290644457501.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 20:23:02.567 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar7040699290644457501.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 20:23:02.568 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7040699290644457501.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 20:23:02.777 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar7040699290644457501.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 20:23:02.780 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7040699290644457501.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
Going to execute: handleTestsThatAreUnstable
[MASTER] 20:23:02.949 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar7040699290644457501.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 20:23:02.950 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7040699290644457501.jar
* Compiling Tests
[MASTER] 20:23:03.064 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar7040699290644457501.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 20:23:03.065 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7040699290644457501.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
** Write a test suite: 3 called: 1 to improve: false
** Write a test suite: 4 called: 2 to improve: false
** Write a test suite: 5 called: 3 to improve: false
** Write a test suite: 6 called: 4 to improve: false
** Write a test suite: 7 called: 5 to improve: false
** Write a test suite: 8 called: 6 to improve: false
** Write a test suite: 16 called: 7 to improve: false
** Write a test suite: 19 called: 8 to improve: false
** Write a test suite: 21 called: 9 to improve: false
** Write a test suite: 24 called: 10 to improve: false
** Write a test suite: 25 called: 11 to improve: false
** Write a test suite: 26 called: 12 to improve: false
** Write a test suite: 27 called: 13 to improve: false
** Write a test suite: 28 called: 14 to improve: false
** Write a test suite: 29 called: 15 to improve: false
** Write a test suite: 30 called: 16 to improve: false
[MASTER] 20:23:07.232 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar7040699290644457501.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 20:23:07.233 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7040699290644457501.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 1 called: 0 to improve: false
** Write a test suite: 2 called: 1 to improve: false
** Write a test suite: 3 called: 2 to improve: false
** Write a test suite: 4 called: 3 to improve: false
** Write a test suite: 5 called: 4 to improve: false
** Write a test suite: 6 called: 5 to improve: false
** Write a test suite: 7 called: 6 to improve: false
** Write a test suite: 10 called: 7 to improve: false
** Write a test suite: 12 called: 8 to improve: false
** Write a test suite: 15 called: 9 to improve: false
** Write a test suite: 23 called: 10 to improve: false
** Write a test suite: 24 called: 11 to improve: false
** Write a test suite: 25 called: 12 to improve: false
** Write a test suite: 26 called: 13 to improve: false
** Write a test suite: 27 called: 14 to improve: false
** Write a test suite: 28 called: 15 to improve: false
** Write a test suite: 31 called: 16 to improve: false
[MASTER] 20:23:09.897 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar7040699290644457501.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 20:23:09.898 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7040699290644457501.jar
[MASTER] 20:23:12.008 [logback-1] WARN  TimeController - Already entered in phase: INLINING. This will mess up the timing calculations.
* test suite isTestSuite: 37
Test 0: 
ClassReader classReader = new ClassReader("wheel.asm.Opcodes");
classReader.getAccess();
Test 1: 
ClassReader classReader = new ClassReader("wheel.asm.Opcodes");
classReader.readByte(4);
Test 2: 
ClassReader classReader = new ClassReader("wheel.asm.Opcodes");
classReader.readLong(1);
Test 3: 
ClassReader classReader = new ClassReader("wheel.asm.Opcodes");
classReader.getClassName();
Test 4: 
ClassReader classReader = new ClassReader("org.apache.commons.io.filefilter.WildcardFilter");
ClassReader classReader = null;
try {
  classReader = new ClassReader(classReader.b, 4, 1121);
  fail("Expecting exception: ArrayIndexOutOfBoundsException");

} catch(ArrayIndexOutOfBoundsException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 5: 
ClassReader classReader = new ClassReader("wheel.asm.Opcodes");
ClassReader classReader = null;
try {
  classReader = new ClassReader(classReader.b, 71, 3942);
  fail("Expecting exception: ArrayIndexOutOfBoundsException");

} catch(ArrayIndexOutOfBoundsException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 6: 
ClassReader classReader = new ClassReader("org.apache.commons.io.filefilter.EmptyFileFilter");
classReader.getSuperName();
Test 7: 
ClassReader classReader = new ClassReader("wheel.asm.Opcodes");
classReader.getInterfaces();
Test 8: 
ClassReader classReader = new ClassReader("org.apache.commons.io.filefilter.WildcardFilter");
ClassWriter classWriter = new ClassWriter(classReader, (-3597));
Test 9: 
ClassReader classReader = new ClassReader("wheel.asm.Opcodes");
ClassReader classReader = new ClassReader(classReader.b, 3040, 4);
ClassWriter classWriter = null;
try {
  classWriter = new ClassWriter(classReader, 2);
  fail("Expecting exception: ArrayIndexOutOfBoundsException");

} catch(ArrayIndexOutOfBoundsException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 10: 
ClassReader classReader = null;
try {
  classReader = new ClassReader("EnclosingMethod");
  fail("Expecting exception: IOException");

} catch(Throwable e) {
   //
   // Class not found
   //
   verifyException("wheel.asm.ClassReader", e);
}

Test 11: 
byte[] byteArray = new byte[0];
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
ClassReader classReader = null;
try {
  classReader = new ClassReader(byteArrayInputStream);
  fail("Expecting exception: ArrayIndexOutOfBoundsException");

} catch(ArrayIndexOutOfBoundsException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 12: 
ClassReader classReader = new ClassReader("wheel.asm.Item");
ClassWriter classWriter = new ClassWriter(2147483645);
classReader.accept((ClassVisitor) classWriter, 2);
char[] charArray = new char[4];
classReader.readClass(76, charArray);
Test 13: 
ClassReader classReader = new ClassReader("wheel.asm.Opcodes");
char[] charArray = new char[12];
// Undeclared exception!
try { 
  classReader.readUTF8(4, charArray);
  fail("Expecting exception: ArrayIndexOutOfBoundsException");

} catch(ArrayIndexOutOfBoundsException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 14: 
ClassReader classReader = new ClassReader("org.apache.commons.io.filefilter.EmptyFileFilter");
char[] charArray = new char[2];
// Undeclared exception!
try { 
  classReader.readConst(15, charArray);
  fail("Expecting exception: ArrayIndexOutOfBoundsException");

} catch(ArrayIndexOutOfBoundsException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 15: 
ClassReader classReader = new ClassReader("wheel.asm.Opcodes");
// Undeclared exception!
try { 
  classReader.readConst(1, (char[]) null);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 16: 
ClassReader classReader = new ClassReader("wheel.asm.Opcodes");
classReader.readShort(15);
Test 17: 
ClassReader classReader = new ClassReader("org.apache.commons.io.filefilter.WildcardFilter");
classReader.readInt(1);
Test 18: 
ClassReader classReader = new ClassReader("org.apache.commons.io.filefilter.WildcardFilter");
char[] charArray = new char[1];
// Undeclared exception!
try { 
  classReader.readClass(21, charArray);
  fail("Expecting exception: ArrayIndexOutOfBoundsException");

} catch(ArrayIndexOutOfBoundsException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 19: 
ClassReader classReader = new ClassReader("org.apache.commons.io.filefilter.WildcardFilter");
classReader.readUnsignedShort(33);
Test 20: 
ClassReader classReader = new ClassReader("org.apache.commons.io.filefilter.EmptyFileFilter");
ClassWriter classWriter = new ClassWriter(15);
Attribute[] attributeArray = new Attribute[0];
classReader.accept((ClassVisitor) classWriter, attributeArray, 4552);
Test 21: 
ClassReader classReader = new ClassReader("org.apache.commons.io.filefilter.EmptyFileFilter");
ClassWriter classWriter = new ClassWriter(classReader, 1);
classReader.accept((ClassVisitor) classWriter, (Attribute[]) null, 1155);
Test 22: 
ClassReader classReader = new ClassReader("wheel.asm.Opcodes");
ClassWriter classWriter = new ClassWriter(3040);
classReader.accept((ClassVisitor) classWriter, (Attribute[]) null, 2);
Test 23: 
ClassReader classReader = new ClassReader("org.apache.commons.io.filefilter.WildcardFilter");
ClassWriter classWriter = new ClassWriter((-2897));
classReader.accept((ClassVisitor) classWriter, (Attribute[]) null, 54);
Test 24: 
ClassReader classReader = new ClassReader("org.apache.commons.io.filefilter.WildcardFilter");
ClassWriter classWriter = new ClassWriter(1);
Attribute[] attributeArray = new Attribute[9];
classReader.accept((ClassVisitor) classWriter, attributeArray, (-1));
Test 25: 
ClassReader classReader = new ClassReader("wheel.asm.Opcodes");
char[] charArray = new char[1];
ClassWriter classWriter = new ClassWriter(classReader, 11);
classReader.readUTF8(11, charArray);
Test 26: 
ClassReader classReader = new ClassReader("wheel.asm.Opcodes");
classReader.readConst(126, (char[]) null);
Test 27: 
ClassReader classReader = new ClassReader("wheel.asm.Opcodes");
classReader.getItem(2);
Test 28: 
ClassReader classReader = new ClassReader("wheel.asm.Opcodes");
classReader.readByte(0);
Test 29: 
ClassReader classReader = new ClassReader("wheel.asm.Opcodes");
char[] charArray = new char[9];
classReader.readConst(16, charArray);
Test 30: 
ClassReader classReader = new ClassReader("org.apache.commons.io.filefilter.EmptyFileFilter");
classReader.readInt(33);
Test 31: 
ClassReader classReader = new ClassReader("wheel.asm.Opcodes");
classReader.readLong(2897);
Test 32: 
ClassReader classReader = new ClassReader("wheel.asm.Opcodes");
classReader.readShort(1);
Test 33: 
ClassReader classReader = new ClassReader("wheel.asm.Opcodes");
char[] charArray = new char[7];
classReader.readUTF8(59, charArray);
Test 34: 
ClassReader classReader = new ClassReader("wheel.asm.Opcodes");
ClassReader classReader = new ClassReader(classReader.b);
Test 35: 
ClassReader classReader = new ClassReader("wheel.asm.Opcodes");
ClassWriter classWriter = new ClassWriter(2003);
classReader.copyPool(classWriter);
Test 36: 
ClassReader classReader = new ClassReader("org.apache.commons.io.filefilter.WildcardFilter");
// Undeclared exception!
try { 
  classReader.readLabel(70, (Label[]) null);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}


* Minimizing test suite
[MASTER] 20:23:48.248 [logback-1] WARN  TimeController - Already entered in phase: MINIMIZATION. This will mess up the timing calculations.
* test suite isTestSuite: 37
Test 0: 
ClassReader classReader = new ClassReader("wheel.asm.Opcodes");
classReader.readShort(1);
Test 1: 
ClassReader classReader = new ClassReader("wheel.asm.Item");
ClassWriter classWriter = new ClassWriter(2147483645);
classReader.accept((ClassVisitor) classWriter, 2);
char[] charArray = new char[4];
classReader.readClass(76, charArray);
Test 2: 
ClassReader classReader = new ClassReader("wheel.asm.Opcodes");
classReader.getAccess();
Test 3: 
ClassReader classReader = new ClassReader("wheel.asm.Opcodes");
classReader.getItem(2);
Test 4: 
ClassReader classReader = new ClassReader("wheel.asm.Opcodes");
classReader.readByte(0);
Test 5: 
ClassReader classReader = new ClassReader("wheel.asm.Opcodes");
classReader.readLong(1);
Test 6: 
ClassReader classReader = new ClassReader("wheel.asm.Opcodes");
classReader.getClassName();
Test 7: 
ClassReader classReader = new ClassReader("org.apache.commons.io.filefilter.WildcardFilter");
ClassReader classReader = null;
try {
  classReader = new ClassReader(classReader.b, 4, 1121);
  fail("Expecting exception: ArrayIndexOutOfBoundsException");

} catch(ArrayIndexOutOfBoundsException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 8: 
ClassReader classReader = new ClassReader("wheel.asm.Opcodes");
ClassReader classReader = null;
try {
  classReader = new ClassReader(classReader.b, 71, 3942);
  fail("Expecting exception: ArrayIndexOutOfBoundsException");

} catch(ArrayIndexOutOfBoundsException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 9: 
ClassReader classReader = new ClassReader("org.apache.commons.io.filefilter.EmptyFileFilter");
classReader.getSuperName();
Test 10: 
ClassReader classReader = new ClassReader("wheel.asm.Opcodes");
classReader.getInterfaces();
Test 11: 
ClassReader classReader = new ClassReader("org.apache.commons.io.filefilter.WildcardFilter");
ClassWriter classWriter = new ClassWriter(classReader, (-3597));
Test 12: 
ClassReader classReader = new ClassReader("wheel.asm.Opcodes");
ClassWriter classWriter = new ClassWriter(2003);
classReader.copyPool(classWriter);
Test 13: 
ClassReader classReader = new ClassReader("wheel.asm.Opcodes");
ClassReader classReader = new ClassReader(classReader.b, 3040, 4);
ClassWriter classWriter = null;
try {
  classWriter = new ClassWriter(classReader, 2);
  fail("Expecting exception: ArrayIndexOutOfBoundsException");

} catch(ArrayIndexOutOfBoundsException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 14: 
ClassReader classReader = null;
try {
  classReader = new ClassReader("EnclosingMethod");
  fail("Expecting exception: IOException");

} catch(Throwable e) {
   //
   // Class not found
   //
   verifyException("wheel.asm.ClassReader", e);
}

Test 15: 
byte[] byteArray = new byte[0];
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
ClassReader classReader = null;
try {
  classReader = new ClassReader(byteArrayInputStream);
  fail("Expecting exception: ArrayIndexOutOfBoundsException");

} catch(ArrayIndexOutOfBoundsException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 16: 
ClassReader classReader = new ClassReader("org.apache.commons.io.filefilter.EmptyFileFilter");
ClassWriter classWriter = new ClassWriter(classReader, 1);
classReader.accept((ClassVisitor) classWriter, (Attribute[]) null, 1155);
Test 17: 
ClassReader classReader = new ClassReader("org.apache.commons.io.filefilter.EmptyFileFilter");
ClassWriter classWriter = new ClassWriter(15);
Attribute[] attributeArray = new Attribute[0];
classReader.accept((ClassVisitor) classWriter, attributeArray, 4552);
Test 18: 
ClassReader classReader = new ClassReader("wheel.asm.Opcodes");
ClassWriter classWriter = new ClassWriter(3040);
classReader.accept((ClassVisitor) classWriter, (Attribute[]) null, 2);
Test 19: 
ClassReader classReader = new ClassReader("org.apache.commons.io.filefilter.WildcardFilter");
ClassWriter classWriter = new ClassWriter((-2897));
classReader.accept((ClassVisitor) classWriter, (Attribute[]) null, 54);
Test 20: 
ClassReader classReader = new ClassReader("org.apache.commons.io.filefilter.WildcardFilter");
ClassWriter classWriter = new ClassWriter(1);
Attribute[] attributeArray = new Attribute[9];
classReader.accept((ClassVisitor) classWriter, attributeArray, (-1));
Test 21: 
ClassReader classReader = new ClassReader("org.apache.commons.io.filefilter.EmptyFileFilter");
char[] charArray = new char[2];
// Undeclared exception!
try { 
  classReader.readConst(15, charArray);
  fail("Expecting exception: ArrayIndexOutOfBoundsException");

} catch(ArrayIndexOutOfBoundsException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 22: 
ClassReader classReader = new ClassReader("wheel.asm.Opcodes");
char[] charArray = new char[12];
// Undeclared exception!
try { 
  classReader.readUTF8(4, charArray);
  fail("Expecting exception: ArrayIndexOutOfBoundsException");

} catch(ArrayIndexOutOfBoundsException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 23: 
ClassReader classReader = new ClassReader("wheel.asm.Opcodes");
// Undeclared exception!
try { 
  classReader.readConst(1, (char[]) null);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 24: 
ClassReader classReader = new ClassReader("org.apache.commons.io.filefilter.EmptyFileFilter");
classReader.readInt(33);
Test 25: 
ClassReader classReader = new ClassReader("org.apache.commons.io.filefilter.WildcardFilter");
char[] charArray = new char[1];
// Undeclared exception!
try { 
  classReader.readClass(21, charArray);
  fail("Expecting exception: ArrayIndexOutOfBoundsException");

} catch(ArrayIndexOutOfBoundsException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 26: 
ClassReader classReader = new ClassReader("org.apache.commons.io.filefilter.WildcardFilter");
classReader.readUnsignedShort(33);
Test 27: 
ClassReader classReader = new ClassReader("wheel.asm.Opcodes");
char[] charArray = new char[1];
ClassWriter classWriter = new ClassWriter(classReader, 11);
classReader.readUTF8(11, charArray);
Test 28: 
ClassReader classReader = new ClassReader("wheel.asm.Opcodes");
classReader.readConst(126, (char[]) null);
Test 29: 
ClassReader classReader = new ClassReader("wheel.asm.Opcodes");
classReader.readByte(4);
Test 30: 
ClassReader classReader = new ClassReader("wheel.asm.Opcodes");
char[] charArray = new char[9];
classReader.readConst(16, charArray);
Test 31: 
ClassReader classReader = new ClassReader("org.apache.commons.io.filefilter.WildcardFilter");
classReader.readInt(1);
Test 32: 
ClassReader classReader = new ClassReader("wheel.asm.Opcodes");
classReader.readLong(2897);
Test 33: 
ClassReader classReader = new ClassReader("wheel.asm.Opcodes");
classReader.readShort(15);
Test 34: 
ClassReader classReader = new ClassReader("wheel.asm.Opcodes");
char[] charArray = new char[7];
classReader.readUTF8(59, charArray);
Test 35: 
ClassReader classReader = new ClassReader("wheel.asm.Opcodes");
ClassReader classReader = new ClassReader(classReader.b);
Test 36: 
ClassReader classReader = new ClassReader("org.apache.commons.io.filefilter.WildcardFilter");
// Undeclared exception!
try { 
  classReader.readLabel(70, (Label[]) null);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}


* Going to analyze the coverage criteria
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 42%
* Total number of goals: 817
* Number of covered goals: 343
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 53%
* Total number of goals: 868
* Number of covered goals: 462
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 45%
* Total number of goals: 40
* Number of covered goals: 18
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 21
* Number of covered goals: 21
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 38%
* Total number of goals: 817
* Number of covered goals: 310
* Generated 37 tests with total length 93
* Resulting test suite's coverage: 55% (average coverage for all fitness functions)
* Generating assertions
[MASTER] 20:23:50.126 [logback-1] WARN  TimeController - Already entered in phase: COVERAGE_ANALYSIS. This will mess up the timing calculations.
* Resulting test suite's mutation score: 30%
* Compiling and checking tests
[MASTER] 20:25:12.127 [logback-1] WARN  TimeController - Already entered in phase: ASSERTION_GENERATION. This will mess up the timing calculations.
Going to execute: removeTestsThatDoNotCompile
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 20:25:22.611 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar7040699290644457501.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 20:25:22.612 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7040699290644457501.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 20:25:22.917 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar7040699290644457501.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 20:25:22.930 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7040699290644457501.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 20:25:23.141 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar7040699290644457501.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 20:25:23.142 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7040699290644457501.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 20:25:23.306 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar7040699290644457501.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 20:25:23.307 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7040699290644457501.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 20:25:23.431 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar7040699290644457501.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 20:25:23.433 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7040699290644457501.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 20:25:23.594 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar7040699290644457501.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 20:25:23.602 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7040699290644457501.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 20:25:23.752 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar7040699290644457501.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 20:25:23.753 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7040699290644457501.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 20:25:23.860 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar7040699290644457501.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 20:25:23.861 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7040699290644457501.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
Going to execute: handleTestsThatAreUnstable
[MASTER] 20:25:24.068 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar7040699290644457501.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 20:25:24.068 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7040699290644457501.jar
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 20:25:24.503 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar7040699290644457501.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 20:25:24.504 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7040699290644457501.jar
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 20:25:25.348 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar7040699290644457501.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 20:25:25.349 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7040699290644457501.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 20:25:25.701 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar7040699290644457501.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 20:25:25.702 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7040699290644457501.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 20:25:25.822 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar7040699290644457501.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 20:25:25.823 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7040699290644457501.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 20:25:26.127 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar7040699290644457501.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 20:25:26.128 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7040699290644457501.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 20:25:27.185 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar7040699290644457501.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 20:25:27.186 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7040699290644457501.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 20:25:27.465 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar7040699290644457501.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 20:25:27.468 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7040699290644457501.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 20:25:27.601 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar7040699290644457501.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 20:25:27.602 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7040699290644457501.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 20:25:27.685 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar7040699290644457501.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 20:25:27.687 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7040699290644457501.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 20:25:27.823 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar7040699290644457501.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 20:25:27.824 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7040699290644457501.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 20:25:28.033 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar7040699290644457501.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 20:25:28.036 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7040699290644457501.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 20:25:28.114 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar7040699290644457501.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 20:25:28.116 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7040699290644457501.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 20:25:28.273 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar7040699290644457501.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 20:25:28.275 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7040699290644457501.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 20:25:28.388 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar7040699290644457501.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 20:25:28.390 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7040699290644457501.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 20:25:28.945 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar7040699290644457501.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 20:25:28.946 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7040699290644457501.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 20:25:29.270 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar7040699290644457501.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 20:25:29.280 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7040699290644457501.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 20:25:29.464 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar7040699290644457501.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 20:25:29.465 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7040699290644457501.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 20:25:29.756 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar7040699290644457501.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 20:25:29.773 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7040699290644457501.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 20:25:29.909 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar7040699290644457501.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 20:25:29.910 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7040699290644457501.jar
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 20:25:30.122 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar7040699290644457501.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 20:25:30.123 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7040699290644457501.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 20:25:30.364 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar7040699290644457501.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 20:25:30.365 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7040699290644457501.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 20:25:30.508 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar7040699290644457501.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 20:25:30.511 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7040699290644457501.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 20:25:30.578 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar7040699290644457501.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 20:25:30.580 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7040699290644457501.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
** Write a test suite: 1 called: 1 to improve: false
** Write a test suite: 2 called: 2 to improve: false
** Write a test suite: 3 called: 3 to improve: false
** Write a test suite: 4 called: 4 to improve: false
** Write a test suite: 5 called: 5 to improve: false
** Write a test suite: 6 called: 6 to improve: false
** Write a test suite: 7 called: 7 to improve: false
** Write a test suite: 8 called: 8 to improve: false
** Write a test suite: 9 called: 9 to improve: false
** Write a test suite: 10 called: 10 to improve: false
** Write a test suite: 11 called: 11 to improve: false
** Write a test suite: 12 called: 12 to improve: false
** Write a test suite: 13 called: 13 to improve: false
** Write a test suite: 14 called: 14 to improve: false
** Write a test suite: 15 called: 15 to improve: false
** Write a test suite: 16 called: 16 to improve: false
** Write a test suite: 17 called: 17 to improve: false
** Write a test suite: 18 called: 18 to improve: false
** Write a test suite: 19 called: 19 to improve: false
** Write a test suite: 20 called: 20 to improve: false
** Write a test suite: 21 called: 21 to improve: false
** Write a test suite: 22 called: 22 to improve: false
** Write a test suite: 23 called: 23 to improve: false
** Write a test suite: 24 called: 24 to improve: false
** Write a test suite: 25 called: 25 to improve: false
** Write a test suite: 26 called: 26 to improve: false
** Write a test suite: 27 called: 27 to improve: false
** Write a test suite: 28 called: 28 to improve: false
** Write a test suite: 29 called: 29 to improve: false
** Write a test suite: 30 called: 30 to improve: false
** Write a test suite: 31 called: 31 to improve: false
[MASTER] 20:25:34.764 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar7040699290644457501.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 20:25:34.765 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7040699290644457501.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
** Write a test suite: 1 called: 1 to improve: false
** Write a test suite: 2 called: 2 to improve: false
** Write a test suite: 3 called: 3 to improve: false
** Write a test suite: 4 called: 4 to improve: false
** Write a test suite: 5 called: 5 to improve: false
** Write a test suite: 6 called: 6 to improve: false
** Write a test suite: 7 called: 7 to improve: false
** Write a test suite: 8 called: 8 to improve: false
** Write a test suite: 9 called: 9 to improve: false
** Write a test suite: 10 called: 10 to improve: false
** Write a test suite: 11 called: 11 to improve: false
** Write a test suite: 12 called: 12 to improve: false
** Write a test suite: 13 called: 13 to improve: false
** Write a test suite: 14 called: 14 to improve: false
** Write a test suite: 15 called: 15 to improve: false
** Write a test suite: 16 called: 16 to improve: false
** Write a test suite: 17 called: 17 to improve: false
** Write a test suite: 18 called: 18 to improve: false
** Write a test suite: 19 called: 19 to improve: false
** Write a test suite: 20 called: 20 to improve: false
** Write a test suite: 21 called: 21 to improve: false
** Write a test suite: 22 called: 22 to improve: false
** Write a test suite: 23 called: 23 to improve: false
** Write a test suite: 24 called: 24 to improve: false
** Write a test suite: 25 called: 25 to improve: false
** Write a test suite: 26 called: 26 to improve: false
** Write a test suite: 27 called: 27 to improve: false
** Write a test suite: 28 called: 28 to improve: false
** Write a test suite: 29 called: 29 to improve: false
** Write a test suite: 30 called: 30 to improve: false
** Write a test suite: 31 called: 31 to improve: false
[MASTER] 20:25:38.954 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar7040699290644457501.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 20:25:38.955 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar7040699290644457501.jar
* Writing tests to file
[MASTER] 20:25:38.965 [logback-1] WARN  TimeController - Already entered in phase: JUNIT_CHECK. This will mess up the timing calculations.
* Writing JUnit test case 'ClassReader_ESTest' to evosuite-tests
** Write a test suite: 1 called: 0 to improve: false
** Write a test suite: 2 called: 1 to improve: false
** Write a test suite: 3 called: 2 to improve: false
** Write a test suite: 4 called: 3 to improve: false
** Write a test suite: 5 called: 4 to improve: false
** Write a test suite: 6 called: 5 to improve: false
** Write a test suite: 7 called: 6 to improve: false
** Write a test suite: 10 called: 7 to improve: false
** Write a test suite: 12 called: 8 to improve: false
** Write a test suite: 15 called: 9 to improve: false
** Write a test suite: 23 called: 10 to improve: false
** Write a test suite: 24 called: 11 to improve: false
** Write a test suite: 25 called: 12 to improve: false
** Write a test suite: 26 called: 13 to improve: false
** Write a test suite: 27 called: 14 to improve: false
** Write a test suite: 28 called: 15 to improve: false
** Write a test suite: 31 called: 16 to improve: false
* Writing JUnit test case 'ClassReader_Original_ESTest' to evosuite-tests
** Write a test suite: 0 called: 0 to improve: false
** Write a test suite: 1 called: 1 to improve: false
** Write a test suite: 2 called: 2 to improve: false
** Write a test suite: 3 called: 3 to improve: false
** Write a test suite: 4 called: 4 to improve: false
** Write a test suite: 5 called: 5 to improve: false
** Write a test suite: 6 called: 6 to improve: false
** Write a test suite: 7 called: 7 to improve: false
** Write a test suite: 8 called: 8 to improve: false
** Write a test suite: 9 called: 9 to improve: false
** Write a test suite: 10 called: 10 to improve: false
** Write a test suite: 11 called: 11 to improve: false
** Write a test suite: 12 called: 12 to improve: false
** Write a test suite: 13 called: 13 to improve: false
** Write a test suite: 14 called: 14 to improve: false
** Write a test suite: 15 called: 15 to improve: false
** Write a test suite: 16 called: 16 to improve: false
** Write a test suite: 17 called: 17 to improve: false
** Write a test suite: 18 called: 18 to improve: false
** Write a test suite: 19 called: 19 to improve: false
** Write a test suite: 20 called: 20 to improve: false
** Write a test suite: 21 called: 21 to improve: false
** Write a test suite: 22 called: 22 to improve: false
** Write a test suite: 23 called: 23 to improve: false
** Write a test suite: 24 called: 24 to improve: false
** Write a test suite: 25 called: 25 to improve: false
** Write a test suite: 26 called: 26 to improve: false
** Write a test suite: 27 called: 27 to improve: false
** Write a test suite: 28 called: 28 to improve: false
** Write a test suite: 29 called: 29 to improve: false
** Write a test suite: 30 called: 30 to improve: false
** Write a test suite: 31 called: 31 to improve: false
* Done!

* Computation finished
