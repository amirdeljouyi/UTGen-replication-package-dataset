* EvoSuite 1.0.0-SNAPSHOT
* Going to generate test cases for class: wheel.asm.FieldWriter
* Starting Client-0
* Properties loaded from /home/roham/Results-Utestgen/dataset/SF110-new-res/80_wheelwebtool/evosuite-files/evosuite.properties
* Connecting to master process on port 5216
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 04:49:44.262 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 04:49:44.268 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 04:49:44.269 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 04:49:44.277 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.Temporal
[MASTER] 04:49:44.277 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.ZoneId
[MASTER] 04:49:44.279 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAccessor
[MASTER] 04:49:44.279 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalField
[MASTER] 04:49:44.280 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalUnit
[MASTER] 04:49:44.281 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAmount
[MASTER] 04:49:44.282 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.Clock
[MASTER] 04:49:44.284 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalQuery
[MASTER] 04:49:44.286 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAdjuster
[MASTER] 04:49:44.288 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 04:49:44.316 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 04:49:44.317 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
* Finished analyzing classpath
* Generating tests for class wheel.asm.FieldWriter
* Test criteria:
  - Branch Coverage
  - Line Coverage
  - Method-Output Coverage
  - Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 212
* Using seed 1710305381924
* Starting evolution
[Progress:>                             0%] [Cov:>                                  0%]* Initial Number of Goals in DynaMOSA = 103 / 212
[Progress:>                             0%] [Cov:===============>                   43%][Progress:>                             0%] [Cov:=====================>             61%][Progress:=>                            5%] [Cov:========================>          69%][Progress:=>                            5%] [Cov:=========================>         74%][Progress:=>                            5%] [Cov:==========================>        77%][Progress:=>                            5%] [Cov:==========================>        77%][Progress:=>                            5%] [Cov:===========================>       78%][Progress:=>                            6%] [Cov:============================>      81%][Progress:=>                            6%] [Cov:=============================>     84%][Progress:=>                            6%] [Cov:=============================>     84%][Progress:=>                            6%] [Cov:=============================>     85%][Progress:=>                            6%] [Cov:=============================>     85%][Progress:=>                            6%] [Cov:=============================>     85%][Progress:==>                           9%] [Cov:=============================>     85%][Progress:==>                           9%] [Cov:=============================>     85%][Progress:==>                           9%] [Cov:=============================>     85%][Progress:==>                           9%] [Cov:=============================>     85%][Progress:===>                          12%] [Cov:=============================>     85%][Progress:===>                          12%] [Cov:=============================>     85%][Progress:===>                          12%] [Cov:=============================>     85%][Progress:===>                          12%] [Cov:=============================>     85%][Progress:===>                          12%] [Cov:=============================>     85%][Progress:====>                         14%] [Cov:=============================>     85%][Progress:====>                         14%] [Cov:=============================>     85%][Progress:=====>                        17%] [Cov:==============================>    88%][Progress:=====>                        17%] [Cov:==============================>    88%][Progress:======>                       22%] [Cov:==============================>    88%][Progress:======>                       22%] [Cov:==============================>    88%][Progress:======>                       22%] [Cov:==============================>    88%][Progress:======>                       22%] [Cov:==============================>    88%][Progress:=======>                      25%] [Cov:==============================>    88%][Progress:=======>                      25%] [Cov:==============================>    88%][Progress:=======>                      25%] [Cov:==============================>    88%][Progress:=======>                      25%] [Cov:==============================>    88%][Progress:=======>                      25%] [Cov:==============================>    88%][Progress:=======>                      25%] [Cov:==============================>    88%][Progress:=======>                      25%] [Cov:==============================>    88%][Progress:=======>                      25%] [Cov:==============================>    88%][Progress:=======>                      25%] [Cov:==============================>    88%][Progress:========>                     28%] [Cov:==============================>    88%][Progress:========>                     28%] [Cov:==============================>    88%][Progress:========>                     28%] [Cov:==============================>    88%][Progress:========>                     28%] [Cov:==============================>    88%][Progress:========>                     28%] [Cov:==============================>    88%][Progress:========>                     28%] [Cov:==============================>    88%][Progress:========>                     28%] [Cov:==============================>    88%][Progress:========>                     28%] [Cov:==============================>    88%][Progress:========>                     28%] [Cov:==============================>    88%][Progress:========>                     28%] [Cov:==============================>    88%][Progress:========>                     28%] [Cov:==============================>    88%][Progress:========>                     28%] [Cov:==============================>    88%][Progress:========>                     28%] [Cov:==============================>    88%][Progress:========>                     29%] [Cov:==============================>    88%][Progress:========>                     29%] [Cov:==============================>    88%][Progress:========>                     29%] [Cov:==============================>    88%][Progress:=========>                    31%] [Cov:==============================>    88%][Progress:=========>                    31%] [Cov:==============================>    88%][Progress:=========>                    31%] [Cov:==============================>    88%][Progress:=========>                    31%] [Cov:==============================>    88%][Progress:=========>                    31%] [Cov:==============================>    88%][Progress:==========>                   34%] [Cov:==============================>    88%][Progress:==========>                   34%] [Cov:==============================>    88%][Progress:==========>                   34%] [Cov:==============================>    88%][Progress:==========>                   34%] [Cov:==============================>    88%][Progress:==========>                   34%] [Cov:==============================>    88%][Progress:==========>                   34%] [Cov:==============================>    88%][Progress:==========>                   34%] [Cov:==============================>    88%][Progress:==========>                   34%] [Cov:==============================>    88%][Progress:==========>                   34%] [Cov:==============================>    88%][Progress:==========>                   34%] [Cov:==============================>    88%][Progress:==========>                   34%] [Cov:==============================>    88%][Progress:==========>                   34%] [Cov:==============================>    88%][Progress:==========>                   34%] [Cov:==============================>    88%][Progress:==========>                   35%] [Cov:==============================>    88%][Progress:==========>                   35%] [Cov:==============================>    88%][Progress:==========>                   35%] [Cov:==============================>    88%][Progress:==========>                   35%] [Cov:==============================>    88%][Progress:==========>                   35%] [Cov:==============================>    88%][Progress:==========>                   35%] [Cov:==============================>    88%][Progress:==========>                   35%] [Cov:==============================>    88%][Progress:==========>                   35%] [Cov:==============================>    88%][Progress:==========>                   35%] [Cov:==============================>    88%][Progress:==========>                   35%] [Cov:==============================>    88%][Progress:==========>                   35%] [Cov:==============================>    88%][Progress:==========>                   35%] [Cov:==============================>    88%][Progress:==========>                   35%] [Cov:==============================>    88%][Progress:==========>                   35%] [Cov:==============================>    88%][Progress:===========>                  38%] [Cov:==============================>    88%][Progress:===========>                  38%] [Cov:==============================>    88%][Progress:===========>                  38%] [Cov:==============================>    88%][Progress:===========>                  38%] [Cov:==============================>    88%][Progress:===========>                  38%] [Cov:==============================>    88%][Progress:===========>                  38%] [Cov:==============================>    88%][Progress:===========>                  38%] [Cov:==============================>    88%][Progress:===========>                  38%] [Cov:==============================>    88%][Progress:===========>                  38%] [Cov:==============================>    88%][Progress:===========>                  38%] [Cov:==============================>    88%][Progress:===========>                  38%] [Cov:==============================>    88%][Progress:===========>                  38%] [Cov:==============================>    88%][Progress:===========>                  38%] [Cov:==============================>    88%][Progress:===========>                  38%] [Cov:==============================>    88%][Progress:============>                 41%] [Cov:==============================>    88%][Progress:============>                 41%] [Cov:==============================>    88%][Progress:============>                 41%] [Cov:==============================>    88%][Progress:============>                 43%] [Cov:==============================>    88%][Progress:============>                 43%] [Cov:==============================>    88%][Progress:============>                 43%] [Cov:==============================>    88%][Progress:============>                 43%] [Cov:==============================>    88%][Progress:============>                 43%] [Cov:==============================>    88%][Progress:============>                 43%] [Cov:==============================>    88%][Progress:============>                 43%] [Cov:==============================>    88%][Progress:============>                 43%] [Cov:==============================>    88%][Progress:============>                 43%] [Cov:==============================>    88%][Progress:============>                 43%] [Cov:==============================>    88%][Progress:=============>                44%] [Cov:==============================>    88%][Progress:=============>                44%] [Cov:==============================>    88%][Progress:=============>                44%] [Cov:==============================>    88%][Progress:=============>                44%] [Cov:==============================>    88%][Progress:=============>                44%] [Cov:==============================>    88%][Progress:=============>                44%] [Cov:==============================>    88%][Progress:=============>                44%] [Cov:==============================>    88%][Progress:=============>                44%] [Cov:==============================>    88%][Progress:=============>                44%] [Cov:==============================>    88%][Progress:=============>                44%] [Cov:==============================>    88%][Progress:=============>                44%] [Cov:==============================>    88%][Progress:=============>                44%] [Cov:==============================>    88%][Progress:=============>                44%] [Cov:==============================>    88%][Progress:=============>                44%] [Cov:==============================>    88%][Progress:=============>                44%] [Cov:==============================>    88%][Progress:=============>                44%] [Cov:==============================>    88%][Progress:==============>               47%] [Cov:==============================>    88%][Progress:==============>               47%] [Cov:==============================>    88%][Progress:==============>               47%] [Cov:==============================>    88%][Progress:==============>               47%] [Cov:==============================>    88%][Progress:==============>               49%] [Cov:==============================>    88%][Progress:==============>               49%] [Cov:==============================>    88%][Progress:==============>               49%] [Cov:==============================>    88%][Progress:==============>               49%] [Cov:==============================>    88%][Progress:==============>               49%] [Cov:==============================>    88%][Progress:==============>               49%] [Cov:==============================>    88%][Progress:==============>               49%] [Cov:==============================>    88%][Progress:===============>              50%] [Cov:==============================>    88%][Progress:===============>              50%] [Cov:==============================>    88%][Progress:===============>              50%] [Cov:==============================>    88%][Progress:===============>              52%] [Cov:==============================>    88%][Progress:===============>              52%] [Cov:==============================>    88%][Progress:===============>              52%] [Cov:==============================>    88%][Progress:===============>              52%] [Cov:==============================>    88%][Progress:===============>              52%] [Cov:==============================>    88%][Progress:===============>              52%] [Cov:==============================>    88%][Progress:===============>              52%] [Cov:==============================>    88%][Progress:===============>              52%] [Cov:==============================>    88%][Progress:================>             55%] [Cov:==============================>    88%][Progress:================>             55%] [Cov:==============================>    88%][Progress:================>             55%] [Cov:==============================>    88%][Progress:================>             55%] [Cov:==============================>    88%][Progress:================>             55%] [Cov:==============================>    88%][Progress:================>             55%] [Cov:==============================>    88%][Progress:================>             55%] [Cov:==============================>    88%][Progress:================>             55%] [Cov:==============================>    88%][Progress:================>             55%] [Cov:==============================>    88%][Progress:================>             55%] [Cov:==============================>    88%][Progress:================>             55%] [Cov:==============================>    88%][Progress:================>             55%] [Cov:==============================>    88%][Progress:================>             55%] [Cov:==============================>    88%][Progress:================>             55%] [Cov:==============================>    88%][Progress:================>             55%] [Cov:==============================>    88%][Progress:================>             55%] [Cov:==============================>    88%][Progress:================>             55%] [Cov:==============================>    88%][Progress:================>             55%] [Cov:==============================>    88%][Progress:================>             55%] [Cov:==============================>    88%][Progress:================>             55%] [Cov:==============================>    88%][Progress:================>             55%] [Cov:==============================>    88%][Progress:================>             56%] [Cov:==============================>    88%][Progress:================>             56%] [Cov:==============================>    88%][Progress:================>             56%] [Cov:==============================>    88%][Progress:================>             56%] [Cov:==============================>    88%][Progress:================>             56%] [Cov:==============================>    88%][Progress:================>             56%] [Cov:==============================>    88%][Progress:================>             56%] [Cov:==============================>    88%][Progress:================>             56%] [Cov:==============================>    88%][Progress:================>             56%] [Cov:==============================>    88%][Progress:================>             56%] [Cov:==============================>    88%][Progress:================>             56%] [Cov:==============================>    88%][Progress:================>             56%] [Cov:==============================>    88%][Progress:================>             56%] [Cov:==============================>    88%][Progress:================>             56%] [Cov:==============================>    88%][Progress:================>             56%] [Cov:==============================>    88%][Progress:================>             56%] [Cov:==============================>    88%][Progress:================>             56%] [Cov:==============================>    88%][Progress:================>             56%] [Cov:==============================>    88%][Progress:================>             56%] [Cov:==============================>    88%][Progress:================>             56%] [Cov:==============================>    88%][Progress:================>             56%] [Cov:==============================>    88%][Progress:================>             56%] [Cov:==============================>    88%][Progress:================>             56%] [Cov:==============================>    88%][Progress:================>             56%] [Cov:==============================>    88%][Progress:================>             56%] [Cov:==============================>    88%][Progress:================>             56%] [Cov:==============================>    88%][Progress:================>             56%] [Cov:==============================>    88%][Progress:================>             56%] [Cov:==============================>    88%][Progress:================>             56%] [Cov:==============================>    88%][Progress:=================>            57%] [Cov:==============================>    88%][Progress:=================>            57%] [Cov:==============================>    88%][Progress:=================>            57%] [Cov:==============================>    88%][Progress:=================>            57%] [Cov:==============================>    88%][Progress:=================>            57%] [Cov:==============================>    88%][Progress:=================>            57%] [Cov:==============================>    88%][Progress:=================>            57%] [Cov:==============================>    88%][Progress:=================>            57%] [Cov:==============================>    88%][Progress:=================>            57%] [Cov:==============================>    88%][Progress:=================>            57%] [Cov:==============================>    88%][Progress:=================>            57%] [Cov:==============================>    88%][Progress:=================>            57%] [Cov:==============================>    88%][Progress:=================>            57%] [Cov:==============================>    88%][Progress:=================>            57%] [Cov:==============================>    88%][Progress:=================>            57%] [Cov:==============================>    88%][Progress:=================>            57%] [Cov:==============================>    88%][Progress:=================>            57%] [Cov:==============================>    88%][Progress:=================>            57%] [Cov:==============================>    88%][Progress:=================>            57%] [Cov:==============================>    88%][Progress:=================>            57%] [Cov:==============================>    88%][Progress:=================>            57%] [Cov:==============================>    88%][Progress:=================>            57%] [Cov:==============================>    88%][Progress:=================>            57%] [Cov:==============================>    88%][Progress:=================>            57%] [Cov:==============================>    88%][Progress:=================>            57%] [Cov:==============================>    88%][Progress:=================>            57%] [Cov:==============================>    88%][Progress:==================>           60%] [Cov:==============================>    88%][Progress:==================>           60%] [Cov:==============================>    88%][Progress:==================>           60%] [Cov:==============================>    88%][Progress:==================>           60%] [Cov:==============================>    88%][Progress:==================>           60%] [Cov:==============================>    88%][Progress:==================>           60%] [Cov:==============================>    88%][Progress:==================>           60%] [Cov:==============================>    88%][Progress:==================>           60%] [Cov:==============================>    88%][Progress:==================>           63%] [Cov:==============================>    88%][Progress:==================>           63%] [Cov:==============================>    88%][Progress:==================>           63%] [Cov:==============================>    88%][Progress:==================>           63%] [Cov:==============================>    88%][Progress:==================>           63%] [Cov:==============================>    88%][Progress:==================>           63%] [Cov:==============================>    88%][Progress:==================>           63%] [Cov:==============================>    88%][Progress:==================>           63%] [Cov:==============================>    88%][Progress:==================>           63%] [Cov:==============================>    88%][Progress:==================>           63%] [Cov:==============================>    88%][Progress:==================>           63%] [Cov:==============================>    88%][Progress:==================>           63%] [Cov:==============================>    88%][Progress:==================>           63%] [Cov:==============================>    88%][Progress:==================>           63%] [Cov:==============================>    88%][Progress:==================>           63%] [Cov:==============================>    88%][Progress:==================>           63%] [Cov:==============================>    88%][Progress:==================>           63%] [Cov:==============================>    88%][Progress:==================>           63%] [Cov:==============================>    88%][Progress:==================>           63%] [Cov:==============================>    88%][Progress:==================>           63%] [Cov:==============================>    88%][Progress:==================>           63%] [Cov:==============================>    88%][Progress:==================>           63%] [Cov:==============================>    88%][Progress:==================>           63%] [Cov:==============================>    88%][Progress:==================>           63%] [Cov:==============================>    88%][Progress:==================>           63%] [Cov:==============================>    88%][Progress:==================>           63%] [Cov:==============================>    88%][Progress:==================>           63%] [Cov:==============================>    88%][Progress:==================>           63%] [Cov:==============================>    88%][Progress:===================>          64%] [Cov:==============================>    88%][Progress:===================>          64%] [Cov:==============================>    88%][Progress:===================>          64%] [Cov:==============================>    88%][Progress:===================>          64%] [Cov:==============================>    88%][Progress:===================>          64%] [Cov:==============================>    88%][Progress:===================>          64%] [Cov:==============================>    88%][Progress:===================>          64%] [Cov:==============================>    88%][Progress:===================>          64%] [Cov:==============================>    88%][Progress:===================>          64%] [Cov:==============================>    88%][Progress:===================>          64%] [Cov:==============================>    88%][Progress:===================>          64%] [Cov:==============================>    88%][Progress:===================>          64%] [Cov:==============================>    88%][Progress:===================>          64%] [Cov:==============================>    88%][Progress:===================>          64%] [Cov:==============================>    88%][Progress:===================>          64%] [Cov:==============================>    88%][Progress:===================>          64%] [Cov:==============================>    88%][Progress:===================>          64%] [Cov:==============================>    88%][Progress:===================>          64%] [Cov:==============================>    88%][Progress:====================>         67%] [Cov:==============================>    88%][Progress:====================>         67%] [Cov:==============================>    88%][Progress:====================>         67%] [Cov:==============================>    88%][Progress:====================>         67%] [Cov:==============================>    88%][Progress:====================>         69%] [Cov:==============================>    88%][Progress:====================>         69%] [Cov:==============================>    88%][Progress:====================>         69%] [Cov:==============================>    88%][Progress:====================>         69%] [Cov:==============================>    88%][Progress:====================>         69%] [Cov:==============================>    88%][Progress:====================>         69%] [Cov:==============================>    88%][Progress:====================>         69%] [Cov:==============================>    88%][Progress:====================>         69%] [Cov:==============================>    88%][Progress:====================>         69%] [Cov:==============================>    88%][Progress:====================>         69%] [Cov:==============================>    88%][Progress:=====================>        70%] [Cov:==============================>    88%][Progress:=====================>        70%] [Cov:==============================>    88%][Progress:=====================>        70%] [Cov:==============================>    88%][Progress:=====================>        70%] [Cov:==============================>    88%][Progress:=====================>        70%] [Cov:==============================>    88%][Progress:=====================>        70%] [Cov:==============================>    88%][Progress:=====================>        70%] [Cov:==============================>    88%][Progress:=====================>        70%] [Cov:==============================>    88%][Progress:=====================>        70%] [Cov:==============================>    88%][Progress:=====================>        70%] [Cov:==============================>    88%][Progress:=====================>        70%] [Cov:==============================>    88%][Progress:=====================>        70%] [Cov:==============================>    88%][Progress:=====================>        70%] [Cov:==============================>    88%][Progress:=====================>        72%] [Cov:==============================>    88%][Progress:=====================>        72%] [Cov:==============================>    88%][Progress:=====================>        72%] [Cov:==============================>    88%][Progress:=====================>        72%] [Cov:==============================>    88%][Progress:=====================>        72%] [Cov:==============================>    88%][Progress:=====================>        72%] [Cov:==============================>    88%][Progress:=====================>        73%] [Cov:==============================>    88%][Progress:=====================>        73%] [Cov:==============================>    88%][Progress:=====================>        73%] [Cov:==============================>    88%][Progress:=====================>        73%] [Cov:==============================>    88%][Progress:=====================>        73%] [Cov:==============================>    88%][Progress:=====================>        73%] [Cov:==============================>    88%][Progress:=====================>        73%] [Cov:==============================>    88%][Progress:======================>       75%] [Cov:==============================>    88%][Progress:======================>       75%] [Cov:==============================>    88%][Progress:======================>       75%] [Cov:==============================>    88%][Progress:======================>       75%] [Cov:==============================>    88%][Progress:======================>       75%] [Cov:==============================>    88%][Progress:======================>       75%] [Cov:==============================>    88%][Progress:======================>       75%] [Cov:==============================>    88%][Progress:======================>       75%] [Cov:==============================>    88%][Progress:======================>       75%] [Cov:==============================>    88%][Progress:======================>       75%] [Cov:==============================>    88%][Progress:======================>       75%] [Cov:==============================>    88%][Progress:======================>       75%] [Cov:==============================>    88%][Progress:======================>       75%] [Cov:==============================>    88%][Progress:======================>       75%] [Cov:==============================>    88%][Progress:======================>       76%] [Cov:==============================>    88%][Progress:======================>       76%] [Cov:==============================>    88%][Progress:======================>       76%] [Cov:==============================>    88%][Progress:======================>       76%] [Cov:==============================>    88%][Progress:======================>       76%] [Cov:==============================>    88%][Progress:======================>       76%] [Cov:==============================>    88%][Progress:======================>       76%] [Cov:==============================>    88%][Progress:======================>       76%] [Cov:==============================>    88%][Progress:======================>       76%] [Cov:==============================>    88%][Progress:======================>       76%] [Cov:==============================>    88%][Progress:======================>       76%] [Cov:==============================>    88%][Progress:======================>       76%] [Cov:==============================>    88%][Progress:======================>       76%] [Cov:==============================>    88%][Progress:======================>       76%] [Cov:==============================>    88%][Progress:======================>       76%] [Cov:==============================>    88%][Progress:======================>       76%] [Cov:==============================>    88%][Progress:======================>       76%] [Cov:==============================>    88%][Progress:======================>       76%] [Cov:==============================>    88%][Progress:======================>       76%] [Cov:==============================>    88%][Progress:======================>       76%] [Cov:==============================>    88%][Progress:======================>       76%] [Cov:==============================>    88%][Progress:======================>       76%] [Cov:==============================>    88%][Progress:======================>       76%] [Cov:==============================>    88%][Progress:======================>       76%] [Cov:==============================>    88%][Progress:======================>       76%] [Cov:==============================>    88%][Progress:======================>       76%] [Cov:==============================>    88%][Progress:======================>       76%] [Cov:==============================>    88%][Progress:======================>       76%] [Cov:==============================>    88%][Progress:=======================>      77%] [Cov:==============================>    88%][Progress:=======================>      77%] [Cov:==============================>    88%][Progress:=======================>      77%] [Cov:==============================>    88%][Progress:=======================>      77%] [Cov:==============================>    88%][Progress:=======================>      77%] [Cov:==============================>    88%][Progress:=======================>      77%] [Cov:==============================>    88%][Progress:=======================>      79%] [Cov:==============================>    88%][Progress:=======================>      79%] [Cov:==============================>    88%][Progress:=======================>      79%] [Cov:==============================>    88%][Progress:=======================>      79%] [Cov:==============================>    88%][Progress:=======================>      79%] [Cov:==============================>    88%][Progress:=======================>      79%] [Cov:==============================>    88%][Progress:=======================>      79%] [Cov:==============================>    88%][Progress:=======================>      79%] [Cov:==============================>    88%][Progress:=======================>      79%] [Cov:==============================>    88%][Progress:=======================>      79%] [Cov:==============================>    88%][Progress:========================>     80%] [Cov:==============================>    88%][Progress:========================>     80%] [Cov:==============================>    88%][Progress:========================>     80%] [Cov:==============================>    88%][Progress:========================>     82%] [Cov:==============================>    88%][Progress:========================>     82%] [Cov:==============================>    88%][Progress:========================>     82%] [Cov:==============================>    88%][Progress:========================>     82%] [Cov:==============================>    88%][Progress:========================>     82%] [Cov:==============================>    88%][Progress:========================>     82%] [Cov:==============================>    88%][Progress:========================>     82%] [Cov:==============================>    88%][Progress:========================>     82%] [Cov:==============================>    88%][Progress:========================>     82%] [Cov:==============================>    88%][Progress:========================>     82%] [Cov:==============================>    88%][Progress:========================>     82%] [Cov:==============================>    88%][Progress:========================>     82%] [Cov:==============================>    88%][Progress:========================>     82%] [Cov:==============================>    88%][Progress:========================>     82%] [Cov:==============================>    88%][Progress:========================>     82%] [Cov:==============================>    88%][Progress:========================>     82%] [Cov:==============================>    88%][Progress:========================>     82%] [Cov:==============================>    88%][Progress:========================>     82%] [Cov:==============================>    88%][Progress:========================>     82%] [Cov:==============================>    88%][Progress:========================>     83%] [Cov:==============================>    88%][Progress:========================>     83%] [Cov:==============================>    88%][Progress:========================>     83%] [Cov:==============================>    88%][Progress:========================>     83%] [Cov:==============================>    88%][Progress:========================>     83%] [Cov:==============================>    88%][Progress:========================>     83%] [Cov:==============================>    88%][Progress:========================>     83%] [Cov:==============================>    88%][Progress:========================>     83%] [Cov:==============================>    88%][Progress:========================>     83%] [Cov:==============================>    88%][Progress:========================>     83%] [Cov:==============================>    88%][Progress:========================>     83%] [Cov:==============================>    88%][Progress:========================>     83%] [Cov:==============================>    88%][Progress:========================>     83%] [Cov:==============================>    88%][Progress:========================>     83%] [Cov:==============================>    88%][Progress:========================>     83%] [Cov:==============================>    88%][Progress:========================>     83%] [Cov:==============================>    88%][Progress:========================>     83%] [Cov:==============================>    88%][Progress:========================>     83%] [Cov:==============================>    88%][Progress:========================>     83%] [Cov:==============================>    88%][Progress:========================>     83%] [Cov:==============================>    88%][Progress:========================>     83%] [Cov:==============================>    88%][Progress:========================>     83%] [Cov:==============================>    88%][Progress:========================>     83%] [Cov:==============================>    88%][Progress:=========================>    86%] [Cov:==============================>    88%][Progress:=========================>    86%] [Cov:==============================>    88%][Progress:=========================>    86%] [Cov:==============================>    88%][Progress:=========================>    86%] [Cov:==============================>    88%][Progress:=========================>    86%] [Cov:==============================>    88%][Progress:==========================>   88%] [Cov:==============================>    88%][Progress:==========================>   88%] [Cov:==============================>    88%][Progress:==========================>   88%] [Cov:==============================>    88%][Progress:==========================>   88%] [Cov:==============================>    88%][Progress:==========================>   88%] [Cov:==============================>    88%][Progress:==========================>   89%] [Cov:==============================>    88%][Progress:==========================>   89%] [Cov:==============================>    88%][Progress:==========================>   89%] [Cov:==============================>    88%][Progress:==========================>   89%] [Cov:==============================>    88%][Progress:==========================>   89%] [Cov:==============================>    88%][Progress:==========================>   89%] [Cov:==============================>    88%][Progress:==========================>   89%] [Cov:==============================>    88%][Progress:==========================>   89%] [Cov:==============================>    88%][Progress:==========================>   89%] [Cov:==============================>    88%][Progress:==========================>   89%] [Cov:==============================>    88%][Progress:==========================>   89%] [Cov:==============================>    88%][Progress:==========================>   89%] [Cov:==============================>    88%][Progress:==========================>   89%] [Cov:==============================>    88%][Progress:==========================>   89%] [Cov:==============================>    88%][Progress:==========================>   89%] [Cov:==============================>    88%][Progress:==========================>   89%] [Cov:==============================>    88%][Progress:==========================>   89%] [Cov:==============================>    88%][Progress:==========================>   89%] [Cov:==============================>    88%][Progress:==========================>   89%] [Cov:==============================>    88%][Progress:==========================>   89%] [Cov:==============================>    88%][Progress:==========================>   89%] [Cov:==============================>    88%][Progress:==========================>   89%] [Cov:==============================>    88%][Progress:==========================>   89%] [Cov:==============================>    88%][Progress:==========================>   89%] [Cov:==============================>    88%][Progress:==========================>   89%] [Cov:==============================>    88%][Progress:==========================>   89%] [Cov:==============================>    88%][Progress:==========================>   89%] [Cov:==============================>    88%][Progress:==========================>   89%] [Cov:==============================>    88%][Progress:==========================>   89%] [Cov:==============================>    88%][Progress:==========================>   89%] [Cov:==============================>    88%][Progress:===========================>  92%] [Cov:==============================>    88%][Progress:===========================>  92%] [Cov:==============================>    88%][Progress:===========================>  92%] [Cov:==============================>    88%][Progress:===========================>  92%] [Cov:==============================>    88%][Progress:===========================>  92%] [Cov:==============================>    88%][Progress:===========================>  92%] [Cov:==============================>    88%][Progress:============================> 95%] [Cov:==============================>    88%][Progress:============================> 95%] [Cov:==============================>    88%][Progress:============================> 95%] [Cov:==============================>    88%][Progress:============================> 95%] [Cov:==============================>    88%][Progress:============================> 95%] [Cov:==============================>    88%][Progress:============================> 95%] [Cov:==============================>    88%][Progress:============================> 95%] [Cov:==============================>    88%][Progress:============================> 95%] [Cov:==============================>    88%][Progress:============================> 95%] [Cov:==============================>    88%][Progress:============================> 95%] [Cov:==============================>    88%][Progress:============================> 95%] [Cov:==============================>    88%][Progress:============================> 95%] [Cov:==============================>    88%][Progress:============================> 95%] [Cov:==============================>    88%][Progress:============================> 95%] [Cov:==============================>    88%][Progress:============================> 95%] [Cov:==============================>    88%][Progress:============================> 95%] [Cov:==============================>    88%][Progress:============================> 95%] [Cov:==============================>    88%][Progress:============================> 95%] [Cov:==============================>    88%][Progress:============================> 95%] [Cov:==============================>    88%][Progress:============================> 95%] [Cov:==============================>    88%][Progress:============================> 95%] [Cov:==============================>    88%][Progress:============================> 95%] [Cov:==============================>    88%][Progress:============================> 96%] [Cov:==============================>    88%][Progress:============================> 96%] [Cov:==============================>    88%][Progress:============================> 96%] [Cov:==============================>    88%][Progress:============================> 96%] [Cov:==============================>    88%][Progress:============================> 96%] [Cov:==============================>    88%][Progress:============================> 96%] [Cov:==============================>    88%][Progress:============================> 96%] [Cov:==============================>    88%][Progress:============================> 96%] [Cov:==============================>    88%][Progress:============================> 96%] [Cov:==============================>    88%][Progress:============================> 96%] [Cov:==============================>    88%][Progress:============================> 96%] [Cov:==============================>    88%][Progress:============================> 96%] [Cov:==============================>    88%][Progress:============================> 96%] [Cov:==============================>    88%][Progress:============================> 96%] [Cov:==============================>    88%][Progress:============================> 96%] [Cov:==============================>    88%][Progress:============================> 96%] [Cov:==============================>    88%][Progress:============================> 96%] [Cov:==============================>    88%][Progress:============================> 96%] [Cov:==============================>    88%][Progress:============================> 96%] [Cov:==============================>    88%][Progress:============================> 96%] [Cov:==============================>    88%][Progress:============================> 96%] [Cov:==============================>    88%][Progress:============================> 96%] [Cov:==============================>    88%][Progress:============================> 96%] [Cov:==============================>    88%][Progress:============================> 96%] [Cov:==============================>    88%][Progress:=============================>99%] [Cov:==============================>    88%][Progress:=============================>99%] [Cov:==============================>    88%][Progress:=============================>99%] [Cov:==============================>    88%][Progress:=============================>99%] [Cov:==============================>    88%][Progress:=============================>99%] [Cov:==============================>    88%][Progress:=============================>99%] [Cov:==============================>    88%][Progress:==============================100%] [Cov:==============================>    88%]
* Search finished after 205s and 523 generations, 195625 statements, best individual has fitness: 3.0
* Generated before the refinement 14 tests with total length 58
statement is: wheel.asm.ClassWriter(I)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class wheel.asm.ClassWriter
statement code is: ClassWriter classWriter = new ClassWriter(2368)
statement is: wheel.asm.FieldWriter(Lwheel/asm/ClassWriter;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class wheel.asm.FieldWriter
statement code is: FieldWriter fieldWriter = new FieldWriter(arg0, (-3077), "", "RuntimeVisibleAnnotations", "", "")
statement is: visitEnd()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: fieldWriter.visitEnd()
test data is: ClassWriter classWriter = new ClassWriter(2368);
FieldWriter fieldWriter = new FieldWriter(classWriter, (-3077), "", "RuntimeVisibleAnnotations", "", "");
fieldWriter.visitEnd();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        FieldWriter fieldWriter = new FieldWriter(classWriter, 1234, "myField", "java.lang.String", "myAnnotation", "@MyAnnotation");
        fieldWriter.visitEnd();
    }
}
statement is: FieldWriter fieldWriter = new FieldWriter(classWriter, 1234, "myField", "java.lang.String", "myAnnotation", "@MyAnnotation"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: fieldWriter.visitEnd(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: fieldWriter.visitEnd() target is: fieldWriter method is: visitEnd()
source statement: wheel.asm.FieldWriter(Lwheel/asm/ClassWriter;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)V callee: VariableReference: Statement 1, type wheel.asm.FieldWriterindex is: 5
Matched Method is: visitEnd()V
TestCase is: int _int = 1234;
String string = "myField";
String string = "java.lang.String";
String string = "myAnnotation";
String string = "@MyAnnotation";
FieldWriter fieldWriter = new FieldWriter((ClassWriter) _int, (int) string, string, string, string, "");
((FieldWriter) string).visitEnd();

statement is: wheel.asm.ClassWriter(I)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class wheel.asm.ClassWriter
statement code is: ClassWriter classWriter = new ClassWriter((-530))
statement is: visitField(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)Lwheel/asm/FieldVisitor; type is: class org.evosuite.testcase.statements.MethodStatement return type class wheel.asm.FieldWriter
statement code is: FieldWriter visitField = (FieldWriter)classWriter.visitField((-530), "", "", "", "")
statement is: wheel.asm.FieldWriter(Lwheel/asm/ClassWriter;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class wheel.asm.FieldWriter
statement code is: FieldWriter fieldWriter = new FieldWriter(arg0, 2, "", "", "", "")
test data is: ClassWriter classWriter = new ClassWriter((-530));
classWriter.visitField((-530), "", "", "", "");
FieldWriter fieldWriter = new FieldWriter(classWriter, 2, "", "", "", "");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        classWriter.visitField(ACC_PUBLIC, "name", "Ljava/lang/String;", null, null);
        FieldWriter fieldWriter = new FieldWriter(classWriter, 2, "age", "I", null, null);
    }
}
statement is: classWriter.visitField(ACC_PUBLIC, "name", "Ljava/lang/String;", null, null), class spoon.support.reflect.code.CtInvocationImpl
invocation is: classWriter.visitField(ACC_PUBLIC, "name", "Ljava/lang/String;", null, null) target is: classWriter method is: visitField(java.lang.String,java.lang.String,<unknown>,<unknown>)
statement is: FieldWriter fieldWriter = new FieldWriter(classWriter, 2, "age", "I", null, null), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase is: int _int = 2;
String string = "age";
String string = "I";
FieldWriter fieldWriter = new FieldWriter((ClassWriter) _int, (int) string, string, "", "", "");

statement is: wheel.asm.ClassWriter(I)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class wheel.asm.ClassWriter
statement code is: ClassWriter classWriter = new ClassWriter(2608)
statement is: wheel.asm.FieldWriter(Lwheel/asm/ClassWriter;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class wheel.asm.FieldWriter
statement code is: FieldWriter fieldWriter = new FieldWriter(arg0, 2608, "SLgTnaturN", "SLgTnaturN", "SLgTnaturN", (Object) null)
statement is: getSize()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int size = fieldWriter.getSize()
test data is: ClassWriter classWriter = new ClassWriter(2608);
FieldWriter fieldWriter = new FieldWriter(classWriter, 2608, "SLgTnaturN", "SLgTnaturN", "SLgTnaturN", (Object) null);
fieldWriter.getSize();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        FieldWriter fieldWriter = new FieldWriter(classWriter, 2608, "myField", "Ljava/lang/String;", ((Object) (null)));
        fieldWriter.getSize();
    }
}
statement is: FieldWriter fieldWriter = new FieldWriter(classWriter, 2608, "myField", "Ljava/lang/String;", ((Object) (null))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: fieldWriter.getSize(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: fieldWriter.getSize() target is: fieldWriter method is: getSize()
statement is: wheel.asm.ClassWriter(I)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class wheel.asm.ClassWriter
statement code is: ClassWriter classWriter = new ClassWriter(2596)
statement is: wheel.asm.FieldWriter(Lwheel/asm/ClassWriter;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class wheel.asm.FieldWriter
statement code is: FieldWriter fieldWriter = new FieldWriter(arg0, 1, "Signature", "Signature", "Signature", "Signature")
statement is: visitAnnotation(Ljava/lang/String;Z)Lwheel/asm/AnnotationVisitor; type is: class org.evosuite.testcase.statements.MethodStatement return type class wheel.asm.AnnotationWriter
statement code is: AnnotationWriter visitAnnotation = (AnnotationWriter)fieldWriter.visitAnnotation("Signature", true)
statement is: getSize()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int size = fieldWriter.getSize()
test data is: ClassWriter classWriter = new ClassWriter(2596);
FieldWriter fieldWriter = new FieldWriter(classWriter, 1, "Signature", "Signature", "Signature", "Signature");
fieldWriter.visitAnnotation("Signature", true);
fieldWriter.getSize();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        FieldWriter fieldWriter = new FieldWriter(classWriter, 1, "Signature", "Signature", "Signature", "Signature");
        fieldWriter.visitAnnotation("Signature", true);
        fieldWriter.getSize();
    }
}
statement is: FieldWriter fieldWriter = new FieldWriter(classWriter, 1, "Signature", "Signature", "Signature", "Signature"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: fieldWriter.visitAnnotation("Signature", true), class spoon.support.reflect.code.CtInvocationImpl
invocation is: fieldWriter.visitAnnotation("Signature", true) target is: fieldWriter method is: visitAnnotation(java.lang.String,boolean)
source statement: wheel.asm.FieldWriter(Lwheel/asm/ClassWriter;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)V callee: VariableReference: Statement 1, type wheel.asm.FieldWriterindex is: 5
Matched Method is: visitAnnotation(Ljava/lang/String;Z)Lwheel/asm/AnnotationVisitor;
statement is: fieldWriter.getSize(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: fieldWriter.getSize() target is: fieldWriter method is: getSize()
source statement: wheel.asm.FieldWriter(Lwheel/asm/ClassWriter;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)V callee: VariableReference: Statement 1, type wheel.asm.FieldWriterindex is: 5
Matched Method is: getSize()I
TestCase is: int _int = 1;
String string = "Signature";
String string = "Signature";
String string = "Signature";
String string = "Signature";
FieldWriter fieldWriter = new FieldWriter((ClassWriter) _int, (int) string, string, string, string, "Signature");
String string = "Signature";
boolean _boolean = true;
((FieldWriter) string).visitAnnotation(string, _boolean);
((FieldWriter) string).getSize();

statement is: wheel.asm.ClassWriter(I)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class wheel.asm.ClassWriter
statement code is: ClassWriter classWriter = new ClassWriter(2596)
statement is: wheel.asm.FieldWriter(Lwheel/asm/ClassWriter;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class wheel.asm.FieldWriter
statement code is: FieldWriter fieldWriter = new FieldWriter(arg0, 1, "Signature", "Signature", "Signature", "Signature")
statement is: getSize()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int size = fieldWriter.getSize()
test data is: ClassWriter classWriter = new ClassWriter(2596);
FieldWriter fieldWriter = new FieldWriter(classWriter, 1, "Signature", "Signature", "Signature", "Signature");
fieldWriter.getSize();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        FieldWriter fieldWriter = new FieldWriter(classWriter, 1, "A unique signature", "Signature", "A meaningful description", "A relevant comment");
        fieldWriter.getSize();
    }
}
statement is: FieldWriter fieldWriter = new FieldWriter(classWriter, 1, "A unique signature", "Signature", "A meaningful description", "A relevant comment"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: fieldWriter.getSize(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: fieldWriter.getSize() target is: fieldWriter method is: getSize()
source statement: wheel.asm.FieldWriter(Lwheel/asm/ClassWriter;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)V callee: VariableReference: Statement 1, type wheel.asm.FieldWriterindex is: 5
Matched Method is: getSize()I
TestCase is: int _int = 1;
String string = "A unique signature";
String string = "Signature";
String string = "A meaningful description";
String string = "A relevant comment";
FieldWriter fieldWriter = new FieldWriter((ClassWriter) _int, (int) string, string, string, string, "Signature");
((FieldWriter) string).getSize();

statement is: wheel.asm.ClassWriter(I)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class wheel.asm.ClassWriter
statement code is: ClassWriter classWriter = new ClassWriter((-3622))
statement is: org.evosuite.testcase.statements.AssignmentStatement@7692a4b1 type is: class org.evosuite.testcase.statements.AssignmentStatement return type int
statement code is: classWriter.version = (-1542)
statement is: wheel.asm.FieldWriter(Lwheel/asm/ClassWriter;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class wheel.asm.FieldWriter
statement code is: FieldWriter fieldWriter = new FieldWriter(arg0, (-3622), "vI}$l^w, Nw", "wheel.asm.FieldWriter", "", "SLgnature")
statement is: getSize()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int size = fieldWriter.getSize()
test data is: ClassWriter classWriter = new ClassWriter((-3622));
classWriter.version = (-1542);
FieldWriter fieldWriter = new FieldWriter(classWriter, (-3622), "vI}$l^w, Nw", "wheel.asm.FieldWriter", "", "SLgnature");
fieldWriter.getSize();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        classWriter.version = 52;
        FieldWriter fieldWriter = new FieldWriter(classWriter, 4, "vI}$l^w, Nw", "wheel.asm.FieldWriter", "", "SLgnature");
        fieldWriter.getSize();
    }
}
statement is: classWriter.version = 52, class spoon.support.reflect.code.CtAssignmentImpl
statement is: FieldWriter fieldWriter = new FieldWriter(classWriter, 4, "vI}$l^w, Nw", "wheel.asm.FieldWriter", "", "SLgnature"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: fieldWriter.getSize(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: fieldWriter.getSize() target is: fieldWriter method is: getSize()
source statement: wheel.asm.FieldWriter(Lwheel/asm/ClassWriter;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)V callee: VariableReference: Statement 2, type wheel.asm.FieldWriterindex is: 5
Matched Method is: getSize()I
TestCase is: int _int = 4;
String string = "vI}$l^w, Nw";
String string = "wheel.asm.FieldWriter";
String string = "";
String string = "SLgnature";
FieldWriter fieldWriter = new FieldWriter((ClassWriter) _int, (int) string, string, string, string, "SLgnature");
((FieldWriter) string).getSize();

statement is: wheel.asm.ClassWriter(I)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class wheel.asm.ClassWriter
statement code is: ClassWriter classWriter = new ClassWriter((-530))
statement is: visitField(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)Lwheel/asm/FieldVisitor; type is: class org.evosuite.testcase.statements.MethodStatement return type class wheel.asm.FieldWriter
statement code is: FieldWriter visitField = (FieldWriter)classWriter.visitField((-1120), "xGXsyfF#)Kz", "xGXsyfF#)Kz", (String) null, "xGXsyfF#)Kz")
statement is: getSize()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int size = fieldWriter.getSize()
test data is: ClassWriter classWriter = new ClassWriter((-530));
FieldWriter visitField = (FieldWriter)classWriter.visitField((-1120), "xGXsyfF#)Kz", "xGXsyfF#)Kz", (String) null, "xGXsyfF#)Kz");
visitField.getSize();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        FieldWriter visitField = ((FieldWriter) (classWriter.visitField(1, "xGXsyfF#)Kz", "xGXsyfF#)Kz", null, "xGXsyfF#)Kz")));
        visitField.getSize();
    }
}
statement is: FieldWriter visitField = ((FieldWriter) (classWriter.visitField(1, "xGXsyfF#)Kz", "xGXsyfF#)Kz", null, "xGXsyfF#)Kz"))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: ((FieldWriter) (classWriter.visitField(1, "xGXsyfF#)Kz", "xGXsyfF#)Kz", null, "xGXsyfF#)Kz"))) target is: classWriter method is: visitField(int,java.lang.String,java.lang.String,<unknown>,java.lang.String)
statement is: visitField.getSize(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: visitField.getSize() target is: visitField method is: getSize()
statement is: wheel.asm.ClassWriter(I)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class wheel.asm.ClassWriter
statement code is: ClassWriter classWriter = new ClassWriter((-530))
statement is: visitField(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)Lwheel/asm/FieldVisitor; type is: class org.evosuite.testcase.statements.MethodStatement return type class wheel.asm.FieldWriter
statement code is: FieldWriter visitField = (FieldWriter)classWriter.visitField((-1120), "", "", "", "")
statement is: visitAnnotation(Ljava/lang/String;Z)Lwheel/asm/AnnotationVisitor; type is: class org.evosuite.testcase.statements.MethodStatement return type class wheel.asm.AnnotationWriter
statement code is: AnnotationWriter visitAnnotation = (AnnotationWriter)fieldWriter.visitAnnotation("", false)
statement is: getSize()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int size = fieldWriter.getSize()
test data is: ClassWriter classWriter = new ClassWriter((-530));
FieldWriter visitField = (FieldWriter)classWriter.visitField((-1120), "", "", "", "");
visitField.visitAnnotation("", false);
visitField.getSize();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        FieldWriter visitField = ((FieldWriter) (classWriter.visitField(-1120, "", "", "", "")));
        visitField.visitAnnotation("", false);
        visitField.getSize();
    }
}
statement is: FieldWriter visitField = ((FieldWriter) (classWriter.visitField(-1120, "", "", "", ""))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: ((FieldWriter) (classWriter.visitField(-1120, "", "", "", ""))) target is: classWriter method is: visitField(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
statement is: visitField.visitAnnotation("", false), class spoon.support.reflect.code.CtInvocationImpl
invocation is: visitField.visitAnnotation("", false) target is: visitField method is: visitAnnotation(java.lang.String,boolean)
statement is: visitField.getSize(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: visitField.getSize() target is: visitField method is: getSize()
statement is: wheel.asm.ClassWriter(I)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class wheel.asm.ClassWriter
statement code is: ClassWriter classWriter = new ClassWriter(2368)
statement is: wheel.asm.FieldWriter(Lwheel/asm/ClassWriter;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class wheel.asm.FieldWriter
statement code is: FieldWriter fieldWriter = new FieldWriter(arg0, (-3077), "", "RuntimeVisibleAnnotations", "", "")
statement is: wheel.asm.Attribute(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class wheel.asm.Attribute
statement code is: Attribute attribute = new Attribute((String) null)
statement is: visitAttribute(Lwheel/asm/Attribute;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: fieldWriter.visitAttribute(arg0)
statement is: getSize()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int size = fieldWriter.getSize()
test data is: ClassWriter classWriter = new ClassWriter(2368);
FieldWriter fieldWriter = new FieldWriter(classWriter, (-3077), "", "RuntimeVisibleAnnotations", "", "");
Attribute attribute = new Attribute((String) null);
fieldWriter.visitAttribute(attribute);
fieldWriter.getSize();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        FieldWriter fieldWriter = new FieldWriter(classWriter, -3077, "My annotation", "RuntimeVisibleAnnotations", "", "");
        Attribute attribute = new Attribute(((String) (null)));
        fieldWriter.visitAttribute(attribute);
        fieldWriter.getSize();
    }
}
statement is: FieldWriter fieldWriter = new FieldWriter(classWriter, -3077, "My annotation", "RuntimeVisibleAnnotations", "", ""), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Attribute attribute = new Attribute(((String) (null))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: fieldWriter.visitAttribute(attribute), class spoon.support.reflect.code.CtInvocationImpl
invocation is: fieldWriter.visitAttribute(attribute) target is: fieldWriter method is: visitAttribute(Attribute)
source statement: wheel.asm.FieldWriter(Lwheel/asm/ClassWriter;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)V callee: VariableReference: Statement 1, type wheel.asm.FieldWriterindex is: 4
Matched Method is: visitAttribute(Lwheel/asm/Attribute;)V
statement is: fieldWriter.getSize(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: fieldWriter.getSize() target is: fieldWriter method is: getSize()
source statement: wheel.asm.FieldWriter(Lwheel/asm/ClassWriter;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)V callee: VariableReference: Statement 1, type wheel.asm.FieldWriterindex is: 4
Matched Method is: getSize()I
TestCase is: String string = "My annotation";
String string = "RuntimeVisibleAnnotations";
String string = "";
String string = "";
FieldWriter fieldWriter = new FieldWriter((ClassWriter) string, (int) string, string, string, "", "");
Attribute attribute = new Attribute((String) null);
((FieldWriter) string).visitAttribute(attribute);
((FieldWriter) string).getSize();

statement is: wheel.asm.ClassWriter(I)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class wheel.asm.ClassWriter
statement code is: ClassWriter classWriter = new ClassWriter((-2521))
statement is: visitField(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)Lwheel/asm/FieldVisitor; type is: class org.evosuite.testcase.statements.MethodStatement return type class wheel.asm.FieldWriter
statement code is: FieldWriter visitField = (FieldWriter)classWriter.visitField((-1905), "", "zJ=-(SW`reHx7.", (String) null, (Object) null)
statement is: wheel.asm.ByteVector()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class wheel.asm.ByteVector
statement code is: ByteVector byteVector = new ByteVector()
statement is: put(Lwheel/asm/ByteVector;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: fieldWriter.put(arg0)
test data is: ClassWriter classWriter = new ClassWriter((-2521));
FieldWriter visitField = (FieldWriter)classWriter.visitField((-1905), "", "zJ=-(SW`reHx7.", (String) null, (Object) null);
ByteVector byteVector = new ByteVector();
visitField.put(byteVector);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        FieldWriter visitField = ((FieldWriter) (classWriter.visitField(1905, "", "myFieldName", ((String) (null)), ((Object) (null)))));
        ByteVector byteVector = new ByteVector();
        visitField.put(byteVector);
    }
}
statement is: FieldWriter visitField = ((FieldWriter) (classWriter.visitField(1905, "", "myFieldName", ((String) (null)), ((Object) (null))))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: ((FieldWriter) (classWriter.visitField(1905, "", "myFieldName", ((String) (null)), ((Object) (null))))) target is: classWriter method is: visitField(int,java.lang.String,java.lang.String,java.lang.String,java.lang.Object)
statement is: ByteVector byteVector = new ByteVector(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: visitField.put(byteVector), class spoon.support.reflect.code.CtInvocationImpl
invocation is: visitField.put(byteVector) target is: visitField method is: put(ByteVector)
TestCase is: ByteVector byteVector = new ByteVector();

statement is: wheel.asm.ClassWriter(I)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class wheel.asm.ClassWriter
statement code is: ClassWriter classWriter = new ClassWriter((-530))
statement is: org.evosuite.testcase.statements.ArrayStatement@3618aab1 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [Ljava.lang.String;
statement code is: String[] stringArray = new String[0]
statement is: visit(IILjava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: classWriter.visit((-530), 1, "", "2+", "2+", arg5)
statement is: visitField(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)Lwheel/asm/FieldVisitor; type is: class org.evosuite.testcase.statements.MethodStatement return type class wheel.asm.FieldWriter
statement code is: FieldWriter visitField = (FieldWriter)classWriter.visitField((-1134), "", "", "", "")
statement is: wheel.asm.ByteVector()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class wheel.asm.ByteVector
statement code is: ByteVector byteVector = new ByteVector()
statement is: put(Lwheel/asm/ByteVector;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: fieldWriter.put(arg0)
test data is: ClassWriter classWriter = new ClassWriter((-530));
String[] stringArray = new String[0];
classWriter.visit((-530), 1, "", "2+", "2+", stringArray);
FieldWriter visitField = (FieldWriter)classWriter.visitField((-1134), "", "", "", "");
ByteVector byteVector = new ByteVector();
visitField.put(byteVector);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        and = $missing$;
    }
}
statement is: and = $missing$, class spoon.support.reflect.code.CtAssignmentImpl
statement is: wheel.asm.ClassWriter(I)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class wheel.asm.ClassWriter
statement code is: ClassWriter classWriter = new ClassWriter((-530))
statement is: visitField(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)Lwheel/asm/FieldVisitor; type is: class org.evosuite.testcase.statements.MethodStatement return type class wheel.asm.FieldWriter
statement code is: FieldWriter visitField = (FieldWriter)classWriter.visitField(2, "", "", "", "")
statement is: wheel.asm.ByteVector()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class wheel.asm.ByteVector
statement code is: ByteVector byteVector = new ByteVector()
statement is: visitAnnotation(Ljava/lang/String;Z)Lwheel/asm/AnnotationVisitor; type is: class org.evosuite.testcase.statements.MethodStatement return type class wheel.asm.AnnotationWriter
statement code is: AnnotationWriter visitAnnotation = (AnnotationWriter)fieldWriter.visitAnnotation("The size must be non-negative", true)
statement is: put(Lwheel/asm/ByteVector;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: fieldWriter.put(arg0)
test data is: ClassWriter classWriter = new ClassWriter((-530));
FieldWriter visitField = (FieldWriter)classWriter.visitField(2, "", "", "", "");
ByteVector byteVector = new ByteVector();
visitField.visitAnnotation("The size must be non-negative", true);
visitField.put(byteVector);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        visitField = ((FieldWriter) (classWriter.visitField(2, "myField", "Ljava/lang/String;", null, "")));
        byteVector = new ByteVector();
        visitField.visitAnnotation("The size must be non-negative", true);
        visitField.put(byteVector);
    }
}
statement is: visitField = ((FieldWriter) (classWriter.visitField(2, "myField", "Ljava/lang/String;", null, ""))), class spoon.support.reflect.code.CtAssignmentImpl
statement is: byteVector = new ByteVector(), class spoon.support.reflect.code.CtAssignmentImpl
statement is: visitField.visitAnnotation("The size must be non-negative", true), class spoon.support.reflect.code.CtInvocationImpl
invocation is: visitField.visitAnnotation("The size must be non-negative", true) target is: visitField method is: visitAnnotation(java.lang.String,boolean)
statement is: visitField.put(byteVector), class spoon.support.reflect.code.CtInvocationImpl
invocation is: visitField.put(byteVector) target is: visitField method is: put()
statement is: wheel.asm.ClassWriter(I)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class wheel.asm.ClassWriter
statement code is: ClassWriter classWriter = new ClassWriter((-530))
statement is: visitField(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)Lwheel/asm/FieldVisitor; type is: class org.evosuite.testcase.statements.MethodStatement return type class wheel.asm.FieldWriter
statement code is: FieldWriter visitField = (FieldWriter)classWriter.visitField((-1120), "", "", "", "")
statement is: wheel.asm.ByteVector()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class wheel.asm.ByteVector
statement code is: ByteVector byteVector = new ByteVector()
statement is: visitAnnotation(Ljava/lang/String;Z)Lwheel/asm/AnnotationVisitor; type is: class org.evosuite.testcase.statements.MethodStatement return type class wheel.asm.AnnotationWriter
statement code is: AnnotationWriter visitAnnotation = (AnnotationWriter)fieldWriter.visitAnnotation("", false)
statement is: put(Lwheel/asm/ByteVector;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: fieldWriter.put(arg0)
test data is: ClassWriter classWriter = new ClassWriter((-530));
FieldWriter visitField = (FieldWriter)classWriter.visitField((-1120), "", "", "", "");
ByteVector byteVector = new ByteVector();
visitField.visitAnnotation("", false);
visitField.put(byteVector);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        ByteVector byteVector = new ByteVector();
        visitField.visitAnnotation("", false);
        visitField.put(byteVector);
    }
}
statement is: ByteVector byteVector = new ByteVector(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: visitField.visitAnnotation("", false), class spoon.support.reflect.code.CtInvocationImpl
invocation is: visitField.visitAnnotation("", false) target is: visitField method is: visitAnnotation(java.lang.String,boolean)
statement is: visitField.put(byteVector), class spoon.support.reflect.code.CtInvocationImpl
invocation is: visitField.put(byteVector) target is: visitField method is: put(ByteVector)
TestCase is: ByteVector byteVector = new ByteVector();

statement is: wheel.asm.ClassWriter(I)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class wheel.asm.ClassWriter
statement code is: ClassWriter classWriter = new ClassWriter((-530))
statement is: visitField(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)Lwheel/asm/FieldVisitor; type is: class org.evosuite.testcase.statements.MethodStatement return type class wheel.asm.FieldWriter
statement code is: FieldWriter visitField = (FieldWriter)classWriter.visitField((-1165), "", "", "", "")
statement is: wheel.asm.ByteVector()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class wheel.asm.ByteVector
statement code is: ByteVector byteVector = new ByteVector()
statement is: wheel.asm.Attribute(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class wheel.asm.Attribute
statement code is: Attribute attribute = new Attribute("")
statement is: visitAttribute(Lwheel/asm/Attribute;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: fieldWriter.visitAttribute(arg0)
statement is: put(Lwheel/asm/ByteVector;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: fieldWriter.put(arg0)
test data is: ClassWriter classWriter = new ClassWriter((-530));
FieldWriter visitField = (FieldWriter)classWriter.visitField((-1165), "", "", "", "");
ByteVector byteVector = new ByteVector();
Attribute attribute = new Attribute("");
visitField.visitAttribute(attribute);
visitField.put(byteVector);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        ByteVector byteVector = new ByteVector();// creates a new empty ByteVector object

        Attribute attribute = new Attribute("MyAttribute");// creates a new instance of the Attribute class with the name "MyAttribute"

        visitField.visitAttribute(attribute);// adds the attribute to the field

        visitField.put(byteVector);// writes the field data to the byteVector }}

    }
}
statement is: ByteVector byteVector = new ByteVector()// creates a new empty ByteVector object
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Attribute attribute = new Attribute("MyAttribute")// creates a new instance of the Attribute class with the name "MyAttribute"
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: visitField.visitAttribute(attribute)// adds the attribute to the field
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: visitField.visitAttribute(attribute)// adds the attribute to the field
 target is: visitField method is: visitAttribute(Attribute)
statement is: visitField.put(byteVector)// writes the field data to the byteVector }}
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: visitField.put(byteVector)// writes the field data to the byteVector }}
 target is: visitField method is: put(ByteVector)
TestCase is: ByteVector byteVector = new ByteVector();
String string = "MyAttribute";
Attribute attribute = new Attribute(string);

* test suite isTestSuite: 23
Test 0: 
ClassWriter classWriter = new ClassWriter(2368);
FieldWriter fieldWriter = new FieldWriter(classWriter, (-3077), "", "RuntimeVisibleAnnotations", "", "");
fieldWriter.visitEnd();
Test 1: 
ClassWriter classWriter = new ClassWriter((-530));
classWriter.visitField((-530), "", "", "", "");
FieldWriter fieldWriter = new FieldWriter(classWriter, 2, "", "", "", "");
Test 2: 
ClassWriter classWriter = new ClassWriter(2608);
FieldWriter fieldWriter = new FieldWriter(classWriter, 2608, "SLgTnaturN", "SLgTnaturN", "SLgTnaturN", (Object) null);
fieldWriter.getSize();
Test 3: 
ClassWriter classWriter = new ClassWriter(2596);
FieldWriter fieldWriter = new FieldWriter(classWriter, 1, "Signature", "Signature", "Signature", "Signature");
fieldWriter.visitAnnotation("Signature", true);
fieldWriter.getSize();
Test 4: 
ClassWriter classWriter = new ClassWriter(2596);
FieldWriter fieldWriter = new FieldWriter(classWriter, 1, "Signature", "Signature", "Signature", "Signature");
fieldWriter.getSize();
Test 5: 
ClassWriter classWriter = new ClassWriter((-3622));
classWriter.version = (-1542);
FieldWriter fieldWriter = new FieldWriter(classWriter, (-3622), "vI}$l^w, Nw", "wheel.asm.FieldWriter", "", "SLgnature");
fieldWriter.getSize();
Test 6: 
ClassWriter classWriter = new ClassWriter((-530));
FieldWriter visitField = (FieldWriter)classWriter.visitField((-1120), "xGXsyfF#)Kz", "xGXsyfF#)Kz", (String) null, "xGXsyfF#)Kz");
visitField.getSize();
Test 7: 
ClassWriter classWriter = new ClassWriter((-530));
FieldWriter visitField = (FieldWriter)classWriter.visitField((-1120), "", "", "", "");
visitField.visitAnnotation("", false);
visitField.getSize();
Test 8: 
ClassWriter classWriter = new ClassWriter(2368);
FieldWriter fieldWriter = new FieldWriter(classWriter, (-3077), "", "RuntimeVisibleAnnotations", "", "");
Attribute attribute = new Attribute((String) null);
fieldWriter.visitAttribute(attribute);
// Undeclared exception!
try { 
  fieldWriter.getSize();
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 9: 
ClassWriter classWriter = new ClassWriter((-2521));
FieldWriter visitField = (FieldWriter)classWriter.visitField((-1905), "", "zJ=-(SW`reHx7.", (String) null, (Object) null);
ByteVector byteVector = new ByteVector();
visitField.put(byteVector);
Test 10: 
ClassWriter classWriter = new ClassWriter((-530));
String[] stringArray = new String[0];
classWriter.visit((-530), 1, "", "2+", "2+", stringArray);
FieldWriter visitField = (FieldWriter)classWriter.visitField((-1134), "", "", "", "");
ByteVector byteVector = new ByteVector();
visitField.put(byteVector);
Test 11: 
ClassWriter classWriter = new ClassWriter((-530));
FieldWriter visitField = (FieldWriter)classWriter.visitField(2, "", "", "", "");
ByteVector byteVector = new ByteVector();
visitField.visitAnnotation("The size must be non-negative", true);
visitField.put(byteVector);
Test 12: 
ClassWriter classWriter = new ClassWriter((-530));
FieldWriter visitField = (FieldWriter)classWriter.visitField((-1120), "", "", "", "");
ByteVector byteVector = new ByteVector();
visitField.visitAnnotation("", false);
visitField.put(byteVector);
Test 13: 
ClassWriter classWriter = new ClassWriter((-530));
FieldWriter visitField = (FieldWriter)classWriter.visitField((-1165), "", "", "", "");
ByteVector byteVector = new ByteVector();
Attribute attribute = new Attribute("");
visitField.visitAttribute(attribute);
// Undeclared exception!
try { 
  visitField.put(byteVector);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("wheel.asm.Attribute", e);
}

Test 14: 
String string = "myField";
FieldWriter fieldWriter = new FieldWriter((ClassWriter) 1234, (int) "myField", "java.lang.String", "myAnnotation", "@MyAnnotation", "");
((FieldWriter) string).visitEnd();

Test 15: 
FieldWriter fieldWriter = new FieldWriter((ClassWriter) 2, (int) "age", "I", "", "", "");

Test 16: 
String string = "Signature";
FieldWriter fieldWriter = new FieldWriter((ClassWriter) 1, (int) "Signature", "Signature", "Signature", "Signature", "Signature");
String string = "Signature";
boolean _boolean = true;
((FieldWriter) string).visitAnnotation(string, _boolean);
((FieldWriter) string).getSize();

Test 17: 
String string = "A unique signature";
FieldWriter fieldWriter = new FieldWriter((ClassWriter) 1, (int) "A unique signature", "Signature", "A meaningful description", "A relevant comment", "Signature");
((FieldWriter) string).getSize();

Test 18: 
String string = "wheel.asm.FieldWriter";
FieldWriter fieldWriter = new FieldWriter((ClassWriter) 4, (int) "vI}$l^w, Nw", "wheel.asm.FieldWriter", "", "SLgnature", "SLgnature");
((FieldWriter) string).getSize();

Test 19: 
String string = "RuntimeVisibleAnnotations";
FieldWriter fieldWriter = new FieldWriter((ClassWriter) "My annotation", (int) "RuntimeVisibleAnnotations", "", "", "", "");
Attribute attribute = new Attribute((String) null);
((FieldWriter) string).visitAttribute(attribute);
((FieldWriter) string).getSize();

Test 20: 
ByteVector byteVector = new ByteVector();

Test 21: 
ByteVector byteVector = new ByteVector();

Test 22: 
ByteVector byteVector = new ByteVector();
Attribute attribute = new Attribute("MyAttribute");


* Generated after the refinement and before minimization 23 tests with total length 83
* test suite isTestSuite: 23
Test 0: 
ClassWriter classWriter = new ClassWriter(2368);
FieldWriter fieldWriter = new FieldWriter(classWriter, (-3077), "", "RuntimeVisibleAnnotations", "", "");
fieldWriter.visitEnd();
Test 1: 
ClassWriter classWriter = new ClassWriter((-530));
classWriter.visitField((-530), "", "", "", "");
FieldWriter fieldWriter = new FieldWriter(classWriter, 2, "", "", "", "");
Test 2: 
ClassWriter classWriter = new ClassWriter(2608);
FieldWriter fieldWriter = new FieldWriter(classWriter, 2608, "SLgTnaturN", "SLgTnaturN", "SLgTnaturN", (Object) null);
fieldWriter.getSize();
Test 3: 
ClassWriter classWriter = new ClassWriter(2596);
FieldWriter fieldWriter = new FieldWriter(classWriter, 1, "Signature", "Signature", "Signature", "Signature");
fieldWriter.visitAnnotation("Signature", true);
fieldWriter.getSize();
Test 4: 
ClassWriter classWriter = new ClassWriter(2596);
FieldWriter fieldWriter = new FieldWriter(classWriter, 1, "Signature", "Signature", "Signature", "Signature");
fieldWriter.getSize();
Test 5: 
ClassWriter classWriter = new ClassWriter((-3622));
classWriter.version = (-1542);
FieldWriter fieldWriter = new FieldWriter(classWriter, (-3622), "vI}$l^w, Nw", "wheel.asm.FieldWriter", "", "SLgnature");
fieldWriter.getSize();
Test 6: 
ClassWriter classWriter = new ClassWriter((-530));
FieldWriter visitField = (FieldWriter)classWriter.visitField((-1120), "xGXsyfF#)Kz", "xGXsyfF#)Kz", (String) null, "xGXsyfF#)Kz");
visitField.getSize();
Test 7: 
ClassWriter classWriter = new ClassWriter((-530));
FieldWriter visitField = (FieldWriter)classWriter.visitField((-1120), "", "", "", "");
visitField.visitAnnotation("", false);
visitField.getSize();
Test 8: 
ClassWriter classWriter = new ClassWriter(2368);
FieldWriter fieldWriter = new FieldWriter(classWriter, (-3077), "", "RuntimeVisibleAnnotations", "", "");
Attribute attribute = new Attribute((String) null);
fieldWriter.visitAttribute(attribute);
// Undeclared exception!
try { 
  fieldWriter.getSize();
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 9: 
ClassWriter classWriter = new ClassWriter((-2521));
FieldWriter visitField = (FieldWriter)classWriter.visitField((-1905), "", "zJ=-(SW`reHx7.", (String) null, (Object) null);
ByteVector byteVector = new ByteVector();
visitField.put(byteVector);
Test 10: 
ClassWriter classWriter = new ClassWriter((-530));
String[] stringArray = new String[0];
classWriter.visit((-530), 1, "", "2+", "2+", stringArray);
FieldWriter visitField = (FieldWriter)classWriter.visitField((-1134), "", "", "", "");
ByteVector byteVector = new ByteVector();
visitField.put(byteVector);
Test 11: 
ClassWriter classWriter = new ClassWriter((-530));
FieldWriter visitField = (FieldWriter)classWriter.visitField(2, "", "", "", "");
ByteVector byteVector = new ByteVector();
visitField.visitAnnotation("The size must be non-negative", true);
visitField.put(byteVector);
Test 12: 
ClassWriter classWriter = new ClassWriter((-530));
FieldWriter visitField = (FieldWriter)classWriter.visitField((-1120), "", "", "", "");
ByteVector byteVector = new ByteVector();
visitField.visitAnnotation("", false);
visitField.put(byteVector);
Test 13: 
ClassWriter classWriter = new ClassWriter((-530));
FieldWriter visitField = (FieldWriter)classWriter.visitField((-1165), "", "", "", "");
ByteVector byteVector = new ByteVector();
Attribute attribute = new Attribute("");
visitField.visitAttribute(attribute);
// Undeclared exception!
try { 
  visitField.put(byteVector);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("wheel.asm.Attribute", e);
}

Test 14: 
String string = "myField";
FieldWriter fieldWriter = new FieldWriter((ClassWriter) 1234, (int) "myField", "java.lang.String", "myAnnotation", "@MyAnnotation", "");
((FieldWriter) string).visitEnd();

Test 15: 
FieldWriter fieldWriter = new FieldWriter((ClassWriter) 2, (int) "age", "I", "", "", "");

Test 16: 
String string = "Signature";
FieldWriter fieldWriter = new FieldWriter((ClassWriter) 1, (int) "Signature", "Signature", "Signature", "Signature", "Signature");
String string = "Signature";
boolean _boolean = true;
((FieldWriter) string).visitAnnotation(string, _boolean);
((FieldWriter) string).getSize();

Test 17: 
String string = "A unique signature";
FieldWriter fieldWriter = new FieldWriter((ClassWriter) 1, (int) "A unique signature", "Signature", "A meaningful description", "A relevant comment", "Signature");
((FieldWriter) string).getSize();

Test 18: 
String string = "wheel.asm.FieldWriter";
FieldWriter fieldWriter = new FieldWriter((ClassWriter) 4, (int) "vI}$l^w, Nw", "wheel.asm.FieldWriter", "", "SLgnature", "SLgnature");
((FieldWriter) string).getSize();

Test 19: 
String string = "RuntimeVisibleAnnotations";
FieldWriter fieldWriter = new FieldWriter((ClassWriter) "My annotation", (int) "RuntimeVisibleAnnotations", "", "", "", "");
Attribute attribute = new Attribute((String) null);
((FieldWriter) string).visitAttribute(attribute);
((FieldWriter) string).getSize();

Test 20: 
ByteVector byteVector = new ByteVector();

Test 21: 
ByteVector byteVector = new ByteVector();

Test 22: 
ByteVector byteVector = new ByteVector();
Attribute attribute = new Attribute("MyAttribute");


* Minimizing test suite
* test suite isTestSuite: 13
Test 0: 
ClassWriter classWriter = new ClassWriter(2368);
FieldWriter fieldWriter = new FieldWriter(classWriter, (-3077), "", "RuntimeVisibleAnnotations", "", "");
Attribute attribute = new Attribute((String) null);
fieldWriter.visitAttribute(attribute);
// Undeclared exception!
try { 
  fieldWriter.getSize();
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 1: 
ClassWriter classWriter = new ClassWriter(2368);
FieldWriter fieldWriter = new FieldWriter(classWriter, (-3077), "", "RuntimeVisibleAnnotations", "", "");
fieldWriter.visitEnd();
Test 2: 
ClassWriter classWriter = new ClassWriter((-530));
classWriter.visitField((-530), "", "", "", "");
FieldWriter fieldWriter = new FieldWriter(classWriter, 2, "", "", "", "");
Test 3: 
ClassWriter classWriter = new ClassWriter((-530));
FieldWriter visitField = (FieldWriter)classWriter.visitField((-1120), "xGXsyfF#)Kz", "xGXsyfF#)Kz", (String) null, "xGXsyfF#)Kz");
visitField.getSize();
Test 4: 
ClassWriter classWriter = new ClassWriter(2608);
FieldWriter fieldWriter = new FieldWriter(classWriter, 2608, "SLgTnaturN", "SLgTnaturN", "SLgTnaturN", (Object) null);
fieldWriter.getSize();
Test 5: 
ClassWriter classWriter = new ClassWriter((-530));
FieldWriter visitField = (FieldWriter)classWriter.visitField((-1120), "", "", "", "");
visitField.visitAnnotation("", false);
visitField.getSize();
Test 6: 
ClassWriter classWriter = new ClassWriter(2596);
FieldWriter fieldWriter = new FieldWriter(classWriter, 1, "Signature", "Signature", "Signature", "Signature");
fieldWriter.visitAnnotation("Signature", true);
fieldWriter.getSize();
Test 7: 
ClassWriter classWriter = new ClassWriter((-3622));
classWriter.version = (-1542);
FieldWriter fieldWriter = new FieldWriter(classWriter, (-3622), "vI}$l^w, Nw", "wheel.asm.FieldWriter", "", "SLgnature");
fieldWriter.getSize();
Test 8: 
ClassWriter classWriter = new ClassWriter((-2521));
FieldWriter visitField = (FieldWriter)classWriter.visitField((-1905), "", "zJ=-(SW`reHx7.", (String) null, (Object) null);
ByteVector byteVector = new ByteVector();
visitField.put(byteVector);
Test 9: 
ClassWriter classWriter = new ClassWriter((-530));
String[] stringArray = new String[0];
classWriter.visit((-530), 1, "", "2+", "2+", stringArray);
FieldWriter visitField = (FieldWriter)classWriter.visitField((-1134), "", "", "", "");
ByteVector byteVector = new ByteVector();
visitField.put(byteVector);
Test 10: 
ClassWriter classWriter = new ClassWriter((-530));
FieldWriter visitField = (FieldWriter)classWriter.visitField(2, "", "", "", "");
ByteVector byteVector = new ByteVector();
visitField.visitAnnotation("The size must be non-negative", true);
visitField.put(byteVector);
Test 11: 
ClassWriter classWriter = new ClassWriter((-530));
FieldWriter visitField = (FieldWriter)classWriter.visitField((-1120), "", "", "", "");
ByteVector byteVector = new ByteVector();
visitField.visitAnnotation("", false);
visitField.put(byteVector);
Test 12: 
ClassWriter classWriter = new ClassWriter((-530));
FieldWriter visitField = (FieldWriter)classWriter.visitField((-1165), "", "", "", "");
ByteVector byteVector = new ByteVector();
Attribute attribute = new Attribute("");
visitField.visitAttribute(attribute);
// Undeclared exception!
try { 
  visitField.put(byteVector);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("wheel.asm.Attribute", e);
}


* Going to analyze the coverage criteria
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 100%
* Total number of goals: 58
* Number of covered goals: 58
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 100%
* Total number of goals: 85
* Number of covered goals: 85
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 40%
* Total number of goals: 5
* Number of covered goals: 2
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 6
* Number of covered goals: 6
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 100%
* Total number of goals: 58
* Number of covered goals: 58
* Generated 13 tests with total length 55
* Resulting test suite's coverage: 88% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 38%
* Compiling and checking tests
Going to execute: removeTestsThatDoNotCompile
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: ClassWriter arg0 = new ClassWriter(2368);
FieldWriter fieldWriter = new FieldWriter(arg0, (-3077), "", "RuntimeVisibleAnnotations", "", "");
fieldWriter.visitEnd();

** It was a parseable test case! 
refined test name is: testFieldWriterProperties
* Compiling Tests
refined test name is: testFieldWriterPropertiesAreSetCorrectly
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: ClassWriter arg0 = new ClassWriter((-530));
FieldVisitor visitField = arg0.visitField((-530), "", "", "", "");
FieldWriter fieldWriter = new FieldWriter(arg0, 2, "", "", "", "");
assertFalse(fieldWriter.equals((Object)visitField));


** It was a parseable test case! 
refined test name is: testVisitingFieldWithNameModifiersAndValue
* Compiling Tests
refined test name is: testFieldWriterReturnsDifferentInstance
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: ClassWriter classWriter = new ClassWriter((-530));
FieldWriter visitField = (FieldWriter)classWriter.visitField((-1120), "xGXsyfF#)Kz", "xGXsyfF#)Kz", (String) null, "xGXsyfF#)Kz");
int size = visitField.getSize();
assertEquals(28, size);


** It was a parseable test case! 
refined test name is: testVisitFieldSizeIs28Bytes
* Compiling Tests
refined test name is: testCalculateSizeOfFieldReturnsExpectedValue
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: ClassWriter arg0 = new ClassWriter(2608);
FieldWriter fieldWriter = new FieldWriter(arg0, 2608, "SLgTnaturN", "SLgTnaturN", "SLgTnaturN", (Object) null);
int size = fieldWriter.getSize();
assertEquals(16, size);


** It was a parseable test case! 
refined test name is: testGetSizeReturnsExpectedValue
* Compiling Tests
refined test name is: testGetSizereturnsFieldSizeInBytes
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: ClassWriter classWriter = new ClassWriter((-530));
FieldWriter visitField = (FieldWriter)classWriter.visitField((-1120), "", "", "", "");
visitField.visitAnnotation("", false);
int size = visitField.getSize();
assertEquals(48, size);


** It was a parseable test case! 
refined test name is: testGetSize
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: ClassWriter arg0 = new ClassWriter(2596);
FieldWriter fieldWriter = new FieldWriter(arg0, 1, "Signature", "Signature", "Signature", "Signature");
fieldWriter.visitAnnotation("Signature", true);
int size = fieldWriter.getSize();
assertEquals(36, size);


** It was a parseable test case! 
refined test name is: testWriteFieldWithAnnotation
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: ClassWriter arg0 = new ClassWriter((-3622));
arg0.version = (-1542);
FieldWriter fieldWriter = new FieldWriter(arg0, (-3622), "vI}$l^w, Nw", "wheel.asm.FieldWriter", "", "SLgnature");
int size = fieldWriter.getSize();
assertEquals(30, size);


** It was a parseable test case! 
refined test name is: testGetSizeReturnsExpectedValue
* Compiling Tests
refined test name is: testFieldWriterSize
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: ClassWriter classWriter = new ClassWriter((-2521));
FieldWriter visitField = (FieldWriter)classWriter.visitField((-1905), "", "zJ=-(SW`reHx7.", (String) null, (Object) null);
ByteVector arg0 = new ByteVector();
visitField.put(arg0);

** It was a parseable test case! 
refined test name is: testPutWithValidArguments
* Compiling Tests
refined test name is: testPutFieldWithByteVectorArgument
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: ClassWriter classWriter = new ClassWriter((-530));
String[] arg5 = new String[0];
classWriter.visit((-530), 1, "", "2+", "2+", arg5);
FieldWriter visitField = (FieldWriter)classWriter.visitField((-1134), "", "", "", "");
ByteVector arg0 = new ByteVector();
visitField.put(arg0);

** It was a parseable test case! 
refined test name is: testAddField
* Compiling Tests
refined test name is: testAddField
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: ClassWriter classWriter = new ClassWriter((-530));
FieldWriter visitField = (FieldWriter)classWriter.visitField(2, "", "", "", "");
ByteVector arg0 = new ByteVector();
visitField.visitAnnotation("The size must be non-negative", true);
visitField.put(arg0);

** It was a parseable test case! 
refined test name is: testThrowsExceptionWhenSizeIsNegative
* Compiling Tests
refined test name is: testVisitFieldThrowsExceptionWhenSizeIsNegative
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: ClassWriter classWriter = new ClassWriter((-530));
FieldWriter visitField = (FieldWriter)classWriter.visitField((-1120), "", "", "", "");
ByteVector arg0 = new ByteVector();
visitField.visitAnnotation("", false);
visitField.put(arg0);

** It was a parseable test case! 
refined test name is: testAddAnnotationToField
* Compiling Tests
refined test name is: testVisitAnnotationAddsAnnotationToField
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 05:15:14.858 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar2650576122537918606.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 05:15:14.876 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2650576122537918606.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 05:15:14.950 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar2650576122537918606.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 05:15:14.951 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2650576122537918606.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 05:15:15.016 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar2650576122537918606.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 05:15:15.017 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2650576122537918606.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 05:15:15.077 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar2650576122537918606.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 05:15:15.078 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2650576122537918606.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 05:15:15.124 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar2650576122537918606.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 05:15:15.125 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2650576122537918606.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 05:15:15.184 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar2650576122537918606.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 05:15:15.185 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2650576122537918606.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 05:15:15.318 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar2650576122537918606.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 05:15:15.320 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2650576122537918606.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 05:15:15.384 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar2650576122537918606.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 05:15:15.385 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2650576122537918606.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 05:15:15.478 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar2650576122537918606.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 05:15:15.479 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2650576122537918606.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 05:15:15.539 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar2650576122537918606.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 05:15:15.540 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2650576122537918606.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 05:15:15.606 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar2650576122537918606.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 05:15:15.607 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2650576122537918606.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
** Write a test suite: 1 called: 1 to improve: false
** Write a test suite: 2 called: 2 to improve: false
** Write a test suite: 3 called: 3 to improve: false
** Write a test suite: 6 called: 4 to improve: false
** Write a test suite: 7 called: 5 to improve: false
** Write a test suite: 8 called: 6 to improve: false
** Write a test suite: 9 called: 7 to improve: false
** Write a test suite: 10 called: 8 to improve: false
[MASTER] 05:15:15.710 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar2650576122537918606.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 05:15:15.711 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2650576122537918606.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
** Write a test suite: 1 called: 1 to improve: false
** Write a test suite: 2 called: 2 to improve: false
** Write a test suite: 3 called: 3 to improve: false
** Write a test suite: 4 called: 4 to improve: false
** Write a test suite: 7 called: 5 to improve: false
** Write a test suite: 8 called: 6 to improve: false
** Write a test suite: 9 called: 7 to improve: false
** Write a test suite: 10 called: 8 to improve: false
[MASTER] 05:15:15.812 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar2650576122537918606.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 05:15:15.817 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2650576122537918606.jar
[MASTER] 05:15:15.910 [logback-1] WARN  TimeController - Already entered in phase: INLINING. This will mess up the timing calculations.
* test suite isTestSuite: 14
Test 0: 
ClassWriter classWriter = new ClassWriter(2368);
FieldWriter fieldWriter = new FieldWriter(classWriter, (-3077), "", "RuntimeVisibleAnnotations", "", "");
fieldWriter.visitEnd();
Test 1: 
ClassWriter classWriter = new ClassWriter((-530));
classWriter.visitField((-530), "", "", "", "");
FieldWriter fieldWriter = new FieldWriter(classWriter, 2, "", "", "", "");
Test 2: 
ClassWriter classWriter = new ClassWriter(2608);
FieldWriter fieldWriter = new FieldWriter(classWriter, 2608, "SLgTnaturN", "SLgTnaturN", "SLgTnaturN", (Object) null);
fieldWriter.getSize();
Test 3: 
ClassWriter classWriter = new ClassWriter(2596);
FieldWriter fieldWriter = new FieldWriter(classWriter, 1, "Signature", "Signature", "Signature", "Signature");
fieldWriter.visitAnnotation("Signature", true);
fieldWriter.getSize();
Test 4: 
ClassWriter classWriter = new ClassWriter(2596);
FieldWriter fieldWriter = new FieldWriter(classWriter, 1, "Signature", "Signature", "Signature", "Signature");
fieldWriter.getSize();
Test 5: 
ClassWriter classWriter = new ClassWriter((-3622));
classWriter.version = (-1542);
FieldWriter fieldWriter = new FieldWriter(classWriter, (-3622), "vI}$l^w, Nw", "wheel.asm.FieldWriter", "", "SLgnature");
fieldWriter.getSize();
Test 6: 
ClassWriter classWriter = new ClassWriter((-530));
FieldWriter visitField = (FieldWriter)classWriter.visitField((-1120), "xGXsyfF#)Kz", "xGXsyfF#)Kz", (String) null, "xGXsyfF#)Kz");
visitField.getSize();
Test 7: 
ClassWriter classWriter = new ClassWriter((-530));
FieldWriter visitField = (FieldWriter)classWriter.visitField((-1120), "", "", "", "");
visitField.visitAnnotation("", false);
visitField.getSize();
Test 8: 
ClassWriter classWriter = new ClassWriter(2368);
FieldWriter fieldWriter = new FieldWriter(classWriter, (-3077), "", "RuntimeVisibleAnnotations", "", "");
Attribute attribute = new Attribute((String) null);
fieldWriter.visitAttribute(attribute);
// Undeclared exception!
try { 
  fieldWriter.getSize();
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 9: 
ClassWriter classWriter = new ClassWriter((-2521));
FieldWriter visitField = (FieldWriter)classWriter.visitField((-1905), "", "zJ=-(SW`reHx7.", (String) null, (Object) null);
ByteVector byteVector = new ByteVector();
visitField.put(byteVector);
Test 10: 
ClassWriter classWriter = new ClassWriter((-530));
String[] stringArray = new String[0];
classWriter.visit((-530), 1, "", "2+", "2+", stringArray);
FieldWriter visitField = (FieldWriter)classWriter.visitField((-1134), "", "", "", "");
ByteVector byteVector = new ByteVector();
visitField.put(byteVector);
Test 11: 
ClassWriter classWriter = new ClassWriter((-530));
FieldWriter visitField = (FieldWriter)classWriter.visitField(2, "", "", "", "");
ByteVector byteVector = new ByteVector();
visitField.visitAnnotation("The size must be non-negative", true);
visitField.put(byteVector);
Test 12: 
ClassWriter classWriter = new ClassWriter((-530));
FieldWriter visitField = (FieldWriter)classWriter.visitField((-1120), "", "", "", "");
ByteVector byteVector = new ByteVector();
visitField.visitAnnotation("", false);
visitField.put(byteVector);
Test 13: 
ClassWriter classWriter = new ClassWriter((-530));
FieldWriter visitField = (FieldWriter)classWriter.visitField((-1165), "", "", "", "");
ByteVector byteVector = new ByteVector();
Attribute attribute = new Attribute("");
visitField.visitAttribute(attribute);
// Undeclared exception!
try { 
  visitField.put(byteVector);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("wheel.asm.Attribute", e);
}


* Minimizing test suite
* test suite isTestSuite: 13
Test 0: 
ClassWriter classWriter = new ClassWriter(2368);
FieldWriter fieldWriter = new FieldWriter(classWriter, (-3077), "", "RuntimeVisibleAnnotations", "", "");
Attribute attribute = new Attribute((String) null);
fieldWriter.visitAttribute(attribute);
// Undeclared exception!
try { 
  fieldWriter.getSize();
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 1: 
ClassWriter classWriter = new ClassWriter(2368);
FieldWriter fieldWriter = new FieldWriter(classWriter, (-3077), "", "RuntimeVisibleAnnotations", "", "");
fieldWriter.visitEnd();
Test 2: 
ClassWriter classWriter = new ClassWriter((-530));
classWriter.visitField((-530), "", "", "", "");
FieldWriter fieldWriter = new FieldWriter(classWriter, 2, "", "", "", "");
Test 3: 
ClassWriter classWriter = new ClassWriter((-530));
FieldWriter visitField = (FieldWriter)classWriter.visitField((-1120), "xGXsyfF#)Kz", "xGXsyfF#)Kz", (String) null, "xGXsyfF#)Kz");
visitField.getSize();
Test 4: 
ClassWriter classWriter = new ClassWriter(2608);
FieldWriter fieldWriter = new FieldWriter(classWriter, 2608, "SLgTnaturN", "SLgTnaturN", "SLgTnaturN", (Object) null);
fieldWriter.getSize();
Test 5: 
ClassWriter classWriter = new ClassWriter((-530));
FieldWriter visitField = (FieldWriter)classWriter.visitField((-1120), "", "", "", "");
visitField.visitAnnotation("", false);
visitField.getSize();
Test 6: 
ClassWriter classWriter = new ClassWriter(2596);
FieldWriter fieldWriter = new FieldWriter(classWriter, 1, "Signature", "Signature", "Signature", "Signature");
fieldWriter.visitAnnotation("Signature", true);
fieldWriter.getSize();
Test 7: 
ClassWriter classWriter = new ClassWriter((-3622));
classWriter.version = (-1542);
FieldWriter fieldWriter = new FieldWriter(classWriter, (-3622), "vI}$l^w, Nw", "wheel.asm.FieldWriter", "", "SLgnature");
fieldWriter.getSize();
Test 8: 
ClassWriter classWriter = new ClassWriter((-2521));
FieldWriter visitField = (FieldWriter)classWriter.visitField((-1905), "", "zJ=-(SW`reHx7.", (String) null, (Object) null);
ByteVector byteVector = new ByteVector();
visitField.put(byteVector);
Test 9: 
ClassWriter classWriter = new ClassWriter((-530));
String[] stringArray = new String[0];
classWriter.visit((-530), 1, "", "2+", "2+", stringArray);
FieldWriter visitField = (FieldWriter)classWriter.visitField((-1134), "", "", "", "");
ByteVector byteVector = new ByteVector();
visitField.put(byteVector);
Test 10: 
ClassWriter classWriter = new ClassWriter((-530));
FieldWriter visitField = (FieldWriter)classWriter.visitField(2, "", "", "", "");
ByteVector byteVector = new ByteVector();
visitField.visitAnnotation("The size must be non-negative", true);
visitField.put(byteVector);
Test 11: 
ClassWriter classWriter = new ClassWriter((-530));
FieldWriter visitField = (FieldWriter)classWriter.visitField((-1120), "", "", "", "");
ByteVector byteVector = new ByteVector();
visitField.visitAnnotation("", false);
visitField.put(byteVector);
Test 12: 
ClassWriter classWriter = new ClassWriter((-530));
FieldWriter visitField = (FieldWriter)classWriter.visitField((-1165), "", "", "", "");
ByteVector byteVector = new ByteVector();
Attribute attribute = new Attribute("");
visitField.visitAttribute(attribute);
// Undeclared exception!
try { 
  visitField.put(byteVector);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("wheel.asm.Attribute", e);
}


* Going to analyze the coverage criteria
* Coverage analysis for criterion BRANCH
[MASTER] 05:15:17.135 [logback-1] WARN  TimeController - Already entered in phase: MINIMIZATION. This will mess up the timing calculations.
* Coverage of criterion BRANCH: 100%
* Total number of goals: 58
* Number of covered goals: 58
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 100%
* Total number of goals: 85
* Number of covered goals: 85
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 40%
* Total number of goals: 5
* Number of covered goals: 2
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 6
* Number of covered goals: 6
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 100%
* Total number of goals: 58
* Number of covered goals: 58
* Generated 13 tests with total length 55
* Resulting test suite's coverage: 88% (average coverage for all fitness functions)
* Generating assertions
[MASTER] 05:15:17.177 [logback-1] WARN  TimeController - Already entered in phase: COVERAGE_ANALYSIS. This will mess up the timing calculations.
* Resulting test suite's mutation score: 38%
* Compiling and checking tests
Going to execute: removeTestsThatDoNotCompile
[MASTER] 05:15:19.129 [logback-1] WARN  TimeController - Already entered in phase: ASSERTION_GENERATION. This will mess up the timing calculations.
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 05:15:19.775 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar2650576122537918606.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 05:15:19.776 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2650576122537918606.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 05:15:19.824 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar2650576122537918606.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 05:15:19.826 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2650576122537918606.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 05:15:19.872 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar2650576122537918606.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 05:15:19.873 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2650576122537918606.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 05:15:19.908 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar2650576122537918606.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 05:15:19.910 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2650576122537918606.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 05:15:19.945 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar2650576122537918606.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 05:15:19.945 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2650576122537918606.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 05:15:19.984 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar2650576122537918606.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 05:15:19.985 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2650576122537918606.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 05:15:20.018 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar2650576122537918606.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 05:15:20.020 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2650576122537918606.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 05:15:20.059 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar2650576122537918606.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 05:15:20.059 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2650576122537918606.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 05:15:20.106 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar2650576122537918606.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 05:15:20.107 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2650576122537918606.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 05:15:20.181 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar2650576122537918606.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 05:15:20.182 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2650576122537918606.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 05:15:20.242 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar2650576122537918606.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 05:15:20.243 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2650576122537918606.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
** Write a test suite: 1 called: 1 to improve: false
** Write a test suite: 2 called: 2 to improve: false
** Write a test suite: 3 called: 3 to improve: false
** Write a test suite: 4 called: 4 to improve: false
** Write a test suite: 5 called: 5 to improve: false
** Write a test suite: 6 called: 6 to improve: false
** Write a test suite: 7 called: 7 to improve: false
** Write a test suite: 8 called: 8 to improve: false
** Write a test suite: 9 called: 9 to improve: false
** Write a test suite: 10 called: 10 to improve: false
[MASTER] 05:15:20.386 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar2650576122537918606.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 05:15:20.387 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2650576122537918606.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
** Write a test suite: 1 called: 1 to improve: false
** Write a test suite: 2 called: 2 to improve: false
** Write a test suite: 3 called: 3 to improve: false
** Write a test suite: 4 called: 4 to improve: false
** Write a test suite: 5 called: 5 to improve: false
** Write a test suite: 6 called: 6 to improve: false
** Write a test suite: 7 called: 7 to improve: false
** Write a test suite: 8 called: 8 to improve: false
** Write a test suite: 9 called: 9 to improve: false
** Write a test suite: 10 called: 10 to improve: false
[MASTER] 05:15:20.492 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar2650576122537918606.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 05:15:20.492 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2650576122537918606.jar
* Writing tests to file
[MASTER] 05:15:20.494 [logback-1] WARN  TimeController - Already entered in phase: JUNIT_CHECK. This will mess up the timing calculations.
* Writing JUnit test case 'FieldWriter_ESTest' to evosuite-tests
** Write a test suite: 0 called: 0 to improve: false
** Write a test suite: 1 called: 1 to improve: false
** Write a test suite: 2 called: 2 to improve: false
** Write a test suite: 3 called: 3 to improve: false
** Write a test suite: 4 called: 4 to improve: false
** Write a test suite: 7 called: 5 to improve: false
** Write a test suite: 8 called: 6 to improve: false
** Write a test suite: 9 called: 7 to improve: false
** Write a test suite: 10 called: 8 to improve: false
* Writing JUnit test case 'FieldWriter_Original_ESTest' to evosuite-tests
** Write a test suite: 0 called: 0 to improve: false
** Write a test suite: 1 called: 1 to improve: false
** Write a test suite: 2 called: 2 to improve: false
** Write a test suite: 3 called: 3 to improve: false
** Write a test suite: 4 called: 4 to improve: false
** Write a test suite: 5 called: 5 to improve: false
** Write a test suite: 6 called: 6 to improve: false
** Write a test suite: 7 called: 7 to improve: false
** Write a test suite: 8 called: 8 to improve: false
** Write a test suite: 9 called: 9 to improve: false
** Write a test suite: 10 called: 10 to improve: false
* Done!

* Computation finished
