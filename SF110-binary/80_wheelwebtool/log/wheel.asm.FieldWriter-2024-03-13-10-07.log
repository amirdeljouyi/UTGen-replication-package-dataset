* EvoSuite 1.0.0-SNAPSHOT
* Going to generate test cases for class: wheel.asm.FieldWriter
* Starting Client-0
* Properties loaded from /home/roham/Results-Utestgen/dataset/SF110-new-res/80_wheelwebtool/evosuite-files/evosuite.properties
* Connecting to master process on port 6360
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 10:07:14.137 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 10:07:14.142 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 10:07:14.143 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 10:07:14.151 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.Temporal
[MASTER] 10:07:14.152 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.ZoneId
[MASTER] 10:07:14.153 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAccessor
[MASTER] 10:07:14.154 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalField
[MASTER] 10:07:14.155 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalUnit
[MASTER] 10:07:14.156 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAmount
[MASTER] 10:07:14.157 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.Clock
[MASTER] 10:07:14.159 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalQuery
[MASTER] 10:07:14.161 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAdjuster
[MASTER] 10:07:14.163 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 10:07:14.192 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 10:07:14.193 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
* Finished analyzing classpath
* Generating tests for class wheel.asm.FieldWriter
* Test criteria:
  - Branch Coverage
  - Line Coverage
  - Method-Output Coverage
  - Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 212
* Using seed 1710324431996
* Starting evolution
[Progress:>                             0%] [Cov:>                                  0%]* Initial Number of Goals in DynaMOSA = 103 / 212
[Progress:>                             2%] [Cov:======>                            18%][Progress:>                             3%] [Cov:================>                  46%][Progress:>                             3%] [Cov:=======================>           67%][Progress:>                             3%] [Cov:==========================>        77%][Progress:>                             3%] [Cov:==========================>        77%][Progress:>                             3%] [Cov:===========================>       79%][Progress:>                             3%] [Cov:===========================>       79%][Progress:>                             3%] [Cov:============================>      80%][Progress:=>                            6%] [Cov:============================>      80%][Progress:=>                            6%] [Cov:============================>      82%][Progress:=>                            6%] [Cov:============================>      82%][Progress:=>                            6%] [Cov:=============================>     83%][Progress:=>                            6%] [Cov:=============================>     83%][Progress:=>                            6%] [Cov:=============================>     85%][Progress:=>                            6%] [Cov:=============================>     85%][Progress:=>                            6%] [Cov:=============================>     85%][Progress:=>                            6%] [Cov:=============================>     85%][Progress:=>                            6%] [Cov:=============================>     85%][Progress:==>                           7%] [Cov:=============================>     85%][Progress:==>                           7%] [Cov:=============================>     85%][Progress:==>                           7%] [Cov:=============================>     85%][Progress:==>                           7%] [Cov:=============================>     85%][Progress:==>                           7%] [Cov:=============================>     85%][Progress:==>                           7%] [Cov:=============================>     85%][Progress:==>                           7%] [Cov:=============================>     85%][Progress:==>                           7%] [Cov:=============================>     85%][Progress:==>                           7%] [Cov:=============================>     85%][Progress:==>                           7%] [Cov:=============================>     85%][Progress:==>                           7%] [Cov:=============================>     85%][Progress:==>                           7%] [Cov:=============================>     85%][Progress:==>                           7%] [Cov:=============================>     85%][Progress:==>                           7%] [Cov:=============================>     85%][Progress:==>                           7%] [Cov:=============================>     85%][Progress:==>                           8%] [Cov:=============================>     85%][Progress:==>                           8%] [Cov:=============================>     85%][Progress:==>                           8%] [Cov:=============================>     85%][Progress:==>                           8%] [Cov:=============================>     85%][Progress:==>                           8%] [Cov:==============================>    86%][Progress:==>                           8%] [Cov:==============================>    86%][Progress:==>                           8%] [Cov:==============================>    86%][Progress:==>                           8%] [Cov:==============================>    86%][Progress:==>                           8%] [Cov:==============================>    86%][Progress:==>                           8%] [Cov:==============================>    86%][Progress:==>                           8%] [Cov:==============================>    88%][Progress:==>                           8%] [Cov:==============================>    88%][Progress:==>                           8%] [Cov:==============================>    88%][Progress:==>                           8%] [Cov:==============================>    88%][Progress:==>                           8%] [Cov:==============================>    88%][Progress:==>                           8%] [Cov:==============================>    88%][Progress:==>                           8%] [Cov:==============================>    88%][Progress:==>                           9%] [Cov:==============================>    88%][Progress:===>                          11%] [Cov:==============================>    88%][Progress:===>                          11%] [Cov:==============================>    88%][Progress:===>                          11%] [Cov:==============================>    88%][Progress:===>                          11%] [Cov:==============================>    88%][Progress:===>                          11%] [Cov:==============================>    88%][Progress:===>                          11%] [Cov:==============================>    88%][Progress:===>                          11%] [Cov:==============================>    88%][Progress:===>                          11%] [Cov:==============================>    88%][Progress:===>                          11%] [Cov:==============================>    88%][Progress:===>                          12%] [Cov:==============================>    88%][Progress:===>                          12%] [Cov:==============================>    88%][Progress:===>                          12%] [Cov:==============================>    88%][Progress:===>                          12%] [Cov:==============================>    88%][Progress:===>                          12%] [Cov:==============================>    88%][Progress:===>                          12%] [Cov:==============================>    88%][Progress:====>                         14%] [Cov:==============================>    88%][Progress:====>                         14%] [Cov:==============================>    88%][Progress:====>                         14%] [Cov:==============================>    88%][Progress:====>                         15%] [Cov:==============================>    88%][Progress:=====>                        17%] [Cov:==============================>    88%][Progress:=====>                        17%] [Cov:==============================>    88%][Progress:=====>                        17%] [Cov:==============================>    88%][Progress:======>                       20%] [Cov:==============================>    88%][Progress:======>                       20%] [Cov:==============================>    88%][Progress:======>                       20%] [Cov:==============================>    88%][Progress:======>                       20%] [Cov:==============================>    88%][Progress:======>                       20%] [Cov:==============================>    88%][Progress:======>                       20%] [Cov:==============================>    88%][Progress:======>                       20%] [Cov:==============================>    88%][Progress:======>                       20%] [Cov:==============================>    88%][Progress:======>                       20%] [Cov:==============================>    88%][Progress:======>                       20%] [Cov:==============================>    88%][Progress:======>                       20%] [Cov:==============================>    88%][Progress:======>                       20%] [Cov:==============================>    88%][Progress:======>                       20%] [Cov:==============================>    88%][Progress:======>                       20%] [Cov:==============================>    88%][Progress:======>                       20%] [Cov:==============================>    88%][Progress:======>                       20%] [Cov:==============================>    88%][Progress:======>                       20%] [Cov:==============================>    88%][Progress:======>                       20%] [Cov:==============================>    88%][Progress:======>                       20%] [Cov:==============================>    88%][Progress:======>                       21%] [Cov:==============================>    88%][Progress:======>                       21%] [Cov:==============================>    88%][Progress:======>                       21%] [Cov:==============================>    88%][Progress:======>                       21%] [Cov:==============================>    88%][Progress:======>                       21%] [Cov:==============================>    88%][Progress:======>                       21%] [Cov:==============================>    88%][Progress:======>                       21%] [Cov:==============================>    88%][Progress:======>                       21%] [Cov:==============================>    88%][Progress:======>                       21%] [Cov:==============================>    88%][Progress:======>                       21%] [Cov:==============================>    88%][Progress:======>                       21%] [Cov:==============================>    88%][Progress:======>                       21%] [Cov:==============================>    88%][Progress:======>                       21%] [Cov:==============================>    88%][Progress:======>                       21%] [Cov:==============================>    88%][Progress:======>                       21%] [Cov:==============================>    88%][Progress:======>                       21%] [Cov:==============================>    88%][Progress:======>                       21%] [Cov:==============================>    88%][Progress:======>                       21%] [Cov:==============================>    88%][Progress:======>                       21%] [Cov:==============================>    88%][Progress:======>                       21%] [Cov:==============================>    88%][Progress:======>                       21%] [Cov:==============================>    88%][Progress:======>                       21%] [Cov:==============================>    88%][Progress:======>                       21%] [Cov:==============================>    88%][Progress:======>                       22%] [Cov:==============================>    88%][Progress:======>                       22%] [Cov:==============================>    88%][Progress:======>                       22%] [Cov:==============================>    88%][Progress:======>                       22%] [Cov:==============================>    88%][Progress:======>                       22%] [Cov:==============================>    88%][Progress:======>                       22%] [Cov:==============================>    88%][Progress:======>                       22%] [Cov:==============================>    88%][Progress:======>                       22%] [Cov:==============================>    88%][Progress:======>                       22%] [Cov:==============================>    88%][Progress:======>                       22%] [Cov:==============================>    88%][Progress:======>                       22%] [Cov:==============================>    88%][Progress:======>                       22%] [Cov:==============================>    88%][Progress:======>                       22%] [Cov:==============================>    88%][Progress:======>                       22%] [Cov:==============================>    88%][Progress:======>                       22%] [Cov:==============================>    88%][Progress:======>                       22%] [Cov:==============================>    88%][Progress:======>                       22%] [Cov:==============================>    88%][Progress:======>                       22%] [Cov:==============================>    88%][Progress:======>                       22%] [Cov:==============================>    88%][Progress:======>                       22%] [Cov:==============================>    88%][Progress:======>                       22%] [Cov:==============================>    88%][Progress:======>                       22%] [Cov:==============================>    88%][Progress:======>                       22%] [Cov:==============================>    88%][Progress:======>                       22%] [Cov:==============================>    88%][Progress:=======>                      25%] [Cov:==============================>    88%][Progress:=======>                      25%] [Cov:==============================>    88%][Progress:=======>                      25%] [Cov:==============================>    88%][Progress:=======>                      25%] [Cov:==============================>    88%][Progress:=======>                      25%] [Cov:==============================>    88%][Progress:========>                     28%] [Cov:==============================>    88%][Progress:========>                     28%] [Cov:==============================>    88%][Progress:========>                     28%] [Cov:==============================>    88%][Progress:========>                     28%] [Cov:==============================>    88%][Progress:========>                     28%] [Cov:==============================>    88%][Progress:========>                     28%] [Cov:==============================>    88%][Progress:========>                     28%] [Cov:==============================>    88%][Progress:========>                     28%] [Cov:==============================>    88%][Progress:========>                     28%] [Cov:==============================>    88%][Progress:========>                     28%] [Cov:==============================>    88%][Progress:========>                     28%] [Cov:==============================>    88%][Progress:========>                     28%] [Cov:==============================>    88%][Progress:========>                     28%] [Cov:==============================>    88%][Progress:========>                     28%] [Cov:==============================>    88%][Progress:========>                     28%] [Cov:==============================>    88%][Progress:=========>                    31%] [Cov:==============================>    88%][Progress:=========>                    31%] [Cov:==============================>    88%][Progress:=========>                    31%] [Cov:==============================>    88%][Progress:=========>                    31%] [Cov:==============================>    88%][Progress:=========>                    31%] [Cov:==============================>    88%][Progress:=========>                    31%] [Cov:==============================>    88%][Progress:=========>                    31%] [Cov:==============================>    88%][Progress:=========>                    31%] [Cov:==============================>    88%][Progress:=========>                    31%] [Cov:==============================>    88%][Progress:=========>                    31%] [Cov:==============================>    88%][Progress:=========>                    31%] [Cov:==============================>    88%][Progress:=========>                    31%] [Cov:==============================>    88%][Progress:=========>                    31%] [Cov:==============================>    88%][Progress:=========>                    31%] [Cov:==============================>    88%][Progress:=========>                    31%] [Cov:==============================>    88%][Progress:=========>                    31%] [Cov:==============================>    88%][Progress:=========>                    31%] [Cov:==============================>    88%][Progress:=========>                    31%] [Cov:==============================>    88%][Progress:=========>                    31%] [Cov:==============================>    88%][Progress:==========>                   34%] [Cov:==============================>    88%][Progress:==========>                   34%] [Cov:==============================>    88%][Progress:==========>                   34%] [Cov:==============================>    88%][Progress:==========>                   34%] [Cov:==============================>    88%][Progress:==========>                   34%] [Cov:==============================>    88%][Progress:==========>                   34%] [Cov:==============================>    88%][Progress:==========>                   34%] [Cov:==============================>    88%][Progress:==========>                   34%] [Cov:==============================>    88%][Progress:==========>                   34%] [Cov:==============================>    88%][Progress:==========>                   34%] [Cov:==============================>    88%][Progress:==========>                   34%] [Cov:==============================>    88%][Progress:==========>                   34%] [Cov:==============================>    88%][Progress:==========>                   34%] [Cov:==============================>    88%][Progress:==========>                   34%] [Cov:==============================>    88%][Progress:==========>                   34%] [Cov:==============================>    88%][Progress:==========>                   34%] [Cov:==============================>    88%][Progress:==========>                   34%] [Cov:==============================>    88%][Progress:==========>                   34%] [Cov:==============================>    88%][Progress:==========>                   34%] [Cov:==============================>    88%][Progress:==========>                   34%] [Cov:==============================>    88%][Progress:==========>                   34%] [Cov:==============================>    88%][Progress:==========>                   34%] [Cov:==============================>    88%][Progress:==========>                   34%] [Cov:==============================>    88%][Progress:==========>                   34%] [Cov:==============================>    88%][Progress:==========>                   34%] [Cov:==============================>    88%][Progress:==========>                   35%] [Cov:==============================>    88%][Progress:==========>                   35%] [Cov:==============================>    88%][Progress:==========>                   35%] [Cov:==============================>    88%][Progress:===========>                  37%] [Cov:==============================>    88%][Progress:===========>                  37%] [Cov:==============================>    88%][Progress:===========>                  37%] [Cov:==============================>    88%][Progress:===========>                  37%] [Cov:==============================>    88%][Progress:===========>                  37%] [Cov:==============================>    88%][Progress:===========>                  37%] [Cov:==============================>    88%][Progress:===========>                  37%] [Cov:==============================>    88%][Progress:===========>                  37%] [Cov:==============================>    88%][Progress:===========>                  37%] [Cov:==============================>    88%][Progress:===========>                  37%] [Cov:==============================>    88%][Progress:===========>                  37%] [Cov:==============================>    88%][Progress:===========>                  37%] [Cov:==============================>    88%][Progress:===========>                  38%] [Cov:==============================>    88%][Progress:===========>                  38%] [Cov:==============================>    88%][Progress:===========>                  38%] [Cov:==============================>    88%][Progress:===========>                  38%] [Cov:==============================>    88%][Progress:===========>                  38%] [Cov:==============================>    88%][Progress:===========>                  38%] [Cov:==============================>    88%][Progress:===========>                  38%] [Cov:==============================>    88%][Progress:===========>                  38%] [Cov:==============================>    88%][Progress:===========>                  38%] [Cov:==============================>    88%][Progress:===========>                  38%] [Cov:==============================>    88%][Progress:===========>                  38%] [Cov:==============================>    88%][Progress:===========>                  38%] [Cov:==============================>    88%][Progress:===========>                  38%] [Cov:==============================>    88%][Progress:===========>                  38%] [Cov:==============================>    88%][Progress:===========>                  38%] [Cov:==============================>    88%][Progress:===========>                  38%] [Cov:==============================>    88%][Progress:===========>                  38%] [Cov:==============================>    88%][Progress:============>                 41%] [Cov:==============================>    88%][Progress:============>                 41%] [Cov:==============================>    88%][Progress:============>                 41%] [Cov:==============================>    88%][Progress:============>                 41%] [Cov:==============================>    88%][Progress:============>                 41%] [Cov:==============================>    88%][Progress:============>                 41%] [Cov:==============================>    88%][Progress:============>                 41%] [Cov:==============================>    88%][Progress:============>                 41%] [Cov:==============================>    88%][Progress:============>                 41%] [Cov:==============================>    88%][Progress:============>                 41%] [Cov:==============================>    88%][Progress:============>                 41%] [Cov:==============================>    88%][Progress:============>                 41%] [Cov:==============================>    88%][Progress:============>                 41%] [Cov:==============================>    88%][Progress:============>                 41%] [Cov:==============================>    88%][Progress:============>                 41%] [Cov:==============================>    88%][Progress:============>                 41%] [Cov:==============================>    88%][Progress:============>                 41%] [Cov:==============================>    88%][Progress:============>                 41%] [Cov:==============================>    88%][Progress:============>                 41%] [Cov:==============================>    88%][Progress:============>                 41%] [Cov:==============================>    88%][Progress:============>                 41%] [Cov:==============================>    88%][Progress:============>                 41%] [Cov:==============================>    88%][Progress:============>                 41%] [Cov:==============================>    88%][Progress:============>                 41%] [Cov:==============================>    88%][Progress:============>                 41%] [Cov:==============================>    88%][Progress:============>                 41%] [Cov:==============================>    88%][Progress:============>                 41%] [Cov:==============================>    88%][Progress:============>                 41%] [Cov:==============================>    88%][Progress:============>                 41%] [Cov:==============================>    88%][Progress:============>                 42%] [Cov:==============================>    88%][Progress:============>                 42%] [Cov:==============================>    88%][Progress:============>                 42%] [Cov:==============================>    88%][Progress:============>                 42%] [Cov:==============================>    88%][Progress:============>                 42%] [Cov:==============================>    88%][Progress:============>                 42%] [Cov:==============================>    88%][Progress:============>                 42%] [Cov:==============================>    88%][Progress:============>                 42%] [Cov:==============================>    88%][Progress:============>                 42%] [Cov:==============================>    88%][Progress:============>                 42%] [Cov:==============================>    88%][Progress:============>                 42%] [Cov:==============================>    88%][Progress:=============>                44%] [Cov:==============================>    88%][Progress:=============>                44%] [Cov:==============================>    88%][Progress:=============>                44%] [Cov:==============================>    88%][Progress:=============>                44%] [Cov:==============================>    88%][Progress:=============>                44%] [Cov:==============================>    88%][Progress:=============>                45%] [Cov:==============================>    88%][Progress:=============>                45%] [Cov:==============================>    88%][Progress:=============>                45%] [Cov:==============================>    88%][Progress:=============>                45%] [Cov:==============================>    88%][Progress:=============>                45%] [Cov:==============================>    88%][Progress:=============>                45%] [Cov:==============================>    88%][Progress:==============>               47%] [Cov:==============================>    88%][Progress:==============>               47%] [Cov:==============================>    88%][Progress:==============>               47%] [Cov:==============================>    88%][Progress:==============>               47%] [Cov:==============================>    88%][Progress:==============>               47%] [Cov:==============================>    88%][Progress:==============>               47%] [Cov:==============================>    88%][Progress:===============>              50%] [Cov:==============================>    88%][Progress:===============>              50%] [Cov:==============================>    88%][Progress:===============>              50%] [Cov:==============================>    88%][Progress:===============>              50%] [Cov:==============================>    88%][Progress:===============>              52%] [Cov:==============================>    88%][Progress:===============>              53%] [Cov:==============================>    88%][Progress:===============>              53%] [Cov:==============================>    88%][Progress:===============>              53%] [Cov:==============================>    88%][Progress:===============>              53%] [Cov:==============================>    88%][Progress:===============>              53%] [Cov:==============================>    88%][Progress:===============>              53%] [Cov:==============================>    88%][Progress:===============>              53%] [Cov:==============================>    88%][Progress:===============>              53%] [Cov:==============================>    88%][Progress:===============>              53%] [Cov:==============================>    88%][Progress:================>             55%] [Cov:==============================>    88%][Progress:================>             55%] [Cov:==============================>    88%][Progress:================>             55%] [Cov:==============================>    88%][Progress:================>             55%] [Cov:==============================>    88%][Progress:=================>            58%] [Cov:==============================>    88%][Progress:=================>            58%] [Cov:==============================>    88%][Progress:=================>            58%] [Cov:==============================>    88%][Progress:=================>            58%] [Cov:==============================>    88%][Progress:=================>            58%] [Cov:==============================>    88%][Progress:==================>           61%] [Cov:==============================>    88%][Progress:==================>           61%] [Cov:==============================>    88%][Progress:==================>           61%] [Cov:==============================>    88%][Progress:==================>           61%] [Cov:==============================>    88%][Progress:==================>           61%] [Cov:==============================>    88%][Progress:==================>           61%] [Cov:==============================>    88%][Progress:==================>           61%] [Cov:==============================>    88%][Progress:==================>           61%] [Cov:==============================>    88%][Progress:==================>           61%] [Cov:==============================>    88%][Progress:==================>           61%] [Cov:==============================>    88%][Progress:==================>           61%] [Cov:==============================>    88%][Progress:==================>           61%] [Cov:==============================>    88%][Progress:==================>           61%] [Cov:==============================>    88%][Progress:==================>           61%] [Cov:==============================>    88%][Progress:==================>           61%] [Cov:==============================>    88%][Progress:==================>           61%] [Cov:==============================>    88%][Progress:==================>           61%] [Cov:==============================>    88%][Progress:==================>           61%] [Cov:==============================>    88%][Progress:==================>           61%] [Cov:==============================>    88%][Progress:==================>           61%] [Cov:==============================>    88%][Progress:==================>           61%] [Cov:==============================>    88%][Progress:==================>           61%] [Cov:==============================>    88%][Progress:==================>           61%] [Cov:==============================>    88%][Progress:==================>           61%] [Cov:==============================>    88%][Progress:==================>           62%] [Cov:==============================>    88%][Progress:==================>           62%] [Cov:==============================>    88%][Progress:==================>           62%] [Cov:==============================>    88%][Progress:==================>           62%] [Cov:==============================>    88%][Progress:==================>           62%] [Cov:==============================>    88%][Progress:==================>           62%] [Cov:==============================>    88%][Progress:==================>           62%] [Cov:==============================>    88%][Progress:==================>           62%] [Cov:==============================>    88%][Progress:===================>          64%] [Cov:==============================>    88%][Progress:===================>          64%] [Cov:==============================>    88%][Progress:===================>          64%] [Cov:==============================>    88%][Progress:===================>          64%] [Cov:==============================>    88%][Progress:===================>          64%] [Cov:==============================>    88%][Progress:===================>          64%] [Cov:==============================>    88%][Progress:===================>          64%] [Cov:==============================>    88%][Progress:===================>          65%] [Cov:==============================>    88%][Progress:===================>          65%] [Cov:==============================>    88%][Progress:===================>          65%] [Cov:==============================>    88%][Progress:===================>          65%] [Cov:==============================>    88%][Progress:===================>          65%] [Cov:==============================>    88%][Progress:===================>          65%] [Cov:==============================>    88%][Progress:====================>         67%] [Cov:==============================>    88%][Progress:=====================>        70%] [Cov:==============================>    88%][Progress:=====================>        70%] [Cov:==============================>    88%][Progress:=====================>        70%] [Cov:==============================>    88%][Progress:=====================>        70%] [Cov:==============================>    88%][Progress:=====================>        72%] [Cov:==============================>    88%][Progress:=====================>        72%] [Cov:==============================>    88%][Progress:=====================>        72%] [Cov:==============================>    88%][Progress:=====================>        72%] [Cov:==============================>    88%][Progress:=====================>        72%] [Cov:==============================>    88%][Progress:=====================>        72%] [Cov:==============================>    88%][Progress:=====================>        73%] [Cov:==============================>    88%][Progress:=====================>        73%] [Cov:==============================>    88%][Progress:======================>       75%] [Cov:==============================>    88%][Progress:======================>       75%] [Cov:==============================>    88%][Progress:======================>       75%] [Cov:==============================>    88%][Progress:======================>       75%] [Cov:==============================>    88%][Progress:======================>       75%] [Cov:==============================>    88%][Progress:======================>       75%] [Cov:==============================>    88%][Progress:======================>       75%] [Cov:==============================>    88%][Progress:======================>       75%] [Cov:==============================>    88%][Progress:=======================>      78%] [Cov:==============================>    88%][Progress:=======================>      78%] [Cov:==============================>    88%][Progress:=======================>      78%] [Cov:==============================>    88%][Progress:=======================>      78%] [Cov:==============================>    88%][Progress:=======================>      78%] [Cov:==============================>    88%][Progress:=======================>      78%] [Cov:==============================>    88%][Progress:=======================>      78%] [Cov:==============================>    88%][Progress:=======================>      78%] [Cov:==============================>    88%][Progress:========================>     81%] [Cov:==============================>    88%][Progress:========================>     81%] [Cov:==============================>    88%][Progress:========================>     81%] [Cov:==============================>    88%][Progress:========================>     81%] [Cov:==============================>    88%][Progress:========================>     81%] [Cov:==============================>    88%][Progress:========================>     81%] [Cov:==============================>    88%][Progress:========================>     81%] [Cov:==============================>    88%][Progress:========================>     81%] [Cov:==============================>    88%][Progress:========================>     83%] [Cov:==============================>    88%][Progress:========================>     83%] [Cov:==============================>    88%][Progress:========================>     83%] [Cov:==============================>    88%][Progress:========================>     83%] [Cov:==============================>    88%][Progress:========================>     83%] [Cov:==============================>    88%][Progress:=========================>    86%] [Cov:==============================>    88%][Progress:=========================>    86%] [Cov:==============================>    88%][Progress:==========================>   88%] [Cov:==============================>    88%][Progress:==========================>   88%] [Cov:==============================>    88%][Progress:===========================>  91%] [Cov:==============================>    88%][Progress:===========================>  91%] [Cov:==============================>    88%][Progress:===========================>  91%] [Cov:==============================>    88%][Progress:===========================>  91%] [Cov:==============================>    88%][Progress:===========================>  91%] [Cov:==============================>    88%][Progress:===========================>  91%] [Cov:==============================>    88%][Progress:===========================>  91%] [Cov:==============================>    88%][Progress:===========================>  91%] [Cov:==============================>    88%][Progress:===========================>  91%] [Cov:==============================>    88%][Progress:===========================>  91%] [Cov:==============================>    88%][Progress:===========================>  91%] [Cov:==============================>    88%][Progress:===========================>  91%] [Cov:==============================>    88%][Progress:===========================>  91%] [Cov:==============================>    88%][Progress:===========================>  91%] [Cov:==============================>    88%][Progress:===========================>  91%] [Cov:==============================>    88%][Progress:===========================>  91%] [Cov:==============================>    88%][Progress:===========================>  91%] [Cov:==============================>    88%][Progress:===========================>  92%] [Cov:==============================>    88%][Progress:===========================>  92%] [Cov:==============================>    88%][Progress:===========================>  92%] [Cov:==============================>    88%][Progress:===========================>  92%] [Cov:==============================>    88%][Progress:===========================>  92%] [Cov:==============================>    88%][Progress:===========================>  92%] [Cov:==============================>    88%][Progress:===========================>  92%] [Cov:==============================>    88%][Progress:===========================>  92%] [Cov:==============================>    88%][Progress:===========================>  92%] [Cov:==============================>    88%][Progress:===========================>  92%] [Cov:==============================>    88%][Progress:============================> 94%] [Cov:==============================>    88%][Progress:============================> 94%] [Cov:==============================>    88%][Progress:============================> 94%] [Cov:==============================>    88%][Progress:============================> 94%] [Cov:==============================>    88%][Progress:============================> 94%] [Cov:==============================>    88%][Progress:============================> 94%] [Cov:==============================>    88%][Progress:============================> 94%] [Cov:==============================>    88%][Progress:============================> 94%] [Cov:==============================>    88%][Progress:============================> 94%] [Cov:==============================>    88%][Progress:============================> 94%] [Cov:==============================>    88%][Progress:============================> 95%] [Cov:==============================>    88%][Progress:============================> 95%] [Cov:==============================>    88%][Progress:============================> 95%] [Cov:==============================>    88%][Progress:============================> 95%] [Cov:==============================>    88%][Progress:============================> 95%] [Cov:==============================>    88%][Progress:============================> 95%] [Cov:==============================>    88%][Progress:============================> 95%] [Cov:==============================>    88%][Progress:============================> 95%] [Cov:==============================>    88%][Progress:============================> 95%] [Cov:==============================>    88%][Progress:============================> 95%] [Cov:==============================>    88%][Progress:============================> 95%] [Cov:==============================>    88%][Progress:============================> 95%] [Cov:==============================>    88%][Progress:============================> 95%] [Cov:==============================>    88%][Progress:============================> 95%] [Cov:==============================>    88%][Progress:============================> 95%] [Cov:==============================>    88%][Progress:============================> 95%] [Cov:==============================>    88%][Progress:============================> 95%] [Cov:==============================>    88%][Progress:============================> 95%] [Cov:==============================>    88%][Progress:============================> 95%] [Cov:==============================>    88%][Progress:============================> 95%] [Cov:==============================>    88%][Progress:============================> 95%] [Cov:==============================>    88%][Progress:============================> 95%] [Cov:==============================>    88%][Progress:============================> 95%] [Cov:==============================>    88%][Progress:============================> 95%] [Cov:==============================>    88%][Progress:============================> 95%] [Cov:==============================>    88%][Progress:==============================100%] [Cov:==============================>    88%]
* Search finished after 201s and 468 generations, 186175 statements, best individual has fitness: 3.0
* Generated before the refinement 12 tests with total length 52
statement is: wheel.asm.ClassWriter(I)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class wheel.asm.ClassWriter
statement code is: ClassWriter classWriter = new ClassWriter(557)
statement is: wheel.asm.FieldWriter(Lwheel/asm/ClassWriter;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class wheel.asm.FieldWriter
statement code is: FieldWriter fieldWriter = new FieldWriter(arg0, (-163), "Z7pT", "Signature", "*<t'a+9W#~'", "*<t'a+9W#~'")
statement is: visitEnd()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: fieldWriter.visitEnd()
test data is: ClassWriter classWriter = new ClassWriter(557);
FieldWriter fieldWriter = new FieldWriter(classWriter, (-163), "Z7pT", "Signature", "*<t'a+9W#~'", "*<t'a+9W#~'");
fieldWriter.visitEnd();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        FieldWriter fieldWriter = new FieldWriter(classWriter, -163, "Z7pT", "Signature", "A descriptive and representative value for the first parameter", "A descriptive and representative value for the second parameter");
        fieldWriter.visitEnd();
    }
}
statement is: FieldWriter fieldWriter = new FieldWriter(classWriter, -163, "Z7pT", "Signature", "A descriptive and representative value for the first parameter", "A descriptive and representative value for the second parameter"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: fieldWriter.visitEnd(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: fieldWriter.visitEnd() target is: fieldWriter method is: visitEnd()
source statement: wheel.asm.FieldWriter(Lwheel/asm/ClassWriter;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)V callee: VariableReference: Statement 1, type wheel.asm.FieldWriterindex is: 4
Matched Method is: visitEnd()V
TestCase is: String string = "Z7pT";
String string = "Signature";
String string = "A descriptive and representative value for the first parameter";
String string = "A descriptive and representative value for the second parameter";
FieldWriter fieldWriter = new FieldWriter((ClassWriter) string, (int) string, string, string, "*<t'a+9W#~'", "*<t'a+9W#~'");
((FieldWriter) string).visitEnd();

statement is: wheel.asm.ClassWriter(I)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class wheel.asm.ClassWriter
statement code is: ClassWriter classWriter = new ClassWriter(0)
statement is: wheel.asm.FieldWriter(Lwheel/asm/ClassWriter;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class wheel.asm.FieldWriter
statement code is: FieldWriter fieldWriter = new FieldWriter(arg0, 5293, "", "", "", "")
statement is: wheel.asm.FieldWriter(Lwheel/asm/ClassWriter;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class wheel.asm.FieldWriter
statement code is: FieldWriter fieldWriter = new FieldWriter(arg0, 5293, "", "Deprecated", (String) null, "")
test data is: ClassWriter classWriter = new ClassWriter(0);
FieldWriter fieldWriter = new FieldWriter(classWriter, 5293, "", "", "", "");
FieldWriter fieldWriter = new FieldWriter(classWriter, 5293, "", "Deprecated", (String) null, "");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        FieldWriter fieldWriter = new FieldWriter(classWriter, 5293, "", "Deprecated", ((String) (null)), "");
    }
}
statement is: FieldWriter fieldWriter = new FieldWriter(classWriter, 5293, "", "Deprecated", ((String) (null)), ""), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase is: int _int = 5293;
String string = "";
String string = "Deprecated";
String string = "";
FieldWriter fieldWriter = new FieldWriter((ClassWriter) _int, (int) string, string, string, "", "");

statement is: wheel.asm.ClassWriter(I)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class wheel.asm.ClassWriter
statement code is: ClassWriter classWriter = new ClassWriter((-22))
statement is: wheel.asm.FieldWriter(Lwheel/asm/ClassWriter;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class wheel.asm.FieldWriter
statement code is: FieldWriter fieldWriter = new FieldWriter(arg0, 1, "=DvVE=Ze;xv@z#av", "=DvVE=Ze;xv@z#av", (String) null, (Object) null)
statement is: getSize()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int size = fieldWriter.getSize()
test data is: ClassWriter classWriter = new ClassWriter((-22));
FieldWriter fieldWriter = new FieldWriter(classWriter, 1, "=DvVE=Ze;xv@z#av", "=DvVE=Ze;xv@z#av", (String) null, (Object) null);
fieldWriter.getSize();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        FieldWriter fieldWriter = new FieldWriter(classWriter, 1, "myString", "java.lang.String", ((String) (null)), ((Object) (null)));
        fieldWriter.getSize();
    }
}
statement is: FieldWriter fieldWriter = new FieldWriter(classWriter, 1, "myString", "java.lang.String", ((String) (null)), ((Object) (null))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: fieldWriter.getSize(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: fieldWriter.getSize() target is: fieldWriter method is: getSize()
source statement: wheel.asm.FieldWriter(Lwheel/asm/ClassWriter;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)V callee: VariableReference: Statement 1, type wheel.asm.FieldWriterindex is: 3
Matched Method is: getSize()I
TestCase is: int _int = 1;
String string = "myString";
String string = "java.lang.String";
FieldWriter fieldWriter = new FieldWriter((ClassWriter) _int, (int) string, string, "=DvVE=Ze;xv@z#av", (String) null, (Object) null);
((FieldWriter) string).getSize();

statement is: wheel.asm.ClassWriter(I)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class wheel.asm.ClassWriter
statement code is: ClassWriter classWriter = new ClassWriter(1411)
statement is: wheel.asm.FieldWriter(Lwheel/asm/ClassWriter;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class wheel.asm.FieldWriter
statement code is: FieldWriter fieldWriter = new FieldWriter(arg0, (-2590), "", "", "", "")
statement is: visitAnnotation(Ljava/lang/String;Z)Lwheel/asm/AnnotationVisitor; type is: class org.evosuite.testcase.statements.MethodStatement return type class wheel.asm.AnnotationWriter
statement code is: AnnotationWriter visitAnnotation = (AnnotationWriter)fieldWriter.visitAnnotation("", false)
statement is: getSize()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int size = fieldWriter.getSize()
test data is: ClassWriter classWriter = new ClassWriter(1411);
FieldWriter fieldWriter = new FieldWriter(classWriter, (-2590), "", "", "", "");
fieldWriter.visitAnnotation("", false);
fieldWriter.getSize();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        FieldWriter fieldWriter = new FieldWriter(classWriter, ((int) (Math.pow(2, 16))), "This is a test string.", 'a', true, "");
        fieldWriter.visitAnnotation("Some annotation", false);
        fieldWriter.getSize();
    }
}
statement is: FieldWriter fieldWriter = new FieldWriter(classWriter, ((int) (Math.pow(2, 16))), "This is a test string.", 'a', true, ""), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: fieldWriter.visitAnnotation("Some annotation", false), class spoon.support.reflect.code.CtInvocationImpl
invocation is: fieldWriter.visitAnnotation("Some annotation", false) target is: fieldWriter method is: visitAnnotation(java.lang.String,boolean)
source statement: wheel.asm.FieldWriter(Lwheel/asm/ClassWriter;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)V callee: VariableReference: Statement 1, type wheel.asm.FieldWriterindex is: 4
Matched Method is: visitAnnotation(Ljava/lang/String;Z)Lwheel/asm/AnnotationVisitor;
statement is: fieldWriter.getSize(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: fieldWriter.getSize() target is: fieldWriter method is: getSize()
source statement: wheel.asm.FieldWriter(Lwheel/asm/ClassWriter;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)V callee: VariableReference: Statement 1, type wheel.asm.FieldWriterindex is: 4
Matched Method is: getSize()I
TestCase is: String string = "This is a test string.";
char _char = 'a';
boolean _boolean = true;
String string = "";
FieldWriter fieldWriter = new FieldWriter((ClassWriter) string, _char, (String) _boolean, string, "", "");
String string = "Some annotation";
boolean _boolean = false;
((FieldWriter) _char).visitAnnotation(string, _boolean);
((FieldWriter) _char).getSize();

statement is: wheel.asm.ClassWriter(I)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class wheel.asm.ClassWriter
statement code is: ClassWriter classWriter = new ClassWriter((-22))
statement is: wheel.asm.FieldWriter(Lwheel/asm/ClassWriter;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class wheel.asm.FieldWriter
statement code is: FieldWriter fieldWriter = new FieldWriter(arg0, (-22), "=DvVPE=Ze;x`@z#avN", "=DvVPE=Ze;x`@z#avN", "=DvVPE=Ze;x`@z#avN", "=DvVPE=Ze;x`@z#avN")
statement is: visitAnnotation(Ljava/lang/String;Z)Lwheel/asm/AnnotationVisitor; type is: class org.evosuite.testcase.statements.MethodStatement return type class wheel.asm.AnnotationWriter
statement code is: AnnotationWriter visitAnnotation = (AnnotationWriter)fieldWriter.visitAnnotation("=DvVPE=Ze;x`@z#avN", true)
statement is: getSize()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int size = fieldWriter.getSize()
test data is: ClassWriter classWriter = new ClassWriter((-22));
FieldWriter fieldWriter = new FieldWriter(classWriter, (-22), "=DvVPE=Ze;x`@z#avN", "=DvVPE=Ze;x`@z#avN", "=DvVPE=Ze;x`@z#avN", "=DvVPE=Ze;x`@z#avN");
fieldWriter.visitAnnotation("=DvVPE=Ze;x`@z#avN", true);
fieldWriter.getSize();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        FieldWriter fieldWriter = new FieldWriter(classWriter, CLASS_VERSION, "name", "description", "type", "annotation");
        fieldWriter.visitAnnotation("annotation", true);
        fieldWriter.getSize();
    }
}
statement is: FieldWriter fieldWriter = new FieldWriter(classWriter, CLASS_VERSION, "name", "description", "type", "annotation"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: fieldWriter.visitAnnotation("annotation", true), class spoon.support.reflect.code.CtInvocationImpl
invocation is: fieldWriter.visitAnnotation("annotation", true) target is: fieldWriter method is: visitAnnotation(java.lang.String,boolean)
source statement: wheel.asm.FieldWriter(Lwheel/asm/ClassWriter;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)V callee: VariableReference: Statement 1, type wheel.asm.FieldWriterindex is: 4
Matched Method is: visitAnnotation(Ljava/lang/String;Z)Lwheel/asm/AnnotationVisitor;
statement is: fieldWriter.getSize(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: fieldWriter.getSize() target is: fieldWriter method is: getSize()
source statement: wheel.asm.FieldWriter(Lwheel/asm/ClassWriter;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)V callee: VariableReference: Statement 1, type wheel.asm.FieldWriterindex is: 4
Matched Method is: getSize()I
TestCase is: String string = "name";
String string = "description";
String string = "type";
String string = "annotation";
FieldWriter fieldWriter = new FieldWriter((ClassWriter) string, (int) string, string, string, "=DvVPE=Ze;x`@z#avN", "=DvVPE=Ze;x`@z#avN");
String string = "annotation";
boolean _boolean = true;
((FieldWriter) string).visitAnnotation(string, _boolean);
((FieldWriter) string).getSize();

statement is: wheel.asm.ClassWriter(I)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class wheel.asm.ClassWriter
statement code is: ClassWriter classWriter = new ClassWriter((-74))
statement is: org.evosuite.testcase.statements.AssignmentStatement@af4e7036 type is: class org.evosuite.testcase.statements.AssignmentStatement return type int
statement code is: classWriter.version = (-74)
statement is: wheel.asm.FieldWriter(Lwheel/asm/ClassWriter;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class wheel.asm.FieldWriter
statement code is: FieldWriter fieldWriter = new FieldWriter(arg0, (-74), "=DvVE=Ze;xv@z#ao", "=DvVE=Ze;xv@z#ao", "=DvVE=Ze;xv@z#ao", "=DvVE=Ze;xv@z#ao")
statement is: getSize()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int size = fieldWriter.getSize()
test data is: ClassWriter classWriter = new ClassWriter((-74));
classWriter.version = (-74);
FieldWriter fieldWriter = new FieldWriter(classWriter, (-74), "=DvVE=Ze;xv@z#ao", "=DvVE=Ze;xv@z#ao", "=DvVE=Ze;xv@z#ao", "=DvVE=Ze;xv@z#ao");
fieldWriter.getSize();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        classWriter.version = 74;
        FieldWriter fieldWriter = new FieldWriter(classWriter, 74, "Lorem ipsum dolor sit amet", "consectetur adipiscing elit", "sed do eiusmod tempor incididunt ut labore et dolore magna aliqua", "Ut enim ad minim veniam");
        fieldWriter.getSize();
    }
}
statement is: classWriter.version = 74, class spoon.support.reflect.code.CtAssignmentImpl
statement is: FieldWriter fieldWriter = new FieldWriter(classWriter, 74, "Lorem ipsum dolor sit amet", "consectetur adipiscing elit", "sed do eiusmod tempor incididunt ut labore et dolore magna aliqua", "Ut enim ad minim veniam"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: fieldWriter.getSize(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: fieldWriter.getSize() target is: fieldWriter method is: getSize()
source statement: wheel.asm.FieldWriter(Lwheel/asm/ClassWriter;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)V callee: VariableReference: Statement 2, type wheel.asm.FieldWriterindex is: 5
Matched Method is: getSize()I
TestCase is: int _int = 74;
String string = "Lorem ipsum dolor sit amet";
String string = "consectetur adipiscing elit";
String string = "sed do eiusmod tempor incididunt ut labore et dolore magna aliqua";
String string = "Ut enim ad minim veniam";
FieldWriter fieldWriter = new FieldWriter((ClassWriter) _int, (int) string, string, string, string, "=DvVE=Ze;xv@z#ao");
((FieldWriter) string).getSize();

statement is: wheel.asm.ClassWriter(I)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class wheel.asm.ClassWriter
statement code is: ClassWriter classWriter = new ClassWriter(1411)
statement is: wheel.asm.FieldWriter(Lwheel/asm/ClassWriter;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class wheel.asm.FieldWriter
statement code is: FieldWriter fieldWriter = new FieldWriter(arg0, (-2590), "", "", "", "")
statement is: wheel.asm.Attribute(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class wheel.asm.Attribute
statement code is: Attribute attribute = new Attribute((String) null)
statement is: visitAttribute(Lwheel/asm/Attribute;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: fieldWriter.visitAttribute(arg0)
statement is: getSize()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int size = fieldWriter.getSize()
test data is: ClassWriter classWriter = new ClassWriter(1411);
FieldWriter fieldWriter = new FieldWriter(classWriter, (-2590), "", "", "", "");
Attribute attribute = new Attribute((String) null);
fieldWriter.visitAttribute(attribute);
fieldWriter.getSize();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Attribute attribute = new Attribute("myAttribute", "String", "private");
        fieldWriter.visitAttribute(attribute);
        fieldWriter.getSize();
    }
}
statement is: Attribute attribute = new Attribute("myAttribute", "String", "private"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: fieldWriter.visitAttribute(attribute), class spoon.support.reflect.code.CtInvocationImpl
invocation is: fieldWriter.visitAttribute(attribute) target is: fieldWriter method is: visitAttribute(Attribute)
statement is: fieldWriter.getSize(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: fieldWriter.getSize() target is: fieldWriter method is: getSize()
statement is: wheel.asm.ClassWriter(I)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class wheel.asm.ClassWriter
statement code is: ClassWriter classWriter = new ClassWriter((-32))
statement is: wheel.asm.FieldWriter(Lwheel/asm/ClassWriter;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class wheel.asm.FieldWriter
statement code is: FieldWriter fieldWriter = new FieldWriter(arg0, 169, "", "", (String) null, (Object) null)
statement is: wheel.asm.ByteVector()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class wheel.asm.ByteVector
statement code is: ByteVector byteVector = new ByteVector()
statement is: put(Lwheel/asm/ByteVector;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: fieldWriter.put(arg0)
test data is: ClassWriter classWriter = new ClassWriter((-32));
FieldWriter fieldWriter = new FieldWriter(classWriter, 169, "", "", (String) null, (Object) null);
ByteVector byteVector = new ByteVector();
fieldWriter.put(byteVector);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        FieldWriter fieldWriter = new FieldWriter(classWriter, 169, "my_field", "Ljava/lang/String;", ((String) (null)), ((Object) (null)));
        ByteVector byteVector = new ByteVector();
        fieldWriter.put(byteVector);
    }
}
statement is: FieldWriter fieldWriter = new FieldWriter(classWriter, 169, "my_field", "Ljava/lang/String;", ((String) (null)), ((Object) (null))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: ByteVector byteVector = new ByteVector(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: fieldWriter.put(byteVector), class spoon.support.reflect.code.CtInvocationImpl
invocation is: fieldWriter.put(byteVector) target is: fieldWriter method is: put(ByteVector)
source statement: wheel.asm.FieldWriter(Lwheel/asm/ClassWriter;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)V callee: VariableReference: Statement 1, type wheel.asm.FieldWriterindex is: 3
Matched Method is: put(Lwheel/asm/ByteVector;)V
TestCase is: int _int = 169;
String string = "my_field";
String string = "Ljava/lang/String;";
FieldWriter fieldWriter = new FieldWriter((ClassWriter) _int, (int) string, string, "", (String) null, (Object) null);
ByteVector byteVector = new ByteVector();
((FieldWriter) string).put(byteVector);

statement is: wheel.asm.ClassWriter(I)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class wheel.asm.ClassWriter
statement code is: ClassWriter classWriter = new ClassWriter((-36))
statement is: org.evosuite.testcase.statements.AssignmentStatement@5864577 type is: class org.evosuite.testcase.statements.AssignmentStatement return type int
statement code is: classWriter.version = (-36)
statement is: wheel.asm.FieldWriter(Lwheel/asm/ClassWriter;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class wheel.asm.FieldWriter
statement code is: FieldWriter fieldWriter = new FieldWriter(arg0, (-36), "", "", "", "")
statement is: wheel.asm.ByteVector()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class wheel.asm.ByteVector
statement code is: ByteVector byteVector = new ByteVector()
statement is: put(Lwheel/asm/ByteVector;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: fieldWriter.put(arg0)
test data is: ClassWriter classWriter = new ClassWriter((-36));
classWriter.version = (-36);
FieldWriter fieldWriter = new FieldWriter(classWriter, (-36), "", "", "", "");
ByteVector byteVector = new ByteVector();
fieldWriter.put(byteVector);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        classWriter.version = -36;
        FieldWriter fieldWriter = new FieldWriter(classWriter, -36, "age", "S", "Ljava/lang/Short;", ((short) (35)));
        ByteVector byteVector = new ByteVector();
        fieldWriter.put(byteVector);
    }
}
statement is: classWriter.version = -36, class spoon.support.reflect.code.CtAssignmentImpl
statement is: FieldWriter fieldWriter = new FieldWriter(classWriter, -36, "age", "S", "Ljava/lang/Short;", ((short) (35))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: ByteVector byteVector = new ByteVector(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: fieldWriter.put(byteVector), class spoon.support.reflect.code.CtInvocationImpl
invocation is: fieldWriter.put(byteVector) target is: fieldWriter method is: put(ByteVector)
source statement: wheel.asm.FieldWriter(Lwheel/asm/ClassWriter;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)V callee: VariableReference: Statement 2, type wheel.asm.FieldWriterindex is: 4
Matched Method is: put(Lwheel/asm/ByteVector;)V
TestCase is: String string = "age";
String string = "S";
String string = "Ljava/lang/Short;";
int _int = 35;
FieldWriter fieldWriter = new FieldWriter((ClassWriter) string, (int) string, string, (String) _int, "", "");
ByteVector byteVector = new ByteVector();
((FieldWriter) string).put(byteVector);

statement is: wheel.asm.ClassWriter(I)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class wheel.asm.ClassWriter
statement code is: ClassWriter classWriter = new ClassWriter((-40))
statement is: wheel.asm.FieldWriter(Lwheel/asm/ClassWriter;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class wheel.asm.FieldWriter
statement code is: FieldWriter fieldWriter = new FieldWriter(arg0, (-40), "sMQ@`@7!u\"e", "sMQ@`@7!u\"e", "sMQ@`@7!u\"e", "sMQ@`@7!u\"e")
statement is: visitAnnotation(Ljava/lang/String;Z)Lwheel/asm/AnnotationVisitor; type is: class org.evosuite.testcase.statements.MethodStatement return type class wheel.asm.AnnotationWriter
statement code is: AnnotationWriter visitAnnotation = (AnnotationWriter)fieldWriter.visitAnnotation("sMQ@`@7!u\"e", true)
statement is: wheel.asm.ByteVector()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class wheel.asm.ByteVector
statement code is: ByteVector byteVector = new ByteVector()
statement is: put(Lwheel/asm/ByteVector;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: fieldWriter.put(arg0)
test data is: ClassWriter classWriter = new ClassWriter((-40));
FieldWriter fieldWriter = new FieldWriter(classWriter, (-40), "sMQ@`@7!u\"e", "sMQ@`@7!u\"e", "sMQ@`@7!u\"e", "sMQ@`@7!u\"e");
fieldWriter.visitAnnotation("sMQ@`@7!u\"e", true);
ByteVector byteVector = new ByteVector();
fieldWriter.put(byteVector);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        fieldWriter.visitAnnotation("visibleAnnotation", true);
        ByteVector byteVector = new ByteVector(size);
        fieldWriter.put(byteVector);
    }
}
statement is: fieldWriter.visitAnnotation("visibleAnnotation", true), class spoon.support.reflect.code.CtInvocationImpl
invocation is: fieldWriter.visitAnnotation("visibleAnnotation", true) target is: fieldWriter method is: visitAnnotation(java.lang.String,boolean)
statement is: ByteVector byteVector = new ByteVector(size), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: fieldWriter.put(byteVector), class spoon.support.reflect.code.CtInvocationImpl
invocation is: fieldWriter.put(byteVector) target is: fieldWriter method is: put(ByteVector)
statement is: wheel.asm.ClassWriter(I)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class wheel.asm.ClassWriter
statement code is: ClassWriter classWriter = new ClassWriter(1411)
statement is: wheel.asm.FieldWriter(Lwheel/asm/ClassWriter;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class wheel.asm.FieldWriter
statement code is: FieldWriter fieldWriter = new FieldWriter(arg0, (-2590), "", "", "", "")
statement is: org.evosuite.testcase.statements.AssignmentStatement@d9f7075 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class wheel.asm.FieldWriter
statement code is: fieldWriter.next = fieldWriter
statement is: visitAnnotation(Ljava/lang/String;Z)Lwheel/asm/AnnotationVisitor; type is: class org.evosuite.testcase.statements.MethodStatement return type class wheel.asm.AnnotationWriter
statement code is: AnnotationWriter visitAnnotation = (AnnotationWriter)fieldWriter.visitAnnotation("", false)
statement is: wheel.asm.ByteVector()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class wheel.asm.ByteVector
statement code is: ByteVector byteVector = new ByteVector()
statement is: put(Lwheel/asm/ByteVector;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: fieldWriter.next.put(arg0)
test data is: ClassWriter classWriter = new ClassWriter(1411);
FieldWriter fieldWriter = new FieldWriter(classWriter, (-2590), "", "", "", "");
fieldWriter.next = fieldWriter;
fieldWriter.visitAnnotation("", false);
ByteVector byteVector = new ByteVector();
fieldWriter.next.put(byteVector);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        FieldWriter fieldWriter = new FieldWriter(classWriter, -2590, "", "", "", "");
        fieldWriter.next = fieldWriter;
        fieldWriter.visitAnnotation("", false);
        ByteVector byteVector = new ByteVector();
        fieldWriter.next.put(byteVector);
    }
}
statement is: FieldWriter fieldWriter = new FieldWriter(classWriter, -2590, "", "", "", ""), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: fieldWriter.next = fieldWriter, class spoon.support.reflect.code.CtAssignmentImpl
statement is: fieldWriter.visitAnnotation("", false), class spoon.support.reflect.code.CtInvocationImpl
invocation is: fieldWriter.visitAnnotation("", false) target is: fieldWriter method is: visitAnnotation(java.lang.String,boolean)
source statement: wheel.asm.FieldWriter(Lwheel/asm/ClassWriter;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)V callee: VariableReference: Statement 1, type wheel.asm.FieldWriterindex is: 4
Matched Method is: visitAnnotation(Ljava/lang/String;Z)Lwheel/asm/AnnotationVisitor;
statement is: ByteVector byteVector = new ByteVector(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: fieldWriter.next.put(byteVector), class spoon.support.reflect.code.CtInvocationImpl
invocation is: fieldWriter.next.put(byteVector) target is: fieldWriter.next method is: put(ByteVector)
TestCase is: String string = "";
String string = "";
String string = "";
String string = "";
FieldWriter fieldWriter = new FieldWriter((ClassWriter) string, (int) string, string, string, "", "");
String string = "";
boolean _boolean = false;
((FieldWriter) string).visitAnnotation(string, _boolean);
ByteVector byteVector = new ByteVector();

statement is: wheel.asm.ClassWriter(I)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class wheel.asm.ClassWriter
statement code is: ClassWriter classWriter = new ClassWriter((-40))
statement is: wheel.asm.FieldWriter(Lwheel/asm/ClassWriter;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class wheel.asm.FieldWriter
statement code is: FieldWriter fieldWriter = new FieldWriter(arg0, (-40), "sMQ@`@7!u\"e", "sMQ@`@7!u\"e", "sMQ@`@7!u\"e", "sMQ@`@7!u\"e")
statement is: wheel.asm.Attribute(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class wheel.asm.Attribute
statement code is: Attribute attribute = new Attribute("sMQ@`@7!u\"e")
statement is: visitAttribute(Lwheel/asm/Attribute;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: fieldWriter.visitAttribute(arg0)
statement is: wheel.asm.ByteVector()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class wheel.asm.ByteVector
statement code is: ByteVector byteVector = new ByteVector()
statement is: put(Lwheel/asm/ByteVector;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: fieldWriter.put(arg0)
test data is: ClassWriter classWriter = new ClassWriter((-40));
FieldWriter fieldWriter = new FieldWriter(classWriter, (-40), "sMQ@`@7!u\"e", "sMQ@`@7!u\"e", "sMQ@`@7!u\"e", "sMQ@`@7!u\"e");
Attribute attribute = new Attribute("sMQ@`@7!u\"e");
fieldWriter.visitAttribute(attribute);
ByteVector byteVector = new ByteVector();
fieldWriter.put(byteVector);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        FieldWriter fieldWriter = new FieldWriter(classWriter, 40, "myField", "myField", "myField", "myField");
        Attribute attribute = new Attribute("myAttribute");
        fieldWriter.visitAttribute(attribute);
        ByteVector byteVector = new ByteVector();
        fieldWriter.put(byteVector);
    }
}
statement is: FieldWriter fieldWriter = new FieldWriter(classWriter, 40, "myField", "myField", "myField", "myField"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Attribute attribute = new Attribute("myAttribute"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: fieldWriter.visitAttribute(attribute), class spoon.support.reflect.code.CtInvocationImpl
invocation is: fieldWriter.visitAttribute(attribute) target is: fieldWriter method is: visitAttribute(Attribute)
source statement: wheel.asm.FieldWriter(Lwheel/asm/ClassWriter;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)V callee: VariableReference: Statement 1, type wheel.asm.FieldWriterindex is: 5
Matched Method is: visitAttribute(Lwheel/asm/Attribute;)V
statement is: ByteVector byteVector = new ByteVector(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: fieldWriter.put(byteVector), class spoon.support.reflect.code.CtInvocationImpl
invocation is: fieldWriter.put(byteVector) target is: fieldWriter method is: put(ByteVector)
source statement: wheel.asm.FieldWriter(Lwheel/asm/ClassWriter;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)V callee: VariableReference: Statement 1, type wheel.asm.FieldWriterindex is: 5
Matched Method is: put(Lwheel/asm/ByteVector;)V
TestCase is: int _int = 40;
String string = "myField";
String string = "myField";
String string = "myField";
String string = "myField";
FieldWriter fieldWriter = new FieldWriter((ClassWriter) _int, (int) string, string, string, string, "sMQ@`@7!u\"e");
String string = "myAttribute";
Attribute attribute = new Attribute(string);
((FieldWriter) string).visitAttribute(attribute);
ByteVector byteVector = new ByteVector();
((FieldWriter) string).put(byteVector);

* test suite isTestSuite: 22
Test 0: 
ClassWriter classWriter = new ClassWriter(557);
FieldWriter fieldWriter = new FieldWriter(classWriter, (-163), "Z7pT", "Signature", "*<t'a+9W#~'", "*<t'a+9W#~'");
fieldWriter.visitEnd();
Test 1: 
ClassWriter classWriter = new ClassWriter(0);
FieldWriter fieldWriter = new FieldWriter(classWriter, 5293, "", "", "", "");
FieldWriter fieldWriter = new FieldWriter(classWriter, 5293, "", "Deprecated", (String) null, "");
Test 2: 
ClassWriter classWriter = new ClassWriter((-22));
FieldWriter fieldWriter = new FieldWriter(classWriter, 1, "=DvVE=Ze;xv@z#av", "=DvVE=Ze;xv@z#av", (String) null, (Object) null);
fieldWriter.getSize();
Test 3: 
ClassWriter classWriter = new ClassWriter(1411);
FieldWriter fieldWriter = new FieldWriter(classWriter, (-2590), "", "", "", "");
fieldWriter.visitAnnotation("", false);
fieldWriter.getSize();
Test 4: 
ClassWriter classWriter = new ClassWriter((-22));
FieldWriter fieldWriter = new FieldWriter(classWriter, (-22), "=DvVPE=Ze;x`@z#avN", "=DvVPE=Ze;x`@z#avN", "=DvVPE=Ze;x`@z#avN", "=DvVPE=Ze;x`@z#avN");
fieldWriter.visitAnnotation("=DvVPE=Ze;x`@z#avN", true);
fieldWriter.getSize();
Test 5: 
ClassWriter classWriter = new ClassWriter((-74));
classWriter.version = (-74);
FieldWriter fieldWriter = new FieldWriter(classWriter, (-74), "=DvVE=Ze;xv@z#ao", "=DvVE=Ze;xv@z#ao", "=DvVE=Ze;xv@z#ao", "=DvVE=Ze;xv@z#ao");
fieldWriter.getSize();
Test 6: 
ClassWriter classWriter = new ClassWriter(1411);
FieldWriter fieldWriter = new FieldWriter(classWriter, (-2590), "", "", "", "");
Attribute attribute = new Attribute((String) null);
fieldWriter.visitAttribute(attribute);
// Undeclared exception!
try { 
  fieldWriter.getSize();
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 7: 
ClassWriter classWriter = new ClassWriter((-32));
FieldWriter fieldWriter = new FieldWriter(classWriter, 169, "", "", (String) null, (Object) null);
ByteVector byteVector = new ByteVector();
fieldWriter.put(byteVector);
Test 8: 
ClassWriter classWriter = new ClassWriter((-36));
classWriter.version = (-36);
FieldWriter fieldWriter = new FieldWriter(classWriter, (-36), "", "", "", "");
ByteVector byteVector = new ByteVector();
fieldWriter.put(byteVector);
Test 9: 
ClassWriter classWriter = new ClassWriter((-40));
FieldWriter fieldWriter = new FieldWriter(classWriter, (-40), "sMQ@`@7!u\"e", "sMQ@`@7!u\"e", "sMQ@`@7!u\"e", "sMQ@`@7!u\"e");
fieldWriter.visitAnnotation("sMQ@`@7!u\"e", true);
ByteVector byteVector = new ByteVector();
fieldWriter.put(byteVector);
Test 10: 
ClassWriter classWriter = new ClassWriter(1411);
FieldWriter fieldWriter = new FieldWriter(classWriter, (-2590), "", "", "", "");
fieldWriter.next = fieldWriter;
fieldWriter.visitAnnotation("", false);
ByteVector byteVector = new ByteVector();
fieldWriter.next.put(byteVector);
Test 11: 
ClassWriter classWriter = new ClassWriter((-40));
FieldWriter fieldWriter = new FieldWriter(classWriter, (-40), "sMQ@`@7!u\"e", "sMQ@`@7!u\"e", "sMQ@`@7!u\"e", "sMQ@`@7!u\"e");
Attribute attribute = new Attribute("sMQ@`@7!u\"e");
fieldWriter.visitAttribute(attribute);
ByteVector byteVector = new ByteVector();
// Undeclared exception!
try { 
  fieldWriter.put(byteVector);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("wheel.asm.Attribute", e);
}

Test 12: 
String string = "Signature";
FieldWriter fieldWriter = new FieldWriter((ClassWriter) "Z7pT", (int) "Signature", "A descriptive and representative value for the first parameter", "A descriptive and representative value for the second parameter", "*<t'a+9W#~'", "*<t'a+9W#~'");
((FieldWriter) string).visitEnd();

Test 13: 
FieldWriter fieldWriter = new FieldWriter((ClassWriter) 5293, (int) "", "Deprecated", "", "", "");

Test 14: 
String string = "myString";
FieldWriter fieldWriter = new FieldWriter((ClassWriter) 1, (int) "myString", "java.lang.String", "=DvVE=Ze;xv@z#av", (String) null, (Object) null);
((FieldWriter) string).getSize();

Test 15: 
char _char = 'a';
FieldWriter fieldWriter = new FieldWriter((ClassWriter) "This is a test string.", 'a', (String) true, "", "", "");
String string = "Some annotation";
boolean _boolean = false;
((FieldWriter) _char).visitAnnotation(string, _boolean);
((FieldWriter) _char).getSize();

Test 16: 
String string = "description";
FieldWriter fieldWriter = new FieldWriter((ClassWriter) "name", (int) "description", "type", "annotation", "=DvVPE=Ze;x`@z#avN", "=DvVPE=Ze;x`@z#avN");
String string = "annotation";
boolean _boolean = true;
((FieldWriter) string).visitAnnotation(string, _boolean);
((FieldWriter) string).getSize();

Test 17: 
String string = "consectetur adipiscing elit";
FieldWriter fieldWriter = new FieldWriter((ClassWriter) 74, (int) "Lorem ipsum dolor sit amet", "consectetur adipiscing elit", "sed do eiusmod tempor incididunt ut labore et dolore magna aliqua", "Ut enim ad minim veniam", "=DvVE=Ze;xv@z#ao");
((FieldWriter) string).getSize();

Test 18: 
String string = "my_field";
FieldWriter fieldWriter = new FieldWriter((ClassWriter) 169, (int) "my_field", "Ljava/lang/String;", "", (String) null, (Object) null);
ByteVector byteVector = new ByteVector();
((FieldWriter) string).put(byteVector);

Test 19: 
String string = "Ljava/lang/Short;";
FieldWriter fieldWriter = new FieldWriter((ClassWriter) "age", (int) "S", "Ljava/lang/Short;", (String) 35, "", "");
ByteVector byteVector = new ByteVector();
((FieldWriter) string).put(byteVector);

Test 20: 
String string = "";
FieldWriter fieldWriter = new FieldWriter((ClassWriter) "", (int) "", "", "", "", "");
String string = "";
boolean _boolean = false;
((FieldWriter) string).visitAnnotation(string, _boolean);
ByteVector byteVector = new ByteVector();

Test 21: 
String string = "myField";
FieldWriter fieldWriter = new FieldWriter((ClassWriter) 40, (int) "myField", "myField", "myField", "myField", "sMQ@`@7!u\"e");
String string = "myAttribute";
Attribute attribute = new Attribute(string);
((FieldWriter) string).visitAttribute(attribute);
ByteVector byteVector = new ByteVector();
((FieldWriter) string).put(byteVector);


* Generated after the refinement and before minimization 22 tests with total length 95
* test suite isTestSuite: 22
Test 0: 
ClassWriter classWriter = new ClassWriter(557);
FieldWriter fieldWriter = new FieldWriter(classWriter, (-163), "Z7pT", "Signature", "*<t'a+9W#~'", "*<t'a+9W#~'");
fieldWriter.visitEnd();
Test 1: 
ClassWriter classWriter = new ClassWriter(0);
FieldWriter fieldWriter = new FieldWriter(classWriter, 5293, "", "", "", "");
FieldWriter fieldWriter = new FieldWriter(classWriter, 5293, "", "Deprecated", (String) null, "");
Test 2: 
ClassWriter classWriter = new ClassWriter((-22));
FieldWriter fieldWriter = new FieldWriter(classWriter, 1, "=DvVE=Ze;xv@z#av", "=DvVE=Ze;xv@z#av", (String) null, (Object) null);
fieldWriter.getSize();
Test 3: 
ClassWriter classWriter = new ClassWriter(1411);
FieldWriter fieldWriter = new FieldWriter(classWriter, (-2590), "", "", "", "");
fieldWriter.visitAnnotation("", false);
fieldWriter.getSize();
Test 4: 
ClassWriter classWriter = new ClassWriter((-22));
FieldWriter fieldWriter = new FieldWriter(classWriter, (-22), "=DvVPE=Ze;x`@z#avN", "=DvVPE=Ze;x`@z#avN", "=DvVPE=Ze;x`@z#avN", "=DvVPE=Ze;x`@z#avN");
fieldWriter.visitAnnotation("=DvVPE=Ze;x`@z#avN", true);
fieldWriter.getSize();
Test 5: 
ClassWriter classWriter = new ClassWriter((-74));
classWriter.version = (-74);
FieldWriter fieldWriter = new FieldWriter(classWriter, (-74), "=DvVE=Ze;xv@z#ao", "=DvVE=Ze;xv@z#ao", "=DvVE=Ze;xv@z#ao", "=DvVE=Ze;xv@z#ao");
fieldWriter.getSize();
Test 6: 
ClassWriter classWriter = new ClassWriter(1411);
FieldWriter fieldWriter = new FieldWriter(classWriter, (-2590), "", "", "", "");
Attribute attribute = new Attribute((String) null);
fieldWriter.visitAttribute(attribute);
// Undeclared exception!
try { 
  fieldWriter.getSize();
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 7: 
ClassWriter classWriter = new ClassWriter((-32));
FieldWriter fieldWriter = new FieldWriter(classWriter, 169, "", "", (String) null, (Object) null);
ByteVector byteVector = new ByteVector();
fieldWriter.put(byteVector);
Test 8: 
ClassWriter classWriter = new ClassWriter((-36));
classWriter.version = (-36);
FieldWriter fieldWriter = new FieldWriter(classWriter, (-36), "", "", "", "");
ByteVector byteVector = new ByteVector();
fieldWriter.put(byteVector);
Test 9: 
ClassWriter classWriter = new ClassWriter((-40));
FieldWriter fieldWriter = new FieldWriter(classWriter, (-40), "sMQ@`@7!u\"e", "sMQ@`@7!u\"e", "sMQ@`@7!u\"e", "sMQ@`@7!u\"e");
fieldWriter.visitAnnotation("sMQ@`@7!u\"e", true);
ByteVector byteVector = new ByteVector();
fieldWriter.put(byteVector);
Test 10: 
ClassWriter classWriter = new ClassWriter(1411);
FieldWriter fieldWriter = new FieldWriter(classWriter, (-2590), "", "", "", "");
fieldWriter.next = fieldWriter;
fieldWriter.visitAnnotation("", false);
ByteVector byteVector = new ByteVector();
fieldWriter.next.put(byteVector);
Test 11: 
ClassWriter classWriter = new ClassWriter((-40));
FieldWriter fieldWriter = new FieldWriter(classWriter, (-40), "sMQ@`@7!u\"e", "sMQ@`@7!u\"e", "sMQ@`@7!u\"e", "sMQ@`@7!u\"e");
Attribute attribute = new Attribute("sMQ@`@7!u\"e");
fieldWriter.visitAttribute(attribute);
ByteVector byteVector = new ByteVector();
// Undeclared exception!
try { 
  fieldWriter.put(byteVector);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("wheel.asm.Attribute", e);
}

Test 12: 
String string = "Signature";
FieldWriter fieldWriter = new FieldWriter((ClassWriter) "Z7pT", (int) "Signature", "A descriptive and representative value for the first parameter", "A descriptive and representative value for the second parameter", "*<t'a+9W#~'", "*<t'a+9W#~'");
((FieldWriter) string).visitEnd();

Test 13: 
FieldWriter fieldWriter = new FieldWriter((ClassWriter) 5293, (int) "", "Deprecated", "", "", "");

Test 14: 
String string = "myString";
FieldWriter fieldWriter = new FieldWriter((ClassWriter) 1, (int) "myString", "java.lang.String", "=DvVE=Ze;xv@z#av", (String) null, (Object) null);
((FieldWriter) string).getSize();

Test 15: 
char _char = 'a';
FieldWriter fieldWriter = new FieldWriter((ClassWriter) "This is a test string.", 'a', (String) true, "", "", "");
String string = "Some annotation";
boolean _boolean = false;
((FieldWriter) _char).visitAnnotation(string, _boolean);
((FieldWriter) _char).getSize();

Test 16: 
String string = "description";
FieldWriter fieldWriter = new FieldWriter((ClassWriter) "name", (int) "description", "type", "annotation", "=DvVPE=Ze;x`@z#avN", "=DvVPE=Ze;x`@z#avN");
String string = "annotation";
boolean _boolean = true;
((FieldWriter) string).visitAnnotation(string, _boolean);
((FieldWriter) string).getSize();

Test 17: 
String string = "consectetur adipiscing elit";
FieldWriter fieldWriter = new FieldWriter((ClassWriter) 74, (int) "Lorem ipsum dolor sit amet", "consectetur adipiscing elit", "sed do eiusmod tempor incididunt ut labore et dolore magna aliqua", "Ut enim ad minim veniam", "=DvVE=Ze;xv@z#ao");
((FieldWriter) string).getSize();

Test 18: 
String string = "my_field";
FieldWriter fieldWriter = new FieldWriter((ClassWriter) 169, (int) "my_field", "Ljava/lang/String;", "", (String) null, (Object) null);
ByteVector byteVector = new ByteVector();
((FieldWriter) string).put(byteVector);

Test 19: 
String string = "Ljava/lang/Short;";
FieldWriter fieldWriter = new FieldWriter((ClassWriter) "age", (int) "S", "Ljava/lang/Short;", (String) 35, "", "");
ByteVector byteVector = new ByteVector();
((FieldWriter) string).put(byteVector);

Test 20: 
String string = "";
FieldWriter fieldWriter = new FieldWriter((ClassWriter) "", (int) "", "", "", "", "");
String string = "";
boolean _boolean = false;
((FieldWriter) string).visitAnnotation(string, _boolean);
ByteVector byteVector = new ByteVector();

Test 21: 
String string = "myField";
FieldWriter fieldWriter = new FieldWriter((ClassWriter) 40, (int) "myField", "myField", "myField", "myField", "sMQ@`@7!u\"e");
String string = "myAttribute";
Attribute attribute = new Attribute(string);
((FieldWriter) string).visitAttribute(attribute);
ByteVector byteVector = new ByteVector();
((FieldWriter) string).put(byteVector);


* Minimizing test suite
* test suite isTestSuite: 13
Test 0: 
ClassWriter classWriter = new ClassWriter(1411);
FieldWriter fieldWriter = new FieldWriter(classWriter, (-2590), "", "", "", "");
Attribute attribute = new Attribute((String) null);
fieldWriter.visitAttribute(attribute);
// Undeclared exception!
try { 
  fieldWriter.getSize();
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 1: 
ClassWriter classWriter = new ClassWriter(557);
FieldWriter fieldWriter = new FieldWriter(classWriter, (-163), "Z7pT", "Signature", "*<t'a+9W#~'", "*<t'a+9W#~'");
fieldWriter.visitEnd();
Test 2: 
ClassWriter classWriter = new ClassWriter(0);
FieldWriter fieldWriter = new FieldWriter(classWriter, 5293, "", "", "", "");
FieldWriter fieldWriter = new FieldWriter(classWriter, 5293, "", "Deprecated", (String) null, "");
Test 3: 
ClassWriter classWriter = new ClassWriter((-22));
FieldWriter fieldWriter = new FieldWriter(classWriter, 1, "=DvVE=Ze;xv@z#av", "=DvVE=Ze;xv@z#av", (String) null, (Object) null);
fieldWriter.getSize();
Test 4: 
ClassWriter classWriter = new ClassWriter(1411);
FieldWriter fieldWriter = new FieldWriter(classWriter, (-2590), "", "", "", "");
fieldWriter.visitAnnotation("", false);
fieldWriter.getSize();
Test 5: 
ClassWriter classWriter = new ClassWriter((-22));
FieldWriter fieldWriter = new FieldWriter(classWriter, (-22), "=DvVPE=Ze;x`@z#avN", "=DvVPE=Ze;x`@z#avN", "=DvVPE=Ze;x`@z#avN", "=DvVPE=Ze;x`@z#avN");
fieldWriter.visitAnnotation("=DvVPE=Ze;x`@z#avN", true);
fieldWriter.getSize();
Test 6: 
ClassWriter classWriter = new ClassWriter((-22));
FieldWriter fieldWriter = new FieldWriter(classWriter, (-22), "=DvVPE=Ze;x`@z#avN", "=DvVPE=Ze;x`@z#avN", "=DvVPE=Ze;x`@z#avN", "=DvVPE=Ze;x`@z#avN");
fieldWriter.getSize();
Test 7: 
ClassWriter classWriter = new ClassWriter((-74));
classWriter.version = (-74);
FieldWriter fieldWriter = new FieldWriter(classWriter, (-74), "=DvVE=Ze;xv@z#ao", "=DvVE=Ze;xv@z#ao", "=DvVE=Ze;xv@z#ao", "=DvVE=Ze;xv@z#ao");
fieldWriter.getSize();
Test 8: 
ClassWriter classWriter = new ClassWriter((-32));
FieldWriter fieldWriter = new FieldWriter(classWriter, 169, "", "", (String) null, (Object) null);
ByteVector byteVector = new ByteVector();
fieldWriter.put(byteVector);
Test 9: 
ClassWriter classWriter = new ClassWriter((-36));
classWriter.version = (-36);
FieldWriter fieldWriter = new FieldWriter(classWriter, (-36), "", "", "", "");
ByteVector byteVector = new ByteVector();
fieldWriter.put(byteVector);
Test 10: 
ClassWriter classWriter = new ClassWriter((-40));
FieldWriter fieldWriter = new FieldWriter(classWriter, (-40), "sMQ@`@7!u\"e", "sMQ@`@7!u\"e", "sMQ@`@7!u\"e", "sMQ@`@7!u\"e");
fieldWriter.visitAnnotation("sMQ@`@7!u\"e", true);
ByteVector byteVector = new ByteVector();
fieldWriter.put(byteVector);
Test 11: 
ClassWriter classWriter = new ClassWriter(1411);
FieldWriter fieldWriter = new FieldWriter(classWriter, (-2590), "", "", "", "");
fieldWriter.next = fieldWriter;
fieldWriter.visitAnnotation("", false);
ByteVector byteVector = new ByteVector();
fieldWriter.next.put(byteVector);
Test 12: 
ClassWriter classWriter = new ClassWriter((-40));
FieldWriter fieldWriter = new FieldWriter(classWriter, (-40), "sMQ@`@7!u\"e", "sMQ@`@7!u\"e", "sMQ@`@7!u\"e", "sMQ@`@7!u\"e");
Attribute attribute = new Attribute("sMQ@`@7!u\"e");
fieldWriter.visitAttribute(attribute);
ByteVector byteVector = new ByteVector();
// Undeclared exception!
try { 
  fieldWriter.put(byteVector);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("wheel.asm.Attribute", e);
}


* Going to analyze the coverage criteria
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 100%
* Total number of goals: 58
* Number of covered goals: 58
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 100%
* Total number of goals: 85
* Number of covered goals: 85
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 40%
* Total number of goals: 5
* Number of covered goals: 2
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 6
* Number of covered goals: 6
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 100%
* Total number of goals: 58
* Number of covered goals: 58
* Generated 13 tests with total length 55
* Resulting test suite's coverage: 88% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 36%
* Compiling and checking tests
Going to execute: removeTestsThatDoNotCompile
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: ClassWriter arg0 = new ClassWriter(557);
FieldWriter fieldWriter = new FieldWriter(arg0, (-163), "Z7pT", "Signature", "*<t'a+9W#~'", "*<t'a+9W#~'");
fieldWriter.visitEnd();

** It was a parseable test case! 
refined test name is: testCreateFieldWriterWithCorrectFieldsSet
* Compiling Tests
refined test name is: testCreateFieldWriterWithCorrectFieldsSet
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: ClassWriter arg0 = new ClassWriter((-22));
FieldWriter fieldWriter = new FieldWriter(arg0, 1, "=DvVE=Ze;xv@z#av", "=DvVE=Ze;xv@z#av", (String) null, (Object) null);
int size = fieldWriter.getSize();
assertEquals(8, size);


** It was a parseable test case! 
refined test name is: testFieldWriterGetSize
* Compiling Tests
refined test name is: testFieldWriterGetSizeReturnsExpectedValueOf8
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: ClassWriter arg0 = new ClassWriter(1411);
FieldWriter fieldWriter = new FieldWriter(arg0, (-2590), "", "", "", "");
fieldWriter.visitAnnotation("", false);
int size = fieldWriter.getSize();
assertEquals(48, size);


** It was a parseable test case! 
refined test name is: testGetSizeReturnsExpectedValue
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: ClassWriter arg0 = new ClassWriter((-22));
FieldWriter fieldWriter = new FieldWriter(arg0, (-22), "=DvVPE=Ze;x`@z#avN", "=DvVPE=Ze;x`@z#avN", "=DvVPE=Ze;x`@z#avN", "=DvVPE=Ze;x`@z#avN");
fieldWriter.visitAnnotation("=DvVPE=Ze;x`@z#avN", true);
int size = fieldWriter.getSize();
assertEquals(48, size);


** It was a parseable test case! 
refined test name is: testVisitAnnotationWithBooleanValue
* Compiling Tests
refined test name is: testFieldWriterGetSizeWithAnnotation
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: ClassWriter arg0 = new ClassWriter((-22));
FieldWriter fieldWriter = new FieldWriter(arg0, (-22), "=DvVPE=Ze;x`@z#avN", "=DvVPE=Ze;x`@z#avN", "=DvVPE=Ze;x`@z#avN", "=DvVPE=Ze;x`@z#avN");
int size = fieldWriter.getSize();
assertEquals(36, size);


** It was a parseable test case! 
refined test name is: testGetSizeOfFieldWriterWithValidArguments
* Compiling Tests
refined test name is: testGetSizeShouldReturnCorrectValue
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: ClassWriter arg0 = new ClassWriter((-74));
arg0.version = (-74);
FieldWriter fieldWriter = new FieldWriter(arg0, (-74), "=DvVE=Ze;xv@z#ao", "=DvVE=Ze;xv@z#ao", "=DvVE=Ze;xv@z#ao", "=DvVE=Ze;xv@z#ao");
int size = fieldWriter.getSize();
assertEquals(30, size);


** It was a parseable test case! 
refined test name is: testFieldSizeIsCorrect
* Compiling Tests
refined test name is: testFieldSize
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 10:27:53.078 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/tmp/EvoSuite_pathingJar6362738662938245223.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 10:27:53.098 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar6362738662938245223.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 10:27:53.151 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/tmp/EvoSuite_pathingJar6362738662938245223.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 10:27:53.152 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar6362738662938245223.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 10:27:53.196 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/tmp/EvoSuite_pathingJar6362738662938245223.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 10:27:53.197 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar6362738662938245223.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 10:27:53.242 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/tmp/EvoSuite_pathingJar6362738662938245223.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 10:27:53.243 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar6362738662938245223.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 10:27:53.301 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/tmp/EvoSuite_pathingJar6362738662938245223.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 10:27:53.303 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar6362738662938245223.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 10:27:53.366 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/tmp/EvoSuite_pathingJar6362738662938245223.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 10:27:53.367 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar6362738662938245223.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
** Write a test suite: 1 called: 1 to improve: false
** Write a test suite: 3 called: 2 to improve: false
** Write a test suite: 4 called: 3 to improve: false
** Write a test suite: 5 called: 4 to improve: false
[MASTER] 10:27:53.469 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/tmp/EvoSuite_pathingJar6362738662938245223.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 10:27:53.470 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar6362738662938245223.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
** Write a test suite: 1 called: 1 to improve: false
** Write a test suite: 2 called: 2 to improve: false
** Write a test suite: 4 called: 3 to improve: false
** Write a test suite: 5 called: 4 to improve: false
[MASTER] 10:27:53.571 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/tmp/EvoSuite_pathingJar6362738662938245223.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 10:27:53.573 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar6362738662938245223.jar
[MASTER] 10:27:53.726 [logback-1] WARN  TimeController - Already entered in phase: INLINING. This will mess up the timing calculations.
* test suite isTestSuite: 12
Test 0: 
ClassWriter classWriter = new ClassWriter(557);
FieldWriter fieldWriter = new FieldWriter(classWriter, (-163), "Z7pT", "Signature", "*<t'a+9W#~'", "*<t'a+9W#~'");
fieldWriter.visitEnd();
Test 1: 
ClassWriter classWriter = new ClassWriter(0);
FieldWriter fieldWriter = new FieldWriter(classWriter, 5293, "", "", "", "");
FieldWriter fieldWriter = new FieldWriter(classWriter, 5293, "", "Deprecated", (String) null, "");
Test 2: 
ClassWriter classWriter = new ClassWriter((-22));
FieldWriter fieldWriter = new FieldWriter(classWriter, 1, "=DvVE=Ze;xv@z#av", "=DvVE=Ze;xv@z#av", (String) null, (Object) null);
fieldWriter.getSize();
Test 3: 
ClassWriter classWriter = new ClassWriter(1411);
FieldWriter fieldWriter = new FieldWriter(classWriter, (-2590), "", "", "", "");
fieldWriter.visitAnnotation("", false);
fieldWriter.getSize();
Test 4: 
ClassWriter classWriter = new ClassWriter((-22));
FieldWriter fieldWriter = new FieldWriter(classWriter, (-22), "=DvVPE=Ze;x`@z#avN", "=DvVPE=Ze;x`@z#avN", "=DvVPE=Ze;x`@z#avN", "=DvVPE=Ze;x`@z#avN");
fieldWriter.visitAnnotation("=DvVPE=Ze;x`@z#avN", true);
fieldWriter.getSize();
Test 5: 
ClassWriter classWriter = new ClassWriter((-74));
classWriter.version = (-74);
FieldWriter fieldWriter = new FieldWriter(classWriter, (-74), "=DvVE=Ze;xv@z#ao", "=DvVE=Ze;xv@z#ao", "=DvVE=Ze;xv@z#ao", "=DvVE=Ze;xv@z#ao");
fieldWriter.getSize();
Test 6: 
ClassWriter classWriter = new ClassWriter(1411);
FieldWriter fieldWriter = new FieldWriter(classWriter, (-2590), "", "", "", "");
Attribute attribute = new Attribute((String) null);
fieldWriter.visitAttribute(attribute);
// Undeclared exception!
try { 
  fieldWriter.getSize();
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 7: 
ClassWriter classWriter = new ClassWriter((-32));
FieldWriter fieldWriter = new FieldWriter(classWriter, 169, "", "", (String) null, (Object) null);
ByteVector byteVector = new ByteVector();
fieldWriter.put(byteVector);
Test 8: 
ClassWriter classWriter = new ClassWriter((-36));
classWriter.version = (-36);
FieldWriter fieldWriter = new FieldWriter(classWriter, (-36), "", "", "", "");
ByteVector byteVector = new ByteVector();
fieldWriter.put(byteVector);
Test 9: 
ClassWriter classWriter = new ClassWriter((-40));
FieldWriter fieldWriter = new FieldWriter(classWriter, (-40), "sMQ@`@7!u\"e", "sMQ@`@7!u\"e", "sMQ@`@7!u\"e", "sMQ@`@7!u\"e");
fieldWriter.visitAnnotation("sMQ@`@7!u\"e", true);
ByteVector byteVector = new ByteVector();
fieldWriter.put(byteVector);
Test 10: 
ClassWriter classWriter = new ClassWriter(1411);
FieldWriter fieldWriter = new FieldWriter(classWriter, (-2590), "", "", "", "");
fieldWriter.next = fieldWriter;
fieldWriter.visitAnnotation("", false);
ByteVector byteVector = new ByteVector();
fieldWriter.next.put(byteVector);
Test 11: 
ClassWriter classWriter = new ClassWriter((-40));
FieldWriter fieldWriter = new FieldWriter(classWriter, (-40), "sMQ@`@7!u\"e", "sMQ@`@7!u\"e", "sMQ@`@7!u\"e", "sMQ@`@7!u\"e");
Attribute attribute = new Attribute("sMQ@`@7!u\"e");
fieldWriter.visitAttribute(attribute);
ByteVector byteVector = new ByteVector();
// Undeclared exception!
try { 
  fieldWriter.put(byteVector);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("wheel.asm.Attribute", e);
}


* Minimizing test suite
* test suite isTestSuite: 13
Test 0: 
ClassWriter classWriter = new ClassWriter(1411);
FieldWriter fieldWriter = new FieldWriter(classWriter, (-2590), "", "", "", "");
Attribute attribute = new Attribute((String) null);
fieldWriter.visitAttribute(attribute);
// Undeclared exception!
try { 
  fieldWriter.getSize();
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 1: 
ClassWriter classWriter = new ClassWriter(557);
FieldWriter fieldWriter = new FieldWriter(classWriter, (-163), "Z7pT", "Signature", "*<t'a+9W#~'", "*<t'a+9W#~'");
fieldWriter.visitEnd();
Test 2: 
ClassWriter classWriter = new ClassWriter(0);
FieldWriter fieldWriter = new FieldWriter(classWriter, 5293, "", "", "", "");
FieldWriter fieldWriter = new FieldWriter(classWriter, 5293, "", "Deprecated", (String) null, "");
Test 3: 
ClassWriter classWriter = new ClassWriter((-22));
FieldWriter fieldWriter = new FieldWriter(classWriter, 1, "=DvVE=Ze;xv@z#av", "=DvVE=Ze;xv@z#av", (String) null, (Object) null);
fieldWriter.getSize();
Test 4: 
ClassWriter classWriter = new ClassWriter(1411);
FieldWriter fieldWriter = new FieldWriter(classWriter, (-2590), "", "", "", "");
fieldWriter.visitAnnotation("", false);
fieldWriter.getSize();
Test 5: 
ClassWriter classWriter = new ClassWriter((-22));
FieldWriter fieldWriter = new FieldWriter(classWriter, (-22), "=DvVPE=Ze;x`@z#avN", "=DvVPE=Ze;x`@z#avN", "=DvVPE=Ze;x`@z#avN", "=DvVPE=Ze;x`@z#avN");
fieldWriter.visitAnnotation("=DvVPE=Ze;x`@z#avN", true);
fieldWriter.getSize();
Test 6: 
ClassWriter classWriter = new ClassWriter((-22));
FieldWriter fieldWriter = new FieldWriter(classWriter, (-22), "=DvVPE=Ze;x`@z#avN", "=DvVPE=Ze;x`@z#avN", "=DvVPE=Ze;x`@z#avN", "=DvVPE=Ze;x`@z#avN");
fieldWriter.getSize();
Test 7: 
ClassWriter classWriter = new ClassWriter((-74));
classWriter.version = (-74);
FieldWriter fieldWriter = new FieldWriter(classWriter, (-74), "=DvVE=Ze;xv@z#ao", "=DvVE=Ze;xv@z#ao", "=DvVE=Ze;xv@z#ao", "=DvVE=Ze;xv@z#ao");
fieldWriter.getSize();
Test 8: 
ClassWriter classWriter = new ClassWriter((-32));
FieldWriter fieldWriter = new FieldWriter(classWriter, 169, "", "", (String) null, (Object) null);
ByteVector byteVector = new ByteVector();
fieldWriter.put(byteVector);
Test 9: 
ClassWriter classWriter = new ClassWriter((-36));
classWriter.version = (-36);
FieldWriter fieldWriter = new FieldWriter(classWriter, (-36), "", "", "", "");
ByteVector byteVector = new ByteVector();
fieldWriter.put(byteVector);
Test 10: 
ClassWriter classWriter = new ClassWriter((-40));
FieldWriter fieldWriter = new FieldWriter(classWriter, (-40), "sMQ@`@7!u\"e", "sMQ@`@7!u\"e", "sMQ@`@7!u\"e", "sMQ@`@7!u\"e");
fieldWriter.visitAnnotation("sMQ@`@7!u\"e", true);
ByteVector byteVector = new ByteVector();
fieldWriter.put(byteVector);
Test 11: 
ClassWriter classWriter = new ClassWriter(1411);
FieldWriter fieldWriter = new FieldWriter(classWriter, (-2590), "", "", "", "");
fieldWriter.next = fieldWriter;
fieldWriter.visitAnnotation("", false);
ByteVector byteVector = new ByteVector();
fieldWriter.next.put(byteVector);
Test 12: 
ClassWriter classWriter = new ClassWriter((-40));
FieldWriter fieldWriter = new FieldWriter(classWriter, (-40), "sMQ@`@7!u\"e", "sMQ@`@7!u\"e", "sMQ@`@7!u\"e", "sMQ@`@7!u\"e");
Attribute attribute = new Attribute("sMQ@`@7!u\"e");
fieldWriter.visitAttribute(attribute);
ByteVector byteVector = new ByteVector();
// Undeclared exception!
try { 
  fieldWriter.put(byteVector);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("wheel.asm.Attribute", e);
}


[MASTER] 10:27:55.103 [logback-1] WARN  TimeController - Already entered in phase: MINIMIZATION. This will mess up the timing calculations.
* Going to analyze the coverage criteria
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 100%
* Total number of goals: 58
* Number of covered goals: 58
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 100%
* Total number of goals: 85
* Number of covered goals: 85
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 40%
* Total number of goals: 5
* Number of covered goals: 2
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 6
* Number of covered goals: 6
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 100%
* Total number of goals: 58
* Number of covered goals: 58
* Generated 13 tests with total length 55
* Resulting test suite's coverage: 88% (average coverage for all fitness functions)
[MASTER] 10:27:55.138 [logback-1] WARN  TimeController - Already entered in phase: COVERAGE_ANALYSIS. This will mess up the timing calculations.
* Generating assertions
* Resulting test suite's mutation score: 36%
* Compiling and checking tests
[MASTER] 10:27:57.393 [logback-1] WARN  TimeController - Already entered in phase: ASSERTION_GENERATION. This will mess up the timing calculations.
Going to execute: removeTestsThatDoNotCompile
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 10:27:58.037 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/tmp/EvoSuite_pathingJar6362738662938245223.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 10:27:58.038 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar6362738662938245223.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 10:27:58.085 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/tmp/EvoSuite_pathingJar6362738662938245223.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 10:27:58.087 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar6362738662938245223.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 10:27:58.137 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/tmp/EvoSuite_pathingJar6362738662938245223.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 10:27:58.138 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar6362738662938245223.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 10:27:58.207 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/tmp/EvoSuite_pathingJar6362738662938245223.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 10:27:58.208 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar6362738662938245223.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 10:27:58.252 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/tmp/EvoSuite_pathingJar6362738662938245223.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 10:27:58.253 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar6362738662938245223.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 10:27:58.303 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/tmp/EvoSuite_pathingJar6362738662938245223.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 10:27:58.305 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar6362738662938245223.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
** Write a test suite: 1 called: 1 to improve: false
** Write a test suite: 2 called: 2 to improve: false
** Write a test suite: 3 called: 3 to improve: false
** Write a test suite: 4 called: 4 to improve: false
** Write a test suite: 5 called: 5 to improve: false
[MASTER] 10:27:58.389 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/tmp/EvoSuite_pathingJar6362738662938245223.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 10:27:58.390 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar6362738662938245223.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
** Write a test suite: 1 called: 1 to improve: false
** Write a test suite: 2 called: 2 to improve: false
** Write a test suite: 3 called: 3 to improve: false
** Write a test suite: 4 called: 4 to improve: false
** Write a test suite: 5 called: 5 to improve: false
[MASTER] 10:27:58.479 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/tmp/EvoSuite_pathingJar6362738662938245223.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 10:27:58.480 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar6362738662938245223.jar
* Writing tests to file
[MASTER] 10:27:58.482 [logback-1] WARN  TimeController - Already entered in phase: JUNIT_CHECK. This will mess up the timing calculations.
* Writing JUnit test case 'FieldWriter_ESTest' to evosuite-tests
** Write a test suite: 0 called: 0 to improve: false
** Write a test suite: 1 called: 1 to improve: false
** Write a test suite: 2 called: 2 to improve: false
** Write a test suite: 4 called: 3 to improve: false
** Write a test suite: 5 called: 4 to improve: false
* Writing JUnit test case 'FieldWriter_Original_ESTest' to evosuite-tests
** Write a test suite: 0 called: 0 to improve: false
** Write a test suite: 1 called: 1 to improve: false
** Write a test suite: 2 called: 2 to improve: false
** Write a test suite: 3 called: 3 to improve: false
** Write a test suite: 4 called: 4 to improve: false
** Write a test suite: 5 called: 5 to improve: false
* Done!

* Computation finished
