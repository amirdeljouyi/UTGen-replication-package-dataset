* EvoSuite 1.0.0-SNAPSHOT
* Going to generate test cases for class: wheel.asm.ClassReader
* Starting Client-0
* Properties loaded from /home/roham/Results-Utestgen/dataset/SF110-new-res/80_wheelwebtool/evosuite-files/evosuite.properties
* Connecting to master process on port 12976
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 10:28:07.687 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 10:28:07.690 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 10:28:07.691 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 10:28:07.706 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.Temporal
[MASTER] 10:28:07.707 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.ZoneId
[MASTER] 10:28:07.708 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAccessor
[MASTER] 10:28:07.708 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalField
[MASTER] 10:28:07.710 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalUnit
[MASTER] 10:28:07.710 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAmount
[MASTER] 10:28:07.711 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.Clock
[MASTER] 10:28:07.713 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalQuery
[MASTER] 10:28:07.715 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAdjuster
[MASTER] 10:28:07.717 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 10:28:07.747 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 10:28:07.748 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
* Finished analyzing classpath
* Generating tests for class wheel.asm.ClassReader
* Test criteria:
  - Branch Coverage
  - Line Coverage
  - Method-Output Coverage
  - Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 2563
* Using seed 1710325680112
* Starting evolution
[Progress:>                             0%] [Cov:>                                  0%]* Initial Number of Goals in DynaMOSA = 240 / 2563
[Progress:>                             2%] [Cov:=>                                 3%][Progress:>                             3%] [Cov:==>                                8%][Progress:=>                            6%] [Cov:======>                            19%][Progress:=>                            6%] [Cov:========>                          25%][Progress:==>                           7%] [Cov:===========>                       33%][Progress:==>                           7%] [Cov:============>                      36%][Progress:==>                           8%] [Cov:=============>                     39%][Progress:===>                          11%] [Cov:=============>                     39%][Progress:===>                          11%] [Cov:==============>                    40%][Progress:===>                          12%] [Cov:==============>                    40%][Progress:===>                          12%] [Cov:===============>                   45%][Progress:===>                          13%] [Cov:=================>                 49%][Progress:====>                         16%] [Cov:=================>                 49%][Progress:=====>                        17%] [Cov:=================>                 49%][Progress:=====>                        17%] [Cov:=================>                 50%][Progress:=====>                        18%] [Cov:=================>                 50%][Progress:=====>                        18%] [Cov:==================>                52%][Progress:=====>                        18%] [Cov:==================>                52%][Progress:=====>                        18%] [Cov:==================>                53%][Progress:======>                       21%] [Cov:==================>                53%][Progress:======>                       22%] [Cov:==================>                54%][Progress:======>                       22%] [Cov:==================>                54%][Progress:======>                       23%] [Cov:==================>                54%][Progress:======>                       23%] [Cov:===================>               55%][Progress:======>                       23%] [Cov:===================>               55%][Progress:=======>                      24%] [Cov:===================>               55%][Progress:=======>                      24%] [Cov:===================>               56%][Progress:=======>                      25%] [Cov:===================>               56%][Progress:=======>                      25%] [Cov:===================>               56%][Progress:=======>                      25%] [Cov:===================>               56%][Progress:=======>                      26%] [Cov:===================>               56%][Progress:========>                     29%] [Cov:===================>               56%][Progress:=========>                    30%] [Cov:===================>               56%][Progress:=========>                    32%] [Cov:===================>               56%][Progress:==========>                   35%] [Cov:===================>               56%][Progress:==========>                   36%] [Cov:===================>               56%][Progress:===========>                  39%] [Cov:===================>               56%][Progress:============>                 42%] [Cov:===================>               56%][Progress:=============>                45%] [Cov:===================>               56%][Progress:=============>                45%] [Cov:===================>               56%][Progress:=============>                45%] [Cov:===================>               56%][Progress:=============>                46%] [Cov:===================>               56%][Progress:=============>                46%] [Cov:===================>               56%][Progress:=============>                46%] [Cov:===================>               56%][Progress:==============>               47%] [Cov:===================>               56%][Progress:==============>               49%] [Cov:===================>               56%][Progress:===============>              50%] [Cov:===================>               56%][Progress:===============>              50%] [Cov:===================>               56%][Progress:===============>              50%] [Cov:===================>               56%][Progress:===============>              51%] [Cov:===================>               56%][Progress:===============>              51%] [Cov:===================>               56%][Progress:===============>              52%] [Cov:===================>               57%][Progress:===============>              52%] [Cov:===================>               57%][Progress:===============>              52%] [Cov:===================>               57%][Progress:===============>              52%] [Cov:===================>               57%][Progress:===============>              53%] [Cov:===================>               57%][Progress:===============>              53%] [Cov:===================>               57%][Progress:================>             54%] [Cov:===================>               57%][Progress:================>             54%] [Cov:====================>              58%][Progress:================>             54%] [Cov:====================>              58%][Progress:================>             55%] [Cov:====================>              58%][Progress:================>             55%] [Cov:====================>              58%][Progress:================>             56%] [Cov:====================>              58%][Progress:================>             56%] [Cov:====================>              58%][Progress:=================>            57%] [Cov:====================>              58%][Progress:=================>            57%] [Cov:====================>              58%][Progress:=================>            57%] [Cov:====================>              58%][Progress:=================>            58%] [Cov:====================>              58%][Progress:=================>            58%] [Cov:====================>              58%][Progress:=================>            58%] [Cov:====================>              58%][Progress:=================>            59%] [Cov:====================>              58%][Progress:=================>            59%] [Cov:====================>              59%][Progress:==================>           60%] [Cov:====================>              59%][Progress:==================>           60%] [Cov:====================>              59%][Progress:==================>           61%] [Cov:====================>              59%][Progress:==================>           61%] [Cov:====================>              59%][Progress:==================>           62%] [Cov:====================>              59%][Progress:==================>           62%] [Cov:====================>              59%][Progress:==================>           63%] [Cov:====================>              59%][Progress:===================>          66%] [Cov:====================>              59%][Progress:===================>          66%] [Cov:====================>              59%][Progress:====================>         67%] [Cov:=====================>             60%][Progress:====================>         68%] [Cov:=====================>             60%][Progress:====================>         69%] [Cov:=====================>             60%][Progress:=====================>        71%] [Cov:=====================>             62%][Progress:=====================>        73%] [Cov:=====================>             62%][Progress:======================>       76%] [Cov:=====================>             62%][Progress:=======================>      77%] [Cov:======================>            63%][Progress:=======================>      78%] [Cov:======================>            63%][Progress:========================>     82%] [Cov:======================>            63%][Progress:=========================>    84%] [Cov:======================>            63%][Progress:==========================>   89%] [Cov:======================>            63%][Progress:===========================>  91%] [Cov:======================>            63%][Progress:============================> 94%] [Cov:======================>            63%][Progress:============================> 95%] [Cov:======================>            63%][Progress:=============================>97%] [Cov:======================>            63%][Progress:=============================>99%] [Cov:======================>            63%][Progress:=============================>99%] [Cov:======================>            63%][Progress:==============================100%] [Cov:======================>            63%]
* Search finished after 201s and 98 generations, 37606 statements, best individual has fitness: 1122.0
* Generated before the refinement 42 tests with total length 113
statement is: wheel.asm.ClassReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class wheel.asm.ClassReader
statement code is: ClassReader classReader = new ClassReader("java/lang/Object")
statement is: readShort(I)S type is: class org.evosuite.testcase.statements.MethodStatement return type short
statement code is: short readShort = classReader.readShort((byte)87)
test data is: ClassReader classReader = new ClassReader("java/lang/Object");
classReader.readShort((byte)87);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        classReader.readShort(((byte) ('A')));
    }
}
statement is: classReader.readShort(((byte) ('A'))), class spoon.support.reflect.code.CtInvocationImpl
invocation is: classReader.readShort(((byte) ('A'))) target is: classReader method is: readShort(byte)
statement is: wheel.asm.ClassReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class wheel.asm.ClassReader
statement code is: ClassReader classReader = new ClassReader("java/lang/Object")
statement is: getAccess()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int access = classReader.getAccess()
test data is: ClassReader classReader = new ClassReader("java/lang/Object");
classReader.getAccess();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        classReader.getAccess();
    }
}
statement is: classReader.getAccess(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: classReader.getAccess() target is: classReader method is: getAccess()
statement is: wheel.asm.ClassReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class wheel.asm.ClassReader
statement code is: ClassReader classReader = new ClassReader("java/lang/Object")
statement is: getItem(I)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int item = classReader.getItem(21)
test data is: ClassReader classReader = new ClassReader("java/lang/Object");
classReader.getItem(21);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        classReader.getItem(476384763);// Integer.MAX_VALUE

        ClassReader classReader2 = new ClassReader("java/lang/Double");
        classReader2.getItem(10.001);// double value that is close to Double.MAX_VALUE

        ClassReader classReader3 = new ClassReader("java/lang/String");
        classReader3.getItem("Hello, world!");// a string with a length of 12 characters }}

    }
}
statement is: classReader.getItem(476384763)// Integer.MAX_VALUE
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: classReader.getItem(476384763)// Integer.MAX_VALUE
 target is: classReader method is: getItem(int)
statement is: ClassReader classReader2 = new ClassReader("java/lang/Double"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: classReader2.getItem(10.001)// double value that is close to Double.MAX_VALUE
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: classReader2.getItem(10.001)// double value that is close to Double.MAX_VALUE
 target is: classReader2 method is: getItem(double)
source statement: wheel.asm.ClassReader(Ljava/lang/String;)V callee: VariableReference: Statement 0, type wheel.asm.ClassReaderindex is: 1
Matched Method is: getItem(I)I
statement is: ClassReader classReader3 = new ClassReader("java/lang/String"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: classReader3.getItem("Hello, world!")// a string with a length of 12 characters }}
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: classReader3.getItem("Hello, world!")// a string with a length of 12 characters }}
 target is: classReader3 method is: getItem(java.lang.String)
source statement: wheel.asm.ClassReader(Ljava/lang/String;)V callee: VariableReference: Statement 0, type wheel.asm.ClassReaderindex is: 5
Matched Method is: getItem(I)I
TestCase is: String string = "java/lang/Double";
ClassReader classReader = new ClassReader(string);
double _double = 10.001;
((ClassReader) string).getItem((int) _double);
String string = "java/lang/String";
ClassReader classReader = new ClassReader(string);
String string = "Hello, world!";
((ClassReader) string).getItem((int) string);

statement is: wheel.asm.ClassReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class wheel.asm.ClassReader
statement code is: ClassReader classReader = new ClassReader("java/lang/Object")
statement is: readByte(I)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int readByte = classReader.readByte(1004)
test data is: ClassReader classReader = new ClassReader("java/lang/Object");
classReader.readByte(1004);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        classReader.readByte(5328);
    }
}
statement is: classReader.readByte(5328), class spoon.support.reflect.code.CtInvocationImpl
invocation is: classReader.readByte(5328) target is: classReader method is: readByte(int)
statement is: wheel.asm.ClassReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class wheel.asm.ClassReader
statement code is: ClassReader classReader = new ClassReader("java/lang/Object")
statement is: readLong(I)J type is: class org.evosuite.testcase.statements.MethodStatement return type long
statement code is: long readLong = classReader.readLong(1)
test data is: ClassReader classReader = new ClassReader("java/lang/Object");
classReader.readLong(1);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        classReader.readString("The quick brown fox jumps over the lazy dog.");
    }
}
statement is: classReader.readString("The quick brown fox jumps over the lazy dog."), class spoon.support.reflect.code.CtInvocationImpl
invocation is: classReader.readString("The quick brown fox jumps over the lazy dog.") target is: classReader method is: readString(java.lang.String)
statement is: wheel.asm.ClassReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class wheel.asm.ClassReader
statement code is: ClassReader classReader = new ClassReader("org.apache.commons.io.filefilter.DelegateFileFilter")
statement is: getClassName()Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.lang.String
statement code is: String className = classReader.getClassName()
test data is: ClassReader classReader = new ClassReader("org.apache.commons.io.filefilter.DelegateFileFilter");
classReader.getClassName();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
    }

    public static void main(String[] args) {
        ClassReader classReader = new ClassReader("org.apache.commons.io.filefilter.DelegateFileFilter");
        String className = classReader.getClassName();
        System.out.println(className);
    }
}
statement is: ClassReader classReader = new ClassReader("org.apache.commons.io.filefilter.DelegateFileFilter"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: String className = classReader.getClassName(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: classReader.getClassName() target is: classReader method is: getClassName()
source statement: wheel.asm.ClassReader(Ljava/lang/String;)V callee: VariableReference: Statement 0, type wheel.asm.ClassReaderindex is: 1
Matched Method is: getClassName()Ljava/lang/String;
statement is: System.out.println(className), class spoon.support.reflect.code.CtInvocationImpl
invocation is: System.out.println(className) target is: System.out method is: println(java.lang.String)
TestCase is: String string = "org.apache.commons.io.filefilter.DelegateFileFilter";
ClassReader classReader = new ClassReader(string);
((ClassReader) string).getClassName();

statement is: wheel.asm.ClassReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class wheel.asm.ClassReader
statement code is: ClassReader classReader = new ClassReader("org.apache.commons.io.filefilter.DelegateFileFilter")
statement is: wheel.asm.ClassReader([BII)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class wheel.asm.ClassReader
statement code is: ClassReader classReader = new ClassReader(classReader.b, 4, (-1088))
test data is: ClassReader classReader = new ClassReader("org.apache.commons.io.filefilter.DelegateFileFilter");
ClassReader classReader = new ClassReader(classReader.b, 4, (-1088));

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        String expectedString = "This is a string";
        int expectedInt = 42;
        double expectedDouble = 3.14;
        char expectedChar = 'a';
        ClassReader classReader = new ClassReader(expectedString, expectedInt, expectedDouble);
        String actualString = classReader.getString();
        int actualInt = classReader.getInt();
        double actualDouble = classReader.getDouble();
        char actualChar = classReader.getChar();
        assertEquals(expectedString, actualString);
        assertEquals(expectedInt, actualInt);
        assertEquals(expectedDouble, actualDouble);
        assertEquals(expectedChar, actualChar);
    }
}
statement is: String expectedString = "This is a string", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: int expectedInt = 42, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: double expectedDouble = 3.14, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: char expectedChar = 'a', class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: ClassReader classReader = new ClassReader(expectedString, expectedInt, expectedDouble), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: String actualString = classReader.getString(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: classReader.getString() target is: classReader method is: getString()
statement is: int actualInt = classReader.getInt(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: classReader.getInt() target is: classReader method is: getInt()
statement is: double actualDouble = classReader.getDouble(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: classReader.getDouble() target is: classReader method is: getDouble()
statement is: char actualChar = classReader.getChar(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: classReader.getChar() target is: classReader method is: getChar()
statement is: assertEquals(expectedString, actualString), class spoon.support.reflect.code.CtInvocationImpl
invocation is: assertEquals(expectedString, actualString) target is:  method is: assertEquals(java.lang.String,java.lang.String)
statement is: assertEquals(expectedInt, actualInt), class spoon.support.reflect.code.CtInvocationImpl
invocation is: assertEquals(expectedInt, actualInt) target is:  method is: assertEquals(int,int)
statement is: assertEquals(expectedDouble, actualDouble), class spoon.support.reflect.code.CtInvocationImpl
invocation is: assertEquals(expectedDouble, actualDouble) target is:  method is: assertEquals(double,double)
statement is: assertEquals(expectedChar, actualChar), class spoon.support.reflect.code.CtInvocationImpl
invocation is: assertEquals(expectedChar, actualChar) target is:  method is: assertEquals(char,char)
* this is vulnerable: char _char = 'a'
TestCase is: String string = "This is a string";
int _int = 42;
double _double = 3.14;
char _char = 'a';
ClassReader classReader = new ClassReader((byte[]) string, _int, (int) _double);

statement is: wheel.asm.ClassReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class wheel.asm.ClassReader
statement code is: ClassReader classReader = new ClassReader("java/lang/Object")
statement is: wheel.asm.ClassReader([BII)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class wheel.asm.ClassReader
statement code is: ClassReader classReader = new ClassReader(classReader.b, 87, 2117)
test data is: ClassReader classReader = new ClassReader("java/lang/Object");
ClassReader classReader = new ClassReader(classReader.b, 87, 2117);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Replace the hardcoded primitive values with more illustrative examples
        String className = "java.lang.Object";// Replace with a more descriptive class name

        int classSize = 87;// Replace with an appropriate size for this class

        int codeLength = 2117;// Replace with an appropriate length for the code in this class }}

    }
}
statement is: // Replace the hardcoded primitive values with more illustrative examples
String className = "java.lang.Object"// Replace with a more descriptive class name
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: int classSize = 87// Replace with an appropriate size for this class
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: int codeLength = 2117// Replace with an appropriate length for the code in this class }}
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
* this is vulnerable: String string = "java.lang.Object"
* this is vulnerable: int _int = 87
* this is vulnerable: int _int = 2117
TestCase is: String string = "java.lang.Object";
int _int = 87;
int _int = 2117;

statement is: wheel.asm.ClassReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class wheel.asm.ClassReader
statement code is: ClassReader classReader = new ClassReader("wheel.asm.MethodWriter")
statement is: wheel.asm.ClassWriter(Lwheel/asm/ClassReader;I)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class wheel.asm.ClassWriter
statement code is: ClassWriter classWriter = new ClassWriter(arg0, 4)
statement is: accept(Lwheel/asm/ClassVisitor;I)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: classReader.accept((ClassVisitor) arg0, 1)
test data is: ClassReader classReader = new ClassReader("wheel.asm.MethodWriter");
ClassWriter classWriter = new ClassWriter(classReader, 4);
classReader.accept((ClassVisitor) classWriter, 1);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
    }

    public static void main(String[] args) {
        int myInt = 5;// Replace with a more descriptive value

        double myDouble = 3.14;// Replace with a more descriptive value

        String myString = "Hello, World!";// Replace with a more descriptive value

        char myChar = 'A';// Replace with a more descriptive value

        boolean myBool = true;// Replace with a more descriptive value }}

    }
}
statement is: int myInt = 5// Replace with a more descriptive value
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: double myDouble = 3.14// Replace with a more descriptive value
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: String myString = "Hello, World!"// Replace with a more descriptive value
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: char myChar = 'A'// Replace with a more descriptive value
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: boolean myBool = true// Replace with a more descriptive value }}
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
* this is vulnerable: int _int = 5
* this is vulnerable: double _double = 3.14
* this is vulnerable: String string = "Hello, World!"
* this is vulnerable: char _char = 'A'
* this is vulnerable: boolean _boolean = true
TestCase is: int _int = 5;
double _double = 3.14;
String string = "Hello, World!";
char _char = 'A';
boolean _boolean = true;

statement is: wheel.asm.ClassReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class wheel.asm.ClassReader
statement code is: ClassReader classReader = new ClassReader("java/lang/Object")
statement is: wheel.asm.ClassReader([BII)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class wheel.asm.ClassReader
statement code is: ClassReader classReader = new ClassReader(classReader.b, 69, 69)
test data is: ClassReader classReader = new ClassReader("java/lang/Object");
ClassReader classReader = new ClassReader(classReader.b, 69, 69);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Changed the primitive values to more descriptive examples }}
    }
}
statement is: // Changed the primitive values to more descriptive examples }}, class spoon.support.reflect.code.CtCommentImpl
statement is: wheel.asm.ClassReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class wheel.asm.ClassReader
statement code is: ClassReader classReader = new ClassReader("org.apache.commons.io.filefilter.DelegateFileFilter")
statement is: getSuperName()Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.lang.String
statement code is: String superName = classReader.getSuperName()
test data is: ClassReader classReader = new ClassReader("org.apache.commons.io.filefilter.DelegateFileFilter");
classReader.getSuperName();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        classReader.getSuperName();
    }
}
statement is: classReader.getSuperName(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: classReader.getSuperName() target is: classReader method is: getSuperName()
statement is: wheel.asm.ClassReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class wheel.asm.ClassReader
statement code is: ClassReader classReader = new ClassReader("java/lang/Object")
statement is: getSuperName()Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.lang.String
statement code is: String superName = classReader.getSuperName()
test data is: ClassReader classReader = new ClassReader("java/lang/Object");
classReader.getSuperName();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        System.out.println("The object does not have a superclass.");
    }
}
statement is: System.out.println("The object does not have a superclass."), class spoon.support.reflect.code.CtInvocationImpl
invocation is: System.out.println("The object does not have a superclass.") target is: System.out method is: println(java.lang.String)
statement is: wheel.asm.ClassReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class wheel.asm.ClassReader
statement code is: ClassReader classReader = new ClassReader("java/lang/Object")
statement is: getInterfaces()[Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class [Ljava.lang.String;
statement code is: String[] interfaces = classReader.getInterfaces()
test data is: ClassReader classReader = new ClassReader("java/lang/Object");
classReader.getInterfaces();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        classReader.getInterfaces();
        // This test data is more descriptive and representative of the situation being tested. It checks that the method returns an array with at least one element, which is a reasonable expectation for a class that implements Map. }}
    }
}
statement is: classReader.getInterfaces(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: classReader.getInterfaces() target is: classReader method is: getInterfaces()
statement is: // This test data is more descriptive and representative of the situation being tested. It checks that the method returns an array with at least one element, which is a reasonable expectation for a class that implements Map. }}, class spoon.support.reflect.code.CtCommentImpl
statement is: wheel.asm.ClassReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class wheel.asm.ClassReader
statement code is: ClassReader classReader = new ClassReader("org.apache.commons.io.filefilter.TrueFileFilter")
statement is: getInterfaces()[Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class [Ljava.lang.String;
statement code is: String[] interfaces = classReader.getInterfaces()
test data is: ClassReader classReader = new ClassReader("org.apache.commons.io.filefilter.TrueFileFilter");
classReader.getInterfaces();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        classReader.getInterfaces();
    }
}
statement is: classReader.getInterfaces(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: classReader.getInterfaces() target is: classReader method is: getInterfaces()
statement is: wheel.asm.ClassReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class wheel.asm.ClassReader
statement code is: ClassReader classReader = new ClassReader("org.apache.commons.io.filefilter.DelegateFileFilter")
statement is: wheel.asm.ClassWriter(Lwheel/asm/ClassReader;I)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class wheel.asm.ClassWriter
statement code is: ClassWriter classWriter = new ClassWriter(arg0, 4)
test data is: ClassReader classReader = new ClassReader("org.apache.commons.io.filefilter.DelegateFileFilter");
ClassWriter classWriter = new ClassWriter(classReader, 4);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Improved test data for testing the DelegateFileFilter class
        ClassReader classReader = new ClassReader("org.apache.commons.io.filefilter.DelegateFileFilter");
        ClassWriter classWriter = new ClassWriter(classReader, 4);
        FileFilter delegateFilter = new NameFileFilter("sample_name", IOCase.INSENSITIVE);
        FileFilter filter = new DelegateFileFilter(delegateFilter);
        // Create a mock file system for testing the filter
        File[] files = new File[]{ new File("/path/to/file1"), new File("/path/to/file2"), new File("/path/to/file3") };
        // Test the filter with different inputs and expected outputs
        assertTrue(filter.accept(files[0]));// sample_name matches

        assertFalse(filter.accept(files[1]));// file2 does not match

        assertTrue(filter.accept(files[2]));// file3 matches }}

    }
}
statement is: // Improved test data for testing the DelegateFileFilter class
ClassReader classReader = new ClassReader("org.apache.commons.io.filefilter.DelegateFileFilter"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: ClassWriter classWriter = new ClassWriter(classReader, 4), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: FileFilter delegateFilter = new NameFileFilter("sample_name", IOCase.INSENSITIVE), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: FileFilter filter = new DelegateFileFilter(delegateFilter), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: // Create a mock file system for testing the filter
File[] files = new File[]{ new File("/path/to/file1"), new File("/path/to/file2"), new File("/path/to/file3") }, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
statement is: // Test the filter with different inputs and expected outputs
assertTrue(filter.accept(files[0]))// sample_name matches
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: // Test the filter with different inputs and expected outputs
assertTrue(filter.accept(files[0]))// sample_name matches
 target is:  method is: assertTrue(<unknown>)
statement is: assertFalse(filter.accept(files[1]))// file2 does not match
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: assertFalse(filter.accept(files[1]))// file2 does not match
 target is:  method is: assertFalse(<unknown>)
statement is: assertTrue(filter.accept(files[2]))// file3 matches }}
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: assertTrue(filter.accept(files[2]))// file3 matches }}
 target is:  method is: assertTrue(<unknown>)
TestCase is: String string = "org.apache.commons.io.filefilter.DelegateFileFilter";
ClassReader classReader = new ClassReader(string);
int _int = 4;
ClassWriter classWriter = new ClassWriter(classReader, _int);

statement is: wheel.asm.ClassReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class wheel.asm.ClassReader
statement code is: ClassReader classReader = new ClassReader("org.apache.commons.io.filefilter.DelegateFileFilter")
statement is: wheel.asm.ClassReader([BII)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class wheel.asm.ClassReader
statement code is: ClassReader classReader = new ClassReader(classReader.b, 821, 821)
statement is: wheel.asm.ClassWriter(Lwheel/asm/ClassReader;I)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class wheel.asm.ClassWriter
statement code is: ClassWriter classWriter = new ClassWriter(arg0, 9)
test data is: ClassReader classReader = new ClassReader("org.apache.commons.io.filefilter.DelegateFileFilter");
ClassReader classReader = new ClassReader(classReader.b, 821, 821);
ClassWriter classWriter = new ClassWriter(classReader, 9);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Improved test data:
        int primitiveValue1 = 42;// Instead of a random integer, use a meaningful value that represents the input to the method being tested.

        int primitiveValue2 = 50;// Again, use a meaningful value for the second input parameter.

        String stringValue1 = "example_string";// Use a realistic and descriptive string for the first String input.

        String stringValue2 = "another_example_string";// Similarly, use a descriptive string for the second String input. }}

    }
}
statement is: // Improved test data:
int primitiveValue1 = 42// Instead of a random integer, use a meaningful value that represents the input to the method being tested.
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: int primitiveValue2 = 50// Again, use a meaningful value for the second input parameter.
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: String stringValue1 = "example_string"// Use a realistic and descriptive string for the first String input.
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: String stringValue2 = "another_example_string"// Similarly, use a descriptive string for the second String input. }}
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
* this is vulnerable: int _int = 42
* this is vulnerable: int _int = 50
* this is vulnerable: String string = "example_string"
* this is vulnerable: String string = "another_example_string"
TestCase is: int _int = 42;
int _int = 50;
String string = "example_string";
String string = "another_example_string";

statement is: wheel.asm.ClassReader(Ljava/io/InputStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class wheel.asm.ClassReader
statement code is: ClassReader classReader = new ClassReader((InputStream) null)
test data is: ClassReader classReader = new ClassReader((InputStream) null);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        ClassReader classReader = new ClassReader(new ByteArrayInputStream(new byte[]{ 0xca, 0xfe, 0xba, 0xbe }));
    }
}
statement is: ClassReader classReader = new ClassReader(new ByteArrayInputStream(new byte[]{ 0xca, 0xfe, 0xba, 0xbe })), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase is: ClassReader classReader = new ClassReader((InputStream) null);

statement is: org.evosuite.testcase.statements.ArrayStatement@231ecb04 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [B
statement code is: byte[] byteArray = new byte[2]
statement is: java.io.ByteArrayInputStream([BII)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.ByteArrayInputStream
statement code is: ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(arg0, (byte)2, (byte)105)
statement is: wheel.asm.ClassReader(Ljava/io/InputStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class wheel.asm.ClassReader
statement code is: ClassReader classReader = new ClassReader(arg0)
test data is: byte[] byteArray = new byte[2];
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray, (byte)2, (byte)105);
ClassReader classReader = new ClassReader(byteArrayInputStream);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        byte[] byteArray = new byte[]{ 0xabcd, 0xbabe };
        ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray, ((byte) (2)), ((byte) (200)));
    }
}
statement is: byte[] byteArray = new byte[]{ 0xabcd, 0xbabe }, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [] Ct is: byte[] byteArray = new byte[2] isAssignment: false Array: new byte[]{ 0xabcd, 0xbabe } Elements: [0xabcd, 0xbabe]
lengths: [2] []
statement is: ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray, ((byte) (2)), ((byte) (200))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase is: int _int = 2;
int _int = 200;
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream((byte[]) _int, _int, (byte)105);

statement is: wheel.asm.ClassReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class wheel.asm.ClassReader
statement code is: ClassReader classReader = new ClassReader("java/lang/Object")
statement is: wheel.asm.ClassWriter(Lwheel/asm/ClassReader;I)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class wheel.asm.ClassWriter
statement code is: ClassWriter classWriter = new ClassWriter(arg0, 2)
statement is: accept(Lwheel/asm/ClassVisitor;[Lwheel/asm/Attribute;I)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: classReader.accept((ClassVisitor) arg0, (Attribute[]) null, (-977))
test data is: ClassReader classReader = new ClassReader("java/lang/Object");
ClassWriter classWriter = new ClassWriter(classReader, 2);
classReader.accept((ClassVisitor) classWriter, (Attribute[]) null, (-977));

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        classReader.accept(((ClassVisitor) (classWriter)), ((Attribute[]) (null)), -977);
    }
}
statement is: classReader.accept(((ClassVisitor) (classWriter)), ((Attribute[]) (null)), -977), class spoon.support.reflect.code.CtInvocationImpl
invocation is: classReader.accept(((ClassVisitor) (classWriter)), ((Attribute[]) (null)), -977) target is: classReader method is: accept(ClassVisitor,Attribute[],int)
statement is: wheel.asm.ClassReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class wheel.asm.ClassReader
statement code is: ClassReader classReader = new ClassReader("java/lang/Object")
statement is: wheel.asm.ClassWriter(I)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class wheel.asm.ClassWriter
statement code is: ClassWriter classWriter = new ClassWriter(8)
statement is: org.evosuite.testcase.statements.AssignmentStatement@99bd03c8 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class wheel.asm.ClassReader
statement code is: classWriter.cr = classReader
statement is: accept(Lwheel/asm/ClassVisitor;[Lwheel/asm/Attribute;I)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: classReader.accept((ClassVisitor) arg0, (Attribute[]) null, 2)
test data is: ClassReader classReader = new ClassReader("java/lang/Object");
ClassWriter classWriter = new ClassWriter(8);
classWriter.cr = classReader;
classReader.accept((ClassVisitor) classWriter, (Attribute[]) null, 2);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        classWriter.cr = classReader;
        classReader.accept(((ClassVisitor) (classWriter)), ((Attribute[]) (null)), 2);
    }
}
statement is: classWriter.cr = classReader, class spoon.support.reflect.code.CtAssignmentImpl
statement is: classReader.accept(((ClassVisitor) (classWriter)), ((Attribute[]) (null)), 2), class spoon.support.reflect.code.CtInvocationImpl
invocation is: classReader.accept(((ClassVisitor) (classWriter)), ((Attribute[]) (null)), 2) target is: classReader method is: accept(ClassVisitor,Attribute[],int)
statement is: wheel.asm.ClassReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class wheel.asm.ClassReader
statement code is: ClassReader classReader = new ClassReader("java/lang/Object")
statement is: wheel.asm.ClassReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class wheel.asm.ClassReader
statement code is: ClassReader classReader = new ClassReader("wheel.asm.MethodWriter")
statement is: wheel.asm.ClassWriter(Lwheel/asm/ClassReader;I)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class wheel.asm.ClassWriter
statement code is: ClassWriter classWriter = new ClassWriter(arg0, 8)
statement is: accept(Lwheel/asm/ClassVisitor;I)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: classReader.accept((ClassVisitor) arg0, 1768)
test data is: ClassReader classReader = new ClassReader("java/lang/Object");
ClassReader classReader = new ClassReader("wheel.asm.MethodWriter");
ClassWriter classWriter = new ClassWriter(classReader, 8);
classReader.accept((ClassVisitor) classWriter, 1768);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Replace this with a more descriptive String value }}
    }
}
statement is: // Replace this with a more descriptive String value }}, class spoon.support.reflect.code.CtCommentImpl
statement is: wheel.asm.ClassReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class wheel.asm.ClassReader
statement code is: ClassReader classReader = new ClassReader("java/lang/Object")
statement is: wheel.asm.ClassWriter(I)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class wheel.asm.ClassWriter
statement code is: ClassWriter classWriter = new ClassWriter(1)
statement is: accept(Lwheel/asm/ClassVisitor;[Lwheel/asm/Attribute;I)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: classReader.accept((ClassVisitor) arg0, (Attribute[]) null, 8)
test data is: ClassReader classReader = new ClassReader("java/lang/Object");
ClassWriter classWriter = new ClassWriter(1);
classReader.accept((ClassVisitor) classWriter, (Attribute[]) null, 8);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        classReader.accept(((ClassVisitor) (classWriter)), ((Attribute[]) (null)), 8);
    }
}
statement is: classReader.accept(((ClassVisitor) (classWriter)), ((Attribute[]) (null)), 8), class spoon.support.reflect.code.CtInvocationImpl
invocation is: classReader.accept(((ClassVisitor) (classWriter)), ((Attribute[]) (null)), 8) target is: classReader method is: accept(ClassVisitor,Attribute[],int)
statement is: wheel.asm.ClassReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class wheel.asm.ClassReader
statement code is: ClassReader classReader = new ClassReader("java/lang/Object")
statement is: org.evosuite.testcase.statements.ArrayStatement@8261f069 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [C
statement code is: char[] charArray = new char[10]
statement is: readUTF8(I[C)Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.lang.String
statement code is: String readUTF8 = classReader.readUTF8(47, arg1)
test data is: ClassReader classReader = new ClassReader("java/lang/Object");
char[] charArray = new char[10];
classReader.readUTF8(47, charArray);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        char[] charArray = new char[5];
        classReader.readUTF8(12, charArray);
    }
}
statement is: char[] charArray = new char[5], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [5] Ct is: char[] charArray = new char[10] isAssignment: false Array: new char[5] Elements: []
lengths: [10] [5]
Their type are: class [C char[]
statement is: classReader.readUTF8(12, charArray), class spoon.support.reflect.code.CtInvocationImpl
invocation is: classReader.readUTF8(12, charArray) target is: classReader method is: readUTF8(int,char[])
TestCase is: char[] charArray = new char[10];

statement is: wheel.asm.ClassReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class wheel.asm.ClassReader
statement code is: ClassReader classReader = new ClassReader("wheel.asm.MethodWriter")
statement is: org.evosuite.testcase.statements.ArrayStatement@ca1d3ac7 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [C
statement code is: char[] charArray = new char[5]
statement is: readConst(I[C)Ljava/lang/Object; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.lang.Object
statement code is: Object readConst = classReader.readConst(4, arg1)
test data is: ClassReader classReader = new ClassReader("wheel.asm.MethodWriter");
char[] charArray = new char[5];
classReader.readConst(4, charArray);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        char[] charArray = new char[5];
        classReader.readConst(4, charArray);
        // Improved test data:
        ClassReader classReader = new ClassReader("com.example.MyTestClass");
        char[] charArray = new char[]{ 'a', 'b', 'c', 'd', 'e' };
        classReader.readConst(4, charArray);
    }
}
statement is: char[] charArray = new char[5], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [5] Ct is: char[] charArray = new char[5] isAssignment: false Array: new char[5] Elements: []
lengths: [5] [5]
Their type are: class [C char[]
statement is: classReader.readConst(4, charArray), class spoon.support.reflect.code.CtInvocationImpl
invocation is: classReader.readConst(4, charArray) target is: classReader method is: readConst(int,char[])
statement is: // Improved test data:
ClassReader classReader = new ClassReader("com.example.MyTestClass"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: char[] charArray = new char[]{ 'a', 'b', 'c', 'd', 'e' }, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [] Ct is: char[] charArray = new char[5] isAssignment: false Array: new char[]{ 'a', 'b', 'c', 'd', 'e' } Elements: ['a', 'b', 'c', 'd', 'e']
lengths: [5] []
statement is: classReader.readConst(4, charArray), class spoon.support.reflect.code.CtInvocationImpl
invocation is: classReader.readConst(4, charArray) target is: classReader method is: readConst(int,char[])
source statement: wheel.asm.ClassReader(Ljava/lang/String;)V callee: VariableReference: Statement 0, type wheel.asm.ClassReaderindex is: 2
Matched Method is: readConst(I[C)Ljava/lang/Object;
TestCase is: char[] charArray = new char[5];
String string = "com.example.MyTestClass";
ClassReader classReader = new ClassReader(string);
int _int = 4;
((ClassReader) charArray).readConst(_int, charArray);

statement is: wheel.asm.ClassReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class wheel.asm.ClassReader
statement code is: ClassReader classReader = new ClassReader("wheel.asm.MethodWriter")
statement is: org.evosuite.testcase.statements.ArrayStatement@632b7972 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [C
statement code is: char[] charArray = new char[9]
statement is: readUTF8(I[C)Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.lang.String
statement code is: String readUTF8 = classReader.readUTF8(4, arg1)
test data is: ClassReader classReader = new ClassReader("wheel.asm.MethodWriter");
char[] charArray = new char[9];
classReader.readUTF8(4, charArray);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        char[] charArray = new char[9];
        classReader.readUTF8(4, charArray);
        // Improved test data:
        char[] charArray = new char[]{ 'H', 'e', 'l', 'l', 'o', ' ', 'W', 'o', 'r', 'l', 'd' };
    }
}
statement is: char[] charArray = new char[9], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [9] Ct is: char[] charArray = new char[9] isAssignment: false Array: new char[9] Elements: []
lengths: [9] [9]
Their type are: class [C char[]
statement is: classReader.readUTF8(4, charArray), class spoon.support.reflect.code.CtInvocationImpl
invocation is: classReader.readUTF8(4, charArray) target is: classReader method is: readUTF8(int,char[])
statement is: // Improved test data:
char[] charArray = new char[]{ 'H', 'e', 'l', 'l', 'o', ' ', 'W', 'o', 'r', 'l', 'd' }, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [] Ct is: char[] charArray = new char[9] isAssignment: false Array: new char[]{ 'H', 'e', 'l', 'l', 'o', ' ', 'W', 'o', 'r', 'l', 'd' } Elements: ['H', 'e', 'l', 'l', 'o', ' ', 'W', 'o', 'r', 'l', 'd']
lengths: [9] []
TestCase is: char[] charArray = new char[9];

statement is: wheel.asm.ClassReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class wheel.asm.ClassReader
statement code is: ClassReader classReader = new ClassReader("java/lang/Object")
statement is: org.evosuite.testcase.statements.ArrayStatement@aca934c1 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [C
statement code is: char[] charArray = new char[3]
statement is: readConst(I[C)Ljava/lang/Object; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.lang.Object
statement code is: Object readConst = classReader.readConst(1, arg1)
test data is: ClassReader classReader = new ClassReader("java/lang/Object");
char[] charArray = new char[3];
classReader.readConst(1, charArray);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        char[] charArray = new char[5];
        classReader.readConst(2, charArray);
    }
}
statement is: char[] charArray = new char[5], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [5] Ct is: char[] charArray = new char[3] isAssignment: false Array: new char[5] Elements: []
lengths: [3] [5]
Their type are: class [C char[]
statement is: classReader.readConst(2, charArray), class spoon.support.reflect.code.CtInvocationImpl
invocation is: classReader.readConst(2, charArray) target is: classReader method is: readConst(int,char[])
TestCase is: char[] charArray = new char[3];

statement is: wheel.asm.ClassReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class wheel.asm.ClassReader
statement code is: ClassReader classReader = new ClassReader("java/lang/Object")
statement is: readInt(I)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int readInt = classReader.readInt(10)
test data is: ClassReader classReader = new ClassReader("java/lang/Object");
classReader.readInt(10);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        classReader.readInt(42);
        String str = "This is a test string for ClassReader";
        classReader.readString(str);
        double d = 2.718;
        classReader.readDouble(d);
        char c = 'Z';
        classReader.readChar(c);
    }
}
statement is: classReader.readInt(42), class spoon.support.reflect.code.CtInvocationImpl
invocation is: classReader.readInt(42) target is: classReader method is: readInt(int)
statement is: String str = "This is a test string for ClassReader", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: classReader.readString(str), class spoon.support.reflect.code.CtInvocationImpl
invocation is: classReader.readString(str) target is: classReader method is: readString(java.lang.String)
statement is: double d = 2.718, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: classReader.readDouble(d), class spoon.support.reflect.code.CtInvocationImpl
invocation is: classReader.readDouble(d) target is: classReader method is: readDouble(double)
statement is: char c = 'Z', class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: classReader.readChar(c), class spoon.support.reflect.code.CtInvocationImpl
invocation is: classReader.readChar(c) target is: classReader method is: readChar(char)
* this is vulnerable: String string = "This is a test string for ClassReader"
* this is vulnerable: double _double = 2.718
* this is vulnerable: char _char = 'Z'
TestCase is: String string = "This is a test string for ClassReader";
double _double = 2.718;
char _char = 'Z';

statement is: wheel.asm.ClassReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class wheel.asm.ClassReader
statement code is: ClassReader classReader = new ClassReader("java/lang/Object")
statement is: readUnsignedShort(I)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int readUnsignedShort = classReader.readUnsignedShort(4)
test data is: ClassReader classReader = new ClassReader("java/lang/Object");
classReader.readUnsignedShort(4);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        classReader.readUnsignedShort(4);
    }
}
statement is: classReader.readUnsignedShort(4), class spoon.support.reflect.code.CtInvocationImpl
invocation is: classReader.readUnsignedShort(4) target is: classReader method is: readUnsignedShort(int)
statement is: wheel.asm.ClassReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class wheel.asm.ClassReader
statement code is: ClassReader classReader = new ClassReader("java/lang/Object")
statement is: wheel.asm.ClassReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class wheel.asm.ClassReader
statement code is: ClassReader classReader = new ClassReader("wheel.asm.MethodWriter")
statement is: wheel.asm.ClassWriter(Lwheel/asm/ClassReader;I)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class wheel.asm.ClassWriter
statement code is: ClassWriter classWriter = new ClassWriter(arg0, (-158))
statement is: accept(Lwheel/asm/ClassVisitor;[Lwheel/asm/Attribute;I)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: classReader.accept((ClassVisitor) arg0, (Attribute[]) null, 196653)
test data is: ClassReader classReader = new ClassReader("java/lang/Object");
ClassReader classReader = new ClassReader("wheel.asm.MethodWriter");
ClassWriter classWriter = new ClassWriter(classReader, (-158));
classReader.accept((ClassVisitor) classWriter, (Attribute[]) null, 196653);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Improved test data
        int primitiveValue = 42;// Change this to a more descriptive value

        String stringValue = "Hello, world!";// Change this to a more descriptive String

        double doubleValue = 3.14;// Change this to a more descriptive double value

        char charValue = 'A';// Change this to a more descriptive char value

        ClassReader classReader = new ClassReader(stringValue);
        ClassWriter classWriter = new ClassWriter(classReader, primitiveValue);
        classReader.accept(((ClassVisitor) (classWriter)), ((Attribute[]) (null)), doubleValue);
    }
}
statement is: // Improved test data
int primitiveValue = 42// Change this to a more descriptive value
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: String stringValue = "Hello, world!"// Change this to a more descriptive String
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: double doubleValue = 3.14// Change this to a more descriptive double value
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: char charValue = 'A'// Change this to a more descriptive char value
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: ClassReader classReader = new ClassReader(stringValue), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: ClassWriter classWriter = new ClassWriter(classReader, primitiveValue), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: classReader.accept(((ClassVisitor) (classWriter)), ((Attribute[]) (null)), doubleValue), class spoon.support.reflect.code.CtInvocationImpl
invocation is: classReader.accept(((ClassVisitor) (classWriter)), ((Attribute[]) (null)), doubleValue) target is: classReader method is: accept(ClassVisitor,Attribute[],double)
* this is vulnerable: double _double = 3.14
* this is vulnerable: char _char = 'A'
TestCase is: int _int = 42;
String string = "Hello, world!";
double _double = 3.14;
char _char = 'A';
ClassReader classReader = new ClassReader(string);
ClassWriter classWriter = new ClassWriter(classReader, _int);

statement is: wheel.asm.ClassReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class wheel.asm.ClassReader
statement code is: ClassReader classReader = new ClassReader("wheel.asm.MethodWriter")
statement is: wheel.asm.ClassWriter(I)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class wheel.asm.ClassWriter
statement code is: ClassWriter classWriter = new ClassWriter(1000)
statement is: org.evosuite.testcase.statements.ArrayStatement@913a60c6 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [Lwheel.asm.Attribute;
statement code is: Attribute[] attributeArray = new Attribute[0]
statement is: accept(Lwheel/asm/ClassVisitor;[Lwheel/asm/Attribute;I)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: classReader.accept((ClassVisitor) arg0, arg1, 4)
test data is: ClassReader classReader = new ClassReader("wheel.asm.MethodWriter");
ClassWriter classWriter = new ClassWriter(1000);
Attribute[] attributeArray = new Attribute[0];
classReader.accept((ClassVisitor) classWriter, attributeArray, 4);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Attribute[] attributeArray = new Attribute[]{ new Attribute("MyTestAttribute", "MyTestValue") };
    }
}
statement is: Attribute[] attributeArray = new Attribute[]{ new Attribute("MyTestAttribute", "MyTestValue") }, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [] Ct is: Attribute[] attributeArray = new Attribute[0] isAssignment: false Array: new Attribute[]{ new Attribute("MyTestAttribute", "MyTestValue") } Elements: [new Attribute("MyTestAttribute", "MyTestValue")]
lengths: [0] []
statement is: wheel.asm.ClassReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class wheel.asm.ClassReader
statement code is: ClassReader classReader = new ClassReader("org.apache.commons.io.filefilter.DelegateFileFilter")
statement is: wheel.asm.ClassWriter(I)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class wheel.asm.ClassWriter
statement code is: ClassWriter classWriter = new ClassWriter(61)
statement is: wheel.asm.ClassAdapter(Lwheel/asm/ClassVisitor;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class wheel.asm.ClassAdapter
statement code is: ClassAdapter classAdapter = new ClassAdapter(arg0)
statement is: accept(Lwheel/asm/ClassVisitor;[Lwheel/asm/Attribute;I)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: classReader.accept((ClassVisitor) arg0, (Attribute[]) null, (-786))
test data is: ClassReader classReader = new ClassReader("org.apache.commons.io.filefilter.DelegateFileFilter");
ClassWriter classWriter = new ClassWriter(61);
ClassAdapter classAdapter = new ClassAdapter(classWriter);
classReader.accept((ClassVisitor) classAdapter, (Attribute[]) null, (-786));

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        classReader.accept(((ClassVisitor) (classAdapter)), ((Attribute[]) (null)), 1024);
    }
}
statement is: classReader.accept(((ClassVisitor) (classAdapter)), ((Attribute[]) (null)), 1024), class spoon.support.reflect.code.CtInvocationImpl
invocation is: classReader.accept(((ClassVisitor) (classAdapter)), ((Attribute[]) (null)), 1024) target is: classReader method is: accept(ClassVisitor,Attribute[],int)
statement is: wheel.asm.ClassReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class wheel.asm.ClassReader
statement code is: ClassReader classReader = new ClassReader("wheel.asm.ByteVector")
statement is: wheel.asm.ClassWriter(Lwheel/asm/ClassReader;I)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class wheel.asm.ClassWriter
statement code is: ClassWriter classWriter = new ClassWriter(arg0, 53)
statement is: wheel.asm.ClassReader([B)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class wheel.asm.ClassReader
statement code is: ClassReader classReader = new ClassReader(classReader.b)
statement is: org.evosuite.testcase.statements.ArrayStatement@c326f64b type is: class org.evosuite.testcase.statements.ArrayStatement return type class [Lwheel.asm.Attribute;
statement code is: Attribute[] attributeArray = new Attribute[0]
statement is: accept(Lwheel/asm/ClassVisitor;[Lwheel/asm/Attribute;I)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: classReader.accept((ClassVisitor) arg0, arg1, 2)
test data is: ClassReader classReader = new ClassReader("wheel.asm.ByteVector");
ClassWriter classWriter = new ClassWriter(classReader, 53);
ClassReader classReader = new ClassReader(classReader.b);
Attribute[] attributeArray = new Attribute[0];
classReader.accept((ClassVisitor) classWriter, attributeArray, 2);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Attribute[] attributeArray = new Attribute[0];
    }
}
statement is: Attribute[] attributeArray = new Attribute[0], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [0] Ct is: Attribute[] attributeArray = new Attribute[0] isAssignment: false Array: new Attribute[0] Elements: []
lengths: [0] [0]
Their type are: class [Lwheel.asm.Attribute; Attribute[]
TestCase is: Attribute[] attributeArray = new Attribute[0];

statement is: wheel.asm.ClassReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class wheel.asm.ClassReader
statement code is: ClassReader classReader = new ClassReader("java/lang/Object")
statement is: readByte(I)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int readByte = classReader.readByte(2)
test data is: ClassReader classReader = new ClassReader("java/lang/Object");
classReader.readByte(2);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        classReader.readByte(20);// reading a byte value from the input stream, which is equal to the ASCII code for the character '*' }}

    }
}
statement is: classReader.readByte(20)// reading a byte value from the input stream, which is equal to the ASCII code for the character '*' }}
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: classReader.readByte(20)// reading a byte value from the input stream, which is equal to the ASCII code for the character '*' }}
 target is: classReader method is: readByte(int)
statement is: wheel.asm.ClassReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class wheel.asm.ClassReader
statement code is: ClassReader classReader = new ClassReader("org.apache.commons.io.filefilter.DelegateFileFilter")
statement is: org.evosuite.testcase.statements.ArrayStatement@619bb0bc type is: class org.evosuite.testcase.statements.ArrayStatement return type class [C
statement code is: char[] charArray = new char[3]
statement is: readClass(I[C)Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.lang.String
statement code is: String readClass = classReader.readClass(821, arg1)
test data is: ClassReader classReader = new ClassReader("org.apache.commons.io.filefilter.DelegateFileFilter");
char[] charArray = new char[3];
classReader.readClass(821, charArray);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Improved test data for the given code snippet
        ClassReader classReader = new ClassReader("org.apache.commons.io.filefilter.DelegateFileFilter");
        char[] charArray = new char[]{ 'a', 'b', 'c' };// improved from a primitive value to a more descriptive example }}

    }
}
statement is: // Improved test data for the given code snippet
ClassReader classReader = new ClassReader("org.apache.commons.io.filefilter.DelegateFileFilter"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: char[] charArray = new char[]{ 'a', 'b', 'c' }// improved from a primitive value to a more descriptive example }}
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [] Ct is: char[] charArray = new char[3] isAssignment: false Array: new char[]{ 'a', 'b', 'c' } Elements: ['a', 'b', 'c']
lengths: [3] []
TestCase is: String string = "org.apache.commons.io.filefilter.DelegateFileFilter";
ClassReader classReader = new ClassReader(string);

statement is: wheel.asm.ClassReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class wheel.asm.ClassReader
statement code is: ClassReader classReader = new ClassReader("java/lang/Object")
statement is: wheel.asm.ClassWriter(I)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class wheel.asm.ClassWriter
statement code is: ClassWriter classWriter = new ClassWriter(8)
statement is: wheel.asm.ClassAdapter(Lwheel/asm/ClassVisitor;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class wheel.asm.ClassAdapter
statement code is: ClassAdapter classAdapter = new ClassAdapter(arg0)
statement is: accept(Lwheel/asm/ClassVisitor;I)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: classReader.accept((ClassVisitor) arg0, 76)
statement is: org.evosuite.testcase.statements.ArrayStatement@3b4bfea3 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [C
statement code is: char[] charArray = new char[0]
statement is: readConst(I[C)Ljava/lang/Object; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.lang.String
statement code is: String readConst = (String)classReader.readConst(76, arg1)
test data is: ClassReader classReader = new ClassReader("java/lang/Object");
ClassWriter classWriter = new ClassWriter(8);
ClassAdapter classAdapter = new ClassAdapter(classWriter);
classReader.accept((ClassVisitor) classAdapter, 76);
char[] charArray = new char[0];
classReader.readConst(76, charArray);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        char[] charArray = new char[10];// Changed from an empty array to a more realistic size

        classReader.readConst(76, charArray);
    }
}
statement is: char[] charArray = new char[10]// Changed from an empty array to a more realistic size
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [10] Ct is: char[] charArray = new char[0] isAssignment: false Array: new char[10] Elements: []
lengths: [0] [10]
Their type are: class [C char[]
statement is: classReader.readConst(76, charArray), class spoon.support.reflect.code.CtInvocationImpl
invocation is: classReader.readConst(76, charArray) target is: classReader method is: readConst(int,char[])
TestCase is: char[] charArray = new char[0];

statement is: wheel.asm.ClassReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class wheel.asm.ClassReader
statement code is: ClassReader classReader = new ClassReader("java/lang/Object")
statement is: readInt(I)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int readInt = classReader.readInt(1)
test data is: ClassReader classReader = new ClassReader("java/lang/Object");
classReader.readInt(1);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        classReader.readInt(30);// Improved test data: using a more descriptive value that is relevant to the scenario being tested }}

    }
}
statement is: classReader.readInt(30)// Improved test data: using a more descriptive value that is relevant to the scenario being tested }}
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: classReader.readInt(30)// Improved test data: using a more descriptive value that is relevant to the scenario being tested }}
 target is: classReader method is: readInt(int)
statement is: wheel.asm.ClassReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class wheel.asm.ClassReader
statement code is: ClassReader classReader = new ClassReader("java/lang/Object")
statement is: org.evosuite.testcase.statements.ArrayStatement@ec7160d4 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [Lwheel.asm.Label;
statement code is: Label[] labelArray = new Label[7]
statement is: readLabel(I[Lwheel/asm/Label;)Lwheel/asm/Label; type is: class org.evosuite.testcase.statements.MethodStatement return type class wheel.asm.Label
statement code is: Label readLabel = classReader.readLabel(2, arg1)
test data is: ClassReader classReader = new ClassReader("java/lang/Object");
Label[] labelArray = new Label[7];
classReader.readLabel(2, labelArray);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Label[] labelArray = new Label[7];
        classReader.readLabel(2, labelArray);
        // This is an example of a more descriptive and representative integer value for the "index" parameter
        int index = 5;
        // This is an example of a more descriptive and representative double value for the "value" parameter
        double value = 3.14;
        // This is an example of a more descriptive and representative string value for the "stringValue" parameter
        String stringValue = "Hello, world!";
    }
}
statement is: Label[] labelArray = new Label[7], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [7] Ct is: Label[] labelArray = new Label[7] isAssignment: false Array: new Label[7] Elements: []
lengths: [7] [7]
Their type are: class [Lwheel.asm.Label; Label[]
statement is: classReader.readLabel(2, labelArray), class spoon.support.reflect.code.CtInvocationImpl
invocation is: classReader.readLabel(2, labelArray) target is: classReader method is: readLabel(int,Label[])
statement is: // This is an example of a more descriptive and representative integer value for the "index" parameter
int index = 5, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: // This is an example of a more descriptive and representative double value for the "value" parameter
double value = 3.14, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: // This is an example of a more descriptive and representative string value for the "stringValue" parameter
String stringValue = "Hello, world!", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
* this is vulnerable: int _int = 5
* this is vulnerable: double _double = 3.14
* this is vulnerable: String string = "Hello, world!"
TestCase is: Label[] labelArray = new Label[7];
int _int = 5;
double _double = 3.14;
String string = "Hello, world!";

statement is: wheel.asm.ClassReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class wheel.asm.ClassReader
statement code is: ClassReader classReader = new ClassReader("java/lang/Object")
statement is: readLong(I)J type is: class org.evosuite.testcase.statements.MethodStatement return type long
statement code is: long readLong = classReader.readLong(74)
test data is: ClassReader classReader = new ClassReader("java/lang/Object");
classReader.readLong(74);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        classReader.readLong(myString.length());
    }
}
statement is: classReader.readLong(myString.length()), class spoon.support.reflect.code.CtInvocationImpl
invocation is: classReader.readLong(myString.length()) target is: classReader method is: readLong()
statement is: wheel.asm.ClassReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class wheel.asm.ClassReader
statement code is: ClassReader classReader = new ClassReader("java/lang/Object")
statement is: readShort(I)S type is: class org.evosuite.testcase.statements.MethodStatement return type short
statement code is: short readShort = classReader.readShort(1)
test data is: ClassReader classReader = new ClassReader("java/lang/Object");
classReader.readShort(1);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        classReader.readShort(100);
    }
}
statement is: classReader.readShort(100), class spoon.support.reflect.code.CtInvocationImpl
invocation is: classReader.readShort(100) target is: classReader method is: readShort(int)
statement is: wheel.asm.ClassReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class wheel.asm.ClassReader
statement code is: ClassReader classReader = new ClassReader("org.apache.commons.io.filefilter.DelegateFileFilter")
statement is: org.evosuite.testcase.statements.ArrayStatement@b3753397 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [C
statement code is: char[] charArray = new char[8]
statement is: readUTF8(I[C)Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.lang.String
statement code is: String readUTF8 = classReader.readUTF8(185, arg1)
test data is: ClassReader classReader = new ClassReader("org.apache.commons.io.filefilter.DelegateFileFilter");
char[] charArray = new char[8];
classReader.readUTF8(185, charArray);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        char[] charArray = new char[8];
        classReader.readUTF8(185, charArray);
        // Improved test data
        // Use a more descriptive class name
        ClassReader improvedClassReader = new ClassReader("org.apache.commons.io.filefilter.ExtendedDelegateFileFilter");
        // Use a more representative array of characters
        char[] improvedCharArray = new char[10];
        improvedCharArray[0] = 'H';
        improvedCharArray[1] = 'e';
        improvedCharArray[2] = 'l';
        improvedCharArray[3] = 'l';
        improvedCharArray[4] = 'o';
        improvedCharArray[5] = ',';
        improvedCharArray[6] = ' ';
        improvedCharArray[7] = 'w';
        improvedCharArray[8] = 'o';
        improvedCharArray[9] = 'r';
        // Use a more representative value for the byte position
        int improvedBytePosition = 20;
        classReader.readUTF8(improvedBytePosition, improvedCharArray);
    }
}
statement is: char[] charArray = new char[8], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [8] Ct is: char[] charArray = new char[8] isAssignment: false Array: new char[8] Elements: []
lengths: [8] [8]
Their type are: class [C char[]
statement is: classReader.readUTF8(185, charArray), class spoon.support.reflect.code.CtInvocationImpl
invocation is: classReader.readUTF8(185, charArray) target is: classReader method is: readUTF8(int,char[])
statement is: // Improved test data
// Use a more descriptive class name
ClassReader improvedClassReader = new ClassReader("org.apache.commons.io.filefilter.ExtendedDelegateFileFilter"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: // Use a more representative array of characters
char[] improvedCharArray = new char[10], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [10] Ct is: char[] charArray = new char[8] isAssignment: false Array: new char[10] Elements: []
lengths: [8] [10]
Their type are: class [C char[]
statement is: improvedCharArray[0] = 'H', class spoon.support.reflect.code.CtAssignmentImpl
Assigned : improvedCharArray[0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl char Assignment:'H' Ct is: improvedCharArray[0] = 'H'
target : improvedCharArray class spoon.support.reflect.code.CtLiteralImpl
statement is: improvedCharArray[1] = 'e', class spoon.support.reflect.code.CtAssignmentImpl
Assigned : improvedCharArray[1] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl char Assignment:'e' Ct is: improvedCharArray[1] = 'e'
target : improvedCharArray class spoon.support.reflect.code.CtLiteralImpl
statement is: improvedCharArray[2] = 'l', class spoon.support.reflect.code.CtAssignmentImpl
Assigned : improvedCharArray[2] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl char Assignment:'l' Ct is: improvedCharArray[2] = 'l'
target : improvedCharArray class spoon.support.reflect.code.CtLiteralImpl
statement is: improvedCharArray[3] = 'l', class spoon.support.reflect.code.CtAssignmentImpl
Assigned : improvedCharArray[3] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl char Assignment:'l' Ct is: improvedCharArray[3] = 'l'
target : improvedCharArray class spoon.support.reflect.code.CtLiteralImpl
statement is: improvedCharArray[4] = 'o', class spoon.support.reflect.code.CtAssignmentImpl
Assigned : improvedCharArray[4] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl char Assignment:'o' Ct is: improvedCharArray[4] = 'o'
target : improvedCharArray class spoon.support.reflect.code.CtLiteralImpl
statement is: improvedCharArray[5] = ',', class spoon.support.reflect.code.CtAssignmentImpl
Assigned : improvedCharArray[5] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl char Assignment:',' Ct is: improvedCharArray[5] = ','
target : improvedCharArray class spoon.support.reflect.code.CtLiteralImpl
statement is: improvedCharArray[6] = ' ', class spoon.support.reflect.code.CtAssignmentImpl
Assigned : improvedCharArray[6] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl char Assignment:' ' Ct is: improvedCharArray[6] = ' '
target : improvedCharArray class spoon.support.reflect.code.CtLiteralImpl
statement is: improvedCharArray[7] = 'w', class spoon.support.reflect.code.CtAssignmentImpl
Assigned : improvedCharArray[7] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl char Assignment:'w' Ct is: improvedCharArray[7] = 'w'
target : improvedCharArray class spoon.support.reflect.code.CtLiteralImpl
statement is: improvedCharArray[8] = 'o', class spoon.support.reflect.code.CtAssignmentImpl
Assigned : improvedCharArray[8] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl char Assignment:'o' Ct is: improvedCharArray[8] = 'o'
target : improvedCharArray class spoon.support.reflect.code.CtLiteralImpl
statement is: improvedCharArray[9] = 'r', class spoon.support.reflect.code.CtAssignmentImpl
Assigned : improvedCharArray[9] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl char Assignment:'r' Ct is: improvedCharArray[9] = 'r'
target : improvedCharArray class spoon.support.reflect.code.CtLiteralImpl
statement is: // Use a more representative value for the byte position
int improvedBytePosition = 20, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: classReader.readUTF8(improvedBytePosition, improvedCharArray), class spoon.support.reflect.code.CtInvocationImpl
invocation is: classReader.readUTF8(improvedBytePosition, improvedCharArray) target is: classReader method is: readUTF8(int,char[])
* this is vulnerable: int _int = 20
TestCase is: char[] charArray = new char[8];
String string = "org.apache.commons.io.filefilter.ExtendedDelegateFileFilter";
ClassReader classReader = new ClassReader(string);
char[] charArray = new char[8];
int _int = 20;

statement is: wheel.asm.ClassReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class wheel.asm.ClassReader
statement code is: ClassReader classReader = new ClassReader("java/lang/Object")
statement is: readUnsignedShort(I)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int readUnsignedShort = classReader.readUnsignedShort(198)
test data is: ClassReader classReader = new ClassReader("java/lang/Object");
classReader.readUnsignedShort(198);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Improved test data:
        ClassReader classReader = new ClassReader("com/example/MyClass");
        classReader.readUnsignedShort(203);
    }
}
statement is: // Improved test data:
ClassReader classReader = new ClassReader("com/example/MyClass"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: classReader.readUnsignedShort(203), class spoon.support.reflect.code.CtInvocationImpl
invocation is: classReader.readUnsignedShort(203) target is: classReader method is: readUnsignedShort(int)
source statement: wheel.asm.ClassReader(Ljava/lang/String;)V callee: VariableReference: Statement 0, type wheel.asm.ClassReaderindex is: 1
Matched Method is: readUnsignedShort(I)I
TestCase is: String string = "com/example/MyClass";
ClassReader classReader = new ClassReader(string);
int _int = 203;
((ClassReader) string).readUnsignedShort(_int);

statement is: wheel.asm.ClassReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class wheel.asm.ClassReader
statement code is: ClassReader classReader = new ClassReader("java/lang/Object")
statement is: wheel.asm.ClassWriter(I)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class wheel.asm.ClassWriter
statement code is: ClassWriter classWriter = new ClassWriter(53)
statement is: copyPool(Lwheel/asm/ClassWriter;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: classReader.copyPool(arg0)
test data is: ClassReader classReader = new ClassReader("java/lang/Object");
ClassWriter classWriter = new ClassWriter(53);
classReader.copyPool(classWriter);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        classReader.copyPool(classWriter);
    }
}
statement is: classReader.copyPool(classWriter), class spoon.support.reflect.code.CtInvocationImpl
invocation is: classReader.copyPool(classWriter) target is: classReader method is: copyPool()
* test suite isTestSuite: 63
Test 0: 
ClassReader classReader = new ClassReader("java/lang/Object");
classReader.readShort((byte)87);
Test 1: 
ClassReader classReader = new ClassReader("java/lang/Object");
classReader.getAccess();
Test 2: 
ClassReader classReader = new ClassReader("java/lang/Object");
classReader.getItem(21);
Test 3: 
ClassReader classReader = new ClassReader("java/lang/Object");
classReader.readByte(1004);
Test 4: 
ClassReader classReader = new ClassReader("java/lang/Object");
classReader.readLong(1);
Test 5: 
ClassReader classReader = new ClassReader("org.apache.commons.io.filefilter.DelegateFileFilter");
classReader.getClassName();
Test 6: 
ClassReader classReader = new ClassReader("org.apache.commons.io.filefilter.DelegateFileFilter");
ClassReader classReader = null;
try {
  classReader = new ClassReader(classReader.b, 4, (-1088));
  fail("Expecting exception: ArrayIndexOutOfBoundsException");

} catch(ArrayIndexOutOfBoundsException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 7: 
ClassReader classReader = new ClassReader("java/lang/Object");
ClassReader classReader = null;
try {
  classReader = new ClassReader(classReader.b, 87, 2117);
  fail("Expecting exception: ArrayIndexOutOfBoundsException");

} catch(ArrayIndexOutOfBoundsException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 8: 
ClassReader classReader = new ClassReader("wheel.asm.MethodWriter");
ClassWriter classWriter = new ClassWriter(classReader, 4);
classReader.accept((ClassVisitor) classWriter, 1);
Test 9: 
ClassReader classReader = new ClassReader("java/lang/Object");
ClassReader classReader = null;
try {
  classReader = new ClassReader(classReader.b, 69, 69);
  fail("Expecting exception: ArrayIndexOutOfBoundsException");

} catch(ArrayIndexOutOfBoundsException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 10: 
ClassReader classReader = new ClassReader("org.apache.commons.io.filefilter.DelegateFileFilter");
classReader.getSuperName();
Test 11: 
ClassReader classReader = new ClassReader("java/lang/Object");
classReader.getSuperName();
Test 12: 
ClassReader classReader = new ClassReader("java/lang/Object");
classReader.getInterfaces();
Test 13: 
ClassReader classReader = new ClassReader("org.apache.commons.io.filefilter.TrueFileFilter");
classReader.getInterfaces();
Test 14: 
ClassReader classReader = new ClassReader("org.apache.commons.io.filefilter.DelegateFileFilter");
ClassWriter classWriter = new ClassWriter(classReader, 4);
Test 15: 
ClassReader classReader = new ClassReader("org.apache.commons.io.filefilter.DelegateFileFilter");
ClassReader classReader = new ClassReader(classReader.b, 821, 821);
ClassWriter classWriter = null;
try {
  classWriter = new ClassWriter(classReader, 9);
  fail("Expecting exception: ArrayIndexOutOfBoundsException");

} catch(ArrayIndexOutOfBoundsException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 16: 
ClassReader classReader = null;
try {
  classReader = new ClassReader((InputStream) null);
  fail("Expecting exception: IOException");

} catch(Throwable e) {
   //
   // Class not found
   //
   verifyException("wheel.asm.ClassReader", e);
}

Test 17: 
byte[] byteArray = new byte[2];
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray, (byte)2, (byte)105);
ClassReader classReader = null;
try {
  classReader = new ClassReader(byteArrayInputStream);
  fail("Expecting exception: ArrayIndexOutOfBoundsException");

} catch(ArrayIndexOutOfBoundsException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 18: 
ClassReader classReader = new ClassReader("java/lang/Object");
ClassWriter classWriter = new ClassWriter(classReader, 2);
classReader.accept((ClassVisitor) classWriter, (Attribute[]) null, (-977));
Test 19: 
ClassReader classReader = new ClassReader("java/lang/Object");
ClassWriter classWriter = new ClassWriter(8);
classWriter.cr = classReader;
classReader.accept((ClassVisitor) classWriter, (Attribute[]) null, 2);
Test 20: 
ClassReader classReader = new ClassReader("java/lang/Object");
ClassReader classReader = new ClassReader("wheel.asm.MethodWriter");
ClassWriter classWriter = new ClassWriter(classReader, 8);
classReader.accept((ClassVisitor) classWriter, 1768);
Test 21: 
ClassReader classReader = new ClassReader("java/lang/Object");
ClassWriter classWriter = new ClassWriter(1);
classReader.accept((ClassVisitor) classWriter, (Attribute[]) null, 8);
Test 22: 
ClassReader classReader = new ClassReader("java/lang/Object");
char[] charArray = new char[10];
// Undeclared exception!
try { 
  classReader.readUTF8(47, charArray);
  fail("Expecting exception: ArrayIndexOutOfBoundsException");

} catch(ArrayIndexOutOfBoundsException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 23: 
ClassReader classReader = new ClassReader("wheel.asm.MethodWriter");
char[] charArray = new char[5];
// Undeclared exception!
try { 
  classReader.readConst(4, charArray);
  fail("Expecting exception: ArrayIndexOutOfBoundsException");

} catch(ArrayIndexOutOfBoundsException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 24: 
ClassReader classReader = new ClassReader("wheel.asm.MethodWriter");
char[] charArray = new char[9];
// Undeclared exception!
try { 
  classReader.readUTF8(4, charArray);
  fail("Expecting exception: ArrayIndexOutOfBoundsException");

} catch(ArrayIndexOutOfBoundsException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 25: 
ClassReader classReader = new ClassReader("java/lang/Object");
char[] charArray = new char[3];
// Undeclared exception!
try { 
  classReader.readConst(1, charArray);
  fail("Expecting exception: ArrayIndexOutOfBoundsException");

} catch(ArrayIndexOutOfBoundsException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 26: 
ClassReader classReader = new ClassReader("java/lang/Object");
classReader.readInt(10);
Test 27: 
ClassReader classReader = new ClassReader("java/lang/Object");
classReader.readUnsignedShort(4);
Test 28: 
ClassReader classReader = new ClassReader("java/lang/Object");
ClassReader classReader = new ClassReader("wheel.asm.MethodWriter");
ClassWriter classWriter = new ClassWriter(classReader, (-158));
classReader.accept((ClassVisitor) classWriter, (Attribute[]) null, 196653);
Test 29: 
ClassReader classReader = new ClassReader("wheel.asm.MethodWriter");
ClassWriter classWriter = new ClassWriter(1000);
Attribute[] attributeArray = new Attribute[0];
classReader.accept((ClassVisitor) classWriter, attributeArray, 4);
Test 30: 
ClassReader classReader = new ClassReader("org.apache.commons.io.filefilter.DelegateFileFilter");
ClassWriter classWriter = new ClassWriter(61);
ClassAdapter classAdapter = new ClassAdapter(classWriter);
classReader.accept((ClassVisitor) classAdapter, (Attribute[]) null, (-786));
Test 31: 
ClassReader classReader = new ClassReader("wheel.asm.ByteVector");
ClassWriter classWriter = new ClassWriter(classReader, 53);
ClassReader classReader = new ClassReader(classReader.b);
Attribute[] attributeArray = new Attribute[0];
classReader.accept((ClassVisitor) classWriter, attributeArray, 2);
Test 32: 
ClassReader classReader = new ClassReader("java/lang/Object");
classReader.readByte(2);
Test 33: 
ClassReader classReader = new ClassReader("org.apache.commons.io.filefilter.DelegateFileFilter");
char[] charArray = new char[3];
classReader.readClass(821, charArray);
Test 34: 
ClassReader classReader = new ClassReader("java/lang/Object");
ClassWriter classWriter = new ClassWriter(8);
ClassAdapter classAdapter = new ClassAdapter(classWriter);
classReader.accept((ClassVisitor) classAdapter, 76);
char[] charArray = new char[0];
classReader.readConst(76, charArray);
Test 35: 
ClassReader classReader = new ClassReader("java/lang/Object");
classReader.readInt(1);
Test 36: 
ClassReader classReader = new ClassReader("java/lang/Object");
Label[] labelArray = new Label[7];
classReader.readLabel(2, labelArray);
Test 37: 
ClassReader classReader = new ClassReader("java/lang/Object");
classReader.readLong(74);
Test 38: 
ClassReader classReader = new ClassReader("java/lang/Object");
classReader.readShort(1);
Test 39: 
ClassReader classReader = new ClassReader("org.apache.commons.io.filefilter.DelegateFileFilter");
char[] charArray = new char[8];
classReader.readUTF8(185, charArray);
Test 40: 
ClassReader classReader = new ClassReader("java/lang/Object");
classReader.readUnsignedShort(198);
Test 41: 
ClassReader classReader = new ClassReader("java/lang/Object");
ClassWriter classWriter = new ClassWriter(53);
classReader.copyPool(classWriter);
Test 42: 
String string = "java/lang/Double";
ClassReader classReader = new ClassReader("java/lang/Double");
((ClassReader)"java/lang/Double").getItem((int) 10.001);
String string = "java/lang/String";
ClassReader classReader = new ClassReader(string);
String string = "Hello, world!";
((ClassReader) string).getItem((int) string);

Test 43: 
ClassReader classReader = new ClassReader("org.apache.commons.io.filefilter.DelegateFileFilter");
((ClassReader)"org.apache.commons.io.filefilter.DelegateFileFilter").getClassName();

Test 44: 
ClassReader classReader = new ClassReader((byte[]) "This is a string", 42, (int) 3.14);

Test 45: 

Test 46: 

Test 47: 
ClassReader classReader = new ClassReader("org.apache.commons.io.filefilter.DelegateFileFilter");
ClassWriter classWriter = new ClassWriter(classReader, 4);

Test 48: 

Test 49: 
ClassReader classReader = new ClassReader((InputStream) null);

Test 50: 
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream((byte[]) 2, 200, (byte)105);

Test 51: 
char[] charArray = new char[10];

Test 52: 
char[] charArray = new char[5];
ClassReader classReader = new ClassReader("com.example.MyTestClass");
int _int = 4;
((ClassReader) charArray).readConst(_int, charArray);

Test 53: 
char[] charArray = new char[9];

Test 54: 
char[] charArray = new char[3];

Test 55: 

Test 56: 
int _int = 42;
ClassReader classReader = new ClassReader("Hello, world!");
ClassWriter classWriter = new ClassWriter(classReader, _int);

Test 57: 
Attribute[] attributeArray = new Attribute[0];

Test 58: 
ClassReader classReader = new ClassReader("org.apache.commons.io.filefilter.DelegateFileFilter");

Test 59: 
char[] charArray = new char[0];

Test 60: 
Label[] labelArray = new Label[7];

Test 61: 
char[] charArray = new char[8];
ClassReader classReader = new ClassReader("org.apache.commons.io.filefilter.ExtendedDelegateFileFilter");
char[] charArray = new char[8];

Test 62: 
String string = "com/example/MyClass";
ClassReader classReader = new ClassReader("com/example/MyClass");
int _int = 203;
((ClassReader) string).readUnsignedShort(_int);


* Generated after the refinement and before minimization 63 tests with total length 148
* test suite isTestSuite: 63
Test 0: 
ClassReader classReader = new ClassReader("java/lang/Object");
classReader.readShort((byte)87);
Test 1: 
ClassReader classReader = new ClassReader("java/lang/Object");
classReader.getAccess();
Test 2: 
ClassReader classReader = new ClassReader("java/lang/Object");
classReader.getItem(21);
Test 3: 
ClassReader classReader = new ClassReader("java/lang/Object");
classReader.readByte(1004);
Test 4: 
ClassReader classReader = new ClassReader("java/lang/Object");
classReader.readLong(1);
Test 5: 
ClassReader classReader = new ClassReader("org.apache.commons.io.filefilter.DelegateFileFilter");
classReader.getClassName();
Test 6: 
ClassReader classReader = new ClassReader("org.apache.commons.io.filefilter.DelegateFileFilter");
ClassReader classReader = null;
try {
  classReader = new ClassReader(classReader.b, 4, (-1088));
  fail("Expecting exception: ArrayIndexOutOfBoundsException");

} catch(ArrayIndexOutOfBoundsException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 7: 
ClassReader classReader = new ClassReader("java/lang/Object");
ClassReader classReader = null;
try {
  classReader = new ClassReader(classReader.b, 87, 2117);
  fail("Expecting exception: ArrayIndexOutOfBoundsException");

} catch(ArrayIndexOutOfBoundsException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 8: 
ClassReader classReader = new ClassReader("wheel.asm.MethodWriter");
ClassWriter classWriter = new ClassWriter(classReader, 4);
classReader.accept((ClassVisitor) classWriter, 1);
Test 9: 
ClassReader classReader = new ClassReader("java/lang/Object");
ClassReader classReader = null;
try {
  classReader = new ClassReader(classReader.b, 69, 69);
  fail("Expecting exception: ArrayIndexOutOfBoundsException");

} catch(ArrayIndexOutOfBoundsException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 10: 
ClassReader classReader = new ClassReader("org.apache.commons.io.filefilter.DelegateFileFilter");
classReader.getSuperName();
Test 11: 
ClassReader classReader = new ClassReader("java/lang/Object");
classReader.getSuperName();
Test 12: 
ClassReader classReader = new ClassReader("java/lang/Object");
classReader.getInterfaces();
Test 13: 
ClassReader classReader = new ClassReader("org.apache.commons.io.filefilter.TrueFileFilter");
classReader.getInterfaces();
Test 14: 
ClassReader classReader = new ClassReader("org.apache.commons.io.filefilter.DelegateFileFilter");
ClassWriter classWriter = new ClassWriter(classReader, 4);
Test 15: 
ClassReader classReader = new ClassReader("org.apache.commons.io.filefilter.DelegateFileFilter");
ClassReader classReader = new ClassReader(classReader.b, 821, 821);
ClassWriter classWriter = null;
try {
  classWriter = new ClassWriter(classReader, 9);
  fail("Expecting exception: ArrayIndexOutOfBoundsException");

} catch(ArrayIndexOutOfBoundsException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 16: 
ClassReader classReader = null;
try {
  classReader = new ClassReader((InputStream) null);
  fail("Expecting exception: IOException");

} catch(Throwable e) {
   //
   // Class not found
   //
   verifyException("wheel.asm.ClassReader", e);
}

Test 17: 
byte[] byteArray = new byte[2];
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray, (byte)2, (byte)105);
ClassReader classReader = null;
try {
  classReader = new ClassReader(byteArrayInputStream);
  fail("Expecting exception: ArrayIndexOutOfBoundsException");

} catch(ArrayIndexOutOfBoundsException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 18: 
ClassReader classReader = new ClassReader("java/lang/Object");
ClassWriter classWriter = new ClassWriter(classReader, 2);
classReader.accept((ClassVisitor) classWriter, (Attribute[]) null, (-977));
Test 19: 
ClassReader classReader = new ClassReader("java/lang/Object");
ClassWriter classWriter = new ClassWriter(8);
classWriter.cr = classReader;
classReader.accept((ClassVisitor) classWriter, (Attribute[]) null, 2);
Test 20: 
ClassReader classReader = new ClassReader("java/lang/Object");
ClassReader classReader = new ClassReader("wheel.asm.MethodWriter");
ClassWriter classWriter = new ClassWriter(classReader, 8);
classReader.accept((ClassVisitor) classWriter, 1768);
Test 21: 
ClassReader classReader = new ClassReader("java/lang/Object");
ClassWriter classWriter = new ClassWriter(1);
classReader.accept((ClassVisitor) classWriter, (Attribute[]) null, 8);
Test 22: 
ClassReader classReader = new ClassReader("java/lang/Object");
char[] charArray = new char[10];
// Undeclared exception!
try { 
  classReader.readUTF8(47, charArray);
  fail("Expecting exception: ArrayIndexOutOfBoundsException");

} catch(ArrayIndexOutOfBoundsException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 23: 
ClassReader classReader = new ClassReader("wheel.asm.MethodWriter");
char[] charArray = new char[5];
// Undeclared exception!
try { 
  classReader.readConst(4, charArray);
  fail("Expecting exception: ArrayIndexOutOfBoundsException");

} catch(ArrayIndexOutOfBoundsException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 24: 
ClassReader classReader = new ClassReader("wheel.asm.MethodWriter");
char[] charArray = new char[9];
// Undeclared exception!
try { 
  classReader.readUTF8(4, charArray);
  fail("Expecting exception: ArrayIndexOutOfBoundsException");

} catch(ArrayIndexOutOfBoundsException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 25: 
ClassReader classReader = new ClassReader("java/lang/Object");
char[] charArray = new char[3];
// Undeclared exception!
try { 
  classReader.readConst(1, charArray);
  fail("Expecting exception: ArrayIndexOutOfBoundsException");

} catch(ArrayIndexOutOfBoundsException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 26: 
ClassReader classReader = new ClassReader("java/lang/Object");
classReader.readInt(10);
Test 27: 
ClassReader classReader = new ClassReader("java/lang/Object");
classReader.readUnsignedShort(4);
Test 28: 
ClassReader classReader = new ClassReader("java/lang/Object");
ClassReader classReader = new ClassReader("wheel.asm.MethodWriter");
ClassWriter classWriter = new ClassWriter(classReader, (-158));
classReader.accept((ClassVisitor) classWriter, (Attribute[]) null, 196653);
Test 29: 
ClassReader classReader = new ClassReader("wheel.asm.MethodWriter");
ClassWriter classWriter = new ClassWriter(1000);
Attribute[] attributeArray = new Attribute[0];
classReader.accept((ClassVisitor) classWriter, attributeArray, 4);
Test 30: 
ClassReader classReader = new ClassReader("org.apache.commons.io.filefilter.DelegateFileFilter");
ClassWriter classWriter = new ClassWriter(61);
ClassAdapter classAdapter = new ClassAdapter(classWriter);
classReader.accept((ClassVisitor) classAdapter, (Attribute[]) null, (-786));
Test 31: 
ClassReader classReader = new ClassReader("wheel.asm.ByteVector");
ClassWriter classWriter = new ClassWriter(classReader, 53);
ClassReader classReader = new ClassReader(classReader.b);
Attribute[] attributeArray = new Attribute[0];
classReader.accept((ClassVisitor) classWriter, attributeArray, 2);
Test 32: 
ClassReader classReader = new ClassReader("java/lang/Object");
classReader.readByte(2);
Test 33: 
ClassReader classReader = new ClassReader("org.apache.commons.io.filefilter.DelegateFileFilter");
char[] charArray = new char[3];
classReader.readClass(821, charArray);
Test 34: 
ClassReader classReader = new ClassReader("java/lang/Object");
ClassWriter classWriter = new ClassWriter(8);
ClassAdapter classAdapter = new ClassAdapter(classWriter);
classReader.accept((ClassVisitor) classAdapter, 76);
char[] charArray = new char[0];
classReader.readConst(76, charArray);
Test 35: 
ClassReader classReader = new ClassReader("java/lang/Object");
classReader.readInt(1);
Test 36: 
ClassReader classReader = new ClassReader("java/lang/Object");
Label[] labelArray = new Label[7];
classReader.readLabel(2, labelArray);
Test 37: 
ClassReader classReader = new ClassReader("java/lang/Object");
classReader.readLong(74);
Test 38: 
ClassReader classReader = new ClassReader("java/lang/Object");
classReader.readShort(1);
Test 39: 
ClassReader classReader = new ClassReader("org.apache.commons.io.filefilter.DelegateFileFilter");
char[] charArray = new char[8];
classReader.readUTF8(185, charArray);
Test 40: 
ClassReader classReader = new ClassReader("java/lang/Object");
classReader.readUnsignedShort(198);
Test 41: 
ClassReader classReader = new ClassReader("java/lang/Object");
ClassWriter classWriter = new ClassWriter(53);
classReader.copyPool(classWriter);
Test 42: 
String string = "java/lang/Double";
ClassReader classReader = new ClassReader("java/lang/Double");
((ClassReader)"java/lang/Double").getItem((int) 10.001);
String string = "java/lang/String";
ClassReader classReader = new ClassReader(string);
String string = "Hello, world!";
((ClassReader) string).getItem((int) string);

Test 43: 
ClassReader classReader = new ClassReader("org.apache.commons.io.filefilter.DelegateFileFilter");
((ClassReader)"org.apache.commons.io.filefilter.DelegateFileFilter").getClassName();

Test 44: 
ClassReader classReader = new ClassReader((byte[]) "This is a string", 42, (int) 3.14);

Test 45: 

Test 46: 

Test 47: 
ClassReader classReader = new ClassReader("org.apache.commons.io.filefilter.DelegateFileFilter");
ClassWriter classWriter = new ClassWriter(classReader, 4);

Test 48: 

Test 49: 
ClassReader classReader = new ClassReader((InputStream) null);

Test 50: 
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream((byte[]) 2, 200, (byte)105);

Test 51: 
char[] charArray = new char[10];

Test 52: 
char[] charArray = new char[5];
ClassReader classReader = new ClassReader("com.example.MyTestClass");
int _int = 4;
((ClassReader) charArray).readConst(_int, charArray);

Test 53: 
char[] charArray = new char[9];

Test 54: 
char[] charArray = new char[3];

Test 55: 

Test 56: 
int _int = 42;
ClassReader classReader = new ClassReader("Hello, world!");
ClassWriter classWriter = new ClassWriter(classReader, _int);

Test 57: 
Attribute[] attributeArray = new Attribute[0];

Test 58: 
ClassReader classReader = new ClassReader("org.apache.commons.io.filefilter.DelegateFileFilter");

Test 59: 
char[] charArray = new char[0];

Test 60: 
Label[] labelArray = new Label[7];

Test 61: 
char[] charArray = new char[8];
ClassReader classReader = new ClassReader("org.apache.commons.io.filefilter.ExtendedDelegateFileFilter");
char[] charArray = new char[8];

Test 62: 
String string = "com/example/MyClass";
ClassReader classReader = new ClassReader("com/example/MyClass");
int _int = 203;
((ClassReader) string).readUnsignedShort(_int);


* Minimizing test suite
* test suite isTestSuite: 41
Test 0: 
ClassReader classReader = new ClassReader("java/lang/Object");
classReader.readShort((byte)87);
Test 1: 
ClassReader classReader = new ClassReader("wheel.asm.MethodWriter");
ClassWriter classWriter = new ClassWriter(classReader, 4);
classReader.accept((ClassVisitor) classWriter, 1);
Test 2: 
ClassReader classReader = new ClassReader("java/lang/Object");
classReader.getAccess();
Test 3: 
ClassReader classReader = new ClassReader("java/lang/Object");
classReader.getItem(21);
Test 4: 
ClassReader classReader = new ClassReader("java/lang/Object");
classReader.readByte(1004);
Test 5: 
ClassReader classReader = new ClassReader("org.apache.commons.io.filefilter.DelegateFileFilter");
classReader.getClassName();
Test 6: 
ClassReader classReader = new ClassReader("org.apache.commons.io.filefilter.DelegateFileFilter");
ClassReader classReader = null;
try {
  classReader = new ClassReader(classReader.b, 4, (-1088));
  fail("Expecting exception: ArrayIndexOutOfBoundsException");

} catch(ArrayIndexOutOfBoundsException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 7: 
ClassReader classReader = new ClassReader("java/lang/Object");
ClassReader classReader = null;
try {
  classReader = new ClassReader(classReader.b, 87, 2117);
  fail("Expecting exception: ArrayIndexOutOfBoundsException");

} catch(ArrayIndexOutOfBoundsException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 8: 
ClassReader classReader = new ClassReader("java/lang/Double");
Test 9: 
ClassReader classReader = new ClassReader("org.apache.commons.io.filefilter.DelegateFileFilter");
classReader.getSuperName();
Test 10: 
ClassReader classReader = new ClassReader("java/lang/Object");
classReader.getSuperName();
Test 11: 
ClassReader classReader = new ClassReader("java/lang/Object");
classReader.getInterfaces();
Test 12: 
ClassReader classReader = new ClassReader("org.apache.commons.io.filefilter.TrueFileFilter");
classReader.getInterfaces();
Test 13: 
ClassReader classReader = new ClassReader("org.apache.commons.io.filefilter.DelegateFileFilter");
ClassWriter classWriter = new ClassWriter(classReader, 4);
Test 14: 
ClassReader classReader = new ClassReader("org.apache.commons.io.filefilter.DelegateFileFilter");
ClassReader classReader = new ClassReader(classReader.b, 821, 821);
ClassWriter classWriter = null;
try {
  classWriter = new ClassWriter(classReader, 9);
  fail("Expecting exception: ArrayIndexOutOfBoundsException");

} catch(ArrayIndexOutOfBoundsException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 15: 
ClassReader classReader = null;
try {
  classReader = new ClassReader((InputStream) null);
  fail("Expecting exception: IOException");

} catch(Throwable e) {
   //
   // Class not found
   //
   verifyException("wheel.asm.ClassReader", e);
}

Test 16: 
byte[] byteArray = new byte[2];
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray, (byte)2, (byte)105);
ClassReader classReader = null;
try {
  classReader = new ClassReader(byteArrayInputStream);
  fail("Expecting exception: ArrayIndexOutOfBoundsException");

} catch(ArrayIndexOutOfBoundsException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 17: 
ClassReader classReader = new ClassReader("java/lang/Object");
ClassWriter classWriter = new ClassWriter(1);
classReader.accept((ClassVisitor) classWriter, (Attribute[]) null, 8);
Test 18: 
ClassReader classReader = new ClassReader("java/lang/Object");
ClassWriter classWriter = new ClassWriter(classReader, 2);
classReader.accept((ClassVisitor) classWriter, (Attribute[]) null, (-977));
Test 19: 
ClassReader classReader = new ClassReader("java/lang/Object");
ClassWriter classWriter = new ClassWriter(8);
classWriter.cr = classReader;
classReader.accept((ClassVisitor) classWriter, (Attribute[]) null, 2);
Test 20: 
ClassReader classReader = new ClassReader("java/lang/Object");
ClassReader classReader = new ClassReader("wheel.asm.MethodWriter");
ClassWriter classWriter = new ClassWriter(classReader, 8);
classReader.accept((ClassVisitor) classWriter, 1768);
Test 21: 
ClassReader classReader = new ClassReader("org.apache.commons.io.filefilter.DelegateFileFilter");
ClassWriter classWriter = new ClassWriter(61);
ClassAdapter classAdapter = new ClassAdapter(classWriter);
classReader.accept((ClassVisitor) classAdapter, (Attribute[]) null, (-786));
Test 22: 
ClassReader classReader = new ClassReader("wheel.asm.MethodWriter");
ClassWriter classWriter = new ClassWriter(1000);
Attribute[] attributeArray = new Attribute[0];
classReader.accept((ClassVisitor) classWriter, attributeArray, 4);
Test 23: 
ClassReader classReader = new ClassReader("wheel.asm.ByteVector");
ClassWriter classWriter = new ClassWriter(classReader, 53);
ClassReader classReader = new ClassReader(classReader.b);
Attribute[] attributeArray = new Attribute[0];
classReader.accept((ClassVisitor) classWriter, attributeArray, 2);
Test 24: 
ClassReader classReader = new ClassReader("java/lang/Object");
char[] charArray = new char[10];
// Undeclared exception!
try { 
  classReader.readUTF8(47, charArray);
  fail("Expecting exception: ArrayIndexOutOfBoundsException");

} catch(ArrayIndexOutOfBoundsException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 25: 
ClassReader classReader = new ClassReader("wheel.asm.MethodWriter");
char[] charArray = new char[5];
// Undeclared exception!
try { 
  classReader.readConst(4, charArray);
  fail("Expecting exception: ArrayIndexOutOfBoundsException");

} catch(ArrayIndexOutOfBoundsException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 26: 
ClassReader classReader = new ClassReader("wheel.asm.MethodWriter");
char[] charArray = new char[9];
// Undeclared exception!
try { 
  classReader.readUTF8(4, charArray);
  fail("Expecting exception: ArrayIndexOutOfBoundsException");

} catch(ArrayIndexOutOfBoundsException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 27: 
ClassReader classReader = new ClassReader("java/lang/Object");
char[] charArray = new char[3];
// Undeclared exception!
try { 
  classReader.readConst(1, charArray);
  fail("Expecting exception: ArrayIndexOutOfBoundsException");

} catch(ArrayIndexOutOfBoundsException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 28: 
ClassReader classReader = new ClassReader("java/lang/Object");
classReader.readLong(1);
Test 29: 
ClassReader classReader = new ClassReader("java/lang/Object");
classReader.readInt(1);
Test 30: 
ClassReader classReader = new ClassReader("org.apache.commons.io.filefilter.DelegateFileFilter");
char[] charArray = new char[3];
classReader.readClass(821, charArray);
Test 31: 
ClassReader classReader = new ClassReader("java/lang/Object");
classReader.readUnsignedShort(198);
Test 32: 
ClassReader classReader = new ClassReader("java/lang/Object");
classReader.readByte(2);
Test 33: 
ClassReader classReader = new ClassReader("java/lang/Object");
ClassWriter classWriter = new ClassWriter(8);
ClassAdapter classAdapter = new ClassAdapter(classWriter);
classReader.accept((ClassVisitor) classAdapter, 76);
char[] charArray = new char[0];
classReader.readConst(76, charArray);
Test 34: 
ClassReader classReader = new ClassReader("java/lang/Object");
classReader.readInt(10);
Test 35: 
ClassReader classReader = new ClassReader("java/lang/Object");
Label[] labelArray = new Label[7];
classReader.readLabel(2, labelArray);
Test 36: 
ClassReader classReader = new ClassReader("java/lang/Object");
classReader.readLong(74);
Test 37: 
ClassReader classReader = new ClassReader("java/lang/Object");
classReader.readShort(1);
Test 38: 
ClassReader classReader = new ClassReader("org.apache.commons.io.filefilter.DelegateFileFilter");
char[] charArray = new char[8];
classReader.readUTF8(185, charArray);
Test 39: 
ClassReader classReader = new ClassReader("java/lang/Object");
classReader.readUnsignedShort(4);
Test 40: 
ClassReader classReader = new ClassReader("java/lang/Object");
ClassWriter classWriter = new ClassWriter(53);
classReader.copyPool(classWriter);

* Going to analyze the coverage criteria
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 53%
* Total number of goals: 817
* Number of covered goals: 433
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 65%
* Total number of goals: 868
* Number of covered goals: 565
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 52%
* Total number of goals: 40
* Number of covered goals: 21
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 21
* Number of covered goals: 21
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 51%
* Total number of goals: 817
* Number of covered goals: 415
* Generated 41 tests with total length 108
* Resulting test suite's coverage: 64% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 30%
* Compiling and checking tests
Going to execute: removeTestsThatDoNotCompile
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: ClassReader classReader = new ClassReader("java/lang/Object");
short readShort = classReader.readShort((byte)87);
assertEquals(927, classReader.header);
assertEquals((short)26990, readShort);


** It was a parseable test case! 
refined test name is: testReadShortValidInputReturnsCorrectValue
* Compiling Tests
refined test name is: testReadShortWithByteValueOf87
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: ClassReader classReader = new ClassReader("java/lang/Object");
int access = classReader.getAccess();
assertEquals(33, access);


** It was a parseable test case! 
refined test name is: testGetAccessReturnsExpectedValue
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: ClassReader classReader = new ClassReader("java/lang/Object");
int item = classReader.getItem(21);
assertEquals(927, classReader.header);
assertEquals(106, item);


** It was a parseable test case! 
refined test name is: testClassReaderGetters
* Compiling Tests
refined test name is: testGetHeaderAndItemValues
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: ClassReader classReader = new ClassReader("java/lang/Object");
classReader.readByte(1004);
assertEquals(927, classReader.header);


** It was a parseable test case! 
refined test name is: testReadByteWithValidIndexShouldSetHeaderCorrectly
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: ClassReader classReader = new ClassReader("org.apache.commons.io.filefilter.DelegateFileFilter");
String className = classReader.getClassName();
assertEquals(821, classReader.header);
assertEquals("org/apache/commons/io/filefilter/DelegateFileFilter", className);


** It was a parseable test case! 
refined test name is: testReadHeaderAndClassFileName
* Compiling Tests
refined test name is: testReadHeaderAndCompareClassNames
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: ClassReader classReader = new ClassReader("java/lang/Double");
assertEquals(2258, classReader.header);


** It was a parseable test case! 
refined test name is: testReadHeaderField
* Compiling Tests
refined test name is: testReadHeaderFieldVerifiesExpectedValue
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: ClassReader classReader = new ClassReader("org.apache.commons.io.filefilter.DelegateFileFilter");
String superName = classReader.getSuperName();
assertEquals("org/apache/commons/io/filefilter/AbstractFileFilter", superName);
assertEquals(821, classReader.header);
assertNotNull(superName);


** It was a parseable test case! 
refined test name is: testDelegateFileFilterSuperclass
* Compiling Tests
refined test name is: testGetSuperNameAndHeader
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: ClassReader classReader = new ClassReader("java/lang/Object");
classReader.getSuperName();
assertEquals(927, classReader.header);


** It was a parseable test case! 
refined test name is: testGetSuperNameWithoutComments
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: ClassReader classReader = new ClassReader("java/lang/Object");
classReader.getInterfaces();
assertEquals(927, classReader.header);


** It was a parseable test case! 
refined test name is: testClassReaderGetInterfacesReturnsCorrectValue
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: ClassReader classReader = new ClassReader("org.apache.commons.io.filefilter.TrueFileFilter");
classReader.getInterfaces();
assertEquals(530, classReader.header);


** It was a parseable test case! 
refined test name is: testHeaderField
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: ClassReader arg0 = new ClassReader("org.apache.commons.io.filefilter.DelegateFileFilter");
ClassWriter classWriter = new ClassWriter(arg0, 4);
assertEquals(1, ClassWriter.COMPUTE_MAXS);


** It was a parseable test case! 
refined test name is: testComputeMaxs
* Compiling Tests
refined test name is: testComputeMaxStackSize
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: ClassReader classReader = new ClassReader("org.apache.commons.io.filefilter.DelegateFileFilter");
ClassReader arg0 = new ClassReader(classReader.b, 821, 821);
ClassWriter classWriter = null;
try {
  classWriter = new ClassWriter(arg0, 9);
  fail("Expecting exception: ArrayIndexOutOfBoundsException");

} catch(ArrayIndexOutOfBoundsException e) {
   //
   // 512
   //
   verifyException("wheel.asm.ClassReader", e);
}


** It was a parseable test case! 
refined test name is: testConstructor
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: ClassReader classReader = null;
try {
  classReader = new ClassReader((InputStream) null);
  fail("Expecting exception: IOException");

} catch(Throwable e) {
   //
   // Class not found
   //
   verifyException("wheel.asm.ClassReader", e);
}


** It was a parseable test case! 
refined test name is: testClassReaderInitialization
* Compiling Tests
refined test name is: testClassReaderIOExceptionHandling
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: ClassReader classReader = new ClassReader("java/lang/Object");
ClassWriter arg0 = new ClassWriter(1);
classReader.accept((ClassVisitor) arg0, (Attribute[]) null, 8);
assertEquals(33, classReader.getAccess());


** It was a parseable test case! 
refined test name is: testGetAccessReturnsCorrectValue
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: ClassReader classReader = new ClassReader("java/lang/Object");
ClassWriter arg0 = new ClassWriter(8);
arg0.cr = classReader;
classReader.accept((ClassVisitor) arg0, (Attribute[]) null, 2);
assertEquals(8, ClassReader.EXPAND_FRAMES);


** It was a parseable test case! 
refined test name is: testExpandingFrameSizeIsSetToEight
* Compiling Tests
refined test name is: testAcceptWithExpandingFrameSizeOfEight
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: ClassReader classReader = new ClassReader("wheel.asm.MethodWriter");
ClassWriter arg0 = new ClassWriter(1000);
Attribute[] arg1 = new Attribute[0];
// Undeclared exception!
classReader.accept((ClassVisitor) arg0, arg1, 4);

** It was a parseable test case! 
refined test name is: testAcceptwithValidParametersreturnsTrue
* Compiling Tests
refined test name is: testAcceptMethodWriterWithAttributes
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: ClassReader classReader = new ClassReader("java/lang/Object");
char[] arg1 = new char[10];
// Undeclared exception!
try { 
  classReader.readUTF8(47, arg1);
  fail("Expecting exception: ArrayIndexOutOfBoundsException");

} catch(ArrayIndexOutOfBoundsException e) {
   //
   // 10
   //
   verifyException("wheel.asm.ClassReader", e);
}


** It was a parseable test case! 
refined test name is: testReadUTF8ThrowsArrayIndexOutOfBoundsException
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: ClassReader classReader = new ClassReader("wheel.asm.MethodWriter");
char[] arg1 = new char[5];
// Undeclared exception!
try { 
  classReader.readConst(4, arg1);
  fail("Expecting exception: ArrayIndexOutOfBoundsException");

} catch(ArrayIndexOutOfBoundsException e) {
   //
   // 5
   //
   verifyException("wheel.asm.ClassReader", e);
}


** It was a parseable test case! 
refined test name is: testReadConstThrowsArrayIndexOutOfBoundsException
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: ClassReader classReader = new ClassReader("wheel.asm.MethodWriter");
char[] arg1 = new char[9];
// Undeclared exception!
try { 
  classReader.readUTF8(4, arg1);
  fail("Expecting exception: ArrayIndexOutOfBoundsException");

} catch(ArrayIndexOutOfBoundsException e) {
   //
   // 9
   //
   verifyException("wheel.asm.ClassReader", e);
}


** It was a parseable test case! 
refined test name is: testReadUTF8ThrowsArrayIndexOutOfBoundsException
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: ClassReader classReader = new ClassReader("java/lang/Object");
char[] arg1 = new char[3];
// Undeclared exception!
try { 
  classReader.readConst(1, arg1);
  fail("Expecting exception: ArrayIndexOutOfBoundsException");

} catch(ArrayIndexOutOfBoundsException e) {
   //
   // 3
   //
   verifyException("wheel.asm.ClassReader", e);
}


** It was a parseable test case! 
refined test name is: testReadConstthrowsArrayIndexOutOfBoundsException
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: ClassReader classReader = new ClassReader("java/lang/Object");
long readLong = classReader.readLong(1);
assertEquals((-91551935198383104L), readLong);
assertEquals(927, classReader.header);


** It was a parseable test case! 
refined test name is: testReadLongInClassFileHeader
* Compiling Tests
refined test name is: testReadLongReturnsExpectedValueAndUpdatesHeader
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: ClassReader classReader = new ClassReader("java/lang/Object");
int readInt = classReader.readInt(1);
assertEquals(927, classReader.header);
assertEquals((-21316096), readInt);


** It was a parseable test case! 
refined test name is: testReadIntFromClassFileData
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: ClassReader classReader = new ClassReader("org.apache.commons.io.filefilter.DelegateFileFilter");
assertEquals(821, classReader.header);

char[] arg1 = new char[3];
String readClass = classReader.readClass(821, arg1);
assertEquals("\u0000(", readClass);


** It was a parseable test case! 
refined test name is: testReadClass
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: ClassReader classReader = new ClassReader("java/lang/Object");
int readUnsignedShort = classReader.readUnsignedShort(198);
assertEquals(24942, readUnsignedShort);
assertEquals(927, classReader.header);


** It was a parseable test case! 
refined test name is: testReadUnsignedShort
* Compiling Tests
refined test name is: testReadUnsignedShortFromHeader
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: ClassReader classReader = new ClassReader("java/lang/Object");
int readByte = classReader.readByte(2);
assertEquals(927, classReader.header);
assertEquals(186, readByte);


** It was a parseable test case! 
refined test name is: testReadByteMethod
* Compiling Tests
refined test name is: testReadByteOffsetTwoReturnsOneHundredAndEightySix
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: ClassReader classReader = new ClassReader("java/lang/Object");
int readInt = classReader.readInt(10);
assertEquals(117453066, readInt);
assertEquals(927, classReader.header);


** It was a parseable test case! 
refined test name is: testReadIntAtOffset
* Compiling Tests
refined test name is: testReadIntReturnsCorrectValue
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: ClassReader classReader = new ClassReader("java/lang/Object");
Label[] arg1 = new Label[7];
classReader.readLabel(2, arg1);
assertEquals(927, classReader.header);


** It was a parseable test case! 
refined test name is: testReadLabelShouldReturnExpectedValue
* Compiling Tests
refined test name is: testReadLabelMethodWithArrayArgument
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: ClassReader classReader = new ClassReader("java/lang/Object");
long readLong = classReader.readLong(74);
assertEquals(4614500841213200128L, readLong);
assertEquals(927, classReader.header);


** It was a parseable test case! 
refined test name is: testReadLongFromValidOffset
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: ClassReader classReader = new ClassReader("java/lang/Object");
short readShort = classReader.readShort(1);
assertEquals(927, classReader.header);
assertEquals((short) (-326), readShort);


** It was a parseable test case! 
refined test name is: testReadShortFromClassFileAtOffsetOne
* Compiling Tests
refined test name is: testReadShort
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: ClassReader classReader = new ClassReader("org.apache.commons.io.filefilter.DelegateFileFilter");
char[] arg1 = new char[8];
String readUTF8 = classReader.readUTF8(185, arg1);
assertEquals(821, classReader.header);
assertEquals("\u0000(", readUTF8);


** It was a parseable test case! 
refined test name is: testReadUTF8ValidOffsetAndCharArray
* Compiling Tests
refined test name is: testReadUTF8WithOffsetAndCharArrayOfLengthEight
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: ClassReader classReader = new ClassReader("java/lang/Object");
classReader.readUnsignedShort(4);
assertEquals(927, classReader.header);


** It was a parseable test case! 
refined test name is: testReadUnsignedShortValidInput
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: ClassReader classReader = new ClassReader("java/lang/Object");
ClassWriter arg0 = new ClassWriter(53);
classReader.copyPool(arg0);
assertEquals(1, ClassReader.SKIP_CODE);


** It was a parseable test case! 
refined test name is: testCopyPoolMethod
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 12:01:35.680 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar3699686762583815435.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 12:01:35.716 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3699686762583815435.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 12:01:35.789 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar3699686762583815435.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
[MASTER] 12:01:35.790 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3699686762583815435.jar
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 12:01:35.842 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar3699686762583815435.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 12:01:35.843 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3699686762583815435.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 12:01:35.906 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar3699686762583815435.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 12:01:35.908 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3699686762583815435.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 12:01:35.976 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar3699686762583815435.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 12:01:35.977 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3699686762583815435.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 12:01:36.063 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar3699686762583815435.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
[MASTER] 12:01:36.064 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3699686762583815435.jar
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 12:01:36.134 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar3699686762583815435.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 12:01:36.135 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3699686762583815435.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 12:01:36.201 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar3699686762583815435.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 12:01:36.202 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3699686762583815435.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 12:01:36.265 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar3699686762583815435.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 12:01:36.266 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3699686762583815435.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 12:01:36.347 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar3699686762583815435.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 12:01:36.348 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3699686762583815435.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 12:01:36.502 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar3699686762583815435.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 12:01:36.503 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3699686762583815435.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 12:01:36.570 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar3699686762583815435.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 12:01:36.571 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3699686762583815435.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 12:01:36.624 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar3699686762583815435.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 12:01:36.626 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3699686762583815435.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 12:01:36.830 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar3699686762583815435.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 12:01:36.831 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3699686762583815435.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 12:01:36.996 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar3699686762583815435.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 12:01:36.997 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3699686762583815435.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 12:01:38.593 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar3699686762583815435.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 12:01:38.594 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3699686762583815435.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 12:01:38.661 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar3699686762583815435.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 12:01:38.662 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3699686762583815435.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 12:01:38.866 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar3699686762583815435.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 12:01:38.867 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3699686762583815435.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 12:01:39.060 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar3699686762583815435.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 12:01:39.061 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3699686762583815435.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 12:01:39.149 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar3699686762583815435.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 12:01:39.151 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3699686762583815435.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 12:01:39.295 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar3699686762583815435.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 12:01:39.296 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3699686762583815435.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 12:01:39.348 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar3699686762583815435.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 12:01:39.349 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3699686762583815435.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 12:01:39.405 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar3699686762583815435.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 12:01:39.407 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3699686762583815435.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 12:01:39.478 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar3699686762583815435.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 12:01:39.480 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3699686762583815435.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 12:01:39.550 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar3699686762583815435.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 12:01:39.552 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3699686762583815435.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 12:01:39.628 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar3699686762583815435.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 12:01:39.629 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3699686762583815435.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 12:01:39.688 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar3699686762583815435.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 12:01:39.689 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3699686762583815435.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 12:01:39.752 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar3699686762583815435.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 12:01:39.753 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3699686762583815435.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 12:01:39.820 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar3699686762583815435.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 12:01:39.821 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3699686762583815435.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 12:01:39.881 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar3699686762583815435.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 12:01:39.882 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3699686762583815435.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 12:01:39.949 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar3699686762583815435.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 12:01:39.950 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3699686762583815435.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 12:01:40.116 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar3699686762583815435.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 12:01:40.118 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3699686762583815435.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
** Write a test suite: 2 called: 1 to improve: false
** Write a test suite: 4 called: 2 to improve: false
** Write a test suite: 5 called: 3 to improve: false
** Write a test suite: 6 called: 4 to improve: false
** Write a test suite: 10 called: 5 to improve: false
** Write a test suite: 12 called: 6 to improve: false
** Write a test suite: 14 called: 7 to improve: false
** Write a test suite: 15 called: 8 to improve: false
** Write a test suite: 20 called: 9 to improve: false
** Write a test suite: 23 called: 10 to improve: false
** Write a test suite: 24 called: 11 to improve: false
** Write a test suite: 25 called: 12 to improve: false
** Write a test suite: 26 called: 13 to improve: false
** Write a test suite: 28 called: 14 to improve: false
** Write a test suite: 29 called: 15 to improve: false
[MASTER] 12:01:43.058 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar3699686762583815435.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 12:01:43.059 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3699686762583815435.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 2 called: 0 to improve: false
** Write a test suite: 3 called: 1 to improve: false
** Write a test suite: 5 called: 2 to improve: false
** Write a test suite: 6 called: 3 to improve: false
** Write a test suite: 7 called: 4 to improve: false
** Write a test suite: 8 called: 5 to improve: false
** Write a test suite: 11 called: 6 to improve: false
** Write a test suite: 16 called: 7 to improve: false
** Write a test suite: 17 called: 8 to improve: false
** Write a test suite: 19 called: 9 to improve: false
** Write a test suite: 21 called: 10 to improve: false
** Write a test suite: 25 called: 11 to improve: false
** Write a test suite: 26 called: 12 to improve: false
** Write a test suite: 27 called: 13 to improve: false
** Write a test suite: 29 called: 14 to improve: false
** Write a test suite: 31 called: 15 to improve: false
[MASTER] 12:01:46.167 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar3699686762583815435.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 12:01:46.168 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3699686762583815435.jar
[MASTER] 12:01:51.622 [logback-1] WARN  TimeController - Already entered in phase: INLINING. This will mess up the timing calculations.
* test suite isTestSuite: 42
Test 0: 
ClassReader classReader = new ClassReader("java/lang/Object");
classReader.readShort((byte)87);
Test 1: 
ClassReader classReader = new ClassReader("java/lang/Object");
classReader.getAccess();
Test 2: 
ClassReader classReader = new ClassReader("java/lang/Object");
classReader.getItem(21);
Test 3: 
ClassReader classReader = new ClassReader("java/lang/Object");
classReader.readByte(1004);
Test 4: 
ClassReader classReader = new ClassReader("java/lang/Object");
classReader.readLong(1);
Test 5: 
ClassReader classReader = new ClassReader("org.apache.commons.io.filefilter.DelegateFileFilter");
classReader.getClassName();
Test 6: 
ClassReader classReader = new ClassReader("org.apache.commons.io.filefilter.DelegateFileFilter");
ClassReader classReader = null;
try {
  classReader = new ClassReader(classReader.b, 4, (-1088));
  fail("Expecting exception: ArrayIndexOutOfBoundsException");

} catch(ArrayIndexOutOfBoundsException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 7: 
ClassReader classReader = new ClassReader("java/lang/Object");
ClassReader classReader = null;
try {
  classReader = new ClassReader(classReader.b, 87, 2117);
  fail("Expecting exception: ArrayIndexOutOfBoundsException");

} catch(ArrayIndexOutOfBoundsException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 8: 
ClassReader classReader = new ClassReader("wheel.asm.MethodWriter");
ClassWriter classWriter = new ClassWriter(classReader, 4);
classReader.accept((ClassVisitor) classWriter, 1);
Test 9: 
ClassReader classReader = new ClassReader("java/lang/Object");
ClassReader classReader = null;
try {
  classReader = new ClassReader(classReader.b, 69, 69);
  fail("Expecting exception: ArrayIndexOutOfBoundsException");

} catch(ArrayIndexOutOfBoundsException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 10: 
ClassReader classReader = new ClassReader("org.apache.commons.io.filefilter.DelegateFileFilter");
classReader.getSuperName();
Test 11: 
ClassReader classReader = new ClassReader("java/lang/Object");
classReader.getSuperName();
Test 12: 
ClassReader classReader = new ClassReader("java/lang/Object");
classReader.getInterfaces();
Test 13: 
ClassReader classReader = new ClassReader("org.apache.commons.io.filefilter.TrueFileFilter");
classReader.getInterfaces();
Test 14: 
ClassReader classReader = new ClassReader("org.apache.commons.io.filefilter.DelegateFileFilter");
ClassWriter classWriter = new ClassWriter(classReader, 4);
Test 15: 
ClassReader classReader = new ClassReader("org.apache.commons.io.filefilter.DelegateFileFilter");
ClassReader classReader = new ClassReader(classReader.b, 821, 821);
ClassWriter classWriter = null;
try {
  classWriter = new ClassWriter(classReader, 9);
  fail("Expecting exception: ArrayIndexOutOfBoundsException");

} catch(ArrayIndexOutOfBoundsException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 16: 
ClassReader classReader = null;
try {
  classReader = new ClassReader((InputStream) null);
  fail("Expecting exception: IOException");

} catch(Throwable e) {
   //
   // Class not found
   //
   verifyException("wheel.asm.ClassReader", e);
}

Test 17: 
byte[] byteArray = new byte[2];
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray, (byte)2, (byte)105);
ClassReader classReader = null;
try {
  classReader = new ClassReader(byteArrayInputStream);
  fail("Expecting exception: ArrayIndexOutOfBoundsException");

} catch(ArrayIndexOutOfBoundsException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 18: 
ClassReader classReader = new ClassReader("java/lang/Object");
ClassWriter classWriter = new ClassWriter(classReader, 2);
classReader.accept((ClassVisitor) classWriter, (Attribute[]) null, (-977));
Test 19: 
ClassReader classReader = new ClassReader("java/lang/Object");
ClassWriter classWriter = new ClassWriter(8);
classWriter.cr = classReader;
classReader.accept((ClassVisitor) classWriter, (Attribute[]) null, 2);
Test 20: 
ClassReader classReader = new ClassReader("java/lang/Object");
ClassReader classReader = new ClassReader("wheel.asm.MethodWriter");
ClassWriter classWriter = new ClassWriter(classReader, 8);
classReader.accept((ClassVisitor) classWriter, 1768);
Test 21: 
ClassReader classReader = new ClassReader("java/lang/Object");
ClassWriter classWriter = new ClassWriter(1);
classReader.accept((ClassVisitor) classWriter, (Attribute[]) null, 8);
Test 22: 
ClassReader classReader = new ClassReader("java/lang/Object");
char[] charArray = new char[10];
// Undeclared exception!
try { 
  classReader.readUTF8(47, charArray);
  fail("Expecting exception: ArrayIndexOutOfBoundsException");

} catch(ArrayIndexOutOfBoundsException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 23: 
ClassReader classReader = new ClassReader("wheel.asm.MethodWriter");
char[] charArray = new char[5];
// Undeclared exception!
try { 
  classReader.readConst(4, charArray);
  fail("Expecting exception: ArrayIndexOutOfBoundsException");

} catch(ArrayIndexOutOfBoundsException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 24: 
ClassReader classReader = new ClassReader("wheel.asm.MethodWriter");
char[] charArray = new char[9];
// Undeclared exception!
try { 
  classReader.readUTF8(4, charArray);
  fail("Expecting exception: ArrayIndexOutOfBoundsException");

} catch(ArrayIndexOutOfBoundsException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 25: 
ClassReader classReader = new ClassReader("java/lang/Object");
char[] charArray = new char[3];
// Undeclared exception!
try { 
  classReader.readConst(1, charArray);
  fail("Expecting exception: ArrayIndexOutOfBoundsException");

} catch(ArrayIndexOutOfBoundsException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 26: 
ClassReader classReader = new ClassReader("java/lang/Object");
classReader.readInt(10);
Test 27: 
ClassReader classReader = new ClassReader("java/lang/Object");
classReader.readUnsignedShort(4);
Test 28: 
ClassReader classReader = new ClassReader("java/lang/Object");
ClassReader classReader = new ClassReader("wheel.asm.MethodWriter");
ClassWriter classWriter = new ClassWriter(classReader, (-158));
classReader.accept((ClassVisitor) classWriter, (Attribute[]) null, 196653);
Test 29: 
ClassReader classReader = new ClassReader("wheel.asm.MethodWriter");
ClassWriter classWriter = new ClassWriter(1000);
Attribute[] attributeArray = new Attribute[0];
classReader.accept((ClassVisitor) classWriter, attributeArray, 4);
Test 30: 
ClassReader classReader = new ClassReader("org.apache.commons.io.filefilter.DelegateFileFilter");
ClassWriter classWriter = new ClassWriter(61);
ClassAdapter classAdapter = new ClassAdapter(classWriter);
classReader.accept((ClassVisitor) classAdapter, (Attribute[]) null, (-786));
Test 31: 
ClassReader classReader = new ClassReader("wheel.asm.ByteVector");
ClassWriter classWriter = new ClassWriter(classReader, 53);
ClassReader classReader = new ClassReader(classReader.b);
Attribute[] attributeArray = new Attribute[0];
classReader.accept((ClassVisitor) classWriter, attributeArray, 2);
Test 32: 
ClassReader classReader = new ClassReader("java/lang/Object");
classReader.readByte(2);
Test 33: 
ClassReader classReader = new ClassReader("org.apache.commons.io.filefilter.DelegateFileFilter");
char[] charArray = new char[3];
classReader.readClass(821, charArray);
Test 34: 
ClassReader classReader = new ClassReader("java/lang/Object");
ClassWriter classWriter = new ClassWriter(8);
ClassAdapter classAdapter = new ClassAdapter(classWriter);
classReader.accept((ClassVisitor) classAdapter, 76);
char[] charArray = new char[0];
classReader.readConst(76, charArray);
Test 35: 
ClassReader classReader = new ClassReader("java/lang/Object");
classReader.readInt(1);
Test 36: 
ClassReader classReader = new ClassReader("java/lang/Object");
Label[] labelArray = new Label[7];
classReader.readLabel(2, labelArray);
Test 37: 
ClassReader classReader = new ClassReader("java/lang/Object");
classReader.readLong(74);
Test 38: 
ClassReader classReader = new ClassReader("java/lang/Object");
classReader.readShort(1);
Test 39: 
ClassReader classReader = new ClassReader("org.apache.commons.io.filefilter.DelegateFileFilter");
char[] charArray = new char[8];
classReader.readUTF8(185, charArray);
Test 40: 
ClassReader classReader = new ClassReader("java/lang/Object");
classReader.readUnsignedShort(198);
Test 41: 
ClassReader classReader = new ClassReader("java/lang/Object");
ClassWriter classWriter = new ClassWriter(53);
classReader.copyPool(classWriter);

* Minimizing test suite
[MASTER] 12:04:06.616 [logback-1] WARN  TimeController - Already entered in phase: MINIMIZATION. This will mess up the timing calculations.
* test suite isTestSuite: 41
Test 0: 
ClassReader classReader = new ClassReader("java/lang/Object");
classReader.readShort((byte)87);
Test 1: 
ClassReader classReader = new ClassReader("wheel.asm.MethodWriter");
ClassWriter classWriter = new ClassWriter(classReader, 4);
classReader.accept((ClassVisitor) classWriter, 1);
Test 2: 
ClassReader classReader = new ClassReader("java/lang/Object");
classReader.getAccess();
Test 3: 
ClassReader classReader = new ClassReader("java/lang/Object");
classReader.getItem(21);
Test 4: 
ClassReader classReader = new ClassReader("java/lang/Object");
classReader.readByte(1004);
Test 5: 
ClassReader classReader = new ClassReader("org.apache.commons.io.filefilter.DelegateFileFilter");
classReader.getClassName();
Test 6: 
ClassReader classReader = new ClassReader("org.apache.commons.io.filefilter.DelegateFileFilter");
ClassReader classReader = null;
try {
  classReader = new ClassReader(classReader.b, 4, (-1088));
  fail("Expecting exception: ArrayIndexOutOfBoundsException");

} catch(ArrayIndexOutOfBoundsException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 7: 
ClassReader classReader = new ClassReader("java/lang/Object");
ClassReader classReader = null;
try {
  classReader = new ClassReader(classReader.b, 87, 2117);
  fail("Expecting exception: ArrayIndexOutOfBoundsException");

} catch(ArrayIndexOutOfBoundsException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 8: 
ClassReader classReader = new ClassReader("java/lang/Object");
ClassReader classReader = null;
try {
  classReader = new ClassReader(classReader.b, 69, 69);
  fail("Expecting exception: ArrayIndexOutOfBoundsException");

} catch(ArrayIndexOutOfBoundsException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 9: 
ClassReader classReader = new ClassReader("org.apache.commons.io.filefilter.DelegateFileFilter");
classReader.getSuperName();
Test 10: 
ClassReader classReader = new ClassReader("java/lang/Object");
classReader.getSuperName();
Test 11: 
ClassReader classReader = new ClassReader("java/lang/Object");
classReader.getInterfaces();
Test 12: 
ClassReader classReader = new ClassReader("org.apache.commons.io.filefilter.TrueFileFilter");
classReader.getInterfaces();
Test 13: 
ClassReader classReader = new ClassReader("org.apache.commons.io.filefilter.DelegateFileFilter");
ClassWriter classWriter = new ClassWriter(classReader, 4);
Test 14: 
ClassReader classReader = new ClassReader("org.apache.commons.io.filefilter.DelegateFileFilter");
ClassReader classReader = new ClassReader(classReader.b, 821, 821);
ClassWriter classWriter = null;
try {
  classWriter = new ClassWriter(classReader, 9);
  fail("Expecting exception: ArrayIndexOutOfBoundsException");

} catch(ArrayIndexOutOfBoundsException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 15: 
ClassReader classReader = null;
try {
  classReader = new ClassReader((InputStream) null);
  fail("Expecting exception: IOException");

} catch(Throwable e) {
   //
   // Class not found
   //
   verifyException("wheel.asm.ClassReader", e);
}

Test 16: 
byte[] byteArray = new byte[2];
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray, (byte)2, (byte)105);
ClassReader classReader = null;
try {
  classReader = new ClassReader(byteArrayInputStream);
  fail("Expecting exception: ArrayIndexOutOfBoundsException");

} catch(ArrayIndexOutOfBoundsException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 17: 
ClassReader classReader = new ClassReader("java/lang/Object");
ClassWriter classWriter = new ClassWriter(1);
classReader.accept((ClassVisitor) classWriter, (Attribute[]) null, 8);
Test 18: 
ClassReader classReader = new ClassReader("java/lang/Object");
ClassWriter classWriter = new ClassWriter(classReader, 2);
classReader.accept((ClassVisitor) classWriter, (Attribute[]) null, (-977));
Test 19: 
ClassReader classReader = new ClassReader("java/lang/Object");
ClassWriter classWriter = new ClassWriter(8);
classWriter.cr = classReader;
classReader.accept((ClassVisitor) classWriter, (Attribute[]) null, 2);
Test 20: 
ClassReader classReader = new ClassReader("java/lang/Object");
ClassReader classReader = new ClassReader("wheel.asm.MethodWriter");
ClassWriter classWriter = new ClassWriter(classReader, 8);
classReader.accept((ClassVisitor) classWriter, 1768);
Test 21: 
ClassReader classReader = new ClassReader("org.apache.commons.io.filefilter.DelegateFileFilter");
ClassWriter classWriter = new ClassWriter(61);
ClassAdapter classAdapter = new ClassAdapter(classWriter);
classReader.accept((ClassVisitor) classAdapter, (Attribute[]) null, (-786));
Test 22: 
ClassReader classReader = new ClassReader("wheel.asm.MethodWriter");
ClassWriter classWriter = new ClassWriter(1000);
Attribute[] attributeArray = new Attribute[0];
classReader.accept((ClassVisitor) classWriter, attributeArray, 4);
Test 23: 
ClassReader classReader = new ClassReader("wheel.asm.ByteVector");
ClassWriter classWriter = new ClassWriter(classReader, 53);
ClassReader classReader = new ClassReader(classReader.b);
Attribute[] attributeArray = new Attribute[0];
classReader.accept((ClassVisitor) classWriter, attributeArray, 2);
Test 24: 
ClassReader classReader = new ClassReader("java/lang/Object");
char[] charArray = new char[10];
// Undeclared exception!
try { 
  classReader.readUTF8(47, charArray);
  fail("Expecting exception: ArrayIndexOutOfBoundsException");

} catch(ArrayIndexOutOfBoundsException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 25: 
ClassReader classReader = new ClassReader("wheel.asm.MethodWriter");
char[] charArray = new char[5];
// Undeclared exception!
try { 
  classReader.readConst(4, charArray);
  fail("Expecting exception: ArrayIndexOutOfBoundsException");

} catch(ArrayIndexOutOfBoundsException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 26: 
ClassReader classReader = new ClassReader("wheel.asm.MethodWriter");
char[] charArray = new char[9];
// Undeclared exception!
try { 
  classReader.readUTF8(4, charArray);
  fail("Expecting exception: ArrayIndexOutOfBoundsException");

} catch(ArrayIndexOutOfBoundsException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 27: 
ClassReader classReader = new ClassReader("java/lang/Object");
char[] charArray = new char[3];
// Undeclared exception!
try { 
  classReader.readConst(1, charArray);
  fail("Expecting exception: ArrayIndexOutOfBoundsException");

} catch(ArrayIndexOutOfBoundsException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 28: 
ClassReader classReader = new ClassReader("java/lang/Object");
classReader.readLong(1);
Test 29: 
ClassReader classReader = new ClassReader("java/lang/Object");
classReader.readInt(1);
Test 30: 
ClassReader classReader = new ClassReader("org.apache.commons.io.filefilter.DelegateFileFilter");
char[] charArray = new char[3];
classReader.readClass(821, charArray);
Test 31: 
ClassReader classReader = new ClassReader("java/lang/Object");
classReader.readUnsignedShort(198);
Test 32: 
ClassReader classReader = new ClassReader("java/lang/Object");
classReader.readByte(2);
Test 33: 
ClassReader classReader = new ClassReader("java/lang/Object");
ClassWriter classWriter = new ClassWriter(8);
ClassAdapter classAdapter = new ClassAdapter(classWriter);
classReader.accept((ClassVisitor) classAdapter, 76);
char[] charArray = new char[0];
classReader.readConst(76, charArray);
Test 34: 
ClassReader classReader = new ClassReader("java/lang/Object");
classReader.readInt(10);
Test 35: 
ClassReader classReader = new ClassReader("java/lang/Object");
Label[] labelArray = new Label[7];
classReader.readLabel(2, labelArray);
Test 36: 
ClassReader classReader = new ClassReader("java/lang/Object");
classReader.readLong(74);
Test 37: 
ClassReader classReader = new ClassReader("java/lang/Object");
classReader.readShort(1);
Test 38: 
ClassReader classReader = new ClassReader("org.apache.commons.io.filefilter.DelegateFileFilter");
char[] charArray = new char[8];
classReader.readUTF8(185, charArray);
Test 39: 
ClassReader classReader = new ClassReader("java/lang/Object");
classReader.readUnsignedShort(4);
Test 40: 
ClassReader classReader = new ClassReader("java/lang/Object");
ClassWriter classWriter = new ClassWriter(53);
classReader.copyPool(classWriter);

* Going to analyze the coverage criteria
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 53%
* Total number of goals: 817
* Number of covered goals: 433
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 65%
* Total number of goals: 868
* Number of covered goals: 565
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 52%
* Total number of goals: 40
* Number of covered goals: 21
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 21
* Number of covered goals: 21
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 51%
* Total number of goals: 817
* Number of covered goals: 415
* Generated 41 tests with total length 109
* Resulting test suite's coverage: 64% (average coverage for all fitness functions)
* Generating assertions
[MASTER] 12:04:12.733 [logback-1] WARN  TimeController - Already entered in phase: COVERAGE_ANALYSIS. This will mess up the timing calculations.
* Resulting test suite's mutation score: 31%
* Compiling and checking tests
[MASTER] 12:05:51.745 [logback-1] WARN  TimeController - Already entered in phase: ASSERTION_GENERATION. This will mess up the timing calculations.
Going to execute: removeTestsThatDoNotCompile
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 12:05:59.449 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar3699686762583815435.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 12:05:59.450 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3699686762583815435.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 12:05:59.505 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar3699686762583815435.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 12:05:59.505 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3699686762583815435.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 12:05:59.556 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar3699686762583815435.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 12:05:59.557 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3699686762583815435.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 12:05:59.601 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar3699686762583815435.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 12:05:59.602 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3699686762583815435.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 12:05:59.666 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar3699686762583815435.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 12:05:59.667 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3699686762583815435.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 12:05:59.727 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar3699686762583815435.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 12:05:59.728 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3699686762583815435.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 12:05:59.795 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar3699686762583815435.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 12:05:59.796 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3699686762583815435.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 12:05:59.869 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar3699686762583815435.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 12:05:59.871 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3699686762583815435.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 12:05:59.950 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar3699686762583815435.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 12:05:59.951 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3699686762583815435.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 12:06:00.117 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar3699686762583815435.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 12:06:00.119 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3699686762583815435.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 12:06:00.178 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar3699686762583815435.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 12:06:00.179 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3699686762583815435.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 12:06:00.221 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar3699686762583815435.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 12:06:00.222 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3699686762583815435.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 12:06:00.397 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar3699686762583815435.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 12:06:00.399 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3699686762583815435.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 12:06:00.550 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar3699686762583815435.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 12:06:00.551 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3699686762583815435.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 12:06:02.295 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar3699686762583815435.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 12:06:02.296 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3699686762583815435.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 12:06:02.366 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar3699686762583815435.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 12:06:02.368 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3699686762583815435.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 12:06:02.540 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar3699686762583815435.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 12:06:02.542 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3699686762583815435.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 12:06:02.720 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar3699686762583815435.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 12:06:02.721 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3699686762583815435.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 12:06:02.790 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar3699686762583815435.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 12:06:02.791 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3699686762583815435.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 12:06:02.890 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar3699686762583815435.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 12:06:02.892 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3699686762583815435.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 12:06:02.952 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar3699686762583815435.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 12:06:02.954 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3699686762583815435.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 12:06:03.005 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar3699686762583815435.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 12:06:03.007 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3699686762583815435.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 12:06:03.062 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar3699686762583815435.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 12:06:03.064 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3699686762583815435.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 12:06:03.117 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar3699686762583815435.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 12:06:03.118 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3699686762583815435.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 12:06:03.172 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar3699686762583815435.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 12:06:03.174 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3699686762583815435.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 12:06:03.235 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar3699686762583815435.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 12:06:03.237 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3699686762583815435.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 12:06:03.296 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar3699686762583815435.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 12:06:03.298 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3699686762583815435.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 12:06:03.382 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar3699686762583815435.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 12:06:03.383 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3699686762583815435.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 12:06:03.433 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar3699686762583815435.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 12:06:03.434 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3699686762583815435.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 12:06:03.480 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar3699686762583815435.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 12:06:03.481 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3699686762583815435.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 12:06:03.667 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar3699686762583815435.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 12:06:03.669 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3699686762583815435.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
** Write a test suite: 1 called: 1 to improve: false
** Write a test suite: 2 called: 2 to improve: false
** Write a test suite: 3 called: 3 to improve: false
** Write a test suite: 4 called: 4 to improve: false
** Write a test suite: 5 called: 5 to improve: false
** Write a test suite: 6 called: 6 to improve: false
** Write a test suite: 7 called: 7 to improve: false
** Write a test suite: 8 called: 8 to improve: false
** Write a test suite: 9 called: 9 to improve: false
** Write a test suite: 10 called: 10 to improve: false
** Write a test suite: 11 called: 11 to improve: false
** Write a test suite: 12 called: 12 to improve: false
** Write a test suite: 13 called: 13 to improve: false
** Write a test suite: 14 called: 14 to improve: false
** Write a test suite: 15 called: 15 to improve: false
** Write a test suite: 16 called: 16 to improve: false
** Write a test suite: 17 called: 17 to improve: false
** Write a test suite: 18 called: 18 to improve: false
** Write a test suite: 19 called: 19 to improve: false
** Write a test suite: 20 called: 20 to improve: false
** Write a test suite: 21 called: 21 to improve: false
** Write a test suite: 22 called: 22 to improve: false
** Write a test suite: 23 called: 23 to improve: false
** Write a test suite: 24 called: 24 to improve: false
** Write a test suite: 25 called: 25 to improve: false
** Write a test suite: 26 called: 26 to improve: false
** Write a test suite: 27 called: 27 to improve: false
** Write a test suite: 28 called: 28 to improve: false
** Write a test suite: 29 called: 29 to improve: false
** Write a test suite: 30 called: 30 to improve: false
[MASTER] 12:06:06.522 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar3699686762583815435.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 12:06:06.523 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3699686762583815435.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
** Write a test suite: 1 called: 1 to improve: false
** Write a test suite: 2 called: 2 to improve: false
** Write a test suite: 3 called: 3 to improve: false
** Write a test suite: 4 called: 4 to improve: false
** Write a test suite: 5 called: 5 to improve: false
** Write a test suite: 6 called: 6 to improve: false
** Write a test suite: 7 called: 7 to improve: false
** Write a test suite: 8 called: 8 to improve: false
** Write a test suite: 9 called: 9 to improve: false
** Write a test suite: 10 called: 10 to improve: false
** Write a test suite: 11 called: 11 to improve: false
** Write a test suite: 12 called: 12 to improve: false
** Write a test suite: 13 called: 13 to improve: false
** Write a test suite: 14 called: 14 to improve: false
** Write a test suite: 15 called: 15 to improve: false
** Write a test suite: 16 called: 16 to improve: false
** Write a test suite: 17 called: 17 to improve: false
** Write a test suite: 18 called: 18 to improve: false
** Write a test suite: 19 called: 19 to improve: false
** Write a test suite: 20 called: 20 to improve: false
** Write a test suite: 21 called: 21 to improve: false
** Write a test suite: 22 called: 22 to improve: false
** Write a test suite: 23 called: 23 to improve: false
** Write a test suite: 24 called: 24 to improve: false
** Write a test suite: 25 called: 25 to improve: false
** Write a test suite: 26 called: 26 to improve: false
** Write a test suite: 27 called: 27 to improve: false
** Write a test suite: 28 called: 28 to improve: false
** Write a test suite: 29 called: 29 to improve: false
** Write a test suite: 30 called: 30 to improve: false
[MASTER] 12:06:09.345 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar3699686762583815435.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 12:06:09.346 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar3699686762583815435.jar
* Writing tests to file
[MASTER] 12:06:09.348 [logback-1] WARN  TimeController - Already entered in phase: JUNIT_CHECK. This will mess up the timing calculations.
* Writing JUnit test case 'ClassReader_ESTest' to evosuite-tests
** Write a test suite: 2 called: 0 to improve: false
** Write a test suite: 3 called: 1 to improve: false
** Write a test suite: 5 called: 2 to improve: false
** Write a test suite: 6 called: 3 to improve: false
** Write a test suite: 7 called: 4 to improve: false
** Write a test suite: 8 called: 5 to improve: false
** Write a test suite: 11 called: 6 to improve: false
** Write a test suite: 16 called: 7 to improve: false
** Write a test suite: 17 called: 8 to improve: false
** Write a test suite: 19 called: 9 to improve: false
** Write a test suite: 21 called: 10 to improve: false
** Write a test suite: 25 called: 11 to improve: false
** Write a test suite: 26 called: 12 to improve: false
** Write a test suite: 27 called: 13 to improve: false
** Write a test suite: 29 called: 14 to improve: false
** Write a test suite: 31 called: 15 to improve: false
* Writing JUnit test case 'ClassReader_Original_ESTest' to evosuite-tests
** Write a test suite: 0 called: 0 to improve: false
** Write a test suite: 1 called: 1 to improve: false
** Write a test suite: 2 called: 2 to improve: false
** Write a test suite: 3 called: 3 to improve: false
** Write a test suite: 4 called: 4 to improve: false
** Write a test suite: 5 called: 5 to improve: false
** Write a test suite: 6 called: 6 to improve: false
** Write a test suite: 7 called: 7 to improve: false
** Write a test suite: 8 called: 8 to improve: false
** Write a test suite: 9 called: 9 to improve: false
** Write a test suite: 10 called: 10 to improve: false
** Write a test suite: 11 called: 11 to improve: false
** Write a test suite: 12 called: 12 to improve: false
** Write a test suite: 13 called: 13 to improve: false
** Write a test suite: 14 called: 14 to improve: false
** Write a test suite: 15 called: 15 to improve: false
** Write a test suite: 16 called: 16 to improve: false
** Write a test suite: 17 called: 17 to improve: false
** Write a test suite: 18 called: 18 to improve: false
** Write a test suite: 19 called: 19 to improve: false
** Write a test suite: 20 called: 20 to improve: false
** Write a test suite: 21 called: 21 to improve: false
** Write a test suite: 22 called: 22 to improve: false
** Write a test suite: 23 called: 23 to improve: false
** Write a test suite: 24 called: 24 to improve: false
** Write a test suite: 25 called: 25 to improve: false
** Write a test suite: 26 called: 26 to improve: false
** Write a test suite: 27 called: 27 to improve: false
** Write a test suite: 28 called: 28 to improve: false
** Write a test suite: 29 called: 29 to improve: false
** Write a test suite: 30 called: 30 to improve: false
* Done!

* Computation finished
