* EvoSuite 1.0.0-SNAPSHOT
* Going to generate test cases for class: wheel.asm.FieldWriter
* Starting Client-0
* Properties loaded from /home/roham/Results-Utestgen/dataset/SF110-new-res/80_wheelwebtool/evosuite-files/evosuite.properties
* Connecting to master process on port 8286
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 17:05:59.336 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 17:05:59.339 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 17:05:59.340 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 17:05:59.348 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.Temporal
[MASTER] 17:05:59.349 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.ZoneId
[MASTER] 17:05:59.350 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAccessor
[MASTER] 17:05:59.351 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalField
[MASTER] 17:05:59.352 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalUnit
[MASTER] 17:05:59.353 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAmount
[MASTER] 17:05:59.353 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.Clock
[MASTER] 17:05:59.356 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalQuery
[MASTER] 17:05:59.358 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.time.temporal.TemporalAdjuster
[MASTER] 17:05:59.361 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 17:05:59.394 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 17:05:59.396 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
* Finished analyzing classpath
* Generating tests for class wheel.asm.FieldWriter
* Test criteria:
  - Branch Coverage
  - Line Coverage
  - Method-Output Coverage
  - Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 212
* Using seed 1710349556871
* Starting evolution
[Progress:>                             0%] [Cov:>                                  0%]* Initial Number of Goals in DynaMOSA = 103 / 212
[Progress:>                             0%] [Cov:==>                                8%][Progress:>                             0%] [Cov:==>                                8%][Progress:>                             0%] [Cov:===============>                   44%][Progress:>                             0%] [Cov:========================>          71%][Progress:>                             1%] [Cov:============================>      81%][Progress:>                             1%] [Cov:=============================>     84%][Progress:>                             1%] [Cov:=============================>     84%][Progress:>                             1%] [Cov:=============================>     84%][Progress:>                             1%] [Cov:=============================>     85%][Progress:>                             1%] [Cov:=============================>     85%][Progress:>                             1%] [Cov:=============================>     85%][Progress:>                             1%] [Cov:=============================>     85%][Progress:>                             1%] [Cov:=============================>     85%][Progress:>                             1%] [Cov:=============================>     85%][Progress:>                             1%] [Cov:=============================>     85%][Progress:>                             2%] [Cov:=============================>     85%][Progress:>                             2%] [Cov:=============================>     85%][Progress:>                             2%] [Cov:=============================>     85%][Progress:>                             2%] [Cov:=============================>     85%][Progress:>                             2%] [Cov:=============================>     85%][Progress:>                             2%] [Cov:=============================>     85%][Progress:>                             2%] [Cov:=============================>     85%][Progress:>                             2%] [Cov:=============================>     85%][Progress:>                             2%] [Cov:=============================>     85%][Progress:>                             2%] [Cov:=============================>     85%][Progress:>                             2%] [Cov:=============================>     85%][Progress:>                             2%] [Cov:==============================>    86%][Progress:>                             2%] [Cov:==============================>    86%][Progress:>                             2%] [Cov:==============================>    86%][Progress:>                             2%] [Cov:==============================>    86%][Progress:>                             2%] [Cov:==============================>    86%][Progress:>                             2%] [Cov:==============================>    86%][Progress:>                             2%] [Cov:==============================>    86%][Progress:>                             3%] [Cov:==============================>    86%][Progress:>                             3%] [Cov:==============================>    88%][Progress:>                             3%] [Cov:==============================>    88%][Progress:>                             3%] [Cov:==============================>    88%][Progress:>                             3%] [Cov:==============================>    88%][Progress:>                             3%] [Cov:==============================>    88%][Progress:>                             3%] [Cov:==============================>    88%][Progress:>                             3%] [Cov:==============================>    88%][Progress:>                             3%] [Cov:==============================>    88%][Progress:>                             3%] [Cov:==============================>    88%][Progress:>                             3%] [Cov:==============================>    88%][Progress:>                             3%] [Cov:==============================>    88%][Progress:>                             3%] [Cov:==============================>    88%][Progress:>                             3%] [Cov:==============================>    88%][Progress:>                             3%] [Cov:==============================>    88%][Progress:>                             3%] [Cov:==============================>    88%][Progress:>                             3%] [Cov:==============================>    88%][Progress:>                             3%] [Cov:==============================>    88%][Progress:>                             3%] [Cov:==============================>    88%][Progress:>                             3%] [Cov:==============================>    88%][Progress:=>                            4%] [Cov:==============================>    88%][Progress:=>                            4%] [Cov:==============================>    88%][Progress:=>                            4%] [Cov:==============================>    88%][Progress:=>                            4%] [Cov:==============================>    88%][Progress:=>                            4%] [Cov:==============================>    88%][Progress:=>                            4%] [Cov:==============================>    88%][Progress:=>                            4%] [Cov:==============================>    88%][Progress:=>                            4%] [Cov:==============================>    88%][Progress:=>                            4%] [Cov:==============================>    88%][Progress:=>                            4%] [Cov:==============================>    88%][Progress:=>                            4%] [Cov:==============================>    88%][Progress:=>                            4%] [Cov:==============================>    88%][Progress:=>                            4%] [Cov:==============================>    88%][Progress:=>                            4%] [Cov:==============================>    88%][Progress:=>                            4%] [Cov:==============================>    88%][Progress:=>                            4%] [Cov:==============================>    88%][Progress:=>                            4%] [Cov:==============================>    88%][Progress:=>                            4%] [Cov:==============================>    88%][Progress:=>                            4%] [Cov:==============================>    88%][Progress:=>                            4%] [Cov:==============================>    88%][Progress:=>                            4%] [Cov:==============================>    88%][Progress:=>                            4%] [Cov:==============================>    88%][Progress:=>                            5%] [Cov:==============================>    88%][Progress:=>                            5%] [Cov:==============================>    88%][Progress:=>                            5%] [Cov:==============================>    88%][Progress:=>                            5%] [Cov:==============================>    88%][Progress:=>                            5%] [Cov:==============================>    88%][Progress:=>                            5%] [Cov:==============================>    88%][Progress:=>                            5%] [Cov:==============================>    88%][Progress:=>                            5%] [Cov:==============================>    88%][Progress:=>                            5%] [Cov:==============================>    88%][Progress:=>                            5%] [Cov:==============================>    88%][Progress:=>                            5%] [Cov:==============================>    88%][Progress:=>                            5%] [Cov:==============================>    88%][Progress:=>                            5%] [Cov:==============================>    88%][Progress:=>                            5%] [Cov:==============================>    88%][Progress:=>                            5%] [Cov:==============================>    88%][Progress:=>                            5%] [Cov:==============================>    88%][Progress:=>                            5%] [Cov:==============================>    88%][Progress:=>                            5%] [Cov:==============================>    88%][Progress:=>                            5%] [Cov:==============================>    88%][Progress:=>                            5%] [Cov:==============================>    88%][Progress:=>                            6%] [Cov:==============================>    88%][Progress:=>                            6%] [Cov:==============================>    88%][Progress:===>                          11%] [Cov:==============================>    88%][Progress:===>                          11%] [Cov:==============================>    88%][Progress:===>                          13%] [Cov:==============================>    88%][Progress:===>                          13%] [Cov:==============================>    88%][Progress:===>                          13%] [Cov:==============================>    88%][Progress:===>                          13%] [Cov:==============================>    88%][Progress:===>                          13%] [Cov:==============================>    88%][Progress:===>                          13%] [Cov:==============================>    88%][Progress:===>                          13%] [Cov:==============================>    88%][Progress:===>                          13%] [Cov:==============================>    88%][Progress:===>                          13%] [Cov:==============================>    88%][Progress:===>                          13%] [Cov:==============================>    88%][Progress:====>                         14%] [Cov:==============================>    88%][Progress:====>                         14%] [Cov:==============================>    88%][Progress:====>                         14%] [Cov:==============================>    88%][Progress:====>                         14%] [Cov:==============================>    88%][Progress:====>                         14%] [Cov:==============================>    88%][Progress:====>                         14%] [Cov:==============================>    88%][Progress:====>                         14%] [Cov:==============================>    88%][Progress:====>                         14%] [Cov:==============================>    88%][Progress:====>                         14%] [Cov:==============================>    88%][Progress:====>                         14%] [Cov:==============================>    88%][Progress:====>                         14%] [Cov:==============================>    88%][Progress:====>                         14%] [Cov:==============================>    88%][Progress:====>                         14%] [Cov:==============================>    88%][Progress:====>                         14%] [Cov:==============================>    88%][Progress:====>                         14%] [Cov:==============================>    88%][Progress:====>                         14%] [Cov:==============================>    88%][Progress:====>                         14%] [Cov:==============================>    88%][Progress:====>                         14%] [Cov:==============================>    88%][Progress:====>                         14%] [Cov:==============================>    88%][Progress:====>                         14%] [Cov:==============================>    88%][Progress:====>                         14%] [Cov:==============================>    88%][Progress:====>                         14%] [Cov:==============================>    88%][Progress:====>                         14%] [Cov:==============================>    88%][Progress:====>                         14%] [Cov:==============================>    88%][Progress:====>                         14%] [Cov:==============================>    88%][Progress:====>                         14%] [Cov:==============================>    88%][Progress:====>                         14%] [Cov:==============================>    88%][Progress:====>                         14%] [Cov:==============================>    88%][Progress:====>                         14%] [Cov:==============================>    88%][Progress:====>                         15%] [Cov:==============================>    88%][Progress:====>                         15%] [Cov:==============================>    88%][Progress:====>                         15%] [Cov:==============================>    88%][Progress:====>                         15%] [Cov:==============================>    88%][Progress:====>                         15%] [Cov:==============================>    88%][Progress:====>                         15%] [Cov:==============================>    88%][Progress:=====>                        17%] [Cov:==============================>    88%][Progress:=====>                        17%] [Cov:==============================>    88%][Progress:=====>                        17%] [Cov:==============================>    88%][Progress:=====>                        17%] [Cov:==============================>    88%][Progress:======>                       20%] [Cov:==============================>    88%][Progress:======>                       20%] [Cov:==============================>    88%][Progress:======>                       20%] [Cov:==============================>    88%][Progress:======>                       20%] [Cov:==============================>    88%][Progress:======>                       20%] [Cov:==============================>    88%][Progress:======>                       20%] [Cov:==============================>    88%][Progress:======>                       20%] [Cov:==============================>    88%][Progress:======>                       20%] [Cov:==============================>    88%][Progress:======>                       20%] [Cov:==============================>    88%][Progress:======>                       20%] [Cov:==============================>    88%][Progress:======>                       20%] [Cov:==============================>    88%][Progress:======>                       20%] [Cov:==============================>    88%][Progress:======>                       20%] [Cov:==============================>    88%][Progress:======>                       20%] [Cov:==============================>    88%][Progress:======>                       23%] [Cov:==============================>    88%][Progress:======>                       23%] [Cov:==============================>    88%][Progress:======>                       23%] [Cov:==============================>    88%][Progress:======>                       23%] [Cov:==============================>    88%][Progress:======>                       23%] [Cov:==============================>    88%][Progress:======>                       23%] [Cov:==============================>    88%][Progress:======>                       23%] [Cov:==============================>    88%][Progress:======>                       23%] [Cov:==============================>    88%][Progress:======>                       23%] [Cov:==============================>    88%][Progress:======>                       23%] [Cov:==============================>    88%][Progress:======>                       23%] [Cov:==============================>    88%][Progress:======>                       23%] [Cov:==============================>    88%][Progress:======>                       23%] [Cov:==============================>    88%][Progress:======>                       23%] [Cov:==============================>    88%][Progress:======>                       23%] [Cov:==============================>    88%][Progress:=======>                      24%] [Cov:==============================>    88%][Progress:=======>                      26%] [Cov:==============================>    88%][Progress:=======>                      26%] [Cov:==============================>    88%][Progress:=======>                      26%] [Cov:==============================>    88%][Progress:=======>                      26%] [Cov:==============================>    88%][Progress:=======>                      26%] [Cov:==============================>    88%][Progress:=======>                      26%] [Cov:==============================>    88%][Progress:=======>                      26%] [Cov:==============================>    88%][Progress:=======>                      26%] [Cov:==============================>    88%][Progress:=======>                      26%] [Cov:==============================>    88%][Progress:=======>                      26%] [Cov:==============================>    88%][Progress:=======>                      26%] [Cov:==============================>    88%][Progress:=======>                      26%] [Cov:==============================>    88%][Progress:========>                     27%] [Cov:==============================>    88%][Progress:========>                     27%] [Cov:==============================>    88%][Progress:========>                     27%] [Cov:==============================>    88%][Progress:========>                     27%] [Cov:==============================>    88%][Progress:========>                     27%] [Cov:==============================>    88%][Progress:========>                     27%] [Cov:==============================>    88%][Progress:========>                     27%] [Cov:==============================>    88%][Progress:========>                     27%] [Cov:==============================>    88%][Progress:========>                     27%] [Cov:==============================>    88%][Progress:========>                     27%] [Cov:==============================>    88%][Progress:========>                     27%] [Cov:==============================>    88%][Progress:========>                     27%] [Cov:==============================>    88%][Progress:========>                     27%] [Cov:==============================>    88%][Progress:========>                     27%] [Cov:==============================>    88%][Progress:========>                     27%] [Cov:==============================>    88%][Progress:========>                     27%] [Cov:==============================>    88%][Progress:========>                     27%] [Cov:==============================>    88%][Progress:========>                     27%] [Cov:==============================>    88%][Progress:========>                     27%] [Cov:==============================>    88%][Progress:========>                     27%] [Cov:==============================>    88%][Progress:========>                     27%] [Cov:==============================>    88%][Progress:========>                     27%] [Cov:==============================>    88%][Progress:========>                     27%] [Cov:==============================>    88%][Progress:========>                     27%] [Cov:==============================>    88%][Progress:========>                     27%] [Cov:==============================>    88%][Progress:========>                     27%] [Cov:==============================>    88%][Progress:========>                     27%] [Cov:==============================>    88%][Progress:========>                     27%] [Cov:==============================>    88%][Progress:=========>                    30%] [Cov:==============================>    88%][Progress:=========>                    30%] [Cov:==============================>    88%][Progress:=========>                    30%] [Cov:==============================>    88%][Progress:=========>                    30%] [Cov:==============================>    88%][Progress:=========>                    30%] [Cov:==============================>    88%][Progress:=========>                    30%] [Cov:==============================>    88%][Progress:=========>                    30%] [Cov:==============================>    88%][Progress:=========>                    30%] [Cov:==============================>    88%][Progress:=========>                    30%] [Cov:==============================>    88%][Progress:=========>                    30%] [Cov:==============================>    88%][Progress:=========>                    33%] [Cov:==============================>    88%][Progress:=========>                    33%] [Cov:==============================>    88%][Progress:==========>                   35%] [Cov:==============================>    88%][Progress:==========>                   35%] [Cov:==============================>    88%][Progress:==========>                   36%] [Cov:==============================>    88%][Progress:==========>                   36%] [Cov:==============================>    88%][Progress:==========>                   36%] [Cov:==============================>    88%][Progress:==========>                   36%] [Cov:==============================>    88%][Progress:==========>                   36%] [Cov:==============================>    88%][Progress:==========>                   36%] [Cov:==============================>    88%][Progress:==========>                   36%] [Cov:==============================>    88%][Progress:==========>                   36%] [Cov:==============================>    88%][Progress:==========>                   36%] [Cov:==============================>    88%][Progress:==========>                   36%] [Cov:==============================>    88%][Progress:==========>                   36%] [Cov:==============================>    88%][Progress:==========>                   36%] [Cov:==============================>    88%][Progress:==========>                   36%] [Cov:==============================>    88%][Progress:==========>                   36%] [Cov:==============================>    88%][Progress:==========>                   36%] [Cov:==============================>    88%][Progress:==========>                   36%] [Cov:==============================>    88%][Progress:==========>                   36%] [Cov:==============================>    88%][Progress:==========>                   36%] [Cov:==============================>    88%][Progress:==========>                   36%] [Cov:==============================>    88%][Progress:==========>                   36%] [Cov:==============================>    88%][Progress:==========>                   36%] [Cov:==============================>    88%][Progress:==========>                   36%] [Cov:==============================>    88%][Progress:==========>                   36%] [Cov:==============================>    88%][Progress:==========>                   36%] [Cov:==============================>    88%][Progress:==========>                   36%] [Cov:==============================>    88%][Progress:==========>                   36%] [Cov:==============================>    88%][Progress:==========>                   36%] [Cov:==============================>    88%][Progress:==========>                   36%] [Cov:==============================>    88%][Progress:==========>                   36%] [Cov:==============================>    88%][Progress:===========>                  37%] [Cov:==============================>    88%][Progress:===========>                  37%] [Cov:==============================>    88%][Progress:===========>                  37%] [Cov:==============================>    88%][Progress:===========>                  37%] [Cov:==============================>    88%][Progress:===========>                  37%] [Cov:==============================>    88%][Progress:===========>                  39%] [Cov:==============================>    88%][Progress:===========>                  39%] [Cov:==============================>    88%][Progress:===========>                  39%] [Cov:==============================>    88%][Progress:===========>                  39%] [Cov:==============================>    88%][Progress:===========>                  39%] [Cov:==============================>    88%][Progress:===========>                  39%] [Cov:==============================>    88%][Progress:===========>                  39%] [Cov:==============================>    88%][Progress:===========>                  39%] [Cov:==============================>    88%][Progress:============>                 40%] [Cov:==============================>    88%][Progress:============>                 40%] [Cov:==============================>    88%][Progress:============>                 40%] [Cov:==============================>    88%][Progress:============>                 40%] [Cov:==============================>    88%][Progress:============>                 40%] [Cov:==============================>    88%][Progress:============>                 40%] [Cov:==============================>    88%][Progress:============>                 40%] [Cov:==============================>    88%][Progress:============>                 40%] [Cov:==============================>    88%][Progress:============>                 40%] [Cov:==============================>    88%][Progress:============>                 40%] [Cov:==============================>    88%][Progress:============>                 40%] [Cov:==============================>    88%][Progress:============>                 40%] [Cov:==============================>    88%][Progress:============>                 40%] [Cov:==============================>    88%][Progress:============>                 40%] [Cov:==============================>    88%][Progress:============>                 40%] [Cov:==============================>    88%][Progress:============>                 40%] [Cov:==============================>    88%][Progress:============>                 40%] [Cov:==============================>    88%][Progress:============>                 40%] [Cov:==============================>    88%][Progress:============>                 40%] [Cov:==============================>    88%][Progress:============>                 40%] [Cov:==============================>    88%][Progress:============>                 40%] [Cov:==============================>    88%][Progress:============>                 40%] [Cov:==============================>    88%][Progress:============>                 41%] [Cov:==============================>    88%][Progress:============>                 41%] [Cov:==============================>    88%][Progress:============>                 41%] [Cov:==============================>    88%][Progress:============>                 41%] [Cov:==============================>    88%][Progress:============>                 41%] [Cov:==============================>    88%][Progress:============>                 41%] [Cov:==============================>    88%][Progress:============>                 41%] [Cov:==============================>    88%][Progress:============>                 41%] [Cov:==============================>    88%][Progress:============>                 41%] [Cov:==============================>    88%][Progress:============>                 41%] [Cov:==============================>    88%][Progress:============>                 41%] [Cov:==============================>    88%][Progress:============>                 41%] [Cov:==============================>    88%][Progress:============>                 41%] [Cov:==============================>    88%][Progress:============>                 41%] [Cov:==============================>    88%][Progress:=============>                44%] [Cov:==============================>    88%][Progress:=============>                44%] [Cov:==============================>    88%][Progress:=============>                44%] [Cov:==============================>    88%][Progress:=============>                44%] [Cov:==============================>    88%][Progress:=============>                44%] [Cov:==============================>    88%][Progress:=============>                44%] [Cov:==============================>    88%][Progress:=============>                44%] [Cov:==============================>    88%][Progress:=============>                44%] [Cov:==============================>    88%][Progress:=============>                44%] [Cov:==============================>    88%][Progress:=============>                44%] [Cov:==============================>    88%][Progress:=============>                44%] [Cov:==============================>    88%][Progress:=============>                44%] [Cov:==============================>    88%][Progress:=============>                44%] [Cov:==============================>    88%][Progress:=============>                44%] [Cov:==============================>    88%][Progress:=============>                44%] [Cov:==============================>    88%][Progress:=============>                44%] [Cov:==============================>    88%][Progress:=============>                44%] [Cov:==============================>    88%][Progress:=============>                44%] [Cov:==============================>    88%][Progress:=============>                44%] [Cov:==============================>    88%][Progress:=============>                44%] [Cov:==============================>    88%][Progress:=============>                44%] [Cov:==============================>    88%][Progress:=============>                44%] [Cov:==============================>    88%][Progress:=============>                44%] [Cov:==============================>    88%][Progress:=============>                44%] [Cov:==============================>    88%][Progress:=============>                44%] [Cov:==============================>    88%][Progress:=============>                44%] [Cov:==============================>    88%][Progress:=============>                44%] [Cov:==============================>    88%][Progress:=============>                44%] [Cov:==============================>    88%][Progress:=============>                44%] [Cov:==============================>    88%][Progress:=============>                44%] [Cov:==============================>    88%][Progress:=============>                45%] [Cov:==============================>    88%][Progress:=============>                45%] [Cov:==============================>    88%][Progress:=============>                45%] [Cov:==============================>    88%][Progress:=============>                45%] [Cov:==============================>    88%][Progress:=============>                45%] [Cov:==============================>    88%][Progress:=============>                45%] [Cov:==============================>    88%][Progress:=============>                45%] [Cov:==============================>    88%][Progress:=============>                45%] [Cov:==============================>    88%][Progress:=============>                45%] [Cov:==============================>    88%][Progress:=============>                45%] [Cov:==============================>    88%][Progress:=============>                45%] [Cov:==============================>    88%][Progress:=============>                45%] [Cov:==============================>    88%][Progress:=============>                45%] [Cov:==============================>    88%][Progress:==============>               47%] [Cov:==============================>    88%][Progress:==============>               47%] [Cov:==============================>    88%][Progress:==============>               47%] [Cov:==============================>    88%][Progress:==============>               48%] [Cov:==============================>    88%][Progress:==============>               48%] [Cov:==============================>    88%][Progress:==============>               48%] [Cov:==============================>    88%][Progress:==============>               48%] [Cov:==============================>    88%][Progress:==============>               48%] [Cov:==============================>    88%][Progress:==============>               48%] [Cov:==============================>    88%][Progress:==============>               48%] [Cov:==============================>    88%][Progress:==============>               48%] [Cov:==============================>    88%][Progress:===============>              50%] [Cov:==============================>    88%][Progress:===============>              50%] [Cov:==============================>    88%][Progress:===============>              50%] [Cov:==============================>    88%][Progress:===============>              50%] [Cov:==============================>    88%][Progress:===============>              51%] [Cov:==============================>    88%][Progress:===============>              51%] [Cov:==============================>    88%][Progress:===============>              51%] [Cov:==============================>    88%][Progress:===============>              51%] [Cov:==============================>    88%][Progress:===============>              51%] [Cov:==============================>    88%][Progress:===============>              51%] [Cov:==============================>    88%][Progress:===============>              51%] [Cov:==============================>    88%][Progress:===============>              51%] [Cov:==============================>    88%][Progress:===============>              51%] [Cov:==============================>    88%][Progress:===============>              51%] [Cov:==============================>    88%][Progress:===============>              51%] [Cov:==============================>    88%][Progress:================>             54%] [Cov:==============================>    88%][Progress:================>             54%] [Cov:==============================>    88%][Progress:================>             56%] [Cov:==============================>    88%][Progress:================>             56%] [Cov:==============================>    88%][Progress:================>             56%] [Cov:==============================>    88%][Progress:================>             56%] [Cov:==============================>    88%][Progress:================>             56%] [Cov:==============================>    88%][Progress:================>             56%] [Cov:==============================>    88%][Progress:=================>            59%] [Cov:==============================>    88%][Progress:=================>            59%] [Cov:==============================>    88%][Progress:=================>            59%] [Cov:==============================>    88%][Progress:=================>            59%] [Cov:==============================>    88%][Progress:=================>            59%] [Cov:==============================>    88%][Progress:=================>            59%] [Cov:==============================>    88%][Progress:=================>            59%] [Cov:==============================>    88%][Progress:=================>            59%] [Cov:==============================>    88%][Progress:=================>            59%] [Cov:==============================>    88%][Progress:=================>            59%] [Cov:==============================>    88%][Progress:=================>            59%] [Cov:==============================>    88%][Progress:=================>            59%] [Cov:==============================>    88%][Progress:=================>            59%] [Cov:==============================>    88%][Progress:=================>            59%] [Cov:==============================>    88%][Progress:=================>            59%] [Cov:==============================>    88%][Progress:==================>           60%] [Cov:==============================>    88%][Progress:==================>           60%] [Cov:==============================>    88%][Progress:==================>           60%] [Cov:==============================>    88%][Progress:==================>           60%] [Cov:==============================>    88%][Progress:==================>           60%] [Cov:==============================>    88%][Progress:==================>           60%] [Cov:==============================>    88%][Progress:==================>           60%] [Cov:==============================>    88%][Progress:==================>           60%] [Cov:==============================>    88%][Progress:==================>           60%] [Cov:==============================>    88%][Progress:==================>           60%] [Cov:==============================>    88%][Progress:==================>           60%] [Cov:==============================>    88%][Progress:==================>           60%] [Cov:==============================>    88%][Progress:==================>           60%] [Cov:==============================>    88%][Progress:==================>           60%] [Cov:==============================>    88%][Progress:==================>           60%] [Cov:==============================>    88%][Progress:==================>           60%] [Cov:==============================>    88%][Progress:==================>           60%] [Cov:==============================>    88%][Progress:==================>           60%] [Cov:==============================>    88%][Progress:==================>           60%] [Cov:==============================>    88%][Progress:==================>           60%] [Cov:==============================>    88%][Progress:==================>           60%] [Cov:==============================>    88%][Progress:==================>           60%] [Cov:==============================>    88%][Progress:==================>           60%] [Cov:==============================>    88%][Progress:==================>           60%] [Cov:==============================>    88%][Progress:==================>           60%] [Cov:==============================>    88%][Progress:==================>           60%] [Cov:==============================>    88%][Progress:==================>           63%] [Cov:==============================>    88%][Progress:==================>           63%] [Cov:==============================>    88%][Progress:==================>           63%] [Cov:==============================>    88%][Progress:===================>          66%] [Cov:==============================>    88%][Progress:===================>          66%] [Cov:==============================>    88%][Progress:===================>          66%] [Cov:==============================>    88%][Progress:===================>          66%] [Cov:==============================>    88%][Progress:===================>          66%] [Cov:==============================>    88%][Progress:===================>          66%] [Cov:==============================>    88%][Progress:===================>          66%] [Cov:==============================>    88%][Progress:===================>          66%] [Cov:==============================>    88%][Progress:===================>          66%] [Cov:==============================>    88%][Progress:===================>          66%] [Cov:==============================>    88%][Progress:===================>          66%] [Cov:==============================>    88%][Progress:===================>          66%] [Cov:==============================>    88%][Progress:===================>          66%] [Cov:==============================>    88%][Progress:===================>          66%] [Cov:==============================>    88%][Progress:===================>          66%] [Cov:==============================>    88%][Progress:===================>          66%] [Cov:==============================>    88%][Progress:===================>          66%] [Cov:==============================>    88%][Progress:===================>          66%] [Cov:==============================>    88%][Progress:===================>          66%] [Cov:==============================>    88%][Progress:===================>          66%] [Cov:==============================>    88%][Progress:====================>         69%] [Cov:==============================>    88%][Progress:====================>         69%] [Cov:==============================>    88%][Progress:====================>         69%] [Cov:==============================>    88%][Progress:====================>         69%] [Cov:==============================>    88%][Progress:====================>         69%] [Cov:==============================>    88%][Progress:====================>         69%] [Cov:==============================>    88%][Progress:====================>         69%] [Cov:==============================>    88%][Progress:====================>         69%] [Cov:==============================>    88%][Progress:====================>         69%] [Cov:==============================>    88%][Progress:====================>         69%] [Cov:==============================>    88%][Progress:====================>         69%] [Cov:==============================>    88%][Progress:====================>         69%] [Cov:==============================>    88%][Progress:====================>         69%] [Cov:==============================>    88%][Progress:====================>         69%] [Cov:==============================>    88%][Progress:====================>         69%] [Cov:==============================>    88%][Progress:====================>         69%] [Cov:==============================>    88%][Progress:====================>         69%] [Cov:==============================>    88%][Progress:====================>         69%] [Cov:==============================>    88%][Progress:====================>         69%] [Cov:==============================>    88%][Progress:====================>         69%] [Cov:==============================>    88%][Progress:====================>         69%] [Cov:==============================>    88%][Progress:=====================>        70%] [Cov:==============================>    88%][Progress:=====================>        70%] [Cov:==============================>    88%][Progress:=====================>        70%] [Cov:==============================>    88%][Progress:=====================>        70%] [Cov:==============================>    88%][Progress:=====================>        70%] [Cov:==============================>    88%][Progress:=====================>        70%] [Cov:==============================>    88%][Progress:=====================>        70%] [Cov:==============================>    88%][Progress:=====================>        70%] [Cov:==============================>    88%][Progress:=====================>        70%] [Cov:==============================>    88%][Progress:=====================>        70%] [Cov:==============================>    88%][Progress:=====================>        70%] [Cov:==============================>    88%][Progress:=====================>        70%] [Cov:==============================>    88%][Progress:=====================>        70%] [Cov:==============================>    88%][Progress:=====================>        70%] [Cov:==============================>    88%][Progress:=====================>        70%] [Cov:==============================>    88%][Progress:=====================>        70%] [Cov:==============================>    88%][Progress:=====================>        70%] [Cov:==============================>    88%][Progress:=====================>        70%] [Cov:==============================>    88%][Progress:=====================>        70%] [Cov:==============================>    88%][Progress:=====================>        70%] [Cov:==============================>    88%][Progress:=====================>        70%] [Cov:==============================>    88%][Progress:=====================>        70%] [Cov:==============================>    88%][Progress:=====================>        70%] [Cov:==============================>    88%][Progress:=====================>        70%] [Cov:==============================>    88%][Progress:=====================>        70%] [Cov:==============================>    88%][Progress:=====================>        70%] [Cov:==============================>    88%][Progress:=====================>        70%] [Cov:==============================>    88%][Progress:=====================>        70%] [Cov:==============================>    88%][Progress:=====================>        73%] [Cov:==============================>    88%][Progress:=====================>        73%] [Cov:==============================>    88%][Progress:=====================>        73%] [Cov:==============================>    88%][Progress:=====================>        73%] [Cov:==============================>    88%][Progress:=====================>        73%] [Cov:==============================>    88%][Progress:=====================>        73%] [Cov:==============================>    88%][Progress:=====================>        73%] [Cov:==============================>    88%][Progress:=====================>        73%] [Cov:==============================>    88%][Progress:=====================>        73%] [Cov:==============================>    88%][Progress:=====================>        73%] [Cov:==============================>    88%][Progress:=====================>        73%] [Cov:==============================>    88%][Progress:=====================>        73%] [Cov:==============================>    88%][Progress:=====================>        73%] [Cov:==============================>    88%][Progress:=====================>        73%] [Cov:==============================>    88%][Progress:=====================>        73%] [Cov:==============================>    88%][Progress:=====================>        73%] [Cov:==============================>    88%][Progress:=====================>        73%] [Cov:==============================>    88%][Progress:======================>       74%] [Cov:==============================>    88%][Progress:======================>       76%] [Cov:==============================>    88%][Progress:======================>       76%] [Cov:==============================>    88%][Progress:=======================>      79%] [Cov:==============================>    88%][Progress:=======================>      79%] [Cov:==============================>    88%][Progress:=======================>      79%] [Cov:==============================>    88%][Progress:=======================>      79%] [Cov:==============================>    88%][Progress:=======================>      79%] [Cov:==============================>    88%][Progress:========================>     81%] [Cov:==============================>    88%][Progress:========================>     81%] [Cov:==============================>    88%][Progress:========================>     81%] [Cov:==============================>    88%][Progress:=========================>    84%] [Cov:==============================>    88%][Progress:=========================>    84%] [Cov:==============================>    88%][Progress:=========================>    84%] [Cov:==============================>    88%][Progress:=========================>    84%] [Cov:==============================>    88%][Progress:=========================>    84%] [Cov:==============================>    88%][Progress:=========================>    84%] [Cov:==============================>    88%][Progress:=========================>    84%] [Cov:==============================>    88%][Progress:=========================>    84%] [Cov:==============================>    88%][Progress:=========================>    84%] [Cov:==============================>    88%][Progress:=========================>    84%] [Cov:==============================>    88%][Progress:=========================>    84%] [Cov:==============================>    88%][Progress:=========================>    84%] [Cov:==============================>    88%][Progress:=========================>    84%] [Cov:==============================>    88%][Progress:==========================>   87%] [Cov:==============================>    88%][Progress:==========================>   87%] [Cov:==============================>    88%][Progress:==========================>   87%] [Cov:==============================>    88%][Progress:==========================>   87%] [Cov:==============================>    88%][Progress:==========================>   87%] [Cov:==============================>    88%][Progress:==========================>   87%] [Cov:==============================>    88%][Progress:==========================>   87%] [Cov:==============================>    88%][Progress:==========================>   87%] [Cov:==============================>    88%][Progress:==========================>   87%] [Cov:==============================>    88%][Progress:==========================>   87%] [Cov:==============================>    88%][Progress:==========================>   87%] [Cov:==============================>    88%][Progress:==========================>   87%] [Cov:==============================>    88%][Progress:==========================>   87%] [Cov:==============================>    88%][Progress:==========================>   87%] [Cov:==============================>    88%][Progress:==========================>   87%] [Cov:==============================>    88%][Progress:==========================>   87%] [Cov:==============================>    88%][Progress:==========================>   87%] [Cov:==============================>    88%][Progress:==========================>   87%] [Cov:==============================>    88%][Progress:==========================>   87%] [Cov:==============================>    88%][Progress:==========================>   87%] [Cov:==============================>    88%][Progress:==========================>   87%] [Cov:==============================>    88%][Progress:==========================>   87%] [Cov:==============================>    88%][Progress:==========================>   87%] [Cov:==============================>    88%][Progress:==========================>   87%] [Cov:==============================>    88%][Progress:==========================>   87%] [Cov:==============================>    88%][Progress:==========================>   88%] [Cov:==============================>    88%][Progress:==========================>   88%] [Cov:==============================>    88%][Progress:==========================>   88%] [Cov:==============================>    88%][Progress:==========================>   88%] [Cov:==============================>    88%][Progress:==========================>   88%] [Cov:==============================>    88%][Progress:==========================>   88%] [Cov:==============================>    88%][Progress:==========================>   88%] [Cov:==============================>    88%][Progress:==========================>   88%] [Cov:==============================>    88%][Progress:==========================>   88%] [Cov:==============================>    88%][Progress:==========================>   88%] [Cov:==============================>    88%][Progress:==========================>   88%] [Cov:==============================>    88%][Progress:==========================>   88%] [Cov:==============================>    88%][Progress:==========================>   88%] [Cov:==============================>    88%][Progress:==========================>   88%] [Cov:==============================>    88%][Progress:==========================>   88%] [Cov:==============================>    88%][Progress:==========================>   88%] [Cov:==============================>    88%][Progress:===========================>  90%] [Cov:==============================>    88%][Progress:===========================>  91%] [Cov:==============================>    88%][Progress:===========================>  91%] [Cov:==============================>    88%][Progress:===========================>  91%] [Cov:==============================>    88%][Progress:===========================>  91%] [Cov:==============================>    88%][Progress:===========================>  91%] [Cov:==============================>    88%][Progress:===========================>  91%] [Cov:==============================>    88%][Progress:===========================>  91%] [Cov:==============================>    88%][Progress:===========================>  91%] [Cov:==============================>    88%][Progress:===========================>  91%] [Cov:==============================>    88%][Progress:===========================>  91%] [Cov:==============================>    88%][Progress:===========================>  91%] [Cov:==============================>    88%][Progress:===========================>  91%] [Cov:==============================>    88%][Progress:===========================>  91%] [Cov:==============================>    88%][Progress:============================> 94%] [Cov:==============================>    88%][Progress:============================> 94%] [Cov:==============================>    88%][Progress:============================> 94%] [Cov:==============================>    88%][Progress:============================> 96%] [Cov:==============================>    88%][Progress:============================> 96%] [Cov:==============================>    88%][Progress:============================> 96%] [Cov:==============================>    88%][Progress:============================> 96%] [Cov:==============================>    88%][Progress:============================> 96%] [Cov:==============================>    88%][Progress:============================> 96%] [Cov:==============================>    88%][Progress:============================> 96%] [Cov:==============================>    88%][Progress:============================> 96%] [Cov:==============================>    88%][Progress:============================> 96%] [Cov:==============================>    88%][Progress:============================> 96%] [Cov:==============================>    88%][Progress:============================> 96%] [Cov:==============================>    88%][Progress:=============================>97%] [Cov:==============================>    88%][Progress:=============================>97%] [Cov:==============================>    88%][Progress:=============================>97%] [Cov:==============================>    88%][Progress:=============================>97%] [Cov:==============================>    88%][Progress:=============================>97%] [Cov:==============================>    88%][Progress:=============================>97%] [Cov:==============================>    88%][Progress:=============================>99%] [Cov:==============================>    88%][Progress:=============================>99%] [Cov:==============================>    88%][Progress:==============================100%] [Cov:==============================>    88%]
* Search finished after 205s and 618 generations, 259209 statements, best individual has fitness: 3.0
* Generated before the refinement 14 tests with total length 58
statement is: wheel.asm.ClassWriter(I)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class wheel.asm.ClassWriter
statement code is: ClassWriter classWriter = new ClassWriter(65520)
statement is: wheel.asm.FieldWriter(Lwheel/asm/ClassWriter;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class wheel.asm.FieldWriter
statement code is: FieldWriter fieldWriter = new FieldWriter(arg0, 65520, "]pwW-p1[nyXn`!", "]pwW-p1[nyXn`!", "]pwW-p1[nyXn`!", "]pwW-p1[nyXn`!")
statement is: wheel.asm.Attribute(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class wheel.asm.Attribute
statement code is: Attribute attribute = new Attribute("]pwW-p1[nyXn`!")
statement is: visitAttribute(Lwheel/asm/Attribute;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: fieldWriter.visitAttribute(arg0)
statement is: getSize()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int size = fieldWriter.getSize()
test data is: ClassWriter classWriter = new ClassWriter(65520);
FieldWriter fieldWriter = new FieldWriter(classWriter, 65520, "]pwW-p1[nyXn`!", "]pwW-p1[nyXn`!", "]pwW-p1[nyXn`!", "]pwW-p1[nyXn`!");
Attribute attribute = new Attribute("]pwW-p1[nyXn`!");
fieldWriter.visitAttribute(attribute);
fieldWriter.getSize();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        FieldWriter fieldWriter = new FieldWriter(classWriter, 65520, "My Test String", "My Test String", "My Test String", "My Test String");
        Attribute attribute = new Attribute("My Test Attribute");
        fieldWriter.visitAttribute(attribute);
        fieldWriter.getSize();
    }
}
statement is: FieldWriter fieldWriter = new FieldWriter(classWriter, 65520, "My Test String", "My Test String", "My Test String", "My Test String"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Attribute attribute = new Attribute("My Test Attribute"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: fieldWriter.visitAttribute(attribute), class spoon.support.reflect.code.CtInvocationImpl
invocation is: fieldWriter.visitAttribute(attribute) target is: fieldWriter method is: visitAttribute(Attribute)
source statement: wheel.asm.FieldWriter(Lwheel/asm/ClassWriter;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)V callee: VariableReference: Statement 1, type wheel.asm.FieldWriterindex is: 5
Matched Method is: visitAttribute(Lwheel/asm/Attribute;)V
statement is: fieldWriter.getSize(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: fieldWriter.getSize() target is: fieldWriter method is: getSize()
source statement: wheel.asm.FieldWriter(Lwheel/asm/ClassWriter;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)V callee: VariableReference: Statement 1, type wheel.asm.FieldWriterindex is: 5
Matched Method is: getSize()I
TestCase is: int _int = 65520;
String string = "My Test String";
String string = "My Test String";
String string = "My Test String";
String string = "My Test String";
FieldWriter fieldWriter = new FieldWriter((ClassWriter) _int, (int) string, string, string, string, "]pwW-p1[nyXn`!");
String string = "My Test Attribute";
Attribute attribute = new Attribute(string);
((FieldWriter) string).visitAttribute(attribute);
((FieldWriter) string).getSize();

statement is: wheel.asm.ClassWriter(I)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class wheel.asm.ClassWriter
statement code is: ClassWriter classWriter = new ClassWriter(65532)
statement is: wheel.asm.FieldWriter(Lwheel/asm/ClassWriter;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class wheel.asm.FieldWriter
statement code is: FieldWriter fieldWriter = new FieldWriter(arg0, 65532, "dvy\"j?Y5C", "dvy\"j?Y5C", "dvy\"j?Y5C", "dvy\"j?Y5C")
statement is: visitEnd()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: fieldWriter.visitEnd()
test data is: ClassWriter classWriter = new ClassWriter(65532);
FieldWriter fieldWriter = new FieldWriter(classWriter, 65532, "dvy\"j?Y5C", "dvy\"j?Y5C", "dvy\"j?Y5C", "dvy\"j?Y5C");
fieldWriter.visitEnd();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        FieldWriter fieldWriter = new FieldWriter(classWriter, 65532, "John Doe", 30, "Male", "123 Main St");
        fieldWriter.visitEnd();
    }
}
statement is: FieldWriter fieldWriter = new FieldWriter(classWriter, 65532, "John Doe", 30, "Male", "123 Main St"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: fieldWriter.visitEnd(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: fieldWriter.visitEnd() target is: fieldWriter method is: visitEnd()
source statement: wheel.asm.FieldWriter(Lwheel/asm/ClassWriter;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)V callee: VariableReference: Statement 1, type wheel.asm.FieldWriterindex is: 5
Matched Method is: visitEnd()V
TestCase is: int _int = 65532;
String string = "John Doe";
int _int = 30;
String string = "Male";
String string = "123 Main St";
FieldWriter fieldWriter = new FieldWriter((ClassWriter) _int, (int) string, (String) _int, string, string, "dvy\"j?Y5C");
((FieldWriter) string).visitEnd();

statement is: wheel.asm.ClassWriter(I)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class wheel.asm.ClassWriter
statement code is: ClassWriter classWriter = new ClassWriter(4104)
statement is: visitField(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)Lwheel/asm/FieldVisitor; type is: class org.evosuite.testcase.statements.MethodStatement return type class wheel.asm.FieldWriter
statement code is: FieldWriter visitField = (FieldWriter)classWriter.visitField(4104, "", "", "", "")
statement is: wheel.asm.FieldWriter(Lwheel/asm/ClassWriter;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class wheel.asm.FieldWriter
statement code is: FieldWriter fieldWriter = new FieldWriter(arg0, 4104, "", "", "", "")
test data is: ClassWriter classWriter = new ClassWriter(4104);
classWriter.visitField(4104, "", "", "", "");
FieldWriter fieldWriter = new FieldWriter(classWriter, 4104, "", "", "", "");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        classWriter.visitField(4104, "myField", "int", "", "");
        FieldWriter fieldWriter = new FieldWriter(classWriter, 4104, "myField", "int", "", "");
    }
}
statement is: classWriter.visitField(4104, "myField", "int", "", ""), class spoon.support.reflect.code.CtInvocationImpl
invocation is: classWriter.visitField(4104, "myField", "int", "", "") target is: classWriter method is: visitField(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
statement is: FieldWriter fieldWriter = new FieldWriter(classWriter, 4104, "myField", "int", "", ""), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase is: int _int = 4104;
String string = "myField";
String string = "int";
String string = "";
String string = "";
FieldWriter fieldWriter = new FieldWriter((ClassWriter) _int, (int) string, string, string, string, "");

statement is: wheel.asm.ClassWriter(I)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class wheel.asm.ClassWriter
statement code is: ClassWriter classWriter = new ClassWriter(302)
statement is: wheel.asm.FieldWriter(Lwheel/asm/ClassWriter;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class wheel.asm.FieldWriter
statement code is: FieldWriter fieldWriter = new FieldWriter(arg0, 302, "Signature", "Signature", (String) null, (Object) null)
statement is: getSize()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int size = fieldWriter.getSize()
test data is: ClassWriter classWriter = new ClassWriter(302);
FieldWriter fieldWriter = new FieldWriter(classWriter, 302, "Signature", "Signature", (String) null, (Object) null);
fieldWriter.getSize();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        FieldWriter fieldWriter = new FieldWriter(classWriter, 302, "Signature", "Signature", ((String) (null)), ((Object) (null)));
        fieldWriter.getSize();
        // Improved test data:
        ClassWriter classWriter = new ClassWriter(302);
        FieldWriter fieldWriter = new FieldWriter(classWriter, 302, "Signature", "Signature", ((String) ("ABCDEFGHIJKLMNOPQRSTUVWXYZ")), ((Object) (null)));
        fieldWriter.getSize();
    }
}
statement is: FieldWriter fieldWriter = new FieldWriter(classWriter, 302, "Signature", "Signature", ((String) (null)), ((Object) (null))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: fieldWriter.getSize(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: fieldWriter.getSize() target is: fieldWriter method is: getSize()
source statement: wheel.asm.FieldWriter(Lwheel/asm/ClassWriter;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)V callee: VariableReference: Statement 1, type wheel.asm.FieldWriterindex is: 3
Matched Method is: getSize()I
statement is: // Improved test data:
ClassWriter classWriter = new ClassWriter(302), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: FieldWriter fieldWriter = new FieldWriter(classWriter, 302, "Signature", "Signature", ((String) ("ABCDEFGHIJKLMNOPQRSTUVWXYZ")), ((Object) (null))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: fieldWriter.getSize(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: fieldWriter.getSize() target is: fieldWriter method is: getSize()
source statement: wheel.asm.FieldWriter(Lwheel/asm/ClassWriter;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)V callee: VariableReference: Statement 1, type wheel.asm.FieldWriterindex is: 11
Matched Method is: getSize()I
TestCase is: int _int = 302;
String string = "Signature";
String string = "Signature";
FieldWriter fieldWriter = new FieldWriter((ClassWriter) _int, (int) string, string, "Signature", (String) null, (Object) null);
((FieldWriter) string).getSize();
int _int = 302;
ClassWriter classWriter = new ClassWriter(_int);
int _int = 302;
String string = "Signature";
String string = "Signature";
String string = "ABCDEFGHIJKLMNOPQRSTUVWXYZ";
FieldWriter fieldWriter = new FieldWriter(classWriter, _int, string, string, string, (Object) null);
((FieldWriter) string).getSize();

statement is: wheel.asm.ClassWriter(I)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class wheel.asm.ClassWriter
statement code is: ClassWriter classWriter = new ClassWriter(65532)
statement is: org.evosuite.testcase.statements.AssignmentStatement@3d42b602 type is: class org.evosuite.testcase.statements.AssignmentStatement return type int
statement code is: classWriter.version = 65532
statement is: wheel.asm.FieldWriter(Lwheel/asm/ClassWriter;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class wheel.asm.FieldWriter
statement code is: FieldWriter fieldWriter = new FieldWriter(arg0, 65532, "dvy\"j?Y5C", "dvy\"j?Y5C", "dvy\"j?Y5C", "dvy\"j?Y5C")
statement is: getSize()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int size = fieldWriter.getSize()
test data is: ClassWriter classWriter = new ClassWriter(65532);
classWriter.version = 65532;
FieldWriter fieldWriter = new FieldWriter(classWriter, 65532, "dvy\"j?Y5C", "dvy\"j?Y5C", "dvy\"j?Y5C", "dvy\"j?Y5C");
fieldWriter.getSize();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        classWriter.version = 65532;
        FieldWriter fieldWriter = new FieldWriter(classWriter, 65532, "dvy\"\u007fj?Y5C", "dvy\"\u007fj?Y5C", "dvy\"\u007fj?Y5C", "dvy\"\u007fj?Y5C");
        fieldWriter.getSize();
        // Test data improved by using more descriptive and representative values for the variables
        ClassWriter classWriter = new ClassWriter(65532);
        classWriter.version = 65532;
        FieldWriter fieldWriter = new FieldWriter(classWriter, 65532, "com.example.MyClass", "myField", "int", "10");
        fieldWriter.getSize();
    }
}
statement is: classWriter.version = 65532, class spoon.support.reflect.code.CtAssignmentImpl
statement is: FieldWriter fieldWriter = new FieldWriter(classWriter, 65532, "dvy\"\u007fj?Y5C", "dvy\"\u007fj?Y5C", "dvy\"\u007fj?Y5C", "dvy\"\u007fj?Y5C"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: fieldWriter.getSize(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: fieldWriter.getSize() target is: fieldWriter method is: getSize()
source statement: wheel.asm.FieldWriter(Lwheel/asm/ClassWriter;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)V callee: VariableReference: Statement 2, type wheel.asm.FieldWriterindex is: 5
Matched Method is: getSize()I
statement is: // Test data improved by using more descriptive and representative values for the variables
ClassWriter classWriter = new ClassWriter(65532), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: classWriter.version = 65532, class spoon.support.reflect.code.CtAssignmentImpl
statement is: FieldWriter fieldWriter = new FieldWriter(classWriter, 65532, "com.example.MyClass", "myField", "int", "10"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: fieldWriter.getSize(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: fieldWriter.getSize() target is: fieldWriter method is: getSize()
source statement: wheel.asm.FieldWriter(Lwheel/asm/ClassWriter;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)V callee: VariableReference: Statement 2, type wheel.asm.FieldWriterindex is: 14
Matched Method is: getSize()I
TestCase is: int _int = 65532;
String string = "dvy\"j?Y5C";
String string = "dvy\"j?Y5C";
String string = "dvy\"j?Y5C";
String string = "dvy\"j?Y5C";
FieldWriter fieldWriter = new FieldWriter((ClassWriter) _int, (int) string, string, string, string, "dvy\"j?Y5C");
((FieldWriter) string).getSize();
int _int = 65532;
ClassWriter classWriter = new ClassWriter(_int);
int _int = 65532;
String string = "com.example.MyClass";
String string = "myField";
String string = "int";
String string = "10";
FieldWriter fieldWriter = new FieldWriter(classWriter, _int, string, string, string, string);
((FieldWriter) string).getSize();

statement is: wheel.asm.ClassWriter(I)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class wheel.asm.ClassWriter
statement code is: ClassWriter classWriter = new ClassWriter((-1))
statement is: wheel.asm.FieldWriter(Lwheel/asm/ClassWriter;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class wheel.asm.FieldWriter
statement code is: FieldWriter fieldWriter = new FieldWriter(arg0, (-1), "", "", "", "")
statement is: getSize()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int size = fieldWriter.getSize()
test data is: ClassWriter classWriter = new ClassWriter((-1));
FieldWriter fieldWriter = new FieldWriter(classWriter, (-1), "", "", "", "");
fieldWriter.getSize();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        FieldWriter fieldWriter = new FieldWriter(classWriter, 2023, "Name", "Description", "Type", "Value");
        fieldWriter.getSize();
    }
}
statement is: FieldWriter fieldWriter = new FieldWriter(classWriter, 2023, "Name", "Description", "Type", "Value"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: fieldWriter.getSize(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: fieldWriter.getSize() target is: fieldWriter method is: getSize()
source statement: wheel.asm.FieldWriter(Lwheel/asm/ClassWriter;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)V callee: VariableReference: Statement 1, type wheel.asm.FieldWriterindex is: 5
Matched Method is: getSize()I
TestCase is: int _int = 2023;
String string = "Name";
String string = "Description";
String string = "Type";
String string = "Value";
FieldWriter fieldWriter = new FieldWriter((ClassWriter) _int, (int) string, string, string, string, "");
((FieldWriter) string).getSize();

statement is: wheel.asm.ClassWriter(I)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class wheel.asm.ClassWriter
statement code is: ClassWriter classWriter = new ClassWriter(65533)
statement is: wheel.asm.FieldWriter(Lwheel/asm/ClassWriter;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class wheel.asm.FieldWriter
statement code is: FieldWriter fieldWriter = new FieldWriter(arg0, 65533, "", "", "", "")
statement is: visitAnnotation(Ljava/lang/String;Z)Lwheel/asm/AnnotationVisitor; type is: class org.evosuite.testcase.statements.MethodStatement return type class wheel.asm.AnnotationWriter
statement code is: AnnotationWriter visitAnnotation = (AnnotationWriter)fieldWriter.visitAnnotation("", true)
statement is: getSize()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int size = fieldWriter.getSize()
test data is: ClassWriter classWriter = new ClassWriter(65533);
FieldWriter fieldWriter = new FieldWriter(classWriter, 65533, "", "", "", "");
fieldWriter.visitAnnotation("", true);
fieldWriter.getSize();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        FieldWriter fieldWriter = new FieldWriter(classWriter, 65533, "myStringField", "java.lang.String", "myStringFieldDescription", "", "John");
        fieldWriter.visitAnnotation("MyCustomAnnotation", true);
        fieldWriter.getSize();
    }
}
statement is: FieldWriter fieldWriter = new FieldWriter(classWriter, 65533, "myStringField", "java.lang.String", "myStringFieldDescription", "", "John"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: fieldWriter.visitAnnotation("MyCustomAnnotation", true), class spoon.support.reflect.code.CtInvocationImpl
invocation is: fieldWriter.visitAnnotation("MyCustomAnnotation", true) target is: fieldWriter method is: visitAnnotation(java.lang.String,boolean)
statement is: fieldWriter.getSize(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: fieldWriter.getSize() target is: fieldWriter method is: getSize()
statement is: wheel.asm.ClassWriter(I)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class wheel.asm.ClassWriter
statement code is: ClassWriter classWriter = new ClassWriter(65533)
statement is: wheel.asm.FieldWriter(Lwheel/asm/ClassWriter;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class wheel.asm.FieldWriter
statement code is: FieldWriter fieldWriter = new FieldWriter(arg0, 65533, "", "", "", "")
statement is: visitAnnotation(Ljava/lang/String;Z)Lwheel/asm/AnnotationVisitor; type is: class org.evosuite.testcase.statements.MethodStatement return type class wheel.asm.AnnotationWriter
statement code is: AnnotationWriter visitAnnotation = (AnnotationWriter)fieldWriter.visitAnnotation("", false)
statement is: getSize()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int size = fieldWriter.getSize()
test data is: ClassWriter classWriter = new ClassWriter(65533);
FieldWriter fieldWriter = new FieldWriter(classWriter, 65533, "", "", "", "");
fieldWriter.visitAnnotation("", false);
fieldWriter.getSize();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        FieldWriter fieldWriter = new FieldWriter(classWriter, 65533, "name", "java.lang.String", "value", "\"Hello World!\"");
        fieldWriter.visitAnnotation("org.junit.Test", false);
        fieldWriter.getSize();
    }
}
statement is: FieldWriter fieldWriter = new FieldWriter(classWriter, 65533, "name", "java.lang.String", "value", "\"Hello World!\""), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: fieldWriter.visitAnnotation("org.junit.Test", false), class spoon.support.reflect.code.CtInvocationImpl
invocation is: fieldWriter.visitAnnotation("org.junit.Test", false) target is: fieldWriter method is: visitAnnotation(java.lang.String,boolean)
source statement: wheel.asm.FieldWriter(Lwheel/asm/ClassWriter;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)V callee: VariableReference: Statement 1, type wheel.asm.FieldWriterindex is: 5
Matched Method is: visitAnnotation(Ljava/lang/String;Z)Lwheel/asm/AnnotationVisitor;
statement is: fieldWriter.getSize(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: fieldWriter.getSize() target is: fieldWriter method is: getSize()
source statement: wheel.asm.FieldWriter(Lwheel/asm/ClassWriter;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)V callee: VariableReference: Statement 1, type wheel.asm.FieldWriterindex is: 5
Matched Method is: getSize()I
TestCase is: int _int = 65533;
String string = "name";
String string = "java.lang.String";
String string = "value";
String string = "\"Hello World!\"";
FieldWriter fieldWriter = new FieldWriter((ClassWriter) _int, (int) string, string, string, string, "");
String string = "org.junit.Test";
boolean _boolean = false;
((FieldWriter) string).visitAnnotation(string, _boolean);
((FieldWriter) string).getSize();

statement is: wheel.asm.ClassWriter(I)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class wheel.asm.ClassWriter
statement code is: ClassWriter classWriter = new ClassWriter(358)
statement is: wheel.asm.FieldWriter(Lwheel/asm/ClassWriter;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class wheel.asm.FieldWriter
statement code is: FieldWriter fieldWriter = new FieldWriter(arg0, 2, "so[d?}5$'!eBy", "", (String) null, (Object) null)
statement is: org.evosuite.testcase.statements.FieldStatement@e4d8374 type is: class org.evosuite.testcase.statements.FieldStatement return type class wheel.asm.ByteVector
statement code is: ByteVector byteVector = classWriter.pool
statement is: put(Lwheel/asm/ByteVector;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: fieldWriter.put(arg0)
test data is: ClassWriter classWriter = new ClassWriter(358);
FieldWriter fieldWriter = new FieldWriter(classWriter, 2, "so[d?}5$'!eBy", "", (String) null, (Object) null);
ByteVector byteVector = classWriter.pool;
fieldWriter.put(byteVector);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        FieldWriter fieldWriter = new FieldWriter(classWriter, 2, "age", "int", null, null);
        ByteVector byteVector = classWriter.pool;
        fieldWriter.put(byteVector);
    }
}
statement is: FieldWriter fieldWriter = new FieldWriter(classWriter, 2, "age", "int", null, null), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: ByteVector byteVector = classWriter.pool, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: classWriter.pool is classWriter
CtField is: wheel.asm.ByteVector wheel.asm.ClassWriter.pool ByteVector pool
statement is: fieldWriter.put(byteVector), class spoon.support.reflect.code.CtInvocationImpl
invocation is: fieldWriter.put(byteVector) target is: fieldWriter method is: put(ByteVector)
source statement: wheel.asm.FieldWriter(Lwheel/asm/ClassWriter;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)V callee: VariableReference: Statement 1, type wheel.asm.FieldWriterindex is: 3
Matched Method is: put(Lwheel/asm/ByteVector;)V
i 0 Parameters size() 0 Num of Method Parameters: 1
TestCase is: int _int = 2;
String string = "age";
String string = "int";
FieldWriter fieldWriter = new FieldWriter((ClassWriter) _int, (int) string, string, "", (String) null, (Object) null);
ByteVector byteVector = null;
((FieldWriter) string).put(byteVector);

statement is: wheel.asm.ClassWriter(I)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class wheel.asm.ClassWriter
statement code is: ClassWriter classWriter = new ClassWriter(65532)
statement is: org.evosuite.testcase.statements.AssignmentStatement@a8b5d17f type is: class org.evosuite.testcase.statements.AssignmentStatement return type int
statement code is: classWriter.version = 65532
statement is: wheel.asm.FieldWriter(Lwheel/asm/ClassWriter;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class wheel.asm.FieldWriter
statement code is: FieldWriter fieldWriter = new FieldWriter(arg0, 65532, "dvy\"j?Y5C", "dvy\"j?Y5C", "dvy\"j?Y5C", "dvy\"j?Y5C")
statement is: wheel.asm.ByteVector()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class wheel.asm.ByteVector
statement code is: ByteVector byteVector = new ByteVector()
statement is: put(Lwheel/asm/ByteVector;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: fieldWriter.put(arg0)
test data is: ClassWriter classWriter = new ClassWriter(65532);
classWriter.version = 65532;
FieldWriter fieldWriter = new FieldWriter(classWriter, 65532, "dvy\"j?Y5C", "dvy\"j?Y5C", "dvy\"j?Y5C", "dvy\"j?Y5C");
ByteVector byteVector = new ByteVector();
fieldWriter.put(byteVector);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        classWriter.version = 65532;
        FieldWriter fieldWriter = new FieldWriter(classWriter, 65532, "dvy\"\u007fj?Y5C", "dvy\"\u007fj?Y5C", "dvy\"\u007fj?Y5C", "dvy\"\u007fj?Y5C");
        ByteVector byteVector = new ByteVector();
        fieldWriter.put(byteVector);
    }
}
statement is: classWriter.version = 65532, class spoon.support.reflect.code.CtAssignmentImpl
statement is: FieldWriter fieldWriter = new FieldWriter(classWriter, 65532, "dvy\"\u007fj?Y5C", "dvy\"\u007fj?Y5C", "dvy\"\u007fj?Y5C", "dvy\"\u007fj?Y5C"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: ByteVector byteVector = new ByteVector(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: fieldWriter.put(byteVector), class spoon.support.reflect.code.CtInvocationImpl
invocation is: fieldWriter.put(byteVector) target is: fieldWriter method is: put(ByteVector)
source statement: wheel.asm.FieldWriter(Lwheel/asm/ClassWriter;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)V callee: VariableReference: Statement 2, type wheel.asm.FieldWriterindex is: 5
Matched Method is: put(Lwheel/asm/ByteVector;)V
TestCase is: int _int = 65532;
String string = "dvy\"j?Y5C";
String string = "dvy\"j?Y5C";
String string = "dvy\"j?Y5C";
String string = "dvy\"j?Y5C";
FieldWriter fieldWriter = new FieldWriter((ClassWriter) _int, (int) string, string, string, string, "dvy\"j?Y5C");
ByteVector byteVector = new ByteVector();
((FieldWriter) string).put(byteVector);

statement is: wheel.asm.ClassWriter(I)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class wheel.asm.ClassWriter
statement code is: ClassWriter classWriter = new ClassWriter(358)
statement is: wheel.asm.FieldWriter(Lwheel/asm/ClassWriter;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class wheel.asm.FieldWriter
statement code is: FieldWriter fieldWriter = new FieldWriter(arg0, (-3534), "", "", "so[d?}5$'!eBy", "")
statement is: wheel.asm.ByteVector()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class wheel.asm.ByteVector
statement code is: ByteVector byteVector = new ByteVector()
statement is: put(Lwheel/asm/ByteVector;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: fieldWriter.put(arg0)
test data is: ClassWriter classWriter = new ClassWriter(358);
FieldWriter fieldWriter = new FieldWriter(classWriter, (-3534), "", "", "so[d?}5$'!eBy", "");
ByteVector byteVector = new ByteVector();
fieldWriter.put(byteVector);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        FieldWriter fieldWriter = new FieldWriter(classWriter, fieldAccessFlags, fieldName, fieldDescriptor, fieldValue);
        ByteVector byteVector = new ByteVector();
        fieldWriter.put(byteVector);
    }
}
statement is: FieldWriter fieldWriter = new FieldWriter(classWriter, fieldAccessFlags, fieldName, fieldDescriptor, fieldValue), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: ByteVector byteVector = new ByteVector(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: fieldWriter.put(byteVector), class spoon.support.reflect.code.CtInvocationImpl
invocation is: fieldWriter.put(byteVector) target is: fieldWriter method is: put(ByteVector)
TestCase is: ByteVector byteVector = new ByteVector();

statement is: wheel.asm.ClassWriter(I)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class wheel.asm.ClassWriter
statement code is: ClassWriter classWriter = new ClassWriter(65535)
statement is: wheel.asm.FieldWriter(Lwheel/asm/ClassWriter;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class wheel.asm.FieldWriter
statement code is: FieldWriter fieldWriter = new FieldWriter(arg0, 2, "(&.DBlnsK>", "6.,LZ}C48^4", "6.,LZ}C48^4", "6.,LZ}C48^4")
statement is: visitAnnotation(Ljava/lang/String;Z)Lwheel/asm/AnnotationVisitor; type is: class org.evosuite.testcase.statements.MethodStatement return type class wheel.asm.AnnotationWriter
statement code is: AnnotationWriter visitAnnotation = (AnnotationWriter)fieldWriter.visitAnnotation("(&.DBlnsK>", true)
statement is: wheel.asm.ByteVector()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class wheel.asm.ByteVector
statement code is: ByteVector byteVector = new ByteVector()
statement is: put(Lwheel/asm/ByteVector;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: fieldWriter.put(arg0)
test data is: ClassWriter classWriter = new ClassWriter(65535);
FieldWriter fieldWriter = new FieldWriter(classWriter, 2, "(&.DBlnsK>", "6.,LZ}C48^4", "6.,LZ}C48^4", "6.,LZ}C48^4");
fieldWriter.visitAnnotation("(&.DBlnsK>", true);
ByteVector byteVector = new ByteVector();
fieldWriter.put(byteVector);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        ByteVector byteVector = new ByteVector();
        fieldWriter.put(byteVector);
    }
}
statement is: ByteVector byteVector = new ByteVector(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: fieldWriter.put(byteVector), class spoon.support.reflect.code.CtInvocationImpl
invocation is: fieldWriter.put(byteVector) target is: fieldWriter method is: put(ByteVector)
TestCase is: ByteVector byteVector = new ByteVector();

statement is: wheel.asm.ClassWriter(I)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class wheel.asm.ClassWriter
statement code is: ClassWriter classWriter = new ClassWriter(65535)
statement is: wheel.asm.FieldWriter(Lwheel/asm/ClassWriter;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class wheel.asm.FieldWriter
statement code is: FieldWriter fieldWriter = new FieldWriter(arg0, 2, "(&.DBlnsK>", "6.,LZ}C48^4", "6.,LZ}C48^4", "6.,LZ}C48^4")
statement is: visitAnnotation(Ljava/lang/String;Z)Lwheel/asm/AnnotationVisitor; type is: class org.evosuite.testcase.statements.MethodStatement return type class wheel.asm.AnnotationWriter
statement code is: AnnotationWriter visitAnnotation = (AnnotationWriter)fieldWriter.visitAnnotation("6.,LZ}C48^4", false)
statement is: wheel.asm.ByteVector()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class wheel.asm.ByteVector
statement code is: ByteVector byteVector = new ByteVector()
statement is: put(Lwheel/asm/ByteVector;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: fieldWriter.put(arg0)
test data is: ClassWriter classWriter = new ClassWriter(65535);
FieldWriter fieldWriter = new FieldWriter(classWriter, 2, "(&.DBlnsK>", "6.,LZ}C48^4", "6.,LZ}C48^4", "6.,LZ}C48^4");
fieldWriter.visitAnnotation("6.,LZ}C48^4", false);
ByteVector byteVector = new ByteVector();
fieldWriter.put(byteVector);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        FieldWriter fieldWriter = new FieldWriter(classWriter, 2, "A unique name for this field", "A descriptive string value", "A descriptive integer value", "A descriptive boolean value");
        fieldWriter.visitAnnotation("A unique annotation type", false);
        ByteVector byteVector = new ByteVector();
        fieldWriter.put(byteVector);
    }
}
statement is: FieldWriter fieldWriter = new FieldWriter(classWriter, 2, "A unique name for this field", "A descriptive string value", "A descriptive integer value", "A descriptive boolean value"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: fieldWriter.visitAnnotation("A unique annotation type", false), class spoon.support.reflect.code.CtInvocationImpl
invocation is: fieldWriter.visitAnnotation("A unique annotation type", false) target is: fieldWriter method is: visitAnnotation(java.lang.String,boolean)
source statement: wheel.asm.FieldWriter(Lwheel/asm/ClassWriter;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)V callee: VariableReference: Statement 1, type wheel.asm.FieldWriterindex is: 5
Matched Method is: visitAnnotation(Ljava/lang/String;Z)Lwheel/asm/AnnotationVisitor;
statement is: ByteVector byteVector = new ByteVector(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: fieldWriter.put(byteVector), class spoon.support.reflect.code.CtInvocationImpl
invocation is: fieldWriter.put(byteVector) target is: fieldWriter method is: put(ByteVector)
source statement: wheel.asm.FieldWriter(Lwheel/asm/ClassWriter;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)V callee: VariableReference: Statement 1, type wheel.asm.FieldWriterindex is: 5
Matched Method is: put(Lwheel/asm/ByteVector;)V
TestCase is: int _int = 2;
String string = "A unique name for this field";
String string = "A descriptive string value";
String string = "A descriptive integer value";
String string = "A descriptive boolean value";
FieldWriter fieldWriter = new FieldWriter((ClassWriter) _int, (int) string, string, string, string, "6.,LZ}C48^4");
String string = "A unique annotation type";
boolean _boolean = false;
((FieldWriter) string).visitAnnotation(string, _boolean);
ByteVector byteVector = new ByteVector();
((FieldWriter) string).put(byteVector);

statement is: wheel.asm.ClassWriter(I)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class wheel.asm.ClassWriter
statement code is: ClassWriter classWriter = new ClassWriter(65532)
statement is: wheel.asm.FieldWriter(Lwheel/asm/ClassWriter;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class wheel.asm.FieldWriter
statement code is: FieldWriter fieldWriter = new FieldWriter(arg0, 65532, "dvy\"j?Y5C", "dvy\"j?Y5C", "dvy\"j?Y5C", "dvy\"j?Y5C")
statement is: wheel.asm.Attribute(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class wheel.asm.Attribute
statement code is: Attribute attribute = new Attribute("dvy\"j?Y5C")
statement is: visitAttribute(Lwheel/asm/Attribute;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: fieldWriter.visitAttribute(arg0)
statement is: wheel.asm.ByteVector()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class wheel.asm.ByteVector
statement code is: ByteVector byteVector = new ByteVector()
statement is: put(Lwheel/asm/ByteVector;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: fieldWriter.put(arg0)
test data is: ClassWriter classWriter = new ClassWriter(65532);
FieldWriter fieldWriter = new FieldWriter(classWriter, 65532, "dvy\"j?Y5C", "dvy\"j?Y5C", "dvy\"j?Y5C", "dvy\"j?Y5C");
Attribute attribute = new Attribute("dvy\"j?Y5C");
fieldWriter.visitAttribute(attribute);
ByteVector byteVector = new ByteVector();
fieldWriter.put(byteVector);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        FieldWriter fieldWriter = new FieldWriter(classWriter, ACC_PUBLIC | ACC_STATIC, "myField", "int", "I", "1234");
        Attribute attribute = new Attribute("myAttribute", "myValue");
        fieldWriter.visitAttribute(attribute);
        ByteVector byteVector = new ByteVector();
        fieldWriter.put(byteVector);
    }
}
statement is: FieldWriter fieldWriter = new FieldWriter(classWriter, ACC_PUBLIC | ACC_STATIC, "myField", "int", "I", "1234"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Attribute attribute = new Attribute("myAttribute", "myValue"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: fieldWriter.visitAttribute(attribute), class spoon.support.reflect.code.CtInvocationImpl
invocation is: fieldWriter.visitAttribute(attribute) target is: fieldWriter method is: visitAttribute(Attribute)
source statement: wheel.asm.FieldWriter(Lwheel/asm/ClassWriter;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)V callee: VariableReference: Statement 1, type wheel.asm.FieldWriterindex is: 4
Matched Method is: visitAttribute(Lwheel/asm/Attribute;)V
i 0 Parameters size() 0 Num of Method Parameters: 1
statement is: ByteVector byteVector = new ByteVector(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: fieldWriter.put(byteVector), class spoon.support.reflect.code.CtInvocationImpl
invocation is: fieldWriter.put(byteVector) target is: fieldWriter method is: put(ByteVector)
source statement: wheel.asm.FieldWriter(Lwheel/asm/ClassWriter;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)V callee: VariableReference: Statement 1, type wheel.asm.FieldWriterindex is: 4
Matched Method is: put(Lwheel/asm/ByteVector;)V
TestCase is: String string = "myField";
String string = "int";
String string = "I";
String string = "1234";
FieldWriter fieldWriter = new FieldWriter((ClassWriter) string, (int) string, string, string, "dvy\"j?Y5C", "dvy\"j?Y5C");
Attribute attribute = null;
((FieldWriter) string).visitAttribute(attribute);
ByteVector byteVector = new ByteVector();
((FieldWriter) string).put(byteVector);

* test suite isTestSuite: 27
Test 0: 
ClassWriter classWriter = new ClassWriter(65520);
FieldWriter fieldWriter = new FieldWriter(classWriter, 65520, "]pwW-p1[nyXn`!", "]pwW-p1[nyXn`!", "]pwW-p1[nyXn`!", "]pwW-p1[nyXn`!");
Attribute attribute = new Attribute("]pwW-p1[nyXn`!");
fieldWriter.visitAttribute(attribute);
// Undeclared exception!
try { 
  fieldWriter.getSize();
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("wheel.asm.Attribute", e);
}

Test 1: 
ClassWriter classWriter = new ClassWriter(65532);
FieldWriter fieldWriter = new FieldWriter(classWriter, 65532, "dvy\"j?Y5C", "dvy\"j?Y5C", "dvy\"j?Y5C", "dvy\"j?Y5C");
fieldWriter.visitEnd();
Test 2: 
ClassWriter classWriter = new ClassWriter(4104);
classWriter.visitField(4104, "", "", "", "");
FieldWriter fieldWriter = new FieldWriter(classWriter, 4104, "", "", "", "");
Test 3: 
ClassWriter classWriter = new ClassWriter(302);
FieldWriter fieldWriter = new FieldWriter(classWriter, 302, "Signature", "Signature", (String) null, (Object) null);
fieldWriter.getSize();
Test 4: 
ClassWriter classWriter = new ClassWriter(65532);
classWriter.version = 65532;
FieldWriter fieldWriter = new FieldWriter(classWriter, 65532, "dvy\"j?Y5C", "dvy\"j?Y5C", "dvy\"j?Y5C", "dvy\"j?Y5C");
fieldWriter.getSize();
Test 5: 
ClassWriter classWriter = new ClassWriter((-1));
FieldWriter fieldWriter = new FieldWriter(classWriter, (-1), "", "", "", "");
fieldWriter.getSize();
Test 6: 
ClassWriter classWriter = new ClassWriter(65533);
FieldWriter fieldWriter = new FieldWriter(classWriter, 65533, "", "", "", "");
fieldWriter.visitAnnotation("", true);
fieldWriter.getSize();
Test 7: 
ClassWriter classWriter = new ClassWriter(65533);
FieldWriter fieldWriter = new FieldWriter(classWriter, 65533, "", "", "", "");
fieldWriter.visitAnnotation("", false);
fieldWriter.getSize();
Test 8: 
ClassWriter classWriter = new ClassWriter(358);
FieldWriter fieldWriter = new FieldWriter(classWriter, 2, "so[d?}5$'!eBy", "", (String) null, (Object) null);
ByteVector byteVector = classWriter.pool;
fieldWriter.put(byteVector);
Test 9: 
ClassWriter classWriter = new ClassWriter(65532);
classWriter.version = 65532;
FieldWriter fieldWriter = new FieldWriter(classWriter, 65532, "dvy\"j?Y5C", "dvy\"j?Y5C", "dvy\"j?Y5C", "dvy\"j?Y5C");
ByteVector byteVector = new ByteVector();
fieldWriter.put(byteVector);
Test 10: 
ClassWriter classWriter = new ClassWriter(358);
FieldWriter fieldWriter = new FieldWriter(classWriter, (-3534), "", "", "so[d?}5$'!eBy", "");
ByteVector byteVector = new ByteVector();
fieldWriter.put(byteVector);
Test 11: 
ClassWriter classWriter = new ClassWriter(65535);
FieldWriter fieldWriter = new FieldWriter(classWriter, 2, "(&.DBlnsK>", "6.,LZ}C48^4", "6.,LZ}C48^4", "6.,LZ}C48^4");
fieldWriter.visitAnnotation("(&.DBlnsK>", true);
ByteVector byteVector = new ByteVector();
fieldWriter.put(byteVector);
Test 12: 
ClassWriter classWriter = new ClassWriter(65535);
FieldWriter fieldWriter = new FieldWriter(classWriter, 2, "(&.DBlnsK>", "6.,LZ}C48^4", "6.,LZ}C48^4", "6.,LZ}C48^4");
fieldWriter.visitAnnotation("6.,LZ}C48^4", false);
ByteVector byteVector = new ByteVector();
fieldWriter.put(byteVector);
Test 13: 
ClassWriter classWriter = new ClassWriter(65532);
FieldWriter fieldWriter = new FieldWriter(classWriter, 65532, "dvy\"j?Y5C", "dvy\"j?Y5C", "dvy\"j?Y5C", "dvy\"j?Y5C");
Attribute attribute = new Attribute("dvy\"j?Y5C");
fieldWriter.visitAttribute(attribute);
ByteVector byteVector = new ByteVector();
// Undeclared exception!
try { 
  fieldWriter.put(byteVector);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("wheel.asm.Attribute", e);
}

Test 14: 
String string = "My Test String";
FieldWriter fieldWriter = new FieldWriter((ClassWriter) 65520, (int) "My Test String", "My Test String", "My Test String", "My Test String", "]pwW-p1[nyXn`!");
String string = "My Test Attribute";
Attribute attribute = new Attribute(string);
((FieldWriter) string).visitAttribute(attribute);
((FieldWriter) string).getSize();

Test 15: 
String string = "John Doe";
FieldWriter fieldWriter = new FieldWriter((ClassWriter) 65532, (int) "John Doe", (String) 30, "Male", "123 Main St", "dvy\"j?Y5C");
((FieldWriter) string).visitEnd();

Test 16: 
FieldWriter fieldWriter = new FieldWriter((ClassWriter) 4104, (int) "myField", "int", "", "", "");

Test 17: 
String string = "Signature";
FieldWriter fieldWriter = new FieldWriter((ClassWriter) 302, (int) "Signature", "Signature", "Signature", (String) null, (Object) null);
((FieldWriter) string).getSize();
int _int = 302;
ClassWriter classWriter = new ClassWriter(_int);
int _int = 302;
String string = "Signature";
String string = "Signature";
String string = "ABCDEFGHIJKLMNOPQRSTUVWXYZ";
FieldWriter fieldWriter = new FieldWriter(classWriter, _int, string, string, string, (Object) null);
((FieldWriter) string).getSize();

Test 18: 
String string = "dvy\"j?Y5C";
FieldWriter fieldWriter = new FieldWriter((ClassWriter) 65532, (int) "dvy\"j?Y5C", "dvy\"j?Y5C", "dvy\"j?Y5C", "dvy\"j?Y5C", "dvy\"j?Y5C");
((FieldWriter) string).getSize();
int _int = 65532;
ClassWriter classWriter = new ClassWriter(_int);
int _int = 65532;
String string = "com.example.MyClass";
String string = "myField";
String string = "int";
String string = "10";
FieldWriter fieldWriter = new FieldWriter(classWriter, _int, string, string, string, string);
((FieldWriter) string).getSize();

Test 19: 
String string = "Name";
FieldWriter fieldWriter = new FieldWriter((ClassWriter) 2023, (int) "Name", "Description", "Type", "Value", "");
((FieldWriter) string).getSize();

Test 20: 
String string = "name";
FieldWriter fieldWriter = new FieldWriter((ClassWriter) 65533, (int) "name", "java.lang.String", "value", "\"Hello World!\"", "");
String string = "org.junit.Test";
boolean _boolean = false;
((FieldWriter) string).visitAnnotation(string, _boolean);
((FieldWriter) string).getSize();

Test 21: 
String string = "age";
FieldWriter fieldWriter = new FieldWriter((ClassWriter) 2, (int) "age", "int", "", (String) null, (Object) null);
ByteVector byteVector = null;
((FieldWriter) string).put(byteVector);

Test 22: 
String string = "dvy\"j?Y5C";
FieldWriter fieldWriter = new FieldWriter((ClassWriter) 65532, (int) "dvy\"j?Y5C", "dvy\"j?Y5C", "dvy\"j?Y5C", "dvy\"j?Y5C", "dvy\"j?Y5C");
ByteVector byteVector = new ByteVector();
((FieldWriter) string).put(byteVector);

Test 23: 
ByteVector byteVector = new ByteVector();

Test 24: 
ByteVector byteVector = new ByteVector();

Test 25: 
String string = "A unique name for this field";
FieldWriter fieldWriter = new FieldWriter((ClassWriter) 2, (int) "A unique name for this field", "A descriptive string value", "A descriptive integer value", "A descriptive boolean value", "6.,LZ}C48^4");
String string = "A unique annotation type";
boolean _boolean = false;
((FieldWriter) string).visitAnnotation(string, _boolean);
ByteVector byteVector = new ByteVector();
((FieldWriter) string).put(byteVector);

Test 26: 
String string = "int";
FieldWriter fieldWriter = new FieldWriter((ClassWriter) "myField", (int) "int", "I", "1234", "dvy\"j?Y5C", "dvy\"j?Y5C");
Attribute attribute = null;
((FieldWriter) string).visitAttribute(attribute);
ByteVector byteVector = new ByteVector();
((FieldWriter) string).put(byteVector);


* Generated after the refinement and before minimization 27 tests with total length 123
* test suite isTestSuite: 27
Test 0: 
ClassWriter classWriter = new ClassWriter(65520);
FieldWriter fieldWriter = new FieldWriter(classWriter, 65520, "]pwW-p1[nyXn`!", "]pwW-p1[nyXn`!", "]pwW-p1[nyXn`!", "]pwW-p1[nyXn`!");
Attribute attribute = new Attribute("]pwW-p1[nyXn`!");
fieldWriter.visitAttribute(attribute);
// Undeclared exception!
try { 
  fieldWriter.getSize();
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("wheel.asm.Attribute", e);
}

Test 1: 
ClassWriter classWriter = new ClassWriter(65532);
FieldWriter fieldWriter = new FieldWriter(classWriter, 65532, "dvy\"j?Y5C", "dvy\"j?Y5C", "dvy\"j?Y5C", "dvy\"j?Y5C");
fieldWriter.visitEnd();
Test 2: 
ClassWriter classWriter = new ClassWriter(4104);
classWriter.visitField(4104, "", "", "", "");
FieldWriter fieldWriter = new FieldWriter(classWriter, 4104, "", "", "", "");
Test 3: 
ClassWriter classWriter = new ClassWriter(302);
FieldWriter fieldWriter = new FieldWriter(classWriter, 302, "Signature", "Signature", (String) null, (Object) null);
fieldWriter.getSize();
Test 4: 
ClassWriter classWriter = new ClassWriter(65532);
classWriter.version = 65532;
FieldWriter fieldWriter = new FieldWriter(classWriter, 65532, "dvy\"j?Y5C", "dvy\"j?Y5C", "dvy\"j?Y5C", "dvy\"j?Y5C");
fieldWriter.getSize();
Test 5: 
ClassWriter classWriter = new ClassWriter((-1));
FieldWriter fieldWriter = new FieldWriter(classWriter, (-1), "", "", "", "");
fieldWriter.getSize();
Test 6: 
ClassWriter classWriter = new ClassWriter(65533);
FieldWriter fieldWriter = new FieldWriter(classWriter, 65533, "", "", "", "");
fieldWriter.visitAnnotation("", true);
fieldWriter.getSize();
Test 7: 
ClassWriter classWriter = new ClassWriter(65533);
FieldWriter fieldWriter = new FieldWriter(classWriter, 65533, "", "", "", "");
fieldWriter.visitAnnotation("", false);
fieldWriter.getSize();
Test 8: 
ClassWriter classWriter = new ClassWriter(358);
FieldWriter fieldWriter = new FieldWriter(classWriter, 2, "so[d?}5$'!eBy", "", (String) null, (Object) null);
ByteVector byteVector = classWriter.pool;
fieldWriter.put(byteVector);
Test 9: 
ClassWriter classWriter = new ClassWriter(65532);
classWriter.version = 65532;
FieldWriter fieldWriter = new FieldWriter(classWriter, 65532, "dvy\"j?Y5C", "dvy\"j?Y5C", "dvy\"j?Y5C", "dvy\"j?Y5C");
ByteVector byteVector = new ByteVector();
fieldWriter.put(byteVector);
Test 10: 
ClassWriter classWriter = new ClassWriter(358);
FieldWriter fieldWriter = new FieldWriter(classWriter, (-3534), "", "", "so[d?}5$'!eBy", "");
ByteVector byteVector = new ByteVector();
fieldWriter.put(byteVector);
Test 11: 
ClassWriter classWriter = new ClassWriter(65535);
FieldWriter fieldWriter = new FieldWriter(classWriter, 2, "(&.DBlnsK>", "6.,LZ}C48^4", "6.,LZ}C48^4", "6.,LZ}C48^4");
fieldWriter.visitAnnotation("(&.DBlnsK>", true);
ByteVector byteVector = new ByteVector();
fieldWriter.put(byteVector);
Test 12: 
ClassWriter classWriter = new ClassWriter(65535);
FieldWriter fieldWriter = new FieldWriter(classWriter, 2, "(&.DBlnsK>", "6.,LZ}C48^4", "6.,LZ}C48^4", "6.,LZ}C48^4");
fieldWriter.visitAnnotation("6.,LZ}C48^4", false);
ByteVector byteVector = new ByteVector();
fieldWriter.put(byteVector);
Test 13: 
ClassWriter classWriter = new ClassWriter(65532);
FieldWriter fieldWriter = new FieldWriter(classWriter, 65532, "dvy\"j?Y5C", "dvy\"j?Y5C", "dvy\"j?Y5C", "dvy\"j?Y5C");
Attribute attribute = new Attribute("dvy\"j?Y5C");
fieldWriter.visitAttribute(attribute);
ByteVector byteVector = new ByteVector();
// Undeclared exception!
try { 
  fieldWriter.put(byteVector);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("wheel.asm.Attribute", e);
}

Test 14: 
String string = "My Test String";
FieldWriter fieldWriter = new FieldWriter((ClassWriter) 65520, (int) "My Test String", "My Test String", "My Test String", "My Test String", "]pwW-p1[nyXn`!");
String string = "My Test Attribute";
Attribute attribute = new Attribute(string);
((FieldWriter) string).visitAttribute(attribute);
((FieldWriter) string).getSize();

Test 15: 
String string = "John Doe";
FieldWriter fieldWriter = new FieldWriter((ClassWriter) 65532, (int) "John Doe", (String) 30, "Male", "123 Main St", "dvy\"j?Y5C");
((FieldWriter) string).visitEnd();

Test 16: 
FieldWriter fieldWriter = new FieldWriter((ClassWriter) 4104, (int) "myField", "int", "", "", "");

Test 17: 
String string = "Signature";
FieldWriter fieldWriter = new FieldWriter((ClassWriter) 302, (int) "Signature", "Signature", "Signature", (String) null, (Object) null);
((FieldWriter) string).getSize();
int _int = 302;
ClassWriter classWriter = new ClassWriter(_int);
int _int = 302;
String string = "Signature";
String string = "Signature";
String string = "ABCDEFGHIJKLMNOPQRSTUVWXYZ";
FieldWriter fieldWriter = new FieldWriter(classWriter, _int, string, string, string, (Object) null);
((FieldWriter) string).getSize();

Test 18: 
String string = "dvy\"j?Y5C";
FieldWriter fieldWriter = new FieldWriter((ClassWriter) 65532, (int) "dvy\"j?Y5C", "dvy\"j?Y5C", "dvy\"j?Y5C", "dvy\"j?Y5C", "dvy\"j?Y5C");
((FieldWriter) string).getSize();
int _int = 65532;
ClassWriter classWriter = new ClassWriter(_int);
int _int = 65532;
String string = "com.example.MyClass";
String string = "myField";
String string = "int";
String string = "10";
FieldWriter fieldWriter = new FieldWriter(classWriter, _int, string, string, string, string);
((FieldWriter) string).getSize();

Test 19: 
String string = "Name";
FieldWriter fieldWriter = new FieldWriter((ClassWriter) 2023, (int) "Name", "Description", "Type", "Value", "");
((FieldWriter) string).getSize();

Test 20: 
String string = "name";
FieldWriter fieldWriter = new FieldWriter((ClassWriter) 65533, (int) "name", "java.lang.String", "value", "\"Hello World!\"", "");
String string = "org.junit.Test";
boolean _boolean = false;
((FieldWriter) string).visitAnnotation(string, _boolean);
((FieldWriter) string).getSize();

Test 21: 
String string = "age";
FieldWriter fieldWriter = new FieldWriter((ClassWriter) 2, (int) "age", "int", "", (String) null, (Object) null);
ByteVector byteVector = null;
((FieldWriter) string).put(byteVector);

Test 22: 
String string = "dvy\"j?Y5C";
FieldWriter fieldWriter = new FieldWriter((ClassWriter) 65532, (int) "dvy\"j?Y5C", "dvy\"j?Y5C", "dvy\"j?Y5C", "dvy\"j?Y5C", "dvy\"j?Y5C");
ByteVector byteVector = new ByteVector();
((FieldWriter) string).put(byteVector);

Test 23: 
ByteVector byteVector = new ByteVector();

Test 24: 
ByteVector byteVector = new ByteVector();

Test 25: 
String string = "A unique name for this field";
FieldWriter fieldWriter = new FieldWriter((ClassWriter) 2, (int) "A unique name for this field", "A descriptive string value", "A descriptive integer value", "A descriptive boolean value", "6.,LZ}C48^4");
String string = "A unique annotation type";
boolean _boolean = false;
((FieldWriter) string).visitAnnotation(string, _boolean);
ByteVector byteVector = new ByteVector();
((FieldWriter) string).put(byteVector);

Test 26: 
String string = "int";
FieldWriter fieldWriter = new FieldWriter((ClassWriter) "myField", (int) "int", "I", "1234", "dvy\"j?Y5C", "dvy\"j?Y5C");
Attribute attribute = null;
((FieldWriter) string).visitAttribute(attribute);
ByteVector byteVector = new ByteVector();
((FieldWriter) string).put(byteVector);


* Minimizing test suite
* test suite isTestSuite: 14
Test 0: 
ClassWriter classWriter = new ClassWriter(65520);
FieldWriter fieldWriter = new FieldWriter(classWriter, 65520, "]pwW-p1[nyXn`!", "]pwW-p1[nyXn`!", "]pwW-p1[nyXn`!", "]pwW-p1[nyXn`!");
Attribute attribute = new Attribute("]pwW-p1[nyXn`!");
fieldWriter.visitAttribute(attribute);
// Undeclared exception!
try { 
  fieldWriter.getSize();
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("wheel.asm.Attribute", e);
}

Test 1: 
ClassWriter classWriter = new ClassWriter(65532);
FieldWriter fieldWriter = new FieldWriter(classWriter, 65532, "dvy\"j?Y5C", "dvy\"j?Y5C", "dvy\"j?Y5C", "dvy\"j?Y5C");
fieldWriter.visitEnd();
Test 2: 
ClassWriter classWriter = new ClassWriter(4104);
classWriter.visitField(4104, "", "", "", "");
FieldWriter fieldWriter = new FieldWriter(classWriter, 4104, "", "", "", "");
Test 3: 
ClassWriter classWriter = new ClassWriter(302);
FieldWriter fieldWriter = new FieldWriter(classWriter, 302, "Signature", "Signature", (String) null, (Object) null);
fieldWriter.getSize();
Test 4: 
ClassWriter classWriter = new ClassWriter(65533);
FieldWriter fieldWriter = new FieldWriter(classWriter, 65533, "", "", "", "");
fieldWriter.visitAnnotation("", false);
fieldWriter.getSize();
Test 5: 
ClassWriter classWriter = new ClassWriter(65533);
FieldWriter fieldWriter = new FieldWriter(classWriter, 65533, "", "", "", "");
fieldWriter.visitAnnotation("", true);
fieldWriter.getSize();
Test 6: 
ClassWriter classWriter = new ClassWriter(65532);
classWriter.version = 65532;
FieldWriter fieldWriter = new FieldWriter(classWriter, 65532, "dvy\"j?Y5C", "dvy\"j?Y5C", "dvy\"j?Y5C", "dvy\"j?Y5C");
fieldWriter.getSize();
Test 7: 
ClassWriter classWriter = new ClassWriter((-1));
FieldWriter fieldWriter = new FieldWriter(classWriter, (-1), "", "", "", "");
fieldWriter.getSize();
Test 8: 
ClassWriter classWriter = new ClassWriter(358);
FieldWriter fieldWriter = new FieldWriter(classWriter, 2, "so[d?}5$'!eBy", "", (String) null, (Object) null);
ByteVector byteVector = classWriter.pool;
fieldWriter.put(byteVector);
Test 9: 
ClassWriter classWriter = new ClassWriter(358);
FieldWriter fieldWriter = new FieldWriter(classWriter, (-3534), "", "", "so[d?}5$'!eBy", "");
ByteVector byteVector = new ByteVector();
fieldWriter.put(byteVector);
Test 10: 
ClassWriter classWriter = new ClassWriter(65532);
classWriter.version = 65532;
FieldWriter fieldWriter = new FieldWriter(classWriter, 65532, "dvy\"j?Y5C", "dvy\"j?Y5C", "dvy\"j?Y5C", "dvy\"j?Y5C");
ByteVector byteVector = new ByteVector();
fieldWriter.put(byteVector);
Test 11: 
ClassWriter classWriter = new ClassWriter(65535);
FieldWriter fieldWriter = new FieldWriter(classWriter, 2, "(&.DBlnsK>", "6.,LZ}C48^4", "6.,LZ}C48^4", "6.,LZ}C48^4");
fieldWriter.visitAnnotation("(&.DBlnsK>", true);
ByteVector byteVector = new ByteVector();
fieldWriter.put(byteVector);
Test 12: 
ClassWriter classWriter = new ClassWriter(65535);
FieldWriter fieldWriter = new FieldWriter(classWriter, 2, "(&.DBlnsK>", "6.,LZ}C48^4", "6.,LZ}C48^4", "6.,LZ}C48^4");
fieldWriter.visitAnnotation("6.,LZ}C48^4", false);
ByteVector byteVector = new ByteVector();
fieldWriter.put(byteVector);
Test 13: 
ClassWriter classWriter = new ClassWriter(65532);
FieldWriter fieldWriter = new FieldWriter(classWriter, 65532, "dvy\"j?Y5C", "dvy\"j?Y5C", "dvy\"j?Y5C", "dvy\"j?Y5C");
Attribute attribute = new Attribute("dvy\"j?Y5C");
fieldWriter.visitAttribute(attribute);
ByteVector byteVector = new ByteVector();
// Undeclared exception!
try { 
  fieldWriter.put(byteVector);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("wheel.asm.Attribute", e);
}


* Going to analyze the coverage criteria
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 100%
* Total number of goals: 58
* Number of covered goals: 58
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 100%
* Total number of goals: 85
* Number of covered goals: 85
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 40%
* Total number of goals: 5
* Number of covered goals: 2
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 6
* Number of covered goals: 6
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 100%
* Total number of goals: 58
* Number of covered goals: 58
* Generated 14 tests with total length 58
* Resulting test suite's coverage: 88% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 38%
* Compiling and checking tests
Going to execute: removeTestsThatDoNotCompile
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: ClassWriter arg0 = new ClassWriter(65532);
FieldWriter fieldWriter = new FieldWriter(arg0, 65532, "dvy\"j?Y5C", "dvy\"j?Y5C", "dvy\"j?Y5C", "dvy\"j?Y5C");
fieldWriter.visitEnd();

** It was a parseable test case! 
refined test name is: testVisitEndMethod
* Compiling Tests
refined test name is: testVisitEndWritesFieldDataToOutputStream
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: ClassWriter arg0 = new ClassWriter(4104);
FieldVisitor visitField = arg0.visitField(4104, "", "", "", "");
FieldWriter fieldWriter = new FieldWriter(arg0, 4104, "", "", "", "");
assertFalse(fieldWriter.equals((Object)visitField));


** It was a parseable test case! 
refined test name is: testFieldWriterEqualsSelf
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: ClassWriter arg0 = new ClassWriter(302);
FieldWriter fieldWriter = new FieldWriter(arg0, 302, "Signature", "Signature", (String) null, (Object) null);
int size = fieldWriter.getSize();
assertEquals(8, size);


** It was a parseable test case! 
refined test name is: testGetSizeWithSignature
* Compiling Tests
refined test name is: testGetSizeWithSignature
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: ClassWriter arg0 = new ClassWriter(65533);
FieldWriter fieldWriter = new FieldWriter(arg0, 65533, "", "", "", "");
fieldWriter.visitAnnotation("", false);
int size = fieldWriter.getSize();
assertEquals(42, size);


** It was a parseable test case! 
refined test name is: testFieldWriterAnnotationSize
* Compiling Tests
refined test name is: testFieldWriterAnnotationSize
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: ClassWriter arg0 = new ClassWriter(65533);
FieldWriter fieldWriter = new FieldWriter(arg0, 65533, "", "", "", "");
fieldWriter.visitAnnotation("", true);
int size = fieldWriter.getSize();
assertEquals(42, size);


** It was a parseable test case! 
refined test name is: testCalculateSizeOfFieldWithAnnotation
* Compiling Tests
refined test name is: testCalculateSizeOfAnnotationWithCustomValues
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: ClassWriter arg0 = new ClassWriter(65532);
arg0.version = 65532;
FieldWriter fieldWriter = new FieldWriter(arg0, 65532, "dvy\"j?Y5C", "dvy\"j?Y5C", "dvy\"j?Y5C", "dvy\"j?Y5C");
int size = fieldWriter.getSize();
assertEquals(24, size);


** It was a parseable test case! 
refined test name is: testGetSize
* Compiling Tests
refined test name is: testGetSizeOfFieldWriter
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: ClassWriter arg0 = new ClassWriter((-1));
FieldWriter fieldWriter = new FieldWriter(arg0, (-1), "", "", "", "");
int size = fieldWriter.getSize();
assertEquals(36, size);


** It was a parseable test case! 
refined test name is: testGetSizereturnsCorrectValue
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 18:50:43.120 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar253176095334836267.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 18:50:43.168 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar253176095334836267.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 18:50:43.266 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar253176095334836267.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 18:50:43.267 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar253176095334836267.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 18:50:43.419 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar253176095334836267.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 18:50:43.420 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar253176095334836267.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 18:50:43.473 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar253176095334836267.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 18:50:43.474 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar253176095334836267.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 18:50:43.538 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar253176095334836267.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 18:50:43.540 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar253176095334836267.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 18:50:43.606 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar253176095334836267.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 18:50:43.608 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar253176095334836267.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 18:50:43.675 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar253176095334836267.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 18:50:43.676 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar253176095334836267.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
** Write a test suite: 2 called: 1 to improve: false
** Write a test suite: 3 called: 2 to improve: false
** Write a test suite: 4 called: 3 to improve: false
** Write a test suite: 5 called: 4 to improve: false
[MASTER] 18:50:43.770 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar253176095334836267.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 18:50:43.771 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar253176095334836267.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 1 called: 0 to improve: false
** Write a test suite: 2 called: 1 to improve: false
** Write a test suite: 3 called: 2 to improve: false
** Write a test suite: 4 called: 3 to improve: false
** Write a test suite: 6 called: 4 to improve: false
[MASTER] 18:50:43.885 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar253176095334836267.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 18:50:43.888 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar253176095334836267.jar
[MASTER] 18:50:44.041 [logback-1] WARN  TimeController - Already entered in phase: INLINING. This will mess up the timing calculations.
* test suite isTestSuite: 14
Test 0: 
ClassWriter classWriter = new ClassWriter(65520);
FieldWriter fieldWriter = new FieldWriter(classWriter, 65520, "]pwW-p1[nyXn`!", "]pwW-p1[nyXn`!", "]pwW-p1[nyXn`!", "]pwW-p1[nyXn`!");
Attribute attribute = new Attribute("]pwW-p1[nyXn`!");
fieldWriter.visitAttribute(attribute);
// Undeclared exception!
try { 
  fieldWriter.getSize();
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("wheel.asm.Attribute", e);
}

Test 1: 
ClassWriter classWriter = new ClassWriter(65532);
FieldWriter fieldWriter = new FieldWriter(classWriter, 65532, "dvy\"j?Y5C", "dvy\"j?Y5C", "dvy\"j?Y5C", "dvy\"j?Y5C");
fieldWriter.visitEnd();
Test 2: 
ClassWriter classWriter = new ClassWriter(4104);
classWriter.visitField(4104, "", "", "", "");
FieldWriter fieldWriter = new FieldWriter(classWriter, 4104, "", "", "", "");
Test 3: 
ClassWriter classWriter = new ClassWriter(302);
FieldWriter fieldWriter = new FieldWriter(classWriter, 302, "Signature", "Signature", (String) null, (Object) null);
fieldWriter.getSize();
Test 4: 
ClassWriter classWriter = new ClassWriter(65532);
classWriter.version = 65532;
FieldWriter fieldWriter = new FieldWriter(classWriter, 65532, "dvy\"j?Y5C", "dvy\"j?Y5C", "dvy\"j?Y5C", "dvy\"j?Y5C");
fieldWriter.getSize();
Test 5: 
ClassWriter classWriter = new ClassWriter((-1));
FieldWriter fieldWriter = new FieldWriter(classWriter, (-1), "", "", "", "");
fieldWriter.getSize();
Test 6: 
ClassWriter classWriter = new ClassWriter(65533);
FieldWriter fieldWriter = new FieldWriter(classWriter, 65533, "", "", "", "");
fieldWriter.visitAnnotation("", true);
fieldWriter.getSize();
Test 7: 
ClassWriter classWriter = new ClassWriter(65533);
FieldWriter fieldWriter = new FieldWriter(classWriter, 65533, "", "", "", "");
fieldWriter.visitAnnotation("", false);
fieldWriter.getSize();
Test 8: 
ClassWriter classWriter = new ClassWriter(358);
FieldWriter fieldWriter = new FieldWriter(classWriter, 2, "so[d?}5$'!eBy", "", (String) null, (Object) null);
ByteVector byteVector = classWriter.pool;
fieldWriter.put(byteVector);
Test 9: 
ClassWriter classWriter = new ClassWriter(65532);
classWriter.version = 65532;
FieldWriter fieldWriter = new FieldWriter(classWriter, 65532, "dvy\"j?Y5C", "dvy\"j?Y5C", "dvy\"j?Y5C", "dvy\"j?Y5C");
ByteVector byteVector = new ByteVector();
fieldWriter.put(byteVector);
Test 10: 
ClassWriter classWriter = new ClassWriter(358);
FieldWriter fieldWriter = new FieldWriter(classWriter, (-3534), "", "", "so[d?}5$'!eBy", "");
ByteVector byteVector = new ByteVector();
fieldWriter.put(byteVector);
Test 11: 
ClassWriter classWriter = new ClassWriter(65535);
FieldWriter fieldWriter = new FieldWriter(classWriter, 2, "(&.DBlnsK>", "6.,LZ}C48^4", "6.,LZ}C48^4", "6.,LZ}C48^4");
fieldWriter.visitAnnotation("(&.DBlnsK>", true);
ByteVector byteVector = new ByteVector();
fieldWriter.put(byteVector);
Test 12: 
ClassWriter classWriter = new ClassWriter(65535);
FieldWriter fieldWriter = new FieldWriter(classWriter, 2, "(&.DBlnsK>", "6.,LZ}C48^4", "6.,LZ}C48^4", "6.,LZ}C48^4");
fieldWriter.visitAnnotation("6.,LZ}C48^4", false);
ByteVector byteVector = new ByteVector();
fieldWriter.put(byteVector);
Test 13: 
ClassWriter classWriter = new ClassWriter(65532);
FieldWriter fieldWriter = new FieldWriter(classWriter, 65532, "dvy\"j?Y5C", "dvy\"j?Y5C", "dvy\"j?Y5C", "dvy\"j?Y5C");
Attribute attribute = new Attribute("dvy\"j?Y5C");
fieldWriter.visitAttribute(attribute);
ByteVector byteVector = new ByteVector();
// Undeclared exception!
try { 
  fieldWriter.put(byteVector);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("wheel.asm.Attribute", e);
}


* Minimizing test suite
[MASTER] 18:50:45.252 [logback-1] WARN  TimeController - Already entered in phase: MINIMIZATION. This will mess up the timing calculations.
* test suite isTestSuite: 14
Test 0: 
ClassWriter classWriter = new ClassWriter(65520);
FieldWriter fieldWriter = new FieldWriter(classWriter, 65520, "]pwW-p1[nyXn`!", "]pwW-p1[nyXn`!", "]pwW-p1[nyXn`!", "]pwW-p1[nyXn`!");
Attribute attribute = new Attribute("]pwW-p1[nyXn`!");
fieldWriter.visitAttribute(attribute);
// Undeclared exception!
try { 
  fieldWriter.getSize();
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("wheel.asm.Attribute", e);
}

Test 1: 
ClassWriter classWriter = new ClassWriter(65532);
FieldWriter fieldWriter = new FieldWriter(classWriter, 65532, "dvy\"j?Y5C", "dvy\"j?Y5C", "dvy\"j?Y5C", "dvy\"j?Y5C");
fieldWriter.visitEnd();
Test 2: 
ClassWriter classWriter = new ClassWriter(4104);
classWriter.visitField(4104, "", "", "", "");
FieldWriter fieldWriter = new FieldWriter(classWriter, 4104, "", "", "", "");
Test 3: 
ClassWriter classWriter = new ClassWriter(302);
FieldWriter fieldWriter = new FieldWriter(classWriter, 302, "Signature", "Signature", (String) null, (Object) null);
fieldWriter.getSize();
Test 4: 
ClassWriter classWriter = new ClassWriter(65533);
FieldWriter fieldWriter = new FieldWriter(classWriter, 65533, "", "", "", "");
fieldWriter.visitAnnotation("", false);
fieldWriter.getSize();
Test 5: 
ClassWriter classWriter = new ClassWriter(65533);
FieldWriter fieldWriter = new FieldWriter(classWriter, 65533, "", "", "", "");
fieldWriter.visitAnnotation("", true);
fieldWriter.getSize();
Test 6: 
ClassWriter classWriter = new ClassWriter(65532);
classWriter.version = 65532;
FieldWriter fieldWriter = new FieldWriter(classWriter, 65532, "dvy\"j?Y5C", "dvy\"j?Y5C", "dvy\"j?Y5C", "dvy\"j?Y5C");
fieldWriter.getSize();
Test 7: 
ClassWriter classWriter = new ClassWriter((-1));
FieldWriter fieldWriter = new FieldWriter(classWriter, (-1), "", "", "", "");
fieldWriter.getSize();
Test 8: 
ClassWriter classWriter = new ClassWriter(358);
FieldWriter fieldWriter = new FieldWriter(classWriter, 2, "so[d?}5$'!eBy", "", (String) null, (Object) null);
ByteVector byteVector = classWriter.pool;
fieldWriter.put(byteVector);
Test 9: 
ClassWriter classWriter = new ClassWriter(358);
FieldWriter fieldWriter = new FieldWriter(classWriter, (-3534), "", "", "so[d?}5$'!eBy", "");
ByteVector byteVector = new ByteVector();
fieldWriter.put(byteVector);
Test 10: 
ClassWriter classWriter = new ClassWriter(65532);
classWriter.version = 65532;
FieldWriter fieldWriter = new FieldWriter(classWriter, 65532, "dvy\"j?Y5C", "dvy\"j?Y5C", "dvy\"j?Y5C", "dvy\"j?Y5C");
ByteVector byteVector = new ByteVector();
fieldWriter.put(byteVector);
Test 11: 
ClassWriter classWriter = new ClassWriter(65535);
FieldWriter fieldWriter = new FieldWriter(classWriter, 2, "(&.DBlnsK>", "6.,LZ}C48^4", "6.,LZ}C48^4", "6.,LZ}C48^4");
fieldWriter.visitAnnotation("(&.DBlnsK>", true);
ByteVector byteVector = new ByteVector();
fieldWriter.put(byteVector);
Test 12: 
ClassWriter classWriter = new ClassWriter(65535);
FieldWriter fieldWriter = new FieldWriter(classWriter, 2, "(&.DBlnsK>", "6.,LZ}C48^4", "6.,LZ}C48^4", "6.,LZ}C48^4");
fieldWriter.visitAnnotation("6.,LZ}C48^4", false);
ByteVector byteVector = new ByteVector();
fieldWriter.put(byteVector);
Test 13: 
ClassWriter classWriter = new ClassWriter(65532);
FieldWriter fieldWriter = new FieldWriter(classWriter, 65532, "dvy\"j?Y5C", "dvy\"j?Y5C", "dvy\"j?Y5C", "dvy\"j?Y5C");
Attribute attribute = new Attribute("dvy\"j?Y5C");
fieldWriter.visitAttribute(attribute);
ByteVector byteVector = new ByteVector();
// Undeclared exception!
try { 
  fieldWriter.put(byteVector);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("wheel.asm.Attribute", e);
}


* Going to analyze the coverage criteria
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 100%
* Total number of goals: 58
* Number of covered goals: 58
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 100%
* Total number of goals: 85
* Number of covered goals: 85
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 40%
* Total number of goals: 5
* Number of covered goals: 2
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 6
* Number of covered goals: 6
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 100%
* Total number of goals: 58
* Number of covered goals: 58
* Generated 14 tests with total length 58
* Resulting test suite's coverage: 88% (average coverage for all fitness functions)
* Generating assertions
[MASTER] 18:50:45.297 [logback-1] WARN  TimeController - Already entered in phase: COVERAGE_ANALYSIS. This will mess up the timing calculations.
* Resulting test suite's mutation score: 39%
[MASTER] 18:50:48.222 [logback-1] WARN  TimeController - Already entered in phase: ASSERTION_GENERATION. This will mess up the timing calculations.
* Compiling and checking tests
Going to execute: removeTestsThatDoNotCompile
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 18:50:48.983 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar253176095334836267.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 18:50:48.986 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar253176095334836267.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 18:50:49.037 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar253176095334836267.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 18:50:49.038 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar253176095334836267.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 18:50:49.089 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar253176095334836267.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 18:50:49.090 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar253176095334836267.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 18:50:49.145 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar253176095334836267.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 18:50:49.146 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar253176095334836267.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 18:50:49.196 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar253176095334836267.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 18:50:49.198 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar253176095334836267.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 18:50:49.246 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar253176095334836267.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 18:50:49.248 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar253176095334836267.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 18:50:49.301 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar253176095334836267.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 18:50:49.302 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar253176095334836267.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
** Write a test suite: 1 called: 1 to improve: false
** Write a test suite: 2 called: 2 to improve: false
** Write a test suite: 3 called: 3 to improve: false
** Write a test suite: 4 called: 4 to improve: false
** Write a test suite: 5 called: 5 to improve: false
** Write a test suite: 6 called: 6 to improve: false
[MASTER] 18:50:49.417 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar253176095334836267.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 18:50:49.418 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar253176095334836267.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
** Write a test suite: 1 called: 1 to improve: false
** Write a test suite: 2 called: 2 to improve: false
** Write a test suite: 3 called: 3 to improve: false
** Write a test suite: 4 called: 4 to improve: false
** Write a test suite: 5 called: 5 to improve: false
** Write a test suite: 6 called: 6 to improve: false
[MASTER] 18:50:49.530 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar253176095334836267.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 18:50:49.532 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar253176095334836267.jar
* Writing tests to file
[MASTER] 18:50:49.534 [logback-1] WARN  TimeController - Already entered in phase: JUNIT_CHECK. This will mess up the timing calculations.
* Writing JUnit test case 'FieldWriter_ESTest' to evosuite-tests
** Write a test suite: 1 called: 0 to improve: false
** Write a test suite: 2 called: 1 to improve: false
** Write a test suite: 3 called: 2 to improve: false
** Write a test suite: 4 called: 3 to improve: false
** Write a test suite: 6 called: 4 to improve: false
* Writing JUnit test case 'FieldWriter_Original_ESTest' to evosuite-tests
** Write a test suite: 0 called: 0 to improve: false
** Write a test suite: 1 called: 1 to improve: false
** Write a test suite: 2 called: 2 to improve: false
** Write a test suite: 3 called: 3 to improve: false
** Write a test suite: 4 called: 4 to improve: false
** Write a test suite: 5 called: 5 to improve: false
** Write a test suite: 6 called: 6 to improve: false
* Done!

* Computation finished
