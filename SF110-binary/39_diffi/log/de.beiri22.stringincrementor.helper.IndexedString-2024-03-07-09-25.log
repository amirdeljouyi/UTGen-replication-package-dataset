* EvoSuite 1.2.0
* WARNING - Generating JUnit 5 tests with the option to use a separate classloader will result in not runnable tests. Set either -Dtest_format=JUNIT4 or -Duse_separate_classloader=false
* Going to generate test cases for class: de.beiri22.stringincrementor.helper.IndexedString
* Starting Client-0
* Properties loaded from /home/roham/Results-Utestgen/dataset/SF110-ES-res/39_diffi/evosuite-files/evosuite.properties
* Connecting to master process on port 8577
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
* Finished analyzing classpath
* Generating tests for class de.beiri22.stringincrementor.helper.IndexedString
* Test criteria:
  - Branch Coverage
  - Line Coverage
  - Method-Output Coverage
  - Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 75
* Using seed 1709803543921
[Progress:>                             0%] [Cov:>                                  0%]* Starting evolution
* Initial Number of Goals in DynaMOSA = 24 / 75
[Progress:>                             1%] [Cov:===========================>       78%][Progress:>                             1%] [Cov:===============================>   91%][Progress:>                             2%] [Cov:==================================>98%][Progress:>                             3%] [Cov:==================================>98%][Progress:=>                            4%] [Cov:==================================>98%][Progress:=>                            6%] [Cov:==================================>98%][Progress:==>                           7%] [Cov:==================================>98%][Progress:==>                           9%] [Cov:==================================>98%][Progress:===>                          10%] [Cov:==================================>98%][Progress:===>                          11%] [Cov:==================================>98%][Progress:===>                          12%] [Cov:==================================>98%][Progress:===>                          13%] [Cov:==================================>98%][Progress:====>                         14%] [Cov:==================================>98%][Progress:====>                         15%] [Cov:==================================>98%][Progress:====>                         16%] [Cov:==================================>98%][Progress:=====>                        17%] [Cov:==================================>98%][Progress:=====>                        18%] [Cov:==================================>98%][Progress:=====>                        19%] [Cov:==================================>98%][Progress:======>                       20%] [Cov:==================================>98%][Progress:======>                       21%] [Cov:==================================>98%][Progress:======>                       22%] [Cov:==================================>98%][Progress:======>                       23%] [Cov:==================================>98%][Progress:=======>                      24%] [Cov:==================================>98%][Progress:=======>                      25%] [Cov:==================================>98%][Progress:=======>                      26%] [Cov:==================================>98%][Progress:========>                     27%] [Cov:==================================>98%][Progress:========>                     28%] [Cov:==================================>98%][Progress:========>                     29%] [Cov:==================================>98%][Progress:=========>                    30%] [Cov:==================================>98%][Progress:=========>                    31%] [Cov:==================================>98%][Progress:=========>                    32%] [Cov:==================================>98%][Progress:=========>                    33%] [Cov:==================================>98%][Progress:==========>                   34%] [Cov:==================================>98%][Progress:==========>                   35%] [Cov:==================================>98%][Progress:==========>                   35%] [Cov:==================================>98%][Progress:==========>                   36%] [Cov:==================================>98%][Progress:===========>                  37%] [Cov:==================================>98%][Progress:===========>                  38%] [Cov:==================================>98%][Progress:===========>                  39%] [Cov:==================================>98%][Progress:============>                 40%] [Cov:==================================>98%][Progress:============>                 41%] [Cov:==================================>98%][Progress:============>                 42%] [Cov:==================================>98%][Progress:============>                 43%] [Cov:==================================>98%][Progress:=============>                44%] [Cov:==================================>98%][Progress:=============>                45%] [Cov:==================================>98%][Progress:==============>               47%] [Cov:==================================>98%][Progress:==============>               48%] [Cov:==================================>98%][Progress:==============>               49%] [Cov:==================================>98%][Progress:===============>              50%] [Cov:==================================>98%][Progress:===============>              51%] [Cov:==================================>98%][Progress:===============>              52%] [Cov:==================================>98%][Progress:===============>              52%] [Cov:==================================>98%][Progress:===============>              53%] [Cov:==================================>98%][Progress:================>             54%] [Cov:==================================>98%][Progress:================>             55%] [Cov:==================================>98%][Progress:================>             56%] [Cov:==================================>98%][Progress:================>             56%] [Cov:==================================>98%][Progress:=================>            57%] [Cov:==================================>98%][Progress:=================>            58%] [Cov:==================================>98%][Progress:=================>            59%] [Cov:==================================>98%][Progress:==================>           60%] [Cov:==================================>98%][Progress:==================>           60%] [Cov:==================================>98%][Progress:==================>           61%] [Cov:==================================>98%][Progress:==================>           62%] [Cov:==================================>98%][Progress:==================>           63%] [Cov:==================================>98%][Progress:===================>          64%] [Cov:==================================>98%][Progress:===================>          64%] [Cov:==================================>98%][Progress:===================>          65%] [Cov:==================================>98%][Progress:===================>          66%] [Cov:==================================>98%][Progress:====================>         67%] [Cov:==================================>98%][Progress:====================>         68%] [Cov:==================================>98%][Progress:====================>         69%] [Cov:==================================>98%][Progress:=====================>        70%] [Cov:==================================>98%][Progress:=====================>        71%] [Cov:==================================>98%][Progress:=====================>        72%] [Cov:==================================>98%][Progress:=====================>        72%] [Cov:==================================>98%][Progress:=====================>        73%] [Cov:==================================>98%][Progress:======================>       74%] [Cov:==================================>98%][Progress:======================>       75%] [Cov:==================================>98%][Progress:======================>       76%] [Cov:===================================100%]
* Search finished after 76s and 79 generations, 64370 statements, best individual has fitness: 0.0
* Minimizing test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 100%
* Total number of goals: 20
* Number of covered goals: 20
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 100%
* Total number of goals: 30
* Number of covered goals: 30
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 100%
* Total number of goals: 3
* Number of covered goals: 3
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 2
* Number of covered goals: 2
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 100%
* Total number of goals: 20
* Number of covered goals: 20
* Generated 4 tests with total length 17
* Resulting test suite's coverage: 100% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 53%
* Compiling and checking tests
* Writing tests to file
* Writing JUnit test case 'IndexedString_ESTest' to evosuite-tests
* Done!

* Computation finished
