/*
 * This file was automatically generated by UTestGen and EvoSuite
 * Tue Mar 12 00:49:16 GMT 2024
 */

package com.yahoo.platform.yui.compressor;

import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;
import org.junit.jupiter.api.Timeout;
import java.util.concurrent.TimeUnit;
import static org.evosuite.runtime.EvoAssertions.*;
import com.yahoo.platform.yui.compressor.JavaScriptCompressor;
import java.io.StringReader;
import java.io.Writer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.mozilla.javascript.tools.ToolErrorReporter;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class JavaScriptCompressor_Original_ESTest extends JavaScriptCompressor_Original_ESTest_scaffolding {

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void testCompressWithNegative0() throws Throwable  {
      ToolErrorReporter arg1 = new ToolErrorReporter(false);
      StringReader arg0 = new StringReader("debugger");
      JavaScriptCompressor javaScriptCompressor = new JavaScriptCompressor(arg0, arg1);
      // Undeclared exception!
      try { 
        javaScriptCompressor.compress((Writer) null, (-43), false, false, false, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.yahoo.platform.yui.compressor.JavaScriptCompressor", e);
      }
  }

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void testCompressWithPositive0() throws Throwable  {
      ToolErrorReporter arg1 = new ToolErrorReporter(false);
      StringReader arg0 = new StringReader("lI+-h4EowzT");
      JavaScriptCompressor javaScriptCompressor = new JavaScriptCompressor(arg0, arg1);
      // Undeclared exception!
      try { 
        javaScriptCompressor.compress((Writer) null, 1, false, false, false, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.yahoo.platform.yui.compressor.JavaScriptCompressor", e);
      }
  }

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void testCompressWithPositive1() throws Throwable  {
      ToolErrorReporter arg1 = new ToolErrorReporter(false);
      StringReader arg0 = new StringReader("ZKwlS,YJSYmlD");
      JavaScriptCompressor javaScriptCompressor = new JavaScriptCompressor(arg0, arg1);
      // Undeclared exception!
      try { 
        javaScriptCompressor.compress((Writer) null, 5, false, false, false, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.yahoo.platform.yui.compressor.JavaScriptCompressor", e);
      }
  }

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void testCompressWithTrueAndFalse() throws Throwable  {
      ToolErrorReporter arg1 = new ToolErrorReporter(true);
      StringReader arg0 = new StringReader("top");
      JavaScriptCompressor javaScriptCompressor = new JavaScriptCompressor(arg0, arg1);
      // Undeclared exception!
      try { 
        javaScriptCompressor.compress((Writer) null, 85, true, true, false, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.yahoo.platform.yui.compressor.JavaScriptCompressor", e);
      }
  }

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void testCompressWithTrueAndCompressWithNegativeAndCompressWithFalse() throws Throwable  {
      ToolErrorReporter arg1 = new ToolErrorReporter(true);
      StringReader arg0 = new StringReader("eval");
      JavaScriptCompressor javaScriptCompressor = new JavaScriptCompressor(arg0, arg1);
      // Undeclared exception!
      try { 
        javaScriptCompressor.compress((Writer) null, (-3875), false, true, true, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.yahoo.platform.yui.compressor.JavaScriptCompressor", e);
      }
  }

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void testCompressWithPositive2() throws Throwable  {
      ToolErrorReporter arg1 = new ToolErrorReporter(false);
      StringReader arg0 = new StringReader("NXVK-F%xqxW7Pb+H1");
      JavaScriptCompressor javaScriptCompressor = new JavaScriptCompressor(arg0, arg1);
      // Undeclared exception!
      try { 
        javaScriptCompressor.compress((Writer) null, 52, false, false, false, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.yahoo.platform.yui.compressor.JavaScriptCompressor", e);
      }
  }

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void testCompressWithTrueAndCompressWithTrueAndCompressWithTrue() throws Throwable  {
      ToolErrorReporter arg1 = new ToolErrorReporter(true);
      StringReader arg0 = new StringReader("msg.no.brace.body");
      JavaScriptCompressor javaScriptCompressor = new JavaScriptCompressor(arg0, arg1);
      // Undeclared exception!
      try { 
        javaScriptCompressor.compress((Writer) null, 82, true, true, true, true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.yahoo.platform.yui.compressor.JavaScriptCompressor", e);
      }
  }

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void testCompressWithNegative1() throws Throwable  {
      ToolErrorReporter arg1 = new ToolErrorReporter(false);
      StringReader arg0 = new StringReader("j|/83Z>g/");
      JavaScriptCompressor javaScriptCompressor = new JavaScriptCompressor(arg0, arg1);
      // Undeclared exception!
      try { 
        javaScriptCompressor.compress((Writer) null, (-1), false, false, false, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.yahoo.platform.yui.compressor.JavaScriptCompressor", e);
      }
  }

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void testCompressWithPositive3() throws Throwable  {
      ToolErrorReporter arg1 = new ToolErrorReporter(false);
      StringReader arg0 = new StringReader("MDdfDa;uR");
      JavaScriptCompressor javaScriptCompressor = new JavaScriptCompressor(arg0, arg1);
      // Undeclared exception!
      try { 
        javaScriptCompressor.compress((Writer) null, 5, false, false, false, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.yahoo.platform.yui.compressor.JavaScriptCompressor", e);
      }
  }

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void testCompressWithZero() throws Throwable  {
      StringReader arg0 = new StringReader("0");
      ToolErrorReporter arg1 = new ToolErrorReporter(false);
      JavaScriptCompressor javaScriptCompressor = new JavaScriptCompressor(arg0, arg1);
      // Undeclared exception!
      try { 
        javaScriptCompressor.compress((Writer) null, 0, false, false, false, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.yahoo.platform.yui.compressor.JavaScriptCompressor", e);
      }
  }
}
