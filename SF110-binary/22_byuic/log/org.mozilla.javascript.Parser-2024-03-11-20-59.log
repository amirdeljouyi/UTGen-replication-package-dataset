* EvoSuite 1.0.0-SNAPSHOT
* Going to generate test cases for class: org.mozilla.javascript.Parser
* Starting Client-0
* Properties loaded from /home/roham/Results-Utestgen/dataset/SF110-new-res/22_byuic/evosuite-files/evosuite.properties
* Connecting to master process on port 3938
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 20:59:27.451 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 20:59:27.470 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 20:59:27.479 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 20:59:27.506 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 20:59:27.507 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 20:59:27.510 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
* Finished analyzing classpath
* Generating tests for class org.mozilla.javascript.Parser
* Test criteria:
  - Branch Coverage
  - Line Coverage
  - Method-Output Coverage
  - Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 2777
* Using seed 1710190760357
* Starting evolution
[Progress:>                             0%] [Cov:>                                  0%]* Initial Number of Goals in DynaMOSA = 685 / 2777
[Progress:>                             1%] [Cov:===========>                       32%][Progress:=>                            4%] [Cov:===========>                       34%][Progress:=>                            6%] [Cov:=============>                     39%][Progress:==>                           7%] [Cov:==============>                    40%][Progress:==>                           8%] [Cov:==============>                    41%][Progress:==>                           9%] [Cov:==============>                    41%][Progress:===>                          10%] [Cov:==============>                    41%][Progress:===>                          10%] [Cov:==============>                    42%][Progress:===>                          11%] [Cov:===============>                   43%][Progress:===>                          12%] [Cov:===============>                   44%][Progress:===>                          13%] [Cov:===============>                   45%][Progress:===>                          13%] [Cov:===============>                   45%][Progress:====>                         14%] [Cov:===============>                   45%][Progress:====>                         15%] [Cov:===============>                   45%][Progress:====>                         15%] [Cov:===============>                   45%][Progress:====>                         16%] [Cov:===============>                   45%][Progress:=====>                        17%] [Cov:===============>                   45%][Progress:=====>                        17%] [Cov:===============>                   45%][Progress:=====>                        18%] [Cov:================>                  46%][Progress:=====>                        18%] [Cov:================>                  46%][Progress:=====>                        19%] [Cov:================>                  46%][Progress:=====>                        19%] [Cov:================>                  46%][Progress:======>                       20%] [Cov:================>                  46%][Progress:======>                       20%] [Cov:================>                  46%][Progress:======>                       21%] [Cov:================>                  46%][Progress:======>                       21%] [Cov:================>                  47%][Progress:======>                       22%] [Cov:================>                  47%][Progress:======>                       22%] [Cov:================>                  47%][Progress:======>                       22%] [Cov:================>                  47%][Progress:======>                       23%] [Cov:================>                  47%][Progress:======>                       23%] [Cov:================>                  47%][Progress:=======>                      24%] [Cov:================>                  47%][Progress:=======>                      24%] [Cov:================>                  47%][Progress:=======>                      25%] [Cov:================>                  48%][Progress:=======>                      25%] [Cov:================>                  48%][Progress:=======>                      25%] [Cov:================>                  48%][Progress:=======>                      26%] [Cov:================>                  48%][Progress:=======>                      26%] [Cov:================>                  48%][Progress:========>                     27%] [Cov:================>                  48%][Progress:========>                     27%] [Cov:================>                  48%][Progress:========>                     27%] [Cov:================>                  48%][Progress:========>                     28%] [Cov:================>                  48%][Progress:========>                     28%] [Cov:================>                  48%][Progress:========>                     28%] [Cov:================>                  48%][Progress:========>                     29%] [Cov:================>                  48%][Progress:========>                     29%] [Cov:================>                  48%][Progress:=========>                    30%] [Cov:================>                  48%][Progress:=========>                    30%] [Cov:================>                  48%][Progress:=========>                    31%] [Cov:================>                  48%][Progress:=========>                    31%] [Cov:================>                  48%][Progress:=========>                    32%] [Cov:================>                  48%][Progress:=========>                    32%] [Cov:================>                  48%][Progress:=========>                    33%] [Cov:================>                  48%][Progress:=========>                    33%] [Cov:================>                  48%][Progress:==========>                   34%] [Cov:================>                  48%][Progress:==========>                   34%] [Cov:================>                  48%][Progress:==========>                   34%] [Cov:================>                  48%][Progress:==========>                   35%] [Cov:================>                  48%][Progress:==========>                   35%] [Cov:================>                  48%][Progress:==========>                   36%] [Cov:================>                  48%][Progress:==========>                   36%] [Cov:================>                  48%][Progress:==========>                   36%] [Cov:================>                  48%][Progress:==========>                   36%] [Cov:================>                  48%][Progress:===========>                  37%] [Cov:================>                  48%][Progress:===========>                  37%] [Cov:================>                  48%][Progress:===========>                  37%] [Cov:================>                  48%][Progress:===========>                  38%] [Cov:================>                  48%][Progress:===========>                  38%] [Cov:================>                  48%][Progress:===========>                  38%] [Cov:================>                  48%][Progress:===========>                  38%] [Cov:================>                  48%][Progress:===========>                  39%] [Cov:================>                  48%][Progress:===========>                  39%] [Cov:=================>                 49%][Progress:============>                 40%] [Cov:=================>                 49%][Progress:============>                 40%] [Cov:=================>                 49%][Progress:============>                 40%] [Cov:=================>                 49%][Progress:============>                 41%] [Cov:=================>                 49%][Progress:============>                 41%] [Cov:=================>                 49%][Progress:============>                 42%] [Cov:=================>                 49%][Progress:============>                 42%] [Cov:=================>                 49%][Progress:============>                 43%] [Cov:=================>                 49%][Progress:============>                 43%] [Cov:=================>                 49%][Progress:=============>                44%] [Cov:=================>                 49%][Progress:=============>                44%] [Cov:=================>                 49%][Progress:=============>                44%] [Cov:=================>                 49%][Progress:=============>                45%] [Cov:=================>                 49%][Progress:=============>                45%] [Cov:=================>                 49%][Progress:=============>                45%] [Cov:=================>                 49%][Progress:=============>                46%] [Cov:=================>                 49%][Progress:=============>                46%] [Cov:=================>                 49%][Progress:=============>                46%] [Cov:=================>                 49%][Progress:==============>               47%] [Cov:=================>                 49%][Progress:==============>               47%] [Cov:=================>                 49%][Progress:==============>               47%] [Cov:=================>                 49%][Progress:==============>               48%] [Cov:=================>                 49%][Progress:==============>               48%] [Cov:=================>                 50%][Progress:==============>               48%] [Cov:=================>                 50%][Progress:==============>               49%] [Cov:=================>                 50%][Progress:==============>               49%] [Cov:=================>                 50%][Progress:==============>               49%] [Cov:=================>                 50%][Progress:===============>              50%] [Cov:=================>                 50%][Progress:===============>              50%] [Cov:=================>                 50%][Progress:===============>              50%] [Cov:=================>                 50%][Progress:===============>              51%] [Cov:=================>                 50%][Progress:===============>              51%] [Cov:=================>                 50%][Progress:===============>              51%] [Cov:=================>                 50%][Progress:===============>              52%] [Cov:=================>                 50%][Progress:===============>              52%] [Cov:=================>                 50%][Progress:===============>              53%] [Cov:=================>                 50%][Progress:===============>              53%] [Cov:=================>                 50%][Progress:===============>              53%] [Cov:=================>                 50%][Progress:================>             54%] [Cov:=================>                 50%][Progress:================>             54%] [Cov:=================>                 50%][Progress:================>             55%] [Cov:=================>                 50%][Progress:================>             55%] [Cov:=================>                 50%][Progress:================>             55%] [Cov:=================>                 50%][Progress:================>             55%] [Cov:=================>                 50%][Progress:================>             56%] [Cov:=================>                 50%][Progress:================>             56%] [Cov:=================>                 50%][Progress:================>             56%] [Cov:=================>                 50%][Progress:=================>            57%] [Cov:=================>                 50%][Progress:=================>            57%] [Cov:=================>                 50%][Progress:=================>            58%] [Cov:=================>                 50%][Progress:=================>            58%] [Cov:=================>                 50%][Progress:=================>            59%] [Cov:=================>                 51%][Progress:=================>            59%] [Cov:=================>                 51%][Progress:=================>            59%] [Cov:=================>                 51%][Progress:==================>           60%] [Cov:=================>                 51%][Progress:==================>           60%] [Cov:=================>                 51%][Progress:==================>           60%] [Cov:=================>                 51%][Progress:==================>           61%] [Cov:=================>                 51%][Progress:==================>           61%] [Cov:=================>                 51%][Progress:==================>           62%] [Cov:=================>                 51%][Progress:==================>           62%] [Cov:=================>                 51%][Progress:==================>           63%] [Cov:=================>                 51%][Progress:==================>           63%] [Cov:=================>                 51%][Progress:==================>           63%] [Cov:=================>                 51%][Progress:===================>          64%] [Cov:=================>                 51%][Progress:===================>          64%] [Cov:=================>                 51%][Progress:===================>          64%] [Cov:=================>                 51%][Progress:===================>          65%] [Cov:=================>                 51%][Progress:===================>          65%] [Cov:=================>                 51%][Progress:===================>          65%] [Cov:=================>                 51%][Progress:===================>          65%] [Cov:=================>                 51%][Progress:===================>          66%] [Cov:=================>                 51%][Progress:===================>          66%] [Cov:=================>                 51%][Progress:===================>          66%] [Cov:=================>                 51%][Progress:====================>         67%] [Cov:=================>                 51%][Progress:====================>         67%] [Cov:=================>                 51%][Progress:====================>         68%] [Cov:=================>                 51%][Progress:====================>         68%] [Cov:=================>                 51%][Progress:====================>         68%] [Cov:=================>                 51%][Progress:====================>         69%] [Cov:=================>                 51%][Progress:====================>         69%] [Cov:=================>                 51%][Progress:=====================>        70%] [Cov:=================>                 51%][Progress:=====================>        70%] [Cov:=================>                 51%][Progress:=====================>        70%] [Cov:=================>                 51%][Progress:=====================>        71%] [Cov:=================>                 51%][Progress:=====================>        71%] [Cov:=================>                 51%][Progress:=====================>        71%] [Cov:=================>                 51%][Progress:=====================>        72%] [Cov:=================>                 51%][Progress:=====================>        72%] [Cov:=================>                 51%][Progress:=====================>        72%] [Cov:=================>                 51%][Progress:=====================>        72%] [Cov:=================>                 51%][Progress:=====================>        73%] [Cov:=================>                 51%][Progress:=====================>        73%] [Cov:=================>                 51%][Progress:======================>       74%] [Cov:=================>                 51%][Progress:======================>       74%] [Cov:=================>                 51%][Progress:======================>       74%] [Cov:=================>                 51%][Progress:======================>       75%] [Cov:=================>                 51%][Progress:======================>       75%] [Cov:=================>                 51%][Progress:======================>       75%] [Cov:=================>                 51%][Progress:======================>       76%] [Cov:=================>                 51%][Progress:======================>       76%] [Cov:=================>                 51%][Progress:======================>       76%] [Cov:=================>                 51%][Progress:=======================>      77%] [Cov:=================>                 51%][Progress:=======================>      77%] [Cov:=================>                 51%][Progress:=======================>      77%] [Cov:=================>                 51%][Progress:=======================>      78%] [Cov:=================>                 51%][Progress:=======================>      78%] [Cov:=================>                 51%][Progress:=======================>      79%] [Cov:==================>                52%][Progress:=======================>      79%] [Cov:==================>                52%][Progress:========================>     80%] [Cov:==================>                52%][Progress:========================>     80%] [Cov:==================>                52%][Progress:========================>     80%] [Cov:==================>                52%][Progress:========================>     81%] [Cov:==================>                52%][Progress:========================>     81%] [Cov:==================>                52%][Progress:========================>     81%] [Cov:==================>                52%][Progress:========================>     81%] [Cov:==================>                52%][Progress:========================>     82%] [Cov:==================>                52%][Progress:========================>     83%] [Cov:==================>                52%][Progress:========================>     83%] [Cov:==================>                52%][Progress:=========================>    84%] [Cov:==================>                52%][Progress:=========================>    84%] [Cov:==================>                52%][Progress:=========================>    84%] [Cov:==================>                52%][Progress:=========================>    85%] [Cov:==================>                52%][Progress:=========================>    85%] [Cov:==================>                52%][Progress:=========================>    85%] [Cov:==================>                52%][Progress:=========================>    86%] [Cov:==================>                52%][Progress:=========================>    86%] [Cov:==================>                52%][Progress:=========================>    86%] [Cov:==================>                52%][Progress:=========================>    86%] [Cov:==================>                52%][Progress:==========================>   87%] [Cov:==================>                52%][Progress:==========================>   87%] [Cov:==================>                52%][Progress:==========================>   87%] [Cov:==================>                52%][Progress:==========================>   88%] [Cov:==================>                52%][Progress:==========================>   88%] [Cov:==================>                52%][Progress:==========================>   89%] [Cov:==================>                52%][Progress:==========================>   89%] [Cov:==================>                52%][Progress:==========================>   89%] [Cov:==================>                52%][Progress:===========================>  90%] [Cov:==================>                52%][Progress:===========================>  90%] [Cov:==================>                52%][Progress:===========================>  90%] [Cov:==================>                52%][Progress:===========================>  91%] [Cov:==================>                52%][Progress:===========================>  91%] [Cov:==================>                52%][Progress:===========================>  91%] [Cov:==================>                52%][Progress:===========================>  92%] [Cov:==================>                52%][Progress:===========================>  93%] [Cov:==================>                52%][Progress:===========================>  93%] [Cov:==================>                52%][Progress:===========================>  93%] [Cov:==================>                52%][Progress:============================> 94%] [Cov:==================>                52%][Progress:============================> 94%] [Cov:==================>                52%][Progress:============================> 95%] [Cov:==================>                53%][Progress:============================> 95%] [Cov:==================>                53%][Progress:============================> 95%] [Cov:==================>                53%][Progress:============================> 96%] [Cov:==================>                53%][Progress:============================> 96%] [Cov:==================>                53%][Progress:=============================>97%] [Cov:==================>                53%][Progress:=============================>97%] [Cov:==================>                53%][Progress:=============================>97%] [Cov:==================>                53%][Progress:=============================>98%] [Cov:==================>                53%][Progress:=============================>98%] [Cov:==================>                53%][Progress:=============================>98%] [Cov:==================>                53%][Progress:=============================>99%] [Cov:==================>                53%][Progress:=============================>99%] [Cov:==================>                53%][Progress:=============================>99%] [Cov:==================>                53%][Progress:==============================100%] [Cov:==================>                53%][Progress:==============================100%] [Cov:==================>                53%]
* Search finished after 102s and 236 generations, 95136 statements, best individual has fitness: 1646.0
* Generated before the refinement 68 tests with total length 289
statement is: org.mozilla.javascript.CompilerEnvirons()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.CompilerEnvirons
statement code is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons()
statement is: org.evosuite.testcase.statements.FieldStatement@35127c92 type is: class org.evosuite.testcase.statements.FieldStatement return type class org.mozilla.javascript.DefaultErrorReporter
statement code is: DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance
statement is: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.Parser
statement code is: Parser parser = new Parser(arg0, arg1)
statement is: getEncodedSource()Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.lang.String
statement code is: String encodedSource = parser.getEncodedSource()
test data is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
parser.getEncodedSource();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CompilerEnvirons compilerEnvirons = // Set the encoding to be used for reading and writing files
        // Set the language mode to be used for parsing
        // Set the line terminator sequence to be used for parsing
        // Set the maximum number of errors that can occur during parsing
        // Set the maximum number of warnings that can occur during parsing
        new CompilerEnvirons("UTF-8", LanguageMode.Standard, "\n", 1000, 1000);
        DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
        Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
        parser.getEncodedSource();
    }
}
statement is: CompilerEnvirons compilerEnvirons = // Set the encoding to be used for reading and writing files
// Set the language mode to be used for parsing
// Set the line terminator sequence to be used for parsing
// Set the maximum number of errors that can occur during parsing
// Set the maximum number of warnings that can occur during parsing
new CompilerEnvirons("UTF-8", LanguageMode.Standard, "\n", 1000, 1000), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: DefaultErrorReporter.instance is DefaultErrorReporter
CtField is: static org.mozilla.javascript.DefaultErrorReporter org.mozilla.javascript.DefaultErrorReporter.instance DefaultErrorReporter instance
statement is: Parser parser = new Parser(compilerEnvirons, defaultErrorReporter), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V
statement is: parser.getEncodedSource(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: parser.getEncodedSource() target is: parser method is: getEncodedSource()
TestCase is: DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;

statement is: org.mozilla.javascript.CompilerEnvirons()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.CompilerEnvirons
statement code is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons()
statement is: org.evosuite.testcase.statements.FieldStatement@35127c92 type is: class org.evosuite.testcase.statements.FieldStatement return type class org.mozilla.javascript.DefaultErrorReporter
statement code is: DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance
statement is: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.Parser
statement code is: Parser parser = new Parser(arg0, arg1)
statement is: popScope()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: parser.popScope()
test data is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
parser.popScope();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CompilerEnvirons compilerEnvirons = new CompilerEnvirons("JavaScript", "1.8.7");
        DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
        Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
        parser.popScope();
    }
}
statement is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons("JavaScript", "1.8.7"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: DefaultErrorReporter.instance is DefaultErrorReporter
CtField is: static org.mozilla.javascript.DefaultErrorReporter org.mozilla.javascript.DefaultErrorReporter.instance DefaultErrorReporter instance
statement is: Parser parser = new Parser(compilerEnvirons, defaultErrorReporter), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V
statement is: parser.popScope(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: parser.popScope() target is: parser method is: popScope()
TestCase is: DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;

statement is: org.mozilla.javascript.CompilerEnvirons()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.CompilerEnvirons
statement code is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons()
statement is: org.evosuite.testcase.statements.FieldStatement@35127c92 type is: class org.evosuite.testcase.statements.FieldStatement return type class org.mozilla.javascript.DefaultErrorReporter
statement code is: DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance
statement is: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.Parser
statement code is: Parser parser = new Parser(arg0, arg1)
statement is: parse(Ljava/lang/String;Ljava/lang/String;I)Lorg/mozilla/javascript/ScriptOrFnNode; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.mozilla.javascript.ScriptOrFnNode
statement code is: ScriptOrFnNode parse = parser.parse("H-{bvlxlV)0pK+", "H-{bvlxlV)0pK+", 511)
test data is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
parser.parse("H-{bvlxlV)0pK+", "H-{bvlxlV)0pK+", 511);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
        DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
        Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
        parser.parse("Hello World!", "Hello World!", 511);
    }
}
statement is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: DefaultErrorReporter.instance is DefaultErrorReporter
CtField is: static org.mozilla.javascript.DefaultErrorReporter org.mozilla.javascript.DefaultErrorReporter.instance DefaultErrorReporter instance
statement is: Parser parser = new Parser(compilerEnvirons, defaultErrorReporter), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: parser.parse("Hello World!", "Hello World!", 511), class spoon.support.reflect.code.CtInvocationImpl
invocation is: parser.parse("Hello World!", "Hello World!", 511) target is: parser method is: parse(java.lang.String,java.lang.String,int)
source statement: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V callee: VariableReference: Statement 2, type org.mozilla.javascript.Parserindex is: 2
Matched Method is: parse(Ljava/lang/String;Ljava/lang/String;I)Lorg/mozilla/javascript/ScriptOrFnNode;
TestCase is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
String string = "Hello World!";
String string = "Hello World!";
int _int = 511;
parser.parse(string, string, _int);

statement is: org.mozilla.javascript.CompilerEnvirons()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.CompilerEnvirons
statement code is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons()
statement is: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.Parser
statement code is: Parser parser = new Parser(arg0, (ErrorReporter) null)
statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("[]")
statement is: parse(Ljava/io/Reader;Ljava/lang/String;I)Lorg/mozilla/javascript/ScriptOrFnNode; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.mozilla.javascript.ScriptOrFnNode
statement code is: ScriptOrFnNode parse = parser.parse((Reader) arg0, "[]", 119)
test data is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Parser parser = new Parser(compilerEnvirons, (ErrorReporter) null);
StringReader stringReader = new StringReader("[]");
parser.parse((Reader) stringReader, "[]", 119);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
        Parser parser = new Parser(compilerEnvirons, ((ErrorReporter) (null)));
        StringReader stringReader = new StringReader("[1, 2, 3, 4]");
        parser.parse(((Reader) (stringReader)), "[1, 2, 3, 4]", 119);
    }
}
statement is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Parser parser = new Parser(compilerEnvirons, ((ErrorReporter) (null))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: StringReader stringReader = new StringReader("[1, 2, 3, 4]"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: parser.parse(((Reader) (stringReader)), "[1, 2, 3, 4]", 119), class spoon.support.reflect.code.CtInvocationImpl
invocation is: parser.parse(((Reader) (stringReader)), "[1, 2, 3, 4]", 119) target is: parser method is: parse(Reader,java.lang.String,int)
source statement: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V callee: VariableReference: Statement 1, type org.mozilla.javascript.Parserindex is: 1
Matched Method is: parse(Ljava/io/Reader;Ljava/lang/String;I)Lorg/mozilla/javascript/ScriptOrFnNode;
TestCase is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Parser parser = new Parser(compilerEnvirons, (ErrorReporter) null);
String string = "[1, 2, 3, 4]";
StringReader stringReader = new StringReader(string);
String string = "[1, 2, 3, 4]";
int _int = 119;
parser.parse((Reader) stringReader, string, _int);

statement is: org.mozilla.javascript.CompilerEnvirons()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.CompilerEnvirons
statement code is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons()
statement is: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.Parser
statement code is: Parser parser = new Parser(arg0, (ErrorReporter) null)
statement is: addStrictWarning(Ljava/lang/String;Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: parser.addStrictWarning("msg.bad.return", "msg.bad.return")
test data is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Parser parser = new Parser(compilerEnvirons, (ErrorReporter) null);
parser.addStrictWarning("msg.bad.return", "msg.bad.return");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Test case 1: Empty string
        CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
        Parser parser = new Parser(compilerEnvirons, ((ErrorReporter) (null)));
        parser.addStrictWarning("msg.bad.return", "msg.bad.return");
        assertFalse(containsSpecialCharacters(""));
        // Test case 2: String with only whitespace characters
        CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
        Parser parser = new Parser(compilerEnvirons, ((ErrorReporter) (null)));
        parser.addStrictWarning("msg.bad.return", "msg.bad.return");
        assertFalse(containsSpecialCharacters("   \t\n"));
        // Test case 3: String with multiple special characters
        CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
        Parser parser = new Parser(compilerEnvirons, ((ErrorReporter) (null)));
        parser.addStrictWarning("msg.bad.return", "msg.bad.return");
        assertTrue(containsSpecialCharacters("\t\n\\\""));
        // Test case 4: String with only special characters
        CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
        Parser parser = new Parser(compilerEnvirons, ((ErrorReporter) (null)));
        parser.addStrictWarning("msg.bad.return", "msg.bad.return");
        assertTrue(containsSpecialCharacters("\t\n\\"));
    }
}
statement is: // Test case 1: Empty string
CompilerEnvirons compilerEnvirons = new CompilerEnvirons(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Parser parser = new Parser(compilerEnvirons, ((ErrorReporter) (null))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: parser.addStrictWarning("msg.bad.return", "msg.bad.return"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: parser.addStrictWarning("msg.bad.return", "msg.bad.return") target is: parser method is: addStrictWarning(java.lang.String,java.lang.String)
source statement: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V callee: VariableReference: Statement 1, type org.mozilla.javascript.Parserindex is: 1
Matched Method is: addStrictWarning(Ljava/lang/String;Ljava/lang/String;)V
statement is: assertFalse(containsSpecialCharacters("")), class spoon.support.reflect.code.CtInvocationImpl
invocation is: assertFalse(containsSpecialCharacters("")) target is:  method is: assertFalse(<unknown>)
statement is: // Test case 2: String with only whitespace characters
CompilerEnvirons compilerEnvirons = new CompilerEnvirons(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Parser parser = new Parser(compilerEnvirons, ((ErrorReporter) (null))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: parser.addStrictWarning("msg.bad.return", "msg.bad.return"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: parser.addStrictWarning("msg.bad.return", "msg.bad.return") target is: parser method is: addStrictWarning(java.lang.String,java.lang.String)
source statement: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V callee: VariableReference: Statement 1, type org.mozilla.javascript.Parserindex is: 6
Matched Method is: addStrictWarning(Ljava/lang/String;Ljava/lang/String;)V
statement is: assertFalse(containsSpecialCharacters("   \t\n")), class spoon.support.reflect.code.CtInvocationImpl
invocation is: assertFalse(containsSpecialCharacters("   \t\n")) target is:  method is: assertFalse(<unknown>)
statement is: // Test case 3: String with multiple special characters
CompilerEnvirons compilerEnvirons = new CompilerEnvirons(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Parser parser = new Parser(compilerEnvirons, ((ErrorReporter) (null))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: parser.addStrictWarning("msg.bad.return", "msg.bad.return"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: parser.addStrictWarning("msg.bad.return", "msg.bad.return") target is: parser method is: addStrictWarning(java.lang.String,java.lang.String)
source statement: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V callee: VariableReference: Statement 1, type org.mozilla.javascript.Parserindex is: 11
Matched Method is: addStrictWarning(Ljava/lang/String;Ljava/lang/String;)V
statement is: assertTrue(containsSpecialCharacters("\t\n\\\"")), class spoon.support.reflect.code.CtInvocationImpl
invocation is: assertTrue(containsSpecialCharacters("\t\n\\\"")) target is:  method is: assertTrue(<unknown>)
statement is: // Test case 4: String with only special characters
CompilerEnvirons compilerEnvirons = new CompilerEnvirons(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Parser parser = new Parser(compilerEnvirons, ((ErrorReporter) (null))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: parser.addStrictWarning("msg.bad.return", "msg.bad.return"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: parser.addStrictWarning("msg.bad.return", "msg.bad.return") target is: parser method is: addStrictWarning(java.lang.String,java.lang.String)
source statement: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V callee: VariableReference: Statement 1, type org.mozilla.javascript.Parserindex is: 16
Matched Method is: addStrictWarning(Ljava/lang/String;Ljava/lang/String;)V
statement is: assertTrue(containsSpecialCharacters("\t\n\\")), class spoon.support.reflect.code.CtInvocationImpl
invocation is: assertTrue(containsSpecialCharacters("\t\n\\")) target is:  method is: assertTrue(<unknown>)
TestCase is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Parser parser = new Parser(compilerEnvirons, (ErrorReporter) null);
String string = "msg.bad.return";
String string = "msg.bad.return";
parser.addStrictWarning(string, string);
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Parser parser = new Parser(compilerEnvirons, (ErrorReporter) null);
String string = "msg.bad.return";
String string = "msg.bad.return";
parser.addStrictWarning(string, string);
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Parser parser = new Parser(compilerEnvirons, (ErrorReporter) null);
String string = "msg.bad.return";
String string = "msg.bad.return";
parser.addStrictWarning(string, string);
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Parser parser = new Parser(compilerEnvirons, (ErrorReporter) null);
String string = "msg.bad.return";
String string = "msg.bad.return";
parser.addStrictWarning(string, string);

statement is: org.mozilla.javascript.CompilerEnvirons()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.CompilerEnvirons
statement code is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons()
statement is: org.evosuite.testcase.statements.FieldStatement@35127c92 type is: class org.evosuite.testcase.statements.FieldStatement return type class org.mozilla.javascript.DefaultErrorReporter
statement code is: DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance
statement is: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.Parser
statement code is: Parser parser = new Parser(arg0, arg1)
statement is: parse(Ljava/lang/String;Ljava/lang/String;I)Lorg/mozilla/javascript/ScriptOrFnNode; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.mozilla.javascript.ScriptOrFnNode
statement code is: ScriptOrFnNode parse = parser.parse("(Function)", "(Function)", (-4147))
test data is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
parser.parse("(Function)", "(Function)", (-4147));

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
        DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
        Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
        parser.parse("(Function)", "(Function)", -142);
    }
}
statement is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: DefaultErrorReporter.instance is DefaultErrorReporter
CtField is: static org.mozilla.javascript.DefaultErrorReporter org.mozilla.javascript.DefaultErrorReporter.instance DefaultErrorReporter instance
statement is: Parser parser = new Parser(compilerEnvirons, defaultErrorReporter), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: parser.parse("(Function)", "(Function)", -142), class spoon.support.reflect.code.CtInvocationImpl
invocation is: parser.parse("(Function)", "(Function)", -142) target is: parser method is: parse(java.lang.String,java.lang.String,int)
source statement: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V callee: VariableReference: Statement 2, type org.mozilla.javascript.Parserindex is: 2
Matched Method is: parse(Ljava/lang/String;Ljava/lang/String;I)Lorg/mozilla/javascript/ScriptOrFnNode;
i 2 Parameters size() 2 Num of Method Parameters: 3
TestCase is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
String string = "(Function)";
String string = "(Function)";
int _int = null;
parser.parse(string, string, _int);

statement is: org.mozilla.javascript.CompilerEnvirons()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.CompilerEnvirons
statement code is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons()
statement is: org.evosuite.testcase.statements.FieldStatement@35127c92 type is: class org.evosuite.testcase.statements.FieldStatement return type class org.mozilla.javascript.DefaultErrorReporter
statement code is: DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance
statement is: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.Parser
statement code is: Parser parser = new Parser(arg0, arg1)
statement is: parse(Ljava/lang/String;Ljava/lang/String;I)Lorg/mozilla/javascript/ScriptOrFnNode; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.mozilla.javascript.ScriptOrFnNode
statement code is: ScriptOrFnNode parse = parser.parse("[@(MhrsR;n%;Rh<`>|]", "[@(MhrsR;n%;Rh<`>|]", 13)
test data is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
parser.parse("[@(MhrsR;n%;Rh<`>|]", "[@(MhrsR;n%;Rh<`>|]", 13);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
        DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
        Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
        parser.parse("[@(MhrsR;n%;Rh<`>|]", "[@(MhrsR;n%;Rh<`>|]", 13);
    }
}
statement is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: DefaultErrorReporter.instance is DefaultErrorReporter
CtField is: static org.mozilla.javascript.DefaultErrorReporter org.mozilla.javascript.DefaultErrorReporter.instance DefaultErrorReporter instance
statement is: Parser parser = new Parser(compilerEnvirons, defaultErrorReporter), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: parser.parse("[@(MhrsR;n%;Rh<`>|]", "[@(MhrsR;n%;Rh<`>|]", 13), class spoon.support.reflect.code.CtInvocationImpl
invocation is: parser.parse("[@(MhrsR;n%;Rh<`>|]", "[@(MhrsR;n%;Rh<`>|]", 13) target is: parser method is: parse(java.lang.String,java.lang.String,int)
source statement: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V callee: VariableReference: Statement 2, type org.mozilla.javascript.Parserindex is: 2
Matched Method is: parse(Ljava/lang/String;Ljava/lang/String;I)Lorg/mozilla/javascript/ScriptOrFnNode;
TestCase is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
String string = "[@(MhrsR;n%;Rh<`>|]";
String string = "[@(MhrsR;n%;Rh<`>|]";
int _int = 13;
parser.parse(string, string, _int);

statement is: org.mozilla.javascript.CompilerEnvirons()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.CompilerEnvirons
statement code is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons()
statement is: getErrorReporter()Lorg/mozilla/javascript/ErrorReporter; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.mozilla.javascript.DefaultErrorReporter
statement code is: DefaultErrorReporter errorReporter = (DefaultErrorReporter)compilerEnvirons.getErrorReporter()
statement is: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.Parser
statement code is: Parser parser = new Parser(arg0, arg1)
statement is: setXmlAvailable(Z)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: compilerEnvirons.setXmlAvailable(false)
statement is: parse(Ljava/lang/String;Ljava/lang/String;I)Lorg/mozilla/javascript/ScriptOrFnNode; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.mozilla.javascript.ScriptOrFnNode
statement code is: ScriptOrFnNode parse = parser.parse("[@(MhrsR;n%;Rh<`>|]", (String) null, 13)
test data is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)compilerEnvirons.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
compilerEnvirons.setXmlAvailable(false);
parser.parse("[@(MhrsR;n%;Rh<`>|]", (String) null, 13);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
        DefaultErrorReporter errorReporter = ((DefaultErrorReporter) (compilerEnvirons.getErrorReporter()));
        Parser parser = new Parser(compilerEnvirons, errorReporter);
        compilerEnvirons.setXmlAvailable(false);
        parser.parse("[@(MhrsR;n%;Rh<`>|]", ((String) (null)), 13);
    }
}
statement is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: DefaultErrorReporter errorReporter = ((DefaultErrorReporter) (compilerEnvirons.getErrorReporter())), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: ((DefaultErrorReporter) (compilerEnvirons.getErrorReporter())) target is: compilerEnvirons method is: getErrorReporter()
source statement: org.mozilla.javascript.CompilerEnvirons()V callee: VariableReference: Statement 0, type org.mozilla.javascript.CompilerEnvironsindex is: 0
Matched Method is: getErrorReporter()Lorg/mozilla/javascript/ErrorReporter;
statement is: Parser parser = new Parser(compilerEnvirons, errorReporter), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: compilerEnvirons.setXmlAvailable(false), class spoon.support.reflect.code.CtInvocationImpl
invocation is: compilerEnvirons.setXmlAvailable(false) target is: compilerEnvirons method is: setXmlAvailable(boolean)
source statement: org.mozilla.javascript.CompilerEnvirons()V callee: VariableReference: Statement 0, type org.mozilla.javascript.CompilerEnvironsindex is: 0
Matched Method is: setXmlAvailable(Z)V
statement is: parser.parse("[@(MhrsR;n%;Rh<`>|]", ((String) (null)), 13), class spoon.support.reflect.code.CtInvocationImpl
invocation is: parser.parse("[@(MhrsR;n%;Rh<`>|]", ((String) (null)), 13) target is: parser method is: parse(java.lang.String,java.lang.String,int)
source statement: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V callee: VariableReference: Statement 2, type org.mozilla.javascript.Parserindex is: 2
Matched Method is: parse(Ljava/lang/String;Ljava/lang/String;I)Lorg/mozilla/javascript/ScriptOrFnNode;
i 2 Parameters size() 2 Num of Method Parameters: 3
TestCase is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)compilerEnvirons.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
boolean _boolean = false;
compilerEnvirons.setXmlAvailable(_boolean);
String string = "[@(MhrsR;n%;Rh<`>|]";
int _int = 13;
int _int = null;
parser.parse(string, (String) _int, _int);

statement is: org.mozilla.javascript.CompilerEnvirons()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.CompilerEnvirons
statement code is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons()
statement is: getErrorReporter()Lorg/mozilla/javascript/ErrorReporter; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.mozilla.javascript.DefaultErrorReporter
statement code is: DefaultErrorReporter errorReporter = (DefaultErrorReporter)compilerEnvirons.getErrorReporter()
statement is: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.Parser
statement code is: Parser parser = new Parser(arg0, arg1)
statement is: parse(Ljava/lang/String;Ljava/lang/String;I)Lorg/mozilla/javascript/ScriptOrFnNode; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.mozilla.javascript.ScriptOrFnNode
statement code is: ScriptOrFnNode parse = parser.parse("{kP0*^,a", "{kP0*^,a", (-4393))
test data is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)compilerEnvirons.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
parser.parse("{kP0*^,a", "{kP0*^,a", (-4393));

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
        DefaultErrorReporter errorReporter = ((DefaultErrorReporter) (compilerEnvirons.getErrorReporter()));
        Parser parser = new Parser(compilerEnvirons, errorReporter);
    }
}
statement is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: DefaultErrorReporter errorReporter = ((DefaultErrorReporter) (compilerEnvirons.getErrorReporter())), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: ((DefaultErrorReporter) (compilerEnvirons.getErrorReporter())) target is: compilerEnvirons method is: getErrorReporter()
source statement: org.mozilla.javascript.CompilerEnvirons()V callee: VariableReference: Statement 0, type org.mozilla.javascript.CompilerEnvironsindex is: 0
Matched Method is: getErrorReporter()Lorg/mozilla/javascript/ErrorReporter;
statement is: Parser parser = new Parser(compilerEnvirons, errorReporter), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)compilerEnvirons.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);

statement is: org.mozilla.javascript.CompilerEnvirons()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.CompilerEnvirons
statement code is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons()
statement is: getCurrentContext()Lorg/mozilla/javascript/Context; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.mozilla.javascript.Context
statement code is: Context currentContext = Context.getCurrentContext()
statement is: getErrorReporter()Lorg/mozilla/javascript/ErrorReporter; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.mozilla.javascript.DefaultErrorReporter
statement code is: DefaultErrorReporter errorReporter = (DefaultErrorReporter)context.getErrorReporter()
statement is: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.Parser
statement code is: Parser parser = new Parser(arg0, arg1)
statement is: parse(Ljava/lang/String;Ljava/lang/String;I)Lorg/mozilla/javascript/ScriptOrFnNode; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.mozilla.javascript.ScriptOrFnNode
statement code is: ScriptOrFnNode parse = parser.parse("isPrototypeOf", "V", 7)
statement is: pushScope(Lorg/mozilla/javascript/Node;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: parser.pushScope(arg0)
statement is: pushScope(Lorg/mozilla/javascript/Node;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: parser.pushScope(arg0)
test data is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Context currentContext = Context.getCurrentContext();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)currentContext.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
ScriptOrFnNode parse = parser.parse("isPrototypeOf", "V", 7);
parser.pushScope(parse);
parser.pushScope(parse);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
        Context currentContext = Context.getCurrentContext();
        DefaultErrorReporter errorReporter = ((DefaultErrorReporter) (currentContext.getErrorReporter()));
        Parser parser = new Parser(compilerEnvirons, errorReporter);
        ScriptOrFnNode parse = parser.parse("isPrototypeOf", "V", 7);
        parser.pushScope(parse);
        parser.pushScope(parse);
        // Use more descriptive and representative values for the primitive types and Strings
        String functionName = "myFunction";
        int parameterCount = 2;
        String[] parameters = new String[]{ "param1", "param2" };
        Object[] args = new Object[]{ new Integer(1), new String("hello") };
        // Create a new scope for the function call
        Scope scope = parser.pushScope(parse);
        // Evaluate the function call with the given arguments
        Script script = new Script(functionName, parameterCount, parameters, args);
        script.exec(scope);
    }
}
statement is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Context currentContext = Context.getCurrentContext(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: Context.getCurrentContext() target is: Context method is: getCurrentContext()
Matched Method is: getCurrentContext()Lorg/mozilla/javascript/Context;
statement is: DefaultErrorReporter errorReporter = ((DefaultErrorReporter) (currentContext.getErrorReporter())), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: ((DefaultErrorReporter) (currentContext.getErrorReporter())) target is: currentContext method is: getErrorReporter()
source statement: getCurrentContext()Lorg/mozilla/javascript/Context; callee: VariableReference: Statement 1, type org.mozilla.javascript.Contextindex is: 1
Matched Method is: getErrorReporter()Lorg/mozilla/javascript/ErrorReporter;
statement is: Parser parser = new Parser(compilerEnvirons, errorReporter), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: ScriptOrFnNode parse = parser.parse("isPrototypeOf", "V", 7), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: parser.parse("isPrototypeOf", "V", 7) target is: parser method is: parse(java.lang.String,java.lang.String,int)
source statement: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V callee: VariableReference: Statement 3, type org.mozilla.javascript.Parserindex is: 3
Matched Method is: parse(Ljava/lang/String;Ljava/lang/String;I)Lorg/mozilla/javascript/ScriptOrFnNode;
statement is: parser.pushScope(parse), class spoon.support.reflect.code.CtInvocationImpl
invocation is: parser.pushScope(parse) target is: parser method is: pushScope(ScriptOrFnNode)
source statement: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V callee: VariableReference: Statement 3, type org.mozilla.javascript.Parserindex is: 3
source statement: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V callee: VariableReference: Statement 3, type org.mozilla.javascript.Parserindex is: 3
Matched Method is: pushScope(Lorg/mozilla/javascript/Node;)V
statement is: parser.pushScope(parse), class spoon.support.reflect.code.CtInvocationImpl
invocation is: parser.pushScope(parse) target is: parser method is: pushScope(ScriptOrFnNode)
source statement: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V callee: VariableReference: Statement 3, type org.mozilla.javascript.Parserindex is: 3
source statement: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V callee: VariableReference: Statement 3, type org.mozilla.javascript.Parserindex is: 3
Matched Method is: pushScope(Lorg/mozilla/javascript/Node;)V
statement is: // Use more descriptive and representative values for the primitive types and Strings
String functionName = "myFunction", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: int parameterCount = 2, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: String[] parameters = new String[]{ "param1", "param2" }, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
statement is: Object[] args = new Object[]{ new Integer(1), new String("hello") }, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
statement is: // Create a new scope for the function call
Scope scope = parser.pushScope(parse), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: parser.pushScope(parse) target is: parser method is: pushScope(ScriptOrFnNode)
source statement: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V callee: VariableReference: Statement 3, type org.mozilla.javascript.Parserindex is: 3
source statement: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V callee: VariableReference: Statement 3, type org.mozilla.javascript.Parserindex is: 3
Matched Method is: pushScope(Lorg/mozilla/javascript/Node;)V
statement is: // Evaluate the function call with the given arguments
Script script = new Script(functionName, parameterCount, parameters, args), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: script.exec(scope), class spoon.support.reflect.code.CtInvocationImpl
invocation is: script.exec(scope) target is: script method is: exec(Scope)
* this is vulnerable: String string = "myFunction"
* this is vulnerable: int _int = 2
TestCase is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Context currentContext = Context.getCurrentContext();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)currentContext.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
String string = "isPrototypeOf";
String string = "V";
int _int = 7;
ScriptOrFnNode parse = parser.parse(string, string, _int);
parser.pushScope(parse);
parser.pushScope(parse);
String string = "myFunction";
int _int = 2;
parser.pushScope(parse);

statement is: org.mozilla.javascript.CompilerEnvirons()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.CompilerEnvirons
statement code is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons()
statement is: org.evosuite.testcase.statements.FieldStatement@35127c92 type is: class org.evosuite.testcase.statements.FieldStatement return type class org.mozilla.javascript.DefaultErrorReporter
statement code is: DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance
statement is: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.Parser
statement code is: Parser parser = new Parser(arg0, arg1)
statement is: parse(Ljava/lang/String;Ljava/lang/String;I)Lorg/mozilla/javascript/ScriptOrFnNode; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.mozilla.javascript.ScriptOrFnNode
statement code is: ScriptOrFnNode parse = parser.parse("do ", "do ", 16)
test data is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
parser.parse("do ", "do ", 16);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
        DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
        Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
    }
}
statement is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: DefaultErrorReporter.instance is DefaultErrorReporter
CtField is: static org.mozilla.javascript.DefaultErrorReporter org.mozilla.javascript.DefaultErrorReporter.instance DefaultErrorReporter instance
statement is: Parser parser = new Parser(compilerEnvirons, defaultErrorReporter), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);

statement is: org.mozilla.javascript.CompilerEnvirons()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.CompilerEnvirons
statement code is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons()
statement is: org.evosuite.testcase.statements.FieldStatement@35127c92 type is: class org.evosuite.testcase.statements.FieldStatement return type class org.mozilla.javascript.DefaultErrorReporter
statement code is: DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance
statement is: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.Parser
statement code is: Parser parser = new Parser(arg0, arg1)
statement is: setGeneratingSource(Z)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: compilerEnvirons.setGeneratingSource(false)
statement is: parse(Ljava/lang/String;Ljava/lang/String;I)Lorg/mozilla/javascript/ScriptOrFnNode; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.mozilla.javascript.ScriptOrFnNode
statement code is: ScriptOrFnNode parse = parser.parse(";vM*ZI<n", "retun", 23)
test data is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
compilerEnvirons.setGeneratingSource(false);
parser.parse(";vM*ZI<n", "retun", 23);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
        DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
        Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
        compilerEnvirons.setGeneratingSource(false);
        parser.parse("var x: integer;", "assign_integer", 10);
    }
}
statement is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: DefaultErrorReporter.instance is DefaultErrorReporter
CtField is: static org.mozilla.javascript.DefaultErrorReporter org.mozilla.javascript.DefaultErrorReporter.instance DefaultErrorReporter instance
statement is: Parser parser = new Parser(compilerEnvirons, defaultErrorReporter), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: compilerEnvirons.setGeneratingSource(false), class spoon.support.reflect.code.CtInvocationImpl
invocation is: compilerEnvirons.setGeneratingSource(false) target is: compilerEnvirons method is: setGeneratingSource(boolean)
source statement: org.mozilla.javascript.CompilerEnvirons()V callee: VariableReference: Statement 0, type org.mozilla.javascript.CompilerEnvironsindex is: 0
Matched Method is: setGeneratingSource(Z)V
statement is: parser.parse("var x: integer;", "assign_integer", 10), class spoon.support.reflect.code.CtInvocationImpl
invocation is: parser.parse("var x: integer;", "assign_integer", 10) target is: parser method is: parse(java.lang.String,java.lang.String,int)
source statement: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V callee: VariableReference: Statement 2, type org.mozilla.javascript.Parserindex is: 2
Matched Method is: parse(Ljava/lang/String;Ljava/lang/String;I)Lorg/mozilla/javascript/ScriptOrFnNode;
TestCase is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
boolean _boolean = false;
compilerEnvirons.setGeneratingSource(_boolean);
String string = "var x: integer;";
String string = "assign_integer";
int _int = 10;
parser.parse(string, string, _int);

statement is: org.mozilla.javascript.CompilerEnvirons()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.CompilerEnvirons
statement code is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons()
statement is: org.evosuite.testcase.statements.FieldStatement@35127c92 type is: class org.evosuite.testcase.statements.FieldStatement return type class org.mozilla.javascript.DefaultErrorReporter
statement code is: DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance
statement is: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.Parser
statement code is: Parser parser = new Parser(arg0, arg1)
statement is: parse(Ljava/lang/String;Ljava/lang/String;I)Lorg/mozilla/javascript/ScriptOrFnNode; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.mozilla.javascript.ScriptOrFnNode
statement code is: ScriptOrFnNode parse = parser.parse("return", "return", 23)
test data is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
parser.parse("return", "return", 23);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
        DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
        Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
        parser.parse("return 5 + 3 * (2 - 1)", "return", 23);
    }
}
statement is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: DefaultErrorReporter.instance is DefaultErrorReporter
CtField is: static org.mozilla.javascript.DefaultErrorReporter org.mozilla.javascript.DefaultErrorReporter.instance DefaultErrorReporter instance
statement is: Parser parser = new Parser(compilerEnvirons, defaultErrorReporter), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: parser.parse("return 5 + 3 * (2 - 1)", "return", 23), class spoon.support.reflect.code.CtInvocationImpl
invocation is: parser.parse("return 5 + 3 * (2 - 1)", "return", 23) target is: parser method is: parse(java.lang.String,java.lang.String,int)
source statement: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V callee: VariableReference: Statement 2, type org.mozilla.javascript.Parserindex is: 2
Matched Method is: parse(Ljava/lang/String;Ljava/lang/String;I)Lorg/mozilla/javascript/ScriptOrFnNode;
TestCase is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
String string = "return 5 + 3 * (2 - 1)";
String string = "return";
int _int = 23;
parser.parse(string, string, _int);

statement is: org.mozilla.javascript.CompilerEnvirons()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.CompilerEnvirons
statement code is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons()
statement is: getErrorReporter()Lorg/mozilla/javascript/ErrorReporter; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.mozilla.javascript.DefaultErrorReporter
statement code is: DefaultErrorReporter errorReporter = (DefaultErrorReporter)compilerEnvirons.getErrorReporter()
statement is: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.Parser
statement code is: Parser parser = new Parser(arg0, arg1)
statement is: parse(Ljava/lang/String;Ljava/lang/String;I)Lorg/mozilla/javascript/ScriptOrFnNode; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.mozilla.javascript.ScriptOrFnNode
statement code is: ScriptOrFnNode parse = parser.parse("throw ", "throw ", (-226))
test data is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)compilerEnvirons.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
parser.parse("throw ", "throw ", (-226));

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
    }
}
statement is: org.mozilla.javascript.CompilerEnvirons()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.CompilerEnvirons
statement code is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons()
statement is: getContext()Lorg/mozilla/javascript/Context; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.mozilla.javascript.Context
statement code is: Context context = Context.getContext()
statement is: getErrorReporter()Lorg/mozilla/javascript/ErrorReporter; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.mozilla.javascript.DefaultErrorReporter
statement code is: DefaultErrorReporter errorReporter = (DefaultErrorReporter)context.getErrorReporter()
statement is: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.Parser
statement code is: Parser parser = new Parser(arg0, arg1)
statement is: parse(Ljava/lang/String;Ljava/lang/String;I)Lorg/mozilla/javascript/ScriptOrFnNode; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.mozilla.javascript.ScriptOrFnNode
statement code is: ScriptOrFnNode parse = parser.parse("if ", "if ", 11)
test data is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Context context = Context.getContext();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)context.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
parser.parse("if ", "if ", 11);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
        Context context = Context.getContext();
        DefaultErrorReporter errorReporter = ((DefaultErrorReporter) (context.getErrorReporter()));
        Parser parser = new Parser(compilerEnvirons, errorReporter);
    }
}
statement is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Context context = Context.getContext(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: Context.getContext() target is: Context method is: getContext()
Matched Method is: getContext()Lorg/mozilla/javascript/Context;
statement is: DefaultErrorReporter errorReporter = ((DefaultErrorReporter) (context.getErrorReporter())), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: ((DefaultErrorReporter) (context.getErrorReporter())) target is: context method is: getErrorReporter()
source statement: getContext()Lorg/mozilla/javascript/Context; callee: VariableReference: Statement 1, type org.mozilla.javascript.Contextindex is: 1
Matched Method is: getErrorReporter()Lorg/mozilla/javascript/ErrorReporter;
statement is: Parser parser = new Parser(compilerEnvirons, errorReporter), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Context context = Context.getContext();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)context.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);

statement is: org.mozilla.javascript.CompilerEnvirons()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.CompilerEnvirons
statement code is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons()
statement is: getCurrentContext()Lorg/mozilla/javascript/Context; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.mozilla.javascript.Context
statement code is: Context currentContext = Context.getCurrentContext()
statement is: getErrorReporter()Lorg/mozilla/javascript/ErrorReporter; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.mozilla.javascript.DefaultErrorReporter
statement code is: DefaultErrorReporter errorReporter = (DefaultErrorReporter)context.getErrorReporter()
statement is: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.Parser
statement code is: Parser parser = new Parser(arg0, arg1)
statement is: parse(Ljava/lang/String;Ljava/lang/String;I)Lorg/mozilla/javascript/ScriptOrFnNode; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.mozilla.javascript.ScriptOrFnNode
statement code is: ScriptOrFnNode parse = parser.parse("switch", "language version", 11)
test data is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Context currentContext = Context.getCurrentContext();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)currentContext.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
parser.parse("switch", "language version", 11);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
        compilerEnvirons.setLanguageVersion(11);// Set language version to Java 11

        Context currentContext = Context.getCurrentContext();
        currentContext.setErrorReporter(new DefaultErrorReporter());// Use a default error reporter

        Parser parser = new Parser(compilerEnvirons, currentContext);
        parser.parse("switch", "language version", 11);
    }
}
statement is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: compilerEnvirons.setLanguageVersion(11)// Set language version to Java 11
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: compilerEnvirons.setLanguageVersion(11)// Set language version to Java 11
 target is: compilerEnvirons method is: setLanguageVersion(int)
statement is: Context currentContext = Context.getCurrentContext(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: Context.getCurrentContext() target is: Context method is: getCurrentContext()
Matched Method is: getCurrentContext()Lorg/mozilla/javascript/Context;
statement is: currentContext.setErrorReporter(new DefaultErrorReporter())// Use a default error reporter
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: currentContext.setErrorReporter(new DefaultErrorReporter())// Use a default error reporter
 target is: currentContext method is: setErrorReporter(DefaultErrorReporter)
statement is: Parser parser = new Parser(compilerEnvirons, currentContext), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: parser.parse("switch", "language version", 11), class spoon.support.reflect.code.CtInvocationImpl
invocation is: parser.parse("switch", "language version", 11) target is: parser method is: parse(java.lang.String,java.lang.String,int)
source statement: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V callee: VariableReference: Statement 3, type org.mozilla.javascript.Parserindex is: 2
Matched Method is: parse(Ljava/lang/String;Ljava/lang/String;I)Lorg/mozilla/javascript/ScriptOrFnNode;
TestCase is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Context currentContext = Context.getCurrentContext();
Parser parser = new Parser(compilerEnvirons, (ErrorReporter) currentContext);
String string = "switch";
String string = "language version";
int _int = 11;
((Parser) string).parse(string, string, _int);

statement is: org.mozilla.javascript.CompilerEnvirons()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.CompilerEnvirons
statement code is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons()
statement is: org.evosuite.testcase.statements.FieldStatement@35127c92 type is: class org.evosuite.testcase.statements.FieldStatement return type class org.mozilla.javascript.DefaultErrorReporter
statement code is: DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance
statement is: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.Parser
statement code is: Parser parser = new Parser(arg0, arg1)
statement is: parse(Ljava/lang/String;Ljava/lang/String;I)Lorg/mozilla/javascript/ScriptOrFnNode; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.mozilla.javascript.ScriptOrFnNode
statement code is: ScriptOrFnNode parse = parser.parse("with", "o?`?}SO#J", 1428)
test data is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
parser.parse("with", "o?`?}SO#J", 1428);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
        DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
        Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
        parser.parse("1234567890", "This is a sentence.", 0);
    }
}
statement is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: DefaultErrorReporter.instance is DefaultErrorReporter
CtField is: static org.mozilla.javascript.DefaultErrorReporter org.mozilla.javascript.DefaultErrorReporter.instance DefaultErrorReporter instance
statement is: Parser parser = new Parser(compilerEnvirons, defaultErrorReporter), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: parser.parse("1234567890", "This is a sentence.", 0), class spoon.support.reflect.code.CtInvocationImpl
invocation is: parser.parse("1234567890", "This is a sentence.", 0) target is: parser method is: parse(java.lang.String,java.lang.String,int)
source statement: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V callee: VariableReference: Statement 2, type org.mozilla.javascript.Parserindex is: 2
Matched Method is: parse(Ljava/lang/String;Ljava/lang/String;I)Lorg/mozilla/javascript/ScriptOrFnNode;
TestCase is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
String string = "1234567890";
String string = "This is a sentence.";
int _int = 0;
parser.parse(string, string, _int);

statement is: org.mozilla.javascript.CompilerEnvirons()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.CompilerEnvirons
statement code is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons()
statement is: org.evosuite.testcase.statements.FieldStatement@35127c92 type is: class org.evosuite.testcase.statements.FieldStatement return type class org.mozilla.javascript.DefaultErrorReporter
statement code is: DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance
statement is: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.Parser
statement code is: Parser parser = new Parser(arg0, arg1)
statement is: parse(Ljava/lang/String;Ljava/lang/String;I)Lorg/mozilla/javascript/ScriptOrFnNode; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.mozilla.javascript.ScriptOrFnNode
statement code is: ScriptOrFnNode parse = parser.parse("bj:", "bj:", 16)
test data is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
parser.parse("bj:", "bj:", 16);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
        DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
        Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
        parser.parse("bj:", "bj:", 16);
    }
}
statement is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: DefaultErrorReporter.instance is DefaultErrorReporter
CtField is: static org.mozilla.javascript.DefaultErrorReporter org.mozilla.javascript.DefaultErrorReporter.instance DefaultErrorReporter instance
statement is: Parser parser = new Parser(compilerEnvirons, defaultErrorReporter), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: parser.parse("bj:", "bj:", 16), class spoon.support.reflect.code.CtInvocationImpl
invocation is: parser.parse("bj:", "bj:", 16) target is: parser method is: parse(java.lang.String,java.lang.String,int)
source statement: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V callee: VariableReference: Statement 2, type org.mozilla.javascript.Parserindex is: 2
Matched Method is: parse(Ljava/lang/String;Ljava/lang/String;I)Lorg/mozilla/javascript/ScriptOrFnNode;
TestCase is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
String string = "bj:";
String string = "bj:";
int _int = 16;
parser.parse(string, string, _int);

statement is: org.mozilla.javascript.CompilerEnvirons()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.CompilerEnvirons
statement code is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons()
statement is: org.evosuite.testcase.statements.FieldStatement@35127c92 type is: class org.evosuite.testcase.statements.FieldStatement return type class org.mozilla.javascript.DefaultErrorReporter
statement code is: DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance
statement is: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.Parser
statement code is: Parser parser = new Parser(arg0, arg1)
statement is: parse(Ljava/lang/String;Ljava/lang/String;I)Lorg/mozilla/javascript/ScriptOrFnNode; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.mozilla.javascript.ScriptOrFnNode
statement code is: ScriptOrFnNode parse = parser.parse("OP}ua=UA|aqxpPdDD", "OP}ua=UA|aqxpPdDD", (-1756))
test data is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
parser.parse("OP}ua=UA|aqxpPdDD", "OP}ua=UA|aqxpPdDD", (-1756));

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
        DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
        Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
        parser.parse("This is a sample input string", "This is a sample input string", -1000);
    }
}
statement is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: DefaultErrorReporter.instance is DefaultErrorReporter
CtField is: static org.mozilla.javascript.DefaultErrorReporter org.mozilla.javascript.DefaultErrorReporter.instance DefaultErrorReporter instance
statement is: Parser parser = new Parser(compilerEnvirons, defaultErrorReporter), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: parser.parse("This is a sample input string", "This is a sample input string", -1000), class spoon.support.reflect.code.CtInvocationImpl
invocation is: parser.parse("This is a sample input string", "This is a sample input string", -1000) target is: parser method is: parse(java.lang.String,java.lang.String,int)
source statement: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V callee: VariableReference: Statement 2, type org.mozilla.javascript.Parserindex is: 2
Matched Method is: parse(Ljava/lang/String;Ljava/lang/String;I)Lorg/mozilla/javascript/ScriptOrFnNode;
i 2 Parameters size() 2 Num of Method Parameters: 3
TestCase is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
String string = "This is a sample input string";
String string = "This is a sample input string";
int _int = null;
parser.parse(string, string, _int);

statement is: org.mozilla.javascript.CompilerEnvirons()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.CompilerEnvirons
statement code is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons()
statement is: getCurrentContext()Lorg/mozilla/javascript/Context; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.mozilla.javascript.Context
statement code is: Context currentContext = Context.getCurrentContext()
statement is: getErrorReporter()Lorg/mozilla/javascript/ErrorReporter; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.mozilla.javascript.DefaultErrorReporter
statement code is: DefaultErrorReporter errorReporter = (DefaultErrorReporter)context.getErrorReporter()
statement is: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.Parser
statement code is: Parser parser = new Parser(arg0, arg1)
statement is: parse(Ljava/lang/String;Ljava/lang/String;I)Lorg/mozilla/javascript/ScriptOrFnNode; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.mozilla.javascript.ScriptOrFnNode
statement code is: ScriptOrFnNode parse = parser.parse("pc;V(p_,X4", "<>", 5)
test data is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Context currentContext = Context.getCurrentContext();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)currentContext.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
parser.parse("pc;V(p_,X4", "<>", 5);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
        Context currentContext = Context.getCurrentContext();
        DefaultErrorReporter errorReporter = ((DefaultErrorReporter) (currentContext.getErrorReporter()));
        Parser parser = new Parser(compilerEnvirons, errorReporter);
        parser.parse("pc;V(p_,X4", "<>", 5);
    }
}
statement is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Context currentContext = Context.getCurrentContext(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: Context.getCurrentContext() target is: Context method is: getCurrentContext()
Matched Method is: getCurrentContext()Lorg/mozilla/javascript/Context;
statement is: DefaultErrorReporter errorReporter = ((DefaultErrorReporter) (currentContext.getErrorReporter())), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: ((DefaultErrorReporter) (currentContext.getErrorReporter())) target is: currentContext method is: getErrorReporter()
source statement: getCurrentContext()Lorg/mozilla/javascript/Context; callee: VariableReference: Statement 1, type org.mozilla.javascript.Contextindex is: 1
Matched Method is: getErrorReporter()Lorg/mozilla/javascript/ErrorReporter;
statement is: Parser parser = new Parser(compilerEnvirons, errorReporter), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: parser.parse("pc;V(p_,X4", "<>", 5), class spoon.support.reflect.code.CtInvocationImpl
invocation is: parser.parse("pc;V(p_,X4", "<>", 5) target is: parser method is: parse(java.lang.String,java.lang.String,int)
source statement: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V callee: VariableReference: Statement 3, type org.mozilla.javascript.Parserindex is: 3
Matched Method is: parse(Ljava/lang/String;Ljava/lang/String;I)Lorg/mozilla/javascript/ScriptOrFnNode;
TestCase is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Context currentContext = Context.getCurrentContext();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)currentContext.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
String string = "pc;V(p_,X4";
String string = "<>";
int _int = 5;
parser.parse(string, string, _int);

statement is: org.mozilla.javascript.CompilerEnvirons()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.CompilerEnvirons
statement code is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons()
statement is: org.evosuite.testcase.statements.FieldStatement@35127c92 type is: class org.evosuite.testcase.statements.FieldStatement return type class org.mozilla.javascript.DefaultErrorReporter
statement code is: DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance
statement is: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.Parser
statement code is: Parser parser = new Parser(arg0, arg1)
statement is: parse(Ljava/lang/String;Ljava/lang/String;I)Lorg/mozilla/javascript/ScriptOrFnNode; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.mozilla.javascript.ScriptOrFnNode
statement code is: ScriptOrFnNode parse = parser.parse("r:eRIySm:Ck3gEN", "r:eRIySm:Ck3gEN", 3072)
statement is: defineSymbol(IZLjava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: parser.defineSymbol(86, true, "Lget")
test data is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
parser.parse("r:eRIySm:Ck3gEN", "r:eRIySm:Ck3gEN", 3072);
parser.defineSymbol(86, true, "Lget");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
        DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
        Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
        parser.parse("methodName", "sourceCode", MAX_METHOD_BODY_LENGTH);
        parser.defineSymbol(86, true, "Lget");
    }
}
statement is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: DefaultErrorReporter.instance is DefaultErrorReporter
CtField is: static org.mozilla.javascript.DefaultErrorReporter org.mozilla.javascript.DefaultErrorReporter.instance DefaultErrorReporter instance
statement is: Parser parser = new Parser(compilerEnvirons, defaultErrorReporter), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: parser.parse("methodName", "sourceCode", MAX_METHOD_BODY_LENGTH), class spoon.support.reflect.code.CtInvocationImpl
invocation is: parser.parse("methodName", "sourceCode", MAX_METHOD_BODY_LENGTH) target is: parser method is: parse(java.lang.String,java.lang.String)
source statement: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V callee: VariableReference: Statement 2, type org.mozilla.javascript.Parserindex is: 2
Matched Method is: parse(Ljava/lang/String;Ljava/lang/String;I)Lorg/mozilla/javascript/ScriptOrFnNode;
i 2 Parameters size() 2 Num of Method Parameters: 3
statement is: parser.defineSymbol(86, true, "Lget"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: parser.defineSymbol(86, true, "Lget") target is: parser method is: defineSymbol(int,boolean,java.lang.String)
source statement: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V callee: VariableReference: Statement 2, type org.mozilla.javascript.Parserindex is: 2
Matched Method is: defineSymbol(IZLjava/lang/String;)V
TestCase is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
String string = "methodName";
String string = "sourceCode";
int _int = null;
parser.parse(string, string, _int);
int _int = 86;
boolean _boolean = true;
String string = "Lget";
parser.defineSymbol(_int, _boolean, string);

statement is: org.mozilla.javascript.CompilerEnvirons()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.CompilerEnvirons
statement code is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons()
statement is: getErrorReporter()Lorg/mozilla/javascript/ErrorReporter; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.mozilla.javascript.DefaultErrorReporter
statement code is: DefaultErrorReporter errorReporter = (DefaultErrorReporter)compilerEnvirons.getErrorReporter()
statement is: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.Parser
statement code is: Parser parser = new Parser(arg0, arg1)
statement is: parse(Ljava/lang/String;Ljava/lang/String;I)Lorg/mozilla/javascript/ScriptOrFnNode; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.mozilla.javascript.ScriptOrFnNode
statement code is: ScriptOrFnNode parse = parser.parse("", "", 85)
statement is: defineSymbol(IZLjava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: parser.defineSymbol((-3170), false, "")
test data is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)compilerEnvirons.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
parser.parse("", "", 85);
parser.defineSymbol((-3170), false, "");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
        DefaultErrorReporter errorReporter = ((DefaultErrorReporter) (compilerEnvirons.getErrorReporter()));
        Parser parser = new Parser(compilerEnvirons, errorReporter);
        parser.parse("This is a test string", "This is the file name", 85);
        parser.defineSymbol(3170, false, "This is the symbol");
    }
}
statement is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: DefaultErrorReporter errorReporter = ((DefaultErrorReporter) (compilerEnvirons.getErrorReporter())), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: ((DefaultErrorReporter) (compilerEnvirons.getErrorReporter())) target is: compilerEnvirons method is: getErrorReporter()
source statement: org.mozilla.javascript.CompilerEnvirons()V callee: VariableReference: Statement 0, type org.mozilla.javascript.CompilerEnvironsindex is: 0
Matched Method is: getErrorReporter()Lorg/mozilla/javascript/ErrorReporter;
statement is: Parser parser = new Parser(compilerEnvirons, errorReporter), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: parser.parse("This is a test string", "This is the file name", 85), class spoon.support.reflect.code.CtInvocationImpl
invocation is: parser.parse("This is a test string", "This is the file name", 85) target is: parser method is: parse(java.lang.String,java.lang.String,int)
source statement: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V callee: VariableReference: Statement 2, type org.mozilla.javascript.Parserindex is: 2
Matched Method is: parse(Ljava/lang/String;Ljava/lang/String;I)Lorg/mozilla/javascript/ScriptOrFnNode;
statement is: parser.defineSymbol(3170, false, "This is the symbol"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: parser.defineSymbol(3170, false, "This is the symbol") target is: parser method is: defineSymbol(int,boolean,java.lang.String)
source statement: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V callee: VariableReference: Statement 2, type org.mozilla.javascript.Parserindex is: 2
Matched Method is: defineSymbol(IZLjava/lang/String;)V
TestCase is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)compilerEnvirons.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
String string = "This is a test string";
String string = "This is the file name";
int _int = 85;
parser.parse(string, string, _int);
int _int = 3170;
boolean _boolean = false;
String string = "This is the symbol";
parser.defineSymbol(_int, _boolean, string);

statement is: org.mozilla.javascript.CompilerEnvirons()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.CompilerEnvirons
statement code is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons()
statement is: org.evosuite.testcase.statements.FieldStatement@35127c92 type is: class org.evosuite.testcase.statements.FieldStatement return type class org.mozilla.javascript.DefaultErrorReporter
statement code is: DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance
statement is: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.Parser
statement code is: Parser parser = new Parser(arg0, arg1)
statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("org.mozilla.javascript.DToA")
statement is: parse(Ljava/io/Reader;Ljava/lang/String;I)Lorg/mozilla/javascript/ScriptOrFnNode; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.mozilla.javascript.ScriptOrFnNode
statement code is: ScriptOrFnNode parse = parser.parse((Reader) arg0, "*", 1186)
statement is: defineSymbol(IZLjava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: parser.defineSymbol(121, true, (String) null)
test data is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
StringReader stringReader = new StringReader("org.mozilla.javascript.DToA");
parser.parse((Reader) stringReader, "*", 1186);
parser.defineSymbol(121, true, (String) null);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
        DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
        Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
        StringReader stringReader = new StringReader("DToA");
        parser.parse(((Reader) (stringReader)), "*", "appendString");
        parser.defineSymbol(121, true, ((String) (null)));
    }
}
statement is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: DefaultErrorReporter.instance is DefaultErrorReporter
CtField is: static org.mozilla.javascript.DefaultErrorReporter org.mozilla.javascript.DefaultErrorReporter.instance DefaultErrorReporter instance
statement is: Parser parser = new Parser(compilerEnvirons, defaultErrorReporter), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: StringReader stringReader = new StringReader("DToA"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: parser.parse(((Reader) (stringReader)), "*", "appendString"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: parser.parse(((Reader) (stringReader)), "*", "appendString") target is: parser method is: parse(Reader,java.lang.String,java.lang.String)
source statement: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V callee: VariableReference: Statement 2, type org.mozilla.javascript.Parserindex is: 2
Matched Method is: parse(Ljava/io/Reader;Ljava/lang/String;I)Lorg/mozilla/javascript/ScriptOrFnNode;
statement is: parser.defineSymbol(121, true, ((String) (null))), class spoon.support.reflect.code.CtInvocationImpl
invocation is: parser.defineSymbol(121, true, ((String) (null))) target is: parser method is: defineSymbol(int,boolean,java.lang.String)
source statement: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V callee: VariableReference: Statement 2, type org.mozilla.javascript.Parserindex is: 2
Matched Method is: defineSymbol(IZLjava/lang/String;)V
i 2 Parameters size() 2 Num of Method Parameters: 3
TestCase is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
String string = "DToA";
StringReader stringReader = new StringReader(string);
String string = "*";
String string = "appendString";
parser.parse((Reader) stringReader, string, (int) string);
int _int = 121;
boolean _boolean = true;
String string = null;
parser.defineSymbol(_int, _boolean, string);

statement is: org.mozilla.javascript.CompilerEnvirons()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.CompilerEnvirons
statement code is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons()
statement is: org.evosuite.testcase.statements.FieldStatement@35127c92 type is: class org.evosuite.testcase.statements.FieldStatement return type class org.mozilla.javascript.DefaultErrorReporter
statement code is: DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance
statement is: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.Parser
statement code is: Parser parser = new Parser(arg0, arg1)
statement is: parse(Ljava/lang/String;Ljava/lang/String;I)Lorg/mozilla/javascript/ScriptOrFnNode; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.mozilla.javascript.ScriptOrFnNode
statement code is: ScriptOrFnNode parse = parser.parse("rB", "language version", 8)
statement is: defineSymbol(IZLjava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: parser.defineSymbol(153, false, "rB")
test data is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
parser.parse("rB", "language version", 8);
parser.defineSymbol(153, false, "rB");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
        DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
        Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
        parser.parse("rB", "language version", 8);
        parser.defineSymbol(153, false, "version 10");
    }
}
statement is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: DefaultErrorReporter.instance is DefaultErrorReporter
CtField is: static org.mozilla.javascript.DefaultErrorReporter org.mozilla.javascript.DefaultErrorReporter.instance DefaultErrorReporter instance
statement is: Parser parser = new Parser(compilerEnvirons, defaultErrorReporter), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: parser.parse("rB", "language version", 8), class spoon.support.reflect.code.CtInvocationImpl
invocation is: parser.parse("rB", "language version", 8) target is: parser method is: parse(java.lang.String,java.lang.String,int)
source statement: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V callee: VariableReference: Statement 2, type org.mozilla.javascript.Parserindex is: 2
Matched Method is: parse(Ljava/lang/String;Ljava/lang/String;I)Lorg/mozilla/javascript/ScriptOrFnNode;
statement is: parser.defineSymbol(153, false, "version 10"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: parser.defineSymbol(153, false, "version 10") target is: parser method is: defineSymbol(int,boolean,java.lang.String)
source statement: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V callee: VariableReference: Statement 2, type org.mozilla.javascript.Parserindex is: 2
Matched Method is: defineSymbol(IZLjava/lang/String;)V
TestCase is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
String string = "rB";
String string = "language version";
int _int = 8;
parser.parse(string, string, _int);
int _int = 153;
boolean _boolean = false;
String string = "version 10";
parser.defineSymbol(_int, _boolean, string);

statement is: org.mozilla.javascript.CompilerEnvirons()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.CompilerEnvirons
statement code is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons()
statement is: getContext()Lorg/mozilla/javascript/Context; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.mozilla.javascript.Context
statement code is: Context context = Context.getContext()
statement is: getErrorReporter()Lorg/mozilla/javascript/ErrorReporter; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.mozilla.javascript.DefaultErrorReporter
statement code is: DefaultErrorReporter errorReporter = (DefaultErrorReporter)context.getErrorReporter()
statement is: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.Parser
statement code is: Parser parser = new Parser(arg0, arg1)
statement is: parse(Ljava/lang/String;Ljava/lang/String;I)Lorg/mozilla/javascript/ScriptOrFnNode; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.mozilla.javascript.ScriptOrFnNode
statement code is: ScriptOrFnNode parse = parser.parse("DuI_9Z,u", "error reporter", 8)
test data is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Context context = Context.getContext();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)context.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
parser.parse("DuI_9Z,u", "error reporter", 8);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
        Context context = Context.getContext();
        DefaultErrorReporter errorReporter = ((DefaultErrorReporter) (context.getErrorReporter()));
        Parser parser = new Parser(compilerEnvirons, errorReporter);
    }
}
statement is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Context context = Context.getContext(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: Context.getContext() target is: Context method is: getContext()
Matched Method is: getContext()Lorg/mozilla/javascript/Context;
statement is: DefaultErrorReporter errorReporter = ((DefaultErrorReporter) (context.getErrorReporter())), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: ((DefaultErrorReporter) (context.getErrorReporter())) target is: context method is: getErrorReporter()
source statement: getContext()Lorg/mozilla/javascript/Context; callee: VariableReference: Statement 1, type org.mozilla.javascript.Contextindex is: 1
Matched Method is: getErrorReporter()Lorg/mozilla/javascript/ErrorReporter;
statement is: Parser parser = new Parser(compilerEnvirons, errorReporter), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Context context = Context.getContext();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)context.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);

statement is: org.mozilla.javascript.CompilerEnvirons()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.CompilerEnvirons
statement code is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons()
statement is: getErrorReporter()Lorg/mozilla/javascript/ErrorReporter; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.mozilla.javascript.DefaultErrorReporter
statement code is: DefaultErrorReporter errorReporter = (DefaultErrorReporter)compilerEnvirons.getErrorReporter()
statement is: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.Parser
statement code is: Parser parser = new Parser(arg0, arg1)
statement is: parse(Ljava/lang/String;Ljava/lang/String;I)Lorg/mozilla/javascript/ScriptOrFnNode; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.mozilla.javascript.ScriptOrFnNode
statement code is: ScriptOrFnNode parse = parser.parse("ahNG6D|~^", "ahNG6D|~^", 107)
test data is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)compilerEnvirons.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
parser.parse("ahNG6D|~^", "ahNG6D|~^", 107);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
        DefaultErrorReporter errorReporter = ((DefaultErrorReporter) (compilerEnvirons.getErrorReporter()));
        Parser parser = new Parser(compilerEnvirons, errorReporter);
        parser.parse("This is a test string.", "This is a test string.", 107);
    }
}
statement is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: DefaultErrorReporter errorReporter = ((DefaultErrorReporter) (compilerEnvirons.getErrorReporter())), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: ((DefaultErrorReporter) (compilerEnvirons.getErrorReporter())) target is: compilerEnvirons method is: getErrorReporter()
source statement: org.mozilla.javascript.CompilerEnvirons()V callee: VariableReference: Statement 0, type org.mozilla.javascript.CompilerEnvironsindex is: 0
Matched Method is: getErrorReporter()Lorg/mozilla/javascript/ErrorReporter;
statement is: Parser parser = new Parser(compilerEnvirons, errorReporter), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: parser.parse("This is a test string.", "This is a test string.", 107), class spoon.support.reflect.code.CtInvocationImpl
invocation is: parser.parse("This is a test string.", "This is a test string.", 107) target is: parser method is: parse(java.lang.String,java.lang.String,int)
source statement: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V callee: VariableReference: Statement 2, type org.mozilla.javascript.Parserindex is: 2
Matched Method is: parse(Ljava/lang/String;Ljava/lang/String;I)Lorg/mozilla/javascript/ScriptOrFnNode;
TestCase is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)compilerEnvirons.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
String string = "This is a test string.";
String string = "This is a test string.";
int _int = 107;
parser.parse(string, string, _int);

statement is: org.mozilla.javascript.CompilerEnvirons()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.CompilerEnvirons
statement code is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons()
statement is: getErrorReporter()Lorg/mozilla/javascript/ErrorReporter; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.mozilla.javascript.DefaultErrorReporter
statement code is: DefaultErrorReporter errorReporter = (DefaultErrorReporter)compilerEnvirons.getErrorReporter()
statement is: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.Parser
statement code is: Parser parser = new Parser(arg0, arg1)
statement is: parse(Ljava/lang/String;Ljava/lang/String;I)Lorg/mozilla/javascript/ScriptOrFnNode; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.mozilla.javascript.ScriptOrFnNode
statement code is: ScriptOrFnNode parse = parser.parse("_c&A$h7w([p=x{pS", "_c&A$h7w([p=x{pS", (-1541))
test data is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)compilerEnvirons.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
parser.parse("_c&A$h7w([p=x{pS", "_c&A$h7w([p=x{pS", (-1541));

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
        DefaultErrorReporter errorReporter = ((DefaultErrorReporter) (compilerEnvirons.getErrorReporter()));
        Parser parser = new Parser(compilerEnvirons, errorReporter);
    }
}
statement is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: DefaultErrorReporter errorReporter = ((DefaultErrorReporter) (compilerEnvirons.getErrorReporter())), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: ((DefaultErrorReporter) (compilerEnvirons.getErrorReporter())) target is: compilerEnvirons method is: getErrorReporter()
source statement: org.mozilla.javascript.CompilerEnvirons()V callee: VariableReference: Statement 0, type org.mozilla.javascript.CompilerEnvironsindex is: 0
Matched Method is: getErrorReporter()Lorg/mozilla/javascript/ErrorReporter;
statement is: Parser parser = new Parser(compilerEnvirons, errorReporter), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)compilerEnvirons.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);

statement is: org.mozilla.javascript.CompilerEnvirons()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.CompilerEnvirons
statement code is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons()
statement is: getErrorReporter()Lorg/mozilla/javascript/ErrorReporter; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.mozilla.javascript.DefaultErrorReporter
statement code is: DefaultErrorReporter errorReporter = (DefaultErrorReporter)compilerEnvirons.getErrorReporter()
statement is: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.Parser
statement code is: Parser parser = new Parser(arg0, arg1)
statement is: parse(Ljava/lang/String;Ljava/lang/String;I)Lorg/mozilla/javascript/ScriptOrFnNode; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.mozilla.javascript.ScriptOrFnNode
statement code is: ScriptOrFnNode parse = parser.parse("factory == null", "error reporter", 9)
test data is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)compilerEnvirons.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
parser.parse("factory == null", "error reporter", 9);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
        DefaultErrorReporter errorReporter = ((DefaultErrorReporter) (compilerEnvirons.getErrorReporter()));
        Parser parser = new Parser(compilerEnvirons, errorReporter);
        parser.parse("factory == 'not null'", "error reporter for not null factory variable", 9);
        parser.parse("factory == ''", "error reporter for empty string factory variable", 9);
        parser.parse("factory == ' '", "error reporter for whitespace character factory variable", 9);
    }
}
statement is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: DefaultErrorReporter errorReporter = ((DefaultErrorReporter) (compilerEnvirons.getErrorReporter())), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: ((DefaultErrorReporter) (compilerEnvirons.getErrorReporter())) target is: compilerEnvirons method is: getErrorReporter()
source statement: org.mozilla.javascript.CompilerEnvirons()V callee: VariableReference: Statement 0, type org.mozilla.javascript.CompilerEnvironsindex is: 0
Matched Method is: getErrorReporter()Lorg/mozilla/javascript/ErrorReporter;
statement is: Parser parser = new Parser(compilerEnvirons, errorReporter), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: parser.parse("factory == 'not null'", "error reporter for not null factory variable", 9), class spoon.support.reflect.code.CtInvocationImpl
invocation is: parser.parse("factory == 'not null'", "error reporter for not null factory variable", 9) target is: parser method is: parse(java.lang.String,java.lang.String,int)
source statement: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V callee: VariableReference: Statement 2, type org.mozilla.javascript.Parserindex is: 2
Matched Method is: parse(Ljava/lang/String;Ljava/lang/String;I)Lorg/mozilla/javascript/ScriptOrFnNode;
statement is: parser.parse("factory == ''", "error reporter for empty string factory variable", 9), class spoon.support.reflect.code.CtInvocationImpl
invocation is: parser.parse("factory == ''", "error reporter for empty string factory variable", 9) target is: parser method is: parse(java.lang.String,java.lang.String,int)
source statement: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V callee: VariableReference: Statement 2, type org.mozilla.javascript.Parserindex is: 2
Matched Method is: parse(Ljava/lang/String;Ljava/lang/String;I)Lorg/mozilla/javascript/ScriptOrFnNode;
statement is: parser.parse("factory == ' '", "error reporter for whitespace character factory variable", 9), class spoon.support.reflect.code.CtInvocationImpl
invocation is: parser.parse("factory == ' '", "error reporter for whitespace character factory variable", 9) target is: parser method is: parse(java.lang.String,java.lang.String,int)
source statement: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V callee: VariableReference: Statement 2, type org.mozilla.javascript.Parserindex is: 2
Matched Method is: parse(Ljava/lang/String;Ljava/lang/String;I)Lorg/mozilla/javascript/ScriptOrFnNode;
TestCase is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)compilerEnvirons.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
String string = "factory == 'not null'";
String string = "error reporter for not null factory variable";
int _int = 9;
parser.parse(string, string, _int);
String string = "factory == ''";
String string = "error reporter for empty string factory variable";
int _int = 9;
parser.parse(string, string, _int);
String string = "factory == ' '";
String string = "error reporter for whitespace character factory variable";
int _int = 9;
parser.parse(string, string, _int);

statement is: org.mozilla.javascript.CompilerEnvirons()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.CompilerEnvirons
statement code is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons()
statement is: org.evosuite.testcase.statements.FieldStatement@35127c92 type is: class org.evosuite.testcase.statements.FieldStatement return type class org.mozilla.javascript.DefaultErrorReporter
statement code is: DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance
statement is: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.Parser
statement code is: Parser parser = new Parser(arg0, arg1)
statement is: parse(Ljava/lang/String;Ljava/lang/String;I)Lorg/mozilla/javascript/ScriptOrFnNode; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.mozilla.javascript.ScriptOrFnNode
statement code is: ScriptOrFnNode parse = parser.parse("UogZg|gk!=q:", "UogZg|gk!=q:", (-1690))
test data is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
parser.parse("UogZg|gk!=q:", "UogZg|gk!=q:", (-1690));

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
        DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
        Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
        parser.parse("This is a sample test data string that contains some invalid characters.", "This is a sample test data string that contains some invalid characters.", -2);
    }
}
statement is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: DefaultErrorReporter.instance is DefaultErrorReporter
CtField is: static org.mozilla.javascript.DefaultErrorReporter org.mozilla.javascript.DefaultErrorReporter.instance DefaultErrorReporter instance
statement is: Parser parser = new Parser(compilerEnvirons, defaultErrorReporter), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: parser.parse("This is a sample test data string that contains some invalid characters.", "This is a sample test data string that contains some invalid characters.", -2), class spoon.support.reflect.code.CtInvocationImpl
invocation is: parser.parse("This is a sample test data string that contains some invalid characters.", "This is a sample test data string that contains some invalid characters.", -2) target is: parser method is: parse(java.lang.String,java.lang.String,int)
source statement: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V callee: VariableReference: Statement 2, type org.mozilla.javascript.Parserindex is: 2
Matched Method is: parse(Ljava/lang/String;Ljava/lang/String;I)Lorg/mozilla/javascript/ScriptOrFnNode;
i 2 Parameters size() 2 Num of Method Parameters: 3
TestCase is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
String string = "This is a sample test data string that contains some invalid characters.";
String string = "This is a sample test data string that contains some invalid characters.";
int _int = null;
parser.parse(string, string, _int);

statement is: org.mozilla.javascript.CompilerEnvirons()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.CompilerEnvirons
statement code is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons()
statement is: org.evosuite.testcase.statements.FieldStatement@35127c92 type is: class org.evosuite.testcase.statements.FieldStatement return type class org.mozilla.javascript.DefaultErrorReporter
statement code is: DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance
statement is: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.Parser
statement code is: Parser parser = new Parser(arg0, arg1)
statement is: parse(Ljava/lang/String;Ljava/lang/String;I)Lorg/mozilla/javascript/ScriptOrFnNode; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.mozilla.javascript.ScriptOrFnNode
statement code is: ScriptOrFnNode parse = parser.parse("ER>%Mgx}'nl ", "ER>%Mgx}'nl ", 519)
test data is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
parser.parse("ER>%Mgx}'nl ", "ER>%Mgx}'nl ", 519);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
        DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
        Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
    }
}
statement is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: DefaultErrorReporter.instance is DefaultErrorReporter
CtField is: static org.mozilla.javascript.DefaultErrorReporter org.mozilla.javascript.DefaultErrorReporter.instance DefaultErrorReporter instance
statement is: Parser parser = new Parser(compilerEnvirons, defaultErrorReporter), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);

statement is: org.mozilla.javascript.CompilerEnvirons()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.CompilerEnvirons
statement code is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons()
statement is: org.evosuite.testcase.statements.FieldStatement@35127c92 type is: class org.evosuite.testcase.statements.FieldStatement return type class org.mozilla.javascript.DefaultErrorReporter
statement code is: DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance
statement is: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.Parser
statement code is: Parser parser = new Parser(arg0, arg1)
statement is: parse(Ljava/lang/String;Ljava/lang/String;I)Lorg/mozilla/javascript/ScriptOrFnNode; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.mozilla.javascript.ScriptOrFnNode
statement code is: ScriptOrFnNode parse = parser.parse("X+RQRF=+2z-N).wM", "org.mozilla.javascript.NativeIterator$WrappedJavaIterator", 107)
test data is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
parser.parse("X+RQRF=+2z-N).wM", "org.mozilla.javascript.NativeIterator$WrappedJavaIterator", 107);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Improved test data
        CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
        DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
        Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
        parser.parse("X+RQRF=+2z-N).wM", "org.mozilla.javascript.NativeIterator$WrappedJavaIterator", 107);
        // Changed the primitive values and Strings to more illustrative examples }}
    }
}
statement is: // Improved test data
CompilerEnvirons compilerEnvirons = new CompilerEnvirons(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: DefaultErrorReporter.instance is DefaultErrorReporter
CtField is: static org.mozilla.javascript.DefaultErrorReporter org.mozilla.javascript.DefaultErrorReporter.instance DefaultErrorReporter instance
statement is: Parser parser = new Parser(compilerEnvirons, defaultErrorReporter), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: parser.parse("X+RQRF=+2z-N).wM", "org.mozilla.javascript.NativeIterator$WrappedJavaIterator", 107), class spoon.support.reflect.code.CtInvocationImpl
invocation is: parser.parse("X+RQRF=+2z-N).wM", "org.mozilla.javascript.NativeIterator$WrappedJavaIterator", 107) target is: parser method is: parse(java.lang.String,java.lang.String,int)
source statement: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V callee: VariableReference: Statement 2, type org.mozilla.javascript.Parserindex is: 2
Matched Method is: parse(Ljava/lang/String;Ljava/lang/String;I)Lorg/mozilla/javascript/ScriptOrFnNode;
statement is: // Changed the primitive values and Strings to more illustrative examples }}, class spoon.support.reflect.code.CtCommentImpl
TestCase is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
String string = "X+RQRF=+2z-N).wM";
String string = "org.mozilla.javascript.NativeIterator$WrappedJavaIterator";
int _int = 107;
parser.parse(string, string, _int);

statement is: org.mozilla.javascript.CompilerEnvirons()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.CompilerEnvirons
statement code is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons()
statement is: org.evosuite.testcase.statements.FieldStatement@35127c92 type is: class org.evosuite.testcase.statements.FieldStatement return type class org.mozilla.javascript.DefaultErrorReporter
statement code is: DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance
statement is: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.Parser
statement code is: Parser parser = new Parser(arg0, arg1)
statement is: parse(Ljava/lang/String;Ljava/lang/String;I)Lorg/mozilla/javascript/ScriptOrFnNode; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.mozilla.javascript.ScriptOrFnNode
statement code is: ScriptOrFnNode parse = parser.parse("e%c/ Ac$M", "e%c/ Ac$M", 17)
test data is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
parser.parse("e%c/ Ac$M", "e%c/ Ac$M", 17);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
        DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
        Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
        parser.parse("e%c/ Ac$M", "e%c/ Ac$M", 20);
    }
}
statement is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: DefaultErrorReporter.instance is DefaultErrorReporter
CtField is: static org.mozilla.javascript.DefaultErrorReporter org.mozilla.javascript.DefaultErrorReporter.instance DefaultErrorReporter instance
statement is: Parser parser = new Parser(compilerEnvirons, defaultErrorReporter), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: parser.parse("e%c/ Ac$M", "e%c/ Ac$M", 20), class spoon.support.reflect.code.CtInvocationImpl
invocation is: parser.parse("e%c/ Ac$M", "e%c/ Ac$M", 20) target is: parser method is: parse(java.lang.String,java.lang.String,int)
source statement: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V callee: VariableReference: Statement 2, type org.mozilla.javascript.Parserindex is: 2
Matched Method is: parse(Ljava/lang/String;Ljava/lang/String;I)Lorg/mozilla/javascript/ScriptOrFnNode;
TestCase is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
String string = "e%c/ Ac$M";
String string = "e%c/ Ac$M";
int _int = 20;
parser.parse(string, string, _int);

statement is: getCurrentContext()Lorg/mozilla/javascript/Context; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.mozilla.javascript.Context
statement code is: Context currentContext = Context.getCurrentContext()
statement is: stringIsCompilableUnit(Ljava/lang/String;)Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean stringIsCompilableUnit = context.stringIsCompilableUnit("<>")
test data is: Context currentContext = Context.getCurrentContext();
currentContext.stringIsCompilableUnit("<>");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Context currentContext = Context.getCurrentContext();
    }
}
statement is: Context currentContext = Context.getCurrentContext(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: Context.getCurrentContext() target is: Context method is: getCurrentContext()
Matched Method is: getCurrentContext()Lorg/mozilla/javascript/Context;
TestCase is: Context.getCurrentContext();

statement is: org.mozilla.javascript.CompilerEnvirons()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.CompilerEnvirons
statement code is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons()
statement is: org.evosuite.testcase.statements.FieldStatement@35127c92 type is: class org.evosuite.testcase.statements.FieldStatement return type class org.mozilla.javascript.DefaultErrorReporter
statement code is: DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance
statement is: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.Parser
statement code is: Parser parser = new Parser(arg0, arg1)
statement is: parse(Ljava/lang/String;Ljava/lang/String;I)Lorg/mozilla/javascript/ScriptOrFnNode; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.mozilla.javascript.ScriptOrFnNode
statement code is: ScriptOrFnNode parse = parser.parse("<]3xW{)*", "<]3xW{)*", (-386))
test data is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
parser.parse("<]3xW{)*", "<]3xW{)*", (-386));

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Improved test data for the previous code snippet
        CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
        DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
        Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
        parser.parse("42", "The answer to the ultimate question of life, the universe, and everything.", -386);
    }
}
statement is: // Improved test data for the previous code snippet
CompilerEnvirons compilerEnvirons = new CompilerEnvirons(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: DefaultErrorReporter.instance is DefaultErrorReporter
CtField is: static org.mozilla.javascript.DefaultErrorReporter org.mozilla.javascript.DefaultErrorReporter.instance DefaultErrorReporter instance
statement is: Parser parser = new Parser(compilerEnvirons, defaultErrorReporter), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: parser.parse("42", "The answer to the ultimate question of life, the universe, and everything.", -386), class spoon.support.reflect.code.CtInvocationImpl
invocation is: parser.parse("42", "The answer to the ultimate question of life, the universe, and everything.", -386) target is: parser method is: parse(java.lang.String,java.lang.String,int)
source statement: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V callee: VariableReference: Statement 2, type org.mozilla.javascript.Parserindex is: 2
Matched Method is: parse(Ljava/lang/String;Ljava/lang/String;I)Lorg/mozilla/javascript/ScriptOrFnNode;
i 2 Parameters size() 2 Num of Method Parameters: 3
TestCase is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
String string = "42";
String string = "The answer to the ultimate question of life, the universe, and everything.";
int _int = null;
parser.parse(string, string, _int);

statement is: org.mozilla.javascript.CompilerEnvirons()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.CompilerEnvirons
statement code is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons()
statement is: getCurrentContext()Lorg/mozilla/javascript/Context; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.mozilla.javascript.Context
statement code is: Context currentContext = Context.getCurrentContext()
statement is: getErrorReporter()Lorg/mozilla/javascript/ErrorReporter; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.mozilla.javascript.DefaultErrorReporter
statement code is: DefaultErrorReporter errorReporter = (DefaultErrorReporter)context.getErrorReporter()
statement is: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.Parser
statement code is: Parser parser = new Parser(arg0, arg1)
statement is: parse(Ljava/lang/String;Ljava/lang/String;I)Lorg/mozilla/javascript/ScriptOrFnNode; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.mozilla.javascript.ScriptOrFnNode
statement code is: ScriptOrFnNode parse = parser.parse("factory.makeContext() returned Context instance already associated with some thread", "error reporter", 13)
test data is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Context currentContext = Context.getCurrentContext();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)currentContext.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
parser.parse("factory.makeContext() returned Context instance already associated with some thread", "error reporter", 13);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
        Context currentContext = Context.getCurrentContext();
        DefaultErrorReporter errorReporter = ((DefaultErrorReporter) (currentContext.getErrorReporter()));
        Parser parser = new Parser(compilerEnvirons, errorReporter);
        parser.parse("factory.makeContext() returned Context instance already associated with some thread", "contextFactoryMethodName", 42);
    }
}
statement is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Context currentContext = Context.getCurrentContext(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: Context.getCurrentContext() target is: Context method is: getCurrentContext()
Matched Method is: getCurrentContext()Lorg/mozilla/javascript/Context;
statement is: DefaultErrorReporter errorReporter = ((DefaultErrorReporter) (currentContext.getErrorReporter())), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: ((DefaultErrorReporter) (currentContext.getErrorReporter())) target is: currentContext method is: getErrorReporter()
source statement: getCurrentContext()Lorg/mozilla/javascript/Context; callee: VariableReference: Statement 1, type org.mozilla.javascript.Contextindex is: 1
Matched Method is: getErrorReporter()Lorg/mozilla/javascript/ErrorReporter;
statement is: Parser parser = new Parser(compilerEnvirons, errorReporter), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: parser.parse("factory.makeContext() returned Context instance already associated with some thread", "contextFactoryMethodName", 42), class spoon.support.reflect.code.CtInvocationImpl
invocation is: parser.parse("factory.makeContext() returned Context instance already associated with some thread", "contextFactoryMethodName", 42) target is: parser method is: parse(java.lang.String,java.lang.String,int)
source statement: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V callee: VariableReference: Statement 3, type org.mozilla.javascript.Parserindex is: 3
Matched Method is: parse(Ljava/lang/String;Ljava/lang/String;I)Lorg/mozilla/javascript/ScriptOrFnNode;
TestCase is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Context currentContext = Context.getCurrentContext();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)currentContext.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
String string = "factory.makeContext() returned Context instance already associated with some thread";
String string = "contextFactoryMethodName";
int _int = 42;
parser.parse(string, string, _int);

statement is: org.mozilla.javascript.CompilerEnvirons()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.CompilerEnvirons
statement code is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons()
statement is: org.evosuite.testcase.statements.FieldStatement@35127c92 type is: class org.evosuite.testcase.statements.FieldStatement return type class org.mozilla.javascript.DefaultErrorReporter
statement code is: DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance
statement is: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.Parser
statement code is: Parser parser = new Parser(arg0, arg1)
statement is: parse(Ljava/lang/String;Ljava/lang/String;I)Lorg/mozilla/javascript/ScriptOrFnNode; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.mozilla.javascript.ScriptOrFnNode
statement code is: ScriptOrFnNode parse = parser.parse("WWV[", "WWV[", 107)
test data is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
parser.parse("WWV[", "WWV[", 107);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
        DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
        Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
        parser.parse("WWV[", "WWV[", 107);
    }
}
statement is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: DefaultErrorReporter.instance is DefaultErrorReporter
CtField is: static org.mozilla.javascript.DefaultErrorReporter org.mozilla.javascript.DefaultErrorReporter.instance DefaultErrorReporter instance
statement is: Parser parser = new Parser(compilerEnvirons, defaultErrorReporter), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: parser.parse("WWV[", "WWV[", 107), class spoon.support.reflect.code.CtInvocationImpl
invocation is: parser.parse("WWV[", "WWV[", 107) target is: parser method is: parse(java.lang.String,java.lang.String,int)
source statement: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V callee: VariableReference: Statement 2, type org.mozilla.javascript.Parserindex is: 2
Matched Method is: parse(Ljava/lang/String;Ljava/lang/String;I)Lorg/mozilla/javascript/ScriptOrFnNode;
TestCase is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
String string = "WWV[";
String string = "WWV[";
int _int = 107;
parser.parse(string, string, _int);

statement is: org.mozilla.javascript.CompilerEnvirons()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.CompilerEnvirons
statement code is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons()
statement is: org.evosuite.testcase.statements.FieldStatement@35127c92 type is: class org.evosuite.testcase.statements.FieldStatement return type class org.mozilla.javascript.DefaultErrorReporter
statement code is: DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance
statement is: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.Parser
statement code is: Parser parser = new Parser(arg0, arg1)
statement is: parse(Ljava/lang/String;Ljava/lang/String;I)Lorg/mozilla/javascript/ScriptOrFnNode; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.mozilla.javascript.ScriptOrFnNode
statement code is: ScriptOrFnNode parse = parser.parse("mcUO..,'g\"F|a{Y", "language version", 8)
test data is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
parser.parse("mcUO..,'g\"F|a{Y", "language version", 8);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
        DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
        Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
        parser.parse("12345678", "language version", 8);
    }
}
statement is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: DefaultErrorReporter.instance is DefaultErrorReporter
CtField is: static org.mozilla.javascript.DefaultErrorReporter org.mozilla.javascript.DefaultErrorReporter.instance DefaultErrorReporter instance
statement is: Parser parser = new Parser(compilerEnvirons, defaultErrorReporter), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: parser.parse("12345678", "language version", 8), class spoon.support.reflect.code.CtInvocationImpl
invocation is: parser.parse("12345678", "language version", 8) target is: parser method is: parse(java.lang.String,java.lang.String,int)
source statement: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V callee: VariableReference: Statement 2, type org.mozilla.javascript.Parserindex is: 2
Matched Method is: parse(Ljava/lang/String;Ljava/lang/String;I)Lorg/mozilla/javascript/ScriptOrFnNode;
TestCase is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
String string = "12345678";
String string = "language version";
int _int = 8;
parser.parse(string, string, _int);

statement is: org.mozilla.javascript.CompilerEnvirons()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.CompilerEnvirons
statement code is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons()
statement is: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.Parser
statement code is: Parser parser = new Parser(arg0, (ErrorReporter) null)
statement is: parse(Ljava/lang/String;Ljava/lang/String;I)Lorg/mozilla/javascript/ScriptOrFnNode; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.mozilla.javascript.ScriptOrFnNode
statement code is: ScriptOrFnNode parse = parser.parse("cy8.*?!b*j8Q,P", "cy8.*?!b*j8Q,P", 5930)
test data is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Parser parser = new Parser(compilerEnvirons, (ErrorReporter) null);
parser.parse("cy8.*?!b*j8Q,P", "cy8.*?!b*j8Q,P", 5930);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
        Parser parser = new Parser(compilerEnvirons, ((ErrorReporter) (null)));
        parser.parse("This is a sample input string with a few more words and a sentence structure", "This is a sample input string with a few more words and a sentence structure", 5930);
    }
}
statement is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Parser parser = new Parser(compilerEnvirons, ((ErrorReporter) (null))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: parser.parse("This is a sample input string with a few more words and a sentence structure", "This is a sample input string with a few more words and a sentence structure", 5930), class spoon.support.reflect.code.CtInvocationImpl
invocation is: parser.parse("This is a sample input string with a few more words and a sentence structure", "This is a sample input string with a few more words and a sentence structure", 5930) target is: parser method is: parse(java.lang.String,java.lang.String,int)
source statement: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V callee: VariableReference: Statement 1, type org.mozilla.javascript.Parserindex is: 1
Matched Method is: parse(Ljava/lang/String;Ljava/lang/String;I)Lorg/mozilla/javascript/ScriptOrFnNode;
TestCase is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Parser parser = new Parser(compilerEnvirons, (ErrorReporter) null);
String string = "This is a sample input string with a few more words and a sentence structure";
String string = "This is a sample input string with a few more words and a sentence structure";
int _int = 5930;
parser.parse(string, string, _int);

statement is: org.mozilla.javascript.CompilerEnvirons()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.CompilerEnvirons
statement code is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons()
statement is: org.evosuite.testcase.statements.FieldStatement@35127c92 type is: class org.evosuite.testcase.statements.FieldStatement return type class org.mozilla.javascript.DefaultErrorReporter
statement code is: DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance
statement is: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.Parser
statement code is: Parser parser = new Parser(arg0, arg1)
statement is: parse(Ljava/lang/String;Ljava/lang/String;I)Lorg/mozilla/javascript/ScriptOrFnNode; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.mozilla.javascript.ScriptOrFnNode
statement code is: ScriptOrFnNode parse = parser.parse("msg.bad.throw.eol", (String) null, (-875))
test data is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
parser.parse("msg.bad.throw.eol", (String) null, (-875));

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
        DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
        Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
        parser.parse("msg.bad.throw.eol", ((String) (null)), -10);
    }
}
statement is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: DefaultErrorReporter.instance is DefaultErrorReporter
CtField is: static org.mozilla.javascript.DefaultErrorReporter org.mozilla.javascript.DefaultErrorReporter.instance DefaultErrorReporter instance
statement is: Parser parser = new Parser(compilerEnvirons, defaultErrorReporter), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: parser.parse("msg.bad.throw.eol", ((String) (null)), -10), class spoon.support.reflect.code.CtInvocationImpl
invocation is: parser.parse("msg.bad.throw.eol", ((String) (null)), -10) target is: parser method is: parse(java.lang.String,java.lang.String,int)
source statement: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V callee: VariableReference: Statement 2, type org.mozilla.javascript.Parserindex is: 2
Matched Method is: parse(Ljava/lang/String;Ljava/lang/String;I)Lorg/mozilla/javascript/ScriptOrFnNode;
i 1 Parameters size() 1 Num of Method Parameters: 3
i 2 Parameters size() 1 Num of Method Parameters: 3
TestCase is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
String string = "msg.bad.throw.eol";
String string = null;
int _int = null;
parser.parse(string, string, _int);

statement is: org.mozilla.javascript.CompilerEnvirons()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.CompilerEnvirons
statement code is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons()
statement is: org.evosuite.testcase.statements.FieldStatement@35127c92 type is: class org.evosuite.testcase.statements.FieldStatement return type class org.mozilla.javascript.DefaultErrorReporter
statement code is: DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance
statement is: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.Parser
statement code is: Parser parser = new Parser(arg0, arg1)
statement is: parse(Ljava/lang/String;Ljava/lang/String;I)Lorg/mozilla/javascript/ScriptOrFnNode; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.mozilla.javascript.ScriptOrFnNode
statement code is: ScriptOrFnNode parse = parser.parse("@*TIho", "@*TIho", (-573))
test data is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
parser.parse("@*TIho", "@*TIho", (-573));

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
        DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
        Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
        parser.parse("This is a string to be parsed", "This is a string to be parsed", 10);
    }
}
statement is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: DefaultErrorReporter.instance is DefaultErrorReporter
CtField is: static org.mozilla.javascript.DefaultErrorReporter org.mozilla.javascript.DefaultErrorReporter.instance DefaultErrorReporter instance
statement is: Parser parser = new Parser(compilerEnvirons, defaultErrorReporter), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: parser.parse("This is a string to be parsed", "This is a string to be parsed", 10), class spoon.support.reflect.code.CtInvocationImpl
invocation is: parser.parse("This is a string to be parsed", "This is a string to be parsed", 10) target is: parser method is: parse(java.lang.String,java.lang.String,int)
source statement: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V callee: VariableReference: Statement 2, type org.mozilla.javascript.Parserindex is: 2
Matched Method is: parse(Ljava/lang/String;Ljava/lang/String;I)Lorg/mozilla/javascript/ScriptOrFnNode;
TestCase is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
String string = "This is a string to be parsed";
String string = "This is a string to be parsed";
int _int = 10;
parser.parse(string, string, _int);

statement is: org.mozilla.javascript.CompilerEnvirons()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.CompilerEnvirons
statement code is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons()
statement is: org.evosuite.testcase.statements.FieldStatement@35127c92 type is: class org.evosuite.testcase.statements.FieldStatement return type class org.mozilla.javascript.DefaultErrorReporter
statement code is: DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance
statement is: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.Parser
statement code is: Parser parser = new Parser(arg0, arg1)
statement is: parse(Ljava/lang/String;Ljava/lang/String;I)Lorg/mozilla/javascript/ScriptOrFnNode; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.mozilla.javascript.ScriptOrFnNode
statement code is: ScriptOrFnNode parse = parser.parse("@DyOJSap", "@DyOJSap", (-2))
test data is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
parser.parse("@DyOJSap", "@DyOJSap", (-2));

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
        DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
        Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
        parser.parse("2 + 2", "2 + 2", 4);
    }
}
statement is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: DefaultErrorReporter.instance is DefaultErrorReporter
CtField is: static org.mozilla.javascript.DefaultErrorReporter org.mozilla.javascript.DefaultErrorReporter.instance DefaultErrorReporter instance
statement is: Parser parser = new Parser(compilerEnvirons, defaultErrorReporter), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: parser.parse("2 + 2", "2 + 2", 4), class spoon.support.reflect.code.CtInvocationImpl
invocation is: parser.parse("2 + 2", "2 + 2", 4) target is: parser method is: parse(java.lang.String,java.lang.String,int)
source statement: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V callee: VariableReference: Statement 2, type org.mozilla.javascript.Parserindex is: 2
Matched Method is: parse(Ljava/lang/String;Ljava/lang/String;I)Lorg/mozilla/javascript/ScriptOrFnNode;
TestCase is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
String string = "2 + 2";
String string = "2 + 2";
int _int = 4;
parser.parse(string, string, _int);

statement is: org.mozilla.javascript.CompilerEnvirons()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.CompilerEnvirons
statement code is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons()
statement is: org.evosuite.testcase.statements.FieldStatement@35127c92 type is: class org.evosuite.testcase.statements.FieldStatement return type class org.mozilla.javascript.DefaultErrorReporter
statement code is: DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance
statement is: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.Parser
statement code is: Parser parser = new Parser(arg0, arg1)
statement is: parse(Ljava/lang/String;Ljava/lang/String;I)Lorg/mozilla/javascript/ScriptOrFnNode; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.mozilla.javascript.ScriptOrFnNode
statement code is: ScriptOrFnNode parse = parser.parse(";/?:@&=+$,#", ";/?:@&=+$,#", 17)
test data is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
parser.parse(";/?:@&=+$,#", ";/?:@&=+$,#", 17);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        parser.parse(";/?:@&=+$,#", ";/?:@&=+$,#", 17);
    }
}
statement is: parser.parse(";/?:@&=+$,#", ";/?:@&=+$,#", 17), class spoon.support.reflect.code.CtInvocationImpl
invocation is: parser.parse(";/?:@&=+$,#", ";/?:@&=+$,#", 17) target is: parser method is: parse(java.lang.String,java.lang.String,int)
statement is: org.mozilla.javascript.CompilerEnvirons()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.CompilerEnvirons
statement code is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons()
statement is: org.evosuite.testcase.statements.FieldStatement@35127c92 type is: class org.evosuite.testcase.statements.FieldStatement return type class org.mozilla.javascript.DefaultErrorReporter
statement code is: DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance
statement is: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.Parser
statement code is: Parser parser = new Parser(arg0, arg1)
statement is: parse(Ljava/lang/String;Ljava/lang/String;I)Lorg/mozilla/javascript/ScriptOrFnNode; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.mozilla.javascript.ScriptOrFnNode
statement code is: ScriptOrFnNode parse = parser.parse("v[\"M-;%VrW\")", "bvlxlV", 3070)
test data is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
parser.parse("v[\"M-;%VrW\")", "bvlxlV", 3070);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
        DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
        Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
        parser.parse("v[\"M-;%VrW\")", "bvlxlV", 3070);
    }
}
statement is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: DefaultErrorReporter.instance is DefaultErrorReporter
CtField is: static org.mozilla.javascript.DefaultErrorReporter org.mozilla.javascript.DefaultErrorReporter.instance DefaultErrorReporter instance
statement is: Parser parser = new Parser(compilerEnvirons, defaultErrorReporter), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: parser.parse("v[\"M-;%VrW\")", "bvlxlV", 3070), class spoon.support.reflect.code.CtInvocationImpl
invocation is: parser.parse("v[\"M-;%VrW\")", "bvlxlV", 3070) target is: parser method is: parse(java.lang.String,java.lang.String,int)
source statement: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V callee: VariableReference: Statement 2, type org.mozilla.javascript.Parserindex is: 2
Matched Method is: parse(Ljava/lang/String;Ljava/lang/String;I)Lorg/mozilla/javascript/ScriptOrFnNode;
TestCase is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
String string = "v[\"M-;%VrW\")";
String string = "bvlxlV";
int _int = 3070;
parser.parse(string, string, _int);

statement is: org.mozilla.javascript.CompilerEnvirons()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.CompilerEnvirons
statement code is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons()
statement is: org.evosuite.testcase.statements.FieldStatement@35127c92 type is: class org.evosuite.testcase.statements.FieldStatement return type class org.mozilla.javascript.DefaultErrorReporter
statement code is: DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance
statement is: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.Parser
statement code is: Parser parser = new Parser(arg0, arg1)
statement is: parse(Ljava/lang/String;Ljava/lang/String;I)Lorg/mozilla/javascript/ScriptOrFnNode; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.mozilla.javascript.ScriptOrFnNode
statement code is: ScriptOrFnNode parse = parser.parse("false", "false", 671)
test data is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
parser.parse("false", "false", 671);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
        DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
        Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
        parser.parse("1234567890", "abcdefghijklmnopqrstuvwxyz", 671);
    }
}
statement is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: DefaultErrorReporter.instance is DefaultErrorReporter
CtField is: static org.mozilla.javascript.DefaultErrorReporter org.mozilla.javascript.DefaultErrorReporter.instance DefaultErrorReporter instance
statement is: Parser parser = new Parser(compilerEnvirons, defaultErrorReporter), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: parser.parse("1234567890", "abcdefghijklmnopqrstuvwxyz", 671), class spoon.support.reflect.code.CtInvocationImpl
invocation is: parser.parse("1234567890", "abcdefghijklmnopqrstuvwxyz", 671) target is: parser method is: parse(java.lang.String,java.lang.String,int)
source statement: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V callee: VariableReference: Statement 2, type org.mozilla.javascript.Parserindex is: 2
Matched Method is: parse(Ljava/lang/String;Ljava/lang/String;I)Lorg/mozilla/javascript/ScriptOrFnNode;
TestCase is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
String string = "1234567890";
String string = "abcdefghijklmnopqrstuvwxyz";
int _int = 671;
parser.parse(string, string, _int);

statement is: org.mozilla.javascript.CompilerEnvirons()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.CompilerEnvirons
statement code is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons()
statement is: getErrorReporter()Lorg/mozilla/javascript/ErrorReporter; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.mozilla.javascript.DefaultErrorReporter
statement code is: DefaultErrorReporter errorReporter = (DefaultErrorReporter)compilerEnvirons.getErrorReporter()
statement is: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.Parser
statement code is: Parser parser = new Parser(arg0, arg1)
statement is: parse(Ljava/lang/String;Ljava/lang/String;I)Lorg/mozilla/javascript/ScriptOrFnNode; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.mozilla.javascript.ScriptOrFnNode
statement code is: ScriptOrFnNode parse = parser.parse(" /= ", "msg.let.redecl", 42)
test data is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)compilerEnvirons.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
parser.parse(" /= ", "msg.let.redecl", 42);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
        DefaultErrorReporter errorReporter = ((DefaultErrorReporter) (compilerEnvirons.getErrorReporter()));
        Parser parser = new Parser(compilerEnvirons, errorReporter);
        parser.parse(" /= ", "msg.let.redecl", 1234567890);
    }
}
statement is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: DefaultErrorReporter errorReporter = ((DefaultErrorReporter) (compilerEnvirons.getErrorReporter())), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: ((DefaultErrorReporter) (compilerEnvirons.getErrorReporter())) target is: compilerEnvirons method is: getErrorReporter()
source statement: org.mozilla.javascript.CompilerEnvirons()V callee: VariableReference: Statement 0, type org.mozilla.javascript.CompilerEnvironsindex is: 0
Matched Method is: getErrorReporter()Lorg/mozilla/javascript/ErrorReporter;
statement is: Parser parser = new Parser(compilerEnvirons, errorReporter), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: parser.parse(" /= ", "msg.let.redecl", 1234567890), class spoon.support.reflect.code.CtInvocationImpl
invocation is: parser.parse(" /= ", "msg.let.redecl", 1234567890) target is: parser method is: parse(java.lang.String,java.lang.String,int)
source statement: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V callee: VariableReference: Statement 2, type org.mozilla.javascript.Parserindex is: 2
Matched Method is: parse(Ljava/lang/String;Ljava/lang/String;I)Lorg/mozilla/javascript/ScriptOrFnNode;
TestCase is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)compilerEnvirons.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
String string = " /= ";
String string = "msg.let.redecl";
int _int = 1234567890;
parser.parse(string, string, _int);

statement is: org.mozilla.javascript.CompilerEnvirons()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.CompilerEnvirons
statement code is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons()
statement is: getErrorReporter()Lorg/mozilla/javascript/ErrorReporter; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.mozilla.javascript.DefaultErrorReporter
statement code is: DefaultErrorReporter errorReporter = (DefaultErrorReporter)compilerEnvirons.getErrorReporter()
statement is: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.Parser
statement code is: Parser parser = new Parser(arg0, arg1)
statement is: parse(Ljava/lang/String;Ljava/lang/String;I)Lorg/mozilla/javascript/ScriptOrFnNode; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.mozilla.javascript.ScriptOrFnNode
statement code is: ScriptOrFnNode parse = parser.parse("float", "float", 113)
test data is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)compilerEnvirons.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
parser.parse("float", "float", 113);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
        DefaultErrorReporter errorReporter = ((DefaultErrorReporter) (compilerEnvirons.getErrorReporter()));
        Parser parser = new Parser(compilerEnvirons, errorReporter);
        parser.parse("float", "float", 3.14F);// Tests a float value of pi

        parser.parse("integer", "int", 123);// Tests an integer value of 123

        parser.parse("string", "String", "Hello, world!");// Tests a String value containing the text "Hello, world!" }}

    }
}
statement is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: DefaultErrorReporter errorReporter = ((DefaultErrorReporter) (compilerEnvirons.getErrorReporter())), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: ((DefaultErrorReporter) (compilerEnvirons.getErrorReporter())) target is: compilerEnvirons method is: getErrorReporter()
source statement: org.mozilla.javascript.CompilerEnvirons()V callee: VariableReference: Statement 0, type org.mozilla.javascript.CompilerEnvironsindex is: 0
Matched Method is: getErrorReporter()Lorg/mozilla/javascript/ErrorReporter;
statement is: Parser parser = new Parser(compilerEnvirons, errorReporter), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: parser.parse("float", "float", 3.14F)// Tests a float value of pi
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: parser.parse("float", "float", 3.14F)// Tests a float value of pi
 target is: parser method is: parse(java.lang.String,java.lang.String,float)
source statement: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V callee: VariableReference: Statement 2, type org.mozilla.javascript.Parserindex is: 2
Matched Method is: parse(Ljava/lang/String;Ljava/lang/String;I)Lorg/mozilla/javascript/ScriptOrFnNode;
statement is: parser.parse("integer", "int", 123)// Tests an integer value of 123
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: parser.parse("integer", "int", 123)// Tests an integer value of 123
 target is: parser method is: parse(java.lang.String,java.lang.String,int)
source statement: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V callee: VariableReference: Statement 2, type org.mozilla.javascript.Parserindex is: 2
Matched Method is: parse(Ljava/lang/String;Ljava/lang/String;I)Lorg/mozilla/javascript/ScriptOrFnNode;
statement is: parser.parse("string", "String", "Hello, world!")// Tests a String value containing the text "Hello, world!" }}
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: parser.parse("string", "String", "Hello, world!")// Tests a String value containing the text "Hello, world!" }}
 target is: parser method is: parse(java.lang.String,java.lang.String,java.lang.String)
source statement: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V callee: VariableReference: Statement 2, type org.mozilla.javascript.Parserindex is: 2
Matched Method is: parse(Ljava/lang/String;Ljava/lang/String;I)Lorg/mozilla/javascript/ScriptOrFnNode;
TestCase is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)compilerEnvirons.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
String string = "float";
String string = "float";
float _float = 3.14F;
parser.parse(string, string, (int) _float);
String string = "integer";
String string = "int";
int _int = 123;
parser.parse(string, string, _int);
String string = "string";
String string = "String";
String string = "Hello, world!";
parser.parse(string, string, (int) string);

statement is: org.mozilla.javascript.CompilerEnvirons()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.CompilerEnvirons
statement code is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons()
statement is: org.evosuite.testcase.statements.FieldStatement@35127c92 type is: class org.evosuite.testcase.statements.FieldStatement return type class org.mozilla.javascript.DefaultErrorReporter
statement code is: DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance
statement is: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.Parser
statement code is: Parser parser = new Parser(arg0, arg1)
statement is: parse(Ljava/lang/String;Ljava/lang/String;I)Lorg/mozilla/javascript/ScriptOrFnNode; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.mozilla.javascript.ScriptOrFnNode
statement code is: ScriptOrFnNode parse = parser.parse("[dUC,qV", "[dUC,qV", (-2022))
test data is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
parser.parse("[dUC,qV", "[dUC,qV", (-2022));

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
        DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
        Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
        parser.parse("[DUC_ID,QUERY_STRING", "[DUC_ID,QUERY_STRING", -2022);
    }
}
statement is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: DefaultErrorReporter.instance is DefaultErrorReporter
CtField is: static org.mozilla.javascript.DefaultErrorReporter org.mozilla.javascript.DefaultErrorReporter.instance DefaultErrorReporter instance
statement is: Parser parser = new Parser(compilerEnvirons, defaultErrorReporter), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: parser.parse("[DUC_ID,QUERY_STRING", "[DUC_ID,QUERY_STRING", -2022), class spoon.support.reflect.code.CtInvocationImpl
invocation is: parser.parse("[DUC_ID,QUERY_STRING", "[DUC_ID,QUERY_STRING", -2022) target is: parser method is: parse(java.lang.String,java.lang.String,int)
source statement: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V callee: VariableReference: Statement 2, type org.mozilla.javascript.Parserindex is: 2
Matched Method is: parse(Ljava/lang/String;Ljava/lang/String;I)Lorg/mozilla/javascript/ScriptOrFnNode;
i 2 Parameters size() 2 Num of Method Parameters: 3
TestCase is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
String string = "[DUC_ID,QUERY_STRING";
String string = "[DUC_ID,QUERY_STRING";
int _int = null;
parser.parse(string, string, _int);

statement is: org.mozilla.javascript.CompilerEnvirons()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.CompilerEnvirons
statement code is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons()
statement is: getErrorReporter()Lorg/mozilla/javascript/ErrorReporter; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.mozilla.javascript.DefaultErrorReporter
statement code is: DefaultErrorReporter errorReporter = (DefaultErrorReporter)compilerEnvirons.getErrorReporter()
statement is: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.Parser
statement code is: Parser parser = new Parser(arg0, arg1)
statement is: parse(Ljava/lang/String;Ljava/lang/String;I)Lorg/mozilla/javascript/ScriptOrFnNode; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.mozilla.javascript.ScriptOrFnNode
statement code is: ScriptOrFnNode parse = parser.parse("-{{$@C.u6w", "-{{$@C.u6w", 110)
test data is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)compilerEnvirons.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
parser.parse("-{{$@C.u6w", "-{{$@C.u6w", 110);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
        DefaultErrorReporter errorReporter = ((DefaultErrorReporter) (compilerEnvirons.getErrorReporter()));
        Parser parser = new Parser(compilerEnvirons, errorReporter);
        parser.parse("valid_input_1", "valid_input_1", 20);
    }
}
statement is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: DefaultErrorReporter errorReporter = ((DefaultErrorReporter) (compilerEnvirons.getErrorReporter())), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: ((DefaultErrorReporter) (compilerEnvirons.getErrorReporter())) target is: compilerEnvirons method is: getErrorReporter()
source statement: org.mozilla.javascript.CompilerEnvirons()V callee: VariableReference: Statement 0, type org.mozilla.javascript.CompilerEnvironsindex is: 0
Matched Method is: getErrorReporter()Lorg/mozilla/javascript/ErrorReporter;
statement is: Parser parser = new Parser(compilerEnvirons, errorReporter), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: parser.parse("valid_input_1", "valid_input_1", 20), class spoon.support.reflect.code.CtInvocationImpl
invocation is: parser.parse("valid_input_1", "valid_input_1", 20) target is: parser method is: parse(java.lang.String,java.lang.String,int)
source statement: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V callee: VariableReference: Statement 2, type org.mozilla.javascript.Parserindex is: 2
Matched Method is: parse(Ljava/lang/String;Ljava/lang/String;I)Lorg/mozilla/javascript/ScriptOrFnNode;
TestCase is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)compilerEnvirons.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
String string = "valid_input_1";
String string = "valid_input_1";
int _int = 20;
parser.parse(string, string, _int);

statement is: org.mozilla.javascript.CompilerEnvirons()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.CompilerEnvirons
statement code is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons()
statement is: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.Parser
statement code is: Parser parser = new Parser(arg0, (ErrorReporter) null)
statement is: parse(Ljava/lang/String;Ljava/lang/String;I)Lorg/mozilla/javascript/ScriptOrFnNode; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.mozilla.javascript.ScriptOrFnNode
statement code is: ScriptOrFnNode parse = parser.parse("{'Ed>`X6K6", "", 42)
test data is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Parser parser = new Parser(compilerEnvirons, (ErrorReporter) null);
parser.parse("{'Ed>`X6K6", "", 42);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
        Parser parser = new Parser(compilerEnvirons, ((ErrorReporter) (null)));
    }
}
statement is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Parser parser = new Parser(compilerEnvirons, ((ErrorReporter) (null))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Parser parser = new Parser(compilerEnvirons, (ErrorReporter) null);

statement is: org.mozilla.javascript.CompilerEnvirons()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.CompilerEnvirons
statement code is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons()
statement is: org.evosuite.testcase.statements.FieldStatement@35127c92 type is: class org.evosuite.testcase.statements.FieldStatement return type class org.mozilla.javascript.DefaultErrorReporter
statement code is: DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance
statement is: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.Parser
statement code is: Parser parser = new Parser(arg0, arg1)
statement is: parse(Ljava/lang/String;Ljava/lang/String;I)Lorg/mozilla/javascript/ScriptOrFnNode; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.mozilla.javascript.ScriptOrFnNode
statement code is: ScriptOrFnNode parse = parser.parse("Bh^<d", "1Jn.Cm", (-2468))
test data is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
parser.parse("Bh^<d", "1Jn.Cm", (-2468));

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
        DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
        Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
        parser.parse("Bh^<d", "1Jn.Cm", 5);// 5 is an example of a positive integer value

        parser.parse("Bh^<d", "1Jn.Cm", -5);// -5 is an example of a negative integer value

        parser.parse("Bh^<d", "1Jn.Cm", 3.14);// 3.14 is an example of a double value

        parser.parse("Bh^<d", "1Jn.Cm", -3.14);// -3.14 is an example of another negative double value

        parser.parse("Bh^<d", "1Jn.Cm", "hello");// "hello" is an example of a String value

        parser.parse("Bh^<d", "1Jn.Cm", 'a');// 'a' is an example of a char value }}

    }
}
statement is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: DefaultErrorReporter.instance is DefaultErrorReporter
CtField is: static org.mozilla.javascript.DefaultErrorReporter org.mozilla.javascript.DefaultErrorReporter.instance DefaultErrorReporter instance
statement is: Parser parser = new Parser(compilerEnvirons, defaultErrorReporter), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: parser.parse("Bh^<d", "1Jn.Cm", 5)// 5 is an example of a positive integer value
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: parser.parse("Bh^<d", "1Jn.Cm", 5)// 5 is an example of a positive integer value
 target is: parser method is: parse(java.lang.String,java.lang.String,int)
source statement: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V callee: VariableReference: Statement 2, type org.mozilla.javascript.Parserindex is: 2
Matched Method is: parse(Ljava/lang/String;Ljava/lang/String;I)Lorg/mozilla/javascript/ScriptOrFnNode;
statement is: parser.parse("Bh^<d", "1Jn.Cm", -5)// -5 is an example of a negative integer value
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: parser.parse("Bh^<d", "1Jn.Cm", -5)// -5 is an example of a negative integer value
 target is: parser method is: parse(java.lang.String,java.lang.String,int)
source statement: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V callee: VariableReference: Statement 2, type org.mozilla.javascript.Parserindex is: 2
Matched Method is: parse(Ljava/lang/String;Ljava/lang/String;I)Lorg/mozilla/javascript/ScriptOrFnNode;
i 2 Parameters size() 2 Num of Method Parameters: 3
statement is: parser.parse("Bh^<d", "1Jn.Cm", 3.14)// 3.14 is an example of a double value
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: parser.parse("Bh^<d", "1Jn.Cm", 3.14)// 3.14 is an example of a double value
 target is: parser method is: parse(java.lang.String,java.lang.String,double)
source statement: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V callee: VariableReference: Statement 2, type org.mozilla.javascript.Parserindex is: 2
Matched Method is: parse(Ljava/lang/String;Ljava/lang/String;I)Lorg/mozilla/javascript/ScriptOrFnNode;
statement is: parser.parse("Bh^<d", "1Jn.Cm", -3.14)// -3.14 is an example of another negative double value
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: parser.parse("Bh^<d", "1Jn.Cm", -3.14)// -3.14 is an example of another negative double value
 target is: parser method is: parse(java.lang.String,java.lang.String,double)
source statement: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V callee: VariableReference: Statement 2, type org.mozilla.javascript.Parserindex is: 2
Matched Method is: parse(Ljava/lang/String;Ljava/lang/String;I)Lorg/mozilla/javascript/ScriptOrFnNode;
i 2 Parameters size() 2 Num of Method Parameters: 3
statement is: parser.parse("Bh^<d", "1Jn.Cm", "hello")// "hello" is an example of a String value
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: parser.parse("Bh^<d", "1Jn.Cm", "hello")// "hello" is an example of a String value
 target is: parser method is: parse(java.lang.String,java.lang.String,java.lang.String)
source statement: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V callee: VariableReference: Statement 2, type org.mozilla.javascript.Parserindex is: 2
Matched Method is: parse(Ljava/lang/String;Ljava/lang/String;I)Lorg/mozilla/javascript/ScriptOrFnNode;
statement is: parser.parse("Bh^<d", "1Jn.Cm", 'a')// 'a' is an example of a char value }}
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: parser.parse("Bh^<d", "1Jn.Cm", 'a')// 'a' is an example of a char value }}
 target is: parser method is: parse(java.lang.String,java.lang.String,char)
source statement: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V callee: VariableReference: Statement 2, type org.mozilla.javascript.Parserindex is: 2
Matched Method is: parse(Ljava/lang/String;Ljava/lang/String;I)Lorg/mozilla/javascript/ScriptOrFnNode;
TestCase is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
String string = "Bh^<d";
String string = "1Jn.Cm";
int _int = 5;
parser.parse(string, string, _int);
String string = "Bh^<d";
String string = "1Jn.Cm";
int _int = null;
parser.parse(string, string, _int);
String string = "Bh^<d";
String string = "1Jn.Cm";
double _double = 3.14;
parser.parse(string, string, (int) _double);
String string = "Bh^<d";
String string = "1Jn.Cm";
double _double = null;
parser.parse(string, string, (int) _double);
String string = "Bh^<d";
String string = "1Jn.Cm";
String string = "hello";
parser.parse(string, string, (int) string);
String string = "Bh^<d";
String string = "1Jn.Cm";
char _char = 'a';
parser.parse(string, string, (int) _char);

statement is: org.mozilla.javascript.CompilerEnvirons()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.CompilerEnvirons
statement code is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons()
statement is: getErrorReporter()Lorg/mozilla/javascript/ErrorReporter; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.mozilla.javascript.DefaultErrorReporter
statement code is: DefaultErrorReporter errorReporter = (DefaultErrorReporter)compilerEnvirons.getErrorReporter()
statement is: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.Parser
statement code is: Parser parser = new Parser(arg0, arg1)
statement is: parse(Ljava/lang/String;Ljava/lang/String;I)Lorg/mozilla/javascript/ScriptOrFnNode; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.mozilla.javascript.ScriptOrFnNode
statement code is: ScriptOrFnNode parse = parser.parse("R.fM&+", "R.fM&+", 4)
test data is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)compilerEnvirons.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
parser.parse("R.fM&+", "R.fM&+", 4);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
        DefaultErrorReporter errorReporter = ((DefaultErrorReporter) (compilerEnvirons.getErrorReporter()));
        Parser parser = new Parser(compilerEnvirons, errorReporter);
        parser.parse("R.fM&+", "R.fM&+", 4);
    }
}
statement is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: DefaultErrorReporter errorReporter = ((DefaultErrorReporter) (compilerEnvirons.getErrorReporter())), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: ((DefaultErrorReporter) (compilerEnvirons.getErrorReporter())) target is: compilerEnvirons method is: getErrorReporter()
source statement: org.mozilla.javascript.CompilerEnvirons()V callee: VariableReference: Statement 0, type org.mozilla.javascript.CompilerEnvironsindex is: 0
Matched Method is: getErrorReporter()Lorg/mozilla/javascript/ErrorReporter;
statement is: Parser parser = new Parser(compilerEnvirons, errorReporter), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: parser.parse("R.fM&+", "R.fM&+", 4), class spoon.support.reflect.code.CtInvocationImpl
invocation is: parser.parse("R.fM&+", "R.fM&+", 4) target is: parser method is: parse(java.lang.String,java.lang.String,int)
source statement: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V callee: VariableReference: Statement 2, type org.mozilla.javascript.Parserindex is: 2
Matched Method is: parse(Ljava/lang/String;Ljava/lang/String;I)Lorg/mozilla/javascript/ScriptOrFnNode;
TestCase is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)compilerEnvirons.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
String string = "R.fM&+";
String string = "R.fM&+";
int _int = 4;
parser.parse(string, string, _int);

statement is: org.mozilla.javascript.CompilerEnvirons()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.CompilerEnvirons
statement code is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons()
statement is: org.evosuite.testcase.statements.FieldStatement@35127c92 type is: class org.evosuite.testcase.statements.FieldStatement return type class org.mozilla.javascript.DefaultErrorReporter
statement code is: DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance
statement is: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.Parser
statement code is: Parser parser = new Parser(arg0, arg1)
statement is: parse(Ljava/lang/String;Ljava/lang/String;I)Lorg/mozilla/javascript/ScriptOrFnNode; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.mozilla.javascript.ScriptOrFnNode
statement code is: ScriptOrFnNode parse = parser.parse("4P]Vi", "error reporter", 11)
test data is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
parser.parse("4P]Vi", "error reporter", 11);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
        DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
        Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
        parser.parse("42P]Vi", "error reporter", 11);
    }
}
statement is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: DefaultErrorReporter.instance is DefaultErrorReporter
CtField is: static org.mozilla.javascript.DefaultErrorReporter org.mozilla.javascript.DefaultErrorReporter.instance DefaultErrorReporter instance
statement is: Parser parser = new Parser(compilerEnvirons, defaultErrorReporter), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: parser.parse("42P]Vi", "error reporter", 11), class spoon.support.reflect.code.CtInvocationImpl
invocation is: parser.parse("42P]Vi", "error reporter", 11) target is: parser method is: parse(java.lang.String,java.lang.String,int)
source statement: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V callee: VariableReference: Statement 2, type org.mozilla.javascript.Parserindex is: 2
Matched Method is: parse(Ljava/lang/String;Ljava/lang/String;I)Lorg/mozilla/javascript/ScriptOrFnNode;
TestCase is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
String string = "42P]Vi";
String string = "error reporter";
int _int = 11;
parser.parse(string, string, _int);

statement is: org.mozilla.javascript.CompilerEnvirons()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.CompilerEnvirons
statement code is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons()
statement is: getErrorReporter()Lorg/mozilla/javascript/ErrorReporter; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.mozilla.javascript.DefaultErrorReporter
statement code is: DefaultErrorReporter errorReporter = (DefaultErrorReporter)compilerEnvirons.getErrorReporter()
statement is: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.Parser
statement code is: Parser parser = new Parser(arg0, arg1)
statement is: parse(Ljava/lang/String;Ljava/lang/String;I)Lorg/mozilla/javascript/ScriptOrFnNode; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.mozilla.javascript.ScriptOrFnNode
statement code is: ScriptOrFnNode parse = parser.parse("\"cb6W|o\"`1)tEY95aH,", "%K~Iu7Lr86C{.{(", 1)
test data is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)compilerEnvirons.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
parser.parse("\"cb6W|o\"`1)tEY95aH,", "%K~Iu7Lr86C{.{(", 1);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
        DefaultErrorReporter errorReporter = ((DefaultErrorReporter) (compilerEnvirons.getErrorReporter()));
        Parser parser = new Parser(compilerEnvirons, errorReporter);
    }
}
statement is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: DefaultErrorReporter errorReporter = ((DefaultErrorReporter) (compilerEnvirons.getErrorReporter())), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: ((DefaultErrorReporter) (compilerEnvirons.getErrorReporter())) target is: compilerEnvirons method is: getErrorReporter()
source statement: org.mozilla.javascript.CompilerEnvirons()V callee: VariableReference: Statement 0, type org.mozilla.javascript.CompilerEnvironsindex is: 0
Matched Method is: getErrorReporter()Lorg/mozilla/javascript/ErrorReporter;
statement is: Parser parser = new Parser(compilerEnvirons, errorReporter), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)compilerEnvirons.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);

statement is: org.mozilla.javascript.CompilerEnvirons()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.CompilerEnvirons
statement code is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons()
statement is: getErrorReporter()Lorg/mozilla/javascript/ErrorReporter; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.mozilla.javascript.DefaultErrorReporter
statement code is: DefaultErrorReporter errorReporter = (DefaultErrorReporter)compilerEnvirons.getErrorReporter()
statement is: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.Parser
statement code is: Parser parser = new Parser(arg0, arg1)
statement is: parse(Ljava/lang/String;Ljava/lang/String;I)Lorg/mozilla/javascript/ScriptOrFnNode; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.mozilla.javascript.ScriptOrFnNode
statement code is: ScriptOrFnNode parse = parser.parse("XndO=(V7\"O@", "<c", 653)
test data is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)compilerEnvirons.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
parser.parse("XndO=(V7\"O@", "<c", 653);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
        DefaultErrorReporter errorReporter = ((DefaultErrorReporter) (compilerEnvirons.getErrorReporter()));
        Parser parser = new Parser(compilerEnvirons, errorReporter);
        parser.parse("XndO=(V7\"O@", "This is a sample input string", 653);
    }
}
statement is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: DefaultErrorReporter errorReporter = ((DefaultErrorReporter) (compilerEnvirons.getErrorReporter())), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: ((DefaultErrorReporter) (compilerEnvirons.getErrorReporter())) target is: compilerEnvirons method is: getErrorReporter()
source statement: org.mozilla.javascript.CompilerEnvirons()V callee: VariableReference: Statement 0, type org.mozilla.javascript.CompilerEnvironsindex is: 0
Matched Method is: getErrorReporter()Lorg/mozilla/javascript/ErrorReporter;
statement is: Parser parser = new Parser(compilerEnvirons, errorReporter), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: parser.parse("XndO=(V7\"O@", "This is a sample input string", 653), class spoon.support.reflect.code.CtInvocationImpl
invocation is: parser.parse("XndO=(V7\"O@", "This is a sample input string", 653) target is: parser method is: parse(java.lang.String,java.lang.String,int)
source statement: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V callee: VariableReference: Statement 2, type org.mozilla.javascript.Parserindex is: 2
Matched Method is: parse(Ljava/lang/String;Ljava/lang/String;I)Lorg/mozilla/javascript/ScriptOrFnNode;
TestCase is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)compilerEnvirons.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
String string = "XndO=(V7\"O@";
String string = "This is a sample input string";
int _int = 653;
parser.parse(string, string, _int);

statement is: org.mozilla.javascript.CompilerEnvirons()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.CompilerEnvirons
statement code is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons()
statement is: org.evosuite.testcase.statements.FieldStatement@35127c92 type is: class org.evosuite.testcase.statements.FieldStatement return type class org.mozilla.javascript.DefaultErrorReporter
statement code is: DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance
statement is: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.Parser
statement code is: Parser parser = new Parser(arg0, arg1)
statement is: createDecompiler(Lorg/mozilla/javascript/CompilerEnvirons;)Lorg/mozilla/javascript/Decompiler; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.mozilla.javascript.Decompiler
statement code is: Decompiler createDecompiler = parser.createDecompiler(arg0)
test data is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
parser.createDecompiler(compilerEnvirons);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
        DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
        Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
        parser.createDecompiler(compilerEnvirons);
        // Improved test data
        compilerEnvirons = new CompilerEnvirons("UTF-8", true, false, null);
        defaultErrorReporter = DefaultErrorReporter.instance;
        parser = new Parser(compilerEnvirons, defaultErrorReporter);
        parser.createDecompiler(compilerEnvirons);
    }
}
statement is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: DefaultErrorReporter.instance is DefaultErrorReporter
CtField is: static org.mozilla.javascript.DefaultErrorReporter org.mozilla.javascript.DefaultErrorReporter.instance DefaultErrorReporter instance
statement is: Parser parser = new Parser(compilerEnvirons, defaultErrorReporter), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: parser.createDecompiler(compilerEnvirons), class spoon.support.reflect.code.CtInvocationImpl
invocation is: parser.createDecompiler(compilerEnvirons) target is: parser method is: createDecompiler(CompilerEnvirons)
source statement: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V callee: VariableReference: Statement 2, type org.mozilla.javascript.Parserindex is: 2
Matched Method is: createDecompiler(Lorg/mozilla/javascript/CompilerEnvirons;)Lorg/mozilla/javascript/Decompiler;
statement is: // Improved test data
compilerEnvirons = new CompilerEnvirons("UTF-8", true, false, null), class spoon.support.reflect.code.CtAssignmentImpl
statement is: defaultErrorReporter = DefaultErrorReporter.instance, class spoon.support.reflect.code.CtAssignmentImpl
statement is: parser = new Parser(compilerEnvirons, defaultErrorReporter), class spoon.support.reflect.code.CtAssignmentImpl
statement is: parser.createDecompiler(compilerEnvirons), class spoon.support.reflect.code.CtInvocationImpl
invocation is: parser.createDecompiler(compilerEnvirons) target is: parser method is: createDecompiler(CompilerEnvirons)
source statement: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V callee: VariableReference: Statement 2, type org.mozilla.javascript.Parserindex is: 2
Matched Method is: createDecompiler(Lorg/mozilla/javascript/CompilerEnvirons;)Lorg/mozilla/javascript/Decompiler;
TestCase is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
parser.createDecompiler(compilerEnvirons);
parser.createDecompiler(compilerEnvirons);

statement is: org.mozilla.javascript.CompilerEnvirons()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.CompilerEnvirons
statement code is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons()
statement is: getContext()Lorg/mozilla/javascript/Context; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.mozilla.javascript.Context
statement code is: Context context = Context.getContext()
statement is: getErrorReporter()Lorg/mozilla/javascript/ErrorReporter; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.mozilla.javascript.DefaultErrorReporter
statement code is: DefaultErrorReporter errorReporter = (DefaultErrorReporter)context.getErrorReporter()
statement is: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.Parser
statement code is: Parser parser = new Parser(arg0, arg1)
statement is: parse(Ljava/lang/String;Ljava/lang/String;I)Lorg/mozilla/javascript/ScriptOrFnNode; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.mozilla.javascript.ScriptOrFnNode
statement code is: ScriptOrFnNode parse = parser.parse("rB", "language version", 110)
statement is: eof()Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean eof = parser.eof()
test data is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Context context = Context.getContext();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)context.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
parser.parse("rB", "language version", 110);
parser.eof();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
        Context context = Context.getContext();
        DefaultErrorReporter errorReporter = ((DefaultErrorReporter) (context.getErrorReporter()));
        Parser parser = new Parser(compilerEnvirons, errorReporter);
        parser.parse("rB", "language version", 110);
        parser.eof();
    }
}
statement is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Context context = Context.getContext(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: Context.getContext() target is: Context method is: getContext()
Matched Method is: getContext()Lorg/mozilla/javascript/Context;
statement is: DefaultErrorReporter errorReporter = ((DefaultErrorReporter) (context.getErrorReporter())), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: ((DefaultErrorReporter) (context.getErrorReporter())) target is: context method is: getErrorReporter()
source statement: getContext()Lorg/mozilla/javascript/Context; callee: VariableReference: Statement 1, type org.mozilla.javascript.Contextindex is: 1
Matched Method is: getErrorReporter()Lorg/mozilla/javascript/ErrorReporter;
statement is: Parser parser = new Parser(compilerEnvirons, errorReporter), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: parser.parse("rB", "language version", 110), class spoon.support.reflect.code.CtInvocationImpl
invocation is: parser.parse("rB", "language version", 110) target is: parser method is: parse(java.lang.String,java.lang.String,int)
source statement: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V callee: VariableReference: Statement 3, type org.mozilla.javascript.Parserindex is: 3
Matched Method is: parse(Ljava/lang/String;Ljava/lang/String;I)Lorg/mozilla/javascript/ScriptOrFnNode;
statement is: parser.eof(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: parser.eof() target is: parser method is: eof()
source statement: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V callee: VariableReference: Statement 3, type org.mozilla.javascript.Parserindex is: 3
Matched Method is: eof()Z
TestCase is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Context context = Context.getContext();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)context.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
String string = "rB";
String string = "language version";
int _int = 110;
parser.parse(string, string, _int);
parser.eof();

statement is: org.mozilla.javascript.CompilerEnvirons()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.CompilerEnvirons
statement code is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons()
statement is: org.evosuite.testcase.statements.FieldStatement@35127c92 type is: class org.evosuite.testcase.statements.FieldStatement return type class org.mozilla.javascript.DefaultErrorReporter
statement code is: DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance
statement is: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.Parser
statement code is: Parser parser = new Parser(arg0, arg1)
statement is: parse(Ljava/lang/String;Ljava/lang/String;I)Lorg/mozilla/javascript/ScriptOrFnNode; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.mozilla.javascript.ScriptOrFnNode
statement code is: ScriptOrFnNode parse = parser.parse("/%W/", "msg.adapter.zero.args", 44)
statement is: getCurrentLineNumber()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int currentLineNumber = parser.getCurrentLineNumber()
test data is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
parser.parse("/%W/", "msg.adapter.zero.args", 44);
parser.getCurrentLineNumber();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
        DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
        Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
        parser.parse("/%W/", "msg.adapter.zero.args", 44);
        parser.getCurrentLineNumber();
    }
}
statement is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: DefaultErrorReporter.instance is DefaultErrorReporter
CtField is: static org.mozilla.javascript.DefaultErrorReporter org.mozilla.javascript.DefaultErrorReporter.instance DefaultErrorReporter instance
statement is: Parser parser = new Parser(compilerEnvirons, defaultErrorReporter), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: parser.parse("/%W/", "msg.adapter.zero.args", 44), class spoon.support.reflect.code.CtInvocationImpl
invocation is: parser.parse("/%W/", "msg.adapter.zero.args", 44) target is: parser method is: parse(java.lang.String,java.lang.String,int)
source statement: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V callee: VariableReference: Statement 2, type org.mozilla.javascript.Parserindex is: 2
Matched Method is: parse(Ljava/lang/String;Ljava/lang/String;I)Lorg/mozilla/javascript/ScriptOrFnNode;
statement is: parser.getCurrentLineNumber(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: parser.getCurrentLineNumber() target is: parser method is: getCurrentLineNumber()
source statement: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V callee: VariableReference: Statement 2, type org.mozilla.javascript.Parserindex is: 2
Matched Method is: getCurrentLineNumber()I
TestCase is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
String string = "/%W/";
String string = "msg.adapter.zero.args";
int _int = 44;
parser.parse(string, string, _int);
parser.getCurrentLineNumber();

statement is: org.mozilla.javascript.CompilerEnvirons()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.CompilerEnvirons
statement code is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons()
statement is: getErrorReporter()Lorg/mozilla/javascript/ErrorReporter; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.mozilla.javascript.DefaultErrorReporter
statement code is: DefaultErrorReporter errorReporter = (DefaultErrorReporter)compilerEnvirons.getErrorReporter()
statement is: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.Parser
statement code is: Parser parser = new Parser(arg0, arg1)
statement is: parse(Ljava/lang/String;Ljava/lang/String;I)Lorg/mozilla/javascript/ScriptOrFnNode; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.mozilla.javascript.ScriptOrFnNode
statement code is: ScriptOrFnNode parse = parser.parse("org.mozilla.javascript.Node$Jump", "", 85)
statement is: getEncodedSource()Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.lang.String
statement code is: String encodedSource = parser.getEncodedSource()
test data is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)compilerEnvirons.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
parser.parse("org.mozilla.javascript.Node$Jump", "", 85);
parser.getEncodedSource();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
        DefaultErrorReporter errorReporter = ((DefaultErrorReporter) (compilerEnvirons.getErrorReporter()));
        Parser parser = new Parser(compilerEnvirons, errorReporter);
        parser.parse("org.mozilla.javascript.Node$Jump", "", 85);
        parser.getEncodedSource();
    }
}
statement is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: DefaultErrorReporter errorReporter = ((DefaultErrorReporter) (compilerEnvirons.getErrorReporter())), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: ((DefaultErrorReporter) (compilerEnvirons.getErrorReporter())) target is: compilerEnvirons method is: getErrorReporter()
source statement: org.mozilla.javascript.CompilerEnvirons()V callee: VariableReference: Statement 0, type org.mozilla.javascript.CompilerEnvironsindex is: 0
Matched Method is: getErrorReporter()Lorg/mozilla/javascript/ErrorReporter;
statement is: Parser parser = new Parser(compilerEnvirons, errorReporter), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: parser.parse("org.mozilla.javascript.Node$Jump", "", 85), class spoon.support.reflect.code.CtInvocationImpl
invocation is: parser.parse("org.mozilla.javascript.Node$Jump", "", 85) target is: parser method is: parse(java.lang.String,java.lang.String,int)
source statement: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V callee: VariableReference: Statement 2, type org.mozilla.javascript.Parserindex is: 2
Matched Method is: parse(Ljava/lang/String;Ljava/lang/String;I)Lorg/mozilla/javascript/ScriptOrFnNode;
statement is: parser.getEncodedSource(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: parser.getEncodedSource() target is: parser method is: getEncodedSource()
source statement: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V callee: VariableReference: Statement 2, type org.mozilla.javascript.Parserindex is: 2
Matched Method is: getEncodedSource()Ljava/lang/String;
TestCase is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)compilerEnvirons.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
String string = "org.mozilla.javascript.Node$Jump";
String string = "";
int _int = 85;
parser.parse(string, string, _int);
parser.getEncodedSource();

statement is: org.mozilla.javascript.CompilerEnvirons()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.CompilerEnvirons
statement code is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons()
statement is: getErrorReporter()Lorg/mozilla/javascript/ErrorReporter; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.mozilla.javascript.DefaultErrorReporter
statement code is: DefaultErrorReporter errorReporter = (DefaultErrorReporter)compilerEnvirons.getErrorReporter()
statement is: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.Parser
statement code is: Parser parser = new Parser(arg0, arg1)
statement is: insideFunction()Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean insideFunction = parser.insideFunction()
test data is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)compilerEnvirons.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
parser.insideFunction();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
        DefaultErrorReporter errorReporter = ((DefaultErrorReporter) (compilerEnvirons.getErrorReporter()));
        Parser parser = new Parser(compilerEnvirons, errorReporter);
        parser.insideFunction("TestFunc");
    }
}
statement is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: DefaultErrorReporter errorReporter = ((DefaultErrorReporter) (compilerEnvirons.getErrorReporter())), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: ((DefaultErrorReporter) (compilerEnvirons.getErrorReporter())) target is: compilerEnvirons method is: getErrorReporter()
source statement: org.mozilla.javascript.CompilerEnvirons()V callee: VariableReference: Statement 0, type org.mozilla.javascript.CompilerEnvironsindex is: 0
Matched Method is: getErrorReporter()Lorg/mozilla/javascript/ErrorReporter;
statement is: Parser parser = new Parser(compilerEnvirons, errorReporter), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: parser.insideFunction("TestFunc"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: parser.insideFunction("TestFunc") target is: parser method is: insideFunction(java.lang.String)
TestCase is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)compilerEnvirons.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);

statement is: org.mozilla.javascript.CompilerEnvirons()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.CompilerEnvirons
statement code is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons()
statement is: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.Parser
statement code is: Parser parser = new Parser(arg0, (ErrorReporter) null)
statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("L0")
statement is: parse(Ljava/io/Reader;Ljava/lang/String;I)Lorg/mozilla/javascript/ScriptOrFnNode; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.mozilla.javascript.ScriptOrFnNode
statement code is: ScriptOrFnNode parse = parser.parse((Reader) arg0, "", 0)
test data is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Parser parser = new Parser(compilerEnvirons, (ErrorReporter) null);
StringReader stringReader = new StringReader("L0");
parser.parse((Reader) stringReader, "", 0);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
        Parser parser = new Parser(compilerEnvirons, ((ErrorReporter) (null)));
        StringReader stringReader = new StringReader("L0");
        parser.parse(((Reader) (stringReader)), "Java Program", 1);
    }
}
statement is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Parser parser = new Parser(compilerEnvirons, ((ErrorReporter) (null))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: StringReader stringReader = new StringReader("L0"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: parser.parse(((Reader) (stringReader)), "Java Program", 1), class spoon.support.reflect.code.CtInvocationImpl
invocation is: parser.parse(((Reader) (stringReader)), "Java Program", 1) target is: parser method is: parse(Reader,java.lang.String,int)
source statement: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V callee: VariableReference: Statement 1, type org.mozilla.javascript.Parserindex is: 1
Matched Method is: parse(Ljava/io/Reader;Ljava/lang/String;I)Lorg/mozilla/javascript/ScriptOrFnNode;
TestCase is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Parser parser = new Parser(compilerEnvirons, (ErrorReporter) null);
String string = "L0";
StringReader stringReader = new StringReader(string);
String string = "Java Program";
int _int = 1;
parser.parse((Reader) stringReader, string, _int);

statement is: org.mozilla.javascript.CompilerEnvirons()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.CompilerEnvirons
statement code is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons()
statement is: getErrorReporter()Lorg/mozilla/javascript/ErrorReporter; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.mozilla.javascript.DefaultErrorReporter
statement code is: DefaultErrorReporter errorReporter = (DefaultErrorReporter)compilerEnvirons.getErrorReporter()
statement is: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.Parser
statement code is: Parser parser = new Parser(arg0, arg1)
statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("")
statement is: parse(Ljava/io/Reader;Ljava/lang/String;I)Lorg/mozilla/javascript/ScriptOrFnNode; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.mozilla.javascript.ScriptOrFnNode
statement code is: ScriptOrFnNode parse = parser.parse((Reader) arg0, (String) null, 19)
test data is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)compilerEnvirons.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
StringReader stringReader = new StringReader("");
parser.parse((Reader) stringReader, (String) null, 19);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
        DefaultErrorReporter errorReporter = ((DefaultErrorReporter) (compilerEnvirons.getErrorReporter()));
        Parser parser = new Parser(compilerEnvirons, errorReporter);
        StringReader stringReader = new StringReader("Hello, world!");// This is a more descriptive example of the input data being tested. It includes a full sentence instead of just a few characters.

        parser.parse(((Reader) (stringReader)), ((String) (null)), 19);
    }
}
statement is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: DefaultErrorReporter errorReporter = ((DefaultErrorReporter) (compilerEnvirons.getErrorReporter())), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: ((DefaultErrorReporter) (compilerEnvirons.getErrorReporter())) target is: compilerEnvirons method is: getErrorReporter()
source statement: org.mozilla.javascript.CompilerEnvirons()V callee: VariableReference: Statement 0, type org.mozilla.javascript.CompilerEnvironsindex is: 0
Matched Method is: getErrorReporter()Lorg/mozilla/javascript/ErrorReporter;
statement is: Parser parser = new Parser(compilerEnvirons, errorReporter), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: StringReader stringReader = new StringReader("Hello, world!")// This is a more descriptive example of the input data being tested. It includes a full sentence instead of just a few characters.
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: parser.parse(((Reader) (stringReader)), ((String) (null)), 19), class spoon.support.reflect.code.CtInvocationImpl
invocation is: parser.parse(((Reader) (stringReader)), ((String) (null)), 19) target is: parser method is: parse(Reader,java.lang.String,int)
source statement: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V callee: VariableReference: Statement 2, type org.mozilla.javascript.Parserindex is: 2
Matched Method is: parse(Ljava/io/Reader;Ljava/lang/String;I)Lorg/mozilla/javascript/ScriptOrFnNode;
i 2 Parameters size() 2 Num of Method Parameters: 3
TestCase is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)compilerEnvirons.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
String string = "Hello, world!";
StringReader stringReader = new StringReader(string);
int _int = 19;
int _int = null;
parser.parse((Reader) stringReader, (String) _int, _int);

statement is: org.mozilla.javascript.CompilerEnvirons()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.CompilerEnvirons
statement code is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons()
statement is: getErrorReporter()Lorg/mozilla/javascript/ErrorReporter; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.mozilla.javascript.DefaultErrorReporter
statement code is: DefaultErrorReporter errorReporter = (DefaultErrorReporter)compilerEnvirons.getErrorReporter()
statement is: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.Parser
statement code is: Parser parser = new Parser(arg0, arg1)
statement is: parse(Ljava/lang/String;Ljava/lang/String;I)Lorg/mozilla/javascript/ScriptOrFnNode; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.mozilla.javascript.ScriptOrFnNode
statement code is: ScriptOrFnNode parse = parser.parse("", "set", 0)
test data is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)compilerEnvirons.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
parser.parse("", "set", 0);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
        DefaultErrorReporter errorReporter = ((DefaultErrorReporter) (compilerEnvirons.getErrorReporter()));
        Parser parser = new Parser(compilerEnvirons, errorReporter);
        parser.parse("", "set", 0);
    }
}
statement is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: DefaultErrorReporter errorReporter = ((DefaultErrorReporter) (compilerEnvirons.getErrorReporter())), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: ((DefaultErrorReporter) (compilerEnvirons.getErrorReporter())) target is: compilerEnvirons method is: getErrorReporter()
source statement: org.mozilla.javascript.CompilerEnvirons()V callee: VariableReference: Statement 0, type org.mozilla.javascript.CompilerEnvironsindex is: 0
Matched Method is: getErrorReporter()Lorg/mozilla/javascript/ErrorReporter;
statement is: Parser parser = new Parser(compilerEnvirons, errorReporter), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: parser.parse("", "set", 0), class spoon.support.reflect.code.CtInvocationImpl
invocation is: parser.parse("", "set", 0) target is: parser method is: parse(java.lang.String,java.lang.String,int)
source statement: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V callee: VariableReference: Statement 2, type org.mozilla.javascript.Parserindex is: 2
Matched Method is: parse(Ljava/lang/String;Ljava/lang/String;I)Lorg/mozilla/javascript/ScriptOrFnNode;
TestCase is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)compilerEnvirons.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
String string = "";
String string = "set";
int _int = 0;
parser.parse(string, string, _int);

statement is: org.mozilla.javascript.CompilerEnvirons()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.CompilerEnvirons
statement code is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons()
statement is: getErrorReporter()Lorg/mozilla/javascript/ErrorReporter; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.mozilla.javascript.DefaultErrorReporter
statement code is: DefaultErrorReporter errorReporter = (DefaultErrorReporter)compilerEnvirons.getErrorReporter()
statement is: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.Parser
statement code is: Parser parser = new Parser((CompilerEnvirons) null, arg1)
statement is: addError(Ljava/lang/String;Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: parser.addError("msg.reserved.id", "msg.reserved.id")
test data is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)compilerEnvirons.getErrorReporter();
Parser parser = new Parser((CompilerEnvirons) null, errorReporter);
parser.addError("msg.reserved.id", "msg.reserved.id");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
        DefaultErrorReporter errorReporter = ((DefaultErrorReporter) (compilerEnvirons.getErrorReporter()));
        Parser parser = new Parser(((CompilerEnvirons) (null)), errorReporter);
        parser.addError("msg.reserved.id", "The identifier 'foo' is reserved");
    }
}
statement is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: DefaultErrorReporter errorReporter = ((DefaultErrorReporter) (compilerEnvirons.getErrorReporter())), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: ((DefaultErrorReporter) (compilerEnvirons.getErrorReporter())) target is: compilerEnvirons method is: getErrorReporter()
source statement: org.mozilla.javascript.CompilerEnvirons()V callee: VariableReference: Statement 0, type org.mozilla.javascript.CompilerEnvironsindex is: 0
Matched Method is: getErrorReporter()Lorg/mozilla/javascript/ErrorReporter;
statement is: Parser parser = new Parser(((CompilerEnvirons) (null)), errorReporter), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: parser.addError("msg.reserved.id", "The identifier 'foo' is reserved"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: parser.addError("msg.reserved.id", "The identifier 'foo' is reserved") target is: parser method is: addError(java.lang.String,java.lang.String)
source statement: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V callee: VariableReference: Statement 2, type org.mozilla.javascript.Parserindex is: 2
Matched Method is: addError(Ljava/lang/String;Ljava/lang/String;)V
TestCase is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)compilerEnvirons.getErrorReporter();
Parser parser = new Parser((CompilerEnvirons) errorReporter, errorReporter);
String string = "msg.reserved.id";
String string = "The identifier 'foo' is reserved";
parser.addError(string, string);

statement is: org.mozilla.javascript.CompilerEnvirons()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.CompilerEnvirons
statement code is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons()
statement is: org.evosuite.testcase.statements.FieldStatement@35127c92 type is: class org.evosuite.testcase.statements.FieldStatement return type class org.mozilla.javascript.DefaultErrorReporter
statement code is: DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance
statement is: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.Parser
statement code is: Parser parser = new Parser(arg0, arg1)
statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("msg.not.java.obj")
statement is: parse(Ljava/io/Reader;Ljava/lang/String;I)Lorg/mozilla/javascript/ScriptOrFnNode; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.mozilla.javascript.ScriptOrFnNode
statement code is: ScriptOrFnNode parse = parser.parse((Reader) arg0, "jsFunction_", 22)
statement is: addWarning(Ljava/lang/String;Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: parser.addWarning("msg.let.decl.not.in.block", "msg.let.decl.not.in.block")
test data is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
StringReader stringReader = new StringReader("msg.not.java.obj");
parser.parse((Reader) stringReader, "jsFunction_", 22);
parser.addWarning("msg.let.decl.not.in.block", "msg.let.decl.not.in.block");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
        DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
        Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
        StringReader stringReader = new StringReader("InvalidObject.not.java.obj");
        parser.parse(((Reader) (stringReader)), "jsFunction_", 22);
        parser.addWarning("InvalidObject.let.decl.not.in.block", "InvalidObject.let.decl.not.in.block");
    }
}
statement is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: DefaultErrorReporter.instance is DefaultErrorReporter
CtField is: static org.mozilla.javascript.DefaultErrorReporter org.mozilla.javascript.DefaultErrorReporter.instance DefaultErrorReporter instance
statement is: Parser parser = new Parser(compilerEnvirons, defaultErrorReporter), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: StringReader stringReader = new StringReader("InvalidObject.not.java.obj"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: parser.parse(((Reader) (stringReader)), "jsFunction_", 22), class spoon.support.reflect.code.CtInvocationImpl
invocation is: parser.parse(((Reader) (stringReader)), "jsFunction_", 22) target is: parser method is: parse(Reader,java.lang.String,int)
source statement: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V callee: VariableReference: Statement 2, type org.mozilla.javascript.Parserindex is: 2
Matched Method is: parse(Ljava/io/Reader;Ljava/lang/String;I)Lorg/mozilla/javascript/ScriptOrFnNode;
statement is: parser.addWarning("InvalidObject.let.decl.not.in.block", "InvalidObject.let.decl.not.in.block"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: parser.addWarning("InvalidObject.let.decl.not.in.block", "InvalidObject.let.decl.not.in.block") target is: parser method is: addWarning(java.lang.String,java.lang.String)
source statement: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V callee: VariableReference: Statement 2, type org.mozilla.javascript.Parserindex is: 2
Matched Method is: addWarning(Ljava/lang/String;Ljava/lang/String;)V
TestCase is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
String string = "InvalidObject.not.java.obj";
StringReader stringReader = new StringReader(string);
String string = "jsFunction_";
int _int = 22;
parser.parse((Reader) stringReader, string, _int);
String string = "InvalidObject.let.decl.not.in.block";
String string = "InvalidObject.let.decl.not.in.block";
parser.addWarning(string, string);

statement is: org.mozilla.javascript.CompilerEnvirons()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.CompilerEnvirons
statement code is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons()
statement is: getErrorReporter()Lorg/mozilla/javascript/ErrorReporter; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.mozilla.javascript.DefaultErrorReporter
statement code is: DefaultErrorReporter errorReporter = (DefaultErrorReporter)compilerEnvirons.getErrorReporter()
statement is: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.Parser
statement code is: Parser parser = new Parser(arg0, arg1)
statement is: setXmlAvailable(Z)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: compilerEnvirons.setXmlAvailable(false)
statement is: parse(Ljava/lang/String;Ljava/lang/String;I)Lorg/mozilla/javascript/ScriptOrFnNode; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.mozilla.javascript.ScriptOrFnNode
statement code is: ScriptOrFnNode parse = parser.parse("org.mozilla.javascript.Node$Jump", "", 85)
test data is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)compilerEnvirons.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
compilerEnvirons.setXmlAvailable(false);
parser.parse("org.mozilla.javascript.Node$Jump", "", 85);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
        DefaultErrorReporter errorReporter = ((DefaultErrorReporter) (compilerEnvirons.getErrorReporter()));
        Parser parser = new Parser(compilerEnvirons, errorReporter);
        compilerEnvirons.setXmlAvailable(false);
        parser.parse("org.mozilla.javascript.Node$Jump", "The quick brown fox jumps over the lazy dog.", 85);
    }
}
statement is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: DefaultErrorReporter errorReporter = ((DefaultErrorReporter) (compilerEnvirons.getErrorReporter())), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: ((DefaultErrorReporter) (compilerEnvirons.getErrorReporter())) target is: compilerEnvirons method is: getErrorReporter()
source statement: org.mozilla.javascript.CompilerEnvirons()V callee: VariableReference: Statement 0, type org.mozilla.javascript.CompilerEnvironsindex is: 0
Matched Method is: getErrorReporter()Lorg/mozilla/javascript/ErrorReporter;
statement is: Parser parser = new Parser(compilerEnvirons, errorReporter), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: compilerEnvirons.setXmlAvailable(false), class spoon.support.reflect.code.CtInvocationImpl
invocation is: compilerEnvirons.setXmlAvailable(false) target is: compilerEnvirons method is: setXmlAvailable(boolean)
source statement: org.mozilla.javascript.CompilerEnvirons()V callee: VariableReference: Statement 0, type org.mozilla.javascript.CompilerEnvironsindex is: 0
Matched Method is: setXmlAvailable(Z)V
statement is: parser.parse("org.mozilla.javascript.Node$Jump", "The quick brown fox jumps over the lazy dog.", 85), class spoon.support.reflect.code.CtInvocationImpl
invocation is: parser.parse("org.mozilla.javascript.Node$Jump", "The quick brown fox jumps over the lazy dog.", 85) target is: parser method is: parse(java.lang.String,java.lang.String,int)
source statement: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V callee: VariableReference: Statement 2, type org.mozilla.javascript.Parserindex is: 2
Matched Method is: parse(Ljava/lang/String;Ljava/lang/String;I)Lorg/mozilla/javascript/ScriptOrFnNode;
TestCase is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)compilerEnvirons.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
boolean _boolean = false;
compilerEnvirons.setXmlAvailable(_boolean);
String string = "org.mozilla.javascript.Node$Jump";
String string = "The quick brown fox jumps over the lazy dog.";
int _int = 85;
parser.parse(string, string, _int);

statement is: org.mozilla.javascript.CompilerEnvirons()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.CompilerEnvirons
statement code is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons()
statement is: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.Parser
statement code is: Parser parser = new Parser(arg0, (ErrorReporter) null)
statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("<cj75^{E]")
statement is: parse(Ljava/io/Reader;Ljava/lang/String;I)Lorg/mozilla/javascript/ScriptOrFnNode; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.mozilla.javascript.ScriptOrFnNode
statement code is: ScriptOrFnNode parse = parser.parse((Reader) arg0, "", 89)
test data is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Parser parser = new Parser(compilerEnvirons, (ErrorReporter) null);
StringReader stringReader = new StringReader("<cj75^{E]");
parser.parse((Reader) stringReader, "", 89);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
        Parser parser = new Parser(compilerEnvirons, ((ErrorReporter) (null)));
        StringReader stringReader = new StringReader("<cj75^{E}");
        parser.parse(((Reader) (stringReader)), "", 89);
    }
}
statement is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Parser parser = new Parser(compilerEnvirons, ((ErrorReporter) (null))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: StringReader stringReader = new StringReader("<cj75^{E}"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: parser.parse(((Reader) (stringReader)), "", 89), class spoon.support.reflect.code.CtInvocationImpl
invocation is: parser.parse(((Reader) (stringReader)), "", 89) target is: parser method is: parse(Reader,java.lang.String,int)
source statement: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V callee: VariableReference: Statement 1, type org.mozilla.javascript.Parserindex is: 1
Matched Method is: parse(Ljava/io/Reader;Ljava/lang/String;I)Lorg/mozilla/javascript/ScriptOrFnNode;
TestCase is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Parser parser = new Parser(compilerEnvirons, (ErrorReporter) null);
String string = "<cj75^{E}";
StringReader stringReader = new StringReader(string);
String string = "";
int _int = 89;
parser.parse((Reader) stringReader, string, _int);

statement is: org.mozilla.javascript.CompilerEnvirons()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.CompilerEnvirons
statement code is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons()
statement is: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.Parser
statement code is: Parser parser = new Parser(arg0, (ErrorReporter) null)
statement is: addError(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: parser.addError("M8J")
test data is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Parser parser = new Parser(compilerEnvirons, (ErrorReporter) null);
parser.addError("M8J");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
        compilerEnvirons.setLanguageVersion(new LanguageVersion(8, 0));
        parser = new Parser(compilerEnvirons, ((ErrorReporter) (null)));
        // Add error message "M8J" to the parser
        parser.addError("M8J");
    }
}
statement is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: compilerEnvirons.setLanguageVersion(new LanguageVersion(8, 0)), class spoon.support.reflect.code.CtInvocationImpl
invocation is: compilerEnvirons.setLanguageVersion(new LanguageVersion(8, 0)) target is: compilerEnvirons method is: setLanguageVersion(LanguageVersion)
statement is: parser = new Parser(compilerEnvirons, ((ErrorReporter) (null))), class spoon.support.reflect.code.CtAssignmentImpl
statement is: // Add error message "M8J" to the parser
parser.addError("M8J"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: // Add error message "M8J" to the parser
parser.addError("M8J") target is: parser method is: addError(java.lang.String)
TestCase is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons();

statement is: org.mozilla.javascript.CompilerEnvirons()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.CompilerEnvirons
statement code is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons()
statement is: org.evosuite.testcase.statements.FieldStatement@35127c92 type is: class org.evosuite.testcase.statements.FieldStatement return type class org.mozilla.javascript.DefaultErrorReporter
statement code is: DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance
statement is: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.Parser
statement code is: Parser parser = new Parser(arg0, arg1)
statement is: reportError(Ljava/lang/String;)Ljava/lang/RuntimeException; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.lang.RuntimeException
statement code is: RuntimeException reportError = parser.reportError("error reporter")
test data is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
parser.reportError("error reporter");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
        DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
        Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
        parser.reportError("A syntax error was encountered while parsing the code.");
    }
}
statement is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: DefaultErrorReporter.instance is DefaultErrorReporter
CtField is: static org.mozilla.javascript.DefaultErrorReporter org.mozilla.javascript.DefaultErrorReporter.instance DefaultErrorReporter instance
statement is: Parser parser = new Parser(compilerEnvirons, defaultErrorReporter), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: parser.reportError("A syntax error was encountered while parsing the code."), class spoon.support.reflect.code.CtInvocationImpl
invocation is: parser.reportError("A syntax error was encountered while parsing the code.") target is: parser method is: reportError(java.lang.String)
source statement: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V callee: VariableReference: Statement 2, type org.mozilla.javascript.Parserindex is: 2
Matched Method is: reportError(Ljava/lang/String;)Ljava/lang/RuntimeException;
TestCase is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
String string = "A syntax error was encountered while parsing the code.";
parser.reportError(string);

* test suite isTestSuite: 134
Test 0: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
parser.getEncodedSource();
Test 1: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
// Undeclared exception!
try { 
  parser.popScope();
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.mozilla.javascript.Parser", e);
}

Test 2: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
// Undeclared exception!
try { 
  parser.parse("H-{bvlxlV)0pK+", "H-{bvlxlV)0pK+", 511);
  fail("Expecting exception: ClassCastException");

} catch(ClassCastException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 3: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Parser parser = new Parser(compilerEnvirons, (ErrorReporter) null);
StringReader stringReader = new StringReader("[]");
parser.parse((Reader) stringReader, "[]", 119);
Test 4: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Parser parser = new Parser(compilerEnvirons, (ErrorReporter) null);
parser.addStrictWarning("msg.bad.return", "msg.bad.return");
Test 5: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
// Undeclared exception!
try { 
  parser.parse("(Function)", "(Function)", (-4147));
  fail("Expecting exception: IllegalStateException");

} catch(IllegalStateException e) {
   //
   // FAILED ASSERTION
   //
   verifyException("org.mozilla.javascript.Kit", e);
}

Test 6: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
// Undeclared exception!
try { 
  parser.parse("[@(MhrsR;n%;Rh<`>|]", "[@(MhrsR;n%;Rh<`>|]", 13);
  fail("Expecting exception: ClassCastException");

} catch(ClassCastException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 7: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)compilerEnvirons.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
compilerEnvirons.setXmlAvailable(false);
// Undeclared exception!
try { 
  parser.parse("[@(MhrsR;n%;Rh<`>|]", (String) null, 13);
  fail("Expecting exception: ClassCastException");

} catch(ClassCastException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 8: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)compilerEnvirons.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
// Undeclared exception!
try { 
  parser.parse("{kP0*^,a", "{kP0*^,a", (-4393));
  fail("Expecting exception: ClassCastException");

} catch(ClassCastException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 9: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Context currentContext = Context.getCurrentContext();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)currentContext.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
ScriptOrFnNode parse = parser.parse("isPrototypeOf", "V", 7);
parser.pushScope(parse);
// Undeclared exception!
try { 
  parser.pushScope(parse);
  fail("Expecting exception: IllegalStateException");

} catch(IllegalStateException e) {
   //
   // FAILED ASSERTION
   //
   verifyException("org.mozilla.javascript.Kit", e);
}

Test 10: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
// Undeclared exception!
try { 
  parser.parse("do ", "do ", 16);
  fail("Expecting exception: ClassCastException");

} catch(ClassCastException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 11: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
compilerEnvirons.setGeneratingSource(false);
parser.parse(";vM*ZI<n", "retun", 23);
Test 12: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
// Undeclared exception!
try { 
  parser.parse("return", "return", 23);
  fail("Expecting exception: ClassCastException");

} catch(ClassCastException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 13: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)compilerEnvirons.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
// Undeclared exception!
try { 
  parser.parse("throw ", "throw ", (-226));
  fail("Expecting exception: ClassCastException");

} catch(ClassCastException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 14: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Context context = Context.getContext();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)context.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
// Undeclared exception!
try { 
  parser.parse("if ", "if ", 11);
  fail("Expecting exception: ClassCastException");

} catch(ClassCastException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 15: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Context currentContext = Context.getCurrentContext();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)currentContext.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
// Undeclared exception!
try { 
  parser.parse("switch", "language version", 11);
  fail("Expecting exception: ClassCastException");

} catch(ClassCastException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 16: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
// Undeclared exception!
try { 
  parser.parse("with", "o?`?}SO#J", 1428);
  fail("Expecting exception: ClassCastException");

} catch(ClassCastException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 17: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
// Undeclared exception!
try { 
  parser.parse("bj:", "bj:", 16);
  fail("Expecting exception: ClassCastException");

} catch(ClassCastException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 18: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
// Undeclared exception!
try { 
  parser.parse("OP}ua=UA|aqxpPdDD", "OP}ua=UA|aqxpPdDD", (-1756));
  fail("Expecting exception: ClassCastException");

} catch(ClassCastException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 19: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Context currentContext = Context.getCurrentContext();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)currentContext.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
// Undeclared exception!
try { 
  parser.parse("pc;V(p_,X4", "<>", 5);
  fail("Expecting exception: ClassCastException");

} catch(ClassCastException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 20: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
parser.parse("r:eRIySm:Ck3gEN", "r:eRIySm:Ck3gEN", 3072);
parser.defineSymbol(86, true, "Lget");
Test 21: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)compilerEnvirons.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
parser.parse("", "", 85);
// Undeclared exception!
try { 
  parser.defineSymbol((-3170), false, "");
  fail("Expecting exception: IllegalStateException");

} catch(IllegalStateException e) {
   //
   // FAILED ASSERTION
   //
   verifyException("org.mozilla.javascript.Kit", e);
}

Test 22: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
StringReader stringReader = new StringReader("org.mozilla.javascript.DToA");
parser.parse((Reader) stringReader, "*", 1186);
parser.defineSymbol(121, true, (String) null);
Test 23: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
parser.parse("rB", "language version", 8);
parser.defineSymbol(153, false, "rB");
Test 24: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Context context = Context.getContext();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)context.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
parser.parse("DuI_9Z,u", "error reporter", 8);
Test 25: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)compilerEnvirons.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
// Undeclared exception!
try { 
  parser.parse("ahNG6D|~^", "ahNG6D|~^", 107);
  fail("Expecting exception: ClassCastException");

} catch(ClassCastException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 26: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)compilerEnvirons.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
// Undeclared exception!
try { 
  parser.parse("_c&A$h7w([p=x{pS", "_c&A$h7w([p=x{pS", (-1541));
  fail("Expecting exception: ClassCastException");

} catch(ClassCastException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 27: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)compilerEnvirons.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
parser.parse("factory == null", "error reporter", 9);
Test 28: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
// Undeclared exception!
try { 
  parser.parse("UogZg|gk!=q:", "UogZg|gk!=q:", (-1690));
  fail("Expecting exception: ClassCastException");

} catch(ClassCastException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 29: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
// Undeclared exception!
try { 
  parser.parse("ER>%Mgx}'nl ", "ER>%Mgx}'nl ", 519);
  fail("Expecting exception: ClassCastException");

} catch(ClassCastException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 30: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
// Undeclared exception!
try { 
  parser.parse("X+RQRF=+2z-N).wM", "org.mozilla.javascript.NativeIterator$WrappedJavaIterator", 107);
  fail("Expecting exception: ClassCastException");

} catch(ClassCastException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 31: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
parser.parse("e%c/ Ac$M", "e%c/ Ac$M", 17);
Test 32: 
Context currentContext = Context.getCurrentContext();
// Undeclared exception!
try { 
  currentContext.stringIsCompilableUnit("<>");
  fail("Expecting exception: ClassCastException");

} catch(ClassCastException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 33: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
// Undeclared exception!
try { 
  parser.parse("<]3xW{)*", "<]3xW{)*", (-386));
  fail("Expecting exception: ClassCastException");

} catch(ClassCastException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 34: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Context currentContext = Context.getCurrentContext();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)currentContext.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
// Undeclared exception!
try { 
  parser.parse("factory.makeContext() returned Context instance already associated with some thread", "error reporter", 13);
  fail("Expecting exception: ClassCastException");

} catch(ClassCastException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 35: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
// Undeclared exception!
try { 
  parser.parse("WWV[", "WWV[", 107);
  fail("Expecting exception: ClassCastException");

} catch(ClassCastException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 36: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
// Undeclared exception!
try { 
  parser.parse("mcUO..,'g\"F|a{Y", "language version", 8);
  fail("Expecting exception: ClassCastException");

} catch(ClassCastException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 37: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Parser parser = new Parser(compilerEnvirons, (ErrorReporter) null);
// Undeclared exception!
try { 
  parser.parse("cy8.*?!b*j8Q,P", "cy8.*?!b*j8Q,P", 5930);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.mozilla.javascript.Parser", e);
}

Test 38: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
// Undeclared exception!
try { 
  parser.parse("msg.bad.throw.eol", (String) null, (-875));
  fail("Expecting exception: IllegalStateException");

} catch(IllegalStateException e) {
   //
   // FAILED ASSERTION
   //
   verifyException("org.mozilla.javascript.Kit", e);
}

Test 39: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
// Undeclared exception!
try { 
  parser.parse("@*TIho", "@*TIho", (-573));
  fail("Expecting exception: ClassCastException");

} catch(ClassCastException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 40: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
// Undeclared exception!
try { 
  parser.parse("@DyOJSap", "@DyOJSap", (-2));
  fail("Expecting exception: IllegalStateException");

} catch(IllegalStateException e) {
   //
   // FAILED ASSERTION
   //
   verifyException("org.mozilla.javascript.Kit", e);
}

Test 41: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
// Undeclared exception!
try { 
  parser.parse(";/?:@&=+$,#", ";/?:@&=+$,#", 17);
  fail("Expecting exception: ClassCastException");

} catch(ClassCastException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 42: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
// Undeclared exception!
try { 
  parser.parse("v[\"M-;%VrW\")", "bvlxlV", 3070);
  fail("Expecting exception: ClassCastException");

} catch(ClassCastException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 43: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
parser.parse("false", "false", 671);
Test 44: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)compilerEnvirons.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
// Undeclared exception!
try { 
  parser.parse(" /= ", "msg.let.redecl", 42);
  fail("Expecting exception: ClassCastException");

} catch(ClassCastException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 45: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)compilerEnvirons.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
// Undeclared exception!
try { 
  parser.parse("float", "float", 113);
  fail("Expecting exception: ClassCastException");

} catch(ClassCastException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 46: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
// Undeclared exception!
try { 
  parser.parse("[dUC,qV", "[dUC,qV", (-2022));
  fail("Expecting exception: ClassCastException");

} catch(ClassCastException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 47: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)compilerEnvirons.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
// Undeclared exception!
try { 
  parser.parse("-{{$@C.u6w", "-{{$@C.u6w", 110);
  fail("Expecting exception: ClassCastException");

} catch(ClassCastException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 48: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Parser parser = new Parser(compilerEnvirons, (ErrorReporter) null);
// Undeclared exception!
try { 
  parser.parse("{'Ed>`X6K6", "", 42);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.mozilla.javascript.Parser", e);
}

Test 49: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
// Undeclared exception!
try { 
  parser.parse("Bh^<d", "1Jn.Cm", (-2468));
  fail("Expecting exception: ClassCastException");

} catch(ClassCastException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 50: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)compilerEnvirons.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
// Undeclared exception!
try { 
  parser.parse("R.fM&+", "R.fM&+", 4);
  fail("Expecting exception: ClassCastException");

} catch(ClassCastException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 51: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
// Undeclared exception!
try { 
  parser.parse("4P]Vi", "error reporter", 11);
  fail("Expecting exception: ClassCastException");

} catch(ClassCastException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 52: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)compilerEnvirons.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
// Undeclared exception!
try { 
  parser.parse("\"cb6W|o\"`1)tEY95aH,", "%K~Iu7Lr86C{.{(", 1);
  fail("Expecting exception: ClassCastException");

} catch(ClassCastException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 53: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)compilerEnvirons.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
// Undeclared exception!
try { 
  parser.parse("XndO=(V7\"O@", "<c", 653);
  fail("Expecting exception: ClassCastException");

} catch(ClassCastException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 54: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
parser.createDecompiler(compilerEnvirons);
Test 55: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Context context = Context.getContext();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)context.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
parser.parse("rB", "language version", 110);
parser.eof();
Test 56: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
parser.parse("/%W/", "msg.adapter.zero.args", 44);
parser.getCurrentLineNumber();
Test 57: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)compilerEnvirons.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
parser.parse("org.mozilla.javascript.Node$Jump", "", 85);
parser.getEncodedSource();
Test 58: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)compilerEnvirons.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
parser.insideFunction();
Test 59: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Parser parser = new Parser(compilerEnvirons, (ErrorReporter) null);
StringReader stringReader = new StringReader("L0");
parser.parse((Reader) stringReader, "", 0);
Test 60: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)compilerEnvirons.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
StringReader stringReader = new StringReader("");
parser.parse((Reader) stringReader, (String) null, 19);
Test 61: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)compilerEnvirons.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
parser.parse("", "set", 0);
Test 62: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)compilerEnvirons.getErrorReporter();
Parser parser = new Parser((CompilerEnvirons) null, errorReporter);
// Undeclared exception!
try { 
  parser.addError("msg.reserved.id", "msg.reserved.id");
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.mozilla.javascript.Parser", e);
}

Test 63: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
StringReader stringReader = new StringReader("msg.not.java.obj");
parser.parse((Reader) stringReader, "jsFunction_", 22);
parser.addWarning("msg.let.decl.not.in.block", "msg.let.decl.not.in.block");
Test 64: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)compilerEnvirons.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
compilerEnvirons.setXmlAvailable(false);
parser.parse("org.mozilla.javascript.Node$Jump", "", 85);
Test 65: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Parser parser = new Parser(compilerEnvirons, (ErrorReporter) null);
StringReader stringReader = new StringReader("<cj75^{E]");
// Undeclared exception!
try { 
  parser.parse((Reader) stringReader, "", 89);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.mozilla.javascript.Parser", e);
}

Test 66: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Parser parser = new Parser(compilerEnvirons, (ErrorReporter) null);
// Undeclared exception!
try { 
  parser.addError("M8J");
  fail("Expecting exception: RuntimeException");

} catch(RuntimeException e) {
   //
   // no message resource found for message property M8J
   //
   verifyException("org.mozilla.javascript.ScriptRuntime$DefaultMessageProvider", e);
}

Test 67: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
// Undeclared exception!
try { 
  parser.reportError("error reporter");
  fail("Expecting exception: RuntimeException");

} catch(RuntimeException e) {
   //
   // no message resource found for message property error reporter
   //
   verifyException("org.mozilla.javascript.ScriptRuntime$DefaultMessageProvider", e);
}

Test 68: 
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;

Test 69: 
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;

Test 70: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
parser.parse("Hello World!", "Hello World!", 511);

Test 71: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Parser parser = new Parser(compilerEnvirons, (ErrorReporter) null);
StringReader stringReader = new StringReader("[1, 2, 3, 4]");
parser.parse((Reader) stringReader, "[1, 2, 3, 4]", 119);

Test 72: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Parser parser = new Parser(compilerEnvirons, (ErrorReporter) null);
parser.addStrictWarning("msg.bad.return", "msg.bad.return");
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Parser parser = new Parser(compilerEnvirons, (ErrorReporter) null);
parser.addStrictWarning("msg.bad.return", "msg.bad.return");
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Parser parser = new Parser(compilerEnvirons, (ErrorReporter) null);
parser.addStrictWarning("msg.bad.return", "msg.bad.return");
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Parser parser = new Parser(compilerEnvirons, (ErrorReporter) null);
parser.addStrictWarning("msg.bad.return", "msg.bad.return");

Test 73: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
parser.parse("(Function)", "(Function)", (int) (Integer) null);

Test 74: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
parser.parse("[@(MhrsR;n%;Rh<`>|]", "[@(MhrsR;n%;Rh<`>|]", 13);

Test 75: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)compilerEnvirons.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
compilerEnvirons.setXmlAvailable(false);
parser.parse("[@(MhrsR;n%;Rh<`>|]", (String) 13, (int) (Integer) null);

Test 76: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)compilerEnvirons.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);

Test 77: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Context currentContext = Context.getCurrentContext();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)currentContext.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
ScriptOrFnNode parse = parser.parse("isPrototypeOf", "V", 7);
parser.pushScope(parse);
parser.pushScope(parse);
parser.pushScope(parse);

Test 78: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);

Test 79: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
compilerEnvirons.setGeneratingSource(false);
parser.parse("var x: integer;", "assign_integer", 10);

Test 80: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
parser.parse("return 5 + 3 * (2 - 1)", "return", 23);

Test 81: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Context context = Context.getContext();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)context.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);

Test 82: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Context currentContext = Context.getCurrentContext();
Parser parser = new Parser(compilerEnvirons, (ErrorReporter) currentContext);
String string = "switch";
String string = "language version";
int _int = 11;
((Parser) string).parse(string, string, _int);

Test 83: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
parser.parse("1234567890", "This is a sentence.", 0);

Test 84: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
parser.parse("bj:", "bj:", 16);

Test 85: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
parser.parse("This is a sample input string", "This is a sample input string", (int) (Integer) null);

Test 86: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Context currentContext = Context.getCurrentContext();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)currentContext.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
parser.parse("pc;V(p_,X4", "<>", 5);

Test 87: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
parser.parse("methodName", "sourceCode", (int) (Integer) null);
int _int = 86;
boolean _boolean = true;
String string = "Lget";
parser.defineSymbol(_int, _boolean, string);

Test 88: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)compilerEnvirons.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
parser.parse("This is a test string", "This is the file name", 85);
int _int = 3170;
boolean _boolean = false;
String string = "This is the symbol";
parser.defineSymbol(_int, _boolean, string);

Test 89: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
StringReader stringReader = new StringReader("DToA");
parser.parse((Reader) stringReader, "*", (int) "appendString");
int _int = 121;
boolean _boolean = true;
String string = null;
parser.defineSymbol(_int, _boolean, string);

Test 90: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
parser.parse("rB", "language version", 8);
parser.defineSymbol(153, false, "version 10");

Test 91: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Context context = Context.getContext();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)context.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);

Test 92: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)compilerEnvirons.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
parser.parse("This is a test string.", "This is a test string.", 107);

Test 93: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)compilerEnvirons.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);

Test 94: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)compilerEnvirons.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
parser.parse("factory == 'not null'", "error reporter for not null factory variable", 9);
parser.parse("factory == ''", "error reporter for empty string factory variable", 9);
parser.parse("factory == ' '", "error reporter for whitespace character factory variable", 9);

Test 95: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
parser.parse("This is a sample test data string that contains some invalid characters.", "This is a sample test data string that contains some invalid characters.", (int) (Integer) null);

Test 96: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);

Test 97: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
parser.parse("X+RQRF=+2z-N).wM", "org.mozilla.javascript.NativeIterator$WrappedJavaIterator", 107);

Test 98: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
parser.parse("e%c/ Ac$M", "e%c/ Ac$M", 20);

Test 99: 
Context.getCurrentContext();

Test 100: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
parser.parse("42", "The answer to the ultimate question of life, the universe, and everything.", (int) (Integer) null);

Test 101: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Context currentContext = Context.getCurrentContext();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)currentContext.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
parser.parse("factory.makeContext() returned Context instance already associated with some thread", "contextFactoryMethodName", 42);

Test 102: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
parser.parse("WWV[", "WWV[", 107);

Test 103: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
parser.parse("12345678", "language version", 8);

Test 104: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Parser parser = new Parser(compilerEnvirons, (ErrorReporter) null);
parser.parse("This is a sample input string with a few more words and a sentence structure", "This is a sample input string with a few more words and a sentence structure", 5930);

Test 105: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
parser.parse("msg.bad.throw.eol", (String) null, (int) (Integer) null);

Test 106: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
parser.parse("This is a string to be parsed", "This is a string to be parsed", 10);

Test 107: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
parser.parse("2 + 2", "2 + 2", 4);

Test 108: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
parser.parse("v[\"M-;%VrW\")", "bvlxlV", 3070);

Test 109: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
parser.parse("1234567890", "abcdefghijklmnopqrstuvwxyz", 671);

Test 110: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)compilerEnvirons.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
parser.parse(" /= ", "msg.let.redecl", 1234567890);

Test 111: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)compilerEnvirons.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
parser.parse("float", "float", (int) 3.14F);
String string = "integer";
String string = "int";
int _int = 123;
parser.parse(string, string, _int);
String string = "string";
String string = "String";
String string = "Hello, world!";
parser.parse(string, string, (int) string);

Test 112: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
parser.parse("[DUC_ID,QUERY_STRING", "[DUC_ID,QUERY_STRING", (int) (Integer) null);

Test 113: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)compilerEnvirons.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
parser.parse("valid_input_1", "valid_input_1", 20);

Test 114: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Parser parser = new Parser(compilerEnvirons, (ErrorReporter) null);

Test 115: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
parser.parse("Bh^<d", "1Jn.Cm", 5);
String string = "Bh^<d";
String string = "1Jn.Cm";
int _int = null;
parser.parse(string, string, _int);
String string = "Bh^<d";
String string = "1Jn.Cm";
double _double = 3.14;
parser.parse(string, string, (int) _double);
String string = "Bh^<d";
String string = "1Jn.Cm";
double _double = null;
parser.parse(string, string, (int) _double);
String string = "Bh^<d";
String string = "1Jn.Cm";
String string = "hello";
parser.parse(string, string, (int) string);
String string = "Bh^<d";
String string = "1Jn.Cm";
char _char = 'a';
parser.parse(string, string, (int) _char);

Test 116: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)compilerEnvirons.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
parser.parse("R.fM&+", "R.fM&+", 4);

Test 117: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
parser.parse("42P]Vi", "error reporter", 11);

Test 118: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)compilerEnvirons.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);

Test 119: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)compilerEnvirons.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
parser.parse("XndO=(V7\"O@", "This is a sample input string", 653);

Test 120: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
parser.createDecompiler(compilerEnvirons);
parser.createDecompiler(compilerEnvirons);

Test 121: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Context context = Context.getContext();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)context.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
parser.parse("rB", "language version", 110);
parser.eof();

Test 122: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
parser.parse("/%W/", "msg.adapter.zero.args", 44);
parser.getCurrentLineNumber();

Test 123: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)compilerEnvirons.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
parser.parse("org.mozilla.javascript.Node$Jump", "", 85);
parser.getEncodedSource();

Test 124: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)compilerEnvirons.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);

Test 125: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Parser parser = new Parser(compilerEnvirons, (ErrorReporter) null);
StringReader stringReader = new StringReader("L0");
parser.parse((Reader) stringReader, "Java Program", 1);

Test 126: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)compilerEnvirons.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
StringReader stringReader = new StringReader("Hello, world!");
parser.parse((Reader) stringReader, (String) 19, (int) (Integer) null);

Test 127: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)compilerEnvirons.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
parser.parse("", "set", 0);

Test 128: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)compilerEnvirons.getErrorReporter();
Parser parser = new Parser((CompilerEnvirons) errorReporter, errorReporter);
String string = "msg.reserved.id";
String string = "The identifier 'foo' is reserved";
parser.addError(string, string);

Test 129: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
StringReader stringReader = new StringReader("InvalidObject.not.java.obj");
parser.parse((Reader) stringReader, "jsFunction_", 22);
parser.addWarning("InvalidObject.let.decl.not.in.block", "InvalidObject.let.decl.not.in.block");

Test 130: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)compilerEnvirons.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
compilerEnvirons.setXmlAvailable(false);
parser.parse("org.mozilla.javascript.Node$Jump", "The quick brown fox jumps over the lazy dog.", 85);

Test 131: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Parser parser = new Parser(compilerEnvirons, (ErrorReporter) null);
StringReader stringReader = new StringReader("<cj75^{E}");
parser.parse((Reader) stringReader, "", 89);

Test 132: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();

Test 133: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
parser.reportError("A syntax error was encountered while parsing the code.");


* Generated after the refinement and before minimization 134 tests with total length 606
* test suite isTestSuite: 134
Test 0: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
parser.getEncodedSource();
Test 1: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
// Undeclared exception!
try { 
  parser.popScope();
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.mozilla.javascript.Parser", e);
}

Test 2: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
// Undeclared exception!
try { 
  parser.parse("H-{bvlxlV)0pK+", "H-{bvlxlV)0pK+", 511);
  fail("Expecting exception: ClassCastException");

} catch(ClassCastException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 3: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Parser parser = new Parser(compilerEnvirons, (ErrorReporter) null);
StringReader stringReader = new StringReader("[]");
parser.parse((Reader) stringReader, "[]", 119);
Test 4: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Parser parser = new Parser(compilerEnvirons, (ErrorReporter) null);
parser.addStrictWarning("msg.bad.return", "msg.bad.return");
Test 5: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
// Undeclared exception!
try { 
  parser.parse("(Function)", "(Function)", (-4147));
  fail("Expecting exception: IllegalStateException");

} catch(IllegalStateException e) {
   //
   // FAILED ASSERTION
   //
   verifyException("org.mozilla.javascript.Kit", e);
}

Test 6: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
// Undeclared exception!
try { 
  parser.parse("[@(MhrsR;n%;Rh<`>|]", "[@(MhrsR;n%;Rh<`>|]", 13);
  fail("Expecting exception: ClassCastException");

} catch(ClassCastException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 7: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)compilerEnvirons.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
compilerEnvirons.setXmlAvailable(false);
// Undeclared exception!
try { 
  parser.parse("[@(MhrsR;n%;Rh<`>|]", (String) null, 13);
  fail("Expecting exception: ClassCastException");

} catch(ClassCastException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 8: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)compilerEnvirons.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
// Undeclared exception!
try { 
  parser.parse("{kP0*^,a", "{kP0*^,a", (-4393));
  fail("Expecting exception: ClassCastException");

} catch(ClassCastException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 9: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Context currentContext = Context.getCurrentContext();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)currentContext.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
ScriptOrFnNode parse = parser.parse("isPrototypeOf", "V", 7);
parser.pushScope(parse);
// Undeclared exception!
try { 
  parser.pushScope(parse);
  fail("Expecting exception: IllegalStateException");

} catch(IllegalStateException e) {
   //
   // FAILED ASSERTION
   //
   verifyException("org.mozilla.javascript.Kit", e);
}

Test 10: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
// Undeclared exception!
try { 
  parser.parse("do ", "do ", 16);
  fail("Expecting exception: ClassCastException");

} catch(ClassCastException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 11: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
compilerEnvirons.setGeneratingSource(false);
parser.parse(";vM*ZI<n", "retun", 23);
Test 12: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
// Undeclared exception!
try { 
  parser.parse("return", "return", 23);
  fail("Expecting exception: ClassCastException");

} catch(ClassCastException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 13: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)compilerEnvirons.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
// Undeclared exception!
try { 
  parser.parse("throw ", "throw ", (-226));
  fail("Expecting exception: ClassCastException");

} catch(ClassCastException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 14: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Context context = Context.getContext();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)context.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
// Undeclared exception!
try { 
  parser.parse("if ", "if ", 11);
  fail("Expecting exception: ClassCastException");

} catch(ClassCastException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 15: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Context currentContext = Context.getCurrentContext();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)currentContext.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
// Undeclared exception!
try { 
  parser.parse("switch", "language version", 11);
  fail("Expecting exception: ClassCastException");

} catch(ClassCastException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 16: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
// Undeclared exception!
try { 
  parser.parse("with", "o?`?}SO#J", 1428);
  fail("Expecting exception: ClassCastException");

} catch(ClassCastException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 17: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
// Undeclared exception!
try { 
  parser.parse("bj:", "bj:", 16);
  fail("Expecting exception: ClassCastException");

} catch(ClassCastException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 18: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
// Undeclared exception!
try { 
  parser.parse("OP}ua=UA|aqxpPdDD", "OP}ua=UA|aqxpPdDD", (-1756));
  fail("Expecting exception: ClassCastException");

} catch(ClassCastException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 19: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Context currentContext = Context.getCurrentContext();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)currentContext.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
// Undeclared exception!
try { 
  parser.parse("pc;V(p_,X4", "<>", 5);
  fail("Expecting exception: ClassCastException");

} catch(ClassCastException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 20: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
parser.parse("r:eRIySm:Ck3gEN", "r:eRIySm:Ck3gEN", 3072);
parser.defineSymbol(86, true, "Lget");
Test 21: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)compilerEnvirons.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
parser.parse("", "", 85);
// Undeclared exception!
try { 
  parser.defineSymbol((-3170), false, "");
  fail("Expecting exception: IllegalStateException");

} catch(IllegalStateException e) {
   //
   // FAILED ASSERTION
   //
   verifyException("org.mozilla.javascript.Kit", e);
}

Test 22: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
StringReader stringReader = new StringReader("org.mozilla.javascript.DToA");
parser.parse((Reader) stringReader, "*", 1186);
parser.defineSymbol(121, true, (String) null);
Test 23: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
parser.parse("rB", "language version", 8);
parser.defineSymbol(153, false, "rB");
Test 24: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Context context = Context.getContext();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)context.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
parser.parse("DuI_9Z,u", "error reporter", 8);
Test 25: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)compilerEnvirons.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
// Undeclared exception!
try { 
  parser.parse("ahNG6D|~^", "ahNG6D|~^", 107);
  fail("Expecting exception: ClassCastException");

} catch(ClassCastException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 26: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)compilerEnvirons.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
// Undeclared exception!
try { 
  parser.parse("_c&A$h7w([p=x{pS", "_c&A$h7w([p=x{pS", (-1541));
  fail("Expecting exception: ClassCastException");

} catch(ClassCastException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 27: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)compilerEnvirons.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
parser.parse("factory == null", "error reporter", 9);
Test 28: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
// Undeclared exception!
try { 
  parser.parse("UogZg|gk!=q:", "UogZg|gk!=q:", (-1690));
  fail("Expecting exception: ClassCastException");

} catch(ClassCastException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 29: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
// Undeclared exception!
try { 
  parser.parse("ER>%Mgx}'nl ", "ER>%Mgx}'nl ", 519);
  fail("Expecting exception: ClassCastException");

} catch(ClassCastException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 30: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
// Undeclared exception!
try { 
  parser.parse("X+RQRF=+2z-N).wM", "org.mozilla.javascript.NativeIterator$WrappedJavaIterator", 107);
  fail("Expecting exception: ClassCastException");

} catch(ClassCastException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 31: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
parser.parse("e%c/ Ac$M", "e%c/ Ac$M", 17);
Test 32: 
Context currentContext = Context.getCurrentContext();
// Undeclared exception!
try { 
  currentContext.stringIsCompilableUnit("<>");
  fail("Expecting exception: ClassCastException");

} catch(ClassCastException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 33: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
// Undeclared exception!
try { 
  parser.parse("<]3xW{)*", "<]3xW{)*", (-386));
  fail("Expecting exception: ClassCastException");

} catch(ClassCastException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 34: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Context currentContext = Context.getCurrentContext();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)currentContext.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
// Undeclared exception!
try { 
  parser.parse("factory.makeContext() returned Context instance already associated with some thread", "error reporter", 13);
  fail("Expecting exception: ClassCastException");

} catch(ClassCastException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 35: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
// Undeclared exception!
try { 
  parser.parse("WWV[", "WWV[", 107);
  fail("Expecting exception: ClassCastException");

} catch(ClassCastException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 36: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
// Undeclared exception!
try { 
  parser.parse("mcUO..,'g\"F|a{Y", "language version", 8);
  fail("Expecting exception: ClassCastException");

} catch(ClassCastException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 37: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Parser parser = new Parser(compilerEnvirons, (ErrorReporter) null);
// Undeclared exception!
try { 
  parser.parse("cy8.*?!b*j8Q,P", "cy8.*?!b*j8Q,P", 5930);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.mozilla.javascript.Parser", e);
}

Test 38: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
// Undeclared exception!
try { 
  parser.parse("msg.bad.throw.eol", (String) null, (-875));
  fail("Expecting exception: IllegalStateException");

} catch(IllegalStateException e) {
   //
   // FAILED ASSERTION
   //
   verifyException("org.mozilla.javascript.Kit", e);
}

Test 39: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
// Undeclared exception!
try { 
  parser.parse("@*TIho", "@*TIho", (-573));
  fail("Expecting exception: ClassCastException");

} catch(ClassCastException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 40: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
// Undeclared exception!
try { 
  parser.parse("@DyOJSap", "@DyOJSap", (-2));
  fail("Expecting exception: IllegalStateException");

} catch(IllegalStateException e) {
   //
   // FAILED ASSERTION
   //
   verifyException("org.mozilla.javascript.Kit", e);
}

Test 41: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
// Undeclared exception!
try { 
  parser.parse(";/?:@&=+$,#", ";/?:@&=+$,#", 17);
  fail("Expecting exception: ClassCastException");

} catch(ClassCastException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 42: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
// Undeclared exception!
try { 
  parser.parse("v[\"M-;%VrW\")", "bvlxlV", 3070);
  fail("Expecting exception: ClassCastException");

} catch(ClassCastException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 43: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
parser.parse("false", "false", 671);
Test 44: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)compilerEnvirons.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
// Undeclared exception!
try { 
  parser.parse(" /= ", "msg.let.redecl", 42);
  fail("Expecting exception: ClassCastException");

} catch(ClassCastException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 45: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)compilerEnvirons.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
// Undeclared exception!
try { 
  parser.parse("float", "float", 113);
  fail("Expecting exception: ClassCastException");

} catch(ClassCastException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 46: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
// Undeclared exception!
try { 
  parser.parse("[dUC,qV", "[dUC,qV", (-2022));
  fail("Expecting exception: ClassCastException");

} catch(ClassCastException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 47: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)compilerEnvirons.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
// Undeclared exception!
try { 
  parser.parse("-{{$@C.u6w", "-{{$@C.u6w", 110);
  fail("Expecting exception: ClassCastException");

} catch(ClassCastException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 48: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Parser parser = new Parser(compilerEnvirons, (ErrorReporter) null);
// Undeclared exception!
try { 
  parser.parse("{'Ed>`X6K6", "", 42);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.mozilla.javascript.Parser", e);
}

Test 49: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
// Undeclared exception!
try { 
  parser.parse("Bh^<d", "1Jn.Cm", (-2468));
  fail("Expecting exception: ClassCastException");

} catch(ClassCastException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 50: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)compilerEnvirons.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
// Undeclared exception!
try { 
  parser.parse("R.fM&+", "R.fM&+", 4);
  fail("Expecting exception: ClassCastException");

} catch(ClassCastException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 51: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
// Undeclared exception!
try { 
  parser.parse("4P]Vi", "error reporter", 11);
  fail("Expecting exception: ClassCastException");

} catch(ClassCastException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 52: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)compilerEnvirons.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
// Undeclared exception!
try { 
  parser.parse("\"cb6W|o\"`1)tEY95aH,", "%K~Iu7Lr86C{.{(", 1);
  fail("Expecting exception: ClassCastException");

} catch(ClassCastException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 53: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)compilerEnvirons.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
// Undeclared exception!
try { 
  parser.parse("XndO=(V7\"O@", "<c", 653);
  fail("Expecting exception: ClassCastException");

} catch(ClassCastException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 54: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
parser.createDecompiler(compilerEnvirons);
Test 55: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Context context = Context.getContext();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)context.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
parser.parse("rB", "language version", 110);
parser.eof();
Test 56: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
parser.parse("/%W/", "msg.adapter.zero.args", 44);
parser.getCurrentLineNumber();
Test 57: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)compilerEnvirons.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
parser.parse("org.mozilla.javascript.Node$Jump", "", 85);
parser.getEncodedSource();
Test 58: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)compilerEnvirons.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
parser.insideFunction();
Test 59: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Parser parser = new Parser(compilerEnvirons, (ErrorReporter) null);
StringReader stringReader = new StringReader("L0");
parser.parse((Reader) stringReader, "", 0);
Test 60: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)compilerEnvirons.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
StringReader stringReader = new StringReader("");
parser.parse((Reader) stringReader, (String) null, 19);
Test 61: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)compilerEnvirons.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
parser.parse("", "set", 0);
Test 62: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)compilerEnvirons.getErrorReporter();
Parser parser = new Parser((CompilerEnvirons) null, errorReporter);
// Undeclared exception!
try { 
  parser.addError("msg.reserved.id", "msg.reserved.id");
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.mozilla.javascript.Parser", e);
}

Test 63: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
StringReader stringReader = new StringReader("msg.not.java.obj");
parser.parse((Reader) stringReader, "jsFunction_", 22);
parser.addWarning("msg.let.decl.not.in.block", "msg.let.decl.not.in.block");
Test 64: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)compilerEnvirons.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
compilerEnvirons.setXmlAvailable(false);
parser.parse("org.mozilla.javascript.Node$Jump", "", 85);
Test 65: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Parser parser = new Parser(compilerEnvirons, (ErrorReporter) null);
StringReader stringReader = new StringReader("<cj75^{E]");
// Undeclared exception!
try { 
  parser.parse((Reader) stringReader, "", 89);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.mozilla.javascript.Parser", e);
}

Test 66: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Parser parser = new Parser(compilerEnvirons, (ErrorReporter) null);
// Undeclared exception!
try { 
  parser.addError("M8J");
  fail("Expecting exception: RuntimeException");

} catch(RuntimeException e) {
   //
   // no message resource found for message property M8J
   //
   verifyException("org.mozilla.javascript.ScriptRuntime$DefaultMessageProvider", e);
}

Test 67: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
// Undeclared exception!
try { 
  parser.reportError("error reporter");
  fail("Expecting exception: RuntimeException");

} catch(RuntimeException e) {
   //
   // no message resource found for message property error reporter
   //
   verifyException("org.mozilla.javascript.ScriptRuntime$DefaultMessageProvider", e);
}

Test 68: 
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;

Test 69: 
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;

Test 70: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
parser.parse("Hello World!", "Hello World!", 511);

Test 71: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Parser parser = new Parser(compilerEnvirons, (ErrorReporter) null);
StringReader stringReader = new StringReader("[1, 2, 3, 4]");
parser.parse((Reader) stringReader, "[1, 2, 3, 4]", 119);

Test 72: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Parser parser = new Parser(compilerEnvirons, (ErrorReporter) null);
parser.addStrictWarning("msg.bad.return", "msg.bad.return");
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Parser parser = new Parser(compilerEnvirons, (ErrorReporter) null);
parser.addStrictWarning("msg.bad.return", "msg.bad.return");
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Parser parser = new Parser(compilerEnvirons, (ErrorReporter) null);
parser.addStrictWarning("msg.bad.return", "msg.bad.return");
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Parser parser = new Parser(compilerEnvirons, (ErrorReporter) null);
parser.addStrictWarning("msg.bad.return", "msg.bad.return");

Test 73: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
parser.parse("(Function)", "(Function)", (int) (Integer) null);

Test 74: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
parser.parse("[@(MhrsR;n%;Rh<`>|]", "[@(MhrsR;n%;Rh<`>|]", 13);

Test 75: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)compilerEnvirons.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
compilerEnvirons.setXmlAvailable(false);
parser.parse("[@(MhrsR;n%;Rh<`>|]", (String) 13, (int) (Integer) null);

Test 76: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)compilerEnvirons.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);

Test 77: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Context currentContext = Context.getCurrentContext();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)currentContext.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
ScriptOrFnNode parse = parser.parse("isPrototypeOf", "V", 7);
parser.pushScope(parse);
parser.pushScope(parse);
parser.pushScope(parse);

Test 78: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);

Test 79: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
compilerEnvirons.setGeneratingSource(false);
parser.parse("var x: integer;", "assign_integer", 10);

Test 80: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
parser.parse("return 5 + 3 * (2 - 1)", "return", 23);

Test 81: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Context context = Context.getContext();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)context.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);

Test 82: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Context currentContext = Context.getCurrentContext();
Parser parser = new Parser(compilerEnvirons, (ErrorReporter) currentContext);
String string = "switch";
String string = "language version";
int _int = 11;
((Parser) string).parse(string, string, _int);

Test 83: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
parser.parse("1234567890", "This is a sentence.", 0);

Test 84: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
parser.parse("bj:", "bj:", 16);

Test 85: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
parser.parse("This is a sample input string", "This is a sample input string", (int) (Integer) null);

Test 86: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Context currentContext = Context.getCurrentContext();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)currentContext.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
parser.parse("pc;V(p_,X4", "<>", 5);

Test 87: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
parser.parse("methodName", "sourceCode", (int) (Integer) null);
int _int = 86;
boolean _boolean = true;
String string = "Lget";
parser.defineSymbol(_int, _boolean, string);

Test 88: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)compilerEnvirons.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
parser.parse("This is a test string", "This is the file name", 85);
int _int = 3170;
boolean _boolean = false;
String string = "This is the symbol";
parser.defineSymbol(_int, _boolean, string);

Test 89: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
StringReader stringReader = new StringReader("DToA");
parser.parse((Reader) stringReader, "*", (int) "appendString");
int _int = 121;
boolean _boolean = true;
String string = null;
parser.defineSymbol(_int, _boolean, string);

Test 90: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
parser.parse("rB", "language version", 8);
parser.defineSymbol(153, false, "version 10");

Test 91: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Context context = Context.getContext();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)context.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);

Test 92: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)compilerEnvirons.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
parser.parse("This is a test string.", "This is a test string.", 107);

Test 93: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)compilerEnvirons.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);

Test 94: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)compilerEnvirons.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
parser.parse("factory == 'not null'", "error reporter for not null factory variable", 9);
parser.parse("factory == ''", "error reporter for empty string factory variable", 9);
parser.parse("factory == ' '", "error reporter for whitespace character factory variable", 9);

Test 95: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
parser.parse("This is a sample test data string that contains some invalid characters.", "This is a sample test data string that contains some invalid characters.", (int) (Integer) null);

Test 96: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);

Test 97: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
parser.parse("X+RQRF=+2z-N).wM", "org.mozilla.javascript.NativeIterator$WrappedJavaIterator", 107);

Test 98: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
parser.parse("e%c/ Ac$M", "e%c/ Ac$M", 20);

Test 99: 
Context.getCurrentContext();

Test 100: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
parser.parse("42", "The answer to the ultimate question of life, the universe, and everything.", (int) (Integer) null);

Test 101: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Context currentContext = Context.getCurrentContext();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)currentContext.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
parser.parse("factory.makeContext() returned Context instance already associated with some thread", "contextFactoryMethodName", 42);

Test 102: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
parser.parse("WWV[", "WWV[", 107);

Test 103: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
parser.parse("12345678", "language version", 8);

Test 104: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Parser parser = new Parser(compilerEnvirons, (ErrorReporter) null);
parser.parse("This is a sample input string with a few more words and a sentence structure", "This is a sample input string with a few more words and a sentence structure", 5930);

Test 105: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
parser.parse("msg.bad.throw.eol", (String) null, (int) (Integer) null);

Test 106: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
parser.parse("This is a string to be parsed", "This is a string to be parsed", 10);

Test 107: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
parser.parse("2 + 2", "2 + 2", 4);

Test 108: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
parser.parse("v[\"M-;%VrW\")", "bvlxlV", 3070);

Test 109: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
parser.parse("1234567890", "abcdefghijklmnopqrstuvwxyz", 671);

Test 110: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)compilerEnvirons.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
parser.parse(" /= ", "msg.let.redecl", 1234567890);

Test 111: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)compilerEnvirons.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
parser.parse("float", "float", (int) 3.14F);
String string = "integer";
String string = "int";
int _int = 123;
parser.parse(string, string, _int);
String string = "string";
String string = "String";
String string = "Hello, world!";
parser.parse(string, string, (int) string);

Test 112: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
parser.parse("[DUC_ID,QUERY_STRING", "[DUC_ID,QUERY_STRING", (int) (Integer) null);

Test 113: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)compilerEnvirons.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
parser.parse("valid_input_1", "valid_input_1", 20);

Test 114: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Parser parser = new Parser(compilerEnvirons, (ErrorReporter) null);

Test 115: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
parser.parse("Bh^<d", "1Jn.Cm", 5);
String string = "Bh^<d";
String string = "1Jn.Cm";
int _int = null;
parser.parse(string, string, _int);
String string = "Bh^<d";
String string = "1Jn.Cm";
double _double = 3.14;
parser.parse(string, string, (int) _double);
String string = "Bh^<d";
String string = "1Jn.Cm";
double _double = null;
parser.parse(string, string, (int) _double);
String string = "Bh^<d";
String string = "1Jn.Cm";
String string = "hello";
parser.parse(string, string, (int) string);
String string = "Bh^<d";
String string = "1Jn.Cm";
char _char = 'a';
parser.parse(string, string, (int) _char);

Test 116: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)compilerEnvirons.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
parser.parse("R.fM&+", "R.fM&+", 4);

Test 117: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
parser.parse("42P]Vi", "error reporter", 11);

Test 118: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)compilerEnvirons.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);

Test 119: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)compilerEnvirons.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
parser.parse("XndO=(V7\"O@", "This is a sample input string", 653);

Test 120: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
parser.createDecompiler(compilerEnvirons);
parser.createDecompiler(compilerEnvirons);

Test 121: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Context context = Context.getContext();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)context.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
parser.parse("rB", "language version", 110);
parser.eof();

Test 122: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
parser.parse("/%W/", "msg.adapter.zero.args", 44);
parser.getCurrentLineNumber();

Test 123: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)compilerEnvirons.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
parser.parse("org.mozilla.javascript.Node$Jump", "", 85);
parser.getEncodedSource();

Test 124: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)compilerEnvirons.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);

Test 125: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Parser parser = new Parser(compilerEnvirons, (ErrorReporter) null);
StringReader stringReader = new StringReader("L0");
parser.parse((Reader) stringReader, "Java Program", 1);

Test 126: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)compilerEnvirons.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
StringReader stringReader = new StringReader("Hello, world!");
parser.parse((Reader) stringReader, (String) 19, (int) (Integer) null);

Test 127: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)compilerEnvirons.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
parser.parse("", "set", 0);

Test 128: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)compilerEnvirons.getErrorReporter();
Parser parser = new Parser((CompilerEnvirons) errorReporter, errorReporter);
String string = "msg.reserved.id";
String string = "The identifier 'foo' is reserved";
parser.addError(string, string);

Test 129: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
StringReader stringReader = new StringReader("InvalidObject.not.java.obj");
parser.parse((Reader) stringReader, "jsFunction_", 22);
parser.addWarning("InvalidObject.let.decl.not.in.block", "InvalidObject.let.decl.not.in.block");

Test 130: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)compilerEnvirons.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
compilerEnvirons.setXmlAvailable(false);
parser.parse("org.mozilla.javascript.Node$Jump", "The quick brown fox jumps over the lazy dog.", 85);

Test 131: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Parser parser = new Parser(compilerEnvirons, (ErrorReporter) null);
StringReader stringReader = new StringReader("<cj75^{E}");
parser.parse((Reader) stringReader, "", 89);

Test 132: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();

Test 133: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
parser.reportError("A syntax error was encountered while parsing the code.");


* Minimizing test suite
* test suite isTestSuite: 65
Test 0: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Parser parser = new Parser(compilerEnvirons, (ErrorReporter) null);
// Undeclared exception!
try { 
  parser.parse("{'Ed>`X6K6", "", 42);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.mozilla.javascript.Parser", e);
}

Test 1: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
// Undeclared exception!
try { 
  parser.parse("[@(MhrsR;n%;Rh<`>|]", "[@(MhrsR;n%;Rh<`>|]", 13);
  fail("Expecting exception: ClassCastException");

} catch(ClassCastException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 2: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Context currentContext = Context.getCurrentContext();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)currentContext.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
// Undeclared exception!
try { 
  parser.parse("factory.makeContext() returned Context instance already associated with some thread", "contextFactoryMethodName", 42);
  fail("Expecting exception: ClassCastException");

} catch(ClassCastException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 3: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)compilerEnvirons.getErrorReporter();
Parser parser = new Parser((CompilerEnvirons) null, errorReporter);
// Undeclared exception!
try { 
  parser.addError("msg.reserved.id", "msg.reserved.id");
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.mozilla.javascript.Parser", e);
}

Test 4: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)compilerEnvirons.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
parser.getEncodedSource();
Test 5: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
// Undeclared exception!
try { 
  parser.parse("H-{bvlxlV)0pK+", "H-{bvlxlV)0pK+", 511);
  fail("Expecting exception: ClassCastException");

} catch(ClassCastException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 6: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Parser parser = new Parser(compilerEnvirons, (ErrorReporter) null);
parser.addStrictWarning("msg.bad.return", "msg.bad.return");
Test 7: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)compilerEnvirons.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
compilerEnvirons.setXmlAvailable(false);
parser.parse("org.mozilla.javascript.Node$Jump", "The quick brown fox jumps over the lazy dog.", 85);
Test 8: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)compilerEnvirons.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
compilerEnvirons.setXmlAvailable(false);
// Undeclared exception!
try { 
  parser.parse("[@(MhrsR;n%;Rh<`>|]", (String) null, 13);
  fail("Expecting exception: ClassCastException");

} catch(ClassCastException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 9: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Context currentContext = Context.getCurrentContext();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)currentContext.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
ScriptOrFnNode parse = parser.parse("isPrototypeOf", "V", 7);
parser.pushScope(parse);
// Undeclared exception!
try { 
  parser.pushScope(parse);
  fail("Expecting exception: IllegalStateException");

} catch(IllegalStateException e) {
   //
   // FAILED ASSERTION
   //
   verifyException("org.mozilla.javascript.Kit", e);
}

Test 10: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
// Undeclared exception!
try { 
  parser.parse("do ", "do ", 16);
  fail("Expecting exception: ClassCastException");

} catch(ClassCastException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 11: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
compilerEnvirons.setGeneratingSource(false);
parser.parse(";vM*ZI<n", "retun", 23);
Test 12: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)compilerEnvirons.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
// Undeclared exception!
try { 
  parser.parse("{kP0*^,a", "{kP0*^,a", (-4393));
  fail("Expecting exception: ClassCastException");

} catch(ClassCastException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 13: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
// Undeclared exception!
try { 
  parser.parse("return 5 + 3 * (2 - 1)", "return", 23);
  fail("Expecting exception: ClassCastException");

} catch(ClassCastException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 14: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)compilerEnvirons.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
// Undeclared exception!
try { 
  parser.parse("throw ", "throw ", (-226));
  fail("Expecting exception: ClassCastException");

} catch(ClassCastException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 15: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Context context = Context.getContext();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)context.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
// Undeclared exception!
try { 
  parser.parse("if ", "if ", 11);
  fail("Expecting exception: ClassCastException");

} catch(ClassCastException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 16: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Context currentContext = Context.getCurrentContext();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)currentContext.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
// Undeclared exception!
try { 
  parser.parse("switch", "language version", 11);
  fail("Expecting exception: ClassCastException");

} catch(ClassCastException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 17: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
// Undeclared exception!
try { 
  parser.parse("var x: integer;", "assign_integer", 10);
  fail("Expecting exception: ClassCastException");

} catch(ClassCastException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 18: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
// Undeclared exception!
try { 
  parser.parse("with", "o?`?}SO#J", 1428);
  fail("Expecting exception: ClassCastException");

} catch(ClassCastException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 19: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
// Undeclared exception!
try { 
  parser.parse("bj:", "bj:", 16);
  fail("Expecting exception: ClassCastException");

} catch(ClassCastException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 20: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
parser.parse("r:eRIySm:Ck3gEN", "r:eRIySm:Ck3gEN", 3072);
parser.defineSymbol(86, true, "Lget");
Test 21: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Context currentContext = Context.getCurrentContext();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)currentContext.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
// Undeclared exception!
try { 
  parser.parse("pc;V(p_,X4", "<>", 5);
  fail("Expecting exception: ClassCastException");

} catch(ClassCastException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 22: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
// Undeclared exception!
try { 
  parser.parse("OP}ua=UA|aqxpPdDD", "OP}ua=UA|aqxpPdDD", (-1756));
  fail("Expecting exception: ClassCastException");

} catch(ClassCastException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 23: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
parser.parse("rB", "language version", 8);
parser.defineSymbol(153, false, "version 10");
Test 24: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)compilerEnvirons.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
parser.parse("", "", 85);
// Undeclared exception!
try { 
  parser.defineSymbol((-3170), false, "");
  fail("Expecting exception: IllegalStateException");

} catch(IllegalStateException e) {
   //
   // FAILED ASSERTION
   //
   verifyException("org.mozilla.javascript.Kit", e);
}

Test 25: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Context context = Context.getContext();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)context.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
parser.parse("DuI_9Z,u", "error reporter", 8);
Test 26: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
// Undeclared exception!
try { 
  parser.parse("X+RQRF=+2z-N).wM", "org.mozilla.javascript.NativeIterator$WrappedJavaIterator", 107);
  fail("Expecting exception: ClassCastException");

} catch(ClassCastException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 27: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Parser parser = new Parser(compilerEnvirons, (ErrorReporter) null);
// Undeclared exception!
try { 
  parser.parse("cy8.*?!b*j8Q,P", "cy8.*?!b*j8Q,P", 5930);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.mozilla.javascript.Parser", e);
}

Test 28: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
// Undeclared exception!
try { 
  parser.parse("UogZg|gk!=q:", "UogZg|gk!=q:", (-1690));
  fail("Expecting exception: ClassCastException");

} catch(ClassCastException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 29: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
// Undeclared exception!
try { 
  parser.parse("Bh^<d", "1Jn.Cm", 5);
  fail("Expecting exception: ClassCastException");

} catch(ClassCastException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 30: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)compilerEnvirons.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
// Undeclared exception!
try { 
  parser.parse("R.fM&+", "R.fM&+", 4);
  fail("Expecting exception: ClassCastException");

} catch(ClassCastException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 31: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)compilerEnvirons.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
parser.parse("factory == 'not null'", "error reporter for not null factory variable", 9);
Test 32: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
// Undeclared exception!
try { 
  parser.parse("ER>%Mgx}'nl ", "ER>%Mgx}'nl ", 519);
  fail("Expecting exception: ClassCastException");

} catch(ClassCastException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 33: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
parser.parse("e%c/ Ac$M", "e%c/ Ac$M", 20);
Test 34: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)compilerEnvirons.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
// Undeclared exception!
try { 
  parser.parse("-{{$@C.u6w", "-{{$@C.u6w", 110);
  fail("Expecting exception: ClassCastException");

} catch(ClassCastException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 35: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)compilerEnvirons.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
// Undeclared exception!
try { 
  parser.parse("ahNG6D|~^", "ahNG6D|~^", 107);
  fail("Expecting exception: ClassCastException");

} catch(ClassCastException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 36: 
Context currentContext = Context.getCurrentContext();
// Undeclared exception!
try { 
  currentContext.stringIsCompilableUnit("<>");
  fail("Expecting exception: ClassCastException");

} catch(ClassCastException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 37: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Parser parser = new Parser(compilerEnvirons, (ErrorReporter) null);
StringReader stringReader = new StringReader("<cj75^{E}");
// Undeclared exception!
try { 
  parser.parse((Reader) stringReader, "", 89);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.mozilla.javascript.Parser", e);
}

Test 38: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
// Undeclared exception!
try { 
  parser.parse("v[\"M-;%VrW\")", "bvlxlV", 3070);
  fail("Expecting exception: ClassCastException");

} catch(ClassCastException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 39: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
// Undeclared exception!
try { 
  parser.parse("mcUO..,'g\"F|a{Y", "language version", 8);
  fail("Expecting exception: ClassCastException");

} catch(ClassCastException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 40: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
// Undeclared exception!
try { 
  parser.parse("msg.bad.throw.eol", (String) null, (-875));
  fail("Expecting exception: IllegalStateException");

} catch(IllegalStateException e) {
   //
   // FAILED ASSERTION
   //
   verifyException("org.mozilla.javascript.Kit", e);
}

Test 41: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
// Undeclared exception!
try { 
  parser.parse("@*TIho", "@*TIho", (-573));
  fail("Expecting exception: ClassCastException");

} catch(ClassCastException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 42: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
// Undeclared exception!
try { 
  parser.parse("@DyOJSap", "@DyOJSap", (-2));
  fail("Expecting exception: IllegalStateException");

} catch(IllegalStateException e) {
   //
   // FAILED ASSERTION
   //
   verifyException("org.mozilla.javascript.Kit", e);
}

Test 43: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
parser.parse("/%W/", "msg.adapter.zero.args", 44);
parser.getCurrentLineNumber();
Test 44: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)compilerEnvirons.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
parser.parse("factory == null", "error reporter", 9);
Test 45: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
parser.parse("false", "false", 671);
Test 46: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)compilerEnvirons.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
// Undeclared exception!
try { 
  parser.parse("XndO=(V7\"O@", "This is a sample input string", 653);
  fail("Expecting exception: ClassCastException");

} catch(ClassCastException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 47: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)compilerEnvirons.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
// Undeclared exception!
try { 
  parser.parse(" /= ", "msg.let.redecl", 1234567890);
  fail("Expecting exception: ClassCastException");

} catch(ClassCastException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 48: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)compilerEnvirons.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
// Undeclared exception!
try { 
  parser.parse("float", "float", 113);
  fail("Expecting exception: ClassCastException");

} catch(ClassCastException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 49: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Parser parser = new Parser(compilerEnvirons, (ErrorReporter) null);
StringReader stringReader = new StringReader("[1, 2, 3, 4]");
parser.parse((Reader) stringReader, "[1, 2, 3, 4]", 119);
Test 50: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Parser parser = new Parser(compilerEnvirons, (ErrorReporter) null);
StringReader stringReader = new StringReader("[]");
parser.parse((Reader) stringReader, "[]", 119);
Test 51: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
// Undeclared exception!
try { 
  parser.parse("[dUC,qV", "[dUC,qV", (-2022));
  fail("Expecting exception: ClassCastException");

} catch(ClassCastException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 52: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
// Undeclared exception!
try { 
  parser.parse("WWV[", "WWV[", 107);
  fail("Expecting exception: ClassCastException");

} catch(ClassCastException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 53: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
parser.createDecompiler(compilerEnvirons);
Test 54: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Context context = Context.getContext();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)context.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
parser.parse("rB", "language version", 110);
parser.eof();
Test 55: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)compilerEnvirons.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
parser.parse("org.mozilla.javascript.Node$Jump", "", 85);
parser.getEncodedSource();
Test 56: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)compilerEnvirons.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
parser.insideFunction();
Test 57: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Parser parser = new Parser(compilerEnvirons, (ErrorReporter) null);
StringReader stringReader = new StringReader("L0");
parser.parse((Reader) stringReader, "", 0);
Test 58: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)compilerEnvirons.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
StringReader stringReader = new StringReader("");
parser.parse((Reader) stringReader, (String) null, 19);
Test 59: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
parser.parse("1234567890", "This is a sentence.", 0);
Test 60: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
StringReader stringReader = new StringReader("msg.not.java.obj");
parser.parse((Reader) stringReader, "jsFunction_", 22);
parser.addWarning("msg.let.decl.not.in.block", "msg.let.decl.not.in.block");
Test 61: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
// Undeclared exception!
try { 
  parser.parse("(Function)", "(Function)", (-4147));
  fail("Expecting exception: IllegalStateException");

} catch(IllegalStateException e) {
   //
   // FAILED ASSERTION
   //
   verifyException("org.mozilla.javascript.Kit", e);
}

Test 62: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Parser parser = new Parser(compilerEnvirons, (ErrorReporter) null);
// Undeclared exception!
try { 
  parser.addError("M8J");
  fail("Expecting exception: RuntimeException");

} catch(RuntimeException e) {
   //
   // no message resource found for message property M8J
   //
   verifyException("org.mozilla.javascript.ScriptRuntime$DefaultMessageProvider", e);
}

Test 63: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
// Undeclared exception!
try { 
  parser.popScope();
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.mozilla.javascript.Parser", e);
}

Test 64: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
// Undeclared exception!
try { 
  parser.reportError("A syntax error was encountered while parsing the code.");
  fail("Expecting exception: RuntimeException");

} catch(RuntimeException e) {
   //
   // no message resource found for message property A syntax error was encountered while parsing the code.
   //
   verifyException("org.mozilla.javascript.ScriptRuntime$DefaultMessageProvider", e);
}


* Going to analyze the coverage criteria
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 43%
* Total number of goals: 735
* Number of covered goals: 317
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 43%
* Total number of goals: 1211
* Number of covered goals: 515
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 44%
* Total number of goals: 80
* Number of covered goals: 35
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 16
* Number of covered goals: 16
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 42%
* Total number of goals: 735
* Number of covered goals: 310
* Generated 65 tests with total length 275
* Resulting test suite's coverage: 53% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 10%
* Compiling and checking tests
Going to execute: removeTestsThatDoNotCompile
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: CompilerEnvirons arg0 = new CompilerEnvirons();
Parser parser = new Parser(arg0, (ErrorReporter) null);
// Undeclared exception!
try { 
  parser.parse("{'Ed>`X6K6", "", 42);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.mozilla.javascript.Parser", e);
}


** It was a parseable test case! 
refined test name is: testInvalidScriptThrowsNullPointerException
* Compiling Tests
refined test name is: testParseInvalidScriptWithErrorReporter
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: CompilerEnvirons arg0 = new CompilerEnvirons();
DefaultErrorReporter arg1 = DefaultErrorReporter.instance;
Parser parser = new Parser(arg0, arg1);
// Undeclared exception!
try { 
  parser.parse("[@(MhrsR;n%;Rh<`>|]", "[@(MhrsR;n%;Rh<`>|]", 13);
  fail("Expecting exception: RuntimeException");

} catch(RuntimeException e) {
   //
   // missing name after .@ ([@(MhrsR;n%;Rh<`>|]#13)
   //
   verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
}


** It was a parseable test case! 
refined test name is: testParseInvalidToken
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Context.getCurrentContext();

** It was a parseable test case! 
refined test name is: testCompilationWithoutErrors
* Compiling Tests
refined test name is: testCompilingJavaSourcesWithNoErrors
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
ErrorReporter arg1 = compilerEnvirons.getErrorReporter();
Parser parser = new Parser((CompilerEnvirons) null, arg1);
// Undeclared exception!
try { 
  parser.addError("msg.reserved.id", "msg.reserved.id");
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.mozilla.javascript.Parser", e);
}


** It was a parseable test case! 
refined test name is: testAddErrorThrowsNPEWithNullMessage
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: CompilerEnvirons arg0 = new CompilerEnvirons();
ErrorReporter arg1 = arg0.getErrorReporter();
Parser parser = new Parser(arg0, arg1);
String encodedSource = parser.getEncodedSource();
assertNull(encodedSource);


** It was a parseable test case! 
refined test name is: testParserReturnsNullForEncodedSource
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: CompilerEnvirons arg0 = new CompilerEnvirons();
DefaultErrorReporter arg1 = DefaultErrorReporter.instance;
Parser parser = new Parser(arg0, arg1);
// Undeclared exception!
try { 
  parser.parse("H-{bvlxlV)0pK+", "H-{bvlxlV)0pK+", 511);
  fail("Expecting exception: RuntimeException");

} catch(RuntimeException e) {
   //
   // missing : after property id (H-{bvlxlV)0pK+#511)
   //
   verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
}


** It was a parseable test case! 
refined test name is: testValidIdentifier
* Compiling Tests
refined test name is: testParseThrowsMissingColonAfterPropertyId
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: CompilerEnvirons arg0 = new CompilerEnvirons();
Parser parser = new Parser(arg0, (ErrorReporter) null);
parser.addStrictWarning("msg.bad.return", "msg.bad.return");
assertNull(parser.getEncodedSource());


** It was a parseable test case! 
refined test name is: testAddStrictWarningReturnsNullValue
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: CompilerEnvirons arg0 = new CompilerEnvirons();
ErrorReporter arg1 = arg0.getErrorReporter();
Parser parser = new Parser(arg0, arg1);
arg0.setXmlAvailable(false);
ScriptOrFnNode parse = parser.parse("org.mozilla.javascript.Node$Jump", "The quick brown fox jumps over the lazy dog.", 85);
assertEquals("\u0087'\u0003orgk'\u0007mozillak'\njavascriptk'\tNode$JumpQ\u0001", parser.getEncodedSource());
assertEquals(85, parse.getEndLineno());


** It was a parseable test case! 
refined test name is: parseScriptOrFnWithCorrectNameAndEndLineNumber
* Compiling Tests
refined test name is: testParserCreatesCorrectScriptOrFnNode
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: CompilerEnvirons arg0 = new CompilerEnvirons();
ErrorReporter arg1 = arg0.getErrorReporter();
Parser parser = new Parser(arg0, arg1);
arg0.setXmlAvailable(false);
// Undeclared exception!
try { 
  parser.parse("[@(MhrsR;n%;Rh<`>|]", (String) null, 13);
  fail("Expecting exception: RuntimeException");

} catch(RuntimeException e) {
   //
   // XML runtime not available
   //
   verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
}


** It was a parseable test case! 
refined test name is: testParseWithInvalidXMLRuntime
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Context.getCurrentContext();

** It was a parseable test case! 
refined test name is: testCompilerEnvironsShouldReturnNonNullContext
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: CompilerEnvirons arg0 = new CompilerEnvirons();
DefaultErrorReporter arg1 = DefaultErrorReporter.instance;
Parser parser = new Parser(arg0, arg1);
// Undeclared exception!
try { 
  parser.parse("do ", "do ", 16);
  fail("Expecting exception: RuntimeException");

} catch(RuntimeException e) {
   //
   // Unexpected end of file (do #16)
   //
   verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
}


** It was a parseable test case! 
refined test name is: testUnexpectedEndOfFile
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: CompilerEnvirons arg0 = new CompilerEnvirons();
DefaultErrorReporter arg1 = DefaultErrorReporter.instance;
Parser parser = new Parser(arg0, arg1);
arg0.setGeneratingSource(false);
ScriptOrFnNode parse = parser.parse(";vM*ZI<n", "retun", 23);
assertEquals(16, parse.getEncodedSourceEnd());
assertEquals(23, parse.getBaseLineno());


** It was a parseable test case! 
refined test name is: testParseCodeWithValidFunctionName
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: CompilerEnvirons arg0 = new CompilerEnvirons();
ErrorReporter arg1 = arg0.getErrorReporter();
Parser parser = new Parser(arg0, arg1);
// Undeclared exception!
try { 
  parser.parse("{kP0*^,a", "{kP0*^,a", (-4393));
  fail("Expecting exception: IllegalArgumentException");

} catch(IllegalArgumentException e) {
   //
   // -4393
   //
   verifyException("org.mozilla.javascript.RhinoException", e);
}


** It was a parseable test case! 
refined test name is: testIllegalArgumentExceptionThrown
* Compiling Tests
refined test name is: testParseThrowsIllegalArgumentException
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: CompilerEnvirons arg0 = new CompilerEnvirons();
DefaultErrorReporter arg1 = DefaultErrorReporter.instance;
Parser parser = new Parser(arg0, arg1);
// Undeclared exception!
try { 
  parser.parse("return 5 + 3 * (2 - 1)", "return", 23);
  fail("Expecting exception: RuntimeException");

} catch(RuntimeException e) {
   //
   // invalid return (return#23)
   //
   verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
}


** It was a parseable test case! 
refined test name is: testInvalidReturnStatement
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: CompilerEnvirons arg0 = new CompilerEnvirons();
ErrorReporter arg1 = arg0.getErrorReporter();
Parser parser = new Parser(arg0, arg1);
// Undeclared exception!
try { 
  parser.parse("throw ", "throw ", (-226));
  fail("Expecting exception: IllegalArgumentException");

} catch(IllegalArgumentException e) {
   //
   // -226
   //
   verifyException("org.mozilla.javascript.RhinoException", e);
}


** It was a parseable test case! 
refined test name is: testParseThrowsIllegalArgumentException
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
// Undeclared exception!
try { 
  Context.getContext();
  fail("Expecting exception: RuntimeException");

} catch(RuntimeException e) {
   //
   // No Context associated with current Thread
   //
   verifyException("org.mozilla.javascript.Context", e);
}


** It was a parseable test case! 
refined test name is: testGetCurrentContextWithNoAssociatedContext
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Context.getCurrentContext();

** It was a parseable test case! 
refined test name is: testCompileValidSourceCodeReturnsIRTree
* Compiling Tests
refined test name is: testCompilereturnsNonNullIRTree
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: CompilerEnvirons arg0 = new CompilerEnvirons();
DefaultErrorReporter arg1 = DefaultErrorReporter.instance;
Parser parser = new Parser(arg0, arg1);
// Undeclared exception!
try { 
  parser.parse("var x: integer;", "assign_integer", 10);
  fail("Expecting exception: RuntimeException");

} catch(RuntimeException e) {
   //
   // missing ; before statement (assign_integer#10)
   //
   verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
}


** It was a parseable test case! 
refined test name is: testParserThrowsExceptionWhenSemicolonIsMissing
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: CompilerEnvirons arg0 = new CompilerEnvirons();
DefaultErrorReporter arg1 = DefaultErrorReporter.instance;
Parser parser = new Parser(arg0, arg1);
// Undeclared exception!
try { 
  parser.parse("with", "o?`?}SO#J", 1428);
  fail("Expecting exception: RuntimeException");

} catch(RuntimeException e) {
   //
   // missing ( before with-statement object (o?`?}SO#J#1428)
   //
   verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
}


** It was a parseable test case! 
refined test name is: testParserThrowsExceptionWhenGivenInvalidInput
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: CompilerEnvirons arg0 = new CompilerEnvirons();
DefaultErrorReporter arg1 = DefaultErrorReporter.instance;
Parser parser = new Parser(arg0, arg1);
// Undeclared exception!
try { 
  parser.parse("bj:", "bj:", 16);
  fail("Expecting exception: RuntimeException");

} catch(RuntimeException e) {
   //
   // Unexpected end of file (bj:#16)
   //
   verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
}


** It was a parseable test case! 
refined test name is: testInvalidInputRaisesRuntimeException
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: CompilerEnvirons arg0 = new CompilerEnvirons();
DefaultErrorReporter arg1 = DefaultErrorReporter.instance;
Parser parser = new Parser(arg0, arg1);
parser.parse("r:eRIySm:Ck3gEN", "r:eRIySm:Ck3gEN", 3072);
parser.defineSymbol(86, true, "Lget");
assertEquals("\u0087'\u0001rf\u0001'\u0006eRIySmf\u0001'\u0006Ck3gENQ\u0001", parser.getEncodedSource());


** It was a parseable test case! 
refined test name is: testParse
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Context.getCurrentContext();

** It was a parseable test case! 
refined test name is: testGetCurrentContext
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: CompilerEnvirons arg0 = new CompilerEnvirons();
DefaultErrorReporter arg1 = DefaultErrorReporter.instance;
Parser parser = new Parser(arg0, arg1);
// Undeclared exception!
try { 
  parser.parse("OP}ua=UA|aqxpPdDD", "OP}ua=UA|aqxpPdDD", (-1756));
  fail("Expecting exception: IllegalArgumentException");

} catch(IllegalArgumentException e) {
   //
   // -1756
   //
   verifyException("org.mozilla.javascript.RhinoException", e);
}


** It was a parseable test case! 
refined test name is: testInvalidExpression
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: CompilerEnvirons arg0 = new CompilerEnvirons();
DefaultErrorReporter arg1 = DefaultErrorReporter.instance;
Parser parser = new Parser(arg0, arg1);
parser.parse("rB", "language version", 8);
parser.defineSymbol(153, false, "version 10");
assertEquals("\u0087'\u0003rBQ\u0001", parser.getEncodedSource());


** It was a parseable test case! 
refined test name is: testParserParseLanguageVersion8
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: CompilerEnvirons arg0 = new CompilerEnvirons();
ErrorReporter arg1 = arg0.getErrorReporter();
Parser parser = new Parser(arg0, arg1);
parser.parse("", "", 85);
// Undeclared exception!
try { 
  parser.defineSymbol((-3170), false, "");
  fail("Expecting exception: IllegalStateException");

} catch(IllegalStateException e) {
   //
   // FAILED ASSERTION
   //
   verifyException("org.mozilla.javascript.Kit", e);
}


** It was a parseable test case! 
refined test name is: testParseNullInputAndEmptyFilename
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
// Undeclared exception!
try { 
  Context.getContext();
  fail("Expecting exception: RuntimeException");

} catch(RuntimeException e) {
   //
   // No Context associated with current Thread
   //
   verifyException("org.mozilla.javascript.Context", e);
}


** It was a parseable test case! 
refined test name is: testGetContextthrowsRuntimeException
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: CompilerEnvirons arg0 = new CompilerEnvirons();
DefaultErrorReporter arg1 = DefaultErrorReporter.instance;
Parser parser = new Parser(arg0, arg1);
// Undeclared exception!
try { 
  parser.parse("X+RQRF=+2z-N).wM", "org.mozilla.javascript.NativeIterator$WrappedJavaIterator", 107);
  fail("Expecting exception: RuntimeException");

} catch(RuntimeException e) {
   //
   // Invalid assignment left-hand side. (org.mozilla.javascript.NativeIterator$WrappedJavaIterator#107)
   //
   verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
}


** It was a parseable test case! 
refined test name is: testInvalidAssignmentLeftHandSide
* Compiling Tests
refined test name is: testParseScriptWithInvalidAssignmentLeftHandSide
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: CompilerEnvirons arg0 = new CompilerEnvirons();
Parser parser = new Parser(arg0, (ErrorReporter) null);
// Undeclared exception!
try { 
  parser.parse("cy8.*?!b*j8Q,P", "cy8.*?!b*j8Q,P", 5930);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.mozilla.javascript.Parser", e);
}


** It was a parseable test case! 
refined test name is: testParseInvalidInputThrowsNullPointerException
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: CompilerEnvirons arg0 = new CompilerEnvirons();
DefaultErrorReporter arg1 = DefaultErrorReporter.instance;
Parser parser = new Parser(arg0, arg1);
// Undeclared exception!
try { 
  parser.parse("UogZg|gk!=q:", "UogZg|gk!=q:", (-1690));
  fail("Expecting exception: IllegalArgumentException");

} catch(IllegalArgumentException e) {
   //
   // -1690
   //
   verifyException("org.mozilla.javascript.RhinoException", e);
}


** It was a parseable test case! 
refined test name is: testParseThrowsIllegalArgumentException
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: CompilerEnvirons arg0 = new CompilerEnvirons();
DefaultErrorReporter arg1 = DefaultErrorReporter.instance;
Parser parser = new Parser(arg0, arg1);
// Undeclared exception!
try { 
  parser.parse("Bh^<d", "1Jn.Cm", 5);
  fail("Expecting exception: RuntimeException");

} catch(RuntimeException e) {
   //
   // illegally formed XML syntax (1Jn.Cm#5)
   //
   verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
}


** It was a parseable test case! 
refined test name is: testParseWithInvalidXmlSyntax
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: CompilerEnvirons arg0 = new CompilerEnvirons();
ErrorReporter arg1 = arg0.getErrorReporter();
Parser parser = new Parser(arg0, arg1);
// Undeclared exception!
try { 
  parser.parse("R.fM&+", "R.fM&+", 4);
  fail("Expecting exception: RuntimeException");

} catch(RuntimeException e) {
   //
   // Unexpected end of file (R.fM&+#4)
   //
   verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
}


** It was a parseable test case! 
refined test name is: testParserHandlesUnexpectedEndOfFile
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: CompilerEnvirons arg0 = new CompilerEnvirons();
ErrorReporter arg1 = arg0.getErrorReporter();
Parser parser = new Parser(arg0, arg1);
ScriptOrFnNode parse = parser.parse("factory == 'not null'", "error reporter for not null factory variable", 9);
assertEquals(9, parse.getBaseLineno());
assertEquals("\u0087'\u0007factory\f)\bnot nullQ\u0001", parser.getEncodedSource());


** It was a parseable test case! 
refined test name is: testParseFactoryNotNull
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: CompilerEnvirons arg0 = new CompilerEnvirons();
DefaultErrorReporter arg1 = DefaultErrorReporter.instance;
Parser parser = new Parser(arg0, arg1);
// Undeclared exception!
try { 
  parser.parse("ER>%Mgx}'nl ", "ER>%Mgx}'nl ", 519);
  fail("Expecting exception: RuntimeException");

} catch(RuntimeException e) {
   //
   // syntax error (ER>%Mgx}'nl #519)
   //
   verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
}


** It was a parseable test case! 
refined test name is: testParseWithSyntaxError
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: CompilerEnvirons arg0 = new CompilerEnvirons();
DefaultErrorReporter arg1 = DefaultErrorReporter.instance;
Parser parser = new Parser(arg0, arg1);
ScriptOrFnNode parse = parser.parse("e%c/ Ac$M", "e%c/ Ac$M", 20);
assertEquals("\u0087'\u0001e\u0019'\u0001c\u0018'\u0004Ac$MQ\u0001", parser.getEncodedSource());
assertEquals(20, parse.getBaseLineno());


** It was a parseable test case! 
refined test name is: testParseValidInput
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: CompilerEnvirons arg0 = new CompilerEnvirons();
ErrorReporter arg1 = arg0.getErrorReporter();
Parser parser = new Parser(arg0, arg1);
// Undeclared exception!
try { 
  parser.parse("-{{$@C.u6w", "-{{$@C.u6w", 110);
  fail("Expecting exception: RuntimeException");

} catch(RuntimeException e) {
   //
   // invalid property id (-{{$@C.u6w#110)
   //
   verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
}


** It was a parseable test case! 
refined test name is: parseInvalidPropertyIdShouldThrowException
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: CompilerEnvirons arg0 = new CompilerEnvirons();
ErrorReporter arg1 = arg0.getErrorReporter();
Parser parser = new Parser(arg0, arg1);
// Undeclared exception!
try { 
  parser.parse("ahNG6D|~^", "ahNG6D|~^", 107);
  fail("Expecting exception: RuntimeException");

} catch(RuntimeException e) {
   //
   // syntax error (ahNG6D|~^#107)
   //
   verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
}


** It was a parseable test case! 
refined test name is: testParseWithInvalidCharacterThrowsSyntaxError
* Compiling Tests
refined test name is: testParseInvalidCharacter
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Context.getCurrentContext();

** It was a parseable test case! 
refined test name is: testGetCurrentContext
* Compiling Tests
refined test name is: testGetCurrentContext
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: CompilerEnvirons arg0 = new CompilerEnvirons();
DefaultErrorReporter arg1 = DefaultErrorReporter.instance;
Parser parser = new Parser(arg0, arg1);
// Undeclared exception!
try { 
  parser.parse("v[\"M-;%VrW\")", "bvlxlV", 3070);
  fail("Expecting exception: RuntimeException");

} catch(RuntimeException e) {
   //
   // missing ] in index expression (bvlxlV#3070)
   //
   verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
}


** It was a parseable test case! 
refined test name is: testParserThrowsExceptionForMissingIndexExpression
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: CompilerEnvirons arg0 = new CompilerEnvirons();
DefaultErrorReporter arg1 = DefaultErrorReporter.instance;
Parser parser = new Parser(arg0, arg1);
// Undeclared exception!
try { 
  parser.parse("mcUO..,'g\"F|a{Y", "language version", 8);
  fail("Expecting exception: RuntimeException");

} catch(RuntimeException e) {
   //
   // missing name after . operator (language version#8)
   //
   verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
}


** It was a parseable test case! 
refined test name is: testMissingNameAfterDotOperator
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: CompilerEnvirons arg0 = new CompilerEnvirons();
DefaultErrorReporter arg1 = DefaultErrorReporter.instance;
Parser parser = new Parser(arg0, arg1);
// Undeclared exception!
try { 
  parser.parse("msg.bad.throw.eol", (String) null, (-875));
  fail("Expecting exception: IllegalStateException");

} catch(IllegalStateException e) {
   //
   // FAILED ASSERTION
   //
   verifyException("org.mozilla.javascript.Kit", e);
}


** It was a parseable test case! 
refined test name is: testInvalidMessageIdThrowsIllegalStateException
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: CompilerEnvirons arg0 = new CompilerEnvirons();
DefaultErrorReporter arg1 = DefaultErrorReporter.instance;
Parser parser = new Parser(arg0, arg1);
// Undeclared exception!
try { 
  parser.parse("@*TIho", "@*TIho", (-573));
  fail("Expecting exception: IllegalArgumentException");

} catch(IllegalArgumentException e) {
   //
   // -573
   //
   verifyException("org.mozilla.javascript.RhinoException", e);
}


** It was a parseable test case! 
refined test name is: testParseInvalidInputStringWithOffsetLowerThanZero
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: CompilerEnvirons arg0 = new CompilerEnvirons();
DefaultErrorReporter arg1 = DefaultErrorReporter.instance;
Parser parser = new Parser(arg0, arg1);
// Undeclared exception!
try { 
  parser.parse("@DyOJSap", "@DyOJSap", (-2));
  fail("Expecting exception: IllegalStateException");

} catch(IllegalStateException e) {
   //
   // FAILED ASSERTION
   //
   verifyException("org.mozilla.javascript.Kit", e);
}


** It was a parseable test case! 
refined test name is: testParseInvalidSyntaxThrowsIllegalStateException
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: CompilerEnvirons arg0 = new CompilerEnvirons();
DefaultErrorReporter arg1 = DefaultErrorReporter.instance;
Parser parser = new Parser(arg0, arg1);
parser.parse("/%W/", "msg.adapter.zero.args", 44);
int currentLineNumber = parser.getCurrentLineNumber();
assertEquals("\u00870\u0004/%W/Q\u0001", parser.getEncodedSource());
assertEquals(44, currentLineNumber);


** It was a parseable test case! 
refined test name is: testParserWithDefaultErrorReporter
* Compiling Tests
refined test name is: testParserWithValidInput
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: CompilerEnvirons arg0 = new CompilerEnvirons();
ErrorReporter arg1 = arg0.getErrorReporter();
Parser parser = new Parser(arg0, arg1);
ScriptOrFnNode parse = parser.parse("factory == null", "error reporter", 9);
assertEquals("\u0087'\u0007factory\f*Q\u0001", parser.getEncodedSource());
assertEquals(9, parse.getBaseLineno());


** It was a parseable test case! 
refined test name is: testParsingWithFactoryVariableNullValue
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: CompilerEnvirons arg0 = new CompilerEnvirons();
DefaultErrorReporter arg1 = DefaultErrorReporter.instance;
Parser parser = new Parser(arg0, arg1);
ScriptOrFnNode parse = parser.parse("false", "false", 671);
assertEquals("\u0087,Q\u0001", parser.getEncodedSource());
assertEquals(671, parse.getLineno());


** It was a parseable test case! 
refined test name is: testParseScriptOrFnNode
* Compiling Tests
refined test name is: testParseScriptOrFnNodeWithLineNumber
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: CompilerEnvirons arg0 = new CompilerEnvirons();
ErrorReporter arg1 = arg0.getErrorReporter();
Parser parser = new Parser(arg0, arg1);
// Undeclared exception!
try { 
  parser.parse("XndO=(V7\"O@", "This is a sample input string", 653);
  fail("Expecting exception: RuntimeException");

} catch(RuntimeException e) {
   //
   // unterminated string literal (This is a sample input string#653)
   //
   verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
}


** It was a parseable test case! 
refined test name is: testParseWithUnterminatedStringLiteral
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: CompilerEnvirons arg0 = new CompilerEnvirons();
ErrorReporter arg1 = arg0.getErrorReporter();
Parser parser = new Parser(arg0, arg1);
// Undeclared exception!
try { 
  parser.parse(" /= ", "msg.let.redecl", 1234567890);
  fail("Expecting exception: RuntimeException");

} catch(RuntimeException e) {
   //
   // unterminated regular expression literal (msg.let.redecl#1234567890)
   //
   verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
}


** It was a parseable test case! 
refined test name is: testParseunterminatedRegex
* Compiling Tests
refined test name is: testParseWithInvalidInputThrowsRuntimeException
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: CompilerEnvirons arg0 = new CompilerEnvirons();
ErrorReporter arg1 = arg0.getErrorReporter();
Parser parser = new Parser(arg0, arg1);
// Undeclared exception!
try { 
  parser.parse("float", "float", 113);
  fail("Expecting exception: RuntimeException");

} catch(RuntimeException e) {
   //
   // identifier is a reserved word (float#113)
   //
   verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
}


** It was a parseable test case! 
refined test name is: testParseReservedWordAsFloatThrowsException
* Compiling Tests
refined test name is: testParseIdentifierAsFloatWithReservedWord
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: CompilerEnvirons arg0 = new CompilerEnvirons();
DefaultErrorReporter arg1 = DefaultErrorReporter.instance;
Parser parser = new Parser(arg0, arg1);
// Undeclared exception!
try { 
  parser.parse("[dUC,qV", "[dUC,qV", (-2022));
  fail("Expecting exception: IllegalArgumentException");

} catch(IllegalArgumentException e) {
   //
   // -2022
   //
   verifyException("org.mozilla.javascript.RhinoException", e);
}


** It was a parseable test case! 
refined test name is: testParseMethodInvalidInput
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: CompilerEnvirons arg0 = new CompilerEnvirons();
DefaultErrorReporter arg1 = DefaultErrorReporter.instance;
Parser parser = new Parser(arg0, arg1);
// Undeclared exception!
try { 
  parser.parse("WWV[", "WWV[", 107);
  fail("Expecting exception: RuntimeException");

} catch(RuntimeException e) {
   //
   // Unexpected end of file (WWV[#107)
   //
   verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
}


** It was a parseable test case! 
refined test name is: testUnexpectedEndOfFile
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: CompilerEnvirons arg0 = new CompilerEnvirons();
DefaultErrorReporter arg1 = DefaultErrorReporter.instance;
Parser parser = new Parser(arg0, arg1);
Decompiler createDecompiler = parser.createDecompiler(arg0);
assertEquals(1, Decompiler.INITIAL_INDENT_PROP);


** It was a parseable test case! 
refined test name is: testInitializedDecompiler
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
// Undeclared exception!
try { 
  Context.getContext();
  fail("Expecting exception: RuntimeException");

} catch(RuntimeException e) {
   //
   // No Context associated with current Thread
   //
   verifyException("org.mozilla.javascript.Context", e);
}


** It was a parseable test case! 
refined test name is: testGetContextWithoutAssociation
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: CompilerEnvirons arg0 = new CompilerEnvirons();
ErrorReporter arg1 = arg0.getErrorReporter();
Parser parser = new Parser(arg0, arg1);
parser.parse("org.mozilla.javascript.Node$Jump", "", 85);
String encodedSource = parser.getEncodedSource();
assertEquals("\u0087'\u0003orgk'\u0007mozillak'\njavascriptk'\tNode$JumpQ\u0001", encodedSource);


** It was a parseable test case! 
refined test name is: testParseMethodWithValidInputString
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: CompilerEnvirons arg0 = new CompilerEnvirons();
ErrorReporter arg1 = arg0.getErrorReporter();
Parser parser = new Parser(arg0, arg1);
boolean insideFunction = parser.insideFunction();
assertFalse(insideFunction);


** It was a parseable test case! 
refined test name is: testParserInsideFunctionReturnsFalse
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: CompilerEnvirons arg0 = new CompilerEnvirons();
DefaultErrorReporter arg1 = DefaultErrorReporter.instance;
Parser parser = new Parser(arg0, arg1);
ScriptOrFnNode parse = parser.parse("1234567890", "This is a sentence.", 0);
assertEquals("\u0087(J\u0000\u0000\u4996\u02D2Q\u0001", parser.getEncodedSource());
assertEquals(0, parse.getLineno());


** It was a parseable test case! 
refined test name is: testParseStringInput
* Compiling Tests
refined test name is: testParseInputString
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: CompilerEnvirons arg0 = new CompilerEnvirons();
DefaultErrorReporter arg1 = DefaultErrorReporter.instance;
Parser parser = new Parser(arg0, arg1);
// Undeclared exception!
try { 
  parser.parse("(Function)", "(Function)", (-4147));
  fail("Expecting exception: IllegalStateException");

} catch(IllegalStateException e) {
   //
   // FAILED ASSERTION
   //
   verifyException("org.mozilla.javascript.Kit", e);
}


** It was a parseable test case! 
refined test name is: testInvalidArgumentThrowsIllegalStateException
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: CompilerEnvirons arg0 = new CompilerEnvirons();
Parser parser = new Parser(arg0, (ErrorReporter) null);
// Undeclared exception!
try { 
  parser.addError("M8J");
  fail("Expecting exception: RuntimeException");

} catch(RuntimeException e) {
   //
   // no message resource found for message property M8J
   //
   verifyException("org.mozilla.javascript.ScriptRuntime$DefaultMessageProvider", e);
}


** It was a parseable test case! 
refined test name is: testAddErrorWithNonExistentMessageKey
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: CompilerEnvirons arg0 = new CompilerEnvirons();
DefaultErrorReporter arg1 = DefaultErrorReporter.instance;
Parser parser = new Parser(arg0, arg1);
// Undeclared exception!
try { 
  parser.popScope();
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.mozilla.javascript.Parser", e);
}


** It was a parseable test case! 
refined test name is: testPopScopeThrowsNPEWhenNullScopeIsPassed
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: CompilerEnvirons arg0 = new CompilerEnvirons();
DefaultErrorReporter arg1 = DefaultErrorReporter.instance;
Parser parser = new Parser(arg0, arg1);
// Undeclared exception!
try { 
  parser.reportError("A syntax error was encountered while parsing the code.");
  fail("Expecting exception: RuntimeException");

} catch(RuntimeException e) {
   //
   // no message resource found for message property A syntax error was encountered while parsing the code.
   //
   verifyException("org.mozilla.javascript.ScriptRuntime$DefaultMessageProvider", e);
}


** It was a parseable test case! 
refined test name is: testReportError
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 21:48:40.668 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar2340155042908387921.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 21:48:40.683 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2340155042908387921.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 21:48:40.743 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar2340155042908387921.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 21:48:40.746 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2340155042908387921.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 21:48:40.796 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar2340155042908387921.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 21:48:40.796 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2340155042908387921.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 21:48:40.850 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar2340155042908387921.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 21:48:40.851 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2340155042908387921.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 21:48:40.915 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar2340155042908387921.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 21:48:40.915 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2340155042908387921.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 21:48:40.973 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar2340155042908387921.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 21:48:40.974 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2340155042908387921.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 21:48:41.024 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar2340155042908387921.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 21:48:41.025 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2340155042908387921.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 21:48:41.097 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar2340155042908387921.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 21:48:41.098 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2340155042908387921.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 21:48:41.179 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar2340155042908387921.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 21:48:41.180 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2340155042908387921.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 21:48:41.237 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar2340155042908387921.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 21:48:41.238 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2340155042908387921.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 21:48:41.299 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar2340155042908387921.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 21:48:41.300 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2340155042908387921.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 21:48:41.365 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar2340155042908387921.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 21:48:41.366 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2340155042908387921.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 21:48:41.430 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar2340155042908387921.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 21:48:41.431 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2340155042908387921.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 21:48:41.492 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar2340155042908387921.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 21:48:41.493 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2340155042908387921.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 21:48:41.556 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar2340155042908387921.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 21:48:41.557 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2340155042908387921.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 21:48:41.616 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar2340155042908387921.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 21:48:41.617 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2340155042908387921.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 21:48:41.671 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar2340155042908387921.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 21:48:41.672 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2340155042908387921.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 21:48:41.731 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar2340155042908387921.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 21:48:41.732 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2340155042908387921.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 21:48:41.785 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar2340155042908387921.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 21:48:41.786 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2340155042908387921.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 21:48:41.850 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar2340155042908387921.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 21:48:41.856 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2340155042908387921.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
Going to execute: handleTestsThatAreUnstable
[MASTER] 21:48:41.937 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar2340155042908387921.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 21:48:41.938 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2340155042908387921.jar
* Compiling Tests
[MASTER] 21:48:41.998 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar2340155042908387921.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 21:48:41.999 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2340155042908387921.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 21:48:42.048 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar2340155042908387921.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 21:48:42.049 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2340155042908387921.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 21:48:42.098 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar2340155042908387921.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 21:48:42.099 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2340155042908387921.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 21:48:42.154 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar2340155042908387921.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 21:48:42.154 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2340155042908387921.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 21:48:42.209 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar2340155042908387921.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 21:48:42.210 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2340155042908387921.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 21:48:42.267 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar2340155042908387921.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 21:48:42.268 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2340155042908387921.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 21:48:42.327 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar2340155042908387921.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 21:48:42.328 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2340155042908387921.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 21:48:42.618 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar2340155042908387921.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 21:48:42.632 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2340155042908387921.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 21:48:42.683 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar2340155042908387921.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 21:48:42.684 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2340155042908387921.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 21:48:42.728 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar2340155042908387921.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 21:48:42.728 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2340155042908387921.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 21:48:42.774 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar2340155042908387921.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 21:48:42.775 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2340155042908387921.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 21:48:42.821 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar2340155042908387921.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 21:48:42.822 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2340155042908387921.jar
[MASTER] 21:48:42.874 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar2340155042908387921.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 21:48:42.874 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2340155042908387921.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 21:48:42.919 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar2340155042908387921.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 21:48:42.920 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2340155042908387921.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 21:48:42.968 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar2340155042908387921.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 21:48:42.969 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2340155042908387921.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 21:48:43.009 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar2340155042908387921.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 21:48:43.010 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2340155042908387921.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 21:48:43.055 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar2340155042908387921.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 21:48:43.056 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2340155042908387921.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 21:48:43.100 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar2340155042908387921.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 21:48:43.101 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2340155042908387921.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 21:48:43.154 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar2340155042908387921.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 21:48:43.156 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2340155042908387921.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 21:48:43.202 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar2340155042908387921.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 21:48:43.203 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2340155042908387921.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 21:48:43.252 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar2340155042908387921.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 21:48:43.253 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2340155042908387921.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 21:48:43.295 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar2340155042908387921.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 21:48:43.296 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2340155042908387921.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 21:48:43.343 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar2340155042908387921.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 21:48:43.344 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2340155042908387921.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 21:48:43.393 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar2340155042908387921.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 21:48:43.394 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2340155042908387921.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 21:48:43.449 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar2340155042908387921.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 21:48:43.450 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2340155042908387921.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 21:48:43.496 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar2340155042908387921.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 21:48:43.497 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2340155042908387921.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 21:48:43.543 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar2340155042908387921.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 21:48:43.543 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2340155042908387921.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 21:48:43.592 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar2340155042908387921.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 21:48:43.593 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2340155042908387921.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 21:48:43.641 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar2340155042908387921.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 21:48:43.642 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2340155042908387921.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 21:48:43.685 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar2340155042908387921.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 21:48:43.686 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2340155042908387921.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 21:48:43.735 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar2340155042908387921.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
[MASTER] 21:48:43.736 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2340155042908387921.jar
* Compiling Tests
[MASTER] 21:48:43.791 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar2340155042908387921.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 21:48:43.792 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2340155042908387921.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 21:48:43.834 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar2340155042908387921.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 21:48:43.835 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2340155042908387921.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 21:48:43.874 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar2340155042908387921.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 21:48:43.875 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2340155042908387921.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 21:48:43.916 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar2340155042908387921.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 21:48:43.916 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2340155042908387921.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 21:48:43.951 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar2340155042908387921.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 21:48:43.952 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2340155042908387921.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
Going to execute: handleTestsThatAreUnstable
[MASTER] 21:48:43.989 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar2340155042908387921.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 21:48:43.989 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2340155042908387921.jar
* Compiling Tests
[MASTER] 21:48:44.026 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar2340155042908387921.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 21:48:44.027 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2340155042908387921.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
** Write a test suite: 2 called: 1 to improve: false
** Write a test suite: 5 called: 2 to improve: false
** Write a test suite: 7 called: 3 to improve: false
** Write a test suite: 12 called: 4 to improve: false
** Write a test suite: 16 called: 5 to improve: false
** Write a test suite: 26 called: 6 to improve: false
** Write a test suite: 35 called: 7 to improve: false
** Write a test suite: 36 called: 8 to improve: false
** Write a test suite: 42 called: 9 to improve: false
** Write a test suite: 44 called: 10 to improve: false
** Write a test suite: 46 called: 11 to improve: false
** Write a test suite: 47 called: 12 to improve: false
** Write a test suite: 54 called: 13 to improve: false
[MASTER] 21:48:44.924 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar2340155042908387921.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 21:48:44.925 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2340155042908387921.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 4 called: 0 to improve: false
** Write a test suite: 11 called: 1 to improve: false
** Write a test suite: 12 called: 2 to improve: false
** Write a test suite: 14 called: 3 to improve: false
** Write a test suite: 16 called: 4 to improve: false
** Write a test suite: 22 called: 5 to improve: false
** Write a test suite: 23 called: 6 to improve: false
** Write a test suite: 32 called: 7 to improve: false
** Write a test suite: 42 called: 8 to improve: false
** Write a test suite: 46 called: 9 to improve: false
** Write a test suite: 51 called: 10 to improve: false
** Write a test suite: 53 called: 11 to improve: false
** Write a test suite: 56 called: 12 to improve: false
** Write a test suite: 58 called: 13 to improve: false
[MASTER] 21:48:46.018 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar2340155042908387921.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 21:48:46.019 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2340155042908387921.jar
[MASTER] 21:48:47.605 [logback-1] WARN  TimeController - Already entered in phase: INLINING. This will mess up the timing calculations.
* test suite isTestSuite: 69
Test 0: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
parser.getEncodedSource();
Test 1: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
// Undeclared exception!
try { 
  parser.popScope();
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.mozilla.javascript.Parser", e);
}

Test 2: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
// Undeclared exception!
try { 
  parser.parse("H-{bvlxlV)0pK+", "H-{bvlxlV)0pK+", 511);
  fail("Expecting exception: RuntimeException");

} catch(RuntimeException e) {
   //
   // missing : after property id (H-{bvlxlV)0pK+#511)
   //
   verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
}

Test 3: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Parser parser = new Parser(compilerEnvirons, (ErrorReporter) null);
StringReader stringReader = new StringReader("[]");
parser.parse((Reader) stringReader, "[]", 119);
Test 4: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Parser parser = new Parser(compilerEnvirons, (ErrorReporter) null);
parser.addStrictWarning("msg.bad.return", "msg.bad.return");
Test 5: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
// Undeclared exception!
try { 
  parser.parse("(Function)", "(Function)", (-4147));
  fail("Expecting exception: IllegalStateException");

} catch(IllegalStateException e) {
   //
   // FAILED ASSERTION
   //
   verifyException("org.mozilla.javascript.Kit", e);
}

Test 6: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
// Undeclared exception!
try { 
  parser.parse("[@(MhrsR;n%;Rh<`>|]", "[@(MhrsR;n%;Rh<`>|]", 13);
  fail("Expecting exception: RuntimeException");

} catch(RuntimeException e) {
   //
   // missing name after .@ ([@(MhrsR;n%;Rh<`>|]#13)
   //
   verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
}

Test 7: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)compilerEnvirons.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
compilerEnvirons.setXmlAvailable(false);
// Undeclared exception!
try { 
  parser.parse("[@(MhrsR;n%;Rh<`>|]", (String) null, 13);
  fail("Expecting exception: RuntimeException");

} catch(RuntimeException e) {
   //
   // XML runtime not available
   //
   verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
}

Test 8: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)compilerEnvirons.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
// Undeclared exception!
try { 
  parser.parse("{kP0*^,a", "{kP0*^,a", (-4393));
  fail("Expecting exception: IllegalArgumentException");

} catch(IllegalArgumentException e) {
   //
   // -4393
   //
   verifyException("org.mozilla.javascript.RhinoException", e);
}

Test 9: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Context currentContext = Context.getCurrentContext();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)currentContext.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
ScriptOrFnNode parse = parser.parse("isPrototypeOf", "V", 7);
parser.pushScope(parse);
// Undeclared exception!
try { 
  parser.pushScope(parse);
  fail("Expecting exception: IllegalStateException");

} catch(IllegalStateException e) {
   //
   // FAILED ASSERTION
   //
   verifyException("org.mozilla.javascript.Kit", e);
}

Test 10: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
// Undeclared exception!
try { 
  parser.parse("do ", "do ", 16);
  fail("Expecting exception: RuntimeException");

} catch(RuntimeException e) {
   //
   // Unexpected end of file (do #16)
   //
   verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
}

Test 11: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
compilerEnvirons.setGeneratingSource(false);
parser.parse(";vM*ZI<n", "retun", 23);
Test 12: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
// Undeclared exception!
try { 
  parser.parse("return", "return", 23);
  fail("Expecting exception: RuntimeException");

} catch(RuntimeException e) {
   //
   // invalid return (return#23)
   //
   verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
}

Test 13: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)compilerEnvirons.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
// Undeclared exception!
try { 
  parser.parse("throw ", "throw ", (-226));
  fail("Expecting exception: IllegalArgumentException");

} catch(IllegalArgumentException e) {
   //
   // -226
   //
   verifyException("org.mozilla.javascript.RhinoException", e);
}

Test 14: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Context context = Context.getContext();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)context.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
// Undeclared exception!
try { 
  parser.parse("if ", "if ", 11);
  fail("Expecting exception: RuntimeException");

} catch(RuntimeException e) {
   //
   // missing ( before condition (if #11)
   //
   verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
}

Test 15: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Context currentContext = Context.getCurrentContext();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)currentContext.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
// Undeclared exception!
try { 
  parser.parse("switch", "language version", 11);
  fail("Expecting exception: RuntimeException");

} catch(RuntimeException e) {
   //
   // missing ( before switch expression (language version#11)
   //
   verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
}

Test 16: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
// Undeclared exception!
try { 
  parser.parse("with", "o?`?}SO#J", 1428);
  fail("Expecting exception: RuntimeException");

} catch(RuntimeException e) {
   //
   // missing ( before with-statement object (o?`?}SO#J#1428)
   //
   verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
}

Test 17: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
// Undeclared exception!
try { 
  parser.parse("bj:", "bj:", 16);
  fail("Expecting exception: RuntimeException");

} catch(RuntimeException e) {
   //
   // Unexpected end of file (bj:#16)
   //
   verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
}

Test 18: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
// Undeclared exception!
try { 
  parser.parse("OP}ua=UA|aqxpPdDD", "OP}ua=UA|aqxpPdDD", (-1756));
  fail("Expecting exception: IllegalArgumentException");

} catch(IllegalArgumentException e) {
   //
   // -1756
   //
   verifyException("org.mozilla.javascript.RhinoException", e);
}

Test 19: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Context currentContext = Context.getCurrentContext();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)currentContext.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
// Undeclared exception!
try { 
  parser.parse("pc;V(p_,X4", "<>", 5);
  fail("Expecting exception: RuntimeException");

} catch(RuntimeException e) {
   //
   // missing ) after argument list (<>#5)
   //
   verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
}

Test 20: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
parser.parse("r:eRIySm:Ck3gEN", "r:eRIySm:Ck3gEN", 3072);
parser.defineSymbol(86, true, "Lget");
Test 21: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)compilerEnvirons.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
parser.parse("", "", 85);
// Undeclared exception!
try { 
  parser.defineSymbol((-3170), false, "");
  fail("Expecting exception: IllegalStateException");

} catch(IllegalStateException e) {
   //
   // FAILED ASSERTION
   //
   verifyException("org.mozilla.javascript.Kit", e);
}

Test 22: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
StringReader stringReader = new StringReader("org.mozilla.javascript.DToA");
parser.parse((Reader) stringReader, "*", 1186);
parser.defineSymbol(121, true, (String) null);
Test 23: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
parser.parse("rB", "language version", 8);
parser.defineSymbol(153, false, "rB");
Test 24: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Context context = Context.getContext();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)context.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
parser.parse("DuI_9Z,u", "error reporter", 8);
Test 25: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)compilerEnvirons.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
// Undeclared exception!
try { 
  parser.parse("_c&A$h7w([p=x{pS", "_c&A$h7w([p=x{pS", (-1541));
  fail("Expecting exception: IllegalArgumentException");

} catch(IllegalArgumentException e) {
   //
   // -1541
   //
   verifyException("org.mozilla.javascript.RhinoException", e);
}

Test 26: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)compilerEnvirons.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
parser.parse("factory == null", "error reporter", 9);
Test 27: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
// Undeclared exception!
try { 
  parser.parse("UogZg|gk!=q:", "UogZg|gk!=q:", (-1690));
  fail("Expecting exception: IllegalArgumentException");

} catch(IllegalArgumentException e) {
   //
   // -1690
   //
   verifyException("org.mozilla.javascript.RhinoException", e);
}

Test 28: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
// Undeclared exception!
try { 
  parser.parse("ER>%Mgx}'nl ", "ER>%Mgx}'nl ", 519);
  fail("Expecting exception: RuntimeException");

} catch(RuntimeException e) {
   //
   // syntax error (ER>%Mgx}'nl #519)
   //
   verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
}

Test 29: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
// Undeclared exception!
try { 
  parser.parse("X+RQRF=+2z-N).wM", "org.mozilla.javascript.NativeIterator$WrappedJavaIterator", 107);
  fail("Expecting exception: RuntimeException");

} catch(RuntimeException e) {
   //
   // Invalid assignment left-hand side. (org.mozilla.javascript.NativeIterator$WrappedJavaIterator#107)
   //
   verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
}

Test 30: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
parser.parse("e%c/ Ac$M", "e%c/ Ac$M", 17);
Test 31: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
// Undeclared exception!
try { 
  parser.parse("<]3xW{)*", "<]3xW{)*", (-386));
  fail("Expecting exception: IllegalArgumentException");

} catch(IllegalArgumentException e) {
   //
   // -386
   //
   verifyException("org.mozilla.javascript.RhinoException", e);
}

Test 32: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Context currentContext = Context.getCurrentContext();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)currentContext.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
// Undeclared exception!
try { 
  parser.parse("factory.makeContext() returned Context instance already associated with some thread", "error reporter", 13);
  fail("Expecting exception: RuntimeException");

} catch(RuntimeException e) {
   //
   // missing ; before statement (error reporter#13)
   //
   verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
}

Test 33: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
// Undeclared exception!
try { 
  parser.parse("WWV[", "WWV[", 107);
  fail("Expecting exception: RuntimeException");

} catch(RuntimeException e) {
   //
   // Unexpected end of file (WWV[#107)
   //
   verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
}

Test 34: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
// Undeclared exception!
try { 
  parser.parse("mcUO..,'g\"F|a{Y", "language version", 8);
  fail("Expecting exception: RuntimeException");

} catch(RuntimeException e) {
   //
   // missing name after . operator (language version#8)
   //
   verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
}

Test 35: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
// Undeclared exception!
try { 
  parser.parse("msg.const.redecl", "msg.const.redecl", (-379));
  fail("Expecting exception: IllegalArgumentException");

} catch(IllegalArgumentException e) {
   //
   // -379
   //
   verifyException("org.mozilla.javascript.RhinoException", e);
}

Test 36: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Parser parser = new Parser(compilerEnvirons, (ErrorReporter) null);
// Undeclared exception!
try { 
  parser.parse("cy8.*?!b*j8Q,P", "cy8.*?!b*j8Q,P", 5930);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.mozilla.javascript.Parser", e);
}

Test 37: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
// Undeclared exception!
try { 
  parser.parse("msg.bad.throw.eol", (String) null, (-875));
  fail("Expecting exception: IllegalStateException");

} catch(IllegalStateException e) {
   //
   // FAILED ASSERTION
   //
   verifyException("org.mozilla.javascript.Kit", e);
}

Test 38: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
// Undeclared exception!
try { 
  parser.parse("@*TIho", "@*TIho", (-573));
  fail("Expecting exception: IllegalArgumentException");

} catch(IllegalArgumentException e) {
   //
   // -573
   //
   verifyException("org.mozilla.javascript.RhinoException", e);
}

Test 39: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
// Undeclared exception!
try { 
  parser.parse("@DyOJSap", "@DyOJSap", (-2));
  fail("Expecting exception: IllegalStateException");

} catch(IllegalStateException e) {
   //
   // FAILED ASSERTION
   //
   verifyException("org.mozilla.javascript.Kit", e);
}

Test 40: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
// Undeclared exception!
try { 
  parser.parse(";/?:@&=+$,#", ";/?:@&=+$,#", 17);
  fail("Expecting exception: RuntimeException");

} catch(RuntimeException e) {
   //
   // unterminated regular expression literal (;/?:@&=+$,##17)
   //
   verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
}

Test 41: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
// Undeclared exception!
try { 
  parser.parse("v[\"M-;%VrW\")", "bvlxlV", 3070);
  fail("Expecting exception: RuntimeException");

} catch(RuntimeException e) {
   //
   // missing ] in index expression (bvlxlV#3070)
   //
   verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
}

Test 42: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
parser.parse("false", "false", 671);
Test 43: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)compilerEnvirons.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
// Undeclared exception!
try { 
  parser.parse(" /= ", "msg.let.redecl", 42);
  fail("Expecting exception: RuntimeException");

} catch(RuntimeException e) {
   //
   // unterminated regular expression literal (msg.let.redecl#42)
   //
   verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
}

Test 44: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)compilerEnvirons.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
// Undeclared exception!
try { 
  parser.parse("float", "float", 113);
  fail("Expecting exception: RuntimeException");

} catch(RuntimeException e) {
   //
   // identifier is a reserved word (float#113)
   //
   verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
}

Test 45: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
// Undeclared exception!
try { 
  parser.parse("[dUC,qV", "[dUC,qV", (-2022));
  fail("Expecting exception: IllegalArgumentException");

} catch(IllegalArgumentException e) {
   //
   // -2022
   //
   verifyException("org.mozilla.javascript.RhinoException", e);
}

Test 46: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)compilerEnvirons.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
// Undeclared exception!
try { 
  parser.parse("-{{$@C.u6w", "-{{$@C.u6w", 110);
  fail("Expecting exception: RuntimeException");

} catch(RuntimeException e) {
   //
   // invalid property id (-{{$@C.u6w#110)
   //
   verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
}

Test 47: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
// Undeclared exception!
try { 
  parser.parse("ahNG6D|~^", "ahNG6D|~^", 81);
  fail("Expecting exception: RuntimeException");

} catch(RuntimeException e) {
   //
   // syntax error (ahNG6D|~^#81)
   //
   verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
}

Test 48: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Parser parser = new Parser(compilerEnvirons, (ErrorReporter) null);
// Undeclared exception!
try { 
  parser.parse("{'Ed>`X6K6", "", 42);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.mozilla.javascript.Parser", e);
}

Test 49: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)compilerEnvirons.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
StringReader stringReader = new StringReader("m:cR14sAI5Zsn");
parser.parse((Reader) stringReader, "error reporter", 2);
Test 50: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
// Undeclared exception!
try { 
  parser.parse("Bh^<d", "1Jn.Cm", (-2468));
  fail("Expecting exception: IllegalArgumentException");

} catch(IllegalArgumentException e) {
   //
   // -2468
   //
   verifyException("org.mozilla.javascript.RhinoException", e);
}

Test 51: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)compilerEnvirons.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
// Undeclared exception!
try { 
  parser.parse("R.fM&+", "R.fM&+", 4);
  fail("Expecting exception: RuntimeException");

} catch(RuntimeException e) {
   //
   // Unexpected end of file (R.fM&+#4)
   //
   verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
}

Test 52: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)compilerEnvirons.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
compilerEnvirons.setXmlAvailable(false);
parser.parse("org.mozilla.javascript.Node$Jump", "", 85);
Test 53: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
// Undeclared exception!
try { 
  parser.parse("4P]Vi", "error reporter", 11);
  fail("Expecting exception: RuntimeException");

} catch(RuntimeException e) {
   //
   // missing ; before statement (error reporter#11)
   //
   verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
}

Test 54: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)compilerEnvirons.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
// Undeclared exception!
try { 
  parser.parse("\"cb6W|o\"`1)tEY95aH,", "%K~Iu7Lr86C{.{(", 1);
  fail("Expecting exception: RuntimeException");

} catch(RuntimeException e) {
   //
   // illegal character (%K~Iu7Lr86C{.{(#1)
   //
   verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
}

Test 55: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)compilerEnvirons.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
// Undeclared exception!
try { 
  parser.parse("XndO=(V7\"O@", "<c", 653);
  fail("Expecting exception: RuntimeException");

} catch(RuntimeException e) {
   //
   // unterminated string literal (<c#653)
   //
   verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
}

Test 56: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
parser.createDecompiler(compilerEnvirons);
Test 57: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Context context = Context.getContext();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)context.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
parser.parse("rB", "language version", 110);
parser.eof();
Test 58: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
parser.parse("/%W/", "msg.adapter.zero.args", 44);
parser.getCurrentLineNumber();
Test 59: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)compilerEnvirons.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
parser.parse("org.mozilla.javascript.Node$Jump", "", 85);
parser.getEncodedSource();
Test 60: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)compilerEnvirons.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
parser.insideFunction();
Test 61: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Parser parser = new Parser(compilerEnvirons, (ErrorReporter) null);
StringReader stringReader = new StringReader("L0");
parser.parse((Reader) stringReader, "", 0);
Test 62: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)compilerEnvirons.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
StringReader stringReader = new StringReader("");
parser.parse((Reader) stringReader, (String) null, 19);
Test 63: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)compilerEnvirons.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
parser.parse("", "set", 0);
Test 64: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)compilerEnvirons.getErrorReporter();
Parser parser = new Parser((CompilerEnvirons) null, errorReporter);
// Undeclared exception!
try { 
  parser.addError("msg.reserved.id", "msg.reserved.id");
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.mozilla.javascript.Parser", e);
}

Test 65: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
StringReader stringReader = new StringReader("msg.not.java.obj");
parser.parse((Reader) stringReader, "jsFunction_", 22);
parser.addWarning("msg.let.decl.not.in.block", "msg.let.decl.not.in.block");
Test 66: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Parser parser = new Parser(compilerEnvirons, (ErrorReporter) null);
StringReader stringReader = new StringReader("<cj75^{E]");
// Undeclared exception!
try { 
  parser.parse((Reader) stringReader, "", 89);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.mozilla.javascript.Parser", e);
}

Test 67: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Parser parser = new Parser(compilerEnvirons, (ErrorReporter) null);
// Undeclared exception!
try { 
  parser.addError("M8J");
  fail("Expecting exception: RuntimeException");

} catch(RuntimeException e) {
   //
   // no message resource found for message property M8J
   //
   verifyException("org.mozilla.javascript.ScriptRuntime$DefaultMessageProvider", e);
}

Test 68: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
// Undeclared exception!
try { 
  parser.reportError("error reporter");
  fail("Expecting exception: RuntimeException");

} catch(RuntimeException e) {
   //
   // no message resource found for message property error reporter
   //
   verifyException("org.mozilla.javascript.ScriptRuntime$DefaultMessageProvider", e);
}


* Minimizing test suite
[MASTER] 21:49:08.798 [logback-1] WARN  TimeController - Already entered in phase: MINIMIZATION. This will mess up the timing calculations.
* test suite isTestSuite: 66
Test 0: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Parser parser = new Parser(compilerEnvirons, (ErrorReporter) null);
// Undeclared exception!
try { 
  parser.parse("cy8.*?!b*j8Q,P", "cy8.*?!b*j8Q,P", 5930);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.mozilla.javascript.Parser", e);
}

Test 1: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
// Undeclared exception!
try { 
  parser.parse("(Function)", "(Function)", (-4147));
  fail("Expecting exception: IllegalStateException");

} catch(IllegalStateException e) {
   //
   // FAILED ASSERTION
   //
   verifyException("org.mozilla.javascript.Kit", e);
}

Test 2: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)compilerEnvirons.getErrorReporter();
Parser parser = new Parser((CompilerEnvirons) null, errorReporter);
// Undeclared exception!
try { 
  parser.addError("msg.reserved.id", "msg.reserved.id");
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.mozilla.javascript.Parser", e);
}

Test 3: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
parser.getEncodedSource();
Test 4: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Parser parser = new Parser(compilerEnvirons, (ErrorReporter) null);
// Undeclared exception!
try { 
  parser.parse("{'Ed>`X6K6", "", 42);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.mozilla.javascript.Parser", e);
}

Test 5: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
// Undeclared exception!
try { 
  parser.parse("H-{bvlxlV)0pK+", "H-{bvlxlV)0pK+", 511);
  fail("Expecting exception: RuntimeException");

} catch(RuntimeException e) {
   //
   // missing : after property id (H-{bvlxlV)0pK+#511)
   //
   verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
}

Test 6: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Parser parser = new Parser(compilerEnvirons, (ErrorReporter) null);
StringReader stringReader = new StringReader("<cj75^{E]");
// Undeclared exception!
try { 
  parser.parse((Reader) stringReader, "", 89);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.mozilla.javascript.Parser", e);
}

Test 7: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Parser parser = new Parser(compilerEnvirons, (ErrorReporter) null);
parser.addStrictWarning("msg.bad.return", "msg.bad.return");
Test 8: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
// Undeclared exception!
try { 
  parser.parse("@*TIho", "@*TIho", (-573));
  fail("Expecting exception: IllegalArgumentException");

} catch(IllegalArgumentException e) {
   //
   // -573
   //
   verifyException("org.mozilla.javascript.RhinoException", e);
}

Test 9: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)compilerEnvirons.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
compilerEnvirons.setXmlAvailable(false);
// Undeclared exception!
try { 
  parser.parse("[@(MhrsR;n%;Rh<`>|]", (String) null, 13);
  fail("Expecting exception: RuntimeException");

} catch(RuntimeException e) {
   //
   // XML runtime not available
   //
   verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
}

Test 10: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Context currentContext = Context.getCurrentContext();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)currentContext.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
ScriptOrFnNode parse = parser.parse("isPrototypeOf", "V", 7);
parser.pushScope(parse);
// Undeclared exception!
try { 
  parser.pushScope(parse);
  fail("Expecting exception: IllegalStateException");

} catch(IllegalStateException e) {
   //
   // FAILED ASSERTION
   //
   verifyException("org.mozilla.javascript.Kit", e);
}

Test 11: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
// Undeclared exception!
try { 
  parser.parse("do ", "do ", 16);
  fail("Expecting exception: RuntimeException");

} catch(RuntimeException e) {
   //
   // Unexpected end of file (do #16)
   //
   verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
}

Test 12: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
compilerEnvirons.setGeneratingSource(false);
parser.parse(";vM*ZI<n", "retun", 23);
Test 13: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)compilerEnvirons.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
// Undeclared exception!
try { 
  parser.parse("{kP0*^,a", "{kP0*^,a", (-4393));
  fail("Expecting exception: IllegalArgumentException");

} catch(IllegalArgumentException e) {
   //
   // -4393
   //
   verifyException("org.mozilla.javascript.RhinoException", e);
}

Test 14: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
// Undeclared exception!
try { 
  parser.parse("return", "return", 23);
  fail("Expecting exception: RuntimeException");

} catch(RuntimeException e) {
   //
   // invalid return (return#23)
   //
   verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
}

Test 15: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)compilerEnvirons.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
// Undeclared exception!
try { 
  parser.parse("throw ", "throw ", (-226));
  fail("Expecting exception: IllegalArgumentException");

} catch(IllegalArgumentException e) {
   //
   // -226
   //
   verifyException("org.mozilla.javascript.RhinoException", e);
}

Test 16: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Context context = Context.getContext();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)context.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
// Undeclared exception!
try { 
  parser.parse("if ", "if ", 11);
  fail("Expecting exception: RuntimeException");

} catch(RuntimeException e) {
   //
   // missing ( before condition (if #11)
   //
   verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
}

Test 17: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Context currentContext = Context.getCurrentContext();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)currentContext.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
// Undeclared exception!
try { 
  parser.parse("switch", "language version", 11);
  fail("Expecting exception: RuntimeException");

} catch(RuntimeException e) {
   //
   // missing ( before switch expression (language version#11)
   //
   verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
}

Test 18: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
// Undeclared exception!
try { 
  parser.parse("with", "o?`?}SO#J", 1428);
  fail("Expecting exception: RuntimeException");

} catch(RuntimeException e) {
   //
   // missing ( before with-statement object (o?`?}SO#J#1428)
   //
   verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
}

Test 19: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
// Undeclared exception!
try { 
  parser.parse("bj:", "bj:", 16);
  fail("Expecting exception: RuntimeException");

} catch(RuntimeException e) {
   //
   // Unexpected end of file (bj:#16)
   //
   verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
}

Test 20: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
parser.parse("r:eRIySm:Ck3gEN", "r:eRIySm:Ck3gEN", 3072);
parser.defineSymbol(86, true, "Lget");
Test 21: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Context currentContext = Context.getCurrentContext();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)currentContext.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
// Undeclared exception!
try { 
  parser.parse("pc;V(p_,X4", "<>", 5);
  fail("Expecting exception: RuntimeException");

} catch(RuntimeException e) {
   //
   // missing ) after argument list (<>#5)
   //
   verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
}

Test 22: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
// Undeclared exception!
try { 
  parser.parse("OP}ua=UA|aqxpPdDD", "OP}ua=UA|aqxpPdDD", (-1756));
  fail("Expecting exception: IllegalArgumentException");

} catch(IllegalArgumentException e) {
   //
   // -1756
   //
   verifyException("org.mozilla.javascript.RhinoException", e);
}

Test 23: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
parser.parse("rB", "language version", 8);
parser.defineSymbol(153, false, "rB");
Test 24: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
StringReader stringReader = new StringReader("org.mozilla.javascript.DToA");
parser.parse((Reader) stringReader, "*", 1186);
parser.defineSymbol(121, true, (String) null);
Test 25: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)compilerEnvirons.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
parser.parse("", "", 85);
// Undeclared exception!
try { 
  parser.defineSymbol((-3170), false, "");
  fail("Expecting exception: IllegalStateException");

} catch(IllegalStateException e) {
   //
   // FAILED ASSERTION
   //
   verifyException("org.mozilla.javascript.Kit", e);
}

Test 26: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Context context = Context.getContext();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)context.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
parser.parse("DuI_9Z,u", "error reporter", 8);
Test 27: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
// Undeclared exception!
try { 
  parser.parse("X+RQRF=+2z-N).wM", "org.mozilla.javascript.NativeIterator$WrappedJavaIterator", 107);
  fail("Expecting exception: RuntimeException");

} catch(RuntimeException e) {
   //
   // Invalid assignment left-hand side. (org.mozilla.javascript.NativeIterator$WrappedJavaIterator#107)
   //
   verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
}

Test 28: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
// Undeclared exception!
try { 
  parser.parse("UogZg|gk!=q:", "UogZg|gk!=q:", (-1690));
  fail("Expecting exception: IllegalArgumentException");

} catch(IllegalArgumentException e) {
   //
   // -1690
   //
   verifyException("org.mozilla.javascript.RhinoException", e);
}

Test 29: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
// Undeclared exception!
try { 
  parser.parse("Bh^<d", "1Jn.Cm", (-2468));
  fail("Expecting exception: IllegalArgumentException");

} catch(IllegalArgumentException e) {
   //
   // -2468
   //
   verifyException("org.mozilla.javascript.RhinoException", e);
}

Test 30: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)compilerEnvirons.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
// Undeclared exception!
try { 
  parser.parse("R.fM&+", "R.fM&+", 4);
  fail("Expecting exception: RuntimeException");

} catch(RuntimeException e) {
   //
   // Unexpected end of file (R.fM&+#4)
   //
   verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
}

Test 31: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)compilerEnvirons.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
parser.parse("factory == null", "error reporter", 9);
Test 32: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
// Undeclared exception!
try { 
  parser.parse("ER>%Mgx}'nl ", "ER>%Mgx}'nl ", 519);
  fail("Expecting exception: RuntimeException");

} catch(RuntimeException e) {
   //
   // syntax error (ER>%Mgx}'nl #519)
   //
   verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
}

Test 33: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
parser.parse("e%c/ Ac$M", "e%c/ Ac$M", 17);
Test 34: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)compilerEnvirons.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
// Undeclared exception!
try { 
  parser.parse("-{{$@C.u6w", "-{{$@C.u6w", 110);
  fail("Expecting exception: RuntimeException");

} catch(RuntimeException e) {
   //
   // invalid property id (-{{$@C.u6w#110)
   //
   verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
}

Test 35: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
// Undeclared exception!
try { 
  parser.parse("ahNG6D|~^", "ahNG6D|~^", 81);
  fail("Expecting exception: RuntimeException");

} catch(RuntimeException e) {
   //
   // syntax error (ahNG6D|~^#81)
   //
   verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
}

Test 36: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Context currentContext = Context.getCurrentContext();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)currentContext.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
// Undeclared exception!
try { 
  parser.parse("factory.makeContext() returned Context instance already associated with some thread", "error reporter", 13);
  fail("Expecting exception: RuntimeException");

} catch(RuntimeException e) {
   //
   // missing ; before statement (error reporter#13)
   //
   verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
}

Test 37: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
// Undeclared exception!
try { 
  parser.parse("WWV[", "WWV[", 107);
  fail("Expecting exception: RuntimeException");

} catch(RuntimeException e) {
   //
   // Unexpected end of file (WWV[#107)
   //
   verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
}

Test 38: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
// Undeclared exception!
try { 
  parser.parse("mcUO..,'g\"F|a{Y", "language version", 8);
  fail("Expecting exception: RuntimeException");

} catch(RuntimeException e) {
   //
   // missing name after . operator (language version#8)
   //
   verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
}

Test 39: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)compilerEnvirons.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
compilerEnvirons.setXmlAvailable(false);
parser.parse("org.mozilla.javascript.Node$Jump", "", 85);
Test 40: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
// Undeclared exception!
try { 
  parser.parse("msg.bad.throw.eol", (String) null, (-875));
  fail("Expecting exception: IllegalStateException");

} catch(IllegalStateException e) {
   //
   // FAILED ASSERTION
   //
   verifyException("org.mozilla.javascript.Kit", e);
}

Test 41: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
// Undeclared exception!
try { 
  parser.parse("@DyOJSap", "@DyOJSap", (-2));
  fail("Expecting exception: IllegalStateException");

} catch(IllegalStateException e) {
   //
   // FAILED ASSERTION
   //
   verifyException("org.mozilla.javascript.Kit", e);
}

Test 42: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
// Undeclared exception!
try { 
  parser.parse("[@(MhrsR;n%;Rh<`>|]", "[@(MhrsR;n%;Rh<`>|]", 13);
  fail("Expecting exception: RuntimeException");

} catch(RuntimeException e) {
   //
   // missing name after .@ ([@(MhrsR;n%;Rh<`>|]#13)
   //
   verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
}

Test 43: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
// Undeclared exception!
try { 
  parser.parse(";/?:@&=+$,#", ";/?:@&=+$,#", 17);
  fail("Expecting exception: RuntimeException");

} catch(RuntimeException e) {
   //
   // unterminated regular expression literal (;/?:@&=+$,##17)
   //
   verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
}

Test 44: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
// Undeclared exception!
try { 
  parser.parse("v[\"M-;%VrW\")", "bvlxlV", 3070);
  fail("Expecting exception: RuntimeException");

} catch(RuntimeException e) {
   //
   // missing ] in index expression (bvlxlV#3070)
   //
   verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
}

Test 45: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
parser.parse("false", "false", 671);
Test 46: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)compilerEnvirons.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
// Undeclared exception!
try { 
  parser.parse(" /= ", "msg.let.redecl", 42);
  fail("Expecting exception: RuntimeException");

} catch(RuntimeException e) {
   //
   // unterminated regular expression literal (msg.let.redecl#42)
   //
   verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
}

Test 47: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)compilerEnvirons.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
// Undeclared exception!
try { 
  parser.parse("float", "float", 113);
  fail("Expecting exception: RuntimeException");

} catch(RuntimeException e) {
   //
   // identifier is a reserved word (float#113)
   //
   verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
}

Test 48: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
// Undeclared exception!
try { 
  parser.parse("[dUC,qV", "[dUC,qV", (-2022));
  fail("Expecting exception: IllegalArgumentException");

} catch(IllegalArgumentException e) {
   //
   // -2022
   //
   verifyException("org.mozilla.javascript.RhinoException", e);
}

Test 49: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Parser parser = new Parser(compilerEnvirons, (ErrorReporter) null);
StringReader stringReader = new StringReader("[]");
parser.parse((Reader) stringReader, "[]", 119);
Test 50: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)compilerEnvirons.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
StringReader stringReader = new StringReader("m:cR14sAI5Zsn");
parser.parse((Reader) stringReader, "error reporter", 2);
Test 51: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
// Undeclared exception!
try { 
  parser.parse("4P]Vi", "error reporter", 11);
  fail("Expecting exception: RuntimeException");

} catch(RuntimeException e) {
   //
   // missing ; before statement (error reporter#11)
   //
   verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
}

Test 52: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)compilerEnvirons.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
// Undeclared exception!
try { 
  parser.parse("\"cb6W|o\"`1)tEY95aH,", "%K~Iu7Lr86C{.{(", 1);
  fail("Expecting exception: RuntimeException");

} catch(RuntimeException e) {
   //
   // illegal character (%K~Iu7Lr86C{.{(#1)
   //
   verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
}

Test 53: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)compilerEnvirons.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
// Undeclared exception!
try { 
  parser.parse("XndO=(V7\"O@", "<c", 653);
  fail("Expecting exception: RuntimeException");

} catch(RuntimeException e) {
   //
   // unterminated string literal (<c#653)
   //
   verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
}

Test 54: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
parser.createDecompiler(compilerEnvirons);
Test 55: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Context context = Context.getContext();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)context.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
parser.parse("rB", "language version", 110);
parser.eof();
Test 56: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
parser.parse("/%W/", "msg.adapter.zero.args", 44);
parser.getCurrentLineNumber();
Test 57: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)compilerEnvirons.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
parser.parse("org.mozilla.javascript.Node$Jump", "", 85);
parser.getEncodedSource();
Test 58: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)compilerEnvirons.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
parser.insideFunction();
Test 59: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Parser parser = new Parser(compilerEnvirons, (ErrorReporter) null);
StringReader stringReader = new StringReader("L0");
parser.parse((Reader) stringReader, "", 0);
Test 60: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)compilerEnvirons.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
StringReader stringReader = new StringReader("");
parser.parse((Reader) stringReader, (String) null, 19);
Test 61: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)compilerEnvirons.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
parser.parse("", "set", 0);
Test 62: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
StringReader stringReader = new StringReader("msg.not.java.obj");
parser.parse((Reader) stringReader, "jsFunction_", 22);
parser.addWarning("msg.let.decl.not.in.block", "msg.let.decl.not.in.block");
Test 63: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Parser parser = new Parser(compilerEnvirons, (ErrorReporter) null);
// Undeclared exception!
try { 
  parser.addError("M8J");
  fail("Expecting exception: RuntimeException");

} catch(RuntimeException e) {
   //
   // no message resource found for message property M8J
   //
   verifyException("org.mozilla.javascript.ScriptRuntime$DefaultMessageProvider", e);
}

Test 64: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
// Undeclared exception!
try { 
  parser.popScope();
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.mozilla.javascript.Parser", e);
}

Test 65: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
// Undeclared exception!
try { 
  parser.reportError("error reporter");
  fail("Expecting exception: RuntimeException");

} catch(RuntimeException e) {
   //
   // no message resource found for message property error reporter
   //
   verifyException("org.mozilla.javascript.ScriptRuntime$DefaultMessageProvider", e);
}


* Going to analyze the coverage criteria
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 41%
* Total number of goals: 735
* Number of covered goals: 305
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 40%
* Total number of goals: 1211
* Number of covered goals: 482
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 44%
* Total number of goals: 80
* Number of covered goals: 35
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 16
* Number of covered goals: 16
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 41%
* Total number of goals: 735
* Number of covered goals: 299
* Generated 66 tests with total length 284
* Resulting test suite's coverage: 53% (average coverage for all fitness functions)
* Generating assertions
[MASTER] 21:49:10.822 [logback-1] WARN  TimeController - Already entered in phase: COVERAGE_ANALYSIS. This will mess up the timing calculations.
* Resulting test suite's mutation score: 10%
* Compiling and checking tests
[MASTER] 21:49:25.024 [logback-1] WARN  TimeController - Already entered in phase: ASSERTION_GENERATION. This will mess up the timing calculations.
Going to execute: removeTestsThatDoNotCompile
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 21:49:28.497 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar2340155042908387921.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 21:49:28.498 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2340155042908387921.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 21:49:28.538 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar2340155042908387921.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 21:49:28.539 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2340155042908387921.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 21:49:28.570 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar2340155042908387921.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 21:49:28.570 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2340155042908387921.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 21:49:28.598 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar2340155042908387921.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 21:49:28.599 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2340155042908387921.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 21:49:28.633 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar2340155042908387921.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 21:49:28.633 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2340155042908387921.jar
[MASTER] 21:49:28.674 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar2340155042908387921.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 21:49:28.675 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2340155042908387921.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 21:49:28.707 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar2340155042908387921.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 21:49:28.708 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2340155042908387921.jar
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 21:49:28.753 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar2340155042908387921.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 21:49:28.754 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2340155042908387921.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 21:49:28.795 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar2340155042908387921.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 21:49:28.796 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2340155042908387921.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 21:49:28.831 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar2340155042908387921.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 21:49:28.832 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2340155042908387921.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 21:49:28.880 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar2340155042908387921.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 21:49:28.880 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2340155042908387921.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 21:49:28.930 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar2340155042908387921.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 21:49:28.931 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2340155042908387921.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 21:49:28.990 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar2340155042908387921.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 21:49:28.990 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2340155042908387921.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 21:49:29.025 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar2340155042908387921.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 21:49:29.025 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2340155042908387921.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 21:49:29.065 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar2340155042908387921.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 21:49:29.066 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2340155042908387921.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 21:49:29.104 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar2340155042908387921.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 21:49:29.104 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2340155042908387921.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 21:49:29.145 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar2340155042908387921.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 21:49:29.146 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2340155042908387921.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 21:49:29.183 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar2340155042908387921.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 21:49:29.184 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2340155042908387921.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 21:49:29.237 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar2340155042908387921.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 21:49:29.238 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2340155042908387921.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 21:49:29.303 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar2340155042908387921.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 21:49:29.303 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2340155042908387921.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 21:49:29.345 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar2340155042908387921.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 21:49:29.346 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2340155042908387921.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 21:49:29.390 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar2340155042908387921.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 21:49:29.391 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2340155042908387921.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 21:49:29.447 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar2340155042908387921.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 21:49:29.448 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2340155042908387921.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 21:49:29.502 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar2340155042908387921.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 21:49:29.503 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2340155042908387921.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 21:49:29.549 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar2340155042908387921.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 21:49:29.550 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2340155042908387921.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 21:49:29.607 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar2340155042908387921.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 21:49:29.608 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2340155042908387921.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 21:49:29.733 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar2340155042908387921.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 21:49:29.734 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2340155042908387921.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 21:49:29.765 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar2340155042908387921.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 21:49:29.766 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2340155042908387921.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 21:49:29.804 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar2340155042908387921.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 21:49:29.804 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2340155042908387921.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 21:49:29.835 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar2340155042908387921.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 21:49:29.835 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2340155042908387921.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 21:49:29.868 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar2340155042908387921.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 21:49:29.869 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2340155042908387921.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 21:49:29.900 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar2340155042908387921.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 21:49:29.900 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2340155042908387921.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 21:49:29.930 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar2340155042908387921.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 21:49:29.931 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2340155042908387921.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 21:49:29.963 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar2340155042908387921.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 21:49:29.964 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2340155042908387921.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 21:49:29.990 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar2340155042908387921.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 21:49:29.990 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2340155042908387921.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 21:49:30.035 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar2340155042908387921.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 21:49:30.036 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2340155042908387921.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 21:49:30.065 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar2340155042908387921.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 21:49:30.066 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2340155042908387921.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 21:49:30.104 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar2340155042908387921.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 21:49:30.105 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2340155042908387921.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 21:49:30.149 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar2340155042908387921.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 21:49:30.149 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2340155042908387921.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 21:49:30.180 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar2340155042908387921.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 21:49:30.181 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2340155042908387921.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 21:49:30.212 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar2340155042908387921.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 21:49:30.213 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2340155042908387921.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 21:49:30.243 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar2340155042908387921.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 21:49:30.244 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2340155042908387921.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 21:49:30.278 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar2340155042908387921.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 21:49:30.279 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2340155042908387921.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 21:49:30.311 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar2340155042908387921.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 21:49:30.312 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2340155042908387921.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 21:49:30.343 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar2340155042908387921.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 21:49:30.343 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2340155042908387921.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 21:49:30.379 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar2340155042908387921.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 21:49:30.379 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2340155042908387921.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 21:49:30.418 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar2340155042908387921.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 21:49:30.419 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2340155042908387921.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 21:49:30.452 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar2340155042908387921.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 21:49:30.453 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2340155042908387921.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 21:49:30.485 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar2340155042908387921.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 21:49:30.486 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2340155042908387921.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 21:49:30.524 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar2340155042908387921.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 21:49:30.525 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2340155042908387921.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 21:49:30.554 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar2340155042908387921.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 21:49:30.555 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2340155042908387921.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 21:49:30.586 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar2340155042908387921.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 21:49:30.587 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2340155042908387921.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 21:49:30.621 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar2340155042908387921.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 21:49:30.622 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2340155042908387921.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 21:49:30.660 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar2340155042908387921.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 21:49:30.661 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2340155042908387921.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 21:49:30.690 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar2340155042908387921.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 21:49:30.691 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2340155042908387921.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 21:49:30.722 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar2340155042908387921.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 21:49:30.723 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2340155042908387921.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 21:49:30.753 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar2340155042908387921.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 21:49:30.754 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2340155042908387921.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 21:49:30.788 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar2340155042908387921.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 21:49:30.788 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2340155042908387921.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 21:49:30.821 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar2340155042908387921.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 21:49:30.822 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2340155042908387921.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
** Write a test suite: 1 called: 1 to improve: false
** Write a test suite: 2 called: 2 to improve: false
** Write a test suite: 3 called: 3 to improve: false
** Write a test suite: 4 called: 4 to improve: false
** Write a test suite: 5 called: 5 to improve: false
** Write a test suite: 6 called: 6 to improve: false
** Write a test suite: 7 called: 7 to improve: false
** Write a test suite: 8 called: 8 to improve: false
** Write a test suite: 9 called: 9 to improve: false
** Write a test suite: 10 called: 10 to improve: false
** Write a test suite: 11 called: 11 to improve: false
** Write a test suite: 12 called: 12 to improve: false
** Write a test suite: 13 called: 13 to improve: false
** Write a test suite: 14 called: 14 to improve: false
** Write a test suite: 15 called: 15 to improve: false
** Write a test suite: 16 called: 16 to improve: false
** Write a test suite: 17 called: 17 to improve: false
** Write a test suite: 18 called: 18 to improve: false
** Write a test suite: 19 called: 19 to improve: false
** Write a test suite: 20 called: 20 to improve: false
** Write a test suite: 21 called: 21 to improve: false
** Write a test suite: 22 called: 22 to improve: false
** Write a test suite: 23 called: 23 to improve: false
** Write a test suite: 24 called: 24 to improve: false
** Write a test suite: 25 called: 25 to improve: false
** Write a test suite: 26 called: 26 to improve: false
** Write a test suite: 27 called: 27 to improve: false
** Write a test suite: 28 called: 28 to improve: false
** Write a test suite: 29 called: 29 to improve: false
** Write a test suite: 30 called: 30 to improve: false
** Write a test suite: 31 called: 31 to improve: false
** Write a test suite: 32 called: 32 to improve: false
** Write a test suite: 33 called: 33 to improve: false
** Write a test suite: 34 called: 34 to improve: false
** Write a test suite: 35 called: 35 to improve: false
** Write a test suite: 36 called: 36 to improve: false
** Write a test suite: 37 called: 37 to improve: false
** Write a test suite: 38 called: 38 to improve: false
** Write a test suite: 39 called: 39 to improve: false
** Write a test suite: 40 called: 40 to improve: false
** Write a test suite: 41 called: 41 to improve: false
** Write a test suite: 42 called: 42 to improve: false
** Write a test suite: 43 called: 43 to improve: false
** Write a test suite: 44 called: 44 to improve: false
** Write a test suite: 45 called: 45 to improve: false
** Write a test suite: 46 called: 46 to improve: false
** Write a test suite: 47 called: 47 to improve: false
** Write a test suite: 48 called: 48 to improve: false
** Write a test suite: 49 called: 49 to improve: false
** Write a test suite: 50 called: 50 to improve: false
** Write a test suite: 51 called: 51 to improve: false
** Write a test suite: 52 called: 52 to improve: false
** Write a test suite: 53 called: 53 to improve: false
** Write a test suite: 54 called: 54 to improve: false
** Write a test suite: 55 called: 55 to improve: false
** Write a test suite: 56 called: 56 to improve: false
** Write a test suite: 57 called: 57 to improve: false
** Write a test suite: 58 called: 58 to improve: false
[MASTER] 21:49:31.522 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar2340155042908387921.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 21:49:31.523 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2340155042908387921.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
** Write a test suite: 1 called: 1 to improve: false
** Write a test suite: 2 called: 2 to improve: false
** Write a test suite: 3 called: 3 to improve: false
** Write a test suite: 4 called: 4 to improve: false
** Write a test suite: 5 called: 5 to improve: false
** Write a test suite: 6 called: 6 to improve: false
** Write a test suite: 7 called: 7 to improve: false
** Write a test suite: 8 called: 8 to improve: false
** Write a test suite: 9 called: 9 to improve: false
** Write a test suite: 10 called: 10 to improve: false
** Write a test suite: 11 called: 11 to improve: false
** Write a test suite: 12 called: 12 to improve: false
** Write a test suite: 13 called: 13 to improve: false
** Write a test suite: 14 called: 14 to improve: false
** Write a test suite: 15 called: 15 to improve: false
** Write a test suite: 16 called: 16 to improve: false
** Write a test suite: 17 called: 17 to improve: false
** Write a test suite: 18 called: 18 to improve: false
** Write a test suite: 19 called: 19 to improve: false
** Write a test suite: 20 called: 20 to improve: false
** Write a test suite: 21 called: 21 to improve: false
** Write a test suite: 22 called: 22 to improve: false
** Write a test suite: 23 called: 23 to improve: false
** Write a test suite: 24 called: 24 to improve: false
** Write a test suite: 25 called: 25 to improve: false
** Write a test suite: 26 called: 26 to improve: false
** Write a test suite: 27 called: 27 to improve: false
** Write a test suite: 28 called: 28 to improve: false
** Write a test suite: 29 called: 29 to improve: false
** Write a test suite: 30 called: 30 to improve: false
** Write a test suite: 31 called: 31 to improve: false
** Write a test suite: 32 called: 32 to improve: false
** Write a test suite: 33 called: 33 to improve: false
** Write a test suite: 34 called: 34 to improve: false
** Write a test suite: 35 called: 35 to improve: false
** Write a test suite: 36 called: 36 to improve: false
** Write a test suite: 37 called: 37 to improve: false
** Write a test suite: 38 called: 38 to improve: false
** Write a test suite: 39 called: 39 to improve: false
** Write a test suite: 40 called: 40 to improve: false
** Write a test suite: 41 called: 41 to improve: false
** Write a test suite: 42 called: 42 to improve: false
** Write a test suite: 43 called: 43 to improve: false
** Write a test suite: 44 called: 44 to improve: false
** Write a test suite: 45 called: 45 to improve: false
** Write a test suite: 46 called: 46 to improve: false
** Write a test suite: 47 called: 47 to improve: false
** Write a test suite: 48 called: 48 to improve: false
** Write a test suite: 49 called: 49 to improve: false
** Write a test suite: 50 called: 50 to improve: false
** Write a test suite: 51 called: 51 to improve: false
** Write a test suite: 52 called: 52 to improve: false
** Write a test suite: 53 called: 53 to improve: false
** Write a test suite: 54 called: 54 to improve: false
** Write a test suite: 55 called: 55 to improve: false
** Write a test suite: 56 called: 56 to improve: false
** Write a test suite: 57 called: 57 to improve: false
** Write a test suite: 58 called: 58 to improve: false
[MASTER] 21:49:32.883 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/tmp/EvoSuite_pathingJar2340155042908387921.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 21:49:32.883 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2340155042908387921.jar
* Writing tests to file
[MASTER] 21:49:32.884 [logback-1] WARN  TimeController - Already entered in phase: JUNIT_CHECK. This will mess up the timing calculations.
* Writing JUnit test case 'Parser_ESTest' to evosuite-tests
** Write a test suite: 4 called: 0 to improve: false
** Write a test suite: 11 called: 1 to improve: false
** Write a test suite: 12 called: 2 to improve: false
** Write a test suite: 14 called: 3 to improve: false
** Write a test suite: 16 called: 4 to improve: false
** Write a test suite: 22 called: 5 to improve: false
** Write a test suite: 23 called: 6 to improve: false
** Write a test suite: 32 called: 7 to improve: false
** Write a test suite: 43 called: 8 to improve: false
** Write a test suite: 47 called: 9 to improve: false
** Write a test suite: 49 called: 10 to improve: false
** Write a test suite: 53 called: 11 to improve: false
* Writing JUnit test case 'Parser_Original_ESTest' to evosuite-tests
** Write a test suite: 0 called: 0 to improve: false
** Write a test suite: 1 called: 1 to improve: false
** Write a test suite: 2 called: 2 to improve: false
** Write a test suite: 3 called: 3 to improve: false
** Write a test suite: 4 called: 4 to improve: false
** Write a test suite: 5 called: 5 to improve: false
** Write a test suite: 6 called: 6 to improve: false
** Write a test suite: 7 called: 7 to improve: false
** Write a test suite: 8 called: 8 to improve: false
** Write a test suite: 9 called: 9 to improve: false
** Write a test suite: 10 called: 10 to improve: false
** Write a test suite: 11 called: 11 to improve: false
** Write a test suite: 12 called: 12 to improve: false
** Write a test suite: 13 called: 13 to improve: false
** Write a test suite: 14 called: 14 to improve: false
** Write a test suite: 15 called: 15 to improve: false
** Write a test suite: 16 called: 16 to improve: false
** Write a test suite: 17 called: 17 to improve: false
** Write a test suite: 18 called: 18 to improve: false
** Write a test suite: 19 called: 19 to improve: false
** Write a test suite: 20 called: 20 to improve: false
** Write a test suite: 21 called: 21 to improve: false
** Write a test suite: 22 called: 22 to improve: false
** Write a test suite: 23 called: 23 to improve: false
** Write a test suite: 24 called: 24 to improve: false
** Write a test suite: 25 called: 25 to improve: false
** Write a test suite: 26 called: 26 to improve: false
** Write a test suite: 27 called: 27 to improve: false
** Write a test suite: 28 called: 28 to improve: false
** Write a test suite: 29 called: 29 to improve: false
** Write a test suite: 30 called: 30 to improve: false
** Write a test suite: 31 called: 31 to improve: false
** Write a test suite: 32 called: 32 to improve: false
** Write a test suite: 33 called: 33 to improve: false
** Write a test suite: 34 called: 34 to improve: false
** Write a test suite: 35 called: 35 to improve: false
** Write a test suite: 36 called: 36 to improve: false
** Write a test suite: 37 called: 37 to improve: false
** Write a test suite: 38 called: 38 to improve: false
** Write a test suite: 39 called: 39 to improve: false
** Write a test suite: 40 called: 40 to improve: false
** Write a test suite: 41 called: 41 to improve: false
** Write a test suite: 42 called: 42 to improve: false
** Write a test suite: 43 called: 43 to improve: false
** Write a test suite: 44 called: 44 to improve: false
** Write a test suite: 45 called: 45 to improve: false
** Write a test suite: 46 called: 46 to improve: false
** Write a test suite: 47 called: 47 to improve: false
** Write a test suite: 48 called: 48 to improve: false
** Write a test suite: 49 called: 49 to improve: false
** Write a test suite: 50 called: 50 to improve: false
** Write a test suite: 51 called: 51 to improve: false
** Write a test suite: 52 called: 52 to improve: false
** Write a test suite: 53 called: 53 to improve: false
* Done!

* Computation finished
