* EvoSuite 1.2.1-SNAPSHOT
* Going to generate test cases for class: com.yahoo.platform.yui.compressor.JavaScriptCompressor
* Starting Client-0
* Properties loaded from /home/ubuntu/UTestGen/Evaluation/getting_results/dataset/SF110/22_byuic/evosuite-files/evosuite.properties
* Connecting to master process on port 15780
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 23:19:56.177 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 23:19:56.181 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 23:19:56.181 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 23:19:56.189 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 23:19:56.189 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 23:19:56.191 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
* Finished analyzing classpath
* Generating tests for class com.yahoo.platform.yui.compressor.JavaScriptCompressor
* Test criteria:
  - Branch Coverage
  - Line Coverage
  - Method-Output Coverage
  - Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 1599
* Using seed 1709248793378
* Starting evolution
[Progress:>                             0%] [Cov:>                                  0%]* Initial Number of Goals in DynaMOSA = 143 / 1599
[Progress:>                             0%] [Cov:=================>                 50%][Progress:>                             1%] [Cov:==================>                54%][Progress:>                             1%] [Cov:==================>                54%][Progress:>                             1%] [Cov:==================>                54%][Progress:>                             2%] [Cov:==================>                54%][Progress:>                             2%] [Cov:==================>                54%][Progress:>                             3%] [Cov:==================>                54%][Progress:>                             3%] [Cov:==================>                54%][Progress:=>                            4%] [Cov:==================>                54%][Progress:=>                            4%] [Cov:===================>               55%][Progress:=>                            4%] [Cov:===================>               56%][Progress:=>                            5%] [Cov:===================>               56%][Progress:=>                            5%] [Cov:===================>               56%][Progress:=>                            5%] [Cov:===================>               56%][Progress:=>                            6%] [Cov:===================>               56%][Progress:=>                            6%] [Cov:===================>               56%][Progress:=>                            6%] [Cov:===================>               56%][Progress:==>                           7%] [Cov:===================>               56%][Progress:==>                           7%] [Cov:===================>               56%][Progress:==>                           7%] [Cov:===================>               56%][Progress:==>                           8%] [Cov:===================>               56%][Progress:==>                           8%] [Cov:===================>               56%][Progress:==>                           9%] [Cov:===================>               56%][Progress:==>                           9%] [Cov:===================>               56%][Progress:==>                           9%] [Cov:===================>               56%][Progress:===>                          10%] [Cov:===================>               56%][Progress:===>                          10%] [Cov:===================>               56%][Progress:===>                          10%] [Cov:===================>               56%][Progress:===>                          11%] [Cov:===================>               56%][Progress:===>                          11%] [Cov:===================>               56%][Progress:===>                          11%] [Cov:===================>               56%][Progress:===>                          12%] [Cov:===================>               56%][Progress:===>                          12%] [Cov:===================>               56%][Progress:===>                          12%] [Cov:===================>               56%][Progress:===>                          12%] [Cov:===================>               56%][Progress:===>                          13%] [Cov:===================>               56%][Progress:===>                          13%] [Cov:===================>               56%][Progress:===>                          13%] [Cov:===================>               56%][Progress:===>                          13%] [Cov:===================>               56%][Progress:====>                         14%] [Cov:===================>               56%][Progress:====>                         14%] [Cov:===================>               56%][Progress:====>                         14%] [Cov:===================>               56%][Progress:====>                         15%] [Cov:===================>               56%][Progress:====>                         15%] [Cov:===================>               56%][Progress:====>                         15%] [Cov:===================>               56%][Progress:====>                         16%] [Cov:===================>               56%][Progress:====>                         16%] [Cov:===================>               56%][Progress:====>                         16%] [Cov:===================>               56%][Progress:====>                         16%] [Cov:===================>               56%][Progress:=====>                        17%] [Cov:===================>               56%][Progress:=====>                        17%] [Cov:===================>               56%][Progress:=====>                        17%] [Cov:===================>               56%][Progress:=====>                        17%] [Cov:===================>               56%][Progress:=====>                        17%] [Cov:===================>               56%][Progress:=====>                        18%] [Cov:===================>               56%][Progress:=====>                        18%] [Cov:===================>               56%][Progress:=====>                        18%] [Cov:===================>               57%][Progress:=====>                        19%] [Cov:===================>               57%][Progress:=====>                        19%] [Cov:===================>               57%][Progress:=====>                        19%] [Cov:===================>               57%][Progress:=====>                        19%] [Cov:===================>               57%][Progress:=====>                        19%] [Cov:===================>               57%][Progress:======>                       20%] [Cov:===================>               57%][Progress:======>                       20%] [Cov:===================>               57%][Progress:======>                       20%] [Cov:===================>               57%][Progress:======>                       21%] [Cov:===================>               57%][Progress:======>                       21%] [Cov:===================>               57%][Progress:======>                       21%] [Cov:===================>               57%][Progress:======>                       21%] [Cov:===================>               57%][Progress:======>                       21%] [Cov:===================>               57%][Progress:======>                       22%] [Cov:===================>               57%][Progress:======>                       22%] [Cov:===================>               57%][Progress:======>                       22%] [Cov:===================>               57%][Progress:======>                       22%] [Cov:===================>               57%][Progress:======>                       23%] [Cov:===================>               57%][Progress:======>                       23%] [Cov:===================>               57%][Progress:======>                       23%] [Cov:===================>               57%][Progress:=======>                      24%] [Cov:===================>               57%][Progress:=======>                      24%] [Cov:===================>               57%][Progress:=======>                      24%] [Cov:===================>               57%][Progress:=======>                      24%] [Cov:===================>               57%][Progress:=======>                      25%] [Cov:===================>               57%][Progress:=======>                      25%] [Cov:===================>               57%][Progress:=======>                      25%] [Cov:===================>               57%][Progress:=======>                      26%] [Cov:===================>               57%][Progress:=======>                      26%] [Cov:===================>               57%][Progress:=======>                      26%] [Cov:===================>               57%][Progress:========>                     27%] [Cov:===================>               57%][Progress:========>                     27%] [Cov:===================>               57%][Progress:========>                     27%] [Cov:===================>               57%][Progress:========>                     27%] [Cov:===================>               57%][Progress:========>                     28%] [Cov:===================>               57%][Progress:========>                     28%] [Cov:===================>               57%][Progress:========>                     28%] [Cov:===================>               57%][Progress:========>                     29%] [Cov:===================>               57%][Progress:========>                     29%] [Cov:===================>               57%][Progress:========>                     29%] [Cov:===================>               57%][Progress:========>                     29%] [Cov:===================>               57%][Progress:=========>                    30%] [Cov:===================>               57%][Progress:=========>                    30%] [Cov:===================>               57%][Progress:=========>                    31%] [Cov:===================>               57%][Progress:=========>                    32%] [Cov:===================>               57%][Progress:=========>                    32%] [Cov:===================>               57%][Progress:=========>                    32%] [Cov:===================>               57%][Progress:=========>                    32%] [Cov:===================>               57%][Progress:=========>                    33%] [Cov:===================>               57%][Progress:=========>                    33%] [Cov:===================>               57%][Progress:=========>                    33%] [Cov:===================>               57%][Progress:==========>                   34%] [Cov:===================>               57%][Progress:==========>                   34%] [Cov:===================>               57%][Progress:==========>                   34%] [Cov:===================>               57%][Progress:==========>                   35%] [Cov:===================>               57%][Progress:==========>                   35%] [Cov:===================>               57%][Progress:==========>                   35%] [Cov:===================>               57%][Progress:==========>                   36%] [Cov:===================>               57%][Progress:==========>                   36%] [Cov:===================>               57%][Progress:==========>                   36%] [Cov:===================>               57%][Progress:==========>                   36%] [Cov:===================>               57%][Progress:===========>                  37%] [Cov:===================>               57%][Progress:===========>                  37%] [Cov:===================>               57%][Progress:===========>                  37%] [Cov:===================>               57%][Progress:===========>                  38%] [Cov:===================>               57%][Progress:===========>                  38%] [Cov:===================>               57%][Progress:===========>                  38%] [Cov:===================>               57%][Progress:===========>                  38%] [Cov:===================>               57%][Progress:===========>                  39%] [Cov:===================>               57%][Progress:===========>                  39%] [Cov:===================>               57%][Progress:===========>                  39%] [Cov:===================>               57%][Progress:===========>                  39%] [Cov:===================>               57%][Progress:============>                 40%] [Cov:===================>               57%][Progress:============>                 40%] [Cov:===================>               57%][Progress:============>                 40%] [Cov:===================>               57%][Progress:============>                 41%] [Cov:===================>               57%][Progress:============>                 41%] [Cov:===================>               57%][Progress:============>                 41%] [Cov:===================>               57%][Progress:============>                 41%] [Cov:===================>               57%][Progress:============>                 42%] [Cov:===================>               57%][Progress:============>                 42%] [Cov:===================>               57%][Progress:============>                 42%] [Cov:===================>               57%][Progress:============>                 43%] [Cov:===================>               57%][Progress:============>                 43%] [Cov:===================>               57%][MASTER] 23:20:40.184 [logback-1] WARN  TestCluster - Failed to check cache for java.util.List<E> : Type points to itself
[Progress:============>                 43%] [Cov:===================>               57%][Progress:============>                 43%] [Cov:===================>               57%][Progress:=============>                44%] [Cov:===================>               57%][Progress:=============>                45%] [Cov:===================>               57%][Progress:=============>                45%] [Cov:===================>               57%][Progress:=============>                46%] [Cov:===================>               57%][Progress:=============>                46%] [Cov:===================>               57%][Progress:=============>                46%] [Cov:===================>               57%][Progress:=============>                46%] [Cov:===================>               57%][Progress:=============>                46%] [Cov:===================>               57%][Progress:==============>               47%] [Cov:===================>               57%][Progress:==============>               47%] [Cov:===================>               57%][Progress:==============>               47%] [Cov:===================>               57%][Progress:==============>               47%] [Cov:===================>               57%][Progress:==============>               48%] [Cov:===================>               57%][Progress:==============>               48%] [Cov:===================>               57%][Progress:==============>               48%] [Cov:===================>               57%][Progress:==============>               48%] [Cov:===================>               57%][Progress:==============>               49%] [Cov:===================>               57%][Progress:==============>               49%] [Cov:===================>               57%][Progress:==============>               49%] [Cov:===================>               57%][Progress:==============>               49%] [Cov:===================>               57%][Progress:===============>              50%] [Cov:===================>               57%][Progress:===============>              50%] [Cov:===================>               57%][Progress:===============>              50%] [Cov:===================>               57%][Progress:===============>              50%] [Cov:===================>               57%][Progress:===============>              50%] [Cov:===================>               57%][Progress:===============>              51%] [Cov:===================>               57%][Progress:===============>              51%] [Cov:===================>               57%][Progress:===============>              51%] [Cov:===================>               57%][Progress:===============>              51%] [Cov:===================>               57%][Progress:===============>              52%] [Cov:===================>               57%][Progress:===============>              52%] [Cov:===================>               57%][Progress:===============>              52%] [Cov:====================>              59%][Progress:===============>              52%] [Cov:====================>              59%][Progress:===============>              53%] [Cov:====================>              59%][Progress:===============>              53%] [Cov:====================>              59%][Progress:===============>              53%] [Cov:====================>              59%][Progress:===============>              53%] [Cov:====================>              59%][Progress:================>             54%] [Cov:====================>              59%][Progress:================>             54%] [Cov:====================>              59%][Progress:================>             54%] [Cov:====================>              59%][Progress:================>             54%] [Cov:====================>              59%][Progress:================>             54%] [Cov:====================>              59%][Progress:================>             54%] [Cov:====================>              59%][Progress:================>             55%] [Cov:====================>              59%][Progress:================>             55%] [Cov:====================>              59%][Progress:================>             55%] [Cov:====================>              59%][Progress:================>             55%] [Cov:====================>              59%][Progress:================>             55%] [Cov:====================>              59%][Progress:================>             56%] [Cov:====================>              59%][Progress:================>             56%] [Cov:====================>              59%][Progress:================>             56%] [Cov:====================>              59%][Progress:================>             56%] [Cov:====================>              59%][Progress:=================>            57%] [Cov:====================>              59%][Progress:=================>            57%] [Cov:====================>              59%][Progress:=================>            57%] [Cov:====================>              59%][Progress:=================>            57%] [Cov:====================>              59%][Progress:=================>            58%] [Cov:====================>              59%][Progress:=================>            58%] [Cov:====================>              59%][Progress:=================>            58%] [Cov:====================>              59%][Progress:=================>            58%] [Cov:====================>              59%][Progress:=================>            58%] [Cov:====================>              59%][Progress:=================>            59%] [Cov:====================>              59%][Progress:=================>            59%] [Cov:====================>              59%][Progress:=================>            59%] [Cov:====================>              59%][Progress:=================>            59%] [Cov:====================>              59%][Progress:=================>            59%] [Cov:====================>              59%][Progress:==================>           60%] [Cov:====================>              59%][Progress:==================>           60%] [Cov:====================>              59%][Progress:==================>           60%] [Cov:====================>              59%][Progress:==================>           60%] [Cov:====================>              59%][Progress:==================>           61%] [Cov:====================>              59%][Progress:==================>           61%] [Cov:====================>              59%][Progress:==================>           61%] [Cov:====================>              59%][Progress:==================>           61%] [Cov:====================>              59%][Progress:==================>           61%] [Cov:====================>              59%][Progress:==================>           62%] [Cov:====================>              59%][Progress:==================>           62%] [Cov:====================>              59%][Progress:==================>           62%] [Cov:====================>              59%][Progress:==================>           62%] [Cov:====================>              59%][Progress:==================>           63%] [Cov:====================>              59%][Progress:==================>           63%] [Cov:====================>              59%][Progress:==================>           63%] [Cov:====================>              59%][Progress:==================>           63%] [Cov:====================>              59%][Progress:==================>           63%] [Cov:====================>              59%][Progress:===================>          64%] [Cov:====================>              59%][Progress:===================>          64%] [Cov:====================>              59%][Progress:===================>          64%] [Cov:====================>              59%][Progress:===================>          64%] [Cov:====================>              59%][Progress:===================>          65%] [Cov:====================>              59%][Progress:===================>          65%] [Cov:====================>              59%][Progress:===================>          65%] [Cov:====================>              59%][Progress:===================>          65%] [Cov:====================>              59%][Progress:===================>          65%] [Cov:====================>              59%][Progress:===================>          66%] [Cov:====================>              59%][Progress:===================>          66%] [Cov:====================>              59%][Progress:===================>          66%] [Cov:====================>              59%][Progress:===================>          66%] [Cov:====================>              59%][Progress:===================>          66%] [Cov:====================>              59%][Progress:====================>         67%] [Cov:====================>              59%][Progress:====================>         67%] [Cov:====================>              59%][Progress:====================>         67%] [Cov:====================>              59%][Progress:====================>         67%] [Cov:====================>              59%][Progress:====================>         68%] [Cov:====================>              59%][Progress:====================>         68%] [Cov:====================>              59%][Progress:====================>         68%] [Cov:====================>              59%][Progress:====================>         68%] [Cov:====================>              59%][Progress:====================>         68%] [Cov:====================>              59%][Progress:====================>         68%] [Cov:====================>              59%][Progress:====================>         69%] [Cov:====================>              59%][Progress:====================>         69%] [Cov:====================>              59%][Progress:====================>         69%] [Cov:====================>              59%][Progress:====================>         69%] [Cov:====================>              59%][Progress:=====================>        70%] [Cov:====================>              59%][Progress:=====================>        70%] [Cov:====================>              59%][Progress:=====================>        70%] [Cov:====================>              59%][Progress:=====================>        70%] [Cov:====================>              59%][Progress:=====================>        70%] [Cov:====================>              59%][Progress:=====================>        71%] [Cov:====================>              59%][Progress:=====================>        71%] [Cov:====================>              59%][Progress:=====================>        71%] [Cov:====================>              59%][Progress:=====================>        71%] [Cov:====================>              59%][Progress:=====================>        71%] [Cov:====================>              59%][Progress:=====================>        72%] [Cov:====================>              59%][Progress:=====================>        72%] [Cov:====================>              59%][Progress:=====================>        72%] [Cov:====================>              59%][Progress:=====================>        72%] [Cov:====================>              59%][Progress:=====================>        73%] [Cov:====================>              59%][Progress:=====================>        73%] [Cov:====================>              59%][Progress:=====================>        73%] [Cov:====================>              59%][Progress:=====================>        73%] [Cov:====================>              59%][Progress:=====================>        73%] [Cov:====================>              59%][Progress:======================>       74%] [Cov:====================>              59%][Progress:======================>       74%] [Cov:====================>              59%][Progress:======================>       74%] [Cov:====================>              59%][Progress:======================>       74%] [Cov:====================>              59%][Progress:======================>       74%] [Cov:====================>              59%][Progress:======================>       75%] [Cov:====================>              59%][Progress:======================>       75%] [Cov:====================>              59%][Progress:======================>       75%] [Cov:====================>              59%][Progress:======================>       75%] [Cov:====================>              59%][Progress:======================>       75%] [Cov:====================>              59%][Progress:======================>       76%] [Cov:====================>              59%][Progress:======================>       76%] [Cov:====================>              59%][Progress:======================>       76%] [Cov:====================>              59%][Progress:======================>       76%] [Cov:====================>              59%][Progress:=======================>      77%] [Cov:====================>              59%][Progress:=======================>      77%] [Cov:====================>              59%][Progress:=======================>      77%] [Cov:====================>              59%][Progress:=======================>      77%] [Cov:====================>              59%][Progress:=======================>      78%] [Cov:====================>              59%][Progress:=======================>      78%] [Cov:====================>              59%][Progress:=======================>      78%] [Cov:====================>              59%][Progress:=======================>      79%] [Cov:====================>              59%][Progress:=======================>      79%] [Cov:====================>              59%][Progress:=======================>      79%] [Cov:====================>              59%][Progress:=======================>      79%] [Cov:====================>              59%][Progress:=======================>      79%] [Cov:====================>              59%][Progress:========================>     80%] [Cov:====================>              59%][Progress:========================>     80%] [Cov:====================>              59%][Progress:========================>     80%] [Cov:====================>              59%][Progress:========================>     80%] [Cov:====================>              59%][Progress:========================>     81%] [Cov:====================>              59%][Progress:========================>     81%] [Cov:====================>              59%][Progress:========================>     81%] [Cov:====================>              59%][Progress:========================>     81%] [Cov:====================>              59%][Progress:========================>     81%] [Cov:====================>              59%][Progress:========================>     82%] [Cov:====================>              59%][Progress:========================>     82%] [Cov:====================>              59%][Progress:========================>     82%] [Cov:====================>              59%][Progress:========================>     82%] [Cov:====================>              59%][Progress:========================>     83%] [Cov:====================>              59%][Progress:========================>     83%] [Cov:====================>              59%][Progress:========================>     83%] [Cov:====================>              59%][Progress:========================>     83%] [Cov:====================>              59%][Progress:=========================>    84%] [Cov:====================>              59%][Progress:=========================>    84%] [Cov:====================>              59%][Progress:=========================>    84%] [Cov:====================>              59%][Progress:=========================>    84%] [Cov:====================>              59%][Progress:=========================>    85%] [Cov:====================>              59%][Progress:=========================>    85%] [Cov:====================>              59%][Progress:=========================>    85%] [Cov:====================>              59%][Progress:=========================>    86%] [Cov:====================>              59%][Progress:=========================>    86%] [Cov:====================>              59%][Progress:=========================>    86%] [Cov:====================>              59%][Progress:=========================>    86%] [Cov:====================>              59%][Progress:==========================>   87%] [Cov:====================>              59%][Progress:==========================>   87%] [Cov:====================>              59%][Progress:==========================>   87%] [Cov:====================>              59%][Progress:==========================>   88%] [Cov:====================>              59%][Progress:==========================>   88%] [Cov:====================>              59%][Progress:==========================>   88%] [Cov:====================>              59%][Progress:==========================>   88%] [Cov:====================>              59%][Progress:==========================>   89%] [Cov:====================>              59%][Progress:==========================>   89%] [Cov:====================>              59%][Progress:==========================>   89%] [Cov:====================>              59%][Progress:===========================>  90%] [Cov:====================>              59%][Progress:===========================>  90%] [Cov:====================>              59%][Progress:===========================>  90%] [Cov:====================>              59%][Progress:===========================>  90%] [Cov:====================>              59%][Progress:===========================>  90%] [Cov:====================>              59%][Progress:===========================>  91%] [Cov:====================>              59%][Progress:===========================>  91%] [Cov:====================>              59%][Progress:===========================>  91%] [Cov:====================>              59%][Progress:===========================>  91%] [Cov:====================>              59%][Progress:===========================>  92%] [Cov:====================>              59%][Progress:===========================>  92%] [Cov:====================>              59%][Progress:===========================>  92%] [Cov:====================>              59%][Progress:===========================>  92%] [Cov:====================>              59%][Progress:===========================>  93%] [Cov:====================>              59%][Progress:===========================>  93%] [Cov:====================>              59%][Progress:===========================>  93%] [Cov:====================>              59%][Progress:============================> 94%] [Cov:====================>              59%][Progress:============================> 94%] [Cov:====================>              59%][Progress:============================> 94%] [Cov:====================>              59%][Progress:============================> 94%] [Cov:====================>              59%][Progress:============================> 95%] [Cov:====================>              59%][Progress:============================> 95%] [Cov:====================>              59%][Progress:============================> 95%] [Cov:====================>              59%][Progress:============================> 95%] [Cov:====================>              59%][Progress:============================> 96%] [Cov:====================>              59%][Progress:============================> 96%] [Cov:====================>              59%][Progress:============================> 96%] [Cov:====================>              59%][Progress:============================> 96%] [Cov:====================>              59%][Progress:=============================>97%] [Cov:====================>              59%][Progress:=============================>97%] [Cov:====================>              59%][Progress:=============================>97%] [Cov:====================>              59%][Progress:=============================>97%] [Cov:====================>              59%][Progress:=============================>98%] [Cov:====================>              59%][Progress:=============================>98%] [Cov:====================>              59%][Progress:=============================>98%] [Cov:====================>              59%][Progress:=============================>99%] [Cov:====================>              59%][Progress:=============================>99%] [Cov:====================>              59%][Progress:=============================>99%] [Cov:====================>              59%][Progress:=============================>99%] [Cov:====================>              59%][Progress:==============================100%] [Cov:====================>              59%][Progress:==============================100%] [Cov:====================>              59%][Progress:==============================100%] [Cov:====================>              59%][Progress:==============================100%] [Cov:====================>              59%]
* Search finished after 102s and 380 generations, 200672 statements, best individual has fitness: 1075.0
* Generated before the refinement 8 tests with total length 44
statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("8")
statement is: org.mozilla.javascript.tools.ToolErrorReporter(Z)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.tools.ToolErrorReporter
statement code is: ToolErrorReporter toolErrorReporter = new ToolErrorReporter(true)
statement is: com.yahoo.platform.yui.compressor.JavaScriptCompressor(Ljava/io/Reader;Lorg/mozilla/javascript/ErrorReporter;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.yahoo.platform.yui.compressor.JavaScriptCompressor
statement code is: JavaScriptCompressor javaScriptCompressor = new JavaScriptCompressor(arg0, arg1)
statement is: java.io.StringWriter(I)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringWriter
statement code is: StringWriter stringWriter = new StringWriter(140)
statement is: compress(Ljava/io/Writer;IZZZZ)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: javaScriptCompressor.compress(arg0, 4, true, true, true, true)
test data is: StringReader stringReader = new StringReader("8");
ToolErrorReporter toolErrorReporter = new ToolErrorReporter(true);
JavaScriptCompressor javaScriptCompressor = new JavaScriptCompressor(stringReader, toolErrorReporter);
StringWriter stringWriter = new StringWriter(140);
javaScriptCompressor.compress(stringWriter, 4, true, true, true, true);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("8");
        ToolErrorReporter toolErrorReporter = new ToolErrorReporter(true);
        JavaScriptCompressor javaScriptCompressor = new JavaScriptCompressor(stringReader, toolErrorReporter);
        StringWriter stringWriter = new StringWriter(140);
        javaScriptCompressor.compress(stringWriter, 4, true, true, true, true);
    }
}
statement is: StringReader stringReader = new StringReader("8"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: ToolErrorReporter toolErrorReporter = new ToolErrorReporter(true), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaScriptCompressor javaScriptCompressor = new JavaScriptCompressor(stringReader, toolErrorReporter), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: StringWriter stringWriter = new StringWriter(140), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaScriptCompressor.compress(stringWriter, 4, true, true, true, true), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaScriptCompressor.compress(stringWriter, 4, true, true, true, true) target is: javaScriptCompressor method is: compress(StringWriter,int,boolean,boolean,boolean,boolean)
source statement: com.yahoo.platform.yui.compressor.JavaScriptCompressor(Ljava/io/Reader;Lorg/mozilla/javascript/ErrorReporter;)V callee: VariableReference: Statement 2, type com.yahoo.platform.yui.compressor.JavaScriptCompressorindex is: 4
Matched Method is: compress(Ljava/io/Writer;IZZZZ)V
TestCase is: String string = "8";
StringReader stringReader = new StringReader(string);
boolean _boolean = true;
ToolErrorReporter toolErrorReporter = new ToolErrorReporter(_boolean);
JavaScriptCompressor javaScriptCompressor = new JavaScriptCompressor(stringReader, toolErrorReporter);
int _int = 140;
StringWriter stringWriter = new StringWriter(_int);
int _int = 4;
boolean _boolean = true;
boolean _boolean = true;
boolean _boolean = true;
boolean _boolean = true;
((JavaScriptCompressor) _boolean).compress(stringWriter, _int, _boolean, _boolean, _boolean, _boolean);

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("eval")
statement is: org.evosuite.runtime.mock.java.io.MockPrintStream(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.evosuite.runtime.mock.java.io.MockPrintStream
statement code is: MockPrintStream mockPrintStream = new MockPrintStream("error reporter")
statement is: org.mozilla.javascript.tools.ToolErrorReporter(ZLjava/io/PrintStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.tools.ToolErrorReporter
statement code is: ToolErrorReporter toolErrorReporter = new ToolErrorReporter(true, arg1)
statement is: com.yahoo.platform.yui.compressor.JavaScriptCompressor(Ljava/io/Reader;Lorg/mozilla/javascript/ErrorReporter;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.yahoo.platform.yui.compressor.JavaScriptCompressor
statement code is: JavaScriptCompressor javaScriptCompressor = new JavaScriptCompressor(arg0, arg1)
statement is: org.evosuite.runtime.mock.java.io.MockPrintWriter(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.evosuite.runtime.mock.java.io.MockPrintWriter
statement code is: MockPrintWriter mockPrintWriter = new MockPrintWriter("error reporter")
statement is: compress(Ljava/io/Writer;IZZZZ)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: javaScriptCompressor.compress(arg0, 1, true, true, false, false)
test data is: StringReader stringReader = new StringReader("eval");
MockPrintStream mockPrintStream = new MockPrintStream("error reporter");
ToolErrorReporter toolErrorReporter = new ToolErrorReporter(true, mockPrintStream);
JavaScriptCompressor javaScriptCompressor = new JavaScriptCompressor(stringReader, toolErrorReporter);
MockPrintWriter mockPrintWriter = new MockPrintWriter("error reporter");
javaScriptCompressor.compress(mockPrintWriter, 1, true, true, false, false);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("var x = 5;");
        MockPrintStream mockPrintStream = new MockPrintStream("error reporter");
        ToolErrorReporter toolErrorReporter = new ToolErrorReporter(true, mockPrintStream);
        JavaScriptCompressor javaScriptCompressor = new JavaScriptCompressor(stringReader, toolErrorReporter);
        MockPrintWriter mockPrintWriter = new MockPrintWriter("error reporter");
        javaScriptCompressor.compress(mockPrintWriter, 1, true, true, false, false);
    }
}
statement is: StringReader stringReader = new StringReader("var x = 5;"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: MockPrintStream mockPrintStream = new MockPrintStream("error reporter"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: ToolErrorReporter toolErrorReporter = new ToolErrorReporter(true, mockPrintStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaScriptCompressor javaScriptCompressor = new JavaScriptCompressor(stringReader, toolErrorReporter), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: MockPrintWriter mockPrintWriter = new MockPrintWriter("error reporter"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaScriptCompressor.compress(mockPrintWriter, 1, true, true, false, false), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaScriptCompressor.compress(mockPrintWriter, 1, true, true, false, false) target is: javaScriptCompressor method is: compress(MockPrintWriter,int,boolean,boolean,boolean,boolean)
source statement: com.yahoo.platform.yui.compressor.JavaScriptCompressor(Ljava/io/Reader;Lorg/mozilla/javascript/ErrorReporter;)V callee: VariableReference: Statement 3, type com.yahoo.platform.yui.compressor.JavaScriptCompressorindex is: 6
Matched Method is: compress(Ljava/io/Writer;IZZZZ)V
TestCase is: String string = "var x = 5;";
StringReader stringReader = new StringReader(string);
String string = "error reporter";
MockPrintStream mockPrintStream = new MockPrintStream(string);
boolean _boolean = true;
ToolErrorReporter toolErrorReporter = new ToolErrorReporter(_boolean, mockPrintStream);
JavaScriptCompressor javaScriptCompressor = new JavaScriptCompressor(stringReader, toolErrorReporter);
String string = "error reporter";
MockPrintWriter mockPrintWriter = new MockPrintWriter(string);
int _int = 1;
boolean _boolean = true;
boolean _boolean = true;
boolean _boolean = false;
boolean _boolean = false;
((JavaScriptCompressor) mockPrintStream).compress(mockPrintWriter, _int, _boolean, _boolean, _boolean, _boolean);

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("eval")
statement is: org.mozilla.javascript.tools.ToolErrorReporter(Z)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.tools.ToolErrorReporter
statement code is: ToolErrorReporter toolErrorReporter = new ToolErrorReporter(false)
statement is: com.yahoo.platform.yui.compressor.JavaScriptCompressor(Ljava/io/Reader;Lorg/mozilla/javascript/ErrorReporter;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.yahoo.platform.yui.compressor.JavaScriptCompressor
statement code is: JavaScriptCompressor javaScriptCompressor = new JavaScriptCompressor(arg0, arg1)
statement is: java.io.StringWriter()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringWriter
statement code is: StringWriter stringWriter = new StringWriter()
statement is: compress(Ljava/io/Writer;IZZZZ)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: javaScriptCompressor.compress(arg0, 11, false, false, false, false)
test data is: StringReader stringReader = new StringReader("eval");
ToolErrorReporter toolErrorReporter = new ToolErrorReporter(false);
JavaScriptCompressor javaScriptCompressor = new JavaScriptCompressor(stringReader, toolErrorReporter);
StringWriter stringWriter = new StringWriter();
javaScriptCompressor.compress(stringWriter, 11, false, false, false, false);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("eval('var a = 5; var b = 7;');");
        ToolErrorReporter toolErrorReporter = new ToolErrorReporter(false);
        JavaScriptCompressor javaScriptCompressor = new JavaScriptCompressor(stringReader, toolErrorReporter);
        StringWriter stringWriter = new StringWriter();
        javaScriptCompressor.compress(stringWriter, 11, false, false, false, false);
    }
}
statement is: StringReader stringReader = new StringReader("eval('var a = 5; var b = 7;');"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: ToolErrorReporter toolErrorReporter = new ToolErrorReporter(false), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaScriptCompressor javaScriptCompressor = new JavaScriptCompressor(stringReader, toolErrorReporter), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: StringWriter stringWriter = new StringWriter(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaScriptCompressor.compress(stringWriter, 11, false, false, false, false), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaScriptCompressor.compress(stringWriter, 11, false, false, false, false) target is: javaScriptCompressor method is: compress(StringWriter,int,boolean,boolean,boolean,boolean)
source statement: com.yahoo.platform.yui.compressor.JavaScriptCompressor(Ljava/io/Reader;Lorg/mozilla/javascript/ErrorReporter;)V callee: VariableReference: Statement 2, type com.yahoo.platform.yui.compressor.JavaScriptCompressorindex is: 4
Matched Method is: compress(Ljava/io/Writer;IZZZZ)V
TestCase is: String string = "eval('var a = 5; var b = 7;');";
StringReader stringReader = new StringReader(string);
boolean _boolean = false;
ToolErrorReporter toolErrorReporter = new ToolErrorReporter(_boolean);
JavaScriptCompressor javaScriptCompressor = new JavaScriptCompressor(stringReader, toolErrorReporter);
StringWriter stringWriter = new StringWriter();
int _int = 11;
boolean _boolean = false;
boolean _boolean = false;
boolean _boolean = false;
boolean _boolean = false;
((JavaScriptCompressor) _boolean).compress(stringWriter, _int, _boolean, _boolean, _boolean, _boolean);

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("org.mozilla.javascript.ScriptableObject")
statement is: org.mozilla.javascript.tools.ToolErrorReporter(Z)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.tools.ToolErrorReporter
statement code is: ToolErrorReporter toolErrorReporter = new ToolErrorReporter(false)
statement is: com.yahoo.platform.yui.compressor.JavaScriptCompressor(Ljava/io/Reader;Lorg/mozilla/javascript/ErrorReporter;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.yahoo.platform.yui.compressor.JavaScriptCompressor
statement code is: JavaScriptCompressor javaScriptCompressor = new JavaScriptCompressor(arg0, arg1)
statement is: org.evosuite.runtime.mock.java.io.MockPrintStream(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.evosuite.runtime.mock.java.io.MockPrintStream
statement code is: MockPrintStream mockPrintStream = new MockPrintStream("org.mozilla.javascript.ScriptableObject")
statement is: org.evosuite.runtime.mock.java.io.MockPrintWriter(Ljava/io/OutputStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.evosuite.runtime.mock.java.io.MockPrintWriter
statement code is: MockPrintWriter mockPrintWriter = new MockPrintWriter(arg0)
statement is: compress(Ljava/io/Writer;IZZZZ)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: javaScriptCompressor.compress(arg0, 1584, true, false, false, false)
test data is: StringReader stringReader = new StringReader("org.mozilla.javascript.ScriptableObject");
ToolErrorReporter toolErrorReporter = new ToolErrorReporter(false);
JavaScriptCompressor javaScriptCompressor = new JavaScriptCompressor(stringReader, toolErrorReporter);
MockPrintStream mockPrintStream = new MockPrintStream("org.mozilla.javascript.ScriptableObject");
MockPrintWriter mockPrintWriter = new MockPrintWriter(mockPrintStream);
javaScriptCompressor.compress(mockPrintWriter, 1584, true, false, false, false);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("org.mozilla.javascript.ScriptableObject");
        ToolErrorReporter toolErrorReporter = new ToolErrorReporter(false);
        JavaScriptCompressor javaScriptCompressor = new JavaScriptCompressor(stringReader, toolErrorReporter);
        MockPrintStream mockPrintStream = new MockPrintStream("org.mozilla.javascript.ScriptableObject");
        MockPrintWriter mockPrintWriter = new MockPrintWriter(mockPrintStream);
        javaScriptCompressor.compress(mockPrintWriter, 1584, true, false, false, false);
    }
}
statement is: StringReader stringReader = new StringReader("org.mozilla.javascript.ScriptableObject"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: ToolErrorReporter toolErrorReporter = new ToolErrorReporter(false), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaScriptCompressor javaScriptCompressor = new JavaScriptCompressor(stringReader, toolErrorReporter), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: MockPrintStream mockPrintStream = new MockPrintStream("org.mozilla.javascript.ScriptableObject"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: MockPrintWriter mockPrintWriter = new MockPrintWriter(mockPrintStream), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaScriptCompressor.compress(mockPrintWriter, 1584, true, false, false, false), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaScriptCompressor.compress(mockPrintWriter, 1584, true, false, false, false) target is: javaScriptCompressor method is: compress(MockPrintWriter,int,boolean,boolean,boolean,boolean)
source statement: com.yahoo.platform.yui.compressor.JavaScriptCompressor(Ljava/io/Reader;Lorg/mozilla/javascript/ErrorReporter;)V callee: VariableReference: Statement 2, type com.yahoo.platform.yui.compressor.JavaScriptCompressorindex is: 4
Matched Method is: compress(Ljava/io/Writer;IZZZZ)V
TestCase is: String string = "org.mozilla.javascript.ScriptableObject";
StringReader stringReader = new StringReader(string);
boolean _boolean = false;
ToolErrorReporter toolErrorReporter = new ToolErrorReporter(_boolean);
JavaScriptCompressor javaScriptCompressor = new JavaScriptCompressor(stringReader, toolErrorReporter);
String string = "org.mozilla.javascript.ScriptableObject";
MockPrintStream mockPrintStream = new MockPrintStream(string);
MockPrintWriter mockPrintWriter = new MockPrintWriter(mockPrintStream);
int _int = 1584;
boolean _boolean = true;
boolean _boolean = false;
boolean _boolean = false;
boolean _boolean = false;
((JavaScriptCompressor) _boolean).compress(mockPrintWriter, _int, _boolean, _boolean, _boolean, _boolean);

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("o+okE3,KiDw$")
statement is: org.mozilla.javascript.tools.ToolErrorReporter(Z)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.tools.ToolErrorReporter
statement code is: ToolErrorReporter toolErrorReporter = new ToolErrorReporter(true)
statement is: com.yahoo.platform.yui.compressor.JavaScriptCompressor(Ljava/io/Reader;Lorg/mozilla/javascript/ErrorReporter;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.yahoo.platform.yui.compressor.JavaScriptCompressor
statement code is: JavaScriptCompressor javaScriptCompressor = new JavaScriptCompressor(arg0, arg1)
statement is: org.evosuite.runtime.mock.java.io.MockPrintWriter(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.evosuite.runtime.mock.java.io.MockPrintWriter
statement code is: MockPrintWriter mockPrintWriter = new MockPrintWriter("msg.no.paren.catch")
statement is: compress(Ljava/io/Writer;IZZZZ)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: javaScriptCompressor.compress(arg0, 110, true, false, true, false)
statement is: java.io.StringWriter(I)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringWriter
statement code is: StringWriter stringWriter = new StringWriter(0)
statement is: compress(Ljava/io/Writer;IZZZZ)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: javaScriptCompressor.compress(arg0, 8, true, true, true, true)
test data is: StringReader stringReader = new StringReader("o+okE3,KiDw$");
ToolErrorReporter toolErrorReporter = new ToolErrorReporter(true);
JavaScriptCompressor javaScriptCompressor = new JavaScriptCompressor(stringReader, toolErrorReporter);
MockPrintWriter mockPrintWriter = new MockPrintWriter("msg.no.paren.catch");
javaScriptCompressor.compress(mockPrintWriter, 110, true, false, true, false);
StringWriter stringWriter = new StringWriter(0);
javaScriptCompressor.compress(stringWriter, 8, true, true, true, true);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("A complex JavaScript code.");
        ToolErrorReporter toolErrorReporter = new ToolErrorReporter(true);
        JavaScriptCompressor javaScriptCompressor = new JavaScriptCompressor(stringReader, toolErrorReporter);
        MockPrintWriter mockPrintWriter = new MockPrintWriter("A message indicating that the code has been compressed successfully.");
        javaScriptCompressor.compress(mockPrintWriter, 110, true, false, true, false);
        StringWriter stringWriter = new StringWriter(0);
        javaScriptCompressor.compress(stringWriter, 8, true, true, true, true);
    }
}
statement is: StringReader stringReader = new StringReader("A complex JavaScript code."), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: ToolErrorReporter toolErrorReporter = new ToolErrorReporter(true), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaScriptCompressor javaScriptCompressor = new JavaScriptCompressor(stringReader, toolErrorReporter), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: MockPrintWriter mockPrintWriter = new MockPrintWriter("A message indicating that the code has been compressed successfully."), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaScriptCompressor.compress(mockPrintWriter, 110, true, false, true, false), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaScriptCompressor.compress(mockPrintWriter, 110, true, false, true, false) target is: javaScriptCompressor method is: compress(MockPrintWriter,int,boolean,boolean,boolean,boolean)
source statement: com.yahoo.platform.yui.compressor.JavaScriptCompressor(Ljava/io/Reader;Lorg/mozilla/javascript/ErrorReporter;)V callee: VariableReference: Statement 2, type com.yahoo.platform.yui.compressor.JavaScriptCompressorindex is: 4
source statement: com.yahoo.platform.yui.compressor.JavaScriptCompressor(Ljava/io/Reader;Lorg/mozilla/javascript/ErrorReporter;)V callee: VariableReference: Statement 2, type com.yahoo.platform.yui.compressor.JavaScriptCompressorindex is: 4
Matched Method is: compress(Ljava/io/Writer;IZZZZ)V
statement is: StringWriter stringWriter = new StringWriter(0), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaScriptCompressor.compress(stringWriter, 8, true, true, true, true), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaScriptCompressor.compress(stringWriter, 8, true, true, true, true) target is: javaScriptCompressor method is: compress(StringWriter,int,boolean,boolean,boolean,boolean)
source statement: com.yahoo.platform.yui.compressor.JavaScriptCompressor(Ljava/io/Reader;Lorg/mozilla/javascript/ErrorReporter;)V callee: VariableReference: Statement 2, type com.yahoo.platform.yui.compressor.JavaScriptCompressorindex is: 4
source statement: com.yahoo.platform.yui.compressor.JavaScriptCompressor(Ljava/io/Reader;Lorg/mozilla/javascript/ErrorReporter;)V callee: VariableReference: Statement 2, type com.yahoo.platform.yui.compressor.JavaScriptCompressorindex is: 4
Matched Method is: compress(Ljava/io/Writer;IZZZZ)V
TestCase is: String string = "A complex JavaScript code.";
StringReader stringReader = new StringReader(string);
boolean _boolean = true;
ToolErrorReporter toolErrorReporter = new ToolErrorReporter(_boolean);
JavaScriptCompressor javaScriptCompressor = new JavaScriptCompressor(stringReader, toolErrorReporter);
String string = "A message indicating that the code has been compressed successfully.";
MockPrintWriter mockPrintWriter = new MockPrintWriter(string);
int _int = 110;
boolean _boolean = true;
boolean _boolean = false;
boolean _boolean = true;
boolean _boolean = false;
((JavaScriptCompressor) _boolean).compress(mockPrintWriter, _int, _boolean, _boolean, _boolean, _boolean);
int _int = 0;
StringWriter stringWriter = new StringWriter(_int);
int _int = 8;
boolean _boolean = true;
boolean _boolean = true;
boolean _boolean = true;
boolean _boolean = true;
((JavaScriptCompressor) _boolean).compress(stringWriter, _int, _boolean, _boolean, _boolean, _boolean);

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("NaN")
statement is: org.mozilla.javascript.tools.ToolErrorReporter(Z)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.tools.ToolErrorReporter
statement code is: ToolErrorReporter toolErrorReporter = new ToolErrorReporter(true)
statement is: com.yahoo.platform.yui.compressor.JavaScriptCompressor(Ljava/io/Reader;Lorg/mozilla/javascript/ErrorReporter;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.yahoo.platform.yui.compressor.JavaScriptCompressor
statement code is: JavaScriptCompressor javaScriptCompressor = new JavaScriptCompressor(arg0, arg1)
statement is: java.io.StringWriter(I)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringWriter
statement code is: StringWriter stringWriter = new StringWriter(2)
statement is: compress(Ljava/io/Writer;IZZZZ)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: javaScriptCompressor.compress(arg0, 130, true, true, false, false)
test data is: StringReader stringReader = new StringReader("NaN");
ToolErrorReporter toolErrorReporter = new ToolErrorReporter(true);
JavaScriptCompressor javaScriptCompressor = new JavaScriptCompressor(stringReader, toolErrorReporter);
StringWriter stringWriter = new StringWriter(2);
javaScriptCompressor.compress(stringWriter, 130, true, true, false, false);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("Infinity");
        ToolErrorReporter toolErrorReporter = new ToolErrorReporter(true);
        JavaScriptCompressor javaScriptCompressor = new JavaScriptCompressor(stringReader, toolErrorReporter);
        StringWriter stringWriter = new StringWriter(2);
        javaScriptCompressor.compress(stringWriter, 130, true, true, false, false);
    }
}
statement is: StringReader stringReader = new StringReader("Infinity"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: ToolErrorReporter toolErrorReporter = new ToolErrorReporter(true), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaScriptCompressor javaScriptCompressor = new JavaScriptCompressor(stringReader, toolErrorReporter), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: StringWriter stringWriter = new StringWriter(2), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaScriptCompressor.compress(stringWriter, 130, true, true, false, false), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaScriptCompressor.compress(stringWriter, 130, true, true, false, false) target is: javaScriptCompressor method is: compress(StringWriter,int,boolean,boolean,boolean,boolean)
source statement: com.yahoo.platform.yui.compressor.JavaScriptCompressor(Ljava/io/Reader;Lorg/mozilla/javascript/ErrorReporter;)V callee: VariableReference: Statement 2, type com.yahoo.platform.yui.compressor.JavaScriptCompressorindex is: 4
Matched Method is: compress(Ljava/io/Writer;IZZZZ)V
TestCase is: String string = "Infinity";
StringReader stringReader = new StringReader(string);
boolean _boolean = true;
ToolErrorReporter toolErrorReporter = new ToolErrorReporter(_boolean);
JavaScriptCompressor javaScriptCompressor = new JavaScriptCompressor(stringReader, toolErrorReporter);
int _int = 2;
StringWriter stringWriter = new StringWriter(_int);
int _int = 130;
boolean _boolean = true;
boolean _boolean = true;
boolean _boolean = false;
boolean _boolean = false;
((JavaScriptCompressor) _boolean).compress(stringWriter, _int, _boolean, _boolean, _boolean, _boolean);

statement is: org.mozilla.javascript.tools.ToolErrorReporter(Z)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.tools.ToolErrorReporter
statement code is: ToolErrorReporter toolErrorReporter = new ToolErrorReporter(false)
statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("fals-$")
statement is: java.io.StringWriter()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringWriter
statement code is: StringWriter stringWriter = new StringWriter()
statement is: com.yahoo.platform.yui.compressor.JavaScriptCompressor(Ljava/io/Reader;Lorg/mozilla/javascript/ErrorReporter;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.yahoo.platform.yui.compressor.JavaScriptCompressor
statement code is: JavaScriptCompressor javaScriptCompressor = new JavaScriptCompressor(arg0, arg1)
statement is: compress(Ljava/io/Writer;IZZZZ)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: javaScriptCompressor.compress(arg0, 104, false, false, false, false)
test data is: ToolErrorReporter toolErrorReporter = new ToolErrorReporter(false);
StringReader stringReader = new StringReader("fals-$");
StringWriter stringWriter = new StringWriter();
JavaScriptCompressor javaScriptCompressor = new JavaScriptCompressor(stringReader, toolErrorReporter);
javaScriptCompressor.compress(stringWriter, 104, false, false, false, false);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        ToolErrorReporter toolErrorReporter = new ToolErrorReporter(false);
        StringReader stringReader = new StringReader("fals-$");
        StringWriter stringWriter = new StringWriter();
        JavaScriptCompressor javaScriptCompressor = new JavaScriptCompressor(stringReader, toolErrorReporter);
        javaScriptCompressor.compress(stringWriter, 104, false, false, false, false);
    }
}
statement is: ToolErrorReporter toolErrorReporter = new ToolErrorReporter(false), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: StringReader stringReader = new StringReader("fals-$"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: StringWriter stringWriter = new StringWriter(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaScriptCompressor javaScriptCompressor = new JavaScriptCompressor(stringReader, toolErrorReporter), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaScriptCompressor.compress(stringWriter, 104, false, false, false, false), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaScriptCompressor.compress(stringWriter, 104, false, false, false, false) target is: javaScriptCompressor method is: compress(StringWriter,int,boolean,boolean,boolean,boolean)
source statement: com.yahoo.platform.yui.compressor.JavaScriptCompressor(Ljava/io/Reader;Lorg/mozilla/javascript/ErrorReporter;)V callee: VariableReference: Statement 3, type com.yahoo.platform.yui.compressor.JavaScriptCompressorindex is: 5
Matched Method is: compress(Ljava/io/Writer;IZZZZ)V
TestCase is: boolean _boolean = false;
ToolErrorReporter toolErrorReporter = new ToolErrorReporter(_boolean);
String string = "fals-$";
StringReader stringReader = new StringReader(string);
StringWriter stringWriter = new StringWriter();
JavaScriptCompressor javaScriptCompressor = new JavaScriptCompressor(stringReader, toolErrorReporter);
int _int = 104;
boolean _boolean = false;
boolean _boolean = false;
boolean _boolean = false;
boolean _boolean = false;
((JavaScriptCompressor) stringReader).compress(stringWriter, _int, _boolean, _boolean, _boolean, _boolean);

statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("debugger")
statement is: org.mozilla.javascript.tools.ToolErrorReporter(Z)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.tools.ToolErrorReporter
statement code is: ToolErrorReporter toolErrorReporter = new ToolErrorReporter(false)
statement is: java.io.StringWriter()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringWriter
statement code is: StringWriter stringWriter = new StringWriter()
statement is: com.yahoo.platform.yui.compressor.JavaScriptCompressor(Ljava/io/Reader;Lorg/mozilla/javascript/ErrorReporter;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.yahoo.platform.yui.compressor.JavaScriptCompressor
statement code is: JavaScriptCompressor javaScriptCompressor = new JavaScriptCompressor(arg0, arg1)
statement is: compress(Ljava/io/Writer;IZZZZ)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: javaScriptCompressor.compress(arg0, (-1611907647), false, false, false, false)
test data is: StringReader stringReader = new StringReader("debugger");
ToolErrorReporter toolErrorReporter = new ToolErrorReporter(false);
StringWriter stringWriter = new StringWriter();
JavaScriptCompressor javaScriptCompressor = new JavaScriptCompressor(stringReader, toolErrorReporter);
javaScriptCompressor.compress(stringWriter, (-1611907647), false, false, false, false);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        StringReader stringReader = new StringReader("debugger");
        ToolErrorReporter toolErrorReporter = new ToolErrorReporter(false);
        StringWriter stringWriter = new StringWriter();
        JavaScriptCompressor javaScriptCompressor = new JavaScriptCompressor(stringReader, toolErrorReporter);
        javaScriptCompressor.compress(stringWriter, 10, false, false, false, false);
    }
}
statement is: StringReader stringReader = new StringReader("debugger"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: ToolErrorReporter toolErrorReporter = new ToolErrorReporter(false), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: StringWriter stringWriter = new StringWriter(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: JavaScriptCompressor javaScriptCompressor = new JavaScriptCompressor(stringReader, toolErrorReporter), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: javaScriptCompressor.compress(stringWriter, 10, false, false, false, false), class spoon.support.reflect.code.CtInvocationImpl
invocation is: javaScriptCompressor.compress(stringWriter, 10, false, false, false, false) target is: javaScriptCompressor method is: compress(StringWriter,int,boolean,boolean,boolean,boolean)
source statement: com.yahoo.platform.yui.compressor.JavaScriptCompressor(Ljava/io/Reader;Lorg/mozilla/javascript/ErrorReporter;)V callee: VariableReference: Statement 3, type com.yahoo.platform.yui.compressor.JavaScriptCompressorindex is: 5
Matched Method is: compress(Ljava/io/Writer;IZZZZ)V
TestCase is: String string = "debugger";
StringReader stringReader = new StringReader(string);
boolean _boolean = false;
ToolErrorReporter toolErrorReporter = new ToolErrorReporter(_boolean);
StringWriter stringWriter = new StringWriter();
JavaScriptCompressor javaScriptCompressor = new JavaScriptCompressor(stringReader, toolErrorReporter);
int _int = 10;
boolean _boolean = false;
boolean _boolean = false;
boolean _boolean = false;
boolean _boolean = false;
((JavaScriptCompressor) toolErrorReporter).compress(stringWriter, _int, _boolean, _boolean, _boolean, _boolean);

* test suite isTestSuite: 16
Test 0: 
StringReader stringReader = new StringReader("8");
ToolErrorReporter toolErrorReporter = new ToolErrorReporter(true);
JavaScriptCompressor javaScriptCompressor = new JavaScriptCompressor(stringReader, toolErrorReporter);
StringWriter stringWriter = new StringWriter(140);
javaScriptCompressor.compress(stringWriter, 4, true, true, true, true);
Test 1: 
StringReader stringReader = new StringReader("eval");
MockPrintStream mockPrintStream = new MockPrintStream("error reporter");
ToolErrorReporter toolErrorReporter = new ToolErrorReporter(true, mockPrintStream);
JavaScriptCompressor javaScriptCompressor = new JavaScriptCompressor(stringReader, toolErrorReporter);
MockPrintWriter mockPrintWriter = new MockPrintWriter("error reporter");
javaScriptCompressor.compress(mockPrintWriter, 1, true, true, false, false);
Test 2: 
StringReader stringReader = new StringReader("eval");
ToolErrorReporter toolErrorReporter = new ToolErrorReporter(false);
JavaScriptCompressor javaScriptCompressor = new JavaScriptCompressor(stringReader, toolErrorReporter);
StringWriter stringWriter = new StringWriter();
javaScriptCompressor.compress(stringWriter, 11, false, false, false, false);
Test 3: 
StringReader stringReader = new StringReader("org.mozilla.javascript.ScriptableObject");
ToolErrorReporter toolErrorReporter = new ToolErrorReporter(false);
JavaScriptCompressor javaScriptCompressor = new JavaScriptCompressor(stringReader, toolErrorReporter);
MockPrintStream mockPrintStream = new MockPrintStream("org.mozilla.javascript.ScriptableObject");
MockPrintWriter mockPrintWriter = new MockPrintWriter(mockPrintStream);
javaScriptCompressor.compress(mockPrintWriter, 1584, true, false, false, false);
Test 4: 
StringReader stringReader = new StringReader("o+okE3,KiDw$");
ToolErrorReporter toolErrorReporter = new ToolErrorReporter(true);
JavaScriptCompressor javaScriptCompressor = new JavaScriptCompressor(stringReader, toolErrorReporter);
MockPrintWriter mockPrintWriter = new MockPrintWriter("msg.no.paren.catch");
javaScriptCompressor.compress(mockPrintWriter, 110, true, false, true, false);
StringWriter stringWriter = new StringWriter(0);
javaScriptCompressor.compress(stringWriter, 8, true, true, true, true);
Test 5: 
StringReader stringReader = new StringReader("NaN");
ToolErrorReporter toolErrorReporter = new ToolErrorReporter(true);
JavaScriptCompressor javaScriptCompressor = new JavaScriptCompressor(stringReader, toolErrorReporter);
StringWriter stringWriter = new StringWriter(2);
javaScriptCompressor.compress(stringWriter, 130, true, true, false, false);
Test 6: 
ToolErrorReporter toolErrorReporter = new ToolErrorReporter(false);
StringReader stringReader = new StringReader("fals-$");
StringWriter stringWriter = new StringWriter();
JavaScriptCompressor javaScriptCompressor = new JavaScriptCompressor(stringReader, toolErrorReporter);
javaScriptCompressor.compress(stringWriter, 104, false, false, false, false);
Test 7: 
StringReader stringReader = new StringReader("debugger");
ToolErrorReporter toolErrorReporter = new ToolErrorReporter(false);
StringWriter stringWriter = new StringWriter();
JavaScriptCompressor javaScriptCompressor = new JavaScriptCompressor(stringReader, toolErrorReporter);
javaScriptCompressor.compress(stringWriter, (-1611907647), false, false, false, false);
Test 8: 
StringReader stringReader = new StringReader("8");
ToolErrorReporter toolErrorReporter = new ToolErrorReporter(true);
JavaScriptCompressor javaScriptCompressor = new JavaScriptCompressor(stringReader, toolErrorReporter);
StringWriter stringWriter = new StringWriter(140);
((JavaScriptCompressor)true).compress(stringWriter, 4, true, true, true, true);

Test 9: 
StringReader stringReader = new StringReader("var x = 5;");
MockPrintStream mockPrintStream = new MockPrintStream("error reporter");
ToolErrorReporter toolErrorReporter = new ToolErrorReporter(true, mockPrintStream);
JavaScriptCompressor javaScriptCompressor = new JavaScriptCompressor(stringReader, toolErrorReporter);
MockPrintWriter mockPrintWriter = new MockPrintWriter("error reporter");
((JavaScriptCompressor) mockPrintStream).compress(mockPrintWriter, 1, true, true, false, false);

Test 10: 
StringReader stringReader = new StringReader("eval('var a = 5; var b = 7;');");
ToolErrorReporter toolErrorReporter = new ToolErrorReporter(false);
JavaScriptCompressor javaScriptCompressor = new JavaScriptCompressor(stringReader, toolErrorReporter);
StringWriter stringWriter = new StringWriter();
((JavaScriptCompressor)false).compress(stringWriter, 11, false, false, false, false);

Test 11: 
StringReader stringReader = new StringReader("org.mozilla.javascript.ScriptableObject");
ToolErrorReporter toolErrorReporter = new ToolErrorReporter(false);
JavaScriptCompressor javaScriptCompressor = new JavaScriptCompressor(stringReader, toolErrorReporter);
MockPrintStream mockPrintStream = new MockPrintStream("org.mozilla.javascript.ScriptableObject");
MockPrintWriter mockPrintWriter = new MockPrintWriter(mockPrintStream);
((JavaScriptCompressor)false).compress(mockPrintWriter, 1584, true, false, false, false);

Test 12: 
StringReader stringReader = new StringReader("A complex JavaScript code.");
boolean _boolean = true;
ToolErrorReporter toolErrorReporter = new ToolErrorReporter(true);
JavaScriptCompressor javaScriptCompressor = new JavaScriptCompressor(stringReader, toolErrorReporter);
String string = "A message indicating that the code has been compressed successfully.";
MockPrintWriter mockPrintWriter = new MockPrintWriter(string);
int _int = 110;
boolean _boolean = true;
boolean _boolean = false;
boolean _boolean = true;
boolean _boolean = false;
((JavaScriptCompressor) _boolean).compress(mockPrintWriter, _int, _boolean, _boolean, _boolean, _boolean);
int _int = 0;
StringWriter stringWriter = new StringWriter(_int);
int _int = 8;
boolean _boolean = true;
boolean _boolean = true;
boolean _boolean = true;
boolean _boolean = true;
((JavaScriptCompressor) _boolean).compress(stringWriter, _int, _boolean, _boolean, _boolean, _boolean);

Test 13: 
StringReader stringReader = new StringReader("Infinity");
ToolErrorReporter toolErrorReporter = new ToolErrorReporter(true);
JavaScriptCompressor javaScriptCompressor = new JavaScriptCompressor(stringReader, toolErrorReporter);
StringWriter stringWriter = new StringWriter(2);
((JavaScriptCompressor)true).compress(stringWriter, 130, true, true, false, false);

Test 14: 
ToolErrorReporter toolErrorReporter = new ToolErrorReporter(false);
StringReader stringReader = new StringReader("fals-$");
StringWriter stringWriter = new StringWriter();
JavaScriptCompressor javaScriptCompressor = new JavaScriptCompressor(stringReader, toolErrorReporter);
((JavaScriptCompressor) stringReader).compress(stringWriter, 104, false, false, false, false);

Test 15: 
StringReader stringReader = new StringReader("debugger");
ToolErrorReporter toolErrorReporter = new ToolErrorReporter(false);
StringWriter stringWriter = new StringWriter();
JavaScriptCompressor javaScriptCompressor = new JavaScriptCompressor(stringReader, toolErrorReporter);
((JavaScriptCompressor) toolErrorReporter).compress(stringWriter, 10, false, false, false, false);


* Generated after the refinement and before minimization 16 tests with total length 101
* test suite isTestSuite: 16
Test 0: 
StringReader stringReader = new StringReader("8");
ToolErrorReporter toolErrorReporter = new ToolErrorReporter(true);
JavaScriptCompressor javaScriptCompressor = new JavaScriptCompressor(stringReader, toolErrorReporter);
StringWriter stringWriter = new StringWriter(140);
javaScriptCompressor.compress(stringWriter, 4, true, true, true, true);
Test 1: 
StringReader stringReader = new StringReader("eval");
MockPrintStream mockPrintStream = new MockPrintStream("error reporter");
ToolErrorReporter toolErrorReporter = new ToolErrorReporter(true, mockPrintStream);
JavaScriptCompressor javaScriptCompressor = new JavaScriptCompressor(stringReader, toolErrorReporter);
MockPrintWriter mockPrintWriter = new MockPrintWriter("error reporter");
javaScriptCompressor.compress(mockPrintWriter, 1, true, true, false, false);
Test 2: 
StringReader stringReader = new StringReader("eval");
ToolErrorReporter toolErrorReporter = new ToolErrorReporter(false);
JavaScriptCompressor javaScriptCompressor = new JavaScriptCompressor(stringReader, toolErrorReporter);
StringWriter stringWriter = new StringWriter();
javaScriptCompressor.compress(stringWriter, 11, false, false, false, false);
Test 3: 
StringReader stringReader = new StringReader("org.mozilla.javascript.ScriptableObject");
ToolErrorReporter toolErrorReporter = new ToolErrorReporter(false);
JavaScriptCompressor javaScriptCompressor = new JavaScriptCompressor(stringReader, toolErrorReporter);
MockPrintStream mockPrintStream = new MockPrintStream("org.mozilla.javascript.ScriptableObject");
MockPrintWriter mockPrintWriter = new MockPrintWriter(mockPrintStream);
javaScriptCompressor.compress(mockPrintWriter, 1584, true, false, false, false);
Test 4: 
StringReader stringReader = new StringReader("o+okE3,KiDw$");
ToolErrorReporter toolErrorReporter = new ToolErrorReporter(true);
JavaScriptCompressor javaScriptCompressor = new JavaScriptCompressor(stringReader, toolErrorReporter);
MockPrintWriter mockPrintWriter = new MockPrintWriter("msg.no.paren.catch");
javaScriptCompressor.compress(mockPrintWriter, 110, true, false, true, false);
StringWriter stringWriter = new StringWriter(0);
javaScriptCompressor.compress(stringWriter, 8, true, true, true, true);
Test 5: 
StringReader stringReader = new StringReader("NaN");
ToolErrorReporter toolErrorReporter = new ToolErrorReporter(true);
JavaScriptCompressor javaScriptCompressor = new JavaScriptCompressor(stringReader, toolErrorReporter);
StringWriter stringWriter = new StringWriter(2);
javaScriptCompressor.compress(stringWriter, 130, true, true, false, false);
Test 6: 
ToolErrorReporter toolErrorReporter = new ToolErrorReporter(false);
StringReader stringReader = new StringReader("fals-$");
StringWriter stringWriter = new StringWriter();
JavaScriptCompressor javaScriptCompressor = new JavaScriptCompressor(stringReader, toolErrorReporter);
javaScriptCompressor.compress(stringWriter, 104, false, false, false, false);
Test 7: 
StringReader stringReader = new StringReader("debugger");
ToolErrorReporter toolErrorReporter = new ToolErrorReporter(false);
StringWriter stringWriter = new StringWriter();
JavaScriptCompressor javaScriptCompressor = new JavaScriptCompressor(stringReader, toolErrorReporter);
javaScriptCompressor.compress(stringWriter, (-1611907647), false, false, false, false);
Test 8: 
StringReader stringReader = new StringReader("8");
ToolErrorReporter toolErrorReporter = new ToolErrorReporter(true);
JavaScriptCompressor javaScriptCompressor = new JavaScriptCompressor(stringReader, toolErrorReporter);
StringWriter stringWriter = new StringWriter(140);
((JavaScriptCompressor)true).compress(stringWriter, 4, true, true, true, true);

Test 9: 
StringReader stringReader = new StringReader("var x = 5;");
MockPrintStream mockPrintStream = new MockPrintStream("error reporter");
ToolErrorReporter toolErrorReporter = new ToolErrorReporter(true, mockPrintStream);
JavaScriptCompressor javaScriptCompressor = new JavaScriptCompressor(stringReader, toolErrorReporter);
MockPrintWriter mockPrintWriter = new MockPrintWriter("error reporter");
((JavaScriptCompressor) mockPrintStream).compress(mockPrintWriter, 1, true, true, false, false);

Test 10: 
StringReader stringReader = new StringReader("eval('var a = 5; var b = 7;');");
ToolErrorReporter toolErrorReporter = new ToolErrorReporter(false);
JavaScriptCompressor javaScriptCompressor = new JavaScriptCompressor(stringReader, toolErrorReporter);
StringWriter stringWriter = new StringWriter();
((JavaScriptCompressor)false).compress(stringWriter, 11, false, false, false, false);

Test 11: 
StringReader stringReader = new StringReader("org.mozilla.javascript.ScriptableObject");
ToolErrorReporter toolErrorReporter = new ToolErrorReporter(false);
JavaScriptCompressor javaScriptCompressor = new JavaScriptCompressor(stringReader, toolErrorReporter);
MockPrintStream mockPrintStream = new MockPrintStream("org.mozilla.javascript.ScriptableObject");
MockPrintWriter mockPrintWriter = new MockPrintWriter(mockPrintStream);
((JavaScriptCompressor)false).compress(mockPrintWriter, 1584, true, false, false, false);

Test 12: 
StringReader stringReader = new StringReader("A complex JavaScript code.");
boolean _boolean = true;
ToolErrorReporter toolErrorReporter = new ToolErrorReporter(true);
JavaScriptCompressor javaScriptCompressor = new JavaScriptCompressor(stringReader, toolErrorReporter);
String string = "A message indicating that the code has been compressed successfully.";
MockPrintWriter mockPrintWriter = new MockPrintWriter(string);
int _int = 110;
boolean _boolean = true;
boolean _boolean = false;
boolean _boolean = true;
boolean _boolean = false;
((JavaScriptCompressor) _boolean).compress(mockPrintWriter, _int, _boolean, _boolean, _boolean, _boolean);
int _int = 0;
StringWriter stringWriter = new StringWriter(_int);
int _int = 8;
boolean _boolean = true;
boolean _boolean = true;
boolean _boolean = true;
boolean _boolean = true;
((JavaScriptCompressor) _boolean).compress(stringWriter, _int, _boolean, _boolean, _boolean, _boolean);

Test 13: 
StringReader stringReader = new StringReader("Infinity");
ToolErrorReporter toolErrorReporter = new ToolErrorReporter(true);
JavaScriptCompressor javaScriptCompressor = new JavaScriptCompressor(stringReader, toolErrorReporter);
StringWriter stringWriter = new StringWriter(2);
((JavaScriptCompressor)true).compress(stringWriter, 130, true, true, false, false);

Test 14: 
ToolErrorReporter toolErrorReporter = new ToolErrorReporter(false);
StringReader stringReader = new StringReader("fals-$");
StringWriter stringWriter = new StringWriter();
JavaScriptCompressor javaScriptCompressor = new JavaScriptCompressor(stringReader, toolErrorReporter);
((JavaScriptCompressor) stringReader).compress(stringWriter, 104, false, false, false, false);

Test 15: 
StringReader stringReader = new StringReader("debugger");
ToolErrorReporter toolErrorReporter = new ToolErrorReporter(false);
StringWriter stringWriter = new StringWriter();
JavaScriptCompressor javaScriptCompressor = new JavaScriptCompressor(stringReader, toolErrorReporter);
((JavaScriptCompressor) toolErrorReporter).compress(stringWriter, 10, false, false, false, false);


* Minimizing test suite
* test suite isTestSuite: 9
Test 0: 
StringReader stringReader = new StringReader("8");
ToolErrorReporter toolErrorReporter = new ToolErrorReporter(true);
JavaScriptCompressor javaScriptCompressor = new JavaScriptCompressor(stringReader, toolErrorReporter);
StringWriter stringWriter = new StringWriter(140);
javaScriptCompressor.compress(stringWriter, 4, true, true, true, true);
Test 1: 
StringReader stringReader = new StringReader("eval('var a = 5; var b = 7;');");
ToolErrorReporter toolErrorReporter = new ToolErrorReporter(false);
JavaScriptCompressor javaScriptCompressor = new JavaScriptCompressor(stringReader, toolErrorReporter);
Test 2: 
StringReader stringReader = new StringReader("NaN");
ToolErrorReporter toolErrorReporter = new ToolErrorReporter(true);
JavaScriptCompressor javaScriptCompressor = new JavaScriptCompressor(stringReader, toolErrorReporter);
StringWriter stringWriter = new StringWriter(2);
javaScriptCompressor.compress(stringWriter, 130, true, true, false, false);
Test 3: 
StringReader stringReader = new StringReader("o+okE3,KiDw$");
ToolErrorReporter toolErrorReporter = new ToolErrorReporter(true);
JavaScriptCompressor javaScriptCompressor = new JavaScriptCompressor(stringReader, toolErrorReporter);
MockPrintWriter mockPrintWriter = new MockPrintWriter("msg.no.paren.catch");
javaScriptCompressor.compress(mockPrintWriter, 110, true, false, true, false);
StringWriter stringWriter = new StringWriter(0);
javaScriptCompressor.compress(stringWriter, 8, true, true, true, true);
Test 4: 
StringReader stringReader = new StringReader("eval");
ToolErrorReporter toolErrorReporter = new ToolErrorReporter(false);
JavaScriptCompressor javaScriptCompressor = new JavaScriptCompressor(stringReader, toolErrorReporter);
StringWriter stringWriter = new StringWriter();
javaScriptCompressor.compress(stringWriter, 11, false, false, false, false);
Test 5: 
StringReader stringReader = new StringReader("eval");
MockPrintStream mockPrintStream = new MockPrintStream("error reporter");
ToolErrorReporter toolErrorReporter = new ToolErrorReporter(true, mockPrintStream);
JavaScriptCompressor javaScriptCompressor = new JavaScriptCompressor(stringReader, toolErrorReporter);
MockPrintWriter mockPrintWriter = new MockPrintWriter("error reporter");
javaScriptCompressor.compress(mockPrintWriter, 1, true, true, false, false);
Test 6: 
StringReader stringReader = new StringReader("org.mozilla.javascript.ScriptableObject");
ToolErrorReporter toolErrorReporter = new ToolErrorReporter(false);
JavaScriptCompressor javaScriptCompressor = new JavaScriptCompressor(stringReader, toolErrorReporter);
MockPrintStream mockPrintStream = new MockPrintStream("org.mozilla.javascript.ScriptableObject");
MockPrintWriter mockPrintWriter = new MockPrintWriter(mockPrintStream);
javaScriptCompressor.compress(mockPrintWriter, 1584, true, false, false, false);
Test 7: 
ToolErrorReporter toolErrorReporter = new ToolErrorReporter(false);
StringReader stringReader = new StringReader("fals-$");
StringWriter stringWriter = new StringWriter();
JavaScriptCompressor javaScriptCompressor = new JavaScriptCompressor(stringReader, toolErrorReporter);
javaScriptCompressor.compress(stringWriter, 104, false, false, false, false);
Test 8: 
StringReader stringReader = new StringReader("debugger");
ToolErrorReporter toolErrorReporter = new ToolErrorReporter(false);
StringWriter stringWriter = new StringWriter();
JavaScriptCompressor javaScriptCompressor = new JavaScriptCompressor(stringReader, toolErrorReporter);
javaScriptCompressor.compress(stringWriter, (-1611907647), false, false, false, false);

* Going to analyze the coverage criteria
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 30%
* Total number of goals: 561
* Number of covered goals: 170
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 40%
* Total number of goals: 475
* Number of covered goals: 191
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 100% (no goals)
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 2
* Number of covered goals: 2
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 30%
* Total number of goals: 561
* Number of covered goals: 169
* Generated 9 tests with total length 47
* Resulting test suite's coverage: 60% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 15%
* Compiling and checking tests
Going to execute: removeTestsThatDoNotCompile
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: StringReader arg0 = new StringReader("eval('var a = 5; var b = 7;');");
ToolErrorReporter arg1 = new ToolErrorReporter(false);
JavaScriptCompressor javaScriptCompressor = new JavaScriptCompressor(arg0, arg1);

** It was a parseable test case! 
refined test name is: testEvaluateJavaScriptExpression
* Compiling Tests
refined test name is: testCompressValidJavaScriptExpression
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 23:22:24.067 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/tmp/EvoSuite_pathingJar1791582547281337895.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 23:22:24.090 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1791582547281337895.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 23:22:24.167 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/tmp/EvoSuite_pathingJar1791582547281337895.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 23:22:24.169 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar1791582547281337895.jar
* Writing tests to file
* Writing JUnit test case 'JavaScriptCompressor_ESTest' to evosuite-tests
** Write a test suite: 0 called: 0 to improve: false
* Done!

* Computation finished
