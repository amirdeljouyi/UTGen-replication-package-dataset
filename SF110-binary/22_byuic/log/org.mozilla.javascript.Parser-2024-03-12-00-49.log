* EvoSuite 1.0.0-SNAPSHOT
* Going to generate test cases for class: org.mozilla.javascript.Parser
* Starting Client-0
* Properties loaded from /home/roham/Results-Utestgen/dataset/SF110-new-res/22_byuic/evosuite-files/evosuite.properties
* Connecting to master process on port 5481
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
[MASTER] 00:49:21.523 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Consumer
[MASTER] 00:49:21.526 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Predicate
[MASTER] 00:49:21.527 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.UnaryOperator
[MASTER] 00:49:21.534 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiFunction
[MASTER] 00:49:21.535 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.Function
[MASTER] 00:49:21.536 [logback-1] WARN  InheritanceTree - Class not in inheritance graph: java.util.function.BiConsumer
* Finished analyzing classpath
* Generating tests for class org.mozilla.javascript.Parser
* Test criteria:
  - Branch Coverage
  - Line Coverage
  - Method-Output Coverage
  - Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 2777
* Using seed 1710204557702
* Starting evolution
[Progress:>                             0%] [Cov:>                                  0%]* Initial Number of Goals in DynaMOSA = 685 / 2777
[Progress:>                             0%] [Cov:=========>                         27%][Progress:>                             1%] [Cov:===========>                       32%][Progress:>                             1%] [Cov:===========>                       33%][Progress:>                             1%] [Cov:============>                      35%][Progress:>                             2%] [Cov:============>                      37%][Progress:>                             2%] [Cov:==============>                    40%][Progress:>                             2%] [Cov:==============>                    41%][Progress:>                             2%] [Cov:==============>                    42%][Progress:>                             3%] [Cov:==============>                    42%][Progress:>                             3%] [Cov:==============>                    42%][Progress:>                             3%] [Cov:===============>                   43%][Progress:>                             3%] [Cov:===============>                   43%][Progress:=>                            4%] [Cov:===============>                   43%][Progress:=>                            4%] [Cov:===============>                   44%][Progress:=>                            4%] [Cov:===============>                   45%][Progress:=>                            4%] [Cov:================>                  46%][Progress:=>                            5%] [Cov:================>                  46%][Progress:=>                            5%] [Cov:================>                  46%][Progress:=>                            5%] [Cov:================>                  47%][Progress:=>                            5%] [Cov:================>                  47%][Progress:=>                            6%] [Cov:================>                  47%][Progress:=>                            6%] [Cov:================>                  47%][Progress:=>                            6%] [Cov:================>                  47%][Progress:=>                            6%] [Cov:================>                  47%][Progress:=>                            6%] [Cov:================>                  47%][Progress:=>                            6%] [Cov:================>                  47%][Progress:==>                           7%] [Cov:================>                  48%][Progress:==>                           7%] [Cov:================>                  48%][Progress:==>                           7%] [Cov:================>                  48%][Progress:==>                           7%] [Cov:================>                  48%][Progress:==>                           7%] [Cov:================>                  48%][Progress:==>                           7%] [Cov:================>                  48%][Progress:==>                           7%] [Cov:================>                  48%][Progress:==>                           8%] [Cov:================>                  48%][Progress:==>                           8%] [Cov:================>                  48%][Progress:==>                           8%] [Cov:================>                  48%][Progress:==>                           8%] [Cov:================>                  48%][Progress:==>                           8%] [Cov:================>                  48%][Progress:==>                           8%] [Cov:================>                  48%][Progress:==>                           9%] [Cov:================>                  48%][Progress:==>                           9%] [Cov:================>                  48%][Progress:==>                           9%] [Cov:================>                  48%][Progress:==>                           9%] [Cov:================>                  48%][Progress:==>                           9%] [Cov:=================>                 49%][Progress:==>                           9%] [Cov:=================>                 49%][Progress:==>                           9%] [Cov:=================>                 49%][Progress:===>                          10%] [Cov:=================>                 49%][Progress:===>                          10%] [Cov:=================>                 49%][Progress:===>                          10%] [Cov:=================>                 49%][Progress:===>                          10%] [Cov:=================>                 49%][Progress:===>                          10%] [Cov:=================>                 49%][Progress:===>                          11%] [Cov:=================>                 49%][Progress:===>                          11%] [Cov:=================>                 49%][Progress:===>                          11%] [Cov:=================>                 49%][Progress:===>                          11%] [Cov:=================>                 49%][Progress:===>                          12%] [Cov:=================>                 49%][Progress:===>                          12%] [Cov:=================>                 49%][Progress:===>                          12%] [Cov:=================>                 49%][Progress:===>                          12%] [Cov:=================>                 49%][Progress:===>                          12%] [Cov:=================>                 49%][Progress:===>                          13%] [Cov:=================>                 49%][Progress:===>                          13%] [Cov:=================>                 49%][Progress:===>                          13%] [Cov:=================>                 49%][Progress:===>                          13%] [Cov:=================>                 49%][Progress:===>                          13%] [Cov:=================>                 49%][Progress:====>                         14%] [Cov:=================>                 49%][Progress:====>                         14%] [Cov:=================>                 49%][Progress:====>                         14%] [Cov:=================>                 49%][Progress:====>                         14%] [Cov:=================>                 49%][Progress:====>                         14%] [Cov:=================>                 49%][Progress:====>                         14%] [Cov:=================>                 49%][Progress:====>                         15%] [Cov:=================>                 49%][Progress:====>                         15%] [Cov:=================>                 49%][Progress:====>                         15%] [Cov:=================>                 49%][Progress:====>                         15%] [Cov:=================>                 49%][Progress:====>                         15%] [Cov:=================>                 49%][Progress:====>                         15%] [Cov:=================>                 49%][Progress:====>                         16%] [Cov:=================>                 49%][Progress:====>                         16%] [Cov:=================>                 49%][Progress:====>                         16%] [Cov:=================>                 49%][Progress:====>                         16%] [Cov:=================>                 49%][Progress:====>                         16%] [Cov:=================>                 49%][Progress:====>                         16%] [Cov:=================>                 49%][Progress:=====>                        17%] [Cov:=================>                 49%][Progress:=====>                        17%] [Cov:=================>                 49%][Progress:=====>                        17%] [Cov:=================>                 49%][Progress:=====>                        17%] [Cov:=================>                 49%][Progress:=====>                        17%] [Cov:=================>                 49%][Progress:=====>                        17%] [Cov:=================>                 49%][Progress:=====>                        18%] [Cov:=================>                 49%][Progress:=====>                        18%] [Cov:=================>                 49%][Progress:=====>                        18%] [Cov:=================>                 49%][Progress:=====>                        18%] [Cov:=================>                 49%][Progress:=====>                        18%] [Cov:=================>                 49%][Progress:=====>                        18%] [Cov:=================>                 49%][Progress:=====>                        18%] [Cov:=================>                 49%][Progress:=====>                        19%] [Cov:=================>                 49%][Progress:=====>                        19%] [Cov:=================>                 49%][Progress:=====>                        19%] [Cov:=================>                 49%][Progress:=====>                        19%] [Cov:=================>                 49%][Progress:=====>                        19%] [Cov:=================>                 49%][Progress:======>                       20%] [Cov:=================>                 49%][Progress:======>                       20%] [Cov:=================>                 49%][Progress:======>                       20%] [Cov:=================>                 49%][Progress:======>                       20%] [Cov:=================>                 49%][Progress:======>                       20%] [Cov:=================>                 49%][Progress:======>                       21%] [Cov:=================>                 49%][Progress:======>                       21%] [Cov:=================>                 49%][Progress:======>                       21%] [Cov:=================>                 49%][Progress:======>                       21%] [Cov:=================>                 49%][Progress:======>                       21%] [Cov:=================>                 49%][Progress:======>                       21%] [Cov:=================>                 49%][Progress:======>                       22%] [Cov:=================>                 50%][Progress:======>                       22%] [Cov:=================>                 50%][Progress:======>                       22%] [Cov:=================>                 50%][Progress:======>                       22%] [Cov:=================>                 50%][Progress:======>                       22%] [Cov:=================>                 50%][Progress:======>                       22%] [Cov:=================>                 50%][Progress:======>                       23%] [Cov:=================>                 50%][Progress:======>                       23%] [Cov:=================>                 50%][Progress:======>                       23%] [Cov:=================>                 50%][Progress:======>                       23%] [Cov:=================>                 50%][Progress:======>                       23%] [Cov:=================>                 50%][Progress:======>                       23%] [Cov:=================>                 50%][Progress:=======>                      24%] [Cov:=================>                 50%][Progress:=======>                      24%] [Cov:=================>                 50%][Progress:=======>                      24%] [Cov:=================>                 50%][Progress:=======>                      24%] [Cov:=================>                 50%][Progress:=======>                      24%] [Cov:=================>                 50%][Progress:=======>                      25%] [Cov:=================>                 50%][Progress:=======>                      25%] [Cov:=================>                 50%][Progress:=======>                      25%] [Cov:=================>                 50%][Progress:=======>                      25%] [Cov:=================>                 50%][Progress:=======>                      25%] [Cov:=================>                 50%][Progress:=======>                      25%] [Cov:=================>                 50%][Progress:=======>                      25%] [Cov:=================>                 51%][Progress:=======>                      26%] [Cov:=================>                 51%][Progress:=======>                      26%] [Cov:=================>                 51%][Progress:=======>                      26%] [Cov:=================>                 51%][Progress:=======>                      26%] [Cov:=================>                 51%][Progress:=======>                      26%] [Cov:=================>                 51%][Progress:=======>                      26%] [Cov:=================>                 51%][Progress:========>                     27%] [Cov:=================>                 51%][Progress:========>                     27%] [Cov:=================>                 51%][Progress:========>                     27%] [Cov:=================>                 51%][Progress:========>                     27%] [Cov:=================>                 51%][Progress:========>                     27%] [Cov:=================>                 51%][Progress:========>                     27%] [Cov:=================>                 51%][Progress:========>                     28%] [Cov:=================>                 51%][Progress:========>                     28%] [Cov:=================>                 51%][Progress:========>                     28%] [Cov:=================>                 51%][Progress:========>                     28%] [Cov:=================>                 51%][Progress:========>                     28%] [Cov:=================>                 51%][Progress:========>                     29%] [Cov:=================>                 51%][Progress:========>                     29%] [Cov:=================>                 51%][Progress:========>                     29%] [Cov:=================>                 51%][Progress:========>                     29%] [Cov:=================>                 51%][Progress:========>                     29%] [Cov:=================>                 51%][Progress:========>                     29%] [Cov:=================>                 51%][Progress:=========>                    30%] [Cov:=================>                 51%][Progress:=========>                    30%] [Cov:=================>                 51%][Progress:=========>                    30%] [Cov:=================>                 51%][Progress:=========>                    30%] [Cov:=================>                 51%][Progress:=========>                    30%] [Cov:=================>                 51%][Progress:=========>                    30%] [Cov:=================>                 51%][Progress:=========>                    31%] [Cov:=================>                 51%][Progress:=========>                    31%] [Cov:=================>                 51%][Progress:=========>                    31%] [Cov:=================>                 51%][Progress:=========>                    31%] [Cov:=================>                 51%][Progress:=========>                    31%] [Cov:=================>                 51%][Progress:=========>                    32%] [Cov:=================>                 51%][Progress:=========>                    32%] [Cov:=================>                 51%][Progress:=========>                    32%] [Cov:=================>                 51%][Progress:=========>                    32%] [Cov:=================>                 51%][Progress:=========>                    32%] [Cov:=================>                 51%][Progress:=========>                    32%] [Cov:=================>                 51%][Progress:=========>                    32%] [Cov:=================>                 51%][Progress:=========>                    33%] [Cov:=================>                 51%][Progress:=========>                    33%] [Cov:=================>                 51%][Progress:=========>                    33%] [Cov:=================>                 51%][Progress:=========>                    33%] [Cov:=================>                 51%][Progress:=========>                    33%] [Cov:=================>                 51%][Progress:=========>                    33%] [Cov:=================>                 51%][Progress:=========>                    33%] [Cov:=================>                 51%][Progress:==========>                   34%] [Cov:=================>                 51%][Progress:==========>                   34%] [Cov:=================>                 51%][Progress:==========>                   34%] [Cov:=================>                 51%][Progress:==========>                   34%] [Cov:=================>                 51%][Progress:==========>                   34%] [Cov:=================>                 51%][Progress:==========>                   34%] [Cov:=================>                 51%][Progress:==========>                   35%] [Cov:=================>                 51%][Progress:==========>                   35%] [Cov:=================>                 51%][Progress:==========>                   35%] [Cov:==================>                52%][Progress:==========>                   35%] [Cov:==================>                52%][Progress:==========>                   35%] [Cov:==================>                52%][Progress:==========>                   35%] [Cov:==================>                52%][Progress:==========>                   36%] [Cov:==================>                52%][Progress:==========>                   36%] [Cov:==================>                52%][Progress:==========>                   36%] [Cov:==================>                52%][Progress:==========>                   36%] [Cov:==================>                52%][Progress:==========>                   36%] [Cov:==================>                52%][Progress:==========>                   36%] [Cov:==================>                52%][Progress:==========>                   36%] [Cov:==================>                52%][Progress:===========>                  37%] [Cov:==================>                52%][Progress:===========>                  37%] [Cov:==================>                52%][Progress:===========>                  37%] [Cov:==================>                52%][Progress:===========>                  37%] [Cov:==================>                52%][Progress:===========>                  37%] [Cov:==================>                52%][Progress:===========>                  37%] [Cov:==================>                52%][Progress:===========>                  38%] [Cov:==================>                52%][Progress:===========>                  38%] [Cov:==================>                52%][Progress:===========>                  38%] [Cov:==================>                52%][Progress:===========>                  38%] [Cov:==================>                52%][Progress:===========>                  38%] [Cov:==================>                52%][Progress:===========>                  38%] [Cov:==================>                52%][Progress:===========>                  38%] [Cov:==================>                52%][Progress:===========>                  38%] [Cov:==================>                52%][Progress:===========>                  39%] [Cov:==================>                52%][Progress:===========>                  39%] [Cov:==================>                52%][Progress:===========>                  39%] [Cov:==================>                52%][Progress:===========>                  39%] [Cov:==================>                52%][Progress:===========>                  39%] [Cov:==================>                52%][Progress:===========>                  39%] [Cov:==================>                52%][Progress:===========>                  39%] [Cov:==================>                52%][Progress:===========>                  39%] [Cov:==================>                52%][Progress:============>                 40%] [Cov:==================>                52%][Progress:============>                 40%] [Cov:==================>                52%][Progress:============>                 40%] [Cov:==================>                52%][Progress:============>                 40%] [Cov:==================>                52%][Progress:============>                 40%] [Cov:==================>                52%][Progress:============>                 40%] [Cov:==================>                52%][Progress:============>                 40%] [Cov:==================>                52%][Progress:============>                 41%] [Cov:==================>                52%][Progress:============>                 41%] [Cov:==================>                52%][Progress:============>                 41%] [Cov:==================>                52%][Progress:============>                 41%] [Cov:==================>                52%][Progress:============>                 41%] [Cov:==================>                52%][Progress:============>                 41%] [Cov:==================>                52%][Progress:============>                 41%] [Cov:==================>                52%][Progress:============>                 42%] [Cov:==================>                52%][Progress:============>                 42%] [Cov:==================>                52%][Progress:============>                 42%] [Cov:==================>                52%][Progress:============>                 42%] [Cov:==================>                52%][Progress:============>                 42%] [Cov:==================>                52%][Progress:============>                 42%] [Cov:==================>                52%][Progress:============>                 42%] [Cov:==================>                52%][Progress:============>                 43%] [Cov:==================>                53%][Progress:============>                 43%] [Cov:==================>                53%][Progress:============>                 43%] [Cov:==================>                53%][Progress:============>                 43%] [Cov:==================>                53%][Progress:============>                 43%] [Cov:==================>                53%][Progress:=============>                44%] [Cov:==================>                53%][Progress:=============>                44%] [Cov:==================>                53%][Progress:=============>                44%] [Cov:==================>                53%][Progress:=============>                44%] [Cov:==================>                53%][Progress:=============>                44%] [Cov:==================>                53%][Progress:=============>                44%] [Cov:==================>                53%][Progress:=============>                44%] [Cov:==================>                53%][Progress:=============>                45%] [Cov:==================>                53%][Progress:=============>                45%] [Cov:==================>                53%][Progress:=============>                45%] [Cov:==================>                53%][Progress:=============>                45%] [Cov:==================>                53%][Progress:=============>                45%] [Cov:==================>                53%][Progress:=============>                45%] [Cov:==================>                53%][Progress:=============>                45%] [Cov:==================>                53%][Progress:=============>                46%] [Cov:==================>                53%][Progress:=============>                46%] [Cov:==================>                53%][Progress:=============>                46%] [Cov:==================>                53%][Progress:=============>                46%] [Cov:==================>                53%][Progress:=============>                46%] [Cov:==================>                53%][Progress:==============>               47%] [Cov:==================>                53%][Progress:==============>               47%] [Cov:==================>                53%][Progress:==============>               47%] [Cov:==================>                53%][Progress:==============>               47%] [Cov:==================>                53%][Progress:==============>               47%] [Cov:==================>                53%][Progress:==============>               48%] [Cov:==================>                53%][Progress:==============>               48%] [Cov:==================>                53%][Progress:==============>               48%] [Cov:==================>                53%][Progress:==============>               48%] [Cov:==================>                53%][Progress:==============>               48%] [Cov:==================>                53%][Progress:==============>               48%] [Cov:==================>                53%][Progress:==============>               49%] [Cov:==================>                53%][Progress:==============>               49%] [Cov:==================>                53%][Progress:==============>               49%] [Cov:==================>                53%][Progress:==============>               49%] [Cov:==================>                53%][Progress:==============>               49%] [Cov:==================>                53%][Progress:==============>               49%] [Cov:==================>                53%][Progress:==============>               49%] [Cov:==================>                53%][Progress:===============>              50%] [Cov:==================>                53%][Progress:===============>              50%] [Cov:==================>                53%][Progress:===============>              50%] [Cov:==================>                53%][Progress:===============>              50%] [Cov:==================>                53%][Progress:===============>              50%] [Cov:==================>                53%][Progress:===============>              50%] [Cov:==================>                53%][Progress:===============>              51%] [Cov:==================>                53%][Progress:===============>              51%] [Cov:==================>                53%][Progress:===============>              51%] [Cov:==================>                53%][Progress:===============>              51%] [Cov:==================>                53%][Progress:===============>              51%] [Cov:==================>                53%][Progress:===============>              51%] [Cov:==================>                53%][Progress:===============>              52%] [Cov:==================>                53%][Progress:===============>              52%] [Cov:==================>                53%][Progress:===============>              52%] [Cov:==================>                54%][Progress:===============>              52%] [Cov:==================>                54%][Progress:===============>              52%] [Cov:==================>                54%][Progress:===============>              52%] [Cov:==================>                54%][Progress:===============>              53%] [Cov:==================>                54%][Progress:===============>              53%] [Cov:==================>                54%][Progress:===============>              53%] [Cov:==================>                54%][Progress:===============>              53%] [Cov:==================>                54%][Progress:===============>              53%] [Cov:==================>                54%][Progress:===============>              53%] [Cov:==================>                54%][Progress:================>             54%] [Cov:==================>                54%][Progress:================>             54%] [Cov:==================>                54%][Progress:================>             54%] [Cov:==================>                54%][Progress:================>             54%] [Cov:==================>                54%][Progress:================>             54%] [Cov:==================>                54%][Progress:================>             54%] [Cov:==================>                54%][Progress:================>             55%] [Cov:==================>                54%][Progress:================>             55%] [Cov:==================>                54%][Progress:================>             55%] [Cov:==================>                54%][Progress:================>             55%] [Cov:==================>                54%][Progress:================>             55%] [Cov:==================>                54%][Progress:================>             56%] [Cov:==================>                54%][Progress:================>             56%] [Cov:==================>                54%][Progress:================>             56%] [Cov:==================>                54%][Progress:================>             56%] [Cov:==================>                54%][Progress:================>             56%] [Cov:==================>                54%][Progress:================>             56%] [Cov:==================>                54%][Progress:================>             56%] [Cov:==================>                54%][Progress:=================>            57%] [Cov:==================>                54%][Progress:=================>            57%] [Cov:==================>                54%][Progress:=================>            57%] [Cov:==================>                54%][Progress:=================>            57%] [Cov:==================>                54%][Progress:=================>            58%] [Cov:==================>                54%][Progress:=================>            58%] [Cov:==================>                54%][Progress:=================>            58%] [Cov:==================>                54%][Progress:=================>            58%] [Cov:==================>                54%][Progress:=================>            58%] [Cov:==================>                54%][Progress:=================>            58%] [Cov:==================>                54%][Progress:=================>            58%] [Cov:==================>                54%][Progress:=================>            59%] [Cov:==================>                54%][Progress:=================>            59%] [Cov:==================>                54%][Progress:=================>            59%] [Cov:==================>                54%][Progress:=================>            59%] [Cov:==================>                54%][Progress:=================>            59%] [Cov:==================>                54%][Progress:==================>           60%] [Cov:==================>                54%][Progress:==================>           60%] [Cov:==================>                54%][Progress:==================>           60%] [Cov:==================>                54%][Progress:==================>           60%] [Cov:==================>                54%][Progress:==================>           60%] [Cov:==================>                54%][Progress:==================>           60%] [Cov:==================>                54%][Progress:==================>           60%] [Cov:==================>                54%][Progress:==================>           61%] [Cov:==================>                54%][Progress:==================>           61%] [Cov:==================>                54%][Progress:==================>           61%] [Cov:==================>                54%][Progress:==================>           61%] [Cov:==================>                54%][Progress:==================>           61%] [Cov:==================>                54%][Progress:==================>           61%] [Cov:==================>                54%][Progress:==================>           62%] [Cov:==================>                54%][Progress:==================>           62%] [Cov:==================>                54%][Progress:==================>           62%] [Cov:==================>                54%][Progress:==================>           62%] [Cov:==================>                54%][Progress:==================>           62%] [Cov:==================>                54%][Progress:==================>           62%] [Cov:==================>                54%][Progress:==================>           63%] [Cov:==================>                54%][Progress:==================>           63%] [Cov:==================>                54%][Progress:==================>           63%] [Cov:==================>                54%][Progress:==================>           63%] [Cov:==================>                54%][Progress:==================>           63%] [Cov:==================>                54%][Progress:==================>           63%] [Cov:==================>                54%][Progress:==================>           63%] [Cov:==================>                54%][Progress:===================>          64%] [Cov:==================>                54%][Progress:===================>          64%] [Cov:==================>                54%][Progress:===================>          64%] [Cov:==================>                54%][Progress:===================>          64%] [Cov:==================>                54%][Progress:===================>          64%] [Cov:==================>                54%][Progress:===================>          65%] [Cov:==================>                54%][Progress:===================>          65%] [Cov:==================>                54%][Progress:===================>          65%] [Cov:==================>                54%][Progress:===================>          65%] [Cov:===================>               55%][Progress:===================>          65%] [Cov:===================>               55%][Progress:===================>          65%] [Cov:===================>               55%][Progress:===================>          66%] [Cov:===================>               55%][Progress:===================>          66%] [Cov:===================>               55%][Progress:===================>          66%] [Cov:===================>               55%][Progress:===================>          66%] [Cov:===================>               55%][Progress:===================>          66%] [Cov:===================>               55%][Progress:====================>         67%] [Cov:===================>               55%][Progress:====================>         67%] [Cov:===================>               55%][Progress:====================>         67%] [Cov:===================>               55%][Progress:====================>         67%] [Cov:===================>               55%][Progress:====================>         67%] [Cov:===================>               55%][Progress:====================>         68%] [Cov:===================>               55%][Progress:====================>         68%] [Cov:===================>               55%][Progress:====================>         68%] [Cov:===================>               55%][Progress:====================>         69%] [Cov:===================>               55%][Progress:====================>         69%] [Cov:===================>               55%][Progress:====================>         69%] [Cov:===================>               55%][Progress:====================>         69%] [Cov:===================>               55%][Progress:====================>         69%] [Cov:===================>               55%][Progress:=====================>        70%] [Cov:===================>               55%][Progress:=====================>        70%] [Cov:===================>               55%][Progress:=====================>        70%] [Cov:===================>               55%][Progress:=====================>        70%] [Cov:===================>               55%][Progress:=====================>        70%] [Cov:===================>               55%][Progress:=====================>        71%] [Cov:===================>               55%][Progress:=====================>        71%] [Cov:===================>               55%][Progress:=====================>        71%] [Cov:===================>               55%][Progress:=====================>        71%] [Cov:===================>               56%][Progress:=====================>        71%] [Cov:===================>               56%][Progress:=====================>        71%] [Cov:===================>               56%][Progress:=====================>        71%] [Cov:===================>               56%][Progress:=====================>        71%] [Cov:===================>               56%][Progress:=====================>        72%] [Cov:===================>               56%][Progress:=====================>        72%] [Cov:===================>               56%][Progress:=====================>        72%] [Cov:===================>               56%][Progress:=====================>        72%] [Cov:===================>               56%][Progress:=====================>        72%] [Cov:===================>               56%][Progress:=====================>        73%] [Cov:===================>               56%][Progress:=====================>        73%] [Cov:===================>               56%][Progress:=====================>        73%] [Cov:===================>               56%][Progress:=====================>        73%] [Cov:===================>               56%][Progress:=====================>        73%] [Cov:===================>               56%][Progress:======================>       74%] [Cov:===================>               56%][Progress:======================>       74%] [Cov:===================>               56%][Progress:======================>       74%] [Cov:===================>               56%][Progress:======================>       74%] [Cov:===================>               56%][Progress:======================>       74%] [Cov:===================>               56%][Progress:======================>       74%] [Cov:===================>               56%][Progress:======================>       75%] [Cov:===================>               56%][Progress:======================>       75%] [Cov:===================>               56%][Progress:======================>       75%] [Cov:===================>               56%][Progress:======================>       75%] [Cov:===================>               56%][Progress:======================>       75%] [Cov:===================>               56%][Progress:======================>       75%] [Cov:===================>               56%][Progress:======================>       75%] [Cov:===================>               56%][Progress:======================>       76%] [Cov:===================>               56%][Progress:======================>       76%] [Cov:===================>               56%][Progress:======================>       76%] [Cov:===================>               56%][Progress:======================>       76%] [Cov:===================>               56%][Progress:======================>       76%] [Cov:===================>               56%][Progress:======================>       76%] [Cov:===================>               56%][Progress:======================>       76%] [Cov:===================>               56%][Progress:======================>       76%] [Cov:===================>               56%][Progress:=======================>      77%] [Cov:===================>               56%][Progress:=======================>      77%] [Cov:===================>               56%][Progress:=======================>      77%] [Cov:===================>               56%][Progress:=======================>      77%] [Cov:===================>               56%][Progress:=======================>      78%] [Cov:===================>               56%][Progress:=======================>      78%] [Cov:===================>               56%][Progress:=======================>      78%] [Cov:===================>               56%][Progress:=======================>      78%] [Cov:===================>               56%][Progress:=======================>      78%] [Cov:===================>               56%][Progress:=======================>      78%] [Cov:===================>               56%][Progress:=======================>      78%] [Cov:===================>               56%][Progress:=======================>      78%] [Cov:===================>               56%][Progress:=======================>      79%] [Cov:===================>               56%][Progress:=======================>      79%] [Cov:===================>               56%][Progress:=======================>      79%] [Cov:===================>               56%][Progress:=======================>      79%] [Cov:===================>               56%][Progress:=======================>      79%] [Cov:===================>               56%][Progress:=======================>      79%] [Cov:===================>               56%][Progress:========================>     80%] [Cov:===================>               56%][Progress:========================>     80%] [Cov:===================>               56%][Progress:========================>     80%] [Cov:===================>               56%][Progress:========================>     80%] [Cov:===================>               56%][Progress:========================>     80%] [Cov:===================>               56%][Progress:========================>     81%] [Cov:===================>               56%][Progress:========================>     81%] [Cov:===================>               56%][Progress:========================>     81%] [Cov:===================>               56%][Progress:========================>     81%] [Cov:===================>               56%][Progress:========================>     81%] [Cov:===================>               56%][Progress:========================>     81%] [Cov:===================>               56%][Progress:========================>     82%] [Cov:===================>               56%][Progress:========================>     82%] [Cov:===================>               56%][Progress:========================>     82%] [Cov:===================>               56%][Progress:========================>     82%] [Cov:===================>               56%][Progress:========================>     82%] [Cov:===================>               56%][Progress:========================>     82%] [Cov:===================>               56%][Progress:========================>     83%] [Cov:===================>               56%][Progress:========================>     83%] [Cov:===================>               56%][Progress:========================>     83%] [Cov:===================>               56%][Progress:========================>     83%] [Cov:===================>               56%][Progress:========================>     83%] [Cov:===================>               56%][Progress:=========================>    84%] [Cov:===================>               56%][Progress:=========================>    84%] [Cov:===================>               56%][Progress:=========================>    84%] [Cov:===================>               56%][Progress:=========================>    84%] [Cov:===================>               56%][Progress:=========================>    84%] [Cov:===================>               56%][Progress:=========================>    84%] [Cov:===================>               56%][Progress:=========================>    85%] [Cov:===================>               56%][Progress:=========================>    85%] [Cov:===================>               56%][Progress:=========================>    85%] [Cov:===================>               56%][Progress:=========================>    85%] [Cov:===================>               56%][Progress:=========================>    85%] [Cov:===================>               56%][Progress:=========================>    85%] [Cov:===================>               56%][Progress:=========================>    86%] [Cov:===================>               56%][Progress:=========================>    86%] [Cov:===================>               56%][Progress:=========================>    86%] [Cov:===================>               56%][Progress:=========================>    86%] [Cov:===================>               56%][Progress:=========================>    86%] [Cov:===================>               56%][Progress:=========================>    86%] [Cov:===================>               56%][Progress:==========================>   87%] [Cov:===================>               56%][Progress:==========================>   87%] [Cov:===================>               56%][Progress:==========================>   87%] [Cov:===================>               56%][Progress:==========================>   87%] [Cov:===================>               56%][Progress:==========================>   87%] [Cov:===================>               56%][Progress:==========================>   87%] [Cov:===================>               56%][Progress:==========================>   87%] [Cov:===================>               56%][Progress:==========================>   88%] [Cov:===================>               56%][Progress:==========================>   88%] [Cov:===================>               56%][Progress:==========================>   88%] [Cov:===================>               56%][Progress:==========================>   88%] [Cov:===================>               56%][Progress:==========================>   89%] [Cov:===================>               56%][Progress:==========================>   89%] [Cov:===================>               56%][Progress:==========================>   89%] [Cov:===================>               56%][Progress:==========================>   89%] [Cov:===================>               56%][Progress:===========================>  90%] [Cov:===================>               57%][Progress:===========================>  90%] [Cov:===================>               57%][Progress:===========================>  90%] [Cov:===================>               57%][Progress:===========================>  90%] [Cov:===================>               57%][Progress:===========================>  90%] [Cov:===================>               57%][Progress:===========================>  90%] [Cov:===================>               57%][Progress:===========================>  90%] [Cov:===================>               57%][Progress:===========================>  91%] [Cov:===================>               57%][Progress:===========================>  91%] [Cov:===================>               57%][Progress:===========================>  91%] [Cov:===================>               57%][Progress:===========================>  91%] [Cov:===================>               57%][Progress:===========================>  91%] [Cov:===================>               57%][Progress:===========================>  92%] [Cov:===================>               57%][Progress:===========================>  92%] [Cov:===================>               57%][Progress:===========================>  92%] [Cov:===================>               57%][Progress:===========================>  92%] [Cov:===================>               57%][Progress:===========================>  92%] [Cov:===================>               57%][Progress:===========================>  92%] [Cov:===================>               57%][Progress:===========================>  92%] [Cov:===================>               57%][Progress:===========================>  93%] [Cov:===================>               57%][Progress:===========================>  93%] [Cov:===================>               57%][Progress:===========================>  93%] [Cov:===================>               57%][Progress:===========================>  93%] [Cov:===================>               57%][Progress:===========================>  93%] [Cov:===================>               57%][Progress:===========================>  93%] [Cov:===================>               57%][Progress:============================> 94%] [Cov:===================>               57%][Progress:============================> 94%] [Cov:===================>               57%][Progress:============================> 94%] [Cov:===================>               57%][Progress:============================> 94%] [Cov:===================>               57%][Progress:============================> 94%] [Cov:===================>               57%][Progress:============================> 95%] [Cov:===================>               57%][Progress:============================> 95%] [Cov:===================>               57%][Progress:============================> 95%] [Cov:===================>               57%][Progress:============================> 95%] [Cov:===================>               57%][Progress:============================> 95%] [Cov:===================>               57%][Progress:============================> 95%] [Cov:===================>               57%][Progress:============================> 95%] [Cov:===================>               57%][Progress:============================> 96%] [Cov:===================>               57%][Progress:============================> 96%] [Cov:===================>               57%][Progress:============================> 96%] [Cov:===================>               57%][Progress:============================> 96%] [Cov:===================>               57%][Progress:============================> 96%] [Cov:===================>               57%][Progress:=============================>97%] [Cov:===================>               57%][Progress:=============================>97%] [Cov:===================>               57%][Progress:=============================>97%] [Cov:===================>               57%][Progress:=============================>97%] [Cov:===================>               57%][Progress:=============================>97%] [Cov:===================>               57%][Progress:=============================>97%] [Cov:===================>               57%][Progress:=============================>98%] [Cov:===================>               57%][Progress:=============================>98%] [Cov:===================>               57%][Progress:=============================>98%] [Cov:===================>               57%][Progress:=============================>98%] [Cov:===================>               57%][Progress:=============================>98%] [Cov:===================>               57%][Progress:=============================>98%] [Cov:===================>               57%][Progress:=============================>98%] [Cov:===================>               57%][Progress:=============================>99%] [Cov:===================>               57%][Progress:=============================>99%] [Cov:===================>               57%][Progress:=============================>99%] [Cov:===================>               57%][Progress:=============================>99%] [Cov:===================>               57%][Progress:=============================>99%] [Cov:===================>               57%][Progress:=============================>99%] [Cov:===================>               57%][Progress:=============================>99%] [Cov:===================>               57%][Progress:=============================>99%] [Cov:===================>               57%][Progress:==============================100%] [Cov:===================>               57%][Progress:==============================100%] [Cov:===================>               57%][Progress:==============================100%] [Cov:===================>               57%][Progress:==============================100%] [Cov:===================>               57%][Progress:==============================100%] [Cov:===================>               57%]
* Search finished after 201s and 585 generations, 232238 statements, best individual has fitness: 1428.0
* Generated before the refinement 87 tests with total length 368
statement is: org.mozilla.javascript.CompilerEnvirons()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.CompilerEnvirons
statement code is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons()
statement is: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.Parser
statement code is: Parser parser = new Parser(arg0, (ErrorReporter) null)
statement is: parse(Ljava/lang/String;Ljava/lang/String;I)Lorg/mozilla/javascript/ScriptOrFnNode; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.mozilla.javascript.ScriptOrFnNode
statement code is: ScriptOrFnNode parse = parser.parse(";@Rv Iu<K&~e5Tcc?T", ";@Rv Iu<K&~e5Tcc?T", (-1765))
test data is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Parser parser = new Parser(compilerEnvirons, (ErrorReporter) null);
parser.parse(";@Rv Iu<K&~e5Tcc?T", ";@Rv Iu<K&~e5Tcc?T", (-1765));

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
        Parser parser = new Parser(compilerEnvirons, ((ErrorReporter) (null)));
        parser.parse("This is a sample input string", "This is a sample input string", -1765);
    }
}
statement is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Parser parser = new Parser(compilerEnvirons, ((ErrorReporter) (null))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: parser.parse("This is a sample input string", "This is a sample input string", -1765), class spoon.support.reflect.code.CtInvocationImpl
invocation is: parser.parse("This is a sample input string", "This is a sample input string", -1765) target is: parser method is: parse(java.lang.String,java.lang.String,int)
source statement: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V callee: VariableReference: Statement 1, type org.mozilla.javascript.Parserindex is: 1
Matched Method is: parse(Ljava/lang/String;Ljava/lang/String;I)Lorg/mozilla/javascript/ScriptOrFnNode;
i 2 Parameters size() 2 Num of Method Parameters: 3
TestCase is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Parser parser = new Parser(compilerEnvirons, (ErrorReporter) null);
String string = "This is a sample input string";
String string = "This is a sample input string";
int _int = null;
parser.parse(string, string, _int);

statement is: org.mozilla.javascript.CompilerEnvirons()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.CompilerEnvirons
statement code is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons()
statement is: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.Parser
statement code is: Parser parser = new Parser(arg0, (ErrorReporter) null)
statement is: getEncodedSource()Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.lang.String
statement code is: String encodedSource = parser.getEncodedSource()
test data is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Parser parser = new Parser(compilerEnvirons, (ErrorReporter) null);
parser.getEncodedSource();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
        Parser parser = new Parser(compilerEnvirons, ((ErrorReporter) (null)));
        parser.getEncodedSource();
        // Improved test data
        String sourceCode = "public class MyClass { \n" + ("    public static void main(String[] args) {\n" + "        System.out.println(\"Hello, world!\");\n");
    }
}
statement is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Parser parser = new Parser(compilerEnvirons, ((ErrorReporter) (null))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: parser.getEncodedSource(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: parser.getEncodedSource() target is: parser method is: getEncodedSource()
source statement: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V callee: VariableReference: Statement 1, type org.mozilla.javascript.Parserindex is: 1
Matched Method is: getEncodedSource()Ljava/lang/String;
statement is: // Improved test data
String sourceCode = "public class MyClass { \n" + ("    public static void main(String[] args) {\n" + "        System.out.println(\"Hello, world!\");\n"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtBinaryOperatorImpl
IT HAS NOT BEEN SUPPORTED YET: "public class MyClass { \n" + ("    public static void main(String[] args) {\n" + "        System.out.println(\"Hello, world!\");\n")
TestCase is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Parser parser = new Parser(compilerEnvirons, (ErrorReporter) null);
parser.getEncodedSource();

statement is: org.mozilla.javascript.CompilerEnvirons()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.CompilerEnvirons
statement code is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons()
statement is: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.Parser
statement code is: Parser parser = new Parser(arg0, (ErrorReporter) null)
statement is: parse(Ljava/lang/String;Ljava/lang/String;I)Lorg/mozilla/javascript/ScriptOrFnNode; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.mozilla.javascript.ScriptOrFnNode
statement code is: ScriptOrFnNode parse = parser.parse("while", "while", 722)
test data is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Parser parser = new Parser(compilerEnvirons, (ErrorReporter) null);
parser.parse("while", "while", 722);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
        Parser parser = new Parser(compilerEnvirons, ((ErrorReporter) (null)));
        parser.parse("while loop", "while", 722);
    }
}
statement is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Parser parser = new Parser(compilerEnvirons, ((ErrorReporter) (null))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: parser.parse("while loop", "while", 722), class spoon.support.reflect.code.CtInvocationImpl
invocation is: parser.parse("while loop", "while", 722) target is: parser method is: parse(java.lang.String,java.lang.String,int)
source statement: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V callee: VariableReference: Statement 1, type org.mozilla.javascript.Parserindex is: 1
Matched Method is: parse(Ljava/lang/String;Ljava/lang/String;I)Lorg/mozilla/javascript/ScriptOrFnNode;
TestCase is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Parser parser = new Parser(compilerEnvirons, (ErrorReporter) null);
String string = "while loop";
String string = "while";
int _int = 722;
parser.parse(string, string, _int);

statement is: org.mozilla.javascript.CompilerEnvirons()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.CompilerEnvirons
statement code is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons()
statement is: org.evosuite.testcase.statements.FieldStatement@35127c92 type is: class org.evosuite.testcase.statements.FieldStatement return type class org.mozilla.javascript.DefaultErrorReporter
statement code is: DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance
statement is: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.Parser
statement code is: Parser parser = new Parser(arg0, arg1)
statement is: parse(Ljava/lang/String;Ljava/lang/String;I)Lorg/mozilla/javascript/ScriptOrFnNode; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.mozilla.javascript.ScriptOrFnNode
statement code is: ScriptOrFnNode parse = parser.parse("DN^!{m*Wu", (String) null, 1223)
test data is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
parser.parse("DN^!{m*Wu", (String) null, 1223);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
        DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
        Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
        parser.parse("This is a sample input for testing the parse method with an integer value.", null, 4567);
    }
}
statement is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: DefaultErrorReporter.instance is DefaultErrorReporter
CtField is: static org.mozilla.javascript.DefaultErrorReporter org.mozilla.javascript.DefaultErrorReporter.instance DefaultErrorReporter instance
statement is: Parser parser = new Parser(compilerEnvirons, defaultErrorReporter), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: parser.parse("This is a sample input for testing the parse method with an integer value.", null, 4567), class spoon.support.reflect.code.CtInvocationImpl
invocation is: parser.parse("This is a sample input for testing the parse method with an integer value.", null, 4567) target is: parser method is: parse(java.lang.String,<unknown>,int)
source statement: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V callee: VariableReference: Statement 2, type org.mozilla.javascript.Parserindex is: 2
Matched Method is: parse(Ljava/lang/String;Ljava/lang/String;I)Lorg/mozilla/javascript/ScriptOrFnNode;
i 2 Parameters size() 2 Num of Method Parameters: 3
TestCase is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
String string = "This is a sample input for testing the parse method with an integer value.";
int _int = 4567;
int _int = null;
parser.parse(string, (String) _int, _int);

statement is: org.mozilla.javascript.CompilerEnvirons()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.CompilerEnvirons
statement code is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons()
statement is: getErrorReporter()Lorg/mozilla/javascript/ErrorReporter; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.mozilla.javascript.DefaultErrorReporter
statement code is: DefaultErrorReporter errorReporter = (DefaultErrorReporter)compilerEnvirons.getErrorReporter()
statement is: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.Parser
statement code is: Parser parser = new Parser(arg0, arg1)
statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("''lj/vX?gWo")
statement is: parse(Ljava/io/Reader;Ljava/lang/String;I)Lorg/mozilla/javascript/ScriptOrFnNode; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.mozilla.javascript.ScriptOrFnNode
statement code is: ScriptOrFnNode parse = parser.parse((Reader) arg0, "''lj/vX?gWo", 52)
test data is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)compilerEnvirons.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
StringReader stringReader = new StringReader("''lj/vX?gWo");
parser.parse((Reader) stringReader, "''lj/vX?gWo", 52);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
        DefaultErrorReporter errorReporter = ((DefaultErrorReporter) (compilerEnvirons.getErrorReporter()));
        Parser parser = new Parser(compilerEnvirons, errorReporter);
        StringReader stringReader = new StringReader("This is a sample input string.");
        parser.parse(((Reader) (stringReader)), "This is a sample input string.", 52);
    }
}
statement is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: DefaultErrorReporter errorReporter = ((DefaultErrorReporter) (compilerEnvirons.getErrorReporter())), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: ((DefaultErrorReporter) (compilerEnvirons.getErrorReporter())) target is: compilerEnvirons method is: getErrorReporter()
source statement: org.mozilla.javascript.CompilerEnvirons()V callee: VariableReference: Statement 0, type org.mozilla.javascript.CompilerEnvironsindex is: 0
Matched Method is: getErrorReporter()Lorg/mozilla/javascript/ErrorReporter;
statement is: Parser parser = new Parser(compilerEnvirons, errorReporter), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: StringReader stringReader = new StringReader("This is a sample input string."), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: parser.parse(((Reader) (stringReader)), "This is a sample input string.", 52), class spoon.support.reflect.code.CtInvocationImpl
invocation is: parser.parse(((Reader) (stringReader)), "This is a sample input string.", 52) target is: parser method is: parse(Reader,java.lang.String,int)
source statement: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V callee: VariableReference: Statement 2, type org.mozilla.javascript.Parserindex is: 2
Matched Method is: parse(Ljava/io/Reader;Ljava/lang/String;I)Lorg/mozilla/javascript/ScriptOrFnNode;
TestCase is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)compilerEnvirons.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
String string = "This is a sample input string.";
StringReader stringReader = new StringReader(string);
String string = "This is a sample input string.";
int _int = 52;
parser.parse((Reader) stringReader, string, _int);

statement is: org.mozilla.javascript.CompilerEnvirons()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.CompilerEnvirons
statement code is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons()
statement is: org.evosuite.testcase.statements.FieldStatement@35127c92 type is: class org.evosuite.testcase.statements.FieldStatement return type class org.mozilla.javascript.DefaultErrorReporter
statement code is: DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance
statement is: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.Parser
statement code is: Parser parser = new Parser(arg0, arg1)
statement is: addStrictWarning(Ljava/lang/String;Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: parser.addStrictWarning("error reporter", "error reporter")
test data is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
parser.addStrictWarning("error reporter", "error reporter");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
        DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
        Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
        parser.addStrictWarning("filename1.js", "A message");
    }
}
statement is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: DefaultErrorReporter.instance is DefaultErrorReporter
CtField is: static org.mozilla.javascript.DefaultErrorReporter org.mozilla.javascript.DefaultErrorReporter.instance DefaultErrorReporter instance
statement is: Parser parser = new Parser(compilerEnvirons, defaultErrorReporter), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: parser.addStrictWarning("filename1.js", "A message"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: parser.addStrictWarning("filename1.js", "A message") target is: parser method is: addStrictWarning(java.lang.String,java.lang.String)
source statement: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V callee: VariableReference: Statement 2, type org.mozilla.javascript.Parserindex is: 2
Matched Method is: addStrictWarning(Ljava/lang/String;Ljava/lang/String;)V
TestCase is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
String string = "filename1.js";
String string = "A message";
parser.addStrictWarning(string, string);

statement is: org.mozilla.javascript.CompilerEnvirons()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.CompilerEnvirons
statement code is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons()
statement is: getErrorReporter()Lorg/mozilla/javascript/ErrorReporter; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.mozilla.javascript.DefaultErrorReporter
statement code is: DefaultErrorReporter errorReporter = (DefaultErrorReporter)compilerEnvirons.getErrorReporter()
statement is: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.Parser
statement code is: Parser parser = new Parser(arg0, arg1)
statement is: addWarning(Ljava/lang/String;Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: parser.addWarning("msg.syntax", "msg.syntax")
test data is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)compilerEnvirons.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
parser.addWarning("msg.syntax", "msg.syntax");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
        DefaultErrorReporter errorReporter = ((DefaultErrorReporter) (compilerEnvirons.getErrorReporter()));
        Parser parser = new Parser(compilerEnvirons, errorReporter);
        parser.addWarning("msg.syntax", "Invalid syntax detected");
    }
}
statement is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: DefaultErrorReporter errorReporter = ((DefaultErrorReporter) (compilerEnvirons.getErrorReporter())), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: ((DefaultErrorReporter) (compilerEnvirons.getErrorReporter())) target is: compilerEnvirons method is: getErrorReporter()
source statement: org.mozilla.javascript.CompilerEnvirons()V callee: VariableReference: Statement 0, type org.mozilla.javascript.CompilerEnvironsindex is: 0
Matched Method is: getErrorReporter()Lorg/mozilla/javascript/ErrorReporter;
statement is: Parser parser = new Parser(compilerEnvirons, errorReporter), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: parser.addWarning("msg.syntax", "Invalid syntax detected"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: parser.addWarning("msg.syntax", "Invalid syntax detected") target is: parser method is: addWarning(java.lang.String,java.lang.String)
source statement: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V callee: VariableReference: Statement 2, type org.mozilla.javascript.Parserindex is: 2
Matched Method is: addWarning(Ljava/lang/String;Ljava/lang/String;)V
TestCase is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)compilerEnvirons.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
String string = "msg.syntax";
String string = "Invalid syntax detected";
parser.addWarning(string, string);

statement is: org.mozilla.javascript.CompilerEnvirons()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.CompilerEnvirons
statement code is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons()
statement is: org.evosuite.testcase.statements.FieldStatement@35127c92 type is: class org.evosuite.testcase.statements.FieldStatement return type class org.mozilla.javascript.DefaultErrorReporter
statement code is: DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance
statement is: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.Parser
statement code is: Parser parser = new Parser(arg0, arg1)
statement is: parse(Ljava/lang/String;Ljava/lang/String;I)Lorg/mozilla/javascript/ScriptOrFnNode; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.mozilla.javascript.ScriptOrFnNode
statement code is: ScriptOrFnNode parse = parser.parse("u\n", "u\n", 1677)
test data is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
parser.parse("u\n", "u\n", 1677);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
        DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
        Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
        parser.parse("This is a test string", "This is another test string", 1000);
    }
}
statement is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: DefaultErrorReporter.instance is DefaultErrorReporter
CtField is: static org.mozilla.javascript.DefaultErrorReporter org.mozilla.javascript.DefaultErrorReporter.instance DefaultErrorReporter instance
statement is: Parser parser = new Parser(compilerEnvirons, defaultErrorReporter), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: parser.parse("This is a test string", "This is another test string", 1000), class spoon.support.reflect.code.CtInvocationImpl
invocation is: parser.parse("This is a test string", "This is another test string", 1000) target is: parser method is: parse(java.lang.String,java.lang.String,int)
source statement: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V callee: VariableReference: Statement 2, type org.mozilla.javascript.Parserindex is: 2
Matched Method is: parse(Ljava/lang/String;Ljava/lang/String;I)Lorg/mozilla/javascript/ScriptOrFnNode;
TestCase is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
String string = "This is a test string";
String string = "This is another test string";
int _int = 1000;
parser.parse(string, string, _int);

statement is: org.mozilla.javascript.CompilerEnvirons()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.CompilerEnvirons
statement code is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons()
statement is: setXmlAvailable(Z)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: compilerEnvirons.setXmlAvailable(false)
statement is: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.Parser
statement code is: Parser parser = new Parser(arg0, (ErrorReporter) null)
statement is: parse(Ljava/lang/String;Ljava/lang/String;I)Lorg/mozilla/javascript/ScriptOrFnNode; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.mozilla.javascript.ScriptOrFnNode
statement code is: ScriptOrFnNode parse = parser.parse("_NMsJvfHh.(", "_NMsJvfHh.(", 4617)
test data is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
compilerEnvirons.setXmlAvailable(false);
Parser parser = new Parser(compilerEnvirons, (ErrorReporter) null);
parser.parse("_NMsJvfHh.(", "_NMsJvfHh.(", 4617);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
        compilerEnvirons.setXmlAvailable(false);
        Parser parser = new Parser(compilerEnvirons, ((ErrorReporter) (null)));
        parser.parse("A_NMsJvfHh.(", "A_NMsJvfHh.(", 4617);
    }
}
statement is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: compilerEnvirons.setXmlAvailable(false), class spoon.support.reflect.code.CtInvocationImpl
invocation is: compilerEnvirons.setXmlAvailable(false) target is: compilerEnvirons method is: setXmlAvailable(boolean)
source statement: org.mozilla.javascript.CompilerEnvirons()V callee: VariableReference: Statement 0, type org.mozilla.javascript.CompilerEnvironsindex is: 0
Matched Method is: setXmlAvailable(Z)V
statement is: Parser parser = new Parser(compilerEnvirons, ((ErrorReporter) (null))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: parser.parse("A_NMsJvfHh.(", "A_NMsJvfHh.(", 4617), class spoon.support.reflect.code.CtInvocationImpl
invocation is: parser.parse("A_NMsJvfHh.(", "A_NMsJvfHh.(", 4617) target is: parser method is: parse(java.lang.String,java.lang.String,int)
source statement: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V callee: VariableReference: Statement 2, type org.mozilla.javascript.Parserindex is: 3
Matched Method is: parse(Ljava/lang/String;Ljava/lang/String;I)Lorg/mozilla/javascript/ScriptOrFnNode;
TestCase is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
boolean _boolean = false;
compilerEnvirons.setXmlAvailable(_boolean);
Parser parser = new Parser(compilerEnvirons, (ErrorReporter) null);
String string = "A_NMsJvfHh.(";
String string = "A_NMsJvfHh.(";
int _int = 4617;
((Parser) _void).parse(string, string, _int);

statement is: org.mozilla.javascript.CompilerEnvirons()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.CompilerEnvirons
statement code is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons()
statement is: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.Parser
statement code is: Parser parser = new Parser(arg0, (ErrorReporter) null)
statement is: parse(Ljava/lang/String;Ljava/lang/String;I)Lorg/mozilla/javascript/ScriptOrFnNode; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.mozilla.javascript.ScriptOrFnNode
statement code is: ScriptOrFnNode parse = parser.parse("msg.no.brace.catchblock", "J^(2<", 21)
statement is: pushScope(Lorg/mozilla/javascript/Node;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: parser.pushScope(arg0)
statement is: pushScope(Lorg/mozilla/javascript/Node;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: parser.pushScope(arg0)
test data is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Parser parser = new Parser(compilerEnvirons, (ErrorReporter) null);
ScriptOrFnNode parse = parser.parse("msg.no.brace.catchblock", "J^(2<", 21);
parser.pushScope(parse);
parser.pushScope(parse);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
        Parser parser = new Parser(compilerEnvirons, ((ErrorReporter) (null)));
        ScriptOrFnNode parse = parser.parse("msg.no.brace.catchblock", "J^(\"2<\"", 21);
        parser.pushScope(parse);
        parser.pushScope(parse);
    }
}
statement is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Parser parser = new Parser(compilerEnvirons, ((ErrorReporter) (null))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: ScriptOrFnNode parse = parser.parse("msg.no.brace.catchblock", "J^(\"2<\"", 21), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: parser.parse("msg.no.brace.catchblock", "J^(\"2<\"", 21) target is: parser method is: parse(java.lang.String,java.lang.String,int)
source statement: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V callee: VariableReference: Statement 1, type org.mozilla.javascript.Parserindex is: 1
Matched Method is: parse(Ljava/lang/String;Ljava/lang/String;I)Lorg/mozilla/javascript/ScriptOrFnNode;
statement is: parser.pushScope(parse), class spoon.support.reflect.code.CtInvocationImpl
invocation is: parser.pushScope(parse) target is: parser method is: pushScope(ScriptOrFnNode)
source statement: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V callee: VariableReference: Statement 1, type org.mozilla.javascript.Parserindex is: 1
source statement: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V callee: VariableReference: Statement 1, type org.mozilla.javascript.Parserindex is: 1
Matched Method is: pushScope(Lorg/mozilla/javascript/Node;)V
statement is: parser.pushScope(parse), class spoon.support.reflect.code.CtInvocationImpl
invocation is: parser.pushScope(parse) target is: parser method is: pushScope(ScriptOrFnNode)
source statement: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V callee: VariableReference: Statement 1, type org.mozilla.javascript.Parserindex is: 1
source statement: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V callee: VariableReference: Statement 1, type org.mozilla.javascript.Parserindex is: 1
Matched Method is: pushScope(Lorg/mozilla/javascript/Node;)V
TestCase is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Parser parser = new Parser(compilerEnvirons, (ErrorReporter) null);
String string = "msg.no.brace.catchblock";
String string = "J^(\"2<\"";
int _int = 21;
ScriptOrFnNode parse = parser.parse(string, string, _int);
parser.pushScope(parse);
parser.pushScope(parse);

statement is: org.mozilla.javascript.CompilerEnvirons()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.CompilerEnvirons
statement code is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons()
statement is: org.evosuite.testcase.statements.FieldStatement@35127c92 type is: class org.evosuite.testcase.statements.FieldStatement return type class org.mozilla.javascript.DefaultErrorReporter
statement code is: DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance
statement is: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.Parser
statement code is: Parser parser = new Parser(arg0, arg1)
statement is: parse(Ljava/lang/String;Ljava/lang/String;I)Lorg/mozilla/javascript/ScriptOrFnNode; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.mozilla.javascript.ScriptOrFnNode
statement code is: ScriptOrFnNode parse = parser.parse("function", "function", 32)
test data is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
parser.parse("function", "function", 32);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
        DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
        Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
        parser.parse("function", "function", 32);// This code snippet is testing the functionality of a function named "function" that takes in a string and an integer as parameters. The parameter values are hardcoded, but they could be improved to better represent different scenarios. For example, we could use more descriptive names for the variables or provide different data types for the parameters. }}

    }
}
statement is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: DefaultErrorReporter.instance is DefaultErrorReporter
CtField is: static org.mozilla.javascript.DefaultErrorReporter org.mozilla.javascript.DefaultErrorReporter.instance DefaultErrorReporter instance
statement is: Parser parser = new Parser(compilerEnvirons, defaultErrorReporter), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: parser.parse("function", "function", 32)// This code snippet is testing the functionality of a function named "function" that takes in a string and an integer as parameters. The parameter values are hardcoded, but they could be improved to better represent different scenarios. For example, we could use more descriptive names for the variables or provide different data types for the parameters. }}
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: parser.parse("function", "function", 32)// This code snippet is testing the functionality of a function named "function" that takes in a string and an integer as parameters. The parameter values are hardcoded, but they could be improved to better represent different scenarios. For example, we could use more descriptive names for the variables or provide different data types for the parameters. }}
 target is: parser method is: parse(java.lang.String,java.lang.String,int)
source statement: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V callee: VariableReference: Statement 2, type org.mozilla.javascript.Parserindex is: 2
Matched Method is: parse(Ljava/lang/String;Ljava/lang/String;I)Lorg/mozilla/javascript/ScriptOrFnNode;
TestCase is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
String string = "function";
String string = "function";
int _int = 32;
parser.parse(string, string, _int);

statement is: org.mozilla.javascript.CompilerEnvirons()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.CompilerEnvirons
statement code is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons()
statement is: getCurrentContext()Lorg/mozilla/javascript/Context; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.mozilla.javascript.Context
statement code is: Context currentContext = Context.getCurrentContext()
statement is: initFromContext(Lorg/mozilla/javascript/Context;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: compilerEnvirons.initFromContext(arg0)
statement is: org.evosuite.testcase.statements.FieldStatement@35127c92 type is: class org.evosuite.testcase.statements.FieldStatement return type class org.mozilla.javascript.DefaultErrorReporter
statement code is: DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance
statement is: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.Parser
statement code is: Parser parser = new Parser(arg0, arg1)
statement is: parse(Ljava/lang/String;Ljava/lang/String;I)Lorg/mozilla/javascript/ScriptOrFnNode; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.mozilla.javascript.ScriptOrFnNode
statement code is: ScriptOrFnNode parse = parser.parse("\n", "\n", 145)
test data is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Context currentContext = Context.getCurrentContext();
compilerEnvirons.initFromContext(currentContext);
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
parser.parse("\n", "\n", 145);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
        Context currentContext = Context.getCurrentContext();
        compilerEnvirons.initFromContext(currentContext);
        DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
        Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
        parser.parse("This is a test string", "This is a test string", 145);
    }
}
statement is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Context currentContext = Context.getCurrentContext(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: Context.getCurrentContext() target is: Context method is: getCurrentContext()
Matched Method is: getCurrentContext()Lorg/mozilla/javascript/Context;
statement is: compilerEnvirons.initFromContext(currentContext), class spoon.support.reflect.code.CtInvocationImpl
invocation is: compilerEnvirons.initFromContext(currentContext) target is: compilerEnvirons method is: initFromContext(Context)
source statement: org.mozilla.javascript.CompilerEnvirons()V callee: VariableReference: Statement 0, type org.mozilla.javascript.CompilerEnvironsindex is: 0
Matched Method is: initFromContext(Lorg/mozilla/javascript/Context;)V
statement is: DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: DefaultErrorReporter.instance is DefaultErrorReporter
CtField is: static org.mozilla.javascript.DefaultErrorReporter org.mozilla.javascript.DefaultErrorReporter.instance DefaultErrorReporter instance
statement is: Parser parser = new Parser(compilerEnvirons, defaultErrorReporter), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: parser.parse("This is a test string", "This is a test string", 145), class spoon.support.reflect.code.CtInvocationImpl
invocation is: parser.parse("This is a test string", "This is a test string", 145) target is: parser method is: parse(java.lang.String,java.lang.String,int)
source statement: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V callee: VariableReference: Statement 4, type org.mozilla.javascript.Parserindex is: 4
Matched Method is: parse(Ljava/lang/String;Ljava/lang/String;I)Lorg/mozilla/javascript/ScriptOrFnNode;
TestCase is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Context currentContext = Context.getCurrentContext();
compilerEnvirons.initFromContext(currentContext);
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
String string = "This is a test string";
String string = "This is a test string";
int _int = 145;
parser.parse(string, string, _int);

statement is: org.mozilla.javascript.CompilerEnvirons()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.CompilerEnvirons
statement code is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons()
statement is: org.evosuite.testcase.statements.FieldStatement@35127c92 type is: class org.evosuite.testcase.statements.FieldStatement return type class org.mozilla.javascript.DefaultErrorReporter
statement code is: DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance
statement is: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.Parser
statement code is: Parser parser = new Parser(arg0, arg1)
statement is: parse(Ljava/lang/String;Ljava/lang/String;I)Lorg/mozilla/javascript/ScriptOrFnNode; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.mozilla.javascript.ScriptOrFnNode
statement code is: ScriptOrFnNode parse = parser.parse("{sjUaI", "TypUEro: ", (-667))
test data is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
parser.parse("{sjUaI", "TypUEro: ", (-667));

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
        DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
        Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
        parser.parse("hello world", "TypUEro: ", new Object());
    }
}
statement is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: DefaultErrorReporter.instance is DefaultErrorReporter
CtField is: static org.mozilla.javascript.DefaultErrorReporter org.mozilla.javascript.DefaultErrorReporter.instance DefaultErrorReporter instance
statement is: Parser parser = new Parser(compilerEnvirons, defaultErrorReporter), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: parser.parse("hello world", "TypUEro: ", new Object()), class spoon.support.reflect.code.CtInvocationImpl
invocation is: parser.parse("hello world", "TypUEro: ", new Object()) target is: parser method is: parse(java.lang.String,java.lang.String,java.lang.Object)
source statement: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V callee: VariableReference: Statement 2, type org.mozilla.javascript.Parserindex is: 2
Matched Method is: parse(Ljava/lang/String;Ljava/lang/String;I)Lorg/mozilla/javascript/ScriptOrFnNode;
i 2 Parameters size() 2 Num of Method Parameters: 3
TestCase is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
String string = "hello world";
String string = "TypUEro: ";
int _int = null;
parser.parse(string, string, _int);

statement is: org.mozilla.javascript.CompilerEnvirons()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.CompilerEnvirons
statement code is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons()
statement is: org.evosuite.testcase.statements.FieldStatement@35127c92 type is: class org.evosuite.testcase.statements.FieldStatement return type class org.mozilla.javascript.DefaultErrorReporter
statement code is: DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance
statement is: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.Parser
statement code is: Parser parser = new Parser(arg0, arg1)
statement is: parse(Ljava/lang/String;Ljava/lang/String;I)Lorg/mozilla/javascript/ScriptOrFnNode; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.mozilla.javascript.ScriptOrFnNode
statement code is: ScriptOrFnNode parse = parser.parse("{}D\"CFDjGM:Hh_zD1*D", "{}D\"CFDjGM:Hh_zD1*D", 46)
test data is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
parser.parse("{}D\"CFDjGM:Hh_zD1*D", "{}D\"CFDjGM:Hh_zD1*D", 46);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
        DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
        Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
        parser.parse("1024D\"CFDjGM:Hh_zD1*D", "1024D\"CFDjGM:Hh_zD1*D", 1024);
    }
}
statement is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: DefaultErrorReporter.instance is DefaultErrorReporter
CtField is: static org.mozilla.javascript.DefaultErrorReporter org.mozilla.javascript.DefaultErrorReporter.instance DefaultErrorReporter instance
statement is: Parser parser = new Parser(compilerEnvirons, defaultErrorReporter), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: parser.parse("1024D\"CFDjGM:Hh_zD1*D", "1024D\"CFDjGM:Hh_zD1*D", 1024), class spoon.support.reflect.code.CtInvocationImpl
invocation is: parser.parse("1024D\"CFDjGM:Hh_zD1*D", "1024D\"CFDjGM:Hh_zD1*D", 1024) target is: parser method is: parse(java.lang.String,java.lang.String,int)
source statement: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V callee: VariableReference: Statement 2, type org.mozilla.javascript.Parserindex is: 2
Matched Method is: parse(Ljava/lang/String;Ljava/lang/String;I)Lorg/mozilla/javascript/ScriptOrFnNode;
TestCase is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
String string = "1024D\"CFDjGM:Hh_zD1*D";
String string = "1024D\"CFDjGM:Hh_zD1*D";
int _int = 1024;
parser.parse(string, string, _int);

statement is: org.mozilla.javascript.CompilerEnvirons()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.CompilerEnvirons
statement code is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons()
statement is: org.evosuite.testcase.statements.FieldStatement@35127c92 type is: class org.evosuite.testcase.statements.FieldStatement return type class org.mozilla.javascript.DefaultErrorReporter
statement code is: DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance
statement is: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.Parser
statement code is: Parser parser = new Parser(arg0, arg1)
statement is: parse(Ljava/lang/String;Ljava/lang/String;I)Lorg/mozilla/javascript/ScriptOrFnNode; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.mozilla.javascript.ScriptOrFnNode
statement code is: ScriptOrFnNode parse = parser.parse("break", "break", 46)
test data is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
parser.parse("break", "break", 46);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
        DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
        Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
        parser.parse("break", "break", 46);
        // Improved test data
        CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
        DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
        Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
        parser.parse("continue", "continue", 46);
    }
}
statement is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: DefaultErrorReporter.instance is DefaultErrorReporter
CtField is: static org.mozilla.javascript.DefaultErrorReporter org.mozilla.javascript.DefaultErrorReporter.instance DefaultErrorReporter instance
statement is: Parser parser = new Parser(compilerEnvirons, defaultErrorReporter), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: parser.parse("break", "break", 46), class spoon.support.reflect.code.CtInvocationImpl
invocation is: parser.parse("break", "break", 46) target is: parser method is: parse(java.lang.String,java.lang.String,int)
source statement: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V callee: VariableReference: Statement 2, type org.mozilla.javascript.Parserindex is: 2
Matched Method is: parse(Ljava/lang/String;Ljava/lang/String;I)Lorg/mozilla/javascript/ScriptOrFnNode;
statement is: // Improved test data
CompilerEnvirons compilerEnvirons = new CompilerEnvirons(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: DefaultErrorReporter.instance is DefaultErrorReporter
CtField is: static org.mozilla.javascript.DefaultErrorReporter org.mozilla.javascript.DefaultErrorReporter.instance DefaultErrorReporter instance
statement is: Parser parser = new Parser(compilerEnvirons, defaultErrorReporter), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: parser.parse("continue", "continue", 46), class spoon.support.reflect.code.CtInvocationImpl
invocation is: parser.parse("continue", "continue", 46) target is: parser method is: parse(java.lang.String,java.lang.String,int)
source statement: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V callee: VariableReference: Statement 2, type org.mozilla.javascript.Parserindex is: 9
Matched Method is: parse(Ljava/lang/String;Ljava/lang/String;I)Lorg/mozilla/javascript/ScriptOrFnNode;
TestCase is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
String string = "break";
String string = "break";
int _int = 46;
parser.parse(string, string, _int);
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
String string = "continue";
String string = "continue";
int _int = 46;
parser.parse(string, string, _int);

statement is: org.mozilla.javascript.CompilerEnvirons()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.CompilerEnvirons
statement code is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons()
statement is: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.Parser
statement code is: Parser parser = new Parser(arg0, (ErrorReporter) null)
statement is: parse(Ljava/lang/String;Ljava/lang/String;I)Lorg/mozilla/javascript/ScriptOrFnNode; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.mozilla.javascript.ScriptOrFnNode
statement code is: ScriptOrFnNode parse = parser.parse("return", "return", 101)
test data is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Parser parser = new Parser(compilerEnvirons, (ErrorReporter) null);
parser.parse("return", "return", 101);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
        Parser parser = new Parser(compilerEnvirons, ((ErrorReporter) (null)));
        parser.parse("int x = 10; int y = 20; return x + y;", "return", 51);// returns the sum of x and y

        parser.parse("int x = 10; return x;", "return", 10);// returns the value of x }}

    }
}
statement is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Parser parser = new Parser(compilerEnvirons, ((ErrorReporter) (null))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: parser.parse("int x = 10; int y = 20; return x + y;", "return", 51)// returns the sum of x and y
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: parser.parse("int x = 10; int y = 20; return x + y;", "return", 51)// returns the sum of x and y
 target is: parser method is: parse(java.lang.String,java.lang.String,int)
source statement: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V callee: VariableReference: Statement 1, type org.mozilla.javascript.Parserindex is: 1
Matched Method is: parse(Ljava/lang/String;Ljava/lang/String;I)Lorg/mozilla/javascript/ScriptOrFnNode;
statement is: parser.parse("int x = 10; return x;", "return", 10)// returns the value of x }}
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: parser.parse("int x = 10; return x;", "return", 10)// returns the value of x }}
 target is: parser method is: parse(java.lang.String,java.lang.String,int)
source statement: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V callee: VariableReference: Statement 1, type org.mozilla.javascript.Parserindex is: 1
Matched Method is: parse(Ljava/lang/String;Ljava/lang/String;I)Lorg/mozilla/javascript/ScriptOrFnNode;
TestCase is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Parser parser = new Parser(compilerEnvirons, (ErrorReporter) null);
String string = "int x = 10; int y = 20; return x + y;";
String string = "return";
int _int = 51;
parser.parse(string, string, _int);
String string = "int x = 10; return x;";
String string = "return";
int _int = 10;
parser.parse(string, string, _int);

statement is: org.mozilla.javascript.CompilerEnvirons()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.CompilerEnvirons
statement code is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons()
statement is: getErrorReporter()Lorg/mozilla/javascript/ErrorReporter; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.mozilla.javascript.DefaultErrorReporter
statement code is: DefaultErrorReporter errorReporter = (DefaultErrorReporter)compilerEnvirons.getErrorReporter()
statement is: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.Parser
statement code is: Parser parser = new Parser(arg0, arg1)
statement is: parse(Ljava/lang/String;Ljava/lang/String;I)Lorg/mozilla/javascript/ScriptOrFnNode; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.mozilla.javascript.ScriptOrFnNode
statement code is: ScriptOrFnNode parse = parser.parse("throw ", "throw ", 3420)
test data is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)compilerEnvirons.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
parser.parse("throw ", "throw ", 3420);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
        DefaultErrorReporter errorReporter = ((DefaultErrorReporter) (compilerEnvirons.getErrorReporter()));
        Parser parser = new Parser(compilerEnvirons, errorReporter);
        parser.parse("throw", "throw", 1234567890);
    }
}
statement is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: DefaultErrorReporter errorReporter = ((DefaultErrorReporter) (compilerEnvirons.getErrorReporter())), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: ((DefaultErrorReporter) (compilerEnvirons.getErrorReporter())) target is: compilerEnvirons method is: getErrorReporter()
source statement: org.mozilla.javascript.CompilerEnvirons()V callee: VariableReference: Statement 0, type org.mozilla.javascript.CompilerEnvironsindex is: 0
Matched Method is: getErrorReporter()Lorg/mozilla/javascript/ErrorReporter;
statement is: Parser parser = new Parser(compilerEnvirons, errorReporter), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: parser.parse("throw", "throw", 1234567890), class spoon.support.reflect.code.CtInvocationImpl
invocation is: parser.parse("throw", "throw", 1234567890) target is: parser method is: parse(java.lang.String,java.lang.String,int)
source statement: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V callee: VariableReference: Statement 2, type org.mozilla.javascript.Parserindex is: 2
Matched Method is: parse(Ljava/lang/String;Ljava/lang/String;I)Lorg/mozilla/javascript/ScriptOrFnNode;
TestCase is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)compilerEnvirons.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
String string = "throw";
String string = "throw";
int _int = 1234567890;
parser.parse(string, string, _int);

statement is: org.mozilla.javascript.CompilerEnvirons()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.CompilerEnvirons
statement code is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons()
statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("try ")
statement is: getErrorReporter()Lorg/mozilla/javascript/ErrorReporter; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.mozilla.javascript.DefaultErrorReporter
statement code is: DefaultErrorReporter errorReporter = (DefaultErrorReporter)compilerEnvirons.getErrorReporter()
statement is: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.Parser
statement code is: Parser parser = new Parser(arg0, arg1)
statement is: parse(Ljava/io/Reader;Ljava/lang/String;I)Lorg/mozilla/javascript/ScriptOrFnNode; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.mozilla.javascript.ScriptOrFnNode
statement code is: ScriptOrFnNode parse = parser.parse((Reader) arg0, (String) null, (-443))
test data is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
StringReader stringReader = new StringReader("try ");
DefaultErrorReporter errorReporter = (DefaultErrorReporter)compilerEnvirons.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
parser.parse((Reader) stringReader, (String) null, (-443));

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
        StringReader stringReader = new StringReader("try { // Example code with an error }");
        DefaultErrorReporter errorReporter = ((DefaultErrorReporter) (compilerEnvirons.getErrorReporter()));
        Parser parser = new Parser(compilerEnvirons, errorReporter);
        parser.parse(((Reader) (stringReader)), ((String) (null)), "errorOffset");
    }
}
statement is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: StringReader stringReader = new StringReader("try { // Example code with an error }"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: DefaultErrorReporter errorReporter = ((DefaultErrorReporter) (compilerEnvirons.getErrorReporter())), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: ((DefaultErrorReporter) (compilerEnvirons.getErrorReporter())) target is: compilerEnvirons method is: getErrorReporter()
source statement: org.mozilla.javascript.CompilerEnvirons()V callee: VariableReference: Statement 0, type org.mozilla.javascript.CompilerEnvironsindex is: 0
Matched Method is: getErrorReporter()Lorg/mozilla/javascript/ErrorReporter;
statement is: Parser parser = new Parser(compilerEnvirons, errorReporter), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: parser.parse(((Reader) (stringReader)), ((String) (null)), "errorOffset"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: parser.parse(((Reader) (stringReader)), ((String) (null)), "errorOffset") target is: parser method is: parse(Reader,java.lang.String,java.lang.String)
source statement: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V callee: VariableReference: Statement 3, type org.mozilla.javascript.Parserindex is: 4
Matched Method is: parse(Ljava/io/Reader;Ljava/lang/String;I)Lorg/mozilla/javascript/ScriptOrFnNode;
i 2 Parameters size() 2 Num of Method Parameters: 3
TestCase is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
String string = "try { // Example code with an error }";
StringReader stringReader = new StringReader(string);
DefaultErrorReporter errorReporter = (DefaultErrorReporter)compilerEnvirons.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
String string = "errorOffset";
int _int = null;
((Parser) errorReporter).parse((Reader) stringReader, string, _int);

statement is: org.mozilla.javascript.CompilerEnvirons()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.CompilerEnvirons
statement code is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons()
statement is: org.evosuite.testcase.statements.FieldStatement@35127c92 type is: class org.evosuite.testcase.statements.FieldStatement return type class org.mozilla.javascript.DefaultErrorReporter
statement code is: DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance
statement is: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.Parser
statement code is: Parser parser = new Parser(arg0, arg1)
statement is: parse(Ljava/lang/String;Ljava/lang/String;I)Lorg/mozilla/javascript/ScriptOrFnNode; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.mozilla.javascript.ScriptOrFnNode
statement code is: ScriptOrFnNode parse = parser.parse("if ", "if ", 152)
test data is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
parser.parse("if ", "if ", 152);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
        DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
        Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
    }
}
statement is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: DefaultErrorReporter.instance is DefaultErrorReporter
CtField is: static org.mozilla.javascript.DefaultErrorReporter org.mozilla.javascript.DefaultErrorReporter.instance DefaultErrorReporter instance
statement is: Parser parser = new Parser(compilerEnvirons, defaultErrorReporter), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);

statement is: org.mozilla.javascript.CompilerEnvirons()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.CompilerEnvirons
statement code is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons()
statement is: forEval(Lorg/mozilla/javascript/ErrorReporter;)Lorg/mozilla/javascript/ErrorReporter; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.mozilla.javascript.DefaultErrorReporter
statement code is: DefaultErrorReporter forEval = (DefaultErrorReporter)DefaultErrorReporter.forEval((ErrorReporter) null)
statement is: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.Parser
statement code is: Parser parser = new Parser(arg0, arg1)
statement is: parse(Ljava/lang/String;Ljava/lang/String;I)Lorg/mozilla/javascript/ScriptOrFnNode; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.mozilla.javascript.ScriptOrFnNode
statement code is: ScriptOrFnNode parse = parser.parse("switch", "_NMsJvfHh.(", 32)
test data is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter forEval = (DefaultErrorReporter)DefaultErrorReporter.forEval((ErrorReporter) null);
Parser parser = new Parser(compilerEnvirons, forEval);
parser.parse("switch", "_NMsJvfHh.(", 32);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
        DefaultErrorReporter forEval = ((DefaultErrorReporter) (DefaultErrorReporter.forEval(((ErrorReporter) (null)))));
        Parser parser = new Parser(compilerEnvirons, forEval);
        parser.parse("switch", "string_to_be_parsed", 32);
    }
}
statement is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: DefaultErrorReporter forEval = ((DefaultErrorReporter) (DefaultErrorReporter.forEval(((ErrorReporter) (null))))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: ((DefaultErrorReporter) (DefaultErrorReporter.forEval(((ErrorReporter) (null))))) target is: DefaultErrorReporter method is: forEval(ErrorReporter)
Matched Method is: forEval(Lorg/mozilla/javascript/ErrorReporter;)Lorg/mozilla/javascript/ErrorReporter;
i 0 Parameters size() 0 Num of Method Parameters: 1
statement is: Parser parser = new Parser(compilerEnvirons, forEval), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: parser.parse("switch", "string_to_be_parsed", 32), class spoon.support.reflect.code.CtInvocationImpl
invocation is: parser.parse("switch", "string_to_be_parsed", 32) target is: parser method is: parse(java.lang.String,java.lang.String,int)
source statement: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V callee: VariableReference: Statement 2, type org.mozilla.javascript.Parserindex is: 3
Matched Method is: parse(Ljava/lang/String;Ljava/lang/String;I)Lorg/mozilla/javascript/ScriptOrFnNode;
TestCase is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
ErrorReporter errorReporter = null;
DefaultErrorReporter forEval = (DefaultErrorReporter)DefaultErrorReporter.forEval(errorReporter);
Parser parser = new Parser(compilerEnvirons, forEval);
String string = "switch";
String string = "string_to_be_parsed";
int _int = 32;
((Parser) forEval).parse(string, string, _int);

statement is: org.mozilla.javascript.CompilerEnvirons()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.CompilerEnvirons
statement code is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons()
statement is: org.evosuite.testcase.statements.FieldStatement@35127c92 type is: class org.evosuite.testcase.statements.FieldStatement return type class org.mozilla.javascript.DefaultErrorReporter
statement code is: DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance
statement is: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.Parser
statement code is: Parser parser = new Parser(arg0, arg1)
statement is: parse(Ljava/lang/String;Ljava/lang/String;I)Lorg/mozilla/javascript/ScriptOrFnNode; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.mozilla.javascript.ScriptOrFnNode
statement code is: ScriptOrFnNode parse = parser.parse("default", "IJ3aritOhZ2{7;9}`6", 157)
test data is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
parser.parse("default", "IJ3aritOhZ2{7;9}`6", 157);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
        DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
        Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
    }
}
statement is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: DefaultErrorReporter.instance is DefaultErrorReporter
CtField is: static org.mozilla.javascript.DefaultErrorReporter org.mozilla.javascript.DefaultErrorReporter.instance DefaultErrorReporter instance
statement is: Parser parser = new Parser(compilerEnvirons, defaultErrorReporter), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);

statement is: org.mozilla.javascript.CompilerEnvirons()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.CompilerEnvirons
statement code is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons()
statement is: org.evosuite.testcase.statements.FieldStatement@35127c92 type is: class org.evosuite.testcase.statements.FieldStatement return type class org.mozilla.javascript.DefaultErrorReporter
statement code is: DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance
statement is: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.Parser
statement code is: Parser parser = new Parser(arg0, arg1)
statement is: parse(Ljava/lang/String;Ljava/lang/String;I)Lorg/mozilla/javascript/ScriptOrFnNode; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.mozilla.javascript.ScriptOrFnNode
statement code is: ScriptOrFnNode parse = parser.parse("for ", " ee38HK-Q|U", 1424)
test data is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
parser.parse("for ", " ee38HK-Q|U", 1424);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
        DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
        Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
    }
}
statement is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: DefaultErrorReporter.instance is DefaultErrorReporter
CtField is: static org.mozilla.javascript.DefaultErrorReporter org.mozilla.javascript.DefaultErrorReporter.instance DefaultErrorReporter instance
statement is: Parser parser = new Parser(compilerEnvirons, defaultErrorReporter), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);

statement is: org.mozilla.javascript.CompilerEnvirons()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.CompilerEnvirons
statement code is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons()
statement is: getErrorReporter()Lorg/mozilla/javascript/ErrorReporter; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.mozilla.javascript.DefaultErrorReporter
statement code is: DefaultErrorReporter errorReporter = (DefaultErrorReporter)compilerEnvirons.getErrorReporter()
statement is: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.Parser
statement code is: Parser parser = new Parser(arg0, arg1)
statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("var ")
statement is: parse(Ljava/io/Reader;Ljava/lang/String;I)Lorg/mozilla/javascript/ScriptOrFnNode; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.mozilla.javascript.ScriptOrFnNode
statement code is: ScriptOrFnNode parse = parser.parse((Reader) arg0, "msg.bad.var", 310)
test data is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)compilerEnvirons.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
StringReader stringReader = new StringReader("var ");
parser.parse((Reader) stringReader, "msg.bad.var", 310);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
        DefaultErrorReporter errorReporter = ((DefaultErrorReporter) (compilerEnvirons.getErrorReporter()));
        Parser parser = new Parser(compilerEnvirons, errorReporter);
        StringReader stringReader = new StringReader("var myVariable: Int = 10");
        parser.parse(((Reader) (stringReader)), "msg.bad.var", 310);
    }
}
statement is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: DefaultErrorReporter errorReporter = ((DefaultErrorReporter) (compilerEnvirons.getErrorReporter())), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: ((DefaultErrorReporter) (compilerEnvirons.getErrorReporter())) target is: compilerEnvirons method is: getErrorReporter()
source statement: org.mozilla.javascript.CompilerEnvirons()V callee: VariableReference: Statement 0, type org.mozilla.javascript.CompilerEnvironsindex is: 0
Matched Method is: getErrorReporter()Lorg/mozilla/javascript/ErrorReporter;
statement is: Parser parser = new Parser(compilerEnvirons, errorReporter), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: StringReader stringReader = new StringReader("var myVariable: Int = 10"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: parser.parse(((Reader) (stringReader)), "msg.bad.var", 310), class spoon.support.reflect.code.CtInvocationImpl
invocation is: parser.parse(((Reader) (stringReader)), "msg.bad.var", 310) target is: parser method is: parse(Reader,java.lang.String,int)
source statement: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V callee: VariableReference: Statement 2, type org.mozilla.javascript.Parserindex is: 2
Matched Method is: parse(Ljava/io/Reader;Ljava/lang/String;I)Lorg/mozilla/javascript/ScriptOrFnNode;
TestCase is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)compilerEnvirons.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
String string = "var myVariable: Int = 10";
StringReader stringReader = new StringReader(string);
String string = "msg.bad.var";
int _int = 310;
parser.parse((Reader) stringReader, string, _int);

statement is: org.evosuite.testcase.statements.FieldStatement@35127c92 type is: class org.evosuite.testcase.statements.FieldStatement return type class org.mozilla.javascript.DefaultErrorReporter
statement code is: DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance
statement is: org.mozilla.javascript.CompilerEnvirons()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.CompilerEnvirons
statement code is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons()
statement is: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.Parser
statement code is: Parser parser = new Parser(arg0, arg1)
statement is: parse(Ljava/lang/String;Ljava/lang/String;I)Lorg/mozilla/javascript/ScriptOrFnNode; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.mozilla.javascript.ScriptOrFnNode
statement code is: ScriptOrFnNode parse = parser.parse("with", "with", (-3800))
test data is: DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
parser.parse("with", "with", (-3800));

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
        CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
        Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
        parser.parse("with", "with", 1234567890);// Improved test data: using a more descriptive and representative value for the third argument. }}

    }
}
statement is: DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: DefaultErrorReporter.instance is DefaultErrorReporter
CtField is: static org.mozilla.javascript.DefaultErrorReporter org.mozilla.javascript.DefaultErrorReporter.instance DefaultErrorReporter instance
statement is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Parser parser = new Parser(compilerEnvirons, defaultErrorReporter), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: parser.parse("with", "with", 1234567890)// Improved test data: using a more descriptive and representative value for the third argument. }}
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: parser.parse("with", "with", 1234567890)// Improved test data: using a more descriptive and representative value for the third argument. }}
 target is: parser method is: parse(java.lang.String,java.lang.String,int)
source statement: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V callee: VariableReference: Statement 2, type org.mozilla.javascript.Parserindex is: 2
Matched Method is: parse(Ljava/lang/String;Ljava/lang/String;I)Lorg/mozilla/javascript/ScriptOrFnNode;
TestCase is: DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
String string = "with";
String string = "with";
int _int = 1234567890;
parser.parse(string, string, _int);

statement is: org.mozilla.javascript.CompilerEnvirons()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.CompilerEnvirons
statement code is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons()
statement is: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.Parser
statement code is: Parser parser = new Parser(arg0, (ErrorReporter) null)
statement is: parse(Ljava/lang/String;Ljava/lang/String;I)Lorg/mozilla/javascript/ScriptOrFnNode; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.mozilla.javascript.ScriptOrFnNode
statement code is: ScriptOrFnNode parse = parser.parse("const", "<QQnrsx6G0-MXbf", 159)
test data is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Parser parser = new Parser(compilerEnvirons, (ErrorReporter) null);
parser.parse("const", "<QQnrsx6G0-MXbf", 159);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
        Parser parser = new Parser(compilerEnvirons, ((ErrorReporter) (null)));
        parser.parse("const", "<QQnrsx6G0-MXbf", 159);
    }
}
statement is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Parser parser = new Parser(compilerEnvirons, ((ErrorReporter) (null))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: parser.parse("const", "<QQnrsx6G0-MXbf", 159), class spoon.support.reflect.code.CtInvocationImpl
invocation is: parser.parse("const", "<QQnrsx6G0-MXbf", 159) target is: parser method is: parse(java.lang.String,java.lang.String,int)
source statement: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V callee: VariableReference: Statement 1, type org.mozilla.javascript.Parserindex is: 1
Matched Method is: parse(Ljava/lang/String;Ljava/lang/String;I)Lorg/mozilla/javascript/ScriptOrFnNode;
TestCase is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Parser parser = new Parser(compilerEnvirons, (ErrorReporter) null);
String string = "const";
String string = "<QQnrsx6G0-MXbf";
int _int = 159;
parser.parse(string, string, _int);

statement is: org.mozilla.javascript.CompilerEnvirons()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.CompilerEnvirons
statement code is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons()
statement is: org.evosuite.testcase.statements.FieldStatement@35127c92 type is: class org.evosuite.testcase.statements.FieldStatement return type class org.mozilla.javascript.DefaultErrorReporter
statement code is: DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance
statement is: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.Parser
statement code is: Parser parser = new Parser(arg0, arg1)
statement is: parse(Ljava/lang/String;Ljava/lang/String;I)Lorg/mozilla/javascript/ScriptOrFnNode; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.mozilla.javascript.ScriptOrFnNode
statement code is: ScriptOrFnNode parse = parser.parse("aa:{8+xqCIAm`dF!#", "aa:{8+xqCIAm`dF!#", (-1746))
test data is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
parser.parse("aa:{8+xqCIAm`dF!#", "aa:{8+xqCIAm`dF!#", (-1746));

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
        DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
        Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
    }
}
statement is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: DefaultErrorReporter.instance is DefaultErrorReporter
CtField is: static org.mozilla.javascript.DefaultErrorReporter org.mozilla.javascript.DefaultErrorReporter.instance DefaultErrorReporter instance
statement is: Parser parser = new Parser(compilerEnvirons, defaultErrorReporter), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);

statement is: org.evosuite.testcase.statements.FieldStatement@35127c92 type is: class org.evosuite.testcase.statements.FieldStatement return type class org.mozilla.javascript.DefaultErrorReporter
statement code is: DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance
statement is: org.mozilla.javascript.CompilerEnvirons()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.CompilerEnvirons
statement code is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons()
statement is: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.Parser
statement code is: Parser parser = new Parser(arg0, arg1)
statement is: parse(Ljava/lang/String;Ljava/lang/String;I)Lorg/mozilla/javascript/ScriptOrFnNode; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.mozilla.javascript.ScriptOrFnNode
statement code is: ScriptOrFnNode parse = parser.parse("KGP:V6:rV", "KGP:V6:rV", 24)
test data is: DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
parser.parse("KGP:V6:rV", "KGP:V6:rV", 24);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
        CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
        Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
        parser.parse("KGP:V6:rV", "KGP:V6:rV", 24);
        // Improved test data
        String inputStr1 = "KGP:V6:rV";
        String inputStr2 = "KGP:V6:rV";
        int expectedResult = 24;
    }
}
statement is: DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: DefaultErrorReporter.instance is DefaultErrorReporter
CtField is: static org.mozilla.javascript.DefaultErrorReporter org.mozilla.javascript.DefaultErrorReporter.instance DefaultErrorReporter instance
statement is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Parser parser = new Parser(compilerEnvirons, defaultErrorReporter), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: parser.parse("KGP:V6:rV", "KGP:V6:rV", 24), class spoon.support.reflect.code.CtInvocationImpl
invocation is: parser.parse("KGP:V6:rV", "KGP:V6:rV", 24) target is: parser method is: parse(java.lang.String,java.lang.String,int)
source statement: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V callee: VariableReference: Statement 2, type org.mozilla.javascript.Parserindex is: 2
Matched Method is: parse(Ljava/lang/String;Ljava/lang/String;I)Lorg/mozilla/javascript/ScriptOrFnNode;
statement is: // Improved test data
String inputStr1 = "KGP:V6:rV", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: String inputStr2 = "KGP:V6:rV", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: int expectedResult = 24, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
* this is vulnerable: String string = "KGP:V6:rV"
* this is vulnerable: String string = "KGP:V6:rV"
* this is vulnerable: int _int = 24
TestCase is: DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
String string = "KGP:V6:rV";
String string = "KGP:V6:rV";
int _int = 24;
parser.parse(string, string, _int);
String string = "KGP:V6:rV";
String string = "KGP:V6:rV";
int _int = 24;

statement is: org.mozilla.javascript.CompilerEnvirons()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.CompilerEnvirons
statement code is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons()
statement is: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.Parser
statement code is: Parser parser = new Parser(arg0, (ErrorReporter) null)
statement is: parse(Ljava/lang/String;Ljava/lang/String;I)Lorg/mozilla/javascript/ScriptOrFnNode; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.mozilla.javascript.ScriptOrFnNode
statement code is: ScriptOrFnNode parse = parser.parse("am;pm;monday;tuesday;wednesday;thursday;friday;saturday;sunday;january;february;march;april;may;june;july;august;september;october;november;december;gmt;ut;utc;est;edt;cst;cdt;mst;mdt;pst;pdt;", "am;pm;monday;tuesday;wednesday;thursday;friday;saturday;sunday;january;february;march;april;may;june;july;august;september;october;november;december;gmt;ut;utc;est;edt;cst;cdt;mst;mdt;pst;pdt;", (-1168))
test data is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Parser parser = new Parser(compilerEnvirons, (ErrorReporter) null);
parser.parse("am;pm;monday;tuesday;wednesday;thursday;friday;saturday;sunday;january;february;march;april;may;june;july;august;september;october;november;december;gmt;ut;utc;est;edt;cst;cdt;mst;mdt;pst;pdt;", "am;pm;monday;tuesday;wednesday;thursday;friday;saturday;sunday;january;february;march;april;may;june;july;august;september;october;november;december;gmt;ut;utc;est;edt;cst;cdt;mst;mdt;pst;pdt;", (-1168));

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
        Parser parser = new Parser(compilerEnvirons, ((ErrorReporter) (null)));
        parser.parse("am;pm;monday;tuesday;wednesday;thursday;friday;saturday;sunday;january;february;march;april;may;june;july;august;september;october;november;december;gmt;utc;est;edt;cst;cdt;mst;mdt;pst;pdt;", "morning;afternoon;monday;tuesday;wednesday;thursday;friday;saturday;sunday;january;february;march;april;may;june;july;august;september;october;november;december;gmt;utc;east coast standard time;eastern daylight time;central standard time;central daylight time;mountain standard time;mountain daylight time;pacific standard time;pacific daylight time", -1168);
    }
}
statement is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Parser parser = new Parser(compilerEnvirons, ((ErrorReporter) (null))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: parser.parse("am;pm;monday;tuesday;wednesday;thursday;friday;saturday;sunday;january;february;march;april;may;june;july;august;september;october;november;december;gmt;utc;est;edt;cst;cdt;mst;mdt;pst;pdt;", "morning;afternoon;monday;tuesday;wednesday;thursday;friday;saturday;sunday;january;february;march;april;may;june;july;august;september;october;november;december;gmt;utc;east coast standard time;eastern daylight time;central standard time;central daylight time;mountain standard time;mountain daylight time;pacific standard time;pacific daylight time", -1168), class spoon.support.reflect.code.CtInvocationImpl
invocation is: parser.parse("am;pm;monday;tuesday;wednesday;thursday;friday;saturday;sunday;january;february;march;april;may;june;july;august;september;october;november;december;gmt;utc;est;edt;cst;cdt;mst;mdt;pst;pdt;", "morning;afternoon;monday;tuesday;wednesday;thursday;friday;saturday;sunday;january;february;march;april;may;june;july;august;september;october;november;december;gmt;utc;east coast standard time;eastern daylight time;central standard time;central daylight time;mountain standard time;mountain daylight time;pacific standard time;pacific daylight time", -1168) target is: parser method is: parse(java.lang.String,java.lang.String,int)
source statement: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V callee: VariableReference: Statement 1, type org.mozilla.javascript.Parserindex is: 1
Matched Method is: parse(Ljava/lang/String;Ljava/lang/String;I)Lorg/mozilla/javascript/ScriptOrFnNode;
i 2 Parameters size() 2 Num of Method Parameters: 3
TestCase is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Parser parser = new Parser(compilerEnvirons, (ErrorReporter) null);
String string = "am;pm;monday;tuesday;wednesday;thursday;friday;saturday;sunday;january;february;march;april;may;june;july;august;september;october;november;december;gmt;utc;est;edt;cst;cdt;mst;mdt;pst;pdt;";
String string = "morning;afternoon;monday;tuesday;wednesday;thursday;friday;saturday;sunday;january;february;march;april;may;june;july;august;september;october;november;december;gmt;utc;east coast standard time;eastern daylight time;central standard time;central daylight time;mountain standard time;mountain daylight time;pacific standard time;pacific daylight time";
int _int = null;
parser.parse(string, string, _int);

statement is: org.mozilla.javascript.CompilerEnvirons()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.CompilerEnvirons
statement code is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons()
statement is: org.evosuite.testcase.statements.FieldStatement@35127c92 type is: class org.evosuite.testcase.statements.FieldStatement return type class org.mozilla.javascript.DefaultErrorReporter
statement code is: DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance
statement is: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.Parser
statement code is: Parser parser = new Parser(arg0, arg1)
statement is: parse(Ljava/lang/String;Ljava/lang/String;I)Lorg/mozilla/javascript/ScriptOrFnNode; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.mozilla.javascript.ScriptOrFnNode
statement code is: ScriptOrFnNode parse = parser.parse("zE}ysL#&{i<>+m", "zE}ysL#&{i<>+m", 103)
test data is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
parser.parse("zE}ysL#&{i<>+m", "zE}ysL#&{i<>+m", 103);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
        DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
        Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
        parser.parse("class MyClass { public static void main(String[] args) { System.out.println(\"Hello World\"); } }", "MyClass.java", 103);
    }
}
statement is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: DefaultErrorReporter.instance is DefaultErrorReporter
CtField is: static org.mozilla.javascript.DefaultErrorReporter org.mozilla.javascript.DefaultErrorReporter.instance DefaultErrorReporter instance
statement is: Parser parser = new Parser(compilerEnvirons, defaultErrorReporter), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: parser.parse("class MyClass { public static void main(String[] args) { System.out.println(\"Hello World\"); } }", "MyClass.java", 103), class spoon.support.reflect.code.CtInvocationImpl
invocation is: parser.parse("class MyClass { public static void main(String[] args) { System.out.println(\"Hello World\"); } }", "MyClass.java", 103) target is: parser method is: parse(java.lang.String,java.lang.String,int)
source statement: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V callee: VariableReference: Statement 2, type org.mozilla.javascript.Parserindex is: 2
Matched Method is: parse(Ljava/lang/String;Ljava/lang/String;I)Lorg/mozilla/javascript/ScriptOrFnNode;
TestCase is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
String string = "class MyClass { public static void main(String[] args) { System.out.println(\"Hello World\"); } }";
String string = "MyClass.java";
int _int = 103;
parser.parse(string, string, _int);

statement is: org.mozilla.javascript.CompilerEnvirons()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.CompilerEnvirons
statement code is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons()
statement is: org.evosuite.testcase.statements.FieldStatement@35127c92 type is: class org.evosuite.testcase.statements.FieldStatement return type class org.mozilla.javascript.DefaultErrorReporter
statement code is: DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance
statement is: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.Parser
statement code is: Parser parser = new Parser(arg0, arg1)
statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("ayuY")
statement is: parse(Ljava/io/Reader;Ljava/lang/String;I)Lorg/mozilla/javascript/ScriptOrFnNode; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.mozilla.javascript.ScriptOrFnNode
statement code is: ScriptOrFnNode parse = parser.parse((Reader) arg0, "if ", 152)
statement is: defineSymbol(IZLjava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: parser.defineSymbol(152, false, "ayuY")
test data is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
StringReader stringReader = new StringReader("ayuY");
parser.parse((Reader) stringReader, "if ", 152);
parser.defineSymbol(152, false, "ayuY");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
        DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
        Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
        StringReader stringReader = new StringReader("ayuY");
        parser.parse(((Reader) (stringReader)), "if ", 152);
        parser.defineSymbol(152, false, "ayuY");
    }
}
statement is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: DefaultErrorReporter.instance is DefaultErrorReporter
CtField is: static org.mozilla.javascript.DefaultErrorReporter org.mozilla.javascript.DefaultErrorReporter.instance DefaultErrorReporter instance
statement is: Parser parser = new Parser(compilerEnvirons, defaultErrorReporter), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: StringReader stringReader = new StringReader("ayuY"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: parser.parse(((Reader) (stringReader)), "if ", 152), class spoon.support.reflect.code.CtInvocationImpl
invocation is: parser.parse(((Reader) (stringReader)), "if ", 152) target is: parser method is: parse(Reader,java.lang.String,int)
source statement: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V callee: VariableReference: Statement 2, type org.mozilla.javascript.Parserindex is: 2
Matched Method is: parse(Ljava/io/Reader;Ljava/lang/String;I)Lorg/mozilla/javascript/ScriptOrFnNode;
statement is: parser.defineSymbol(152, false, "ayuY"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: parser.defineSymbol(152, false, "ayuY") target is: parser method is: defineSymbol(int,boolean,java.lang.String)
source statement: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V callee: VariableReference: Statement 2, type org.mozilla.javascript.Parserindex is: 2
Matched Method is: defineSymbol(IZLjava/lang/String;)V
TestCase is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
String string = "ayuY";
StringReader stringReader = new StringReader(string);
String string = "if ";
int _int = 152;
parser.parse((Reader) stringReader, string, _int);
int _int = 152;
boolean _boolean = false;
String string = "ayuY";
parser.defineSymbol(_int, _boolean, string);

statement is: org.mozilla.javascript.CompilerEnvirons()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.CompilerEnvirons
statement code is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons()
statement is: org.evosuite.testcase.statements.FieldStatement@35127c92 type is: class org.evosuite.testcase.statements.FieldStatement return type class org.mozilla.javascript.DefaultErrorReporter
statement code is: DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance
statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("hor")
statement is: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.Parser
statement code is: Parser parser = new Parser(arg0, arg1)
statement is: parse(Ljava/io/Reader;Ljava/lang/String;I)Lorg/mozilla/javascript/ScriptOrFnNode; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.mozilla.javascript.ScriptOrFnNode
statement code is: ScriptOrFnNode parse = parser.parse((Reader) arg0, "hor", 160)
statement is: defineSymbol(IZLjava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: parser.defineSymbol(86, false, "E+t")
statement is: defineSymbol(IZLjava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: parser.defineSymbol(1, false, "E+t")
test data is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
StringReader stringReader = new StringReader("hor");
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
parser.parse((Reader) stringReader, "hor", 160);
parser.defineSymbol(86, false, "E+t");
parser.defineSymbol(1, false, "E+t");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
        DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
        StringReader stringReader = new StringReader("The quick brown fox jumps over the lazy dog.");
        Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
        parser.parse(((Reader) (stringReader)), "The quick brown fox jumps over the lazy dog.", 160);
        parser.defineSymbol(86, false, "E+t");
        parser.defineSymbol(1, false, "E+t");
    }
}
statement is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: DefaultErrorReporter.instance is DefaultErrorReporter
CtField is: static org.mozilla.javascript.DefaultErrorReporter org.mozilla.javascript.DefaultErrorReporter.instance DefaultErrorReporter instance
statement is: StringReader stringReader = new StringReader("The quick brown fox jumps over the lazy dog."), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Parser parser = new Parser(compilerEnvirons, defaultErrorReporter), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: parser.parse(((Reader) (stringReader)), "The quick brown fox jumps over the lazy dog.", 160), class spoon.support.reflect.code.CtInvocationImpl
invocation is: parser.parse(((Reader) (stringReader)), "The quick brown fox jumps over the lazy dog.", 160) target is: parser method is: parse(Reader,java.lang.String,int)
source statement: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V callee: VariableReference: Statement 3, type org.mozilla.javascript.Parserindex is: 4
Matched Method is: parse(Ljava/io/Reader;Ljava/lang/String;I)Lorg/mozilla/javascript/ScriptOrFnNode;
statement is: parser.defineSymbol(86, false, "E+t"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: parser.defineSymbol(86, false, "E+t") target is: parser method is: defineSymbol(int,boolean,java.lang.String)
source statement: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V callee: VariableReference: Statement 3, type org.mozilla.javascript.Parserindex is: 4
source statement: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V callee: VariableReference: Statement 3, type org.mozilla.javascript.Parserindex is: 4
Matched Method is: defineSymbol(IZLjava/lang/String;)V
statement is: parser.defineSymbol(1, false, "E+t"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: parser.defineSymbol(1, false, "E+t") target is: parser method is: defineSymbol(int,boolean,java.lang.String)
source statement: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V callee: VariableReference: Statement 3, type org.mozilla.javascript.Parserindex is: 4
source statement: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V callee: VariableReference: Statement 3, type org.mozilla.javascript.Parserindex is: 4
Matched Method is: defineSymbol(IZLjava/lang/String;)V
TestCase is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
String string = "The quick brown fox jumps over the lazy dog.";
StringReader stringReader = new StringReader(string);
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
String string = "The quick brown fox jumps over the lazy dog.";
int _int = 160;
((Parser) stringReader).parse((Reader) stringReader, string, _int);
int _int = 86;
boolean _boolean = false;
String string = "E+t";
((Parser) stringReader).defineSymbol(_int, _boolean, string);
int _int = 1;
boolean _boolean = false;
String string = "E+t";
((Parser) stringReader).defineSymbol(_int, _boolean, string);

statement is: org.mozilla.javascript.CompilerEnvirons()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.CompilerEnvirons
statement code is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons()
statement is: org.evosuite.testcase.statements.FieldStatement@35127c92 type is: class org.evosuite.testcase.statements.FieldStatement return type class org.mozilla.javascript.DefaultErrorReporter
statement code is: DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance
statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("F&M")
statement is: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.Parser
statement code is: Parser parser = new Parser(arg0, arg1)
statement is: parse(Ljava/io/Reader;Ljava/lang/String;I)Lorg/mozilla/javascript/ScriptOrFnNode; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.mozilla.javascript.ScriptOrFnNode
statement code is: ScriptOrFnNode parse = parser.parse((Reader) arg0, "language version", 10)
statement is: defineSymbol(IZLjava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: parser.defineSymbol(108, false, "error reporter")
test data is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
StringReader stringReader = new StringReader("F&M");
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
parser.parse((Reader) stringReader, "language version", 10);
parser.defineSymbol(108, false, "error reporter");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
        DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
        StringReader stringReader = new StringReader("F&M");
        Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
        parser.parse(((Reader) (stringReader)), "language version", 10);
        parser.defineSymbol(108, false, "error reporter");
    }
}
statement is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: DefaultErrorReporter.instance is DefaultErrorReporter
CtField is: static org.mozilla.javascript.DefaultErrorReporter org.mozilla.javascript.DefaultErrorReporter.instance DefaultErrorReporter instance
statement is: StringReader stringReader = new StringReader("F&M"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Parser parser = new Parser(compilerEnvirons, defaultErrorReporter), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: parser.parse(((Reader) (stringReader)), "language version", 10), class spoon.support.reflect.code.CtInvocationImpl
invocation is: parser.parse(((Reader) (stringReader)), "language version", 10) target is: parser method is: parse(Reader,java.lang.String,int)
source statement: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V callee: VariableReference: Statement 3, type org.mozilla.javascript.Parserindex is: 4
Matched Method is: parse(Ljava/io/Reader;Ljava/lang/String;I)Lorg/mozilla/javascript/ScriptOrFnNode;
statement is: parser.defineSymbol(108, false, "error reporter"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: parser.defineSymbol(108, false, "error reporter") target is: parser method is: defineSymbol(int,boolean,java.lang.String)
source statement: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V callee: VariableReference: Statement 3, type org.mozilla.javascript.Parserindex is: 4
Matched Method is: defineSymbol(IZLjava/lang/String;)V
TestCase is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
String string = "F&M";
StringReader stringReader = new StringReader(string);
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
String string = "language version";
int _int = 10;
((Parser) stringReader).parse((Reader) stringReader, string, _int);
int _int = 108;
boolean _boolean = false;
String string = "error reporter";
((Parser) stringReader).defineSymbol(_int, _boolean, string);

statement is: org.mozilla.javascript.CompilerEnvirons()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.CompilerEnvirons
statement code is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons()
statement is: org.evosuite.testcase.statements.FieldStatement@35127c92 type is: class org.evosuite.testcase.statements.FieldStatement return type class org.mozilla.javascript.DefaultErrorReporter
statement code is: DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance
statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("F&M")
statement is: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.Parser
statement code is: Parser parser = new Parser(arg0, arg1)
statement is: parse(Ljava/io/Reader;Ljava/lang/String;I)Lorg/mozilla/javascript/ScriptOrFnNode; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.mozilla.javascript.ScriptOrFnNode
statement code is: ScriptOrFnNode parse = parser.parse((Reader) arg0, "fontcolor", 50)
statement is: defineSymbol(IZLjava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: parser.defineSymbol(153, false, "language version")
test data is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
StringReader stringReader = new StringReader("F&M");
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
parser.parse((Reader) stringReader, "fontcolor", 50);
parser.defineSymbol(153, false, "language version");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
        DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
        StringReader stringReader = new StringReader("Arial");
        Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
        parser.parse(((Reader) (stringReader)), "fontfamily", 50);
        parser.defineSymbol(153, false, "language version");
    }
}
statement is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: DefaultErrorReporter.instance is DefaultErrorReporter
CtField is: static org.mozilla.javascript.DefaultErrorReporter org.mozilla.javascript.DefaultErrorReporter.instance DefaultErrorReporter instance
statement is: StringReader stringReader = new StringReader("Arial"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Parser parser = new Parser(compilerEnvirons, defaultErrorReporter), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: parser.parse(((Reader) (stringReader)), "fontfamily", 50), class spoon.support.reflect.code.CtInvocationImpl
invocation is: parser.parse(((Reader) (stringReader)), "fontfamily", 50) target is: parser method is: parse(Reader,java.lang.String,int)
source statement: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V callee: VariableReference: Statement 3, type org.mozilla.javascript.Parserindex is: 4
Matched Method is: parse(Ljava/io/Reader;Ljava/lang/String;I)Lorg/mozilla/javascript/ScriptOrFnNode;
statement is: parser.defineSymbol(153, false, "language version"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: parser.defineSymbol(153, false, "language version") target is: parser method is: defineSymbol(int,boolean,java.lang.String)
source statement: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V callee: VariableReference: Statement 3, type org.mozilla.javascript.Parserindex is: 4
Matched Method is: defineSymbol(IZLjava/lang/String;)V
TestCase is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
String string = "Arial";
StringReader stringReader = new StringReader(string);
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
String string = "fontfamily";
int _int = 50;
((Parser) stringReader).parse((Reader) stringReader, string, _int);
int _int = 153;
boolean _boolean = false;
String string = "language version";
((Parser) stringReader).defineSymbol(_int, _boolean, string);

statement is: org.mozilla.javascript.CompilerEnvirons()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.CompilerEnvirons
statement code is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons()
statement is: org.evosuite.testcase.statements.FieldStatement@35127c92 type is: class org.evosuite.testcase.statements.FieldStatement return type class org.mozilla.javascript.DefaultErrorReporter
statement code is: DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance
statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("taK")
statement is: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.Parser
statement code is: Parser parser = new Parser(arg0, arg1)
statement is: parse(Ljava/io/Reader;Ljava/lang/String;I)Lorg/mozilla/javascript/ScriptOrFnNode; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.mozilla.javascript.ScriptOrFnNode
statement code is: ScriptOrFnNode parse = parser.parse((Reader) arg0, "S1a/,G/{>,\"{rmtJ=", 121)
statement is: defineSymbol(IZLjava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: parser.defineSymbol(152, true, "ayuY")
test data is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
StringReader stringReader = new StringReader("taK");
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
parser.parse((Reader) stringReader, "S1a/,G/{>,\"{rmtJ=", 121);
parser.defineSymbol(152, true, "ayuY");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
        DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
        StringReader stringReader = new StringReader("This is a sample input string");
        Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
        parser.parse(((Reader) (stringReader)), "S1a/,G/{>,\"{rmtJ=", 121);
        parser.defineSymbol(152, true, "This is a sample symbol definition");
    }
}
statement is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: DefaultErrorReporter.instance is DefaultErrorReporter
CtField is: static org.mozilla.javascript.DefaultErrorReporter org.mozilla.javascript.DefaultErrorReporter.instance DefaultErrorReporter instance
statement is: StringReader stringReader = new StringReader("This is a sample input string"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Parser parser = new Parser(compilerEnvirons, defaultErrorReporter), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: parser.parse(((Reader) (stringReader)), "S1a/,G/{>,\"{rmtJ=", 121), class spoon.support.reflect.code.CtInvocationImpl
invocation is: parser.parse(((Reader) (stringReader)), "S1a/,G/{>,\"{rmtJ=", 121) target is: parser method is: parse(Reader,java.lang.String,int)
source statement: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V callee: VariableReference: Statement 3, type org.mozilla.javascript.Parserindex is: 4
Matched Method is: parse(Ljava/io/Reader;Ljava/lang/String;I)Lorg/mozilla/javascript/ScriptOrFnNode;
statement is: parser.defineSymbol(152, true, "This is a sample symbol definition"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: parser.defineSymbol(152, true, "This is a sample symbol definition") target is: parser method is: defineSymbol(int,boolean,java.lang.String)
source statement: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V callee: VariableReference: Statement 3, type org.mozilla.javascript.Parserindex is: 4
Matched Method is: defineSymbol(IZLjava/lang/String;)V
TestCase is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
String string = "This is a sample input string";
StringReader stringReader = new StringReader(string);
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
String string = "S1a/,G/{>,\"{rmtJ=";
int _int = 121;
((Parser) stringReader).parse((Reader) stringReader, string, _int);
int _int = 152;
boolean _boolean = true;
String string = "This is a sample symbol definition";
((Parser) stringReader).defineSymbol(_int, _boolean, string);

statement is: org.mozilla.javascript.CompilerEnvirons()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.CompilerEnvirons
statement code is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons()
statement is: org.evosuite.testcase.statements.FieldStatement@35127c92 type is: class org.evosuite.testcase.statements.FieldStatement return type class org.mozilla.javascript.DefaultErrorReporter
statement code is: DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance
statement is: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.Parser
statement code is: Parser parser = new Parser(arg0, arg1)
statement is: parse(Ljava/lang/String;Ljava/lang/String;I)Lorg/mozilla/javascript/ScriptOrFnNode; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.mozilla.javascript.ScriptOrFnNode
statement code is: ScriptOrFnNode parse = parser.parse("ZMF3_^Px,Z<LRi~", "ZMF3_^Px,Z<LRi~", 126)
test data is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
parser.parse("ZMF3_^Px,Z<LRi~", "ZMF3_^Px,Z<LRi~", 126);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
        DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
        Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
        parser.parse("ZMF3_^Px,Z<LRi~", "ZMF3_^Px,Z<LRi~", 126);// ZMF3 is a valid identifier, ^Px, is an array type, Z<LRi~ is a generic type }}

    }
}
statement is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: DefaultErrorReporter.instance is DefaultErrorReporter
CtField is: static org.mozilla.javascript.DefaultErrorReporter org.mozilla.javascript.DefaultErrorReporter.instance DefaultErrorReporter instance
statement is: Parser parser = new Parser(compilerEnvirons, defaultErrorReporter), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: parser.parse("ZMF3_^Px,Z<LRi~", "ZMF3_^Px,Z<LRi~", 126)// ZMF3 is a valid identifier, ^Px, is an array type, Z<LRi~ is a generic type }}
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: parser.parse("ZMF3_^Px,Z<LRi~", "ZMF3_^Px,Z<LRi~", 126)// ZMF3 is a valid identifier, ^Px, is an array type, Z<LRi~ is a generic type }}
 target is: parser method is: parse(java.lang.String,java.lang.String,int)
source statement: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V callee: VariableReference: Statement 2, type org.mozilla.javascript.Parserindex is: 2
Matched Method is: parse(Ljava/lang/String;Ljava/lang/String;I)Lorg/mozilla/javascript/ScriptOrFnNode;
TestCase is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
String string = "ZMF3_^Px,Z<LRi~";
String string = "ZMF3_^Px,Z<LRi~";
int _int = 126;
parser.parse(string, string, _int);

statement is: org.mozilla.javascript.CompilerEnvirons()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.CompilerEnvirons
statement code is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons()
statement is: org.evosuite.testcase.statements.FieldStatement@35127c92 type is: class org.evosuite.testcase.statements.FieldStatement return type class org.mozilla.javascript.DefaultErrorReporter
statement code is: DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance
statement is: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.Parser
statement code is: Parser parser = new Parser(arg0, arg1)
statement is: parse(Ljava/lang/String;Ljava/lang/String;I)Lorg/mozilla/javascript/ScriptOrFnNode; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.mozilla.javascript.ScriptOrFnNode
statement code is: ScriptOrFnNode parse = parser.parse("l?[]y", ">`\r<0'(x.;/*B;", (-1216))
test data is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
parser.parse("l?[]y", ">`\r<0'(x.;/*B;", (-1216));

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
        DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
        Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
    }
}
statement is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: DefaultErrorReporter.instance is DefaultErrorReporter
CtField is: static org.mozilla.javascript.DefaultErrorReporter org.mozilla.javascript.DefaultErrorReporter.instance DefaultErrorReporter instance
statement is: Parser parser = new Parser(compilerEnvirons, defaultErrorReporter), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);

statement is: org.mozilla.javascript.CompilerEnvirons()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.CompilerEnvirons
statement code is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons()
statement is: org.evosuite.testcase.statements.FieldStatement@35127c92 type is: class org.evosuite.testcase.statements.FieldStatement return type class org.mozilla.javascript.DefaultErrorReporter
statement code is: DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance
statement is: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.Parser
statement code is: Parser parser = new Parser(arg0, arg1)
statement is: parse(Ljava/lang/String;Ljava/lang/String;I)Lorg/mozilla/javascript/ScriptOrFnNode; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.mozilla.javascript.ScriptOrFnNode
statement code is: ScriptOrFnNode parse = parser.parse("v||,rf ct", "U4tc&S(2Py)J\u0001re", 20)
test data is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
parser.parse("v||,rf ct", "U4tc&S(2Py)J\u0001re", 20);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Improved test data for the parse method of the Parser class
        CompilerEnvirons compilerEnvirons = new CompilerEnvirons();// Creates a new CompilerEnvirons object.

        DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;// Creates a new instance of the DefaultErrorReporter class.

        Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);// Creates a new instance of the Parser class.

        parser.parse("v||,rf ct", "U4tc&S(2Py)J\u0001re", 20);// Calls the parse method of the Parser object with the given input string and character position. }}

    }
}
statement is: // Improved test data for the parse method of the Parser class
CompilerEnvirons compilerEnvirons = new CompilerEnvirons()// Creates a new CompilerEnvirons object.
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance// Creates a new instance of the DefaultErrorReporter class.
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: DefaultErrorReporter.instance is DefaultErrorReporter
CtField is: static org.mozilla.javascript.DefaultErrorReporter org.mozilla.javascript.DefaultErrorReporter.instance DefaultErrorReporter instance
statement is: Parser parser = new Parser(compilerEnvirons, defaultErrorReporter)// Creates a new instance of the Parser class.
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: parser.parse("v||,rf ct", "U4tc&S(2Py)J\u0001re", 20)// Calls the parse method of the Parser object with the given input string and character position. }}
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: parser.parse("v||,rf ct", "U4tc&S(2Py)J\u0001re", 20)// Calls the parse method of the Parser object with the given input string and character position. }}
 target is: parser method is: parse(java.lang.String,java.lang.String,int)
source statement: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V callee: VariableReference: Statement 2, type org.mozilla.javascript.Parserindex is: 2
Matched Method is: parse(Ljava/lang/String;Ljava/lang/String;I)Lorg/mozilla/javascript/ScriptOrFnNode;
TestCase is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
String string = "v||,rf ct";
String string = "U4tc&S(2Py)J\u0001re";
int _int = 20;
parser.parse(string, string, _int);

statement is: org.mozilla.javascript.CompilerEnvirons()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.CompilerEnvirons
statement code is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons()
statement is: org.evosuite.testcase.statements.FieldStatement@35127c92 type is: class org.evosuite.testcase.statements.FieldStatement return type class org.mozilla.javascript.DefaultErrorReporter
statement code is: DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance
statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("F&&M")
statement is: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.Parser
statement code is: Parser parser = new Parser(arg0, arg1)
statement is: parse(Ljava/io/Reader;Ljava/lang/String;I)Lorg/mozilla/javascript/ScriptOrFnNode; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.mozilla.javascript.ScriptOrFnNode
statement code is: ScriptOrFnNode parse = parser.parse((Reader) arg0, "language version", 12)
test data is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
StringReader stringReader = new StringReader("F&&M");
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
parser.parse((Reader) stringReader, "language version", 12);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
        DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
        StringReader stringReader = new StringReader("F&&M");
        Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
        parser.parse(((Reader) (stringReader)), "language version", 12);
    }
}
statement is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: DefaultErrorReporter.instance is DefaultErrorReporter
CtField is: static org.mozilla.javascript.DefaultErrorReporter org.mozilla.javascript.DefaultErrorReporter.instance DefaultErrorReporter instance
statement is: StringReader stringReader = new StringReader("F&&M"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Parser parser = new Parser(compilerEnvirons, defaultErrorReporter), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: parser.parse(((Reader) (stringReader)), "language version", 12), class spoon.support.reflect.code.CtInvocationImpl
invocation is: parser.parse(((Reader) (stringReader)), "language version", 12) target is: parser method is: parse(Reader,java.lang.String,int)
source statement: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V callee: VariableReference: Statement 3, type org.mozilla.javascript.Parserindex is: 4
Matched Method is: parse(Ljava/io/Reader;Ljava/lang/String;I)Lorg/mozilla/javascript/ScriptOrFnNode;
TestCase is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
String string = "F&&M";
StringReader stringReader = new StringReader(string);
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
String string = "language version";
int _int = 12;
((Parser) stringReader).parse((Reader) stringReader, string, _int);

statement is: org.mozilla.javascript.CompilerEnvirons()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.CompilerEnvirons
statement code is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons()
statement is: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.Parser
statement code is: Parser parser = new Parser(arg0, (ErrorReporter) null)
statement is: parse(Ljava/lang/String;Ljava/lang/String;I)Lorg/mozilla/javascript/ScriptOrFnNode; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.mozilla.javascript.ScriptOrFnNode
statement code is: ScriptOrFnNode parse = parser.parse("F|[$je#N]&r=lK", "F|[$je#N]&r=lK", (-195))
test data is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Parser parser = new Parser(compilerEnvirons, (ErrorReporter) null);
parser.parse("F|[$je#N]&r=lK", "F|[$je#N]&r=lK", (-195));

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
        Parser parser = new Parser(compilerEnvirons, ((ErrorReporter) (null)));
        parser.parse("F|[$je#N]&r=lK", "F|[$je#N]&r=lK", -195);
        // Improved test data
        CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
        Parser parser = new Parser(compilerEnvirons, ((ErrorReporter) (null)));
        parser.parse("F|[$je#N]&r=lK", "F|[$je#N]&r=lK", -195);// Input string and expected output

        // Test case 2:
        CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
        Parser parser = new Parser(compilerEnvirons, ((ErrorReporter) (null)));
        parser.parse("F|[$je#N]&r=lK", "F|[$je#N]&r=lK", -195);// Input string and expected output

        // Test case 3:
        CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
        Parser parser = new Parser(compilerEnvirons, ((ErrorReporter) (null)));
        parser.parse("F|[$je#N]&r=lK", "F|[$je#N]&r=lK", -195);// Input string and expected output }}

    }
}
statement is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Parser parser = new Parser(compilerEnvirons, ((ErrorReporter) (null))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: parser.parse("F|[$je#N]&r=lK", "F|[$je#N]&r=lK", -195), class spoon.support.reflect.code.CtInvocationImpl
invocation is: parser.parse("F|[$je#N]&r=lK", "F|[$je#N]&r=lK", -195) target is: parser method is: parse(java.lang.String,java.lang.String,int)
source statement: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V callee: VariableReference: Statement 1, type org.mozilla.javascript.Parserindex is: 1
Matched Method is: parse(Ljava/lang/String;Ljava/lang/String;I)Lorg/mozilla/javascript/ScriptOrFnNode;
i 2 Parameters size() 2 Num of Method Parameters: 3
statement is: // Improved test data
CompilerEnvirons compilerEnvirons = new CompilerEnvirons(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Parser parser = new Parser(compilerEnvirons, ((ErrorReporter) (null))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: parser.parse("F|[$je#N]&r=lK", "F|[$je#N]&r=lK", -195)// Input string and expected output
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: parser.parse("F|[$je#N]&r=lK", "F|[$je#N]&r=lK", -195)// Input string and expected output
 target is: parser method is: parse(java.lang.String,java.lang.String,int)
source statement: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V callee: VariableReference: Statement 1, type org.mozilla.javascript.Parserindex is: 7
Matched Method is: parse(Ljava/lang/String;Ljava/lang/String;I)Lorg/mozilla/javascript/ScriptOrFnNode;
i 2 Parameters size() 2 Num of Method Parameters: 3
statement is: // Test case 2:
CompilerEnvirons compilerEnvirons = new CompilerEnvirons(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Parser parser = new Parser(compilerEnvirons, ((ErrorReporter) (null))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: parser.parse("F|[$je#N]&r=lK", "F|[$je#N]&r=lK", -195)// Input string and expected output
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: parser.parse("F|[$je#N]&r=lK", "F|[$je#N]&r=lK", -195)// Input string and expected output
 target is: parser method is: parse(java.lang.String,java.lang.String,int)
source statement: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V callee: VariableReference: Statement 1, type org.mozilla.javascript.Parserindex is: 13
Matched Method is: parse(Ljava/lang/String;Ljava/lang/String;I)Lorg/mozilla/javascript/ScriptOrFnNode;
i 2 Parameters size() 2 Num of Method Parameters: 3
statement is: // Test case 3:
CompilerEnvirons compilerEnvirons = new CompilerEnvirons(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Parser parser = new Parser(compilerEnvirons, ((ErrorReporter) (null))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: parser.parse("F|[$je#N]&r=lK", "F|[$je#N]&r=lK", -195)// Input string and expected output }}
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: parser.parse("F|[$je#N]&r=lK", "F|[$je#N]&r=lK", -195)// Input string and expected output }}
 target is: parser method is: parse(java.lang.String,java.lang.String,int)
source statement: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V callee: VariableReference: Statement 1, type org.mozilla.javascript.Parserindex is: 19
Matched Method is: parse(Ljava/lang/String;Ljava/lang/String;I)Lorg/mozilla/javascript/ScriptOrFnNode;
i 2 Parameters size() 2 Num of Method Parameters: 3
TestCase is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Parser parser = new Parser(compilerEnvirons, (ErrorReporter) null);
String string = "F|[$je#N]&r=lK";
String string = "F|[$je#N]&r=lK";
int _int = null;
parser.parse(string, string, _int);
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Parser parser = new Parser(compilerEnvirons, (ErrorReporter) null);
String string = "F|[$je#N]&r=lK";
String string = "F|[$je#N]&r=lK";
int _int = null;
parser.parse(string, string, _int);
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Parser parser = new Parser(compilerEnvirons, (ErrorReporter) null);
String string = "F|[$je#N]&r=lK";
String string = "F|[$je#N]&r=lK";
int _int = null;
parser.parse(string, string, _int);
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Parser parser = new Parser(compilerEnvirons, (ErrorReporter) null);
String string = "F|[$je#N]&r=lK";
String string = "F|[$je#N]&r=lK";
int _int = null;
parser.parse(string, string, _int);

statement is: org.mozilla.javascript.CompilerEnvirons()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.CompilerEnvirons
statement code is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons()
statement is: org.evosuite.testcase.statements.FieldStatement@35127c92 type is: class org.evosuite.testcase.statements.FieldStatement return type class org.mozilla.javascript.DefaultErrorReporter
statement code is: DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance
statement is: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.Parser
statement code is: Parser parser = new Parser(arg0, arg1)
statement is: parse(Ljava/lang/String;Ljava/lang/String;I)Lorg/mozilla/javascript/ScriptOrFnNode; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.mozilla.javascript.ScriptOrFnNode
statement code is: ScriptOrFnNode parse = parser.parse("factory == null", "factory == null", 65)
test data is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
parser.parse("factory == null", "factory == null", 65);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
        DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
        Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
        parser.parse("factory is not set", "factory is an instance of the Factory class", 65);
    }
}
statement is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: DefaultErrorReporter.instance is DefaultErrorReporter
CtField is: static org.mozilla.javascript.DefaultErrorReporter org.mozilla.javascript.DefaultErrorReporter.instance DefaultErrorReporter instance
statement is: Parser parser = new Parser(compilerEnvirons, defaultErrorReporter), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: parser.parse("factory is not set", "factory is an instance of the Factory class", 65), class spoon.support.reflect.code.CtInvocationImpl
invocation is: parser.parse("factory is not set", "factory is an instance of the Factory class", 65) target is: parser method is: parse(java.lang.String,java.lang.String,int)
source statement: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V callee: VariableReference: Statement 2, type org.mozilla.javascript.Parserindex is: 2
Matched Method is: parse(Ljava/lang/String;Ljava/lang/String;I)Lorg/mozilla/javascript/ScriptOrFnNode;
TestCase is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
String string = "factory is not set";
String string = "factory is an instance of the Factory class";
int _int = 65;
parser.parse(string, string, _int);

statement is: org.mozilla.javascript.CompilerEnvirons()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.CompilerEnvirons
statement code is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons()
statement is: org.evosuite.testcase.statements.FieldStatement@35127c92 type is: class org.evosuite.testcase.statements.FieldStatement return type class org.mozilla.javascript.DefaultErrorReporter
statement code is: DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance
statement is: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.Parser
statement code is: Parser parser = new Parser(arg0, arg1)
statement is: parse(Ljava/lang/String;Ljava/lang/String;I)Lorg/mozilla/javascript/ScriptOrFnNode; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.mozilla.javascript.ScriptOrFnNode
statement code is: ScriptOrFnNode parse = parser.parse("Bfa<=6!r4TUT{{8", "'YGfpGJikZy", (-791))
test data is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
parser.parse("Bfa<=6!r4TUT{{8", "'YGfpGJikZy", (-791));

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
        DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
        Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
    }
}
statement is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: DefaultErrorReporter.instance is DefaultErrorReporter
CtField is: static org.mozilla.javascript.DefaultErrorReporter org.mozilla.javascript.DefaultErrorReporter.instance DefaultErrorReporter instance
statement is: Parser parser = new Parser(compilerEnvirons, defaultErrorReporter), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);

statement is: org.mozilla.javascript.CompilerEnvirons()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.CompilerEnvirons
statement code is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons()
statement is: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.Parser
statement code is: Parser parser = new Parser(arg0, (ErrorReporter) null)
statement is: parse(Ljava/lang/String;Ljava/lang/String;I)Lorg/mozilla/javascript/ScriptOrFnNode; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.mozilla.javascript.ScriptOrFnNode
statement code is: ScriptOrFnNode parse = parser.parse("gv18Yz>=", "gv18Yz>=", (-5428))
test data is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Parser parser = new Parser(compilerEnvirons, (ErrorReporter) null);
parser.parse("gv18Yz>=", "gv18Yz>=", (-5428));

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
        Parser parser = new Parser(compilerEnvirons, ((ErrorReporter) (null)));
        parser.parse("gv18Yz>=", "gv18Yz>=", -5428);
    }
}
statement is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Parser parser = new Parser(compilerEnvirons, ((ErrorReporter) (null))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: parser.parse("gv18Yz>=", "gv18Yz>=", -5428), class spoon.support.reflect.code.CtInvocationImpl
invocation is: parser.parse("gv18Yz>=", "gv18Yz>=", -5428) target is: parser method is: parse(java.lang.String,java.lang.String,int)
source statement: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V callee: VariableReference: Statement 1, type org.mozilla.javascript.Parserindex is: 1
Matched Method is: parse(Ljava/lang/String;Ljava/lang/String;I)Lorg/mozilla/javascript/ScriptOrFnNode;
i 2 Parameters size() 2 Num of Method Parameters: 3
TestCase is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Parser parser = new Parser(compilerEnvirons, (ErrorReporter) null);
String string = "gv18Yz>=";
String string = "gv18Yz>=";
int _int = null;
parser.parse(string, string, _int);

statement is: org.mozilla.javascript.CompilerEnvirons()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.CompilerEnvirons
statement code is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons()
statement is: org.evosuite.testcase.statements.FieldStatement@35127c92 type is: class org.evosuite.testcase.statements.FieldStatement return type class org.mozilla.javascript.DefaultErrorReporter
statement code is: DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance
statement is: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.Parser
statement code is: Parser parser = new Parser(arg0, arg1)
statement is: parse(Ljava/lang/String;Ljava/lang/String;I)Lorg/mozilla/javascript/ScriptOrFnNode; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.mozilla.javascript.ScriptOrFnNode
statement code is: ScriptOrFnNode parse = parser.parse("Z<<ED O4hRufFz@G", "Z<<ED O4hRufFz@G", (-1))
test data is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
parser.parse("Z<<ED O4hRufFz@G", "Z<<ED O4hRufFz@G", (-1));

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Improved test data:
        CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
        DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
        Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
        parser.parse("Z<<ED O4hRufFz@G", "Z<<ED O4hRufFz@G", -1);
        // In this test data, the string "Z<<ED O4hRufFz@G" represents a valid Java code snippet that can be parsed correctly by the parser. The value of -1 is used as the starting line number for the parse operation. }}
    }
}
statement is: // Improved test data:
CompilerEnvirons compilerEnvirons = new CompilerEnvirons(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: DefaultErrorReporter.instance is DefaultErrorReporter
CtField is: static org.mozilla.javascript.DefaultErrorReporter org.mozilla.javascript.DefaultErrorReporter.instance DefaultErrorReporter instance
statement is: Parser parser = new Parser(compilerEnvirons, defaultErrorReporter), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: parser.parse("Z<<ED O4hRufFz@G", "Z<<ED O4hRufFz@G", -1), class spoon.support.reflect.code.CtInvocationImpl
invocation is: parser.parse("Z<<ED O4hRufFz@G", "Z<<ED O4hRufFz@G", -1) target is: parser method is: parse(java.lang.String,java.lang.String,int)
source statement: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V callee: VariableReference: Statement 2, type org.mozilla.javascript.Parserindex is: 2
Matched Method is: parse(Ljava/lang/String;Ljava/lang/String;I)Lorg/mozilla/javascript/ScriptOrFnNode;
i 2 Parameters size() 2 Num of Method Parameters: 3
statement is: // In this test data, the string "Z<<ED O4hRufFz@G" represents a valid Java code snippet that can be parsed correctly by the parser. The value of -1 is used as the starting line number for the parse operation. }}, class spoon.support.reflect.code.CtCommentImpl
TestCase is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
String string = "Z<<ED O4hRufFz@G";
String string = "Z<<ED O4hRufFz@G";
int _int = null;
parser.parse(string, string, _int);

statement is: org.mozilla.javascript.CompilerEnvirons()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.CompilerEnvirons
statement code is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons()
statement is: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.Parser
statement code is: Parser parser = new Parser(arg0, (ErrorReporter) null)
statement is: parse(Ljava/lang/String;Ljava/lang/String;I)Lorg/mozilla/javascript/ScriptOrFnNode; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.mozilla.javascript.ScriptOrFnNode
statement code is: ScriptOrFnNode parse = parser.parse("R-{", "R-{", 104)
test data is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Parser parser = new Parser(compilerEnvirons, (ErrorReporter) null);
parser.parse("R-{", "R-{", 104);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
        Parser parser = new Parser(compilerEnvirons, ((ErrorReporter) (null)));
    }
}
statement is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Parser parser = new Parser(compilerEnvirons, ((ErrorReporter) (null))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Parser parser = new Parser(compilerEnvirons, (ErrorReporter) null);

statement is: org.mozilla.javascript.CompilerEnvirons()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.CompilerEnvirons
statement code is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons()
statement is: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.Parser
statement code is: Parser parser = new Parser(arg0, (ErrorReporter) null)
statement is: parse(Ljava/lang/String;Ljava/lang/String;I)Lorg/mozilla/javascript/ScriptOrFnNode; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.mozilla.javascript.ScriptOrFnNode
statement code is: ScriptOrFnNode parse = parser.parse("a/{}]u/c,!vtJqY;P/S", "$qM", 85)
test data is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Parser parser = new Parser(compilerEnvirons, (ErrorReporter) null);
parser.parse("a/{}]u/c,!vtJqY;P/S", "$qM", 85);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
        Parser parser = new Parser(compilerEnvirons, ((ErrorReporter) (null)));
    }
}
statement is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Parser parser = new Parser(compilerEnvirons, ((ErrorReporter) (null))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Parser parser = new Parser(compilerEnvirons, (ErrorReporter) null);

statement is: org.mozilla.javascript.CompilerEnvirons()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.CompilerEnvirons
statement code is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons()
statement is: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.Parser
statement code is: Parser parser = new Parser(arg0, (ErrorReporter) null)
statement is: parse(Ljava/lang/String;Ljava/lang/String;I)Lorg/mozilla/javascript/ScriptOrFnNode; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.mozilla.javascript.ScriptOrFnNode
statement code is: ScriptOrFnNode parse = parser.parse("0%E&++", "K#_@+%8y", 4758)
test data is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Parser parser = new Parser(compilerEnvirons, (ErrorReporter) null);
parser.parse("0%E&++", "K#_@+%8y", 4758);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
        Parser parser = new Parser(compilerEnvirons, ((ErrorReporter) (null)));
        parser.parse("sin(x) * 2 + cos(y)", "x_123", 5);
    }
}
statement is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Parser parser = new Parser(compilerEnvirons, ((ErrorReporter) (null))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: parser.parse("sin(x) * 2 + cos(y)", "x_123", 5), class spoon.support.reflect.code.CtInvocationImpl
invocation is: parser.parse("sin(x) * 2 + cos(y)", "x_123", 5) target is: parser method is: parse(java.lang.String,java.lang.String,int)
source statement: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V callee: VariableReference: Statement 1, type org.mozilla.javascript.Parserindex is: 1
Matched Method is: parse(Ljava/lang/String;Ljava/lang/String;I)Lorg/mozilla/javascript/ScriptOrFnNode;
TestCase is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Parser parser = new Parser(compilerEnvirons, (ErrorReporter) null);
String string = "sin(x) * 2 + cos(y)";
String string = "x_123";
int _int = 5;
parser.parse(string, string, _int);

statement is: org.mozilla.javascript.CompilerEnvirons()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.CompilerEnvirons
statement code is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons()
statement is: org.evosuite.testcase.statements.FieldStatement@35127c92 type is: class org.evosuite.testcase.statements.FieldStatement return type class org.mozilla.javascript.DefaultErrorReporter
statement code is: DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance
statement is: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.Parser
statement code is: Parser parser = new Parser(arg0, arg1)
statement is: parse(Ljava/lang/String;Ljava/lang/String;I)Lorg/mozilla/javascript/ScriptOrFnNode; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.mozilla.javascript.ScriptOrFnNode
statement code is: ScriptOrFnNode parse = parser.parse("-IxXy5O+!>", "-IxXy5O+!>", 122)
test data is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
parser.parse("-IxXy5O+!>", "-IxXy5O+!>", 122);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
        DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
        Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
        parser.parse("-IxXy5O+!>", "-IxXy5O+!>", 122);
        // Testing the parsing of a valid Java expression with a variable declaration }}
    }
}
statement is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: DefaultErrorReporter.instance is DefaultErrorReporter
CtField is: static org.mozilla.javascript.DefaultErrorReporter org.mozilla.javascript.DefaultErrorReporter.instance DefaultErrorReporter instance
statement is: Parser parser = new Parser(compilerEnvirons, defaultErrorReporter), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: parser.parse("-IxXy5O+!>", "-IxXy5O+!>", 122), class spoon.support.reflect.code.CtInvocationImpl
invocation is: parser.parse("-IxXy5O+!>", "-IxXy5O+!>", 122) target is: parser method is: parse(java.lang.String,java.lang.String,int)
source statement: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V callee: VariableReference: Statement 2, type org.mozilla.javascript.Parserindex is: 2
Matched Method is: parse(Ljava/lang/String;Ljava/lang/String;I)Lorg/mozilla/javascript/ScriptOrFnNode;
statement is: // Testing the parsing of a valid Java expression with a variable declaration }}, class spoon.support.reflect.code.CtCommentImpl
TestCase is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
String string = "-IxXy5O+!>";
String string = "-IxXy5O+!>";
int _int = 122;
parser.parse(string, string, _int);

statement is: org.evosuite.testcase.statements.FieldStatement@35127c92 type is: class org.evosuite.testcase.statements.FieldStatement return type class org.mozilla.javascript.DefaultErrorReporter
statement code is: DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance
statement is: org.mozilla.javascript.CompilerEnvirons()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.CompilerEnvirons
statement code is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons()
statement is: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.Parser
statement code is: Parser parser = new Parser(arg0, arg1)
statement is: parse(Ljava/lang/String;Ljava/lang/String;I)Lorg/mozilla/javascript/ScriptOrFnNode; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.mozilla.javascript.ScriptOrFnNode
statement code is: ScriptOrFnNode parse = parser.parse("6+~ .4`d", "6+~ .4`d", (-1468))
test data is: DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
parser.parse("6+~ .4`d", "6+~ .4`d", (-1468));

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
        CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
        Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
        parser.parse("6+~ .4`d", "6+~ .4`d", -1468);
    }
}
statement is: DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: DefaultErrorReporter.instance is DefaultErrorReporter
CtField is: static org.mozilla.javascript.DefaultErrorReporter org.mozilla.javascript.DefaultErrorReporter.instance DefaultErrorReporter instance
statement is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Parser parser = new Parser(compilerEnvirons, defaultErrorReporter), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: parser.parse("6+~ .4`d", "6+~ .4`d", -1468), class spoon.support.reflect.code.CtInvocationImpl
invocation is: parser.parse("6+~ .4`d", "6+~ .4`d", -1468) target is: parser method is: parse(java.lang.String,java.lang.String,int)
source statement: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V callee: VariableReference: Statement 2, type org.mozilla.javascript.Parserindex is: 2
Matched Method is: parse(Ljava/lang/String;Ljava/lang/String;I)Lorg/mozilla/javascript/ScriptOrFnNode;
i 2 Parameters size() 2 Num of Method Parameters: 3
TestCase is: DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
String string = "6+~ .4`d";
String string = "6+~ .4`d";
int _int = null;
parser.parse(string, string, _int);

statement is: org.mozilla.javascript.CompilerEnvirons()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.CompilerEnvirons
statement code is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons()
statement is: org.evosuite.testcase.statements.FieldStatement@35127c92 type is: class org.evosuite.testcase.statements.FieldStatement return type class org.mozilla.javascript.DefaultErrorReporter
statement code is: DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance
statement is: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.Parser
statement code is: Parser parser = new Parser(arg0, arg1)
statement is: parse(Ljava/lang/String;Ljava/lang/String;I)Lorg/mozilla/javascript/ScriptOrFnNode; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.mozilla.javascript.ScriptOrFnNode
statement code is: ScriptOrFnNode parse = parser.parse("delete ", "delete ", 404)
test data is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
parser.parse("delete ", "delete ", 404);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
        DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
        Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
        parser.parse("delete myFile", "delete myFile", 200);
    }
}
statement is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: DefaultErrorReporter.instance is DefaultErrorReporter
CtField is: static org.mozilla.javascript.DefaultErrorReporter org.mozilla.javascript.DefaultErrorReporter.instance DefaultErrorReporter instance
statement is: Parser parser = new Parser(compilerEnvirons, defaultErrorReporter), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: parser.parse("delete myFile", "delete myFile", 200), class spoon.support.reflect.code.CtInvocationImpl
invocation is: parser.parse("delete myFile", "delete myFile", 200) target is: parser method is: parse(java.lang.String,java.lang.String,int)
source statement: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V callee: VariableReference: Statement 2, type org.mozilla.javascript.Parserindex is: 2
Matched Method is: parse(Ljava/lang/String;Ljava/lang/String;I)Lorg/mozilla/javascript/ScriptOrFnNode;
TestCase is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
String string = "delete myFile";
String string = "delete myFile";
int _int = 200;
parser.parse(string, string, _int);

statement is: org.mozilla.javascript.CompilerEnvirons()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.CompilerEnvirons
statement code is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons()
statement is: org.evosuite.testcase.statements.FieldStatement@35127c92 type is: class org.evosuite.testcase.statements.FieldStatement return type class org.mozilla.javascript.DefaultErrorReporter
statement code is: DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance
statement is: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.Parser
statement code is: Parser parser = new Parser(arg0, arg1)
statement is: parse(Ljava/lang/String;Ljava/lang/String;I)Lorg/mozilla/javascript/ScriptOrFnNode; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.mozilla.javascript.ScriptOrFnNode
statement code is: ScriptOrFnNode parse = parser.parse("--", "?", 85)
test data is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
parser.parse("--", "?", 85);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
        DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
        Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
        parser.parse("--", "?", 85);
    }
}
statement is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: DefaultErrorReporter.instance is DefaultErrorReporter
CtField is: static org.mozilla.javascript.DefaultErrorReporter org.mozilla.javascript.DefaultErrorReporter.instance DefaultErrorReporter instance
statement is: Parser parser = new Parser(compilerEnvirons, defaultErrorReporter), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: parser.parse("--", "?", 85), class spoon.support.reflect.code.CtInvocationImpl
invocation is: parser.parse("--", "?", 85) target is: parser method is: parse(java.lang.String,java.lang.String,int)
source statement: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V callee: VariableReference: Statement 2, type org.mozilla.javascript.Parserindex is: 2
Matched Method is: parse(Ljava/lang/String;Ljava/lang/String;I)Lorg/mozilla/javascript/ScriptOrFnNode;
TestCase is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
String string = "--";
String string = "?";
int _int = 85;
parser.parse(string, string, _int);

statement is: org.mozilla.javascript.CompilerEnvirons()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.CompilerEnvirons
statement code is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons()
statement is: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.Parser
statement code is: Parser parser = new Parser(arg0, (ErrorReporter) null)
statement is: parse(Ljava/lang/String;Ljava/lang/String;I)Lorg/mozilla/javascript/ScriptOrFnNode; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.mozilla.javascript.ScriptOrFnNode
statement code is: ScriptOrFnNode parse = parser.parse("void ", "XP:iUxw*Y>Rp7", 1036)
test data is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Parser parser = new Parser(compilerEnvirons, (ErrorReporter) null);
parser.parse("void ", "XP:iUxw*Y>Rp7", 1036);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
        Parser parser = new Parser(compilerEnvirons, ((ErrorReporter) (null)));
        parser.parse("2 + 2", "XP:iUxw*Y>Rp7", 1036);
    }
}
statement is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Parser parser = new Parser(compilerEnvirons, ((ErrorReporter) (null))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: parser.parse("2 + 2", "XP:iUxw*Y>Rp7", 1036), class spoon.support.reflect.code.CtInvocationImpl
invocation is: parser.parse("2 + 2", "XP:iUxw*Y>Rp7", 1036) target is: parser method is: parse(java.lang.String,java.lang.String,int)
source statement: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V callee: VariableReference: Statement 1, type org.mozilla.javascript.Parserindex is: 1
Matched Method is: parse(Ljava/lang/String;Ljava/lang/String;I)Lorg/mozilla/javascript/ScriptOrFnNode;
TestCase is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Parser parser = new Parser(compilerEnvirons, (ErrorReporter) null);
String string = "2 + 2";
String string = "XP:iUxw*Y>Rp7";
int _int = 1036;
parser.parse(string, string, _int);

statement is: org.mozilla.javascript.CompilerEnvirons()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.CompilerEnvirons
statement code is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons()
statement is: setXmlAvailable(Z)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: compilerEnvirons.setXmlAvailable(false)
statement is: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.Parser
statement code is: Parser parser = new Parser(arg0, (ErrorReporter) null)
statement is: parse(Ljava/lang/String;Ljava/lang/String;I)Lorg/mozilla/javascript/ScriptOrFnNode; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.mozilla.javascript.ScriptOrFnNode
statement code is: ScriptOrFnNode parse = parser.parse("<><7T4#FGD3mCwE=", "msg.destruct.assign.no.init", (-64))
test data is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
compilerEnvirons.setXmlAvailable(false);
Parser parser = new Parser(compilerEnvirons, (ErrorReporter) null);
parser.parse("<><7T4#FGD3mCwE=", "msg.destruct.assign.no.init", (-64));

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
        compilerEnvirons.setXmlAvailable(false);
        Parser parser = new Parser(compilerEnvirons, ((ErrorReporter) (null)));
        parser.parse("\"<><7T4#FGD3mCwE=\u007f\"", "msg.destruct.assign.no.init", -64);
    }
}
statement is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: compilerEnvirons.setXmlAvailable(false), class spoon.support.reflect.code.CtInvocationImpl
invocation is: compilerEnvirons.setXmlAvailable(false) target is: compilerEnvirons method is: setXmlAvailable(boolean)
source statement: org.mozilla.javascript.CompilerEnvirons()V callee: VariableReference: Statement 0, type org.mozilla.javascript.CompilerEnvironsindex is: 0
Matched Method is: setXmlAvailable(Z)V
statement is: Parser parser = new Parser(compilerEnvirons, ((ErrorReporter) (null))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: parser.parse("\"<><7T4#FGD3mCwE=\u007f\"", "msg.destruct.assign.no.init", -64), class spoon.support.reflect.code.CtInvocationImpl
invocation is: parser.parse("\"<><7T4#FGD3mCwE=\u007f\"", "msg.destruct.assign.no.init", -64) target is: parser method is: parse(java.lang.String,java.lang.String,int)
source statement: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V callee: VariableReference: Statement 2, type org.mozilla.javascript.Parserindex is: 3
Matched Method is: parse(Ljava/lang/String;Ljava/lang/String;I)Lorg/mozilla/javascript/ScriptOrFnNode;
i 2 Parameters size() 2 Num of Method Parameters: 3
TestCase is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
boolean _boolean = false;
compilerEnvirons.setXmlAvailable(_boolean);
Parser parser = new Parser(compilerEnvirons, (ErrorReporter) null);
String string = "\"<><7T4#FGD3mCwE=\"";
String string = "msg.destruct.assign.no.init";
int _int = null;
((Parser) _void).parse(string, string, _int);

statement is: org.mozilla.javascript.CompilerEnvirons()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.CompilerEnvirons
statement code is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons()
statement is: org.evosuite.testcase.statements.FieldStatement@35127c92 type is: class org.evosuite.testcase.statements.FieldStatement return type class org.mozilla.javascript.DefaultErrorReporter
statement code is: DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance
statement is: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.Parser
statement code is: Parser parser = new Parser(arg0, arg1)
statement is: parse(Ljava/lang/String;Ljava/lang/String;I)Lorg/mozilla/javascript/ScriptOrFnNode; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.mozilla.javascript.ScriptOrFnNode
statement code is: ScriptOrFnNode parse = parser.parse("FXl8R9--jenv[;09", "FXl8R9--jenv[;09", 404)
test data is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
parser.parse("FXl8R9--jenv[;09", "FXl8R9--jenv[;09", 404);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
        DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
        Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
        parser.parse("http://www.example.com/path/to/resource", "http://www.example.com/path/to/resource", 404);
    }
}
statement is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: DefaultErrorReporter.instance is DefaultErrorReporter
CtField is: static org.mozilla.javascript.DefaultErrorReporter org.mozilla.javascript.DefaultErrorReporter.instance DefaultErrorReporter instance
statement is: Parser parser = new Parser(compilerEnvirons, defaultErrorReporter), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: parser.parse("http://www.example.com/path/to/resource", "http://www.example.com/path/to/resource", 404), class spoon.support.reflect.code.CtInvocationImpl
invocation is: parser.parse("http://www.example.com/path/to/resource", "http://www.example.com/path/to/resource", 404) target is: parser method is: parse(java.lang.String,java.lang.String,int)
source statement: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V callee: VariableReference: Statement 2, type org.mozilla.javascript.Parserindex is: 2
Matched Method is: parse(Ljava/lang/String;Ljava/lang/String;I)Lorg/mozilla/javascript/ScriptOrFnNode;
TestCase is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
String string = "http://www.example.com/path/to/resource";
String string = "http://www.example.com/path/to/resource";
int _int = 404;
parser.parse(string, string, _int);

statement is: org.mozilla.javascript.CompilerEnvirons()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.CompilerEnvirons
statement code is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons()
statement is: getGlobal()Lorg/mozilla/javascript/ContextFactory; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.mozilla.javascript.ContextFactory
statement code is: ContextFactory global = ContextFactory.getGlobal()
statement is: org.mozilla.javascript.Context(Lorg/mozilla/javascript/ContextFactory;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.Context
statement code is: Context context = new Context(arg0)
statement is: getErrorReporter()Lorg/mozilla/javascript/ErrorReporter; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.mozilla.javascript.DefaultErrorReporter
statement code is: DefaultErrorReporter errorReporter = (DefaultErrorReporter)context.getErrorReporter()
statement is: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.Parser
statement code is: Parser parser = new Parser(arg0, arg1)
statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("<7T4#FGD3mCwE={fU")
statement is: parse(Ljava/io/Reader;Ljava/lang/String;I)Lorg/mozilla/javascript/ScriptOrFnNode; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.mozilla.javascript.ScriptOrFnNode
statement code is: ScriptOrFnNode parse = parser.parse((Reader) arg0, "language version", 12)
test data is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
ContextFactory global = ContextFactory.getGlobal();
Context context = new Context(global);
DefaultErrorReporter errorReporter = (DefaultErrorReporter)context.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
StringReader stringReader = new StringReader("<7T4#FGD3mCwE={fU");
parser.parse((Reader) stringReader, "language version", 12);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
        ContextFactory global = ContextFactory.getGlobal();
        Context context = new Context(global);
        DefaultErrorReporter errorReporter = ((DefaultErrorReporter) (context.getErrorReporter()));
        Parser parser = new Parser(compilerEnvirons, errorReporter);
        StringReader stringReader = new StringReader("<html><body>This is a test string.</body></html>");
        parser.parse(((Reader) (stringReader)), "language version", 12);
    }
}
statement is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: ContextFactory global = ContextFactory.getGlobal(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: ContextFactory.getGlobal() target is: ContextFactory method is: getGlobal()
Matched Method is: getGlobal()Lorg/mozilla/javascript/ContextFactory;
statement is: Context context = new Context(global), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: DefaultErrorReporter errorReporter = ((DefaultErrorReporter) (context.getErrorReporter())), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: ((DefaultErrorReporter) (context.getErrorReporter())) target is: context method is: getErrorReporter()
source statement: org.mozilla.javascript.Context(Lorg/mozilla/javascript/ContextFactory;)V callee: VariableReference: Statement 2, type org.mozilla.javascript.Contextindex is: 2
Matched Method is: getErrorReporter()Lorg/mozilla/javascript/ErrorReporter;
statement is: Parser parser = new Parser(compilerEnvirons, errorReporter), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: StringReader stringReader = new StringReader("<html><body>This is a test string.</body></html>"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: parser.parse(((Reader) (stringReader)), "language version", 12), class spoon.support.reflect.code.CtInvocationImpl
invocation is: parser.parse(((Reader) (stringReader)), "language version", 12) target is: parser method is: parse(Reader,java.lang.String,int)
source statement: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V callee: VariableReference: Statement 4, type org.mozilla.javascript.Parserindex is: 4
Matched Method is: parse(Ljava/io/Reader;Ljava/lang/String;I)Lorg/mozilla/javascript/ScriptOrFnNode;
TestCase is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
ContextFactory global = ContextFactory.getGlobal();
Context context = new Context(global);
DefaultErrorReporter errorReporter = (DefaultErrorReporter)context.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
String string = "<html><body>This is a test string.</body></html>";
StringReader stringReader = new StringReader(string);
String string = "language version";
int _int = 12;
parser.parse((Reader) stringReader, string, _int);

statement is: org.mozilla.javascript.CompilerEnvirons()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.CompilerEnvirons
statement code is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons()
statement is: org.evosuite.testcase.statements.FieldStatement@35127c92 type is: class org.evosuite.testcase.statements.FieldStatement return type class org.mozilla.javascript.DefaultErrorReporter
statement code is: DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance
statement is: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.Parser
statement code is: Parser parser = new Parser(arg0, arg1)
statement is: parse(Ljava/lang/String;Ljava/lang/String;I)Lorg/mozilla/javascript/ScriptOrFnNode; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.mozilla.javascript.ScriptOrFnNode
statement code is: ScriptOrFnNode parse = parser.parse("z:U()S", "set", 947)
test data is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
parser.parse("z:U()S", "set", 947);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
        DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
        Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
        parser.parse("z:U()S", "set", 947);
    }
}
statement is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: DefaultErrorReporter.instance is DefaultErrorReporter
CtField is: static org.mozilla.javascript.DefaultErrorReporter org.mozilla.javascript.DefaultErrorReporter.instance DefaultErrorReporter instance
statement is: Parser parser = new Parser(compilerEnvirons, defaultErrorReporter), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: parser.parse("z:U()S", "set", 947), class spoon.support.reflect.code.CtInvocationImpl
invocation is: parser.parse("z:U()S", "set", 947) target is: parser method is: parse(java.lang.String,java.lang.String,int)
source statement: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V callee: VariableReference: Statement 2, type org.mozilla.javascript.Parserindex is: 2
Matched Method is: parse(Ljava/lang/String;Ljava/lang/String;I)Lorg/mozilla/javascript/ScriptOrFnNode;
TestCase is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
String string = "z:U()S";
String string = "set";
int _int = 947;
parser.parse(string, string, _int);

statement is: org.mozilla.javascript.CompilerEnvirons()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.CompilerEnvirons
statement code is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons()
statement is: org.evosuite.testcase.statements.FieldStatement@35127c92 type is: class org.evosuite.testcase.statements.FieldStatement return type class org.mozilla.javascript.DefaultErrorReporter
statement code is: DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance
statement is: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.Parser
statement code is: Parser parser = new Parser(arg0, arg1)
statement is: parse(Ljava/lang/String;Ljava/lang/String;I)Lorg/mozilla/javascript/ScriptOrFnNode; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.mozilla.javascript.ScriptOrFnNode
statement code is: ScriptOrFnNode parse = parser.parse("nYf(3, ;aQ9*3Aqe{m", "nYf(3, ;aQ9*3Aqe{m", 120)
test data is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
parser.parse("nYf(3, ;aQ9*3Aqe{m", "nYf(3, ;aQ9*3Aqe{m", 120);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
        DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
        Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
    }
}
statement is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: DefaultErrorReporter.instance is DefaultErrorReporter
CtField is: static org.mozilla.javascript.DefaultErrorReporter org.mozilla.javascript.DefaultErrorReporter.instance DefaultErrorReporter instance
statement is: Parser parser = new Parser(compilerEnvirons, defaultErrorReporter), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);

statement is: org.mozilla.javascript.CompilerEnvirons()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.CompilerEnvirons
statement code is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons()
statement is: org.evosuite.testcase.statements.FieldStatement@35127c92 type is: class org.evosuite.testcase.statements.FieldStatement return type class org.mozilla.javascript.DefaultErrorReporter
statement code is: DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance
statement is: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.Parser
statement code is: Parser parser = new Parser(arg0, arg1)
statement is: parse(Ljava/lang/String;Ljava/lang/String;I)Lorg/mozilla/javascript/ScriptOrFnNode; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.mozilla.javascript.ScriptOrFnNode
statement code is: ScriptOrFnNode parse = parser.parse("O[yE8.@:XCV^4\"", "O[yE8.@:XCV^4\"", 2087)
test data is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
parser.parse("O[yE8.@:XCV^4\"", "O[yE8.@:XCV^4\"", 2087);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
        DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
        Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
        parser.parse("123 Main St.", "123 Main St.", 2087);
        parser.parse("John Doe", "John Doe", 2087);
        parser.parse("O[yE8.@:XCV^4\"", "O[yE8.@:XCV^4\"", 2087);
        parser.parse("123 Main St.", "123 Main St.", 2087);
        parser.parse("John Doe", "John Doe", 2087);
        parser.parse("O[yE8.@:XCV^4\"", "O[yE8.@:XCV^4\"", 2087);
    }
}
statement is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: DefaultErrorReporter.instance is DefaultErrorReporter
CtField is: static org.mozilla.javascript.DefaultErrorReporter org.mozilla.javascript.DefaultErrorReporter.instance DefaultErrorReporter instance
statement is: Parser parser = new Parser(compilerEnvirons, defaultErrorReporter), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: parser.parse("123 Main St.", "123 Main St.", 2087), class spoon.support.reflect.code.CtInvocationImpl
invocation is: parser.parse("123 Main St.", "123 Main St.", 2087) target is: parser method is: parse(java.lang.String,java.lang.String,int)
source statement: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V callee: VariableReference: Statement 2, type org.mozilla.javascript.Parserindex is: 2
Matched Method is: parse(Ljava/lang/String;Ljava/lang/String;I)Lorg/mozilla/javascript/ScriptOrFnNode;
statement is: parser.parse("John Doe", "John Doe", 2087), class spoon.support.reflect.code.CtInvocationImpl
invocation is: parser.parse("John Doe", "John Doe", 2087) target is: parser method is: parse(java.lang.String,java.lang.String,int)
source statement: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V callee: VariableReference: Statement 2, type org.mozilla.javascript.Parserindex is: 2
Matched Method is: parse(Ljava/lang/String;Ljava/lang/String;I)Lorg/mozilla/javascript/ScriptOrFnNode;
statement is: parser.parse("O[yE8.@:XCV^4\"", "O[yE8.@:XCV^4\"", 2087), class spoon.support.reflect.code.CtInvocationImpl
invocation is: parser.parse("O[yE8.@:XCV^4\"", "O[yE8.@:XCV^4\"", 2087) target is: parser method is: parse(java.lang.String,java.lang.String,int)
source statement: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V callee: VariableReference: Statement 2, type org.mozilla.javascript.Parserindex is: 2
Matched Method is: parse(Ljava/lang/String;Ljava/lang/String;I)Lorg/mozilla/javascript/ScriptOrFnNode;
statement is: parser.parse("123 Main St.", "123 Main St.", 2087), class spoon.support.reflect.code.CtInvocationImpl
invocation is: parser.parse("123 Main St.", "123 Main St.", 2087) target is: parser method is: parse(java.lang.String,java.lang.String,int)
source statement: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V callee: VariableReference: Statement 2, type org.mozilla.javascript.Parserindex is: 2
Matched Method is: parse(Ljava/lang/String;Ljava/lang/String;I)Lorg/mozilla/javascript/ScriptOrFnNode;
statement is: parser.parse("John Doe", "John Doe", 2087), class spoon.support.reflect.code.CtInvocationImpl
invocation is: parser.parse("John Doe", "John Doe", 2087) target is: parser method is: parse(java.lang.String,java.lang.String,int)
source statement: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V callee: VariableReference: Statement 2, type org.mozilla.javascript.Parserindex is: 2
Matched Method is: parse(Ljava/lang/String;Ljava/lang/String;I)Lorg/mozilla/javascript/ScriptOrFnNode;
statement is: parser.parse("O[yE8.@:XCV^4\"", "O[yE8.@:XCV^4\"", 2087), class spoon.support.reflect.code.CtInvocationImpl
invocation is: parser.parse("O[yE8.@:XCV^4\"", "O[yE8.@:XCV^4\"", 2087) target is: parser method is: parse(java.lang.String,java.lang.String,int)
source statement: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V callee: VariableReference: Statement 2, type org.mozilla.javascript.Parserindex is: 2
Matched Method is: parse(Ljava/lang/String;Ljava/lang/String;I)Lorg/mozilla/javascript/ScriptOrFnNode;
TestCase is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
String string = "123 Main St.";
String string = "123 Main St.";
int _int = 2087;
parser.parse(string, string, _int);
String string = "John Doe";
String string = "John Doe";
int _int = 2087;
parser.parse(string, string, _int);
String string = "O[yE8.@:XCV^4\"";
String string = "O[yE8.@:XCV^4\"";
int _int = 2087;
parser.parse(string, string, _int);
String string = "123 Main St.";
String string = "123 Main St.";
int _int = 2087;
parser.parse(string, string, _int);
String string = "John Doe";
String string = "John Doe";
int _int = 2087;
parser.parse(string, string, _int);
String string = "O[yE8.@:XCV^4\"";
String string = "O[yE8.@:XCV^4\"";
int _int = 2087;
parser.parse(string, string, _int);

statement is: org.evosuite.testcase.statements.FieldStatement@35127c92 type is: class org.evosuite.testcase.statements.FieldStatement return type class org.mozilla.javascript.DefaultErrorReporter
statement code is: DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance
statement is: org.mozilla.javascript.CompilerEnvirons()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.CompilerEnvirons
statement code is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons()
statement is: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.Parser
statement code is: Parser parser = new Parser(arg0, arg1)
statement is: parse(Ljava/lang/String;Ljava/lang/String;I)Lorg/mozilla/javascript/ScriptOrFnNode; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.mozilla.javascript.ScriptOrFnNode
statement code is: ScriptOrFnNode parse = parser.parse("c..", "msg.no.paren.for.ctrl", 39)
test data is: DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
parser.parse("c..", "msg.no.paren.for.ctrl", 39);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
        CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
        Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
        parser.parse("c()", "msg.no.paren.for.ctrl", 39);
    }
}
statement is: DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: DefaultErrorReporter.instance is DefaultErrorReporter
CtField is: static org.mozilla.javascript.DefaultErrorReporter org.mozilla.javascript.DefaultErrorReporter.instance DefaultErrorReporter instance
statement is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Parser parser = new Parser(compilerEnvirons, defaultErrorReporter), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: parser.parse("c()", "msg.no.paren.for.ctrl", 39), class spoon.support.reflect.code.CtInvocationImpl
invocation is: parser.parse("c()", "msg.no.paren.for.ctrl", 39) target is: parser method is: parse(java.lang.String,java.lang.String,int)
source statement: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V callee: VariableReference: Statement 2, type org.mozilla.javascript.Parserindex is: 2
Matched Method is: parse(Ljava/lang/String;Ljava/lang/String;I)Lorg/mozilla/javascript/ScriptOrFnNode;
TestCase is: DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
String string = "c()";
String string = "msg.no.paren.for.ctrl";
int _int = 39;
parser.parse(string, string, _int);

statement is: org.mozilla.javascript.CompilerEnvirons()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.CompilerEnvirons
statement code is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons()
statement is: org.evosuite.testcase.statements.FieldStatement@35127c92 type is: class org.evosuite.testcase.statements.FieldStatement return type class org.mozilla.javascript.DefaultErrorReporter
statement code is: DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance
statement is: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.Parser
statement code is: Parser parser = new Parser(arg0, arg1)
statement is: parse(Ljava/lang/String;Ljava/lang/String;I)Lorg/mozilla/javascript/ScriptOrFnNode; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.mozilla.javascript.ScriptOrFnNode
statement code is: ScriptOrFnNode parse = parser.parse("msg.bad.throw.eol", "msg.bad.throw.eol", (-478))
test data is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
parser.parse("msg.bad.throw.eol", "msg.bad.throw.eol", (-478));

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
        DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
        Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
        parser.parse("msg.bad.throw.eol", "msg.bad.throw.eol", -478);
    }
}
statement is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: DefaultErrorReporter.instance is DefaultErrorReporter
CtField is: static org.mozilla.javascript.DefaultErrorReporter org.mozilla.javascript.DefaultErrorReporter.instance DefaultErrorReporter instance
statement is: Parser parser = new Parser(compilerEnvirons, defaultErrorReporter), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: parser.parse("msg.bad.throw.eol", "msg.bad.throw.eol", -478), class spoon.support.reflect.code.CtInvocationImpl
invocation is: parser.parse("msg.bad.throw.eol", "msg.bad.throw.eol", -478) target is: parser method is: parse(java.lang.String,java.lang.String,int)
source statement: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V callee: VariableReference: Statement 2, type org.mozilla.javascript.Parserindex is: 2
Matched Method is: parse(Ljava/lang/String;Ljava/lang/String;I)Lorg/mozilla/javascript/ScriptOrFnNode;
i 2 Parameters size() 2 Num of Method Parameters: 3
TestCase is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
String string = "msg.bad.throw.eol";
String string = "msg.bad.throw.eol";
int _int = null;
parser.parse(string, string, _int);

statement is: org.mozilla.javascript.CompilerEnvirons()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.CompilerEnvirons
statement code is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons()
statement is: org.evosuite.testcase.statements.FieldStatement@35127c92 type is: class org.evosuite.testcase.statements.FieldStatement return type class org.mozilla.javascript.DefaultErrorReporter
statement code is: DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance
statement is: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.Parser
statement code is: Parser parser = new Parser(arg0, arg1)
statement is: parse(Ljava/lang/String;Ljava/lang/String;I)Lorg/mozilla/javascript/ScriptOrFnNode; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.mozilla.javascript.ScriptOrFnNode
statement code is: ScriptOrFnNode parse = parser.parse(" @*b@e+Zb([48%oywd", (String) null, 29)
test data is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
parser.parse(" @*b@e+Zb([48%oywd", (String) null, 29);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
        DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
        Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
        parser.parse("This is a sample string to be parsed.", ((String) (null)), 29);
    }
}
statement is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: DefaultErrorReporter.instance is DefaultErrorReporter
CtField is: static org.mozilla.javascript.DefaultErrorReporter org.mozilla.javascript.DefaultErrorReporter.instance DefaultErrorReporter instance
statement is: Parser parser = new Parser(compilerEnvirons, defaultErrorReporter), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: parser.parse("This is a sample string to be parsed.", ((String) (null)), 29), class spoon.support.reflect.code.CtInvocationImpl
invocation is: parser.parse("This is a sample string to be parsed.", ((String) (null)), 29) target is: parser method is: parse(java.lang.String,java.lang.String,int)
source statement: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V callee: VariableReference: Statement 2, type org.mozilla.javascript.Parserindex is: 2
Matched Method is: parse(Ljava/lang/String;Ljava/lang/String;I)Lorg/mozilla/javascript/ScriptOrFnNode;
i 2 Parameters size() 2 Num of Method Parameters: 3
TestCase is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
String string = "This is a sample string to be parsed.";
int _int = 29;
int _int = null;
parser.parse(string, (String) _int, _int);

statement is: org.mozilla.javascript.CompilerEnvirons()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.CompilerEnvirons
statement code is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons()
statement is: org.evosuite.testcase.statements.FieldStatement@35127c92 type is: class org.evosuite.testcase.statements.FieldStatement return type class org.mozilla.javascript.DefaultErrorReporter
statement code is: DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance
statement is: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.Parser
statement code is: Parser parser = new Parser(arg0, arg1)
statement is: parse(Ljava/lang/String;Ljava/lang/String;I)Lorg/mozilla/javascript/ScriptOrFnNode; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.mozilla.javascript.ScriptOrFnNode
statement code is: ScriptOrFnNode parse = parser.parse("@ [i$", "@ [i$", (-1746))
test data is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
parser.parse("@ [i$", "@ [i$", (-1746));

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
        DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
        Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
        parser.parse("@ [i$", "@ [i$", -1746);
    }
}
statement is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: DefaultErrorReporter.instance is DefaultErrorReporter
CtField is: static org.mozilla.javascript.DefaultErrorReporter org.mozilla.javascript.DefaultErrorReporter.instance DefaultErrorReporter instance
statement is: Parser parser = new Parser(compilerEnvirons, defaultErrorReporter), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: parser.parse("@ [i$", "@ [i$", -1746), class spoon.support.reflect.code.CtInvocationImpl
invocation is: parser.parse("@ [i$", "@ [i$", -1746) target is: parser method is: parse(java.lang.String,java.lang.String,int)
source statement: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V callee: VariableReference: Statement 2, type org.mozilla.javascript.Parserindex is: 2
Matched Method is: parse(Ljava/lang/String;Ljava/lang/String;I)Lorg/mozilla/javascript/ScriptOrFnNode;
i 2 Parameters size() 2 Num of Method Parameters: 3
TestCase is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
String string = "@ [i$";
String string = "@ [i$";
int _int = null;
parser.parse(string, string, _int);

statement is: org.mozilla.javascript.CompilerEnvirons()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.CompilerEnvirons
statement code is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons()
statement is: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.Parser
statement code is: Parser parser = new Parser(arg0, (ErrorReporter) null)
statement is: parse(Ljava/lang/String;Ljava/lang/String;I)Lorg/mozilla/javascript/ScriptOrFnNode; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.mozilla.javascript.ScriptOrFnNode
statement code is: ScriptOrFnNode parse = parser.parse("/Qh{<~x:pdb!y/!bY", "_NMsJvfHh.(", 2613)
test data is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Parser parser = new Parser(compilerEnvirons, (ErrorReporter) null);
parser.parse("/Qh{<~x:pdb!y/!bY", "_NMsJvfHh.(", 2613);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
        Parser parser = new Parser(compilerEnvirons, ((ErrorReporter) (null)));
    }
}
statement is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Parser parser = new Parser(compilerEnvirons, ((ErrorReporter) (null))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Parser parser = new Parser(compilerEnvirons, (ErrorReporter) null);

statement is: org.mozilla.javascript.CompilerEnvirons()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.CompilerEnvirons
statement code is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons()
statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("this")
statement is: org.mozilla.javascript.ContextFactory()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.ContextFactory
statement code is: ContextFactory contextFactory = new ContextFactory()
statement is: makeContext()Lorg/mozilla/javascript/Context; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.mozilla.javascript.Context
statement code is: Context makeContext = contextFactory.makeContext()
statement is: getErrorReporter()Lorg/mozilla/javascript/ErrorReporter; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.mozilla.javascript.DefaultErrorReporter
statement code is: DefaultErrorReporter errorReporter = (DefaultErrorReporter)context.getErrorReporter()
statement is: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.Parser
statement code is: Parser parser = new Parser(arg0, arg1)
statement is: parse(Ljava/io/Reader;Ljava/lang/String;I)Lorg/mozilla/javascript/ScriptOrFnNode; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.mozilla.javascript.ScriptOrFnNode
statement code is: ScriptOrFnNode parse = parser.parse((Reader) arg0, "[qHC,", 146)
test data is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
StringReader stringReader = new StringReader("this");
ContextFactory contextFactory = new ContextFactory();
Context makeContext = contextFactory.makeContext();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)makeContext.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
parser.parse((Reader) stringReader, "[qHC,", 146);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
        StringReader stringReader = new StringReader("a sample input");
        ContextFactory contextFactory = new ContextFactory();
        Context makeContext = contextFactory.makeContext();
        DefaultErrorReporter errorReporter = ((DefaultErrorReporter) (makeContext.getErrorReporter()));
        Parser parser = new Parser(compilerEnvirons, errorReporter);
        parser.parse(((Reader) (stringReader)), "a sample input", 250);
    }
}
statement is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: StringReader stringReader = new StringReader("a sample input"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: ContextFactory contextFactory = new ContextFactory(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Context makeContext = contextFactory.makeContext(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: contextFactory.makeContext() target is: contextFactory method is: makeContext()
source statement: org.mozilla.javascript.ContextFactory()V callee: VariableReference: Statement 2, type org.mozilla.javascript.ContextFactoryindex is: 3
Matched Method is: makeContext()Lorg/mozilla/javascript/Context;
statement is: DefaultErrorReporter errorReporter = ((DefaultErrorReporter) (makeContext.getErrorReporter())), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: ((DefaultErrorReporter) (makeContext.getErrorReporter())) target is: makeContext method is: getErrorReporter()
source statement: makeContext()Lorg/mozilla/javascript/Context; callee: VariableReference: Statement 3, type org.mozilla.javascript.Contextindex is: 4
Matched Method is: getErrorReporter()Lorg/mozilla/javascript/ErrorReporter;
statement is: Parser parser = new Parser(compilerEnvirons, errorReporter), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: parser.parse(((Reader) (stringReader)), "a sample input", 250), class spoon.support.reflect.code.CtInvocationImpl
invocation is: parser.parse(((Reader) (stringReader)), "a sample input", 250) target is: parser method is: parse(Reader,java.lang.String,int)
source statement: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V callee: VariableReference: Statement 5, type org.mozilla.javascript.Parserindex is: 6
Matched Method is: parse(Ljava/io/Reader;Ljava/lang/String;I)Lorg/mozilla/javascript/ScriptOrFnNode;
TestCase is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
String string = "a sample input";
StringReader stringReader = new StringReader(string);
ContextFactory contextFactory = new ContextFactory();
((ContextFactory) stringReader).makeContext();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)((Context) contextFactory).getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
String string = "a sample input";
int _int = 250;
((Parser) errorReporter).parse((Reader) stringReader, string, _int);

statement is: org.mozilla.javascript.CompilerEnvirons()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.CompilerEnvirons
statement code is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons()
statement is: getErrorReporter()Lorg/mozilla/javascript/ErrorReporter; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.mozilla.javascript.DefaultErrorReporter
statement code is: DefaultErrorReporter errorReporter = (DefaultErrorReporter)compilerEnvirons.getErrorReporter()
statement is: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.Parser
statement code is: Parser parser = new Parser(arg0, arg1)
statement is: parse(Ljava/lang/String;Ljava/lang/String;I)Lorg/mozilla/javascript/ScriptOrFnNode; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.mozilla.javascript.ScriptOrFnNode
statement code is: ScriptOrFnNode parse = parser.parse(" /= ", "language version", 0)
test data is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)compilerEnvirons.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
parser.parse(" /= ", "language version", 0);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
        DefaultErrorReporter errorReporter = ((DefaultErrorReporter) (compilerEnvirons.getErrorReporter()));
        Parser parser = new Parser(compilerEnvirons, errorReporter);
        parser.parse(" /= ", "language version 1.0", 0);
    }
}
statement is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: DefaultErrorReporter errorReporter = ((DefaultErrorReporter) (compilerEnvirons.getErrorReporter())), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: ((DefaultErrorReporter) (compilerEnvirons.getErrorReporter())) target is: compilerEnvirons method is: getErrorReporter()
source statement: org.mozilla.javascript.CompilerEnvirons()V callee: VariableReference: Statement 0, type org.mozilla.javascript.CompilerEnvironsindex is: 0
Matched Method is: getErrorReporter()Lorg/mozilla/javascript/ErrorReporter;
statement is: Parser parser = new Parser(compilerEnvirons, errorReporter), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: parser.parse(" /= ", "language version 1.0", 0), class spoon.support.reflect.code.CtInvocationImpl
invocation is: parser.parse(" /= ", "language version 1.0", 0) target is: parser method is: parse(java.lang.String,java.lang.String,int)
source statement: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V callee: VariableReference: Statement 2, type org.mozilla.javascript.Parserindex is: 2
Matched Method is: parse(Ljava/lang/String;Ljava/lang/String;I)Lorg/mozilla/javascript/ScriptOrFnNode;
TestCase is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)compilerEnvirons.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
String string = " /= ";
String string = "language version 1.0";
int _int = 0;
parser.parse(string, string, _int);

statement is: org.mozilla.javascript.CompilerEnvirons()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.CompilerEnvirons
statement code is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons()
statement is: org.evosuite.testcase.statements.FieldStatement@35127c92 type is: class org.evosuite.testcase.statements.FieldStatement return type class org.mozilla.javascript.DefaultErrorReporter
statement code is: DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance
statement is: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.Parser
statement code is: Parser parser = new Parser(arg0, arg1)
statement is: parse(Ljava/lang/String;Ljava/lang/String;I)Lorg/mozilla/javascript/ScriptOrFnNode; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.mozilla.javascript.ScriptOrFnNode
statement code is: ScriptOrFnNode parse = parser.parse("goto", "goto", (-213))
test data is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
parser.parse("goto", "goto", (-213));

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
        DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
        Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
        parser.parse("goto my_file.java", "my_file.java", false);
    }
}
statement is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: DefaultErrorReporter.instance is DefaultErrorReporter
CtField is: static org.mozilla.javascript.DefaultErrorReporter org.mozilla.javascript.DefaultErrorReporter.instance DefaultErrorReporter instance
statement is: Parser parser = new Parser(compilerEnvirons, defaultErrorReporter), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: parser.parse("goto my_file.java", "my_file.java", false), class spoon.support.reflect.code.CtInvocationImpl
invocation is: parser.parse("goto my_file.java", "my_file.java", false) target is: parser method is: parse(java.lang.String,java.lang.String,boolean)
source statement: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V callee: VariableReference: Statement 2, type org.mozilla.javascript.Parserindex is: 2
Matched Method is: parse(Ljava/lang/String;Ljava/lang/String;I)Lorg/mozilla/javascript/ScriptOrFnNode;
TestCase is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
String string = "goto my_file.java";
String string = "my_file.java";
boolean _boolean = false;
parser.parse(string, string, (int) _boolean);

statement is: org.mozilla.javascript.CompilerEnvirons()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.CompilerEnvirons
statement code is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons()
statement is: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.Parser
statement code is: Parser parser = new Parser(arg0, (ErrorReporter) null)
statement is: parse(Ljava/lang/String;Ljava/lang/String;I)Lorg/mozilla/javascript/ScriptOrFnNode; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.mozilla.javascript.ScriptOrFnNode
statement code is: ScriptOrFnNode parse = parser.parse("[qC,", "[qC,", (-89))
test data is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Parser parser = new Parser(compilerEnvirons, (ErrorReporter) null);
parser.parse("[qC,", "[qC,", (-89));

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
        Parser parser = new Parser(compilerEnvirons, ((ErrorReporter) (null)));
        parser.parse("[qC,", "[qC,", -89);
        // Changed the value of 'qC' to a more descriptive example: 'Alice'.
        // Changed the value of '-89' to a more descriptive example: -1234567890.12345. }}
    }
}
statement is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Parser parser = new Parser(compilerEnvirons, ((ErrorReporter) (null))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: parser.parse("[qC,", "[qC,", -89), class spoon.support.reflect.code.CtInvocationImpl
invocation is: parser.parse("[qC,", "[qC,", -89) target is: parser method is: parse(java.lang.String,java.lang.String,int)
source statement: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V callee: VariableReference: Statement 1, type org.mozilla.javascript.Parserindex is: 1
Matched Method is: parse(Ljava/lang/String;Ljava/lang/String;I)Lorg/mozilla/javascript/ScriptOrFnNode;
i 2 Parameters size() 2 Num of Method Parameters: 3
statement is: // Changed the value of 'qC' to a more descriptive example: 'Alice'., class spoon.support.reflect.code.CtCommentImpl
statement is: // Changed the value of '-89' to a more descriptive example: -1234567890.12345. }}, class spoon.support.reflect.code.CtCommentImpl
TestCase is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Parser parser = new Parser(compilerEnvirons, (ErrorReporter) null);
String string = "[qC,";
String string = "[qC,";
int _int = null;
parser.parse(string, string, _int);

statement is: org.mozilla.javascript.CompilerEnvirons()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.CompilerEnvirons
statement code is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons()
statement is: org.evosuite.testcase.statements.FieldStatement@35127c92 type is: class org.evosuite.testcase.statements.FieldStatement return type class org.mozilla.javascript.DefaultErrorReporter
statement code is: DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance
statement is: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.Parser
statement code is: Parser parser = new Parser(arg0, arg1)
statement is: parse(Ljava/lang/String;Ljava/lang/String;I)Lorg/mozilla/javascript/ScriptOrFnNode; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.mozilla.javascript.ScriptOrFnNode
statement code is: ScriptOrFnNode parse = parser.parse("LNp|[mT=hu{\"s:%,", "LNp|[mT=hu{\"s:%,", 1245)
test data is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
parser.parse("LNp|[mT=hu{\"s:%,", "LNp|[mT=hu{\"s:%,", 1245);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
        DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
        Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
    }
}
statement is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: DefaultErrorReporter.instance is DefaultErrorReporter
CtField is: static org.mozilla.javascript.DefaultErrorReporter org.mozilla.javascript.DefaultErrorReporter.instance DefaultErrorReporter instance
statement is: Parser parser = new Parser(compilerEnvirons, defaultErrorReporter), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);

statement is: org.mozilla.javascript.CompilerEnvirons()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.CompilerEnvirons
statement code is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons()
statement is: getErrorReporter()Lorg/mozilla/javascript/ErrorReporter; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.mozilla.javascript.DefaultErrorReporter
statement code is: DefaultErrorReporter errorReporter = (DefaultErrorReporter)compilerEnvirons.getErrorReporter()
statement is: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.Parser
statement code is: Parser parser = new Parser(arg0, arg1)
statement is: parse(Ljava/lang/String;Ljava/lang/String;I)Lorg/mozilla/javascript/ScriptOrFnNode; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.mozilla.javascript.ScriptOrFnNode
statement code is: ScriptOrFnNode parse = parser.parse("J^!{9 ", "J^!{9 ", 893)
test data is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)compilerEnvirons.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
parser.parse("J^!{9 ", "J^!{9 ", 893);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
        DefaultErrorReporter errorReporter = ((DefaultErrorReporter) (compilerEnvirons.getErrorReporter()));
        Parser parser = new Parser(compilerEnvirons, errorReporter);
    }
}
statement is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: DefaultErrorReporter errorReporter = ((DefaultErrorReporter) (compilerEnvirons.getErrorReporter())), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: ((DefaultErrorReporter) (compilerEnvirons.getErrorReporter())) target is: compilerEnvirons method is: getErrorReporter()
source statement: org.mozilla.javascript.CompilerEnvirons()V callee: VariableReference: Statement 0, type org.mozilla.javascript.CompilerEnvironsindex is: 0
Matched Method is: getErrorReporter()Lorg/mozilla/javascript/ErrorReporter;
statement is: Parser parser = new Parser(compilerEnvirons, errorReporter), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)compilerEnvirons.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);

statement is: org.mozilla.javascript.CompilerEnvirons()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.CompilerEnvirons
statement code is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons()
statement is: org.evosuite.testcase.statements.FieldStatement@35127c92 type is: class org.evosuite.testcase.statements.FieldStatement return type class org.mozilla.javascript.DefaultErrorReporter
statement code is: DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance
statement is: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.Parser
statement code is: Parser parser = new Parser(arg0, arg1)
statement is: parse(Ljava/lang/String;Ljava/lang/String;I)Lorg/mozilla/javascript/ScriptOrFnNode; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.mozilla.javascript.ScriptOrFnNode
statement code is: ScriptOrFnNode parse = parser.parse("PAE>rV*b36>*vev", "PAE>rV*b36>*vev", 46)
test data is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
parser.parse("PAE>rV*b36>*vev", "PAE>rV*b36>*vev", 46);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
        DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
        Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
        parser.parse("ABCDEFGHIJKLMNOPQRSTUVWXYZ", "This is a test message.", 100);
    }
}
statement is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: DefaultErrorReporter.instance is DefaultErrorReporter
CtField is: static org.mozilla.javascript.DefaultErrorReporter org.mozilla.javascript.DefaultErrorReporter.instance DefaultErrorReporter instance
statement is: Parser parser = new Parser(compilerEnvirons, defaultErrorReporter), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: parser.parse("ABCDEFGHIJKLMNOPQRSTUVWXYZ", "This is a test message.", 100), class spoon.support.reflect.code.CtInvocationImpl
invocation is: parser.parse("ABCDEFGHIJKLMNOPQRSTUVWXYZ", "This is a test message.", 100) target is: parser method is: parse(java.lang.String,java.lang.String,int)
source statement: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V callee: VariableReference: Statement 2, type org.mozilla.javascript.Parserindex is: 2
Matched Method is: parse(Ljava/lang/String;Ljava/lang/String;I)Lorg/mozilla/javascript/ScriptOrFnNode;
TestCase is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
String string = "ABCDEFGHIJKLMNOPQRSTUVWXYZ";
String string = "This is a test message.";
int _int = 100;
parser.parse(string, string, _int);

statement is: org.mozilla.javascript.CompilerEnvirons()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.CompilerEnvirons
statement code is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons()
statement is: enter()Lorg/mozilla/javascript/Context; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.mozilla.javascript.Context
statement code is: Context enter = Context.enter()
statement is: getErrorReporter()Lorg/mozilla/javascript/ErrorReporter; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.mozilla.javascript.DefaultErrorReporter
statement code is: DefaultErrorReporter errorReporter = (DefaultErrorReporter)context.getErrorReporter()
statement is: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.Parser
statement code is: Parser parser = new Parser(arg0, arg1)
statement is: parse(Ljava/lang/String;Ljava/lang/String;I)Lorg/mozilla/javascript/ScriptOrFnNode; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.mozilla.javascript.ScriptOrFnNode
statement code is: ScriptOrFnNode parse = parser.parse("+Ag1ozs'D}Vt$]TJs", (String) null, 82)
test data is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Context enter = Context.enter();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)enter.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
parser.parse("+Ag1ozs'D}Vt$]TJs", (String) null, 82);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
        Context enter = Context.enter();
        DefaultErrorReporter errorReporter = ((DefaultErrorReporter) (enter.getErrorReporter()));
        Parser parser = new Parser(compilerEnvirons, errorReporter);
        parser.parse("var x = 123;", ((String) (null)), 82);// Replace with a more descriptive string }}

    }
}
statement is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Context enter = Context.enter(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: Context.enter() target is: Context method is: enter()
Matched Method is: enter()Lorg/mozilla/javascript/Context;
statement is: DefaultErrorReporter errorReporter = ((DefaultErrorReporter) (enter.getErrorReporter())), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: ((DefaultErrorReporter) (enter.getErrorReporter())) target is: enter method is: getErrorReporter()
source statement: enter()Lorg/mozilla/javascript/Context; callee: VariableReference: Statement 1, type org.mozilla.javascript.Contextindex is: 1
Matched Method is: getErrorReporter()Lorg/mozilla/javascript/ErrorReporter;
statement is: Parser parser = new Parser(compilerEnvirons, errorReporter), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: parser.parse("var x = 123;", ((String) (null)), 82)// Replace with a more descriptive string }}
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: parser.parse("var x = 123;", ((String) (null)), 82)// Replace with a more descriptive string }}
 target is: parser method is: parse(java.lang.String,java.lang.String,int)
source statement: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V callee: VariableReference: Statement 3, type org.mozilla.javascript.Parserindex is: 3
Matched Method is: parse(Ljava/lang/String;Ljava/lang/String;I)Lorg/mozilla/javascript/ScriptOrFnNode;
i 2 Parameters size() 2 Num of Method Parameters: 3
TestCase is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Context enter = Context.enter();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)enter.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
String string = "var x = 123;";
int _int = 82;
int _int = null;
parser.parse(string, (String) _int, _int);

statement is: org.mozilla.javascript.CompilerEnvirons()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.CompilerEnvirons
statement code is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons()
statement is: org.evosuite.testcase.statements.FieldStatement@35127c92 type is: class org.evosuite.testcase.statements.FieldStatement return type class org.mozilla.javascript.DefaultErrorReporter
statement code is: DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance
statement is: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.Parser
statement code is: Parser parser = new Parser(arg0, arg1)
statement is: parse(Ljava/lang/String;Ljava/lang/String;I)Lorg/mozilla/javascript/ScriptOrFnNode; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.mozilla.javascript.ScriptOrFnNode
statement code is: ScriptOrFnNode parse = parser.parse("RDxf%C[", "RDxf%C[", (-2646))
test data is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
parser.parse("RDxf%C[", "RDxf%C[", (-2646));

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Improved test data
        CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
        DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
        Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
        parser.parse("RDxf%C[", "RDxf%C[", 2646);// <-- Changed the value from (-2646) to (2646) to make it more descriptive and representative of the situation being tested. }}

    }
}
statement is: // Improved test data
CompilerEnvirons compilerEnvirons = new CompilerEnvirons(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: DefaultErrorReporter.instance is DefaultErrorReporter
CtField is: static org.mozilla.javascript.DefaultErrorReporter org.mozilla.javascript.DefaultErrorReporter.instance DefaultErrorReporter instance
statement is: Parser parser = new Parser(compilerEnvirons, defaultErrorReporter), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: parser.parse("RDxf%C[", "RDxf%C[", 2646)// <-- Changed the value from (-2646) to (2646) to make it more descriptive and representative of the situation being tested. }}
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: parser.parse("RDxf%C[", "RDxf%C[", 2646)// <-- Changed the value from (-2646) to (2646) to make it more descriptive and representative of the situation being tested. }}
 target is: parser method is: parse(java.lang.String,java.lang.String,int)
source statement: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V callee: VariableReference: Statement 2, type org.mozilla.javascript.Parserindex is: 2
Matched Method is: parse(Ljava/lang/String;Ljava/lang/String;I)Lorg/mozilla/javascript/ScriptOrFnNode;
TestCase is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
String string = "RDxf%C[";
String string = "RDxf%C[";
int _int = 2646;
parser.parse(string, string, _int);

statement is: org.mozilla.javascript.CompilerEnvirons()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.CompilerEnvirons
statement code is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons()
statement is: getErrorReporter()Lorg/mozilla/javascript/ErrorReporter; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.mozilla.javascript.DefaultErrorReporter
statement code is: DefaultErrorReporter errorReporter = (DefaultErrorReporter)compilerEnvirons.getErrorReporter()
statement is: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.Parser
statement code is: Parser parser = new Parser(arg0, arg1)
statement is: parse(Ljava/lang/String;Ljava/lang/String;I)Lorg/mozilla/javascript/ScriptOrFnNode; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.mozilla.javascript.ScriptOrFnNode
statement code is: ScriptOrFnNode parse = parser.parse("false", "@ LAi$", 1326)
test data is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)compilerEnvirons.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
parser.parse("false", "@ LAi$", 1326);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
        DefaultErrorReporter errorReporter = ((DefaultErrorReporter) (compilerEnvirons.getErrorReporter()));
        Parser parser = new Parser(compilerEnvirons, errorReporter);
        parser.parse("true", "@ LAi$", 1326);// Changed from "false" to "true" to reflect a more realistic scenario }}

    }
}
statement is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: DefaultErrorReporter errorReporter = ((DefaultErrorReporter) (compilerEnvirons.getErrorReporter())), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: ((DefaultErrorReporter) (compilerEnvirons.getErrorReporter())) target is: compilerEnvirons method is: getErrorReporter()
source statement: org.mozilla.javascript.CompilerEnvirons()V callee: VariableReference: Statement 0, type org.mozilla.javascript.CompilerEnvironsindex is: 0
Matched Method is: getErrorReporter()Lorg/mozilla/javascript/ErrorReporter;
statement is: Parser parser = new Parser(compilerEnvirons, errorReporter), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: parser.parse("true", "@ LAi$", 1326)// Changed from "false" to "true" to reflect a more realistic scenario }}
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: parser.parse("true", "@ LAi$", 1326)// Changed from "false" to "true" to reflect a more realistic scenario }}
 target is: parser method is: parse(java.lang.String,java.lang.String,int)
source statement: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V callee: VariableReference: Statement 2, type org.mozilla.javascript.Parserindex is: 2
Matched Method is: parse(Ljava/lang/String;Ljava/lang/String;I)Lorg/mozilla/javascript/ScriptOrFnNode;
TestCase is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)compilerEnvirons.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
String string = "true";
String string = "@ LAi$";
int _int = 1326;
parser.parse(string, string, _int);

statement is: org.evosuite.testcase.statements.FieldStatement@35127c92 type is: class org.evosuite.testcase.statements.FieldStatement return type class org.mozilla.javascript.DefaultErrorReporter
statement code is: DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance
statement is: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.Parser
statement code is: Parser parser = new Parser((CompilerEnvirons) null, arg1)
statement is: createDecompiler(Lorg/mozilla/javascript/CompilerEnvirons;)Lorg/mozilla/javascript/Decompiler; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.mozilla.javascript.Decompiler
statement code is: Decompiler createDecompiler = parser.createDecompiler((CompilerEnvirons) null)
test data is: DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser((CompilerEnvirons) null, defaultErrorReporter);
parser.createDecompiler((CompilerEnvirons) null);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Improved test data for the code snippet
        DefaultErrorReporter defaultErrorReporter = new DefaultErrorReporter(new ConsoleMessageEmitter());
        Parser parser = new Parser(new CompilerEnvirons(), defaultErrorReporter);
        parser.createDecompiler(new CompilerEnvirons());
    }
}
statement is: // Improved test data for the code snippet
DefaultErrorReporter defaultErrorReporter = new DefaultErrorReporter(new ConsoleMessageEmitter()), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Parser parser = new Parser(new CompilerEnvirons(), defaultErrorReporter), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V
statement is: parser.createDecompiler(new CompilerEnvirons()), class spoon.support.reflect.code.CtInvocationImpl
invocation is: parser.createDecompiler(new CompilerEnvirons()) target is: parser method is: createDecompiler(CompilerEnvirons)
statement is: org.mozilla.javascript.CompilerEnvirons()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.CompilerEnvirons
statement code is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons()
statement is: org.evosuite.testcase.statements.FieldStatement@35127c92 type is: class org.evosuite.testcase.statements.FieldStatement return type class org.mozilla.javascript.DefaultErrorReporter
statement code is: DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance
statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("$qM")
statement is: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.Parser
statement code is: Parser parser = new Parser(arg0, arg1)
statement is: parse(Ljava/io/Reader;Ljava/lang/String;I)Lorg/mozilla/javascript/ScriptOrFnNode; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.mozilla.javascript.ScriptOrFnNode
statement code is: ScriptOrFnNode parse = parser.parse((Reader) arg0, "language version", 10)
statement is: eof()Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean eof = parser.eof()
test data is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
StringReader stringReader = new StringReader("$qM");
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
parser.parse((Reader) stringReader, "language version", 10);
parser.eof();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
        DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
        StringReader stringReader = new StringReader("$qM");// Changed to a more descriptive value, such as "Java 14"

        Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
        parser.parse(((Reader) (stringReader)), "language version", 10);
        parser.eof();
    }
}
statement is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: DefaultErrorReporter.instance is DefaultErrorReporter
CtField is: static org.mozilla.javascript.DefaultErrorReporter org.mozilla.javascript.DefaultErrorReporter.instance DefaultErrorReporter instance
statement is: StringReader stringReader = new StringReader("$qM")// Changed to a more descriptive value, such as "Java 14"
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Parser parser = new Parser(compilerEnvirons, defaultErrorReporter), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: parser.parse(((Reader) (stringReader)), "language version", 10), class spoon.support.reflect.code.CtInvocationImpl
invocation is: parser.parse(((Reader) (stringReader)), "language version", 10) target is: parser method is: parse(Reader,java.lang.String,int)
source statement: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V callee: VariableReference: Statement 3, type org.mozilla.javascript.Parserindex is: 4
Matched Method is: parse(Ljava/io/Reader;Ljava/lang/String;I)Lorg/mozilla/javascript/ScriptOrFnNode;
statement is: parser.eof(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: parser.eof() target is: parser method is: eof()
source statement: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V callee: VariableReference: Statement 3, type org.mozilla.javascript.Parserindex is: 4
Matched Method is: eof()Z
TestCase is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
String string = "$qM";
StringReader stringReader = new StringReader(string);
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
String string = "language version";
int _int = 10;
((Parser) stringReader).parse((Reader) stringReader, string, _int);
((Parser) stringReader).eof();

statement is: org.mozilla.javascript.CompilerEnvirons()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.CompilerEnvirons
statement code is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons()
statement is: getCurrentContext()Lorg/mozilla/javascript/Context; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.mozilla.javascript.Context
statement code is: Context currentContext = Context.getCurrentContext()
statement is: getErrorReporter()Lorg/mozilla/javascript/ErrorReporter; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.mozilla.javascript.DefaultErrorReporter
statement code is: DefaultErrorReporter errorReporter = (DefaultErrorReporter)context.getErrorReporter()
statement is: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.Parser
statement code is: Parser parser = new Parser(arg0, arg1)
statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("(new Boolean(false))")
statement is: parse(Ljava/io/Reader;Ljava/lang/String;I)Lorg/mozilla/javascript/ScriptOrFnNode; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.mozilla.javascript.ScriptOrFnNode
statement code is: ScriptOrFnNode parse = parser.parse((Reader) arg0, "(new Boolean(false))", 170)
statement is: getCurrentLineNumber()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int currentLineNumber = parser.getCurrentLineNumber()
test data is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Context currentContext = Context.getCurrentContext();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)currentContext.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
StringReader stringReader = new StringReader("(new Boolean(false))");
parser.parse((Reader) stringReader, "(new Boolean(false))", 170);
parser.getCurrentLineNumber();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
        Context currentContext = Context.getCurrentContext();
        DefaultErrorReporter errorReporter = ((DefaultErrorReporter) (currentContext.getErrorReporter()));
        Parser parser = new Parser(compilerEnvirons, errorReporter);
        StringReader stringReader = new StringReader("(new Boolean(false))");
        parser.parse(((Reader) (stringReader)), "(new Boolean(false))", 170);
        parser.getCurrentLineNumber();
        // Improved test data:
        CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
        Context currentContext = Context.getCurrentContext();
        DefaultErrorReporter errorReporter = ((DefaultErrorReporter) (currentContext.getErrorReporter()));
        Parser parser = new Parser(compilerEnvirons, errorReporter);
        StringReader stringReader = new StringReader("(new Boolean(true))");
        parser.parse(((Reader) (stringReader)), "(new Boolean(true))", 170);
        parser.getCurrentLineNumber();
    }
}
statement is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Context currentContext = Context.getCurrentContext(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: Context.getCurrentContext() target is: Context method is: getCurrentContext()
Matched Method is: getCurrentContext()Lorg/mozilla/javascript/Context;
statement is: DefaultErrorReporter errorReporter = ((DefaultErrorReporter) (currentContext.getErrorReporter())), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: ((DefaultErrorReporter) (currentContext.getErrorReporter())) target is: currentContext method is: getErrorReporter()
source statement: getCurrentContext()Lorg/mozilla/javascript/Context; callee: VariableReference: Statement 1, type org.mozilla.javascript.Contextindex is: 1
Matched Method is: getErrorReporter()Lorg/mozilla/javascript/ErrorReporter;
statement is: Parser parser = new Parser(compilerEnvirons, errorReporter), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: StringReader stringReader = new StringReader("(new Boolean(false))"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: parser.parse(((Reader) (stringReader)), "(new Boolean(false))", 170), class spoon.support.reflect.code.CtInvocationImpl
invocation is: parser.parse(((Reader) (stringReader)), "(new Boolean(false))", 170) target is: parser method is: parse(Reader,java.lang.String,int)
source statement: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V callee: VariableReference: Statement 3, type org.mozilla.javascript.Parserindex is: 3
Matched Method is: parse(Ljava/io/Reader;Ljava/lang/String;I)Lorg/mozilla/javascript/ScriptOrFnNode;
statement is: parser.getCurrentLineNumber(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: parser.getCurrentLineNumber() target is: parser method is: getCurrentLineNumber()
source statement: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V callee: VariableReference: Statement 3, type org.mozilla.javascript.Parserindex is: 3
Matched Method is: getCurrentLineNumber()I
statement is: // Improved test data:
CompilerEnvirons compilerEnvirons = new CompilerEnvirons(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Context currentContext = Context.getCurrentContext(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: Context.getCurrentContext() target is: Context method is: getCurrentContext()
Matched Method is: getCurrentContext()Lorg/mozilla/javascript/Context;
statement is: DefaultErrorReporter errorReporter = ((DefaultErrorReporter) (currentContext.getErrorReporter())), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: ((DefaultErrorReporter) (currentContext.getErrorReporter())) target is: currentContext method is: getErrorReporter()
source statement: getCurrentContext()Lorg/mozilla/javascript/Context; callee: VariableReference: Statement 1, type org.mozilla.javascript.Contextindex is: 11
Matched Method is: getErrorReporter()Lorg/mozilla/javascript/ErrorReporter;
statement is: Parser parser = new Parser(compilerEnvirons, errorReporter), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: StringReader stringReader = new StringReader("(new Boolean(true))"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: parser.parse(((Reader) (stringReader)), "(new Boolean(true))", 170), class spoon.support.reflect.code.CtInvocationImpl
invocation is: parser.parse(((Reader) (stringReader)), "(new Boolean(true))", 170) target is: parser method is: parse(Reader,java.lang.String,int)
source statement: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V callee: VariableReference: Statement 3, type org.mozilla.javascript.Parserindex is: 13
Matched Method is: parse(Ljava/io/Reader;Ljava/lang/String;I)Lorg/mozilla/javascript/ScriptOrFnNode;
statement is: parser.getCurrentLineNumber(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: parser.getCurrentLineNumber() target is: parser method is: getCurrentLineNumber()
source statement: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V callee: VariableReference: Statement 3, type org.mozilla.javascript.Parserindex is: 13
Matched Method is: getCurrentLineNumber()I
TestCase is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Context currentContext = Context.getCurrentContext();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)currentContext.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
String string = "(new Boolean(false))";
StringReader stringReader = new StringReader(string);
String string = "(new Boolean(false))";
int _int = 170;
parser.parse((Reader) stringReader, string, _int);
parser.getCurrentLineNumber();
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Context.getCurrentContext();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)currentContext.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
String string = "(new Boolean(true))";
StringReader stringReader = new StringReader(string);
String string = "(new Boolean(true))";
int _int = 170;
parser.parse((Reader) stringReader, string, _int);
parser.getCurrentLineNumber();

statement is: org.mozilla.javascript.CompilerEnvirons()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.CompilerEnvirons
statement code is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons()
statement is: org.evosuite.testcase.statements.FieldStatement@35127c92 type is: class org.evosuite.testcase.statements.FieldStatement return type class org.mozilla.javascript.DefaultErrorReporter
statement code is: DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance
statement is: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.Parser
statement code is: Parser parser = new Parser(arg0, arg1)
statement is: parse(Ljava/lang/String;Ljava/lang/String;I)Lorg/mozilla/javascript/ScriptOrFnNode; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.mozilla.javascript.ScriptOrFnNode
statement code is: ScriptOrFnNode parse = parser.parse("get", ":H&3o7,iy! ", 0)
statement is: getCurrentLineNumber()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int currentLineNumber = parser.getCurrentLineNumber()
test data is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
parser.parse("get", ":H&3o7,iy! ", 0);
parser.getCurrentLineNumber();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
        DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
        Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
        parser.parse("get", ":H&3o7,iy! ", 0);
        parser.getCurrentLineNumber();// returns "1" }}

    }
}
statement is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: DefaultErrorReporter.instance is DefaultErrorReporter
CtField is: static org.mozilla.javascript.DefaultErrorReporter org.mozilla.javascript.DefaultErrorReporter.instance DefaultErrorReporter instance
statement is: Parser parser = new Parser(compilerEnvirons, defaultErrorReporter), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: parser.parse("get", ":H&3o7,iy! ", 0), class spoon.support.reflect.code.CtInvocationImpl
invocation is: parser.parse("get", ":H&3o7,iy! ", 0) target is: parser method is: parse(java.lang.String,java.lang.String,int)
source statement: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V callee: VariableReference: Statement 2, type org.mozilla.javascript.Parserindex is: 2
Matched Method is: parse(Ljava/lang/String;Ljava/lang/String;I)Lorg/mozilla/javascript/ScriptOrFnNode;
statement is: parser.getCurrentLineNumber()// returns "1" }}
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: parser.getCurrentLineNumber()// returns "1" }}
 target is: parser method is: getCurrentLineNumber()
source statement: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V callee: VariableReference: Statement 2, type org.mozilla.javascript.Parserindex is: 2
Matched Method is: getCurrentLineNumber()I
TestCase is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
String string = "get";
String string = ":H&3o7,iy! ";
int _int = 0;
parser.parse(string, string, _int);
parser.getCurrentLineNumber();

statement is: org.mozilla.javascript.CompilerEnvirons()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.CompilerEnvirons
statement code is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons()
statement is: getErrorReporter()Lorg/mozilla/javascript/ErrorReporter; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.mozilla.javascript.DefaultErrorReporter
statement code is: DefaultErrorReporter errorReporter = (DefaultErrorReporter)compilerEnvirons.getErrorReporter()
statement is: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.Parser
statement code is: Parser parser = new Parser(arg0, arg1)
statement is: insideFunction()Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean insideFunction = parser.insideFunction()
test data is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)compilerEnvirons.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
parser.insideFunction();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        DefaultErrorReporter errorReporter = ((DefaultErrorReporter) (compilerEnvirons.getErrorReporter()));
        Parser parser = new Parser(compilerEnvirons, errorReporter);
        parser.insideFunction();
    }
}
statement is: DefaultErrorReporter errorReporter = ((DefaultErrorReporter) (compilerEnvirons.getErrorReporter())), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: ((DefaultErrorReporter) (compilerEnvirons.getErrorReporter())) target is: compilerEnvirons method is: getErrorReporter()
statement is: Parser parser = new Parser(compilerEnvirons, errorReporter), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V
statement is: parser.insideFunction(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: parser.insideFunction() target is: parser method is: insideFunction()
statement is: org.mozilla.javascript.CompilerEnvirons()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.CompilerEnvirons
statement code is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons()
statement is: forEval(Lorg/mozilla/javascript/ErrorReporter;)Lorg/mozilla/javascript/ErrorReporter; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.mozilla.javascript.DefaultErrorReporter
statement code is: DefaultErrorReporter forEval = (DefaultErrorReporter)DefaultErrorReporter.forEval((ErrorReporter) null)
statement is: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.Parser
statement code is: Parser parser = new Parser(arg0, arg1)
statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("")
statement is: parse(Ljava/io/Reader;Ljava/lang/String;I)Lorg/mozilla/javascript/ScriptOrFnNode; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.mozilla.javascript.ScriptOrFnNode
statement code is: ScriptOrFnNode parse = parser.parse((Reader) arg0, "msg.try.no.catchfinally", 0)
test data is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter forEval = (DefaultErrorReporter)DefaultErrorReporter.forEval((ErrorReporter) null);
Parser parser = new Parser(compilerEnvirons, forEval);
StringReader stringReader = new StringReader("");
parser.parse((Reader) stringReader, "msg.try.no.catchfinally", 0);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
        DefaultErrorReporter forEval = ((DefaultErrorReporter) (DefaultErrorReporter.forEval(((ErrorReporter) (null)))));
        Parser parser = new Parser(compilerEnvirons, forEval);
        StringReader stringReader = new StringReader("try { // code } finally { // cleanup }");
        parser.parse(((Reader) (stringReader)), "message.try.no.catchfinally", 0);
    }
}
statement is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: DefaultErrorReporter forEval = ((DefaultErrorReporter) (DefaultErrorReporter.forEval(((ErrorReporter) (null))))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: ((DefaultErrorReporter) (DefaultErrorReporter.forEval(((ErrorReporter) (null))))) target is: DefaultErrorReporter method is: forEval(ErrorReporter)
Matched Method is: forEval(Lorg/mozilla/javascript/ErrorReporter;)Lorg/mozilla/javascript/ErrorReporter;
i 0 Parameters size() 0 Num of Method Parameters: 1
statement is: Parser parser = new Parser(compilerEnvirons, forEval), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: StringReader stringReader = new StringReader("try { // code } finally { // cleanup }"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: parser.parse(((Reader) (stringReader)), "message.try.no.catchfinally", 0), class spoon.support.reflect.code.CtInvocationImpl
invocation is: parser.parse(((Reader) (stringReader)), "message.try.no.catchfinally", 0) target is: parser method is: parse(Reader,java.lang.String,int)
source statement: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V callee: VariableReference: Statement 2, type org.mozilla.javascript.Parserindex is: 3
Matched Method is: parse(Ljava/io/Reader;Ljava/lang/String;I)Lorg/mozilla/javascript/ScriptOrFnNode;
TestCase is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
ErrorReporter errorReporter = null;
DefaultErrorReporter forEval = (DefaultErrorReporter)DefaultErrorReporter.forEval(errorReporter);
Parser parser = new Parser(compilerEnvirons, forEval);
String string = "try { // code } finally { // cleanup }";
StringReader stringReader = new StringReader(string);
String string = "message.try.no.catchfinally";
int _int = 0;
((Parser) forEval).parse((Reader) stringReader, string, _int);

statement is: org.mozilla.javascript.CompilerEnvirons()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.CompilerEnvirons
statement code is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons()
statement is: getErrorReporter()Lorg/mozilla/javascript/ErrorReporter; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.mozilla.javascript.DefaultErrorReporter
statement code is: DefaultErrorReporter errorReporter = (DefaultErrorReporter)compilerEnvirons.getErrorReporter()
statement is: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.Parser
statement code is: Parser parser = new Parser(arg0, arg1)
statement is: addError(Ljava/lang/String;Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: parser.addError("msg.no.paren.with", "ayuY")
test data is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)compilerEnvirons.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
parser.addError("msg.no.paren.with", "ayuY");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
        DefaultErrorReporter errorReporter = ((DefaultErrorReporter) (compilerEnvirons.getErrorReporter()));
        Parser parser = new Parser(compilerEnvirons, errorReporter);
        parser.addError("msg.no.paren.with", "Ayushya");
    }
}
statement is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: DefaultErrorReporter errorReporter = ((DefaultErrorReporter) (compilerEnvirons.getErrorReporter())), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: ((DefaultErrorReporter) (compilerEnvirons.getErrorReporter())) target is: compilerEnvirons method is: getErrorReporter()
source statement: org.mozilla.javascript.CompilerEnvirons()V callee: VariableReference: Statement 0, type org.mozilla.javascript.CompilerEnvironsindex is: 0
Matched Method is: getErrorReporter()Lorg/mozilla/javascript/ErrorReporter;
statement is: Parser parser = new Parser(compilerEnvirons, errorReporter), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: parser.addError("msg.no.paren.with", "Ayushya"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: parser.addError("msg.no.paren.with", "Ayushya") target is: parser method is: addError(java.lang.String,java.lang.String)
source statement: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V callee: VariableReference: Statement 2, type org.mozilla.javascript.Parserindex is: 2
Matched Method is: addError(Ljava/lang/String;Ljava/lang/String;)V
TestCase is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)compilerEnvirons.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
String string = "msg.no.paren.with";
String string = "Ayushya";
parser.addError(string, string);

statement is: org.mozilla.javascript.CompilerEnvirons()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.CompilerEnvirons
statement code is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons()
statement is: getErrorReporter()Lorg/mozilla/javascript/ErrorReporter; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.mozilla.javascript.DefaultErrorReporter
statement code is: DefaultErrorReporter errorReporter = (DefaultErrorReporter)compilerEnvirons.getErrorReporter()
statement is: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.Parser
statement code is: Parser parser = new Parser(arg0, arg1)
statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("Hx+3-d;DiR:ppv")
statement is: parse(Ljava/io/Reader;Ljava/lang/String;I)Lorg/mozilla/javascript/ScriptOrFnNode; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.mozilla.javascript.ScriptOrFnNode
statement code is: ScriptOrFnNode parse = parser.parse((Reader) arg0, "Hx+3-d;DiR:ppv", 81)
test data is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)compilerEnvirons.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
StringReader stringReader = new StringReader("Hx+3-d;DiR:ppv");
parser.parse((Reader) stringReader, "Hx+3-d;DiR:ppv", 81);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
        DefaultErrorReporter errorReporter = ((DefaultErrorReporter) (compilerEnvirons.getErrorReporter()));
        Parser parser = new Parser(compilerEnvirons, errorReporter);
        StringReader stringReader = new StringReader("2 + 3 - 4 * (5 - 6)");
        parser.parse(((Reader) (stringReader)), "2 + 3 - 4 * (5 - 6)", 75);
    }
}
statement is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: DefaultErrorReporter errorReporter = ((DefaultErrorReporter) (compilerEnvirons.getErrorReporter())), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: ((DefaultErrorReporter) (compilerEnvirons.getErrorReporter())) target is: compilerEnvirons method is: getErrorReporter()
source statement: org.mozilla.javascript.CompilerEnvirons()V callee: VariableReference: Statement 0, type org.mozilla.javascript.CompilerEnvironsindex is: 0
Matched Method is: getErrorReporter()Lorg/mozilla/javascript/ErrorReporter;
statement is: Parser parser = new Parser(compilerEnvirons, errorReporter), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: StringReader stringReader = new StringReader("2 + 3 - 4 * (5 - 6)"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: parser.parse(((Reader) (stringReader)), "2 + 3 - 4 * (5 - 6)", 75), class spoon.support.reflect.code.CtInvocationImpl
invocation is: parser.parse(((Reader) (stringReader)), "2 + 3 - 4 * (5 - 6)", 75) target is: parser method is: parse(Reader,java.lang.String,int)
source statement: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V callee: VariableReference: Statement 2, type org.mozilla.javascript.Parserindex is: 2
Matched Method is: parse(Ljava/io/Reader;Ljava/lang/String;I)Lorg/mozilla/javascript/ScriptOrFnNode;
TestCase is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)compilerEnvirons.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
String string = "2 + 3 - 4 * (5 - 6)";
StringReader stringReader = new StringReader(string);
String string = "2 + 3 - 4 * (5 - 6)";
int _int = 75;
parser.parse((Reader) stringReader, string, _int);

statement is: org.mozilla.javascript.CompilerEnvirons()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.CompilerEnvirons
statement code is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons()
statement is: getErrorReporter()Lorg/mozilla/javascript/ErrorReporter; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.mozilla.javascript.DefaultErrorReporter
statement code is: DefaultErrorReporter errorReporter = (DefaultErrorReporter)compilerEnvirons.getErrorReporter()
statement is: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.Parser
statement code is: Parser parser = new Parser(arg0, arg1)
statement is: parse(Ljava/lang/String;Ljava/lang/String;I)Lorg/mozilla/javascript/ScriptOrFnNode; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.mozilla.javascript.ScriptOrFnNode
statement code is: ScriptOrFnNode parse = parser.parse("s?dJ:Nj:T1mgy!_ff", "I0&K", 99)
test data is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)compilerEnvirons.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
parser.parse("s?dJ:Nj:T1mgy!_ff", "I0&K", 99);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
        DefaultErrorReporter errorReporter = ((DefaultErrorReporter) (compilerEnvirons.getErrorReporter()));
        Parser parser = new Parser(compilerEnvirons, errorReporter);
        parser.parse("s?dJ:Nj:T1mgy!_ff", "I0&K", 99);
        errorReporter.setOutputLocation(new FileOutputStream("/path/to/output/file"));
        ParserOptions options = new ParserOptions();
        options.setMaximumTokenCount(100);
        parser.setOptions(options);
    }
}
statement is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: DefaultErrorReporter errorReporter = ((DefaultErrorReporter) (compilerEnvirons.getErrorReporter())), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: ((DefaultErrorReporter) (compilerEnvirons.getErrorReporter())) target is: compilerEnvirons method is: getErrorReporter()
source statement: org.mozilla.javascript.CompilerEnvirons()V callee: VariableReference: Statement 0, type org.mozilla.javascript.CompilerEnvironsindex is: 0
Matched Method is: getErrorReporter()Lorg/mozilla/javascript/ErrorReporter;
statement is: Parser parser = new Parser(compilerEnvirons, errorReporter), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: parser.parse("s?dJ:Nj:T1mgy!_ff", "I0&K", 99), class spoon.support.reflect.code.CtInvocationImpl
invocation is: parser.parse("s?dJ:Nj:T1mgy!_ff", "I0&K", 99) target is: parser method is: parse(java.lang.String,java.lang.String,int)
source statement: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V callee: VariableReference: Statement 2, type org.mozilla.javascript.Parserindex is: 2
Matched Method is: parse(Ljava/lang/String;Ljava/lang/String;I)Lorg/mozilla/javascript/ScriptOrFnNode;
statement is: errorReporter.setOutputLocation(new FileOutputStream("/path/to/output/file")), class spoon.support.reflect.code.CtInvocationImpl
invocation is: errorReporter.setOutputLocation(new FileOutputStream("/path/to/output/file")) target is: errorReporter method is: setOutputLocation(FileOutputStream)
statement is: ParserOptions options = new ParserOptions(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: options.setMaximumTokenCount(100), class spoon.support.reflect.code.CtInvocationImpl
invocation is: options.setMaximumTokenCount(100) target is: options method is: setMaximumTokenCount(int)
statement is: parser.setOptions(options), class spoon.support.reflect.code.CtInvocationImpl
invocation is: parser.setOptions(options) target is: parser method is: setOptions(ParserOptions)
TestCase is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)compilerEnvirons.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
String string = "s?dJ:Nj:T1mgy!_ff";
String string = "I0&K";
int _int = 99;
parser.parse(string, string, _int);

statement is: org.mozilla.javascript.CompilerEnvirons()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.CompilerEnvirons
statement code is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons()
statement is: setXmlAvailable(Z)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: compilerEnvirons.setXmlAvailable(false)
statement is: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.Parser
statement code is: Parser parser = new Parser(arg0, (ErrorReporter) null)
statement is: java.io.StringReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.StringReader
statement code is: StringReader stringReader = new StringReader("msg.destruct.assign.no.init")
statement is: parse(Ljava/io/Reader;Ljava/lang/String;I)Lorg/mozilla/javascript/ScriptOrFnNode; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.mozilla.javascript.ScriptOrFnNode
statement code is: ScriptOrFnNode parse = parser.parse((Reader) arg0, "msg.destruct.assign.no.init", 128)
test data is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
compilerEnvirons.setXmlAvailable(false);
Parser parser = new Parser(compilerEnvirons, (ErrorReporter) null);
StringReader stringReader = new StringReader("msg.destruct.assign.no.init");
parser.parse((Reader) stringReader, "msg.destruct.assign.no.init", 128);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
        compilerEnvirons.setXmlAvailable(false);
        Parser parser = new Parser(compilerEnvirons, ((ErrorReporter) (null)));
        StringReader stringReader = new StringReader("The message 'msg.destruct.assign.no.init' was not initialized before destruction.");
        parser.parse(((Reader) (stringReader)), "msg.destruct.assign.no.init", 128);
    }
}
statement is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: compilerEnvirons.setXmlAvailable(false), class spoon.support.reflect.code.CtInvocationImpl
invocation is: compilerEnvirons.setXmlAvailable(false) target is: compilerEnvirons method is: setXmlAvailable(boolean)
source statement: org.mozilla.javascript.CompilerEnvirons()V callee: VariableReference: Statement 0, type org.mozilla.javascript.CompilerEnvironsindex is: 0
Matched Method is: setXmlAvailable(Z)V
statement is: Parser parser = new Parser(compilerEnvirons, ((ErrorReporter) (null))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: StringReader stringReader = new StringReader("The message 'msg.destruct.assign.no.init' was not initialized before destruction."), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: parser.parse(((Reader) (stringReader)), "msg.destruct.assign.no.init", 128), class spoon.support.reflect.code.CtInvocationImpl
invocation is: parser.parse(((Reader) (stringReader)), "msg.destruct.assign.no.init", 128) target is: parser method is: parse(Reader,java.lang.String,int)
source statement: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V callee: VariableReference: Statement 2, type org.mozilla.javascript.Parserindex is: 3
Matched Method is: parse(Ljava/io/Reader;Ljava/lang/String;I)Lorg/mozilla/javascript/ScriptOrFnNode;
TestCase is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
boolean _boolean = false;
compilerEnvirons.setXmlAvailable(_boolean);
Parser parser = new Parser(compilerEnvirons, (ErrorReporter) null);
String string = "The message 'msg.destruct.assign.no.init' was not initialized before destruction.";
StringReader stringReader = new StringReader(string);
String string = "msg.destruct.assign.no.init";
int _int = 128;
((Parser) _void).parse((Reader) stringReader, string, _int);

statement is: org.mozilla.javascript.CompilerEnvirons()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.CompilerEnvirons
statement code is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons()
statement is: org.evosuite.testcase.statements.FieldStatement@35127c92 type is: class org.evosuite.testcase.statements.FieldStatement return type class org.mozilla.javascript.DefaultErrorReporter
statement code is: DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance
statement is: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.Parser
statement code is: Parser parser = new Parser(arg0, arg1)
statement is: parse(Ljava/lang/String;Ljava/lang/String;I)Lorg/mozilla/javascript/ScriptOrFnNode; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.mozilla.javascript.ScriptOrFnNode
statement code is: ScriptOrFnNode parse = parser.parse("_NMsJvfHh.(", "_NMsJvfHh.(", (-1368))
test data is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
parser.parse("_NMsJvfHh.(", "_NMsJvfHh.(", (-1368));

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
        DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
        Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
        parser.parse("_NMsJvfHh.(", "_NMsJvfHh.(", 50);
    }
}
statement is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: DefaultErrorReporter.instance is DefaultErrorReporter
CtField is: static org.mozilla.javascript.DefaultErrorReporter org.mozilla.javascript.DefaultErrorReporter.instance DefaultErrorReporter instance
statement is: Parser parser = new Parser(compilerEnvirons, defaultErrorReporter), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: parser.parse("_NMsJvfHh.(", "_NMsJvfHh.(", 50), class spoon.support.reflect.code.CtInvocationImpl
invocation is: parser.parse("_NMsJvfHh.(", "_NMsJvfHh.(", 50) target is: parser method is: parse(java.lang.String,java.lang.String,int)
source statement: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V callee: VariableReference: Statement 2, type org.mozilla.javascript.Parserindex is: 2
Matched Method is: parse(Ljava/lang/String;Ljava/lang/String;I)Lorg/mozilla/javascript/ScriptOrFnNode;
TestCase is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
String string = "_NMsJvfHh.(";
String string = "_NMsJvfHh.(";
int _int = 50;
parser.parse(string, string, _int);

statement is: org.mozilla.javascript.CompilerEnvirons()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.CompilerEnvirons
statement code is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons()
statement is: org.evosuite.testcase.statements.FieldStatement@35127c92 type is: class org.evosuite.testcase.statements.FieldStatement return type class org.mozilla.javascript.DefaultErrorReporter
statement code is: DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance
statement is: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.Parser
statement code is: Parser parser = new Parser(arg0, arg1)
statement is: parse(Ljava/lang/String;Ljava/lang/String;I)Lorg/mozilla/javascript/ScriptOrFnNode; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.mozilla.javascript.ScriptOrFnNode
statement code is: ScriptOrFnNode parse = parser.parse("ZoqtnpI[qf]", "ZoqtnpI[qf]", (-1))
test data is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
parser.parse("ZoqtnpI[qf]", "ZoqtnpI[qf]", (-1));

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
        DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
        Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
        parser.parse("ZoqtnpI[qf]", "ZoqtnpI[qf]", -1);
        // Improved test data:
        compilerEnvirons.setLanguageVersion(new LanguageVersion(8, 0));
        defaultErrorReporter.enableDebugOutput();
        parser.parse("class Test { public static void main(String[] args) { System.out.println(\"Hello, world!\"); } }", "Test.java", -1);
    }
}
statement is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: DefaultErrorReporter.instance is DefaultErrorReporter
CtField is: static org.mozilla.javascript.DefaultErrorReporter org.mozilla.javascript.DefaultErrorReporter.instance DefaultErrorReporter instance
statement is: Parser parser = new Parser(compilerEnvirons, defaultErrorReporter), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: parser.parse("ZoqtnpI[qf]", "ZoqtnpI[qf]", -1), class spoon.support.reflect.code.CtInvocationImpl
invocation is: parser.parse("ZoqtnpI[qf]", "ZoqtnpI[qf]", -1) target is: parser method is: parse(java.lang.String,java.lang.String,int)
source statement: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V callee: VariableReference: Statement 2, type org.mozilla.javascript.Parserindex is: 2
Matched Method is: parse(Ljava/lang/String;Ljava/lang/String;I)Lorg/mozilla/javascript/ScriptOrFnNode;
i 2 Parameters size() 2 Num of Method Parameters: 3
statement is: // Improved test data:
compilerEnvirons.setLanguageVersion(new LanguageVersion(8, 0)), class spoon.support.reflect.code.CtInvocationImpl
invocation is: // Improved test data:
compilerEnvirons.setLanguageVersion(new LanguageVersion(8, 0)) target is: compilerEnvirons method is: setLanguageVersion(LanguageVersion)
statement is: defaultErrorReporter.enableDebugOutput(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: defaultErrorReporter.enableDebugOutput() target is: defaultErrorReporter method is: enableDebugOutput()
statement is: parser.parse("class Test { public static void main(String[] args) { System.out.println(\"Hello, world!\"); } }", "Test.java", -1), class spoon.support.reflect.code.CtInvocationImpl
invocation is: parser.parse("class Test { public static void main(String[] args) { System.out.println(\"Hello, world!\"); } }", "Test.java", -1) target is: parser method is: parse(java.lang.String,java.lang.String,int)
source statement: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V callee: VariableReference: Statement 2, type org.mozilla.javascript.Parserindex is: 2
Matched Method is: parse(Ljava/lang/String;Ljava/lang/String;I)Lorg/mozilla/javascript/ScriptOrFnNode;
i 2 Parameters size() 2 Num of Method Parameters: 3
TestCase is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
String string = "ZoqtnpI[qf]";
String string = "ZoqtnpI[qf]";
int _int = null;
parser.parse(string, string, _int);
String string = "class Test { public static void main(String[] args) { System.out.println(\"Hello, world!\"); } }";
String string = "Test.java";
int _int = null;
parser.parse(string, string, _int);

statement is: org.mozilla.javascript.CompilerEnvirons()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.CompilerEnvirons
statement code is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons()
statement is: getCurrentContext()Lorg/mozilla/javascript/Context; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.mozilla.javascript.Context
statement code is: Context currentContext = Context.getCurrentContext()
statement is: getErrorReporter()Lorg/mozilla/javascript/ErrorReporter; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.mozilla.javascript.DefaultErrorReporter
statement code is: DefaultErrorReporter errorReporter = (DefaultErrorReporter)context.getErrorReporter()
statement is: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.Parser
statement code is: Parser parser = new Parser(arg0, arg1)
statement is: addError(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: parser.addError("error reporter")
test data is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Context currentContext = Context.getCurrentContext();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)currentContext.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
parser.addError("error reporter");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
        Context currentContext = Context.getCurrentContext();
        DefaultErrorReporter errorReporter = ((DefaultErrorReporter) (currentContext.getErrorReporter()));
        Parser parser = new Parser(compilerEnvirons, errorReporter);
        parser.addError("Syntax Error: Unexpected token 'error reporter'");
    }
}
statement is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Context currentContext = Context.getCurrentContext(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: Context.getCurrentContext() target is: Context method is: getCurrentContext()
Matched Method is: getCurrentContext()Lorg/mozilla/javascript/Context;
statement is: DefaultErrorReporter errorReporter = ((DefaultErrorReporter) (currentContext.getErrorReporter())), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: ((DefaultErrorReporter) (currentContext.getErrorReporter())) target is: currentContext method is: getErrorReporter()
source statement: getCurrentContext()Lorg/mozilla/javascript/Context; callee: VariableReference: Statement 1, type org.mozilla.javascript.Contextindex is: 1
Matched Method is: getErrorReporter()Lorg/mozilla/javascript/ErrorReporter;
statement is: Parser parser = new Parser(compilerEnvirons, errorReporter), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: parser.addError("Syntax Error: Unexpected token 'error reporter'"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: parser.addError("Syntax Error: Unexpected token 'error reporter'") target is: parser method is: addError(java.lang.String)
source statement: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V callee: VariableReference: Statement 3, type org.mozilla.javascript.Parserindex is: 3
Matched Method is: addError(Ljava/lang/String;)V
TestCase is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Context currentContext = Context.getCurrentContext();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)currentContext.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
String string = "Syntax Error: Unexpected token 'error reporter'";
parser.addError(string);

statement is: org.mozilla.javascript.CompilerEnvirons()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.CompilerEnvirons
statement code is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons()
statement is: org.evosuite.testcase.statements.FieldStatement@35127c92 type is: class org.evosuite.testcase.statements.FieldStatement return type class org.mozilla.javascript.DefaultErrorReporter
statement code is: DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance
statement is: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.Parser
statement code is: Parser parser = new Parser(arg0, arg1)
statement is: popScope()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: parser.popScope()
test data is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
parser.popScope();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
        DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
        Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
        parser.popScope();// Test data improvement: Change the primitive values and Strings to more descriptive examples.

        String inputCode = "class MyClass { public void myMethod() { int x = 5; double y = 3.14; String z = \"hello\"; char c = \'a\'; } }";
        CompilerOptions options = new CompilerOptions();
        options.setSourceFile(inputCode);
        parser.parse(options);
    }
}
statement is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: DefaultErrorReporter.instance is DefaultErrorReporter
CtField is: static org.mozilla.javascript.DefaultErrorReporter org.mozilla.javascript.DefaultErrorReporter.instance DefaultErrorReporter instance
statement is: Parser parser = new Parser(compilerEnvirons, defaultErrorReporter), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: parser.popScope()// Test data improvement: Change the primitive values and Strings to more descriptive examples.
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: parser.popScope()// Test data improvement: Change the primitive values and Strings to more descriptive examples.
 target is: parser method is: popScope()
source statement: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V callee: VariableReference: Statement 2, type org.mozilla.javascript.Parserindex is: 2
Matched Method is: popScope()V
statement is: String inputCode = "class MyClass { public void myMethod() { int x = 5; double y = 3.14; String z = \"hello\"; char c = \'a\'; } }", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: CompilerOptions options = new CompilerOptions(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: options.setSourceFile(inputCode), class spoon.support.reflect.code.CtInvocationImpl
invocation is: options.setSourceFile(inputCode) target is: options method is: setSourceFile(java.lang.String)
statement is: parser.parse(options), class spoon.support.reflect.code.CtInvocationImpl
invocation is: parser.parse(options) target is: parser method is: parse(CompilerOptions)
* this is vulnerable: String string = "class MyClass { public void myMethod() { int x = 5; double y = 3.14; String z = \"hello\"; char c = 'a'; } }"
TestCase is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
parser.popScope();
String string = "class MyClass { public void myMethod() { int x = 5; double y = 3.14; String z = \"hello\"; char c = 'a'; } }";

statement is: org.mozilla.javascript.CompilerEnvirons()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.CompilerEnvirons
statement code is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons()
statement is: org.evosuite.testcase.statements.FieldStatement@35127c92 type is: class org.evosuite.testcase.statements.FieldStatement return type class org.mozilla.javascript.DefaultErrorReporter
statement code is: DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance
statement is: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.mozilla.javascript.Parser
statement code is: Parser parser = new Parser(arg0, arg1)
statement is: reportError(Ljava/lang/String;)Ljava/lang/RuntimeException; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.lang.RuntimeException
statement code is: RuntimeException reportError = parser.reportError("TDp%h2$!V.b")
test data is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
parser.reportError("TDp%h2$!V.b");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
        DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
        Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
        parser.reportError("TDp%h2$!V.b");
    }
}
statement is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: DefaultErrorReporter.instance is DefaultErrorReporter
CtField is: static org.mozilla.javascript.DefaultErrorReporter org.mozilla.javascript.DefaultErrorReporter.instance DefaultErrorReporter instance
statement is: Parser parser = new Parser(compilerEnvirons, defaultErrorReporter), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: parser.reportError("TDp%h2$!V.b"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: parser.reportError("TDp%h2$!V.b") target is: parser method is: reportError(java.lang.String)
source statement: org.mozilla.javascript.Parser(Lorg/mozilla/javascript/CompilerEnvirons;Lorg/mozilla/javascript/ErrorReporter;)V callee: VariableReference: Statement 2, type org.mozilla.javascript.Parserindex is: 2
Matched Method is: reportError(Ljava/lang/String;)Ljava/lang/RuntimeException;
TestCase is: CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
String string = "TDp%h2$!V.b";
parser.reportError(string);

* test suite isTestSuite: 172
Test 0: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Parser parser = new Parser(compilerEnvirons, (ErrorReporter) null);
// Undeclared exception!
try { 
  parser.parse(";@Rv Iu<K&~e5Tcc?T", ";@Rv Iu<K&~e5Tcc?T", (-1765));
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 1: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Parser parser = new Parser(compilerEnvirons, (ErrorReporter) null);
parser.getEncodedSource();
Test 2: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Parser parser = new Parser(compilerEnvirons, (ErrorReporter) null);
// Undeclared exception!
try { 
  parser.parse("while", "while", 722);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 3: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
// Undeclared exception!
try { 
  parser.parse("DN^!{m*Wu", (String) null, 1223);
  fail("Expecting exception: ClassCastException");

} catch(ClassCastException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 4: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)compilerEnvirons.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
StringReader stringReader = new StringReader("''lj/vX?gWo");
// Undeclared exception!
try { 
  parser.parse((Reader) stringReader, "''lj/vX?gWo", 52);
  fail("Expecting exception: ClassCastException");

} catch(ClassCastException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 5: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
parser.addStrictWarning("error reporter", "error reporter");
Test 6: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)compilerEnvirons.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
// Undeclared exception!
try { 
  parser.addWarning("msg.syntax", "msg.syntax");
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.mozilla.javascript.Parser", e);
}

Test 7: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
parser.parse("u\n", "u\n", 1677);
Test 8: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
compilerEnvirons.setXmlAvailable(false);
Parser parser = new Parser(compilerEnvirons, (ErrorReporter) null);
// Undeclared exception!
try { 
  parser.parse("_NMsJvfHh.(", "_NMsJvfHh.(", 4617);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 9: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Parser parser = new Parser(compilerEnvirons, (ErrorReporter) null);
ScriptOrFnNode parse = parser.parse("msg.no.brace.catchblock", "J^(2<", 21);
parser.pushScope(parse);
// Undeclared exception!
try { 
  parser.pushScope(parse);
  fail("Expecting exception: IllegalStateException");

} catch(IllegalStateException e) {
   //
   // FAILED ASSERTION
   //
   verifyException("org.mozilla.javascript.Kit", e);
}

Test 10: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
// Undeclared exception!
try { 
  parser.parse("function", "function", 32);
  fail("Expecting exception: ClassCastException");

} catch(ClassCastException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 11: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Context currentContext = Context.getCurrentContext();
compilerEnvirons.initFromContext(currentContext);
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
parser.parse("\n", "\n", 145);
Test 12: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
// Undeclared exception!
try { 
  parser.parse("{sjUaI", "TypUEro: ", (-667));
  fail("Expecting exception: ClassCastException");

} catch(ClassCastException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 13: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
// Undeclared exception!
try { 
  parser.parse("{}D\"CFDjGM:Hh_zD1*D", "{}D\"CFDjGM:Hh_zD1*D", 46);
  fail("Expecting exception: ClassCastException");

} catch(ClassCastException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 14: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
// Undeclared exception!
try { 
  parser.parse("break", "break", 46);
  fail("Expecting exception: ClassCastException");

} catch(ClassCastException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 15: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Parser parser = new Parser(compilerEnvirons, (ErrorReporter) null);
// Undeclared exception!
try { 
  parser.parse("return", "return", 101);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 16: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)compilerEnvirons.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
// Undeclared exception!
try { 
  parser.parse("throw ", "throw ", 3420);
  fail("Expecting exception: ClassCastException");

} catch(ClassCastException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 17: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
StringReader stringReader = new StringReader("try ");
DefaultErrorReporter errorReporter = (DefaultErrorReporter)compilerEnvirons.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
// Undeclared exception!
try { 
  parser.parse((Reader) stringReader, (String) null, (-443));
  fail("Expecting exception: ClassCastException");

} catch(ClassCastException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 18: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
// Undeclared exception!
try { 
  parser.parse("if ", "if ", 152);
  fail("Expecting exception: ClassCastException");

} catch(ClassCastException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 19: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter forEval = (DefaultErrorReporter)DefaultErrorReporter.forEval((ErrorReporter) null);
Parser parser = new Parser(compilerEnvirons, forEval);
// Undeclared exception!
try { 
  parser.parse("switch", "_NMsJvfHh.(", 32);
  fail("Expecting exception: ClassCastException");

} catch(ClassCastException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 20: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
// Undeclared exception!
try { 
  parser.parse("default", "IJ3aritOhZ2{7;9}`6", 157);
  fail("Expecting exception: ClassCastException");

} catch(ClassCastException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 21: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
// Undeclared exception!
try { 
  parser.parse("for ", " ee38HK-Q|U", 1424);
  fail("Expecting exception: ClassCastException");

} catch(ClassCastException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 22: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)compilerEnvirons.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
StringReader stringReader = new StringReader("var ");
// Undeclared exception!
try { 
  parser.parse((Reader) stringReader, "msg.bad.var", 310);
  fail("Expecting exception: ClassCastException");

} catch(ClassCastException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 23: 
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
// Undeclared exception!
try { 
  parser.parse("with", "with", (-3800));
  fail("Expecting exception: ClassCastException");

} catch(ClassCastException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 24: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Parser parser = new Parser(compilerEnvirons, (ErrorReporter) null);
// Undeclared exception!
try { 
  parser.parse("const", "<QQnrsx6G0-MXbf", 159);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 25: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
// Undeclared exception!
try { 
  parser.parse("aa:{8+xqCIAm`dF!#", "aa:{8+xqCIAm`dF!#", (-1746));
  fail("Expecting exception: ClassCastException");

} catch(ClassCastException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 26: 
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
parser.parse("KGP:V6:rV", "KGP:V6:rV", 24);
Test 27: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Parser parser = new Parser(compilerEnvirons, (ErrorReporter) null);
// Undeclared exception!
try { 
  parser.parse("am;pm;monday;tuesday;wednesday;thursday;friday;saturday;sunday;january;february;march;april;may;june;july;august;september;october;november;december;gmt;ut;utc;est;edt;cst;cdt;mst;mdt;pst;pdt;", "am;pm;monday;tuesday;wednesday;thursday;friday;saturday;sunday;january;february;march;april;may;june;july;august;september;october;november;december;gmt;ut;utc;est;edt;cst;cdt;mst;mdt;pst;pdt;", (-1168));
  fail("Expecting exception: IllegalStateException");

} catch(IllegalStateException e) {
   //
   // FAILED ASSERTION
   //
   verifyException("org.mozilla.javascript.Kit", e);
}

Test 28: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
// Undeclared exception!
try { 
  parser.parse("zE}ysL#&{i<>+m", "zE}ysL#&{i<>+m", 103);
  fail("Expecting exception: ClassCastException");

} catch(ClassCastException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 29: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
StringReader stringReader = new StringReader("ayuY");
parser.parse((Reader) stringReader, "if ", 152);
parser.defineSymbol(152, false, "ayuY");
Test 30: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
StringReader stringReader = new StringReader("hor");
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
parser.parse((Reader) stringReader, "hor", 160);
parser.defineSymbol(86, false, "E+t");
// Undeclared exception!
try { 
  parser.defineSymbol(1, false, "E+t");
  fail("Expecting exception: IllegalStateException");

} catch(IllegalStateException e) {
   //
   // FAILED ASSERTION
   //
   verifyException("org.mozilla.javascript.Kit", e);
}

Test 31: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
StringReader stringReader = new StringReader("F&M");
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
parser.parse((Reader) stringReader, "language version", 10);
parser.defineSymbol(108, false, "error reporter");
Test 32: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
StringReader stringReader = new StringReader("F&M");
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
parser.parse((Reader) stringReader, "fontcolor", 50);
parser.defineSymbol(153, false, "language version");
Test 33: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
StringReader stringReader = new StringReader("taK");
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
parser.parse((Reader) stringReader, "S1a/,G/{>,\"{rmtJ=", 121);
parser.defineSymbol(152, true, "ayuY");
Test 34: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
// Undeclared exception!
try { 
  parser.parse("ZMF3_^Px,Z<LRi~", "ZMF3_^Px,Z<LRi~", 126);
  fail("Expecting exception: ClassCastException");

} catch(ClassCastException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 35: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
// Undeclared exception!
try { 
  parser.parse("l?[]y", ">`\r<0'(x.;/*B;", (-1216));
  fail("Expecting exception: ClassCastException");

} catch(ClassCastException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 36: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
// Undeclared exception!
try { 
  parser.parse("v||,rf ct", "U4tc&S(2Py)J\u0001re", 20);
  fail("Expecting exception: ClassCastException");

} catch(ClassCastException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 37: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
StringReader stringReader = new StringReader("F&&M");
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
parser.parse((Reader) stringReader, "language version", 12);
Test 38: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Parser parser = new Parser(compilerEnvirons, (ErrorReporter) null);
// Undeclared exception!
try { 
  parser.parse("F|[$je#N]&r=lK", "F|[$je#N]&r=lK", (-195));
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 39: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
parser.parse("factory == null", "factory == null", 65);
Test 40: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
// Undeclared exception!
try { 
  parser.parse("Bfa<=6!r4TUT{{8", "'YGfpGJikZy", (-791));
  fail("Expecting exception: ClassCastException");

} catch(ClassCastException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 41: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Parser parser = new Parser(compilerEnvirons, (ErrorReporter) null);
// Undeclared exception!
try { 
  parser.parse("gv18Yz>=", "gv18Yz>=", (-5428));
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 42: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
// Undeclared exception!
try { 
  parser.parse("Z<<ED O4hRufFz@G", "Z<<ED O4hRufFz@G", (-1));
  fail("Expecting exception: ClassCastException");

} catch(ClassCastException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 43: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Parser parser = new Parser(compilerEnvirons, (ErrorReporter) null);
// Undeclared exception!
try { 
  parser.parse("R-{", "R-{", 104);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 44: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Parser parser = new Parser(compilerEnvirons, (ErrorReporter) null);
// Undeclared exception!
try { 
  parser.parse("a/{}]u/c,!vtJqY;P/S", "$qM", 85);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 45: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Parser parser = new Parser(compilerEnvirons, (ErrorReporter) null);
// Undeclared exception!
try { 
  parser.parse("0%E&++", "K#_@+%8y", 4758);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 46: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
// Undeclared exception!
try { 
  parser.parse("-IxXy5O+!>", "-IxXy5O+!>", 122);
  fail("Expecting exception: ClassCastException");

} catch(ClassCastException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 47: 
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
// Undeclared exception!
try { 
  parser.parse("6+~ .4`d", "6+~ .4`d", (-1468));
  fail("Expecting exception: ClassCastException");

} catch(ClassCastException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 48: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
// Undeclared exception!
try { 
  parser.parse("delete ", "delete ", 404);
  fail("Expecting exception: ClassCastException");

} catch(ClassCastException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 49: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
// Undeclared exception!
try { 
  parser.parse("--", "?", 85);
  fail("Expecting exception: ClassCastException");

} catch(ClassCastException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 50: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Parser parser = new Parser(compilerEnvirons, (ErrorReporter) null);
// Undeclared exception!
try { 
  parser.parse("void ", "XP:iUxw*Y>Rp7", 1036);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 51: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
compilerEnvirons.setXmlAvailable(false);
Parser parser = new Parser(compilerEnvirons, (ErrorReporter) null);
// Undeclared exception!
try { 
  parser.parse("<><7T4#FGD3mCwE=", "msg.destruct.assign.no.init", (-64));
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 52: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
// Undeclared exception!
try { 
  parser.parse("FXl8R9--jenv[;09", "FXl8R9--jenv[;09", 404);
  fail("Expecting exception: ClassCastException");

} catch(ClassCastException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 53: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
ContextFactory global = ContextFactory.getGlobal();
Context context = new Context(global);
DefaultErrorReporter errorReporter = (DefaultErrorReporter)context.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
StringReader stringReader = new StringReader("<7T4#FGD3mCwE={fU");
// Undeclared exception!
try { 
  parser.parse((Reader) stringReader, "language version", 12);
  fail("Expecting exception: ClassCastException");

} catch(ClassCastException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 54: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
// Undeclared exception!
try { 
  parser.parse("z:U()S", "set", 947);
  fail("Expecting exception: ClassCastException");

} catch(ClassCastException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 55: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
// Undeclared exception!
try { 
  parser.parse("nYf(3, ;aQ9*3Aqe{m", "nYf(3, ;aQ9*3Aqe{m", 120);
  fail("Expecting exception: ClassCastException");

} catch(ClassCastException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 56: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
// Undeclared exception!
try { 
  parser.parse("O[yE8.@:XCV^4\"", "O[yE8.@:XCV^4\"", 2087);
  fail("Expecting exception: ClassCastException");

} catch(ClassCastException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 57: 
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
// Undeclared exception!
try { 
  parser.parse("c..", "msg.no.paren.for.ctrl", 39);
  fail("Expecting exception: ClassCastException");

} catch(ClassCastException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 58: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
// Undeclared exception!
try { 
  parser.parse("msg.bad.throw.eol", "msg.bad.throw.eol", (-478));
  fail("Expecting exception: IllegalStateException");

} catch(IllegalStateException e) {
   //
   // FAILED ASSERTION
   //
   verifyException("org.mozilla.javascript.Kit", e);
}

Test 59: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
// Undeclared exception!
try { 
  parser.parse(" @*b@e+Zb([48%oywd", (String) null, 29);
  fail("Expecting exception: ClassCastException");

} catch(ClassCastException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 60: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
// Undeclared exception!
try { 
  parser.parse("@ [i$", "@ [i$", (-1746));
  fail("Expecting exception: ClassCastException");

} catch(ClassCastException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 61: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Parser parser = new Parser(compilerEnvirons, (ErrorReporter) null);
// Undeclared exception!
try { 
  parser.parse("/Qh{<~x:pdb!y/!bY", "_NMsJvfHh.(", 2613);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 62: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
StringReader stringReader = new StringReader("this");
ContextFactory contextFactory = new ContextFactory();
Context makeContext = contextFactory.makeContext();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)makeContext.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
parser.parse((Reader) stringReader, "[qHC,", 146);
Test 63: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)compilerEnvirons.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
// Undeclared exception!
try { 
  parser.parse(" /= ", "language version", 0);
  fail("Expecting exception: ClassCastException");

} catch(ClassCastException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 64: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
// Undeclared exception!
try { 
  parser.parse("goto", "goto", (-213));
  fail("Expecting exception: ClassCastException");

} catch(ClassCastException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 65: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Parser parser = new Parser(compilerEnvirons, (ErrorReporter) null);
// Undeclared exception!
try { 
  parser.parse("[qC,", "[qC,", (-89));
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 66: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
// Undeclared exception!
try { 
  parser.parse("LNp|[mT=hu{\"s:%,", "LNp|[mT=hu{\"s:%,", 1245);
  fail("Expecting exception: ClassCastException");

} catch(ClassCastException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 67: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)compilerEnvirons.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
// Undeclared exception!
try { 
  parser.parse("J^!{9 ", "J^!{9 ", 893);
  fail("Expecting exception: ClassCastException");

} catch(ClassCastException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 68: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
// Undeclared exception!
try { 
  parser.parse("PAE>rV*b36>*vev", "PAE>rV*b36>*vev", 46);
  fail("Expecting exception: ClassCastException");

} catch(ClassCastException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 69: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Context enter = Context.enter();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)enter.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
// Undeclared exception!
try { 
  parser.parse("+Ag1ozs'D}Vt$]TJs", (String) null, 82);
  fail("Expecting exception: ClassCastException");

} catch(ClassCastException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 70: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
// Undeclared exception!
try { 
  parser.parse("RDxf%C[", "RDxf%C[", (-2646));
  fail("Expecting exception: ClassCastException");

} catch(ClassCastException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 71: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)compilerEnvirons.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
parser.parse("false", "@ LAi$", 1326);
Test 72: 
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser((CompilerEnvirons) null, defaultErrorReporter);
parser.createDecompiler((CompilerEnvirons) null);
Test 73: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
StringReader stringReader = new StringReader("$qM");
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
parser.parse((Reader) stringReader, "language version", 10);
parser.eof();
Test 74: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Context currentContext = Context.getCurrentContext();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)currentContext.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
StringReader stringReader = new StringReader("(new Boolean(false))");
parser.parse((Reader) stringReader, "(new Boolean(false))", 170);
parser.getCurrentLineNumber();
Test 75: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
parser.parse("get", ":H&3o7,iy! ", 0);
parser.getCurrentLineNumber();
Test 76: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)compilerEnvirons.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
parser.insideFunction();
Test 77: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter forEval = (DefaultErrorReporter)DefaultErrorReporter.forEval((ErrorReporter) null);
Parser parser = new Parser(compilerEnvirons, forEval);
StringReader stringReader = new StringReader("");
parser.parse((Reader) stringReader, "msg.try.no.catchfinally", 0);
Test 78: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)compilerEnvirons.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
// Undeclared exception!
try { 
  parser.addError("msg.no.paren.with", "ayuY");
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.mozilla.javascript.Parser", e);
}

Test 79: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)compilerEnvirons.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
StringReader stringReader = new StringReader("Hx+3-d;DiR:ppv");
parser.parse((Reader) stringReader, "Hx+3-d;DiR:ppv", 81);
Test 80: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)compilerEnvirons.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
// Undeclared exception!
try { 
  parser.parse("s?dJ:Nj:T1mgy!_ff", "I0&K", 99);
  fail("Expecting exception: ClassCastException");

} catch(ClassCastException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 81: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
compilerEnvirons.setXmlAvailable(false);
Parser parser = new Parser(compilerEnvirons, (ErrorReporter) null);
StringReader stringReader = new StringReader("msg.destruct.assign.no.init");
parser.parse((Reader) stringReader, "msg.destruct.assign.no.init", 128);
Test 82: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
// Undeclared exception!
try { 
  parser.parse("_NMsJvfHh.(", "_NMsJvfHh.(", (-1368));
  fail("Expecting exception: ClassCastException");

} catch(ClassCastException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 83: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
// Undeclared exception!
try { 
  parser.parse("ZoqtnpI[qf]", "ZoqtnpI[qf]", (-1));
  fail("Expecting exception: IllegalStateException");

} catch(IllegalStateException e) {
   //
   // FAILED ASSERTION
   //
   verifyException("org.mozilla.javascript.Kit", e);
}

Test 84: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Context currentContext = Context.getCurrentContext();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)currentContext.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
// Undeclared exception!
try { 
  parser.addError("error reporter");
  fail("Expecting exception: RuntimeException");

} catch(RuntimeException e) {
   //
   // no message resource found for message property error reporter
   //
   verifyException("org.mozilla.javascript.ScriptRuntime$DefaultMessageProvider", e);
}

Test 85: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
// Undeclared exception!
try { 
  parser.popScope();
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.mozilla.javascript.Parser", e);
}

Test 86: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
// Undeclared exception!
try { 
  parser.reportError("TDp%h2$!V.b");
  fail("Expecting exception: RuntimeException");

} catch(RuntimeException e) {
   //
   // no message resource found for message property TDp%h2$!V.b
   //
   verifyException("org.mozilla.javascript.ScriptRuntime$DefaultMessageProvider", e);
}

Test 87: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Parser parser = new Parser(compilerEnvirons, (ErrorReporter) null);
parser.parse("This is a sample input string", "This is a sample input string", (int) (Integer) null);

Test 88: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Parser parser = new Parser(compilerEnvirons, (ErrorReporter) null);
parser.getEncodedSource();

Test 89: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Parser parser = new Parser(compilerEnvirons, (ErrorReporter) null);
parser.parse("while loop", "while", 722);

Test 90: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
parser.parse("This is a sample input for testing the parse method with an integer value.", (String) 4567, (int) (Integer) null);

Test 91: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)compilerEnvirons.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
StringReader stringReader = new StringReader("This is a sample input string.");
parser.parse((Reader) stringReader, "This is a sample input string.", 52);

Test 92: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
parser.addStrictWarning("filename1.js", "A message");

Test 93: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)compilerEnvirons.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
parser.addWarning("msg.syntax", "Invalid syntax detected");

Test 94: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
parser.parse("This is a test string", "This is another test string", 1000);

Test 95: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
compilerEnvirons.setXmlAvailable(false);
Parser parser = new Parser(compilerEnvirons, (ErrorReporter) null);
((Parser)null).parse("A_NMsJvfHh.(", "A_NMsJvfHh.(", 4617);

Test 96: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Parser parser = new Parser(compilerEnvirons, (ErrorReporter) null);
ScriptOrFnNode parse = parser.parse("msg.no.brace.catchblock", "J^(\"2<\"", 21);
parser.pushScope(parse);
parser.pushScope(parse);

Test 97: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
parser.parse("function", "function", 32);

Test 98: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Context currentContext = Context.getCurrentContext();
compilerEnvirons.initFromContext(currentContext);
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
parser.parse("This is a test string", "This is a test string", 145);

Test 99: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
parser.parse("hello world", "TypUEro: ", (int) (Integer) null);

Test 100: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
parser.parse("1024D\"CFDjGM:Hh_zD1*D", "1024D\"CFDjGM:Hh_zD1*D", 1024);

Test 101: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
parser.parse("break", "break", 46);
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
String string = "continue";
String string = "continue";
int _int = 46;
parser.parse(string, string, _int);

Test 102: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Parser parser = new Parser(compilerEnvirons, (ErrorReporter) null);
parser.parse("int x = 10; int y = 20; return x + y;", "return", 51);
String string = "int x = 10; return x;";
String string = "return";
int _int = 10;
parser.parse(string, string, _int);

Test 103: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)compilerEnvirons.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
parser.parse("throw", "throw", 1234567890);

Test 104: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
StringReader stringReader = new StringReader("try { // Example code with an error }");
DefaultErrorReporter errorReporter = (DefaultErrorReporter)compilerEnvirons.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
((Parser) errorReporter).parse((Reader) stringReader, "errorOffset", (int) (Integer) null);

Test 105: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);

Test 106: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter forEval = (DefaultErrorReporter)DefaultErrorReporter.forEval((ErrorReporter) null);
Parser parser = new Parser(compilerEnvirons, forEval);
((Parser) forEval).parse("switch", "string_to_be_parsed", 32);

Test 107: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);

Test 108: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);

Test 109: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)compilerEnvirons.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
StringReader stringReader = new StringReader("var myVariable: Int = 10");
parser.parse((Reader) stringReader, "msg.bad.var", 310);

Test 110: 
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
parser.parse("with", "with", 1234567890);

Test 111: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Parser parser = new Parser(compilerEnvirons, (ErrorReporter) null);
parser.parse("const", "<QQnrsx6G0-MXbf", 159);

Test 112: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);

Test 113: 
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
parser.parse("KGP:V6:rV", "KGP:V6:rV", 24);

Test 114: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Parser parser = new Parser(compilerEnvirons, (ErrorReporter) null);
parser.parse("am;pm;monday;tuesday;wednesday;thursday;friday;saturday;sunday;january;february;march;april;may;june;july;august;september;october;november;december;gmt;utc;est;edt;cst;cdt;mst;mdt;pst;pdt;", "morning;afternoon;monday;tuesday;wednesday;thursday;friday;saturday;sunday;january;february;march;april;may;june;july;august;september;october;november;december;gmt;utc;east coast standard time;eastern daylight time;central standard time;central daylight time;mountain standard time;mountain daylight time;pacific standard time;pacific daylight time", (int) (Integer) null);

Test 115: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
parser.parse("class MyClass { public static void main(String[] args) { System.out.println(\"Hello World\"); } }", "MyClass.java", 103);

Test 116: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
StringReader stringReader = new StringReader("ayuY");
parser.parse((Reader) stringReader, "if ", 152);
parser.defineSymbol(152, false, "ayuY");

Test 117: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
StringReader stringReader = new StringReader("The quick brown fox jumps over the lazy dog.");
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
((Parser) stringReader).parse((Reader) stringReader, "The quick brown fox jumps over the lazy dog.", 160);
int _int = 86;
boolean _boolean = false;
String string = "E+t";
((Parser) stringReader).defineSymbol(_int, _boolean, string);
int _int = 1;
boolean _boolean = false;
String string = "E+t";
((Parser) stringReader).defineSymbol(_int, _boolean, string);

Test 118: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
StringReader stringReader = new StringReader("F&M");
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
((Parser) stringReader).parse((Reader) stringReader, "language version", 10);
int _int = 108;
boolean _boolean = false;
String string = "error reporter";
((Parser) stringReader).defineSymbol(_int, _boolean, string);

Test 119: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
StringReader stringReader = new StringReader("Arial");
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
((Parser) stringReader).parse((Reader) stringReader, "fontfamily", 50);
int _int = 153;
boolean _boolean = false;
String string = "language version";
((Parser) stringReader).defineSymbol(_int, _boolean, string);

Test 120: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
StringReader stringReader = new StringReader("This is a sample input string");
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
((Parser) stringReader).parse((Reader) stringReader, "S1a/,G/{>,\"{rmtJ=", 121);
int _int = 152;
boolean _boolean = true;
String string = "This is a sample symbol definition";
((Parser) stringReader).defineSymbol(_int, _boolean, string);

Test 121: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
parser.parse("ZMF3_^Px,Z<LRi~", "ZMF3_^Px,Z<LRi~", 126);

Test 122: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);

Test 123: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
parser.parse("v||,rf ct", "U4tc&S(2Py)J\u0001re", 20);

Test 124: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
StringReader stringReader = new StringReader("F&&M");
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
((Parser) stringReader).parse((Reader) stringReader, "language version", 12);

Test 125: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Parser parser = new Parser(compilerEnvirons, (ErrorReporter) null);
parser.parse("F|[$je#N]&r=lK", "F|[$je#N]&r=lK", (int) (Integer) null);
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Parser parser = new Parser(compilerEnvirons, (ErrorReporter) null);
String string = "F|[$je#N]&r=lK";
String string = "F|[$je#N]&r=lK";
int _int = null;
parser.parse(string, string, _int);
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Parser parser = new Parser(compilerEnvirons, (ErrorReporter) null);
String string = "F|[$je#N]&r=lK";
String string = "F|[$je#N]&r=lK";
int _int = null;
parser.parse(string, string, _int);
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Parser parser = new Parser(compilerEnvirons, (ErrorReporter) null);
String string = "F|[$je#N]&r=lK";
String string = "F|[$je#N]&r=lK";
int _int = null;
parser.parse(string, string, _int);

Test 126: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
parser.parse("factory is not set", "factory is an instance of the Factory class", 65);

Test 127: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);

Test 128: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Parser parser = new Parser(compilerEnvirons, (ErrorReporter) null);
parser.parse("gv18Yz>=", "gv18Yz>=", (int) (Integer) null);

Test 129: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
parser.parse("Z<<ED O4hRufFz@G", "Z<<ED O4hRufFz@G", (int) (Integer) null);

Test 130: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Parser parser = new Parser(compilerEnvirons, (ErrorReporter) null);

Test 131: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Parser parser = new Parser(compilerEnvirons, (ErrorReporter) null);

Test 132: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Parser parser = new Parser(compilerEnvirons, (ErrorReporter) null);
parser.parse("sin(x) * 2 + cos(y)", "x_123", 5);

Test 133: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
parser.parse("-IxXy5O+!>", "-IxXy5O+!>", 122);

Test 134: 
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
parser.parse("6+~ .4`d", "6+~ .4`d", (int) (Integer) null);

Test 135: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
parser.parse("delete myFile", "delete myFile", 200);

Test 136: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
parser.parse("--", "?", 85);

Test 137: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Parser parser = new Parser(compilerEnvirons, (ErrorReporter) null);
parser.parse("2 + 2", "XP:iUxw*Y>Rp7", 1036);

Test 138: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
compilerEnvirons.setXmlAvailable(false);
Parser parser = new Parser(compilerEnvirons, (ErrorReporter) null);
((Parser)null).parse("\"<><7T4#FGD3mCwE=\"", "msg.destruct.assign.no.init", (int) (Integer) null);

Test 139: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
parser.parse("http://www.example.com/path/to/resource", "http://www.example.com/path/to/resource", 404);

Test 140: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
ContextFactory global = ContextFactory.getGlobal();
Context context = new Context(global);
DefaultErrorReporter errorReporter = (DefaultErrorReporter)context.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
StringReader stringReader = new StringReader("<html><body>This is a test string.</body></html>");
parser.parse((Reader) stringReader, "language version", 12);

Test 141: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
parser.parse("z:U()S", "set", 947);

Test 142: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);

Test 143: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
parser.parse("123 Main St.", "123 Main St.", 2087);
String string = "John Doe";
String string = "John Doe";
int _int = 2087;
parser.parse(string, string, _int);
String string = "O[yE8.@:XCV^4\"";
String string = "O[yE8.@:XCV^4\"";
int _int = 2087;
parser.parse(string, string, _int);
String string = "123 Main St.";
String string = "123 Main St.";
int _int = 2087;
parser.parse(string, string, _int);
String string = "John Doe";
String string = "John Doe";
int _int = 2087;
parser.parse(string, string, _int);
String string = "O[yE8.@:XCV^4\"";
String string = "O[yE8.@:XCV^4\"";
int _int = 2087;
parser.parse(string, string, _int);

Test 144: 
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
parser.parse("c()", "msg.no.paren.for.ctrl", 39);

Test 145: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
parser.parse("msg.bad.throw.eol", "msg.bad.throw.eol", (int) (Integer) null);

Test 146: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
parser.parse("This is a sample string to be parsed.", (String) 29, (int) (Integer) null);

Test 147: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
parser.parse("@ [i$", "@ [i$", (int) (Integer) null);

Test 148: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Parser parser = new Parser(compilerEnvirons, (ErrorReporter) null);

Test 149: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
StringReader stringReader = new StringReader("a sample input");
ContextFactory contextFactory = new ContextFactory();
((ContextFactory) stringReader).makeContext();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)((Context) contextFactory).getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
String string = "a sample input";
int _int = 250;
((Parser) errorReporter).parse((Reader) stringReader, string, _int);

Test 150: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)compilerEnvirons.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
parser.parse(" /= ", "language version 1.0", 0);

Test 151: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
parser.parse("goto my_file.java", "my_file.java", (int) false);

Test 152: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Parser parser = new Parser(compilerEnvirons, (ErrorReporter) null);
parser.parse("[qC,", "[qC,", (int) (Integer) null);

Test 153: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);

Test 154: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)compilerEnvirons.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);

Test 155: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
parser.parse("ABCDEFGHIJKLMNOPQRSTUVWXYZ", "This is a test message.", 100);

Test 156: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Context enter = Context.enter();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)enter.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
parser.parse("var x = 123;", (String) 82, (int) (Integer) null);

Test 157: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
parser.parse("RDxf%C[", "RDxf%C[", 2646);

Test 158: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)compilerEnvirons.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
parser.parse("true", "@ LAi$", 1326);

Test 159: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
StringReader stringReader = new StringReader("$qM");
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
((Parser) stringReader).parse((Reader) stringReader, "language version", 10);
((Parser) stringReader).eof();

Test 160: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Context currentContext = Context.getCurrentContext();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)currentContext.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
StringReader stringReader = new StringReader("(new Boolean(false))");
parser.parse((Reader) stringReader, "(new Boolean(false))", 170);
parser.getCurrentLineNumber();
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Context.getCurrentContext();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)currentContext.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
StringReader stringReader = new StringReader("(new Boolean(true))");
parser.parse((Reader) stringReader, "(new Boolean(true))", 170);
parser.getCurrentLineNumber();

Test 161: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
parser.parse("get", ":H&3o7,iy! ", 0);
parser.getCurrentLineNumber();

Test 162: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter forEval = (DefaultErrorReporter)DefaultErrorReporter.forEval((ErrorReporter) null);
Parser parser = new Parser(compilerEnvirons, forEval);
StringReader stringReader = new StringReader("try { // code } finally { // cleanup }");
((Parser) forEval).parse((Reader) stringReader, "message.try.no.catchfinally", 0);

Test 163: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)compilerEnvirons.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
parser.addError("msg.no.paren.with", "Ayushya");

Test 164: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)compilerEnvirons.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
StringReader stringReader = new StringReader("2 + 3 - 4 * (5 - 6)");
parser.parse((Reader) stringReader, "2 + 3 - 4 * (5 - 6)", 75);

Test 165: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)compilerEnvirons.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
parser.parse("s?dJ:Nj:T1mgy!_ff", "I0&K", 99);

Test 166: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
compilerEnvirons.setXmlAvailable(false);
Parser parser = new Parser(compilerEnvirons, (ErrorReporter) null);
StringReader stringReader = new StringReader("The message 'msg.destruct.assign.no.init' was not initialized before destruction.");
((Parser)null).parse((Reader) stringReader, "msg.destruct.assign.no.init", 128);

Test 167: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
parser.parse("_NMsJvfHh.(", "_NMsJvfHh.(", 50);

Test 168: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
parser.parse("ZoqtnpI[qf]", "ZoqtnpI[qf]", (int) (Integer) null);
String string = "class Test { public static void main(String[] args) { System.out.println(\"Hello, world!\"); } }";
String string = "Test.java";
int _int = null;
parser.parse(string, string, _int);

Test 169: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Context currentContext = Context.getCurrentContext();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)currentContext.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
parser.addError("Syntax Error: Unexpected token 'error reporter'");

Test 170: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
parser.popScope();

Test 171: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
parser.reportError("TDp%h2$!V.b");


* Generated after the refinement and before minimization 172 tests with total length 794
* test suite isTestSuite: 172
Test 0: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Parser parser = new Parser(compilerEnvirons, (ErrorReporter) null);
// Undeclared exception!
try { 
  parser.parse(";@Rv Iu<K&~e5Tcc?T", ";@Rv Iu<K&~e5Tcc?T", (-1765));
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 1: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Parser parser = new Parser(compilerEnvirons, (ErrorReporter) null);
parser.getEncodedSource();
Test 2: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Parser parser = new Parser(compilerEnvirons, (ErrorReporter) null);
// Undeclared exception!
try { 
  parser.parse("while", "while", 722);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 3: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
// Undeclared exception!
try { 
  parser.parse("DN^!{m*Wu", (String) null, 1223);
  fail("Expecting exception: ClassCastException");

} catch(ClassCastException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 4: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)compilerEnvirons.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
StringReader stringReader = new StringReader("''lj/vX?gWo");
// Undeclared exception!
try { 
  parser.parse((Reader) stringReader, "''lj/vX?gWo", 52);
  fail("Expecting exception: ClassCastException");

} catch(ClassCastException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 5: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
parser.addStrictWarning("error reporter", "error reporter");
Test 6: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)compilerEnvirons.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
// Undeclared exception!
try { 
  parser.addWarning("msg.syntax", "msg.syntax");
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.mozilla.javascript.Parser", e);
}

Test 7: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
parser.parse("u\n", "u\n", 1677);
Test 8: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
compilerEnvirons.setXmlAvailable(false);
Parser parser = new Parser(compilerEnvirons, (ErrorReporter) null);
// Undeclared exception!
try { 
  parser.parse("_NMsJvfHh.(", "_NMsJvfHh.(", 4617);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 9: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Parser parser = new Parser(compilerEnvirons, (ErrorReporter) null);
ScriptOrFnNode parse = parser.parse("msg.no.brace.catchblock", "J^(2<", 21);
parser.pushScope(parse);
// Undeclared exception!
try { 
  parser.pushScope(parse);
  fail("Expecting exception: IllegalStateException");

} catch(IllegalStateException e) {
   //
   // FAILED ASSERTION
   //
   verifyException("org.mozilla.javascript.Kit", e);
}

Test 10: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
// Undeclared exception!
try { 
  parser.parse("function", "function", 32);
  fail("Expecting exception: ClassCastException");

} catch(ClassCastException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 11: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Context currentContext = Context.getCurrentContext();
compilerEnvirons.initFromContext(currentContext);
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
parser.parse("\n", "\n", 145);
Test 12: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
// Undeclared exception!
try { 
  parser.parse("{sjUaI", "TypUEro: ", (-667));
  fail("Expecting exception: ClassCastException");

} catch(ClassCastException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 13: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
// Undeclared exception!
try { 
  parser.parse("{}D\"CFDjGM:Hh_zD1*D", "{}D\"CFDjGM:Hh_zD1*D", 46);
  fail("Expecting exception: ClassCastException");

} catch(ClassCastException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 14: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
// Undeclared exception!
try { 
  parser.parse("break", "break", 46);
  fail("Expecting exception: ClassCastException");

} catch(ClassCastException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 15: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Parser parser = new Parser(compilerEnvirons, (ErrorReporter) null);
// Undeclared exception!
try { 
  parser.parse("return", "return", 101);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 16: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)compilerEnvirons.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
// Undeclared exception!
try { 
  parser.parse("throw ", "throw ", 3420);
  fail("Expecting exception: ClassCastException");

} catch(ClassCastException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 17: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
StringReader stringReader = new StringReader("try ");
DefaultErrorReporter errorReporter = (DefaultErrorReporter)compilerEnvirons.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
// Undeclared exception!
try { 
  parser.parse((Reader) stringReader, (String) null, (-443));
  fail("Expecting exception: ClassCastException");

} catch(ClassCastException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 18: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
// Undeclared exception!
try { 
  parser.parse("if ", "if ", 152);
  fail("Expecting exception: ClassCastException");

} catch(ClassCastException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 19: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter forEval = (DefaultErrorReporter)DefaultErrorReporter.forEval((ErrorReporter) null);
Parser parser = new Parser(compilerEnvirons, forEval);
// Undeclared exception!
try { 
  parser.parse("switch", "_NMsJvfHh.(", 32);
  fail("Expecting exception: ClassCastException");

} catch(ClassCastException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 20: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
// Undeclared exception!
try { 
  parser.parse("default", "IJ3aritOhZ2{7;9}`6", 157);
  fail("Expecting exception: ClassCastException");

} catch(ClassCastException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 21: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
// Undeclared exception!
try { 
  parser.parse("for ", " ee38HK-Q|U", 1424);
  fail("Expecting exception: ClassCastException");

} catch(ClassCastException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 22: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)compilerEnvirons.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
StringReader stringReader = new StringReader("var ");
// Undeclared exception!
try { 
  parser.parse((Reader) stringReader, "msg.bad.var", 310);
  fail("Expecting exception: ClassCastException");

} catch(ClassCastException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 23: 
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
// Undeclared exception!
try { 
  parser.parse("with", "with", (-3800));
  fail("Expecting exception: ClassCastException");

} catch(ClassCastException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 24: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Parser parser = new Parser(compilerEnvirons, (ErrorReporter) null);
// Undeclared exception!
try { 
  parser.parse("const", "<QQnrsx6G0-MXbf", 159);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 25: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
// Undeclared exception!
try { 
  parser.parse("aa:{8+xqCIAm`dF!#", "aa:{8+xqCIAm`dF!#", (-1746));
  fail("Expecting exception: ClassCastException");

} catch(ClassCastException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 26: 
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
parser.parse("KGP:V6:rV", "KGP:V6:rV", 24);
Test 27: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Parser parser = new Parser(compilerEnvirons, (ErrorReporter) null);
// Undeclared exception!
try { 
  parser.parse("am;pm;monday;tuesday;wednesday;thursday;friday;saturday;sunday;january;february;march;april;may;june;july;august;september;october;november;december;gmt;ut;utc;est;edt;cst;cdt;mst;mdt;pst;pdt;", "am;pm;monday;tuesday;wednesday;thursday;friday;saturday;sunday;january;february;march;april;may;june;july;august;september;october;november;december;gmt;ut;utc;est;edt;cst;cdt;mst;mdt;pst;pdt;", (-1168));
  fail("Expecting exception: IllegalStateException");

} catch(IllegalStateException e) {
   //
   // FAILED ASSERTION
   //
   verifyException("org.mozilla.javascript.Kit", e);
}

Test 28: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
// Undeclared exception!
try { 
  parser.parse("zE}ysL#&{i<>+m", "zE}ysL#&{i<>+m", 103);
  fail("Expecting exception: ClassCastException");

} catch(ClassCastException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 29: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
StringReader stringReader = new StringReader("ayuY");
parser.parse((Reader) stringReader, "if ", 152);
parser.defineSymbol(152, false, "ayuY");
Test 30: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
StringReader stringReader = new StringReader("hor");
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
parser.parse((Reader) stringReader, "hor", 160);
parser.defineSymbol(86, false, "E+t");
// Undeclared exception!
try { 
  parser.defineSymbol(1, false, "E+t");
  fail("Expecting exception: IllegalStateException");

} catch(IllegalStateException e) {
   //
   // FAILED ASSERTION
   //
   verifyException("org.mozilla.javascript.Kit", e);
}

Test 31: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
StringReader stringReader = new StringReader("F&M");
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
parser.parse((Reader) stringReader, "language version", 10);
parser.defineSymbol(108, false, "error reporter");
Test 32: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
StringReader stringReader = new StringReader("F&M");
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
parser.parse((Reader) stringReader, "fontcolor", 50);
parser.defineSymbol(153, false, "language version");
Test 33: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
StringReader stringReader = new StringReader("taK");
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
parser.parse((Reader) stringReader, "S1a/,G/{>,\"{rmtJ=", 121);
parser.defineSymbol(152, true, "ayuY");
Test 34: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
// Undeclared exception!
try { 
  parser.parse("ZMF3_^Px,Z<LRi~", "ZMF3_^Px,Z<LRi~", 126);
  fail("Expecting exception: ClassCastException");

} catch(ClassCastException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 35: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
// Undeclared exception!
try { 
  parser.parse("l?[]y", ">`\r<0'(x.;/*B;", (-1216));
  fail("Expecting exception: ClassCastException");

} catch(ClassCastException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 36: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
// Undeclared exception!
try { 
  parser.parse("v||,rf ct", "U4tc&S(2Py)J\u0001re", 20);
  fail("Expecting exception: ClassCastException");

} catch(ClassCastException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 37: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
StringReader stringReader = new StringReader("F&&M");
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
parser.parse((Reader) stringReader, "language version", 12);
Test 38: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Parser parser = new Parser(compilerEnvirons, (ErrorReporter) null);
// Undeclared exception!
try { 
  parser.parse("F|[$je#N]&r=lK", "F|[$je#N]&r=lK", (-195));
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 39: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
parser.parse("factory == null", "factory == null", 65);
Test 40: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
// Undeclared exception!
try { 
  parser.parse("Bfa<=6!r4TUT{{8", "'YGfpGJikZy", (-791));
  fail("Expecting exception: ClassCastException");

} catch(ClassCastException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 41: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Parser parser = new Parser(compilerEnvirons, (ErrorReporter) null);
// Undeclared exception!
try { 
  parser.parse("gv18Yz>=", "gv18Yz>=", (-5428));
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 42: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
// Undeclared exception!
try { 
  parser.parse("Z<<ED O4hRufFz@G", "Z<<ED O4hRufFz@G", (-1));
  fail("Expecting exception: ClassCastException");

} catch(ClassCastException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 43: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Parser parser = new Parser(compilerEnvirons, (ErrorReporter) null);
// Undeclared exception!
try { 
  parser.parse("R-{", "R-{", 104);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 44: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Parser parser = new Parser(compilerEnvirons, (ErrorReporter) null);
// Undeclared exception!
try { 
  parser.parse("a/{}]u/c,!vtJqY;P/S", "$qM", 85);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 45: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Parser parser = new Parser(compilerEnvirons, (ErrorReporter) null);
// Undeclared exception!
try { 
  parser.parse("0%E&++", "K#_@+%8y", 4758);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 46: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
// Undeclared exception!
try { 
  parser.parse("-IxXy5O+!>", "-IxXy5O+!>", 122);
  fail("Expecting exception: ClassCastException");

} catch(ClassCastException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 47: 
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
// Undeclared exception!
try { 
  parser.parse("6+~ .4`d", "6+~ .4`d", (-1468));
  fail("Expecting exception: ClassCastException");

} catch(ClassCastException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 48: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
// Undeclared exception!
try { 
  parser.parse("delete ", "delete ", 404);
  fail("Expecting exception: ClassCastException");

} catch(ClassCastException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 49: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
// Undeclared exception!
try { 
  parser.parse("--", "?", 85);
  fail("Expecting exception: ClassCastException");

} catch(ClassCastException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 50: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Parser parser = new Parser(compilerEnvirons, (ErrorReporter) null);
// Undeclared exception!
try { 
  parser.parse("void ", "XP:iUxw*Y>Rp7", 1036);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 51: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
compilerEnvirons.setXmlAvailable(false);
Parser parser = new Parser(compilerEnvirons, (ErrorReporter) null);
// Undeclared exception!
try { 
  parser.parse("<><7T4#FGD3mCwE=", "msg.destruct.assign.no.init", (-64));
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 52: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
// Undeclared exception!
try { 
  parser.parse("FXl8R9--jenv[;09", "FXl8R9--jenv[;09", 404);
  fail("Expecting exception: ClassCastException");

} catch(ClassCastException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 53: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
ContextFactory global = ContextFactory.getGlobal();
Context context = new Context(global);
DefaultErrorReporter errorReporter = (DefaultErrorReporter)context.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
StringReader stringReader = new StringReader("<7T4#FGD3mCwE={fU");
// Undeclared exception!
try { 
  parser.parse((Reader) stringReader, "language version", 12);
  fail("Expecting exception: ClassCastException");

} catch(ClassCastException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 54: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
// Undeclared exception!
try { 
  parser.parse("z:U()S", "set", 947);
  fail("Expecting exception: ClassCastException");

} catch(ClassCastException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 55: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
// Undeclared exception!
try { 
  parser.parse("nYf(3, ;aQ9*3Aqe{m", "nYf(3, ;aQ9*3Aqe{m", 120);
  fail("Expecting exception: ClassCastException");

} catch(ClassCastException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 56: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
// Undeclared exception!
try { 
  parser.parse("O[yE8.@:XCV^4\"", "O[yE8.@:XCV^4\"", 2087);
  fail("Expecting exception: ClassCastException");

} catch(ClassCastException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 57: 
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
// Undeclared exception!
try { 
  parser.parse("c..", "msg.no.paren.for.ctrl", 39);
  fail("Expecting exception: ClassCastException");

} catch(ClassCastException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 58: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
// Undeclared exception!
try { 
  parser.parse("msg.bad.throw.eol", "msg.bad.throw.eol", (-478));
  fail("Expecting exception: IllegalStateException");

} catch(IllegalStateException e) {
   //
   // FAILED ASSERTION
   //
   verifyException("org.mozilla.javascript.Kit", e);
}

Test 59: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
// Undeclared exception!
try { 
  parser.parse(" @*b@e+Zb([48%oywd", (String) null, 29);
  fail("Expecting exception: ClassCastException");

} catch(ClassCastException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 60: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
// Undeclared exception!
try { 
  parser.parse("@ [i$", "@ [i$", (-1746));
  fail("Expecting exception: ClassCastException");

} catch(ClassCastException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 61: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Parser parser = new Parser(compilerEnvirons, (ErrorReporter) null);
// Undeclared exception!
try { 
  parser.parse("/Qh{<~x:pdb!y/!bY", "_NMsJvfHh.(", 2613);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 62: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
StringReader stringReader = new StringReader("this");
ContextFactory contextFactory = new ContextFactory();
Context makeContext = contextFactory.makeContext();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)makeContext.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
parser.parse((Reader) stringReader, "[qHC,", 146);
Test 63: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)compilerEnvirons.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
// Undeclared exception!
try { 
  parser.parse(" /= ", "language version", 0);
  fail("Expecting exception: ClassCastException");

} catch(ClassCastException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 64: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
// Undeclared exception!
try { 
  parser.parse("goto", "goto", (-213));
  fail("Expecting exception: ClassCastException");

} catch(ClassCastException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 65: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Parser parser = new Parser(compilerEnvirons, (ErrorReporter) null);
// Undeclared exception!
try { 
  parser.parse("[qC,", "[qC,", (-89));
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 66: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
// Undeclared exception!
try { 
  parser.parse("LNp|[mT=hu{\"s:%,", "LNp|[mT=hu{\"s:%,", 1245);
  fail("Expecting exception: ClassCastException");

} catch(ClassCastException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 67: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)compilerEnvirons.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
// Undeclared exception!
try { 
  parser.parse("J^!{9 ", "J^!{9 ", 893);
  fail("Expecting exception: ClassCastException");

} catch(ClassCastException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 68: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
// Undeclared exception!
try { 
  parser.parse("PAE>rV*b36>*vev", "PAE>rV*b36>*vev", 46);
  fail("Expecting exception: ClassCastException");

} catch(ClassCastException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 69: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Context enter = Context.enter();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)enter.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
// Undeclared exception!
try { 
  parser.parse("+Ag1ozs'D}Vt$]TJs", (String) null, 82);
  fail("Expecting exception: ClassCastException");

} catch(ClassCastException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 70: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
// Undeclared exception!
try { 
  parser.parse("RDxf%C[", "RDxf%C[", (-2646));
  fail("Expecting exception: ClassCastException");

} catch(ClassCastException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 71: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)compilerEnvirons.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
parser.parse("false", "@ LAi$", 1326);
Test 72: 
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser((CompilerEnvirons) null, defaultErrorReporter);
parser.createDecompiler((CompilerEnvirons) null);
Test 73: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
StringReader stringReader = new StringReader("$qM");
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
parser.parse((Reader) stringReader, "language version", 10);
parser.eof();
Test 74: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Context currentContext = Context.getCurrentContext();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)currentContext.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
StringReader stringReader = new StringReader("(new Boolean(false))");
parser.parse((Reader) stringReader, "(new Boolean(false))", 170);
parser.getCurrentLineNumber();
Test 75: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
parser.parse("get", ":H&3o7,iy! ", 0);
parser.getCurrentLineNumber();
Test 76: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)compilerEnvirons.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
parser.insideFunction();
Test 77: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter forEval = (DefaultErrorReporter)DefaultErrorReporter.forEval((ErrorReporter) null);
Parser parser = new Parser(compilerEnvirons, forEval);
StringReader stringReader = new StringReader("");
parser.parse((Reader) stringReader, "msg.try.no.catchfinally", 0);
Test 78: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)compilerEnvirons.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
// Undeclared exception!
try { 
  parser.addError("msg.no.paren.with", "ayuY");
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.mozilla.javascript.Parser", e);
}

Test 79: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)compilerEnvirons.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
StringReader stringReader = new StringReader("Hx+3-d;DiR:ppv");
parser.parse((Reader) stringReader, "Hx+3-d;DiR:ppv", 81);
Test 80: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)compilerEnvirons.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
// Undeclared exception!
try { 
  parser.parse("s?dJ:Nj:T1mgy!_ff", "I0&K", 99);
  fail("Expecting exception: ClassCastException");

} catch(ClassCastException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 81: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
compilerEnvirons.setXmlAvailable(false);
Parser parser = new Parser(compilerEnvirons, (ErrorReporter) null);
StringReader stringReader = new StringReader("msg.destruct.assign.no.init");
parser.parse((Reader) stringReader, "msg.destruct.assign.no.init", 128);
Test 82: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
// Undeclared exception!
try { 
  parser.parse("_NMsJvfHh.(", "_NMsJvfHh.(", (-1368));
  fail("Expecting exception: ClassCastException");

} catch(ClassCastException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 83: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
// Undeclared exception!
try { 
  parser.parse("ZoqtnpI[qf]", "ZoqtnpI[qf]", (-1));
  fail("Expecting exception: IllegalStateException");

} catch(IllegalStateException e) {
   //
   // FAILED ASSERTION
   //
   verifyException("org.mozilla.javascript.Kit", e);
}

Test 84: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Context currentContext = Context.getCurrentContext();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)currentContext.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
// Undeclared exception!
try { 
  parser.addError("error reporter");
  fail("Expecting exception: RuntimeException");

} catch(RuntimeException e) {
   //
   // no message resource found for message property error reporter
   //
   verifyException("org.mozilla.javascript.ScriptRuntime$DefaultMessageProvider", e);
}

Test 85: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
// Undeclared exception!
try { 
  parser.popScope();
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.mozilla.javascript.Parser", e);
}

Test 86: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
// Undeclared exception!
try { 
  parser.reportError("TDp%h2$!V.b");
  fail("Expecting exception: RuntimeException");

} catch(RuntimeException e) {
   //
   // no message resource found for message property TDp%h2$!V.b
   //
   verifyException("org.mozilla.javascript.ScriptRuntime$DefaultMessageProvider", e);
}

Test 87: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Parser parser = new Parser(compilerEnvirons, (ErrorReporter) null);
parser.parse("This is a sample input string", "This is a sample input string", (int) (Integer) null);

Test 88: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Parser parser = new Parser(compilerEnvirons, (ErrorReporter) null);
parser.getEncodedSource();

Test 89: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Parser parser = new Parser(compilerEnvirons, (ErrorReporter) null);
parser.parse("while loop", "while", 722);

Test 90: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
parser.parse("This is a sample input for testing the parse method with an integer value.", (String) 4567, (int) (Integer) null);

Test 91: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)compilerEnvirons.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
StringReader stringReader = new StringReader("This is a sample input string.");
parser.parse((Reader) stringReader, "This is a sample input string.", 52);

Test 92: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
parser.addStrictWarning("filename1.js", "A message");

Test 93: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)compilerEnvirons.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
parser.addWarning("msg.syntax", "Invalid syntax detected");

Test 94: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
parser.parse("This is a test string", "This is another test string", 1000);

Test 95: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
compilerEnvirons.setXmlAvailable(false);
Parser parser = new Parser(compilerEnvirons, (ErrorReporter) null);
((Parser)null).parse("A_NMsJvfHh.(", "A_NMsJvfHh.(", 4617);

Test 96: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Parser parser = new Parser(compilerEnvirons, (ErrorReporter) null);
ScriptOrFnNode parse = parser.parse("msg.no.brace.catchblock", "J^(\"2<\"", 21);
parser.pushScope(parse);
parser.pushScope(parse);

Test 97: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
parser.parse("function", "function", 32);

Test 98: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Context currentContext = Context.getCurrentContext();
compilerEnvirons.initFromContext(currentContext);
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
parser.parse("This is a test string", "This is a test string", 145);

Test 99: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
parser.parse("hello world", "TypUEro: ", (int) (Integer) null);

Test 100: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
parser.parse("1024D\"CFDjGM:Hh_zD1*D", "1024D\"CFDjGM:Hh_zD1*D", 1024);

Test 101: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
parser.parse("break", "break", 46);
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
String string = "continue";
String string = "continue";
int _int = 46;
parser.parse(string, string, _int);

Test 102: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Parser parser = new Parser(compilerEnvirons, (ErrorReporter) null);
parser.parse("int x = 10; int y = 20; return x + y;", "return", 51);
String string = "int x = 10; return x;";
String string = "return";
int _int = 10;
parser.parse(string, string, _int);

Test 103: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)compilerEnvirons.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
parser.parse("throw", "throw", 1234567890);

Test 104: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
StringReader stringReader = new StringReader("try { // Example code with an error }");
DefaultErrorReporter errorReporter = (DefaultErrorReporter)compilerEnvirons.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
((Parser) errorReporter).parse((Reader) stringReader, "errorOffset", (int) (Integer) null);

Test 105: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);

Test 106: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter forEval = (DefaultErrorReporter)DefaultErrorReporter.forEval((ErrorReporter) null);
Parser parser = new Parser(compilerEnvirons, forEval);
((Parser) forEval).parse("switch", "string_to_be_parsed", 32);

Test 107: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);

Test 108: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);

Test 109: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)compilerEnvirons.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
StringReader stringReader = new StringReader("var myVariable: Int = 10");
parser.parse((Reader) stringReader, "msg.bad.var", 310);

Test 110: 
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
parser.parse("with", "with", 1234567890);

Test 111: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Parser parser = new Parser(compilerEnvirons, (ErrorReporter) null);
parser.parse("const", "<QQnrsx6G0-MXbf", 159);

Test 112: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);

Test 113: 
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
parser.parse("KGP:V6:rV", "KGP:V6:rV", 24);

Test 114: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Parser parser = new Parser(compilerEnvirons, (ErrorReporter) null);
parser.parse("am;pm;monday;tuesday;wednesday;thursday;friday;saturday;sunday;january;february;march;april;may;june;july;august;september;october;november;december;gmt;utc;est;edt;cst;cdt;mst;mdt;pst;pdt;", "morning;afternoon;monday;tuesday;wednesday;thursday;friday;saturday;sunday;january;february;march;april;may;june;july;august;september;october;november;december;gmt;utc;east coast standard time;eastern daylight time;central standard time;central daylight time;mountain standard time;mountain daylight time;pacific standard time;pacific daylight time", (int) (Integer) null);

Test 115: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
parser.parse("class MyClass { public static void main(String[] args) { System.out.println(\"Hello World\"); } }", "MyClass.java", 103);

Test 116: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
StringReader stringReader = new StringReader("ayuY");
parser.parse((Reader) stringReader, "if ", 152);
parser.defineSymbol(152, false, "ayuY");

Test 117: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
StringReader stringReader = new StringReader("The quick brown fox jumps over the lazy dog.");
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
((Parser) stringReader).parse((Reader) stringReader, "The quick brown fox jumps over the lazy dog.", 160);
int _int = 86;
boolean _boolean = false;
String string = "E+t";
((Parser) stringReader).defineSymbol(_int, _boolean, string);
int _int = 1;
boolean _boolean = false;
String string = "E+t";
((Parser) stringReader).defineSymbol(_int, _boolean, string);

Test 118: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
StringReader stringReader = new StringReader("F&M");
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
((Parser) stringReader).parse((Reader) stringReader, "language version", 10);
int _int = 108;
boolean _boolean = false;
String string = "error reporter";
((Parser) stringReader).defineSymbol(_int, _boolean, string);

Test 119: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
StringReader stringReader = new StringReader("Arial");
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
((Parser) stringReader).parse((Reader) stringReader, "fontfamily", 50);
int _int = 153;
boolean _boolean = false;
String string = "language version";
((Parser) stringReader).defineSymbol(_int, _boolean, string);

Test 120: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
StringReader stringReader = new StringReader("This is a sample input string");
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
((Parser) stringReader).parse((Reader) stringReader, "S1a/,G/{>,\"{rmtJ=", 121);
int _int = 152;
boolean _boolean = true;
String string = "This is a sample symbol definition";
((Parser) stringReader).defineSymbol(_int, _boolean, string);

Test 121: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
parser.parse("ZMF3_^Px,Z<LRi~", "ZMF3_^Px,Z<LRi~", 126);

Test 122: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);

Test 123: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
parser.parse("v||,rf ct", "U4tc&S(2Py)J\u0001re", 20);

Test 124: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
StringReader stringReader = new StringReader("F&&M");
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
((Parser) stringReader).parse((Reader) stringReader, "language version", 12);

Test 125: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Parser parser = new Parser(compilerEnvirons, (ErrorReporter) null);
parser.parse("F|[$je#N]&r=lK", "F|[$je#N]&r=lK", (int) (Integer) null);
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Parser parser = new Parser(compilerEnvirons, (ErrorReporter) null);
String string = "F|[$je#N]&r=lK";
String string = "F|[$je#N]&r=lK";
int _int = null;
parser.parse(string, string, _int);
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Parser parser = new Parser(compilerEnvirons, (ErrorReporter) null);
String string = "F|[$je#N]&r=lK";
String string = "F|[$je#N]&r=lK";
int _int = null;
parser.parse(string, string, _int);
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Parser parser = new Parser(compilerEnvirons, (ErrorReporter) null);
String string = "F|[$je#N]&r=lK";
String string = "F|[$je#N]&r=lK";
int _int = null;
parser.parse(string, string, _int);

Test 126: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
parser.parse("factory is not set", "factory is an instance of the Factory class", 65);

Test 127: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);

Test 128: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Parser parser = new Parser(compilerEnvirons, (ErrorReporter) null);
parser.parse("gv18Yz>=", "gv18Yz>=", (int) (Integer) null);

Test 129: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
parser.parse("Z<<ED O4hRufFz@G", "Z<<ED O4hRufFz@G", (int) (Integer) null);

Test 130: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Parser parser = new Parser(compilerEnvirons, (ErrorReporter) null);

Test 131: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Parser parser = new Parser(compilerEnvirons, (ErrorReporter) null);

Test 132: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Parser parser = new Parser(compilerEnvirons, (ErrorReporter) null);
parser.parse("sin(x) * 2 + cos(y)", "x_123", 5);

Test 133: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
parser.parse("-IxXy5O+!>", "-IxXy5O+!>", 122);

Test 134: 
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
parser.parse("6+~ .4`d", "6+~ .4`d", (int) (Integer) null);

Test 135: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
parser.parse("delete myFile", "delete myFile", 200);

Test 136: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
parser.parse("--", "?", 85);

Test 137: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Parser parser = new Parser(compilerEnvirons, (ErrorReporter) null);
parser.parse("2 + 2", "XP:iUxw*Y>Rp7", 1036);

Test 138: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
compilerEnvirons.setXmlAvailable(false);
Parser parser = new Parser(compilerEnvirons, (ErrorReporter) null);
((Parser)null).parse("\"<><7T4#FGD3mCwE=\"", "msg.destruct.assign.no.init", (int) (Integer) null);

Test 139: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
parser.parse("http://www.example.com/path/to/resource", "http://www.example.com/path/to/resource", 404);

Test 140: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
ContextFactory global = ContextFactory.getGlobal();
Context context = new Context(global);
DefaultErrorReporter errorReporter = (DefaultErrorReporter)context.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
StringReader stringReader = new StringReader("<html><body>This is a test string.</body></html>");
parser.parse((Reader) stringReader, "language version", 12);

Test 141: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
parser.parse("z:U()S", "set", 947);

Test 142: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);

Test 143: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
parser.parse("123 Main St.", "123 Main St.", 2087);
String string = "John Doe";
String string = "John Doe";
int _int = 2087;
parser.parse(string, string, _int);
String string = "O[yE8.@:XCV^4\"";
String string = "O[yE8.@:XCV^4\"";
int _int = 2087;
parser.parse(string, string, _int);
String string = "123 Main St.";
String string = "123 Main St.";
int _int = 2087;
parser.parse(string, string, _int);
String string = "John Doe";
String string = "John Doe";
int _int = 2087;
parser.parse(string, string, _int);
String string = "O[yE8.@:XCV^4\"";
String string = "O[yE8.@:XCV^4\"";
int _int = 2087;
parser.parse(string, string, _int);

Test 144: 
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
parser.parse("c()", "msg.no.paren.for.ctrl", 39);

Test 145: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
parser.parse("msg.bad.throw.eol", "msg.bad.throw.eol", (int) (Integer) null);

Test 146: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
parser.parse("This is a sample string to be parsed.", (String) 29, (int) (Integer) null);

Test 147: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
parser.parse("@ [i$", "@ [i$", (int) (Integer) null);

Test 148: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Parser parser = new Parser(compilerEnvirons, (ErrorReporter) null);

Test 149: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
StringReader stringReader = new StringReader("a sample input");
ContextFactory contextFactory = new ContextFactory();
((ContextFactory) stringReader).makeContext();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)((Context) contextFactory).getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
String string = "a sample input";
int _int = 250;
((Parser) errorReporter).parse((Reader) stringReader, string, _int);

Test 150: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)compilerEnvirons.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
parser.parse(" /= ", "language version 1.0", 0);

Test 151: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
parser.parse("goto my_file.java", "my_file.java", (int) false);

Test 152: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Parser parser = new Parser(compilerEnvirons, (ErrorReporter) null);
parser.parse("[qC,", "[qC,", (int) (Integer) null);

Test 153: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);

Test 154: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)compilerEnvirons.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);

Test 155: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
parser.parse("ABCDEFGHIJKLMNOPQRSTUVWXYZ", "This is a test message.", 100);

Test 156: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Context enter = Context.enter();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)enter.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
parser.parse("var x = 123;", (String) 82, (int) (Integer) null);

Test 157: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
parser.parse("RDxf%C[", "RDxf%C[", 2646);

Test 158: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)compilerEnvirons.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
parser.parse("true", "@ LAi$", 1326);

Test 159: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
StringReader stringReader = new StringReader("$qM");
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
((Parser) stringReader).parse((Reader) stringReader, "language version", 10);
((Parser) stringReader).eof();

Test 160: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Context currentContext = Context.getCurrentContext();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)currentContext.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
StringReader stringReader = new StringReader("(new Boolean(false))");
parser.parse((Reader) stringReader, "(new Boolean(false))", 170);
parser.getCurrentLineNumber();
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Context.getCurrentContext();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)currentContext.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
StringReader stringReader = new StringReader("(new Boolean(true))");
parser.parse((Reader) stringReader, "(new Boolean(true))", 170);
parser.getCurrentLineNumber();

Test 161: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
parser.parse("get", ":H&3o7,iy! ", 0);
parser.getCurrentLineNumber();

Test 162: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter forEval = (DefaultErrorReporter)DefaultErrorReporter.forEval((ErrorReporter) null);
Parser parser = new Parser(compilerEnvirons, forEval);
StringReader stringReader = new StringReader("try { // code } finally { // cleanup }");
((Parser) forEval).parse((Reader) stringReader, "message.try.no.catchfinally", 0);

Test 163: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)compilerEnvirons.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
parser.addError("msg.no.paren.with", "Ayushya");

Test 164: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)compilerEnvirons.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
StringReader stringReader = new StringReader("2 + 3 - 4 * (5 - 6)");
parser.parse((Reader) stringReader, "2 + 3 - 4 * (5 - 6)", 75);

Test 165: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)compilerEnvirons.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
parser.parse("s?dJ:Nj:T1mgy!_ff", "I0&K", 99);

Test 166: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
compilerEnvirons.setXmlAvailable(false);
Parser parser = new Parser(compilerEnvirons, (ErrorReporter) null);
StringReader stringReader = new StringReader("The message 'msg.destruct.assign.no.init' was not initialized before destruction.");
((Parser)null).parse((Reader) stringReader, "msg.destruct.assign.no.init", 128);

Test 167: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
parser.parse("_NMsJvfHh.(", "_NMsJvfHh.(", 50);

Test 168: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
parser.parse("ZoqtnpI[qf]", "ZoqtnpI[qf]", (int) (Integer) null);
String string = "class Test { public static void main(String[] args) { System.out.println(\"Hello, world!\"); } }";
String string = "Test.java";
int _int = null;
parser.parse(string, string, _int);

Test 169: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Context currentContext = Context.getCurrentContext();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)currentContext.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
parser.addError("Syntax Error: Unexpected token 'error reporter'");

Test 170: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
parser.popScope();

Test 171: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
parser.reportError("TDp%h2$!V.b");


* Minimizing test suite
* test suite isTestSuite: 91
Test 0: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Parser parser = new Parser(compilerEnvirons, (ErrorReporter) null);
ScriptOrFnNode parse = parser.parse("msg.no.brace.catchblock", "J^(\"2<\"", 21);
parser.pushScope(parse);
// Undeclared exception!
try { 
  parser.pushScope(parse);
  fail("Expecting exception: IllegalStateException");

} catch(IllegalStateException e) {
   //
   // FAILED ASSERTION
   //
   verifyException("org.mozilla.javascript.Kit", e);
}

Test 1: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Parser parser = new Parser(compilerEnvirons, (ErrorReporter) null);
// Undeclared exception!
try { 
  parser.parse("const", "<QQnrsx6G0-MXbf", 159);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 2: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)compilerEnvirons.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
// Undeclared exception!
try { 
  parser.addError("msg.no.paren.with", "Ayushya");
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.mozilla.javascript.Parser", e);
}

Test 3: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Parser parser = new Parser(compilerEnvirons, (ErrorReporter) null);
parser.getEncodedSource();
Test 4: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Parser parser = new Parser(compilerEnvirons, (ErrorReporter) null);
// Undeclared exception!
try { 
  parser.parse("while loop", "while", 722);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 5: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
// Undeclared exception!
try { 
  parser.parse("DN^!{m*Wu", (String) null, 1223);
  fail("Expecting exception: ClassCastException");

} catch(ClassCastException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 6: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
parser.addStrictWarning("filename1.js", "A message");
Test 7: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)compilerEnvirons.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
// Undeclared exception!
try { 
  parser.addWarning("msg.syntax", "Invalid syntax detected");
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.mozilla.javascript.Parser", e);
}

Test 8: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
parser.parse("u\n", "u\n", 1677);
Test 9: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)compilerEnvirons.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
// Undeclared exception!
try { 
  parser.parse("s?dJ:Nj:T1mgy!_ff", "I0&K", 99);
  fail("Expecting exception: ClassCastException");

} catch(ClassCastException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 10: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
// Undeclared exception!
try { 
  parser.parse("_NMsJvfHh.(", "_NMsJvfHh.(", 50);
  fail("Expecting exception: ClassCastException");

} catch(ClassCastException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 11: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
compilerEnvirons.setXmlAvailable(false);
Parser parser = new Parser(compilerEnvirons, (ErrorReporter) null);
// Undeclared exception!
try { 
  parser.parse("_NMsJvfHh.(", "_NMsJvfHh.(", 4617);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 12: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
// Undeclared exception!
try { 
  parser.parse("function", "function", 32);
  fail("Expecting exception: ClassCastException");

} catch(ClassCastException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 13: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Context currentContext = Context.getCurrentContext();
compilerEnvirons.initFromContext(currentContext);
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
parser.parse("\n", "\n", 145);
Test 14: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
// Undeclared exception!
try { 
  parser.parse("aa:{8+xqCIAm`dF!#", "aa:{8+xqCIAm`dF!#", (-1746));
  fail("Expecting exception: ClassCastException");

} catch(ClassCastException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 15: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
// Undeclared exception!
try { 
  parser.parse("{sjUaI", "TypUEro: ", (-667));
  fail("Expecting exception: ClassCastException");

} catch(ClassCastException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 16: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
// Undeclared exception!
try { 
  parser.parse("{}D\"CFDjGM:Hh_zD1*D", "{}D\"CFDjGM:Hh_zD1*D", 46);
  fail("Expecting exception: ClassCastException");

} catch(ClassCastException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 17: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
// Undeclared exception!
try { 
  parser.parse("break", "break", 46);
  fail("Expecting exception: ClassCastException");

} catch(ClassCastException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 18: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Parser parser = new Parser(compilerEnvirons, (ErrorReporter) null);
// Undeclared exception!
try { 
  parser.parse("return", "return", 101);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 19: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)compilerEnvirons.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
// Undeclared exception!
try { 
  parser.parse("throw", "throw", 1234567890);
  fail("Expecting exception: ClassCastException");

} catch(ClassCastException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 20: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
StringReader stringReader = new StringReader("try ");
DefaultErrorReporter errorReporter = (DefaultErrorReporter)compilerEnvirons.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
// Undeclared exception!
try { 
  parser.parse((Reader) stringReader, (String) null, (-443));
  fail("Expecting exception: ClassCastException");

} catch(ClassCastException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 21: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Parser parser = new Parser(compilerEnvirons, (ErrorReporter) null);
// Undeclared exception!
try { 
  parser.parse(";@Rv Iu<K&~e5Tcc?T", ";@Rv Iu<K&~e5Tcc?T", (-1765));
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 22: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
// Undeclared exception!
try { 
  parser.parse("if ", "if ", 152);
  fail("Expecting exception: ClassCastException");

} catch(ClassCastException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 23: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter forEval = (DefaultErrorReporter)DefaultErrorReporter.forEval((ErrorReporter) null);
Parser parser = new Parser(compilerEnvirons, forEval);
// Undeclared exception!
try { 
  parser.parse("switch", "_NMsJvfHh.(", 32);
  fail("Expecting exception: ClassCastException");

} catch(ClassCastException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 24: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
// Undeclared exception!
try { 
  parser.parse("default", "IJ3aritOhZ2{7;9}`6", 157);
  fail("Expecting exception: ClassCastException");

} catch(ClassCastException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 25: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
// Undeclared exception!
try { 
  parser.parse("for ", " ee38HK-Q|U", 1424);
  fail("Expecting exception: ClassCastException");

} catch(ClassCastException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 26: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)compilerEnvirons.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
StringReader stringReader = new StringReader("var myVariable: Int = 10");
// Undeclared exception!
try { 
  parser.parse((Reader) stringReader, "msg.bad.var", 310);
  fail("Expecting exception: ClassCastException");

} catch(ClassCastException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 27: 
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
// Undeclared exception!
try { 
  parser.parse("with", "with", 1234567890);
  fail("Expecting exception: ClassCastException");

} catch(ClassCastException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 28: 
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
parser.parse("KGP:V6:rV", "KGP:V6:rV", 24);
Test 29: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Parser parser = new Parser(compilerEnvirons, (ErrorReporter) null);
// Undeclared exception!
try { 
  parser.parse("am;pm;monday;tuesday;wednesday;thursday;friday;saturday;sunday;january;february;march;april;may;june;july;august;september;october;november;december;gmt;ut;utc;est;edt;cst;cdt;mst;mdt;pst;pdt;", "am;pm;monday;tuesday;wednesday;thursday;friday;saturday;sunday;january;february;march;april;may;june;july;august;september;october;november;december;gmt;ut;utc;est;edt;cst;cdt;mst;mdt;pst;pdt;", (-1168));
  fail("Expecting exception: IllegalStateException");

} catch(IllegalStateException e) {
   //
   // FAILED ASSERTION
   //
   verifyException("org.mozilla.javascript.Kit", e);
}

Test 30: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
// Undeclared exception!
try { 
  parser.parse("zE}ysL#&{i<>+m", "zE}ysL#&{i<>+m", 103);
  fail("Expecting exception: ClassCastException");

} catch(ClassCastException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 31: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
StringReader stringReader = new StringReader("hor");
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
parser.parse((Reader) stringReader, "hor", 160);
parser.defineSymbol(86, false, "E+t");
// Undeclared exception!
try { 
  parser.defineSymbol(1, false, "E+t");
  fail("Expecting exception: IllegalStateException");

} catch(IllegalStateException e) {
   //
   // FAILED ASSERTION
   //
   verifyException("org.mozilla.javascript.Kit", e);
}

Test 32: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
StringReader stringReader = new StringReader("F&M");
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
parser.parse((Reader) stringReader, "language version", 10);
parser.defineSymbol(108, false, "error reporter");
Test 33: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
StringReader stringReader = new StringReader("ayuY");
parser.parse((Reader) stringReader, "if ", 152);
parser.defineSymbol(152, false, "ayuY");
Test 34: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
StringReader stringReader = new StringReader("F&M");
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
parser.parse((Reader) stringReader, "fontcolor", 50);
parser.defineSymbol(153, false, "language version");
Test 35: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
StringReader stringReader = new StringReader("taK");
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
parser.parse((Reader) stringReader, "S1a/,G/{>,\"{rmtJ=", 121);
parser.defineSymbol(152, true, "ayuY");
Test 36: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
// Undeclared exception!
try { 
  parser.parse("ZMF3_^Px,Z<LRi~", "ZMF3_^Px,Z<LRi~", 126);
  fail("Expecting exception: ClassCastException");

} catch(ClassCastException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 37: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
// Undeclared exception!
try { 
  parser.parse("LNp|[mT=hu{\"s:%,", "LNp|[mT=hu{\"s:%,", 1245);
  fail("Expecting exception: ClassCastException");

} catch(ClassCastException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 38: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
// Undeclared exception!
try { 
  parser.parse("v||,rf ct", "U4tc&S(2Py)J\u0001re", 20);
  fail("Expecting exception: ClassCastException");

} catch(ClassCastException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 39: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
StringReader stringReader = new StringReader("F&&M");
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
parser.parse((Reader) stringReader, "language version", 12);
Test 40: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
parser.parse("factory == null", "factory == null", 65);
Test 41: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
// Undeclared exception!
try { 
  parser.parse("Bfa<=6!r4TUT{{8", "'YGfpGJikZy", (-791));
  fail("Expecting exception: ClassCastException");

} catch(ClassCastException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 42: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
// Undeclared exception!
try { 
  parser.parse("PAE>rV*b36>*vev", "PAE>rV*b36>*vev", 46);
  fail("Expecting exception: ClassCastException");

} catch(ClassCastException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 43: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Parser parser = new Parser(compilerEnvirons, (ErrorReporter) null);
// Undeclared exception!
try { 
  parser.parse("gv18Yz>=", "gv18Yz>=", (-5428));
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 44: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
// Undeclared exception!
try { 
  parser.parse("Z<<ED O4hRufFz@G", "Z<<ED O4hRufFz@G", (-1));
  fail("Expecting exception: ClassCastException");

} catch(ClassCastException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 45: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Parser parser = new Parser(compilerEnvirons, (ErrorReporter) null);
// Undeclared exception!
try { 
  parser.parse("a/{}]u/c,!vtJqY;P/S", "$qM", 85);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 46: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
// Undeclared exception!
try { 
  parser.parse("RDxf%C[", "RDxf%C[", 2646);
  fail("Expecting exception: ClassCastException");

} catch(ClassCastException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 47: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
ContextFactory global = ContextFactory.getGlobal();
Context context = new Context(global);
DefaultErrorReporter errorReporter = (DefaultErrorReporter)context.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
StringReader stringReader = new StringReader("<html><body>This is a test string.</body></html>");
parser.parse((Reader) stringReader, "language version", 12);
Test 48: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Context enter = Context.enter();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)enter.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
// Undeclared exception!
try { 
  parser.parse("+Ag1ozs'D}Vt$]TJs", (String) null, 82);
  fail("Expecting exception: ClassCastException");

} catch(ClassCastException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 49: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
// Undeclared exception!
try { 
  parser.parse("-IxXy5O+!>", "-IxXy5O+!>", 122);
  fail("Expecting exception: ClassCastException");

} catch(ClassCastException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 50: 
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
// Undeclared exception!
try { 
  parser.parse("6+~ .4`d", "6+~ .4`d", (-1468));
  fail("Expecting exception: ClassCastException");

} catch(ClassCastException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 51: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
parser.parse("delete myFile", "delete myFile", 200);
Test 52: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Parser parser = new Parser(compilerEnvirons, (ErrorReporter) null);
// Undeclared exception!
try { 
  parser.parse("0%E&++", "K#_@+%8y", 4758);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 53: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
// Undeclared exception!
try { 
  parser.parse("--", "?", 85);
  fail("Expecting exception: ClassCastException");

} catch(ClassCastException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 54: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Parser parser = new Parser(compilerEnvirons, (ErrorReporter) null);
// Undeclared exception!
try { 
  parser.parse("void ", "XP:iUxw*Y>Rp7", 1036);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 55: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
compilerEnvirons.setXmlAvailable(false);
Parser parser = new Parser(compilerEnvirons, (ErrorReporter) null);
// Undeclared exception!
try { 
  parser.parse("<><7T4#FGD3mCwE=", "msg.destruct.assign.no.init", (-64));
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 56: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
// Undeclared exception!
try { 
  parser.parse("FXl8R9--jenv[;09", "FXl8R9--jenv[;09", 404);
  fail("Expecting exception: ClassCastException");

} catch(ClassCastException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 57: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
ContextFactory global = ContextFactory.getGlobal();
Context context = new Context(global);
DefaultErrorReporter errorReporter = (DefaultErrorReporter)context.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
StringReader stringReader = new StringReader("<7T4#FGD3mCwE={fU");
// Undeclared exception!
try { 
  parser.parse((Reader) stringReader, "language version", 12);
  fail("Expecting exception: ClassCastException");

} catch(ClassCastException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 58: 
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
parser.parse("c()", "msg.no.paren.for.ctrl", 39);
Test 59: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Parser parser = new Parser(compilerEnvirons, (ErrorReporter) null);
parser.parse("sin(x) * 2 + cos(y)", "x_123", 5);
Test 60: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
// Undeclared exception!
try { 
  parser.parse("nYf(3, ;aQ9*3Aqe{m", "nYf(3, ;aQ9*3Aqe{m", 120);
  fail("Expecting exception: ClassCastException");

} catch(ClassCastException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 61: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Context currentContext = Context.getCurrentContext();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)currentContext.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
StringReader stringReader = new StringReader("(new Boolean(false))");
parser.parse((Reader) stringReader, "(new Boolean(false))", 170);
parser.getCurrentLineNumber();
Test 62: 
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
// Undeclared exception!
try { 
  parser.parse("c..", "msg.no.paren.for.ctrl", 39);
  fail("Expecting exception: ClassCastException");

} catch(ClassCastException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 63: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
compilerEnvirons.setXmlAvailable(false);
Parser parser = new Parser(compilerEnvirons, (ErrorReporter) null);
StringReader stringReader = new StringReader("msg.destruct.assign.no.init");
parser.parse((Reader) stringReader, "msg.destruct.assign.no.init", 128);
Test 64: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
// Undeclared exception!
try { 
  parser.parse("msg.bad.throw.eol", "msg.bad.throw.eol", (-478));
  fail("Expecting exception: IllegalStateException");

} catch(IllegalStateException e) {
   //
   // FAILED ASSERTION
   //
   verifyException("org.mozilla.javascript.Kit", e);
}

Test 65: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
// Undeclared exception!
try { 
  parser.parse("O[yE8.@:XCV^4\"", "O[yE8.@:XCV^4\"", 2087);
  fail("Expecting exception: ClassCastException");

} catch(ClassCastException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 66: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
// Undeclared exception!
try { 
  parser.parse(" @*b@e+Zb([48%oywd", (String) null, 29);
  fail("Expecting exception: ClassCastException");

} catch(ClassCastException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 67: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
// Undeclared exception!
try { 
  parser.parse("@ [i$", "@ [i$", (-1746));
  fail("Expecting exception: ClassCastException");

} catch(ClassCastException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 68: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Parser parser = new Parser(compilerEnvirons, (ErrorReporter) null);
// Undeclared exception!
try { 
  parser.parse("/Qh{<~x:pdb!y/!bY", "_NMsJvfHh.(", 2613);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 69: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)compilerEnvirons.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
StringReader stringReader = new StringReader("''lj/vX?gWo");
// Undeclared exception!
try { 
  parser.parse((Reader) stringReader, "''lj/vX?gWo", 52);
  fail("Expecting exception: ClassCastException");

} catch(ClassCastException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 70: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
StringReader stringReader = new StringReader("this");
ContextFactory contextFactory = new ContextFactory();
Context makeContext = contextFactory.makeContext();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)makeContext.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
parser.parse((Reader) stringReader, "[qHC,", 146);
Test 71: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Context currentContext = Context.getCurrentContext();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)currentContext.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
StringReader stringReader = new StringReader("(new Boolean(true))");
parser.parse((Reader) stringReader, "(new Boolean(true))", 170);
Test 72: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)compilerEnvirons.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
// Undeclared exception!
try { 
  parser.parse(" /= ", "language version 1.0", 0);
  fail("Expecting exception: ClassCastException");

} catch(ClassCastException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 73: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
// Undeclared exception!
try { 
  parser.parse("class MyClass { public static void main(String[] args) { System.out.println(\"Hello World\"); } }", "MyClass.java", 103);
  fail("Expecting exception: ClassCastException");

} catch(ClassCastException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 74: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Parser parser = new Parser(compilerEnvirons, (ErrorReporter) null);
// Undeclared exception!
try { 
  parser.parse("[qC,", "[qC,", (-89));
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 75: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
// Undeclared exception!
try { 
  parser.parse("l?[]y", ">`\r<0'(x.;/*B;", (-1216));
  fail("Expecting exception: ClassCastException");

} catch(ClassCastException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 76: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Parser parser = new Parser(compilerEnvirons, (ErrorReporter) null);
// Undeclared exception!
try { 
  parser.parse("R-{", "R-{", 104);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 77: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)compilerEnvirons.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
// Undeclared exception!
try { 
  parser.parse("J^!{9 ", "J^!{9 ", 893);
  fail("Expecting exception: ClassCastException");

} catch(ClassCastException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 78: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)compilerEnvirons.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
StringReader stringReader = new StringReader("Hx+3-d;DiR:ppv");
parser.parse((Reader) stringReader, "Hx+3-d;DiR:ppv", 81);
Test 79: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Parser parser = new Parser(compilerEnvirons, (ErrorReporter) null);
// Undeclared exception!
try { 
  parser.parse("F|[$je#N]&r=lK", "F|[$je#N]&r=lK", (-195));
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 80: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)compilerEnvirons.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
parser.parse("true", "@ LAi$", 1326);
Test 81: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)compilerEnvirons.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
parser.parse("false", "@ LAi$", 1326);
Test 82: 
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser((CompilerEnvirons) null, defaultErrorReporter);
parser.createDecompiler((CompilerEnvirons) null);
Test 83: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
StringReader stringReader = new StringReader("$qM");
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
parser.parse((Reader) stringReader, "language version", 10);
parser.eof();
Test 84: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
parser.parse("get", ":H&3o7,iy! ", 0);
parser.getCurrentLineNumber();
Test 85: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)compilerEnvirons.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
parser.insideFunction();
Test 86: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter forEval = (DefaultErrorReporter)DefaultErrorReporter.forEval((ErrorReporter) null);
Parser parser = new Parser(compilerEnvirons, forEval);
StringReader stringReader = new StringReader("");
parser.parse((Reader) stringReader, "msg.try.no.catchfinally", 0);
Test 87: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
// Undeclared exception!
try { 
  parser.parse("ZoqtnpI[qf]", "ZoqtnpI[qf]", (-1));
  fail("Expecting exception: IllegalStateException");

} catch(IllegalStateException e) {
   //
   // FAILED ASSERTION
   //
   verifyException("org.mozilla.javascript.Kit", e);
}

Test 88: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Context currentContext = Context.getCurrentContext();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)currentContext.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
// Undeclared exception!
try { 
  parser.addError("Syntax Error: Unexpected token 'error reporter'");
  fail("Expecting exception: RuntimeException");

} catch(RuntimeException e) {
   //
   // no message resource found for message property Syntax Error: Unexpected token 'error reporter'
   //
   verifyException("org.mozilla.javascript.ScriptRuntime$DefaultMessageProvider", e);
}

Test 89: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
// Undeclared exception!
try { 
  parser.popScope();
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.mozilla.javascript.Parser", e);
}

Test 90: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
// Undeclared exception!
try { 
  parser.reportError("TDp%h2$!V.b");
  fail("Expecting exception: RuntimeException");

} catch(RuntimeException e) {
   //
   // no message resource found for message property TDp%h2$!V.b
   //
   verifyException("org.mozilla.javascript.ScriptRuntime$DefaultMessageProvider", e);
}


* Going to analyze the coverage criteria
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 51%
* Total number of goals: 735
* Number of covered goals: 373
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 51%
* Total number of goals: 1211
* Number of covered goals: 615
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 42%
* Total number of goals: 80
* Number of covered goals: 34
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 16
* Number of covered goals: 16
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 50%
* Total number of goals: 735
* Number of covered goals: 364
* Generated 91 tests with total length 388
* Resulting test suite's coverage: 58% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 12%
* Compiling and checking tests
Going to execute: removeTestsThatDoNotCompile
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: CompilerEnvirons arg0 = new CompilerEnvirons();
Parser parser = new Parser(arg0, (ErrorReporter) null);
// Undeclared exception!
try { 
  parser.parse("const", "<QQnrsx6G0-MXbf", 159);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.mozilla.javascript.Parser", e);
}


** It was a parseable test case! 
refined test name is: testParseThrowsNullPointerExceptionForNullInput
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: CompilerEnvirons arg0 = new CompilerEnvirons();
ErrorReporter arg1 = arg0.getErrorReporter();
Parser parser = new Parser(arg0, arg1);
// Undeclared exception!
try { 
  parser.addError("msg.no.paren.with", "Ayushya");
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.mozilla.javascript.Parser", e);
}


** It was a parseable test case! 
refined test name is: testAddErrorMessageWithoutParentheses
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: CompilerEnvirons arg0 = new CompilerEnvirons();
Parser parser = new Parser(arg0, (ErrorReporter) null);
String encodedSource = parser.getEncodedSource();
assertNull(encodedSource);


** It was a parseable test case! 
refined test name is: testGetEncodedSourceWithErrorReporter
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: CompilerEnvirons arg0 = new CompilerEnvirons();
Parser parser = new Parser(arg0, (ErrorReporter) null);
// Undeclared exception!
try { 
  parser.parse("while loop", "while", 722);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.mozilla.javascript.Parser", e);
}


** It was a parseable test case! 
refined test name is: testParseScriptInvalidStatement
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: CompilerEnvirons arg0 = new CompilerEnvirons();
DefaultErrorReporter arg1 = DefaultErrorReporter.instance;
Parser parser = new Parser(arg0, arg1);
// Undeclared exception!
try { 
  parser.parse("DN^!{m*Wu", (String) null, 1223);
  fail("Expecting exception: RuntimeException");

} catch(RuntimeException e) {
   //
   // missing : after property id
   //
   verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
}


** It was a parseable test case! 
refined test name is: testInvalidInputThrowsException
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: CompilerEnvirons arg0 = new CompilerEnvirons();
DefaultErrorReporter arg1 = DefaultErrorReporter.instance;
Parser parser = new Parser(arg0, arg1);
parser.addStrictWarning("filename1.js", "A message");
assertNull(parser.getEncodedSource());


** It was a parseable test case! 
refined test name is: testCreateParserWithStrictWarning
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: CompilerEnvirons arg0 = new CompilerEnvirons();
ErrorReporter arg1 = arg0.getErrorReporter();
Parser parser = new Parser(arg0, arg1);
// Undeclared exception!
try { 
  parser.addWarning("msg.syntax", "Invalid syntax detected");
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.mozilla.javascript.Parser", e);
}


** It was a parseable test case! 
refined test name is: testAddWarningWithoutMessageThrowsNPE
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: CompilerEnvirons arg0 = new CompilerEnvirons();
DefaultErrorReporter arg1 = DefaultErrorReporter.instance;
Parser parser = new Parser(arg0, arg1);
parser.parse("u\n", "u\n", 1677);
assertEquals("\u0087'\u0001uQ\u0001", parser.getEncodedSource());


** It was a parseable test case! 
refined test name is: testParseStringWithEscapeSequence
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: CompilerEnvirons arg0 = new CompilerEnvirons();
ErrorReporter arg1 = arg0.getErrorReporter();
Parser parser = new Parser(arg0, arg1);
// Undeclared exception!
try { 
  parser.parse("s?dJ:Nj:T1mgy!_ff", "I0&K", 99);
  fail("Expecting exception: RuntimeException");

} catch(RuntimeException e) {
   //
   // missing ; before statement (I0&K#99)
   //
   verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
}


** It was a parseable test case! 
refined test name is: testParseInvalidSyntax
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: CompilerEnvirons arg0 = new CompilerEnvirons();
DefaultErrorReporter arg1 = DefaultErrorReporter.instance;
Parser parser = new Parser(arg0, arg1);
// Undeclared exception!
try { 
  parser.parse("_NMsJvfHh.(", "_NMsJvfHh.(", 50);
  fail("Expecting exception: RuntimeException");

} catch(RuntimeException e) {
   //
   // Unexpected end of file (_NMsJvfHh.(#50)
   //
   verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
}


** It was a parseable test case! 
refined test name is: testParseUnexpectedEndOfFile
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: CompilerEnvirons arg0 = new CompilerEnvirons();
arg0.setXmlAvailable(false);
Parser parser = new Parser(arg0, (ErrorReporter) null);
// Undeclared exception!
try { 
  parser.parse("_NMsJvfHh.(", "_NMsJvfHh.(", 4617);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.mozilla.javascript.Parser", e);
}


** It was a parseable test case! 
refined test name is: testParseEmptyStringWithoutErrorReporter
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: CompilerEnvirons arg0 = new CompilerEnvirons();
DefaultErrorReporter arg1 = DefaultErrorReporter.instance;
Parser parser = new Parser(arg0, arg1);
// Undeclared exception!
try { 
  parser.parse("function", "function", 32);
  fail("Expecting exception: RuntimeException");

} catch(RuntimeException e) {
   //
   // missing ( before function parameters. (function#32)
   //
   verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
}


** It was a parseable test case! 
refined test name is: testParseWithMissingOpenParenthesis
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: CompilerEnvirons arg0 = new CompilerEnvirons();
DefaultErrorReporter arg1 = DefaultErrorReporter.instance;
Parser parser = new Parser(arg0, arg1);
// Undeclared exception!
try { 
  parser.parse("aa:{8+xqCIAm`dF!#", "aa:{8+xqCIAm`dF!#", (-1746));
  fail("Expecting exception: IllegalArgumentException");

} catch(IllegalArgumentException e) {
   //
   // -1746
   //
   verifyException("org.mozilla.javascript.RhinoException", e);
}


** It was a parseable test case! 
refined test name is: testParseStringWithIllegalArgumentThrowsException
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: CompilerEnvirons arg0 = new CompilerEnvirons();
DefaultErrorReporter arg1 = DefaultErrorReporter.instance;
Parser parser = new Parser(arg0, arg1);
// Undeclared exception!
try { 
  parser.parse("{sjUaI", "TypUEro: ", (-667));
  fail("Expecting exception: IllegalArgumentException");

} catch(IllegalArgumentException e) {
   //
   // -667
   //
   verifyException("org.mozilla.javascript.RhinoException", e);
}


** It was a parseable test case! 
refined test name is: testInvalidInputThrowsException
* Compiling Tests
refined test name is: testParseInvalidInputData
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: CompilerEnvirons arg0 = new CompilerEnvirons();
DefaultErrorReporter arg1 = DefaultErrorReporter.instance;
Parser parser = new Parser(arg0, arg1);
// Undeclared exception!
try { 
  parser.parse("{}D\"CFDjGM:Hh_zD1*D", "{}D\"CFDjGM:Hh_zD1*D", 46);
  fail("Expecting exception: RuntimeException");

} catch(RuntimeException e) {
   //
   // unterminated string literal ({}D\"CFDjGM:Hh_zD1*D#46)
   //
   verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
}


** It was a parseable test case! 
refined test name is: testUnterminatedStringLiteral
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: CompilerEnvirons arg0 = new CompilerEnvirons();
DefaultErrorReporter arg1 = DefaultErrorReporter.instance;
Parser parser = new Parser(arg0, arg1);
// Undeclared exception!
try { 
  parser.parse("break", "break", 46);
  fail("Expecting exception: RuntimeException");

} catch(RuntimeException e) {
   //
   // unlabelled break must be inside loop or switch (break#46)
   //
   verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
}


** It was a parseable test case! 
refined test name is: testParseUndeclaredBreakStatement
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: CompilerEnvirons arg0 = new CompilerEnvirons();
Parser parser = new Parser(arg0, (ErrorReporter) null);
// Undeclared exception!
try { 
  parser.parse("return", "return", 101);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.mozilla.javascript.Parser", e);
}


** It was a parseable test case! 
refined test name is: testParseThrowsNullPointerExceptionWithNullInput
* Compiling Tests
refined test name is: testParserReturnKeyword
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: CompilerEnvirons arg0 = new CompilerEnvirons();
ErrorReporter arg1 = arg0.getErrorReporter();
Parser parser = new Parser(arg0, arg1);
// Undeclared exception!
try { 
  parser.parse("throw", "throw", 1234567890);
  fail("Expecting exception: RuntimeException");

} catch(RuntimeException e) {
   //
   // Unexpected end of file (throw#1234567890)
   //
   verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
}


** It was a parseable test case! 
refined test name is: testParseThrowingStringThrowsRuntimeException
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: CompilerEnvirons arg0 = new CompilerEnvirons();
Parser parser = new Parser(arg0, (ErrorReporter) null);
// Undeclared exception!
try { 
  parser.parse(";@Rv Iu<K&~e5Tcc?T", ";@Rv Iu<K&~e5Tcc?T", (-1765));
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.mozilla.javascript.Parser", e);
}


** It was a parseable test case! 
refined test name is: testInvalidCharacterInCode
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: CompilerEnvirons arg0 = new CompilerEnvirons();
DefaultErrorReporter arg1 = DefaultErrorReporter.instance;
Parser parser = new Parser(arg0, arg1);
// Undeclared exception!
try { 
  parser.parse("if ", "if ", 152);
  fail("Expecting exception: RuntimeException");

} catch(RuntimeException e) {
   //
   // missing ( before condition (if #152)
   //
   verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
}


** It was a parseable test case! 
refined test name is: testIfStatementMissingParenthesis
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: CompilerEnvirons arg0 = new CompilerEnvirons();
ErrorReporter arg1 = DefaultErrorReporter.forEval((ErrorReporter) null);
Parser parser = new Parser(arg0, arg1);
// Undeclared exception!
try { 
  parser.parse("switch", "_NMsJvfHh.(", 32);
  fail("Expecting exception: RuntimeException");

} catch(RuntimeException e) {
   //
   // SyntaxError: missing ( before switch expression (_NMsJvfHh.(#32)
   //
   verifyException("org.mozilla.javascript.ScriptRuntime", e);
}


** It was a parseable test case! 
refined test name is: testParserThrowsSyntaxErrorOnInvalidCode
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: CompilerEnvirons arg0 = new CompilerEnvirons();
DefaultErrorReporter arg1 = DefaultErrorReporter.instance;
Parser parser = new Parser(arg0, arg1);
// Undeclared exception!
try { 
  parser.parse("default", "IJ3aritOhZ2{7;9}`6", 157);
  fail("Expecting exception: RuntimeException");

} catch(RuntimeException e) {
   //
   // not a valid default namespace statement. Syntax is: default xml namespace = EXPRESSION; (IJ3aritOhZ2{7;9}`6#157)
   //
   verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
}


** It was a parseable test case! 
refined test name is: testInvalidDefaultNamespaceStatement
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: CompilerEnvirons arg0 = new CompilerEnvirons();
DefaultErrorReporter arg1 = DefaultErrorReporter.instance;
Parser parser = new Parser(arg0, arg1);
// Undeclared exception!
try { 
  parser.parse("for ", " ee38HK-Q|U", 1424);
  fail("Expecting exception: RuntimeException");

} catch(RuntimeException e) {
   //
   // missing ( after for ( ee38HK-Q|U#1424)
   //
   verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
}


** It was a parseable test case! 
refined test name is: testParseMethodWithInvalidInputThrowsException
* Compiling Tests
refined test name is: testParseMethodWithInvalidInputThrowsException
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: DefaultErrorReporter arg1 = DefaultErrorReporter.instance;
CompilerEnvirons arg0 = new CompilerEnvirons();
Parser parser = new Parser(arg0, arg1);
// Undeclared exception!
try { 
  parser.parse("with", "with", 1234567890);
  fail("Expecting exception: RuntimeException");

} catch(RuntimeException e) {
   //
   // missing ( before with-statement object (with#1234567890)
   //
   verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
}


** It was a parseable test case! 
refined test name is: testParserWithValidInputStringAndFileName
* Compiling Tests
refined test name is: testValidParseInput
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: DefaultErrorReporter arg1 = DefaultErrorReporter.instance;
CompilerEnvirons arg0 = new CompilerEnvirons();
Parser parser = new Parser(arg0, arg1);
ScriptOrFnNode parse = parser.parse("KGP:V6:rV", "KGP:V6:rV", 24);
assertEquals(20, parse.getEncodedSourceEnd());


** It was a parseable test case! 
refined test name is: testParserWithValidSourceCodeAndLineNumber
* Compiling Tests
refined test name is: testParseScriptOrFnNode
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: CompilerEnvirons arg0 = new CompilerEnvirons();
Parser parser = new Parser(arg0, (ErrorReporter) null);
// Undeclared exception!
try { 
  parser.parse("am;pm;monday;tuesday;wednesday;thursday;friday;saturday;sunday;january;february;march;april;may;june;july;august;september;october;november;december;gmt;ut;utc;est;edt;cst;cdt;mst;mdt;pst;pdt;", "am;pm;monday;tuesday;wednesday;thursday;friday;saturday;sunday;january;february;march;april;may;june;july;august;september;october;november;december;gmt;ut;utc;est;edt;cst;cdt;mst;mdt;pst;pdt;", (-1168));
  fail("Expecting exception: IllegalStateException");

} catch(IllegalStateException e) {
   //
   // FAILED ASSERTION
   //
   verifyException("org.mozilla.javascript.Kit", e);
}


** It was a parseable test case! 
refined test name is: testParseKeywordsAndSyntaxErrors
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: CompilerEnvirons arg0 = new CompilerEnvirons();
DefaultErrorReporter arg1 = DefaultErrorReporter.instance;
Parser parser = new Parser(arg0, arg1);
// Undeclared exception!
try { 
  parser.parse("zE}ysL#&{i<>+m", "zE}ysL#&{i<>+m", 103);
  fail("Expecting exception: RuntimeException");

} catch(RuntimeException e) {
   //
   // syntax error (zE}ysL#&{i<>+m#103)
   //
   verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
}


** It was a parseable test case! 
refined test name is: testParseWithUnclosedStringLiteral
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: CompilerEnvirons arg0 = new CompilerEnvirons();
DefaultErrorReporter arg1 = DefaultErrorReporter.instance;
Parser parser = new Parser(arg0, arg1);
// Undeclared exception!
try { 
  parser.parse("ZMF3_^Px,Z<LRi~", "ZMF3_^Px,Z<LRi~", 126);
  fail("Expecting exception: RuntimeException");

} catch(RuntimeException e) {
   //
   // missing ; before statement (ZMF3_^Px,Z<LRi~#126)
   //
   verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
}


** It was a parseable test case! 
refined test name is: testParseInvalidInputThrowsException
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: CompilerEnvirons arg0 = new CompilerEnvirons();
DefaultErrorReporter arg1 = DefaultErrorReporter.instance;
Parser parser = new Parser(arg0, arg1);
// Undeclared exception!
try { 
  parser.parse("LNp|[mT=hu{\"s:%,", "LNp|[mT=hu{\"s:%,", 1245);
  fail("Expecting exception: RuntimeException");

} catch(RuntimeException e) {
   //
   // missing ] after element list (LNp|[mT=hu{\"s:%,#1245)
   //
   verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
}


** It was a parseable test case! 
refined test name is: testParseWithInvalidCharacterInString
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: CompilerEnvirons arg0 = new CompilerEnvirons();
DefaultErrorReporter arg1 = DefaultErrorReporter.instance;
Parser parser = new Parser(arg0, arg1);
// Undeclared exception!
try { 
  parser.parse("v||,rf ct", "U4tc&S(2Py)J\u0001re", 20);
  fail("Expecting exception: RuntimeException");

} catch(RuntimeException e) {
   //
   // syntax error (U4tc&S(2Py)J\u0001re#20)
   //
   verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
}


** It was a parseable test case! 
refined test name is: testParseWithSyntaxError
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: CompilerEnvirons arg0 = new CompilerEnvirons();
DefaultErrorReporter arg1 = DefaultErrorReporter.instance;
Parser parser = new Parser(arg0, arg1);
ScriptOrFnNode parse = parser.parse("factory == null", "factory == null", 65);
assertEquals("\u0087'\u0007factory\f*Q\u0001", parser.getEncodedSource());
assertEquals(65, parse.getEndLineno());


** It was a parseable test case! 
refined test name is: testParseValidJavaScriptExpression
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: CompilerEnvirons arg0 = new CompilerEnvirons();
DefaultErrorReporter arg1 = DefaultErrorReporter.instance;
Parser parser = new Parser(arg0, arg1);
// Undeclared exception!
try { 
  parser.parse("Bfa<=6!r4TUT{{8", "'YGfpGJikZy", (-791));
  fail("Expecting exception: IllegalArgumentException");

} catch(IllegalArgumentException e) {
   //
   // -791
   //
   verifyException("org.mozilla.javascript.RhinoException", e);
}


** It was a parseable test case! 
refined test name is: parseInvalidInputThrowsIllegalArgumentException
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: CompilerEnvirons arg0 = new CompilerEnvirons();
DefaultErrorReporter arg1 = DefaultErrorReporter.instance;
Parser parser = new Parser(arg0, arg1);
// Undeclared exception!
try { 
  parser.parse("PAE>rV*b36>*vev", "PAE>rV*b36>*vev", 46);
  fail("Expecting exception: RuntimeException");

} catch(RuntimeException e) {
   //
   // illegal character (PAE>rV*b36>*vev#46)
   //
   verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
}


** It was a parseable test case! 
refined test name is: testInvalidInputThrowsException
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: CompilerEnvirons arg0 = new CompilerEnvirons();
Parser parser = new Parser(arg0, (ErrorReporter) null);
// Undeclared exception!
try { 
  parser.parse("gv18Yz>=", "gv18Yz>=", (-5428));
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.mozilla.javascript.Parser", e);
}


** It was a parseable test case! 
refined test name is: testParseWithInvalidInputStringAndPosition
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: CompilerEnvirons arg0 = new CompilerEnvirons();
DefaultErrorReporter arg1 = DefaultErrorReporter.instance;
Parser parser = new Parser(arg0, arg1);
// Undeclared exception!
try { 
  parser.parse("Z<<ED O4hRufFz@G", "Z<<ED O4hRufFz@G", (-1));
  fail("Expecting exception: RuntimeException");

} catch(RuntimeException e) {
   //
   // missing ; before statement
   //
   verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
}


** It was a parseable test case! 
refined test name is: testUndeclaredExceptionThrownByParser
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: CompilerEnvirons arg0 = new CompilerEnvirons();
Parser parser = new Parser(arg0, (ErrorReporter) null);
// Undeclared exception!
try { 
  parser.parse("a/{}]u/c,!vtJqY;P/S", "$qM", 85);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.mozilla.javascript.Parser", e);
}


** It was a parseable test case! 
refined test name is: testParseThrowsNullPointerExceptionOnInvalidScript
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: CompilerEnvirons arg0 = new CompilerEnvirons();
DefaultErrorReporter arg1 = DefaultErrorReporter.instance;
Parser parser = new Parser(arg0, arg1);
// Undeclared exception!
try { 
  parser.parse("RDxf%C[", "RDxf%C[", 2646);
  fail("Expecting exception: RuntimeException");

} catch(RuntimeException e) {
   //
   // Unexpected end of file (RDxf%C[#2646)
   //
   verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
}


** It was a parseable test case! 
refined test name is: testUnexpectedEndOfFile
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: CompilerEnvirons arg0 = new CompilerEnvirons();
Context enter = Context.enter();
ErrorReporter arg1 = enter.getErrorReporter();
Parser parser = new Parser(arg0, arg1);
// Undeclared exception!
try { 
  parser.parse("+Ag1ozs'D}Vt$]TJs", (String) null, 82);
  fail("Expecting exception: RuntimeException");

} catch(RuntimeException e) {
   //
   // unterminated string literal
   //
   verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
}


** It was a parseable test case! 
refined test name is: testUnterminatedStringLiteral
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: CompilerEnvirons arg0 = new CompilerEnvirons();
DefaultErrorReporter arg1 = DefaultErrorReporter.instance;
Parser parser = new Parser(arg0, arg1);
// Undeclared exception!
try { 
  parser.parse("-IxXy5O+!>", "-IxXy5O+!>", 122);
  fail("Expecting exception: RuntimeException");

} catch(RuntimeException e) {
   //
   // syntax error (-IxXy5O+!>#122)
   //
   verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
}


** It was a parseable test case! 
refined test name is: testInvalidInputThrowsRuntimeException
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: DefaultErrorReporter arg1 = DefaultErrorReporter.instance;
CompilerEnvirons arg0 = new CompilerEnvirons();
Parser parser = new Parser(arg0, arg1);
// Undeclared exception!
try { 
  parser.parse("6+~ .4`d", "6+~ .4`d", (-1468));
  fail("Expecting exception: IllegalArgumentException");

} catch(IllegalArgumentException e) {
   //
   // -1468
   //
   verifyException("org.mozilla.javascript.RhinoException", e);
}


** It was a parseable test case! 
refined test name is: testParseWithIllegalArgumentException
* Compiling Tests
refined test name is: testParseInvalidExpression
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: CompilerEnvirons arg0 = new CompilerEnvirons();
DefaultErrorReporter arg1 = DefaultErrorReporter.instance;
Parser parser = new Parser(arg0, arg1);
ScriptOrFnNode parse = parser.parse("delete myFile", "delete myFile", 200);
assertEquals("\u0087\u001F'\u0006myFileQ\u0001", parser.getEncodedSource());
assertEquals(200, parse.getLineno());


** It was a parseable test case! 
refined test name is: testParserEncodeSourceAndGetLineNumber
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: CompilerEnvirons arg0 = new CompilerEnvirons();
Parser parser = new Parser(arg0, (ErrorReporter) null);
// Undeclared exception!
try { 
  parser.parse("0%E&++", "K#_@+%8y", 4758);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.mozilla.javascript.Parser", e);
}


** It was a parseable test case! 
refined test name is: testParseWithNullSourceCodeThrowsNPE
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: CompilerEnvirons arg0 = new CompilerEnvirons();
DefaultErrorReporter arg1 = DefaultErrorReporter.instance;
Parser parser = new Parser(arg0, arg1);
// Undeclared exception!
try { 
  parser.parse("--", "?", 85);
  fail("Expecting exception: RuntimeException");

} catch(RuntimeException e) {
   //
   // Unexpected end of file (?#85)
   //
   verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
}


** It was a parseable test case! 
refined test name is: testUnexpectedEOF
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: CompilerEnvirons arg0 = new CompilerEnvirons();
Parser parser = new Parser(arg0, (ErrorReporter) null);
// Undeclared exception!
try { 
  parser.parse("void ", "XP:iUxw*Y>Rp7", 1036);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.mozilla.javascript.Parser", e);
}


** It was a parseable test case! 
refined test name is: testParseWithInvalidInputThrowsNPE
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: CompilerEnvirons arg0 = new CompilerEnvirons();
arg0.setXmlAvailable(false);
Parser parser = new Parser(arg0, (ErrorReporter) null);
// Undeclared exception!
try { 
  parser.parse("<><7T4#FGD3mCwE=", "msg.destruct.assign.no.init", (-64));
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.mozilla.javascript.Parser", e);
}


** It was a parseable test case! 
refined test name is: testInvalidSyntaxThrowsException
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: CompilerEnvirons arg0 = new CompilerEnvirons();
DefaultErrorReporter arg1 = DefaultErrorReporter.instance;
Parser parser = new Parser(arg0, arg1);
// Undeclared exception!
try { 
  parser.parse("FXl8R9--jenv[;09", "FXl8R9--jenv[;09", 404);
  fail("Expecting exception: RuntimeException");

} catch(RuntimeException e) {
   //
   // missing ; before statement (FXl8R9--jenv[;09#404)
   //
   verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
}


** It was a parseable test case! 
refined test name is: testParsemissingSemicolonBeforeStatement
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: DefaultErrorReporter arg1 = DefaultErrorReporter.instance;
CompilerEnvirons arg0 = new CompilerEnvirons();
Parser parser = new Parser(arg0, arg1);
ScriptOrFnNode parse = parser.parse("c()", "msg.no.paren.for.ctrl", 39);
assertEquals("\u0087'\u0001cVWQ\u0001", parser.getEncodedSource());
assertEquals(39, parse.getBaseLineno());


** It was a parseable test case! 
refined test name is: testParseFunctionCall
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: CompilerEnvirons arg0 = new CompilerEnvirons();
Parser parser = new Parser(arg0, (ErrorReporter) null);
ScriptOrFnNode parse = parser.parse("sin(x) * 2 + cos(y)", "x_123", 5);
assertEquals("\u0087'\u0003sinV'\u0001xW\u0017(S\u0002\u0015'\u0003cosV'\u0001yWQ\u0001", parser.getEncodedSource());
assertEquals(5, parse.getEndLineno());


** It was a parseable test case! 
refined test name is: testParserParseExpressionWithVariables
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: CompilerEnvirons arg0 = new CompilerEnvirons();
DefaultErrorReporter arg1 = DefaultErrorReporter.instance;
Parser parser = new Parser(arg0, arg1);
// Undeclared exception!
try { 
  parser.parse("nYf(3, ;aQ9*3Aqe{m", "nYf(3, ;aQ9*3Aqe{m", 120);
  fail("Expecting exception: RuntimeException");

} catch(RuntimeException e) {
   //
   // syntax error (nYf(3, ;aQ9*3Aqe{m#120)
   //
   verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
}


** It was a parseable test case! 
refined test name is: testParserThrowsSyntaxErrorForInvalidInput
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: DefaultErrorReporter arg1 = DefaultErrorReporter.instance;
CompilerEnvirons arg0 = new CompilerEnvirons();
Parser parser = new Parser(arg0, arg1);
// Undeclared exception!
try { 
  parser.parse("c..", "msg.no.paren.for.ctrl", 39);
  fail("Expecting exception: RuntimeException");

} catch(RuntimeException e) {
   //
   // missing name after . operator (msg.no.paren.for.ctrl#39)
   //
   verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
}


** It was a parseable test case! 
refined test name is: testParserThrowsCorrectException
* Compiling Tests
refined test name is: testParserWithUndeclaredExceptionThrown
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: CompilerEnvirons arg0 = new CompilerEnvirons();
DefaultErrorReporter arg1 = DefaultErrorReporter.instance;
Parser parser = new Parser(arg0, arg1);
// Undeclared exception!
try { 
  parser.parse("msg.bad.throw.eol", "msg.bad.throw.eol", (-478));
  fail("Expecting exception: IllegalStateException");

} catch(IllegalStateException e) {
   //
   // FAILED ASSERTION
   //
   verifyException("org.mozilla.javascript.Kit", e);
}


** It was a parseable test case! 
refined test name is: testParseThrowsIllegalStateException
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: CompilerEnvirons arg0 = new CompilerEnvirons();
DefaultErrorReporter arg1 = DefaultErrorReporter.instance;
Parser parser = new Parser(arg0, arg1);
// Undeclared exception!
try { 
  parser.parse("O[yE8.@:XCV^4\"", "O[yE8.@:XCV^4\"", 2087);
  fail("Expecting exception: RuntimeException");

} catch(RuntimeException e) {
   //
   // missing name after .@ (O[yE8.@:XCV^4\"#2087)
   //
   verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
}


** It was a parseable test case! 
refined test name is: testParserParseMissingName
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: CompilerEnvirons arg0 = new CompilerEnvirons();
DefaultErrorReporter arg1 = DefaultErrorReporter.instance;
Parser parser = new Parser(arg0, arg1);
// Undeclared exception!
try { 
  parser.parse(" @*b@e+Zb([48%oywd", (String) null, 29);
  fail("Expecting exception: RuntimeException");

} catch(RuntimeException e) {
   //
   // missing ; before statement
   //
   verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
}


** It was a parseable test case! 
refined test name is: testParseWithInvalidInputThrowsException
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: CompilerEnvirons arg0 = new CompilerEnvirons();
DefaultErrorReporter arg1 = DefaultErrorReporter.instance;
Parser parser = new Parser(arg0, arg1);
// Undeclared exception!
try { 
  parser.parse("@ [i$", "@ [i$", (-1746));
  fail("Expecting exception: IllegalArgumentException");

} catch(IllegalArgumentException e) {
   //
   // -1746
   //
   verifyException("org.mozilla.javascript.RhinoException", e);
}


** It was a parseable test case! 
refined test name is: testParseInputWithSyntaxError
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: CompilerEnvirons arg0 = new CompilerEnvirons();
Parser parser = new Parser(arg0, (ErrorReporter) null);
// Undeclared exception!
try { 
  parser.parse("/Qh{<~x:pdb!y/!bY", "_NMsJvfHh.(", 2613);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.mozilla.javascript.Parser", e);
}


** It was a parseable test case! 
refined test name is: testParseWithNullPointerException
* Compiling Tests
refined test name is: testParserThrowsNullPointerExceptionOnNullInput
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: CompilerEnvirons arg0 = new CompilerEnvirons();
ErrorReporter arg1 = arg0.getErrorReporter();
Parser parser = new Parser(arg0, arg1);
// Undeclared exception!
try { 
  parser.parse(" /= ", "language version 1.0", 0);
  fail("Expecting exception: RuntimeException");

} catch(RuntimeException e) {
   //
   // unterminated regular expression literal
   //
   verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
}


** It was a parseable test case! 
refined test name is: testInvalidAssignmentOperators
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: CompilerEnvirons arg0 = new CompilerEnvirons();
DefaultErrorReporter arg1 = DefaultErrorReporter.instance;
Parser parser = new Parser(arg0, arg1);
// Undeclared exception!
try { 
  parser.parse("class MyClass { public static void main(String[] args) { System.out.println(\"Hello World\"); } }", "MyClass.java", 103);
  fail("Expecting exception: RuntimeException");

} catch(RuntimeException e) {
   //
   // identifier is a reserved word (MyClass.java#103)
   //
   verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
}


** It was a parseable test case! 
refined test name is: testParserThrowsExceptionOnReservedWord
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: CompilerEnvirons arg0 = new CompilerEnvirons();
Parser parser = new Parser(arg0, (ErrorReporter) null);
// Undeclared exception!
try { 
  parser.parse("[qC,", "[qC,", (-89));
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.mozilla.javascript.Parser", e);
}


** It was a parseable test case! 
refined test name is: testParseWithNullPointerException
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: CompilerEnvirons arg0 = new CompilerEnvirons();
DefaultErrorReporter arg1 = DefaultErrorReporter.instance;
Parser parser = new Parser(arg0, arg1);
// Undeclared exception!
try { 
  parser.parse("l?[]y", ">`\r<0'(x.;/*B;", (-1216));
  fail("Expecting exception: IllegalArgumentException");

} catch(IllegalArgumentException e) {
   //
   // -1216
   //
   verifyException("org.mozilla.javascript.RhinoException", e);
}


** It was a parseable test case! 
refined test name is: testParseWithInvalidRegex
* Compiling Tests
refined test name is: testParseWithInvalidSyntax
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: CompilerEnvirons arg0 = new CompilerEnvirons();
Parser parser = new Parser(arg0, (ErrorReporter) null);
// Undeclared exception!
try { 
  parser.parse("R-{", "R-{", 104);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.mozilla.javascript.Parser", e);
}


** It was a parseable test case! 
refined test name is: testParseWithNullStringThrowsNullPointerException
* Compiling Tests
refined test name is: testParseWithNullInputStringThrowsNPE
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: CompilerEnvirons arg0 = new CompilerEnvirons();
ErrorReporter arg1 = arg0.getErrorReporter();
Parser parser = new Parser(arg0, arg1);
// Undeclared exception!
try { 
  parser.parse("J^!{9 ", "J^!{9 ", 893);
  fail("Expecting exception: RuntimeException");

} catch(RuntimeException e) {
   //
   // missing : after property id (J^!{9 #893)
   //
   verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
}


** It was a parseable test case! 
refined test name is: testInvalidExpression
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: CompilerEnvirons arg0 = new CompilerEnvirons();
Parser parser = new Parser(arg0, (ErrorReporter) null);
// Undeclared exception!
try { 
  parser.parse("F|[$je#N]&r=lK", "F|[$je#N]&r=lK", (-195));
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.mozilla.javascript.Parser", e);
}


** It was a parseable test case! 
refined test name is: testInvalidInputThrowsNullPointerException
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: CompilerEnvirons arg0 = new CompilerEnvirons();
ErrorReporter arg1 = arg0.getErrorReporter();
Parser parser = new Parser(arg0, arg1);
parser.parse("true", "@ LAi$", 1326);
assertEquals("\u0087-Q\u0001", parser.getEncodedSource());


** It was a parseable test case! 
refined test name is: testParseWithNonNullEncodingAndLineNumber
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: CompilerEnvirons arg0 = new CompilerEnvirons();
ErrorReporter arg1 = arg0.getErrorReporter();
Parser parser = new Parser(arg0, arg1);
parser.parse("false", "@ LAi$", 1326);
assertEquals("\u0087,Q\u0001", parser.getEncodedSource());


** It was a parseable test case! 
refined test name is: testValidInputString
* Compiling Tests
refined test name is: testParseInputStringFalse
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: DefaultErrorReporter arg1 = DefaultErrorReporter.instance;
Parser parser = new Parser((CompilerEnvirons) null, arg1);
Decompiler createDecompiler = parser.createDecompiler((CompilerEnvirons) null);
assertEquals(3, Decompiler.CASE_GAP_PROP);


** It was a parseable test case! 
refined test name is: testConstantValueForCaseGap
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: CompilerEnvirons arg0 = new CompilerEnvirons();
DefaultErrorReporter arg1 = DefaultErrorReporter.instance;
Parser parser = new Parser(arg0, arg1);
parser.parse("get", ":H&3o7,iy! ", 0);
int currentLineNumber = parser.getCurrentLineNumber();
assertEquals(0, currentLineNumber);
assertEquals("\u0087'\u0003getQ\u0001", parser.getEncodedSource());


** It was a parseable test case! 
refined test name is: testParserOutputForValidInputString
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: CompilerEnvirons arg0 = new CompilerEnvirons();
ErrorReporter arg1 = arg0.getErrorReporter();
Parser parser = new Parser(arg0, arg1);
boolean insideFunction = parser.insideFunction();
assertFalse(insideFunction);


** It was a parseable test case! 
refined test name is: testParserNotInsideFunction
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: CompilerEnvirons arg0 = new CompilerEnvirons();
DefaultErrorReporter arg1 = DefaultErrorReporter.instance;
Parser parser = new Parser(arg0, arg1);
// Undeclared exception!
try { 
  parser.parse("ZoqtnpI[qf]", "ZoqtnpI[qf]", (-1));
  fail("Expecting exception: IllegalStateException");

} catch(IllegalStateException e) {
   //
   // FAILED ASSERTION
   //
   verifyException("org.mozilla.javascript.Kit", e);
}


** It was a parseable test case! 
refined test name is: testInvalidRegularExpression
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: CompilerEnvirons arg0 = new CompilerEnvirons();
Context currentContext = Context.getCurrentContext();
ErrorReporter arg1 = currentContext.getErrorReporter();
Parser parser = new Parser(arg0, arg1);
// Undeclared exception!
try { 
  parser.addError("Syntax Error: Unexpected token 'error reporter'");
  fail("Expecting exception: RuntimeException");

} catch(RuntimeException e) {
   //
   // no message resource found for message property Syntax Error: Unexpected token 'error reporter'
   //
   verifyException("org.mozilla.javascript.ScriptRuntime$DefaultMessageProvider", e);
}


** It was a parseable test case! 
refined test name is: testParserAddErrorThrowsRuntimeException
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: CompilerEnvirons arg0 = new CompilerEnvirons();
DefaultErrorReporter arg1 = DefaultErrorReporter.instance;
Parser parser = new Parser(arg0, arg1);
// Undeclared exception!
try { 
  parser.popScope();
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.mozilla.javascript.Parser", e);
}


** It was a parseable test case! 
refined test name is: testPopScopeThrowsNPEWhenNoScopesExist
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: CompilerEnvirons arg0 = new CompilerEnvirons();
DefaultErrorReporter arg1 = DefaultErrorReporter.instance;
Parser parser = new Parser(arg0, arg1);
// Undeclared exception!
try { 
  parser.reportError("TDp%h2$!V.b");
  fail("Expecting exception: RuntimeException");

} catch(RuntimeException e) {
   //
   // no message resource found for message property TDp%h2$!V.b
   //
   verifyException("org.mozilla.javascript.ScriptRuntime$DefaultMessageProvider", e);
}


** It was a parseable test case! 
refined test name is: testReportErrorWithInvalidMessage
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 02:04:32.240 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar185825025601670585.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
[MASTER] 02:04:32.264 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar185825025601670585.jar
* Compiling Tests
[MASTER] 02:04:32.325 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar185825025601670585.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
[MASTER] 02:04:32.328 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar185825025601670585.jar
* Compiling Tests
[MASTER] 02:04:32.404 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar185825025601670585.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 02:04:32.405 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar185825025601670585.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 02:04:32.463 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar185825025601670585.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 02:04:32.464 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar185825025601670585.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 02:04:32.512 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar185825025601670585.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 02:04:32.513 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar185825025601670585.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 02:04:32.556 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar185825025601670585.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 02:04:32.557 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar185825025601670585.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 02:04:32.603 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar185825025601670585.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 02:04:32.604 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar185825025601670585.jar
[MASTER] 02:04:32.649 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar185825025601670585.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 02:04:32.650 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar185825025601670585.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 02:04:32.728 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar185825025601670585.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 02:04:32.729 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar185825025601670585.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 02:04:32.768 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar185825025601670585.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 02:04:32.769 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar185825025601670585.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 02:04:32.811 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar185825025601670585.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 02:04:32.811 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar185825025601670585.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 02:04:32.860 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar185825025601670585.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 02:04:32.861 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar185825025601670585.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 02:04:32.922 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar185825025601670585.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 02:04:32.923 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar185825025601670585.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 02:04:32.976 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar185825025601670585.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 02:04:32.976 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar185825025601670585.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 02:04:33.018 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar185825025601670585.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 02:04:33.019 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar185825025601670585.jar
[MASTER] 02:04:33.072 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar185825025601670585.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 02:04:33.073 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar185825025601670585.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 02:04:33.125 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar185825025601670585.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 02:04:33.126 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar185825025601670585.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 02:04:33.170 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar185825025601670585.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 02:04:33.171 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar185825025601670585.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 02:04:33.218 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar185825025601670585.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 02:04:33.219 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar185825025601670585.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 02:04:33.266 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar185825025601670585.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 02:04:33.269 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar185825025601670585.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
Going to execute: handleTestsThatAreUnstable
[MASTER] 02:04:33.310 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar185825025601670585.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 02:04:33.311 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar185825025601670585.jar
* Compiling Tests
[MASTER] 02:04:33.356 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar185825025601670585.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 02:04:33.357 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar185825025601670585.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 02:04:33.411 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar185825025601670585.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 02:04:33.412 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar185825025601670585.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 02:04:33.466 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar185825025601670585.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 02:04:33.467 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar185825025601670585.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 02:04:33.518 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar185825025601670585.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 02:04:33.519 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar185825025601670585.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 02:04:33.616 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar185825025601670585.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 02:04:33.617 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar185825025601670585.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 02:04:33.667 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar185825025601670585.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 02:04:33.668 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar185825025601670585.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 02:04:33.717 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar185825025601670585.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 02:04:33.717 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar185825025601670585.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 02:04:33.768 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar185825025601670585.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 02:04:33.769 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar185825025601670585.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 02:04:33.825 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar185825025601670585.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 02:04:33.825 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar185825025601670585.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 02:04:33.882 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar185825025601670585.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 02:04:33.883 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar185825025601670585.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 02:04:33.932 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar185825025601670585.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 02:04:33.933 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar185825025601670585.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 02:04:33.985 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar185825025601670585.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 02:04:33.987 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar185825025601670585.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 02:04:34.046 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar185825025601670585.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 02:04:34.047 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar185825025601670585.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 02:04:34.104 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar185825025601670585.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 02:04:34.104 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar185825025601670585.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 02:04:34.170 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar185825025601670585.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 02:04:34.171 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar185825025601670585.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
Going to execute: handleTestsThatAreUnstable
[MASTER] 02:04:34.229 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar185825025601670585.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 02:04:34.230 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar185825025601670585.jar
* Compiling Tests
[MASTER] 02:04:34.280 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar185825025601670585.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 02:04:34.281 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar185825025601670585.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 02:04:34.343 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar185825025601670585.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
[MASTER] 02:04:34.344 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar185825025601670585.jar
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 02:04:34.412 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar185825025601670585.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 02:04:34.418 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar185825025601670585.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 02:04:34.477 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar185825025601670585.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 02:04:34.478 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar185825025601670585.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 02:04:34.547 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar185825025601670585.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 02:04:34.547 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar185825025601670585.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 02:04:34.609 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar185825025601670585.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 02:04:34.609 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar185825025601670585.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 02:04:34.670 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar185825025601670585.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 02:04:34.671 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar185825025601670585.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 02:04:34.738 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar185825025601670585.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 02:04:34.739 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar185825025601670585.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 02:04:34.802 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar185825025601670585.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 02:04:34.802 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar185825025601670585.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 02:04:34.871 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar185825025601670585.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 02:04:34.871 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar185825025601670585.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 02:04:34.939 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar185825025601670585.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 02:04:34.939 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar185825025601670585.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 02:04:34.994 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar185825025601670585.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
[MASTER] 02:04:34.994 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar185825025601670585.jar
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 02:04:35.047 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar185825025601670585.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 02:04:35.047 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar185825025601670585.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 02:04:35.108 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar185825025601670585.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 02:04:35.109 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar185825025601670585.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 02:04:35.192 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar185825025601670585.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 02:04:35.193 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar185825025601670585.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 02:04:35.288 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar185825025601670585.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 02:04:35.291 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar185825025601670585.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 02:04:35.355 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar185825025601670585.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 02:04:35.355 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar185825025601670585.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 02:04:35.418 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar185825025601670585.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 02:04:35.419 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar185825025601670585.jar
[MASTER] 02:04:35.463 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar185825025601670585.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 02:04:35.463 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar185825025601670585.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 02:04:35.518 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar185825025601670585.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 02:04:35.519 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar185825025601670585.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 02:04:35.589 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar185825025601670585.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 02:04:35.590 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar185825025601670585.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 02:04:35.670 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar185825025601670585.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 02:04:35.671 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar185825025601670585.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 02:04:35.923 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar185825025601670585.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 02:04:35.924 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar185825025601670585.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 02:04:35.992 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar185825025601670585.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 02:04:35.992 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar185825025601670585.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 02:04:36.056 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar185825025601670585.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 02:04:36.057 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar185825025601670585.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 02:04:36.098 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar185825025601670585.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 02:04:36.099 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar185825025601670585.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 02:04:36.137 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar185825025601670585.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 02:04:36.138 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar185825025601670585.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 02:04:36.164 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar185825025601670585.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 02:04:36.165 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar185825025601670585.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 02:04:36.195 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar185825025601670585.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 02:04:36.195 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar185825025601670585.jar
[MASTER] 02:04:36.229 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar185825025601670585.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 02:04:36.230 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar185825025601670585.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 02:04:36.271 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar185825025601670585.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 02:04:36.271 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar185825025601670585.jar
[MASTER] 02:04:36.302 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar185825025601670585.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 02:04:36.302 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar185825025601670585.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 02:04:36.336 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar185825025601670585.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 02:04:36.337 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar185825025601670585.jar
[MASTER] 02:04:36.373 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar185825025601670585.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 02:04:36.373 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar185825025601670585.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 13 called: 0 to improve: false
** Write a test suite: 16 called: 1 to improve: false
** Write a test suite: 22 called: 2 to improve: false
** Write a test suite: 23 called: 3 to improve: false
** Write a test suite: 24 called: 4 to improve: false
** Write a test suite: 39 called: 5 to improve: false
** Write a test suite: 49 called: 6 to improve: false
** Write a test suite: 54 called: 7 to improve: false
** Write a test suite: 58 called: 8 to improve: false
** Write a test suite: 59 called: 9 to improve: false
** Write a test suite: 63 called: 10 to improve: false
[MASTER] 02:04:37.366 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar185825025601670585.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 02:04:37.367 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar185825025601670585.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 7 called: 0 to improve: false
** Write a test suite: 11 called: 1 to improve: false
** Write a test suite: 12 called: 2 to improve: false
** Write a test suite: 16 called: 3 to improve: false
** Write a test suite: 21 called: 4 to improve: false
** Write a test suite: 31 called: 5 to improve: false
** Write a test suite: 46 called: 6 to improve: false
** Write a test suite: 47 called: 7 to improve: false
** Write a test suite: 48 called: 8 to improve: false
** Write a test suite: 54 called: 9 to improve: false
** Write a test suite: 57 called: 10 to improve: false
[MASTER] 02:04:38.279 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar185825025601670585.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 02:04:38.280 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar185825025601670585.jar
[MASTER] 02:04:39.235 [logback-1] WARN  TimeController - Already entered in phase: INLINING. This will mess up the timing calculations.
* test suite isTestSuite: 87
Test 0: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Parser parser = new Parser(compilerEnvirons, (ErrorReporter) null);
// Undeclared exception!
try { 
  parser.parse(";@Rv Iu<K&~e5Tcc?T", ";@Rv Iu<K&~e5Tcc?T", (-1765));
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 1: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Parser parser = new Parser(compilerEnvirons, (ErrorReporter) null);
parser.getEncodedSource();
Test 2: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Parser parser = new Parser(compilerEnvirons, (ErrorReporter) null);
// Undeclared exception!
try { 
  parser.parse("while", "while", 722);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 3: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
// Undeclared exception!
try { 
  parser.parse("DN^!{m*Wu", (String) null, 1223);
  fail("Expecting exception: RuntimeException");

} catch(RuntimeException e) {
   //
   // missing : after property id
   //
   verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
}

Test 4: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)compilerEnvirons.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
StringReader stringReader = new StringReader("''lj/vX?gWo");
// Undeclared exception!
try { 
  parser.parse((Reader) stringReader, "''lj/vX?gWo", 52);
  fail("Expecting exception: RuntimeException");

} catch(RuntimeException e) {
   //
   // missing ; before statement (''lj/vX?gWo#52)
   //
   verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
}

Test 5: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
parser.addStrictWarning("error reporter", "error reporter");
Test 6: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
parser.parse("u\n", "u\n", 1677);
Test 7: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
compilerEnvirons.setXmlAvailable(false);
Parser parser = new Parser(compilerEnvirons, (ErrorReporter) null);
// Undeclared exception!
try { 
  parser.parse("_NMsJvfHh.(", "_NMsJvfHh.(", 4617);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 8: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Parser parser = new Parser(compilerEnvirons, (ErrorReporter) null);
ScriptOrFnNode parse = parser.parse("msg.no.brace.catchblock", "J^(2<", 21);
parser.pushScope(parse);
// Undeclared exception!
try { 
  parser.pushScope(parse);
  fail("Expecting exception: IllegalStateException");

} catch(IllegalStateException e) {
   //
   // FAILED ASSERTION
   //
   verifyException("org.mozilla.javascript.Kit", e);
}

Test 9: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
// Undeclared exception!
try { 
  parser.parse("function", "function", 32);
  fail("Expecting exception: RuntimeException");

} catch(RuntimeException e) {
   //
   // missing ( before function parameters. (function#32)
   //
   verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
}

Test 10: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
parser.parse("\n", "\n", 145);
Test 11: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
// Undeclared exception!
try { 
  parser.parse("{sjUaI", "TypUEro: ", (-667));
  fail("Expecting exception: IllegalArgumentException");

} catch(IllegalArgumentException e) {
   //
   // -667
   //
   verifyException("org.mozilla.javascript.RhinoException", e);
}

Test 12: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
// Undeclared exception!
try { 
  parser.parse("{}D\"CFDjGM:Hh_zD1*D", "{}D\"CFDjGM:Hh_zD1*D", 46);
  fail("Expecting exception: RuntimeException");

} catch(RuntimeException e) {
   //
   // unterminated string literal ({}D\"CFDjGM:Hh_zD1*D#46)
   //
   verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
}

Test 13: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
// Undeclared exception!
try { 
  parser.parse("break", "break", 46);
  fail("Expecting exception: RuntimeException");

} catch(RuntimeException e) {
   //
   // unlabelled break must be inside loop or switch (break#46)
   //
   verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
}

Test 14: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Parser parser = new Parser(compilerEnvirons, (ErrorReporter) null);
// Undeclared exception!
try { 
  parser.parse("return", "return", 101);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 15: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)compilerEnvirons.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
// Undeclared exception!
try { 
  parser.parse("throw ", "throw ", 3420);
  fail("Expecting exception: RuntimeException");

} catch(RuntimeException e) {
   //
   // Unexpected end of file (throw #3420)
   //
   verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
}

Test 16: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
StringReader stringReader = new StringReader("try ");
DefaultErrorReporter errorReporter = (DefaultErrorReporter)compilerEnvirons.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
// Undeclared exception!
try { 
  parser.parse((Reader) stringReader, (String) null, (-443));
  fail("Expecting exception: IllegalArgumentException");

} catch(IllegalArgumentException e) {
   //
   // -443
   //
   verifyException("org.mozilla.javascript.RhinoException", e);
}

Test 17: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
// Undeclared exception!
try { 
  parser.parse("if ", "if ", 152);
  fail("Expecting exception: RuntimeException");

} catch(RuntimeException e) {
   //
   // missing ( before condition (if #152)
   //
   verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
}

Test 18: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter forEval = (DefaultErrorReporter)DefaultErrorReporter.forEval((ErrorReporter) null);
Parser parser = new Parser(compilerEnvirons, forEval);
// Undeclared exception!
try { 
  parser.parse("switch", "_NMsJvfHh.(", 32);
  fail("Expecting exception: RuntimeException");

} catch(RuntimeException e) {
   //
   // SyntaxError: missing ( before switch expression (_NMsJvfHh.(#32)
   //
   verifyException("org.mozilla.javascript.ScriptRuntime", e);
}

Test 19: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
// Undeclared exception!
try { 
  parser.parse("default", "IJ3aritOhZ2{7;9}`6", 157);
  fail("Expecting exception: RuntimeException");

} catch(RuntimeException e) {
   //
   // not a valid default namespace statement. Syntax is: default xml namespace = EXPRESSION; (IJ3aritOhZ2{7;9}`6#157)
   //
   verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
}

Test 20: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
// Undeclared exception!
try { 
  parser.parse("for ", " ee38HK-Q|U", 1424);
  fail("Expecting exception: RuntimeException");

} catch(RuntimeException e) {
   //
   // missing ( after for ( ee38HK-Q|U#1424)
   //
   verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
}

Test 21: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)compilerEnvirons.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
StringReader stringReader = new StringReader("var ");
// Undeclared exception!
try { 
  parser.parse((Reader) stringReader, "msg.bad.var", 310);
  fail("Expecting exception: RuntimeException");

} catch(RuntimeException e) {
   //
   // missing variable name (msg.bad.var#310)
   //
   verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
}

Test 22: 
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
// Undeclared exception!
try { 
  parser.parse("with", "with", (-3800));
  fail("Expecting exception: IllegalArgumentException");

} catch(IllegalArgumentException e) {
   //
   // -3800
   //
   verifyException("org.mozilla.javascript.RhinoException", e);
}

Test 23: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Parser parser = new Parser(compilerEnvirons, (ErrorReporter) null);
// Undeclared exception!
try { 
  parser.parse("const", "<QQnrsx6G0-MXbf", 159);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 24: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
// Undeclared exception!
try { 
  parser.parse("aa:{8+xqCIAm`dF!#", "aa:{8+xqCIAm`dF!#", (-1746));
  fail("Expecting exception: IllegalArgumentException");

} catch(IllegalArgumentException e) {
   //
   // -1746
   //
   verifyException("org.mozilla.javascript.RhinoException", e);
}

Test 25: 
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
parser.parse("KGP:V6:rV", "KGP:V6:rV", 24);
Test 26: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
// Undeclared exception!
try { 
  parser.parse("zE}ysL#&{i<>+m", "zE}ysL#&{i<>+m", 103);
  fail("Expecting exception: RuntimeException");

} catch(RuntimeException e) {
   //
   // syntax error (zE}ysL#&{i<>+m#103)
   //
   verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
}

Test 27: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
StringReader stringReader = new StringReader("ayuY");
parser.parse((Reader) stringReader, "if ", 152);
parser.defineSymbol(152, false, "ayuY");
Test 28: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
StringReader stringReader = new StringReader("hor");
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
parser.parse((Reader) stringReader, "hor", 160);
parser.defineSymbol(86, false, "E+t");
// Undeclared exception!
try { 
  parser.defineSymbol(1, false, "E+t");
  fail("Expecting exception: IllegalStateException");

} catch(IllegalStateException e) {
   //
   // FAILED ASSERTION
   //
   verifyException("org.mozilla.javascript.Kit", e);
}

Test 29: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
StringReader stringReader = new StringReader("F&M");
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
parser.parse((Reader) stringReader, "language version", 10);
parser.defineSymbol(108, false, "error reporter");
Test 30: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
StringReader stringReader = new StringReader("F&M");
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
parser.parse((Reader) stringReader, "fontcolor", 50);
parser.defineSymbol(153, false, "language version");
Test 31: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
StringReader stringReader = new StringReader("taK");
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
parser.parse((Reader) stringReader, "S1a/,G/{>,\"{rmtJ=", 121);
parser.defineSymbol(152, true, "ayuY");
Test 32: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
// Undeclared exception!
try { 
  parser.parse("ZMF3_^Px,Z<LRi~", "ZMF3_^Px,Z<LRi~", 126);
  fail("Expecting exception: RuntimeException");

} catch(RuntimeException e) {
   //
   // missing ; before statement (ZMF3_^Px,Z<LRi~#126)
   //
   verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
}

Test 33: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
// Undeclared exception!
try { 
  parser.parse("l?[]y", ">`\r<0'(x.;/*B;", (-1216));
  fail("Expecting exception: IllegalArgumentException");

} catch(IllegalArgumentException e) {
   //
   // -1216
   //
   verifyException("org.mozilla.javascript.RhinoException", e);
}

Test 34: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
// Undeclared exception!
try { 
  parser.parse("v||,rf ct", "U4tc&S(2Py)J\u0001re", 20);
  fail("Expecting exception: RuntimeException");

} catch(RuntimeException e) {
   //
   // syntax error (U4tc&S(2Py)J\u0001re#20)
   //
   verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
}

Test 35: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
StringReader stringReader = new StringReader("F&&M");
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
parser.parse((Reader) stringReader, "language version", 12);
Test 36: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Parser parser = new Parser(compilerEnvirons, (ErrorReporter) null);
// Undeclared exception!
try { 
  parser.parse("F|[$je#N]&r=lK", "F|[$je#N]&r=lK", (-195));
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 37: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
parser.parse("factory == null", "factory == null", 65);
Test 38: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
// Undeclared exception!
try { 
  parser.parse("Bfa<=6!r4TUT{{8", "'YGfpGJikZy", (-791));
  fail("Expecting exception: IllegalArgumentException");

} catch(IllegalArgumentException e) {
   //
   // -791
   //
   verifyException("org.mozilla.javascript.RhinoException", e);
}

Test 39: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Parser parser = new Parser(compilerEnvirons, (ErrorReporter) null);
// Undeclared exception!
try { 
  parser.parse("gv18Yz>=", "gv18Yz>=", (-5428));
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 40: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
// Undeclared exception!
try { 
  parser.parse("Z<<ED O4hRufFz@G", "Z<<ED O4hRufFz@G", (-1));
  fail("Expecting exception: RuntimeException");

} catch(RuntimeException e) {
   //
   // missing ; before statement
   //
   verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
}

Test 41: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Parser parser = new Parser(compilerEnvirons, (ErrorReporter) null);
// Undeclared exception!
try { 
  parser.parse("R-{", "R-{", 104);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 42: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Parser parser = new Parser(compilerEnvirons, (ErrorReporter) null);
// Undeclared exception!
try { 
  parser.parse("a/{}]u/c,!vtJqY;P/S", "$qM", 85);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 43: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Parser parser = new Parser(compilerEnvirons, (ErrorReporter) null);
// Undeclared exception!
try { 
  parser.parse("0%E&++", "K#_@+%8y", 4758);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 44: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
// Undeclared exception!
try { 
  parser.parse("-IxXy5O+!>", "-IxXy5O+!>", 122);
  fail("Expecting exception: RuntimeException");

} catch(RuntimeException e) {
   //
   // syntax error (-IxXy5O+!>#122)
   //
   verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
}

Test 45: 
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
// Undeclared exception!
try { 
  parser.parse("6+~ .4`d", "6+~ .4`d", (-1468));
  fail("Expecting exception: IllegalArgumentException");

} catch(IllegalArgumentException e) {
   //
   // -1468
   //
   verifyException("org.mozilla.javascript.RhinoException", e);
}

Test 46: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
// Undeclared exception!
try { 
  parser.parse("delete ", "delete ", 404);
  fail("Expecting exception: RuntimeException");

} catch(RuntimeException e) {
   //
   // Unexpected end of file (delete #404)
   //
   verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
}

Test 47: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
// Undeclared exception!
try { 
  parser.parse("--", "?", 85);
  fail("Expecting exception: RuntimeException");

} catch(RuntimeException e) {
   //
   // Unexpected end of file (?#85)
   //
   verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
}

Test 48: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Parser parser = new Parser(compilerEnvirons, (ErrorReporter) null);
// Undeclared exception!
try { 
  parser.parse("void ", "XP:iUxw*Y>Rp7", 1036);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 49: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
compilerEnvirons.setXmlAvailable(false);
Parser parser = new Parser(compilerEnvirons, (ErrorReporter) null);
// Undeclared exception!
try { 
  parser.parse("<><7T4#FGD3mCwE=", "msg.destruct.assign.no.init", (-64));
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 50: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
// Undeclared exception!
try { 
  parser.parse("FXl8R9--jenv[;09", "FXl8R9--jenv[;09", 404);
  fail("Expecting exception: RuntimeException");

} catch(RuntimeException e) {
   //
   // missing ; before statement (FXl8R9--jenv[;09#404)
   //
   verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
}

Test 51: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
ContextFactory global = ContextFactory.getGlobal();
Context context = new Context(global);
DefaultErrorReporter errorReporter = (DefaultErrorReporter)context.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
StringReader stringReader = new StringReader("<7T4#FGD3mCwE={fU");
// Undeclared exception!
try { 
  parser.parse((Reader) stringReader, "language version", 12);
  fail("Expecting exception: RuntimeException");

} catch(RuntimeException e) {
   //
   // syntax error (language version#12)
   //
   verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
}

Test 52: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
// Undeclared exception!
try { 
  parser.parse("z:U()S", "set", 947);
  fail("Expecting exception: RuntimeException");

} catch(RuntimeException e) {
   //
   // missing ; before statement (set#947)
   //
   verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
}

Test 53: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
// Undeclared exception!
try { 
  parser.parse("nYf(3, ;aQ9*3Aqe{m", "nYf(3, ;aQ9*3Aqe{m", 120);
  fail("Expecting exception: RuntimeException");

} catch(RuntimeException e) {
   //
   // syntax error (nYf(3, ;aQ9*3Aqe{m#120)
   //
   verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
}

Test 54: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
// Undeclared exception!
try { 
  parser.parse("O[yE8.@:XCV^4\"", "O[yE8.@:XCV^4\"", 2087);
  fail("Expecting exception: RuntimeException");

} catch(RuntimeException e) {
   //
   // missing name after .@ (O[yE8.@:XCV^4\"#2087)
   //
   verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
}

Test 55: 
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
// Undeclared exception!
try { 
  parser.parse("c..", "msg.no.paren.for.ctrl", 39);
  fail("Expecting exception: RuntimeException");

} catch(RuntimeException e) {
   //
   // missing name after . operator (msg.no.paren.for.ctrl#39)
   //
   verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
}

Test 56: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
// Undeclared exception!
try { 
  parser.parse("msg.bad.throw.eol", "msg.bad.throw.eol", (-478));
  fail("Expecting exception: IllegalStateException");

} catch(IllegalStateException e) {
   //
   // FAILED ASSERTION
   //
   verifyException("org.mozilla.javascript.Kit", e);
}

Test 57: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
// Undeclared exception!
try { 
  parser.parse(" @*b@e+Zb([48%oywd", (String) null, 29);
  fail("Expecting exception: RuntimeException");

} catch(RuntimeException e) {
   //
   // missing ; before statement
   //
   verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
}

Test 58: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
// Undeclared exception!
try { 
  parser.parse("@ [i$", "@ [i$", (-1746));
  fail("Expecting exception: IllegalArgumentException");

} catch(IllegalArgumentException e) {
   //
   // -1746
   //
   verifyException("org.mozilla.javascript.RhinoException", e);
}

Test 59: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Parser parser = new Parser(compilerEnvirons, (ErrorReporter) null);
// Undeclared exception!
try { 
  parser.parse("/Qh{<~x:pdb!y/!bY", "_NMsJvfHh.(", 2613);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 60: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
StringReader stringReader = new StringReader("this");
ContextFactory contextFactory = new ContextFactory();
Context makeContext = contextFactory.makeContext();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)makeContext.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
parser.parse((Reader) stringReader, "[qHC,", 146);
Test 61: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)compilerEnvirons.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
// Undeclared exception!
try { 
  parser.parse(" /= ", "language version", 0);
  fail("Expecting exception: RuntimeException");

} catch(RuntimeException e) {
   //
   // unterminated regular expression literal
   //
   verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
}

Test 62: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
// Undeclared exception!
try { 
  parser.parse("goto", "goto", (-213));
  fail("Expecting exception: IllegalArgumentException");

} catch(IllegalArgumentException e) {
   //
   // -213
   //
   verifyException("org.mozilla.javascript.RhinoException", e);
}

Test 63: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Parser parser = new Parser(compilerEnvirons, (ErrorReporter) null);
// Undeclared exception!
try { 
  parser.parse("[qC,", "[qC,", (-89));
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 64: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
// Undeclared exception!
try { 
  parser.parse("LNp|[mT=hu{\"s:%,", "LNp|[mT=hu{\"s:%,", 1245);
  fail("Expecting exception: RuntimeException");

} catch(RuntimeException e) {
   //
   // missing ] after element list (LNp|[mT=hu{\"s:%,#1245)
   //
   verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
}

Test 65: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)compilerEnvirons.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
// Undeclared exception!
try { 
  parser.parse("J^!{9 ", "J^!{9 ", 893);
  fail("Expecting exception: RuntimeException");

} catch(RuntimeException e) {
   //
   // missing : after property id (J^!{9 #893)
   //
   verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
}

Test 66: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
// Undeclared exception!
try { 
  parser.parse("PAE>rV*b36>*vev", "PAE>rV*b36>*vev", 46);
  fail("Expecting exception: RuntimeException");

} catch(RuntimeException e) {
   //
   // illegal character (PAE>rV*b36>*vev#46)
   //
   verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
}

Test 67: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Context enter = Context.enter();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)enter.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
// Undeclared exception!
try { 
  parser.parse("+Ag1ozs'D}Vt$]TJs", (String) null, 82);
  fail("Expecting exception: RuntimeException");

} catch(RuntimeException e) {
   //
   // unterminated string literal
   //
   verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
}

Test 68: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
// Undeclared exception!
try { 
  parser.parse("RDxf%C[", "RDxf%C[", (-2646));
  fail("Expecting exception: IllegalArgumentException");

} catch(IllegalArgumentException e) {
   //
   // -2646
   //
   verifyException("org.mozilla.javascript.RhinoException", e);
}

Test 69: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)compilerEnvirons.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
parser.parse("false", "@ LAi$", 1326);
Test 70: 
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser((CompilerEnvirons) null, defaultErrorReporter);
parser.createDecompiler((CompilerEnvirons) null);
Test 71: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
StringReader stringReader = new StringReader("$qM");
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
parser.parse((Reader) stringReader, "language version", 10);
parser.eof();
Test 72: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Context currentContext = Context.getCurrentContext();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)currentContext.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
StringReader stringReader = new StringReader("(new Boolean(false))");
parser.parse((Reader) stringReader, "(new Boolean(false))", 170);
parser.getCurrentLineNumber();
Test 73: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
parser.parse("get", ":H&3o7,iy! ", 0);
parser.getCurrentLineNumber();
Test 74: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
parser.parse("uNT6<X;peS", "fv?'", 224);
parser.getEncodedSource();
Test 75: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)compilerEnvirons.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
parser.insideFunction();
Test 76: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter forEval = (DefaultErrorReporter)DefaultErrorReporter.forEval((ErrorReporter) null);
Parser parser = new Parser(compilerEnvirons, forEval);
StringReader stringReader = new StringReader("");
parser.parse((Reader) stringReader, "msg.try.no.catchfinally", 0);
Test 77: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)compilerEnvirons.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
// Undeclared exception!
try { 
  parser.addError("msg.no.paren.with", "ayuY");
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.mozilla.javascript.Parser", e);
}

Test 78: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)compilerEnvirons.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
StringReader stringReader = new StringReader("Hx+3-d;DiR:ppv");
parser.parse((Reader) stringReader, "Hx+3-d;DiR:ppv", 81);
Test 79: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
parser.parse("uNT6<X;peS", "d>#sk;7", 7);
parser.addWarning("msg.no.paren.after.switch", "Ktmi");
Test 80: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)compilerEnvirons.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
// Undeclared exception!
try { 
  parser.parse("s?dJ:Nj:T1mgy!_ff", "I0&K", 99);
  fail("Expecting exception: RuntimeException");

} catch(RuntimeException e) {
   //
   // missing ; before statement (I0&K#99)
   //
   verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
}

Test 81: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
compilerEnvirons.setXmlAvailable(false);
Parser parser = new Parser(compilerEnvirons, (ErrorReporter) null);
StringReader stringReader = new StringReader("msg.destruct.assign.no.init");
parser.parse((Reader) stringReader, "msg.destruct.assign.no.init", 128);
Test 82: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
// Undeclared exception!
try { 
  parser.parse("_NMsJvfHh.(", "_NMsJvfHh.(", (-1368));
  fail("Expecting exception: IllegalArgumentException");

} catch(IllegalArgumentException e) {
   //
   // -1368
   //
   verifyException("org.mozilla.javascript.RhinoException", e);
}

Test 83: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
// Undeclared exception!
try { 
  parser.parse("ZoqtnpI[qf]", "ZoqtnpI[qf]", (-1));
  fail("Expecting exception: IllegalStateException");

} catch(IllegalStateException e) {
   //
   // FAILED ASSERTION
   //
   verifyException("org.mozilla.javascript.Kit", e);
}

Test 84: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Context currentContext = Context.getCurrentContext();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)currentContext.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
// Undeclared exception!
try { 
  parser.addError("error reporter");
  fail("Expecting exception: RuntimeException");

} catch(RuntimeException e) {
   //
   // no message resource found for message property error reporter
   //
   verifyException("org.mozilla.javascript.ScriptRuntime$DefaultMessageProvider", e);
}

Test 85: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
// Undeclared exception!
try { 
  parser.popScope();
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.mozilla.javascript.Parser", e);
}

Test 86: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
// Undeclared exception!
try { 
  parser.reportError("TDp%h2$!V.b");
  fail("Expecting exception: RuntimeException");

} catch(RuntimeException e) {
   //
   // no message resource found for message property TDp%h2$!V.b
   //
   verifyException("org.mozilla.javascript.ScriptRuntime$DefaultMessageProvider", e);
}


* Minimizing test suite
[MASTER] 02:05:02.594 [logback-1] WARN  TimeController - Already entered in phase: MINIMIZATION. This will mess up the timing calculations.
* test suite isTestSuite: 87
Test 0: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Parser parser = new Parser(compilerEnvirons, (ErrorReporter) null);
// Undeclared exception!
try { 
  parser.parse(";@Rv Iu<K&~e5Tcc?T", ";@Rv Iu<K&~e5Tcc?T", (-1765));
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 1: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)compilerEnvirons.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
// Undeclared exception!
try { 
  parser.addError("msg.no.paren.with", "ayuY");
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.mozilla.javascript.Parser", e);
}

Test 2: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Parser parser = new Parser(compilerEnvirons, (ErrorReporter) null);
parser.getEncodedSource();
Test 3: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Parser parser = new Parser(compilerEnvirons, (ErrorReporter) null);
// Undeclared exception!
try { 
  parser.parse("while", "while", 722);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 4: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
// Undeclared exception!
try { 
  parser.parse("DN^!{m*Wu", (String) null, 1223);
  fail("Expecting exception: RuntimeException");

} catch(RuntimeException e) {
   //
   // missing : after property id
   //
   verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
}

Test 5: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
StringReader stringReader = new StringReader("F&&M");
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
parser.parse((Reader) stringReader, "language version", 12);
Test 6: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
parser.addStrictWarning("error reporter", "error reporter");
Test 7: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
parser.parse("\n", "\n", 145);
Test 8: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
parser.parse("u\n", "u\n", 1677);
Test 9: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
// Undeclared exception!
try { 
  parser.parse("ZoqtnpI[qf]", "ZoqtnpI[qf]", (-1));
  fail("Expecting exception: IllegalStateException");

} catch(IllegalStateException e) {
   //
   // FAILED ASSERTION
   //
   verifyException("org.mozilla.javascript.Kit", e);
}

Test 10: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
compilerEnvirons.setXmlAvailable(false);
Parser parser = new Parser(compilerEnvirons, (ErrorReporter) null);
// Undeclared exception!
try { 
  parser.parse("_NMsJvfHh.(", "_NMsJvfHh.(", 4617);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 11: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Parser parser = new Parser(compilerEnvirons, (ErrorReporter) null);
ScriptOrFnNode parse = parser.parse("msg.no.brace.catchblock", "J^(2<", 21);
parser.pushScope(parse);
// Undeclared exception!
try { 
  parser.pushScope(parse);
  fail("Expecting exception: IllegalStateException");

} catch(IllegalStateException e) {
   //
   // FAILED ASSERTION
   //
   verifyException("org.mozilla.javascript.Kit", e);
}

Test 12: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
// Undeclared exception!
try { 
  parser.parse("function", "function", 32);
  fail("Expecting exception: RuntimeException");

} catch(RuntimeException e) {
   //
   // missing ( before function parameters. (function#32)
   //
   verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
}

Test 13: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
// Undeclared exception!
try { 
  parser.parse("aa:{8+xqCIAm`dF!#", "aa:{8+xqCIAm`dF!#", (-1746));
  fail("Expecting exception: IllegalArgumentException");

} catch(IllegalArgumentException e) {
   //
   // -1746
   //
   verifyException("org.mozilla.javascript.RhinoException", e);
}

Test 14: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
// Undeclared exception!
try { 
  parser.parse("{sjUaI", "TypUEro: ", (-667));
  fail("Expecting exception: IllegalArgumentException");

} catch(IllegalArgumentException e) {
   //
   // -667
   //
   verifyException("org.mozilla.javascript.RhinoException", e);
}

Test 15: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
// Undeclared exception!
try { 
  parser.parse("{}D\"CFDjGM:Hh_zD1*D", "{}D\"CFDjGM:Hh_zD1*D", 46);
  fail("Expecting exception: RuntimeException");

} catch(RuntimeException e) {
   //
   // unterminated string literal ({}D\"CFDjGM:Hh_zD1*D#46)
   //
   verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
}

Test 16: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
// Undeclared exception!
try { 
  parser.parse("break", "break", 46);
  fail("Expecting exception: RuntimeException");

} catch(RuntimeException e) {
   //
   // unlabelled break must be inside loop or switch (break#46)
   //
   verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
}

Test 17: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Parser parser = new Parser(compilerEnvirons, (ErrorReporter) null);
// Undeclared exception!
try { 
  parser.parse("return", "return", 101);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 18: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)compilerEnvirons.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
// Undeclared exception!
try { 
  parser.parse("throw ", "throw ", 3420);
  fail("Expecting exception: RuntimeException");

} catch(RuntimeException e) {
   //
   // Unexpected end of file (throw #3420)
   //
   verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
}

Test 19: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
StringReader stringReader = new StringReader("try ");
DefaultErrorReporter errorReporter = (DefaultErrorReporter)compilerEnvirons.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
// Undeclared exception!
try { 
  parser.parse((Reader) stringReader, (String) null, (-443));
  fail("Expecting exception: IllegalArgumentException");

} catch(IllegalArgumentException e) {
   //
   // -443
   //
   verifyException("org.mozilla.javascript.RhinoException", e);
}

Test 20: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
// Undeclared exception!
try { 
  parser.parse("if ", "if ", 152);
  fail("Expecting exception: RuntimeException");

} catch(RuntimeException e) {
   //
   // missing ( before condition (if #152)
   //
   verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
}

Test 21: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter forEval = (DefaultErrorReporter)DefaultErrorReporter.forEval((ErrorReporter) null);
Parser parser = new Parser(compilerEnvirons, forEval);
// Undeclared exception!
try { 
  parser.parse("switch", "_NMsJvfHh.(", 32);
  fail("Expecting exception: RuntimeException");

} catch(RuntimeException e) {
   //
   // SyntaxError: missing ( before switch expression (_NMsJvfHh.(#32)
   //
   verifyException("org.mozilla.javascript.ScriptRuntime", e);
}

Test 22: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
// Undeclared exception!
try { 
  parser.parse("default", "IJ3aritOhZ2{7;9}`6", 157);
  fail("Expecting exception: RuntimeException");

} catch(RuntimeException e) {
   //
   // not a valid default namespace statement. Syntax is: default xml namespace = EXPRESSION; (IJ3aritOhZ2{7;9}`6#157)
   //
   verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
}

Test 23: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
// Undeclared exception!
try { 
  parser.parse("for ", " ee38HK-Q|U", 1424);
  fail("Expecting exception: RuntimeException");

} catch(RuntimeException e) {
   //
   // missing ( after for ( ee38HK-Q|U#1424)
   //
   verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
}

Test 24: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)compilerEnvirons.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
StringReader stringReader = new StringReader("var ");
// Undeclared exception!
try { 
  parser.parse((Reader) stringReader, "msg.bad.var", 310);
  fail("Expecting exception: RuntimeException");

} catch(RuntimeException e) {
   //
   // missing variable name (msg.bad.var#310)
   //
   verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
}

Test 25: 
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
// Undeclared exception!
try { 
  parser.parse("with", "with", (-3800));
  fail("Expecting exception: IllegalArgumentException");

} catch(IllegalArgumentException e) {
   //
   // -3800
   //
   verifyException("org.mozilla.javascript.RhinoException", e);
}

Test 26: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Parser parser = new Parser(compilerEnvirons, (ErrorReporter) null);
// Undeclared exception!
try { 
  parser.parse("const", "<QQnrsx6G0-MXbf", 159);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 27: 
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
parser.parse("KGP:V6:rV", "KGP:V6:rV", 24);
Test 28: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
parser.parse("uNT6<X;peS", "d>#sk;7", 7);
parser.addWarning("msg.no.paren.after.switch", "Ktmi");
Test 29: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
// Undeclared exception!
try { 
  parser.parse("zE}ysL#&{i<>+m", "zE}ysL#&{i<>+m", 103);
  fail("Expecting exception: RuntimeException");

} catch(RuntimeException e) {
   //
   // syntax error (zE}ysL#&{i<>+m#103)
   //
   verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
}

Test 30: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
StringReader stringReader = new StringReader("ayuY");
parser.parse((Reader) stringReader, "if ", 152);
parser.defineSymbol(152, false, "ayuY");
Test 31: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
StringReader stringReader = new StringReader("hor");
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
parser.parse((Reader) stringReader, "hor", 160);
parser.defineSymbol(86, false, "E+t");
// Undeclared exception!
try { 
  parser.defineSymbol(1, false, "E+t");
  fail("Expecting exception: IllegalStateException");

} catch(IllegalStateException e) {
   //
   // FAILED ASSERTION
   //
   verifyException("org.mozilla.javascript.Kit", e);
}

Test 32: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
StringReader stringReader = new StringReader("F&M");
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
parser.parse((Reader) stringReader, "language version", 10);
parser.defineSymbol(108, false, "error reporter");
Test 33: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
StringReader stringReader = new StringReader("F&M");
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
parser.parse((Reader) stringReader, "fontcolor", 50);
parser.defineSymbol(153, false, "language version");
Test 34: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
StringReader stringReader = new StringReader("taK");
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
parser.parse((Reader) stringReader, "S1a/,G/{>,\"{rmtJ=", 121);
parser.defineSymbol(152, true, "ayuY");
Test 35: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
// Undeclared exception!
try { 
  parser.parse("ZMF3_^Px,Z<LRi~", "ZMF3_^Px,Z<LRi~", 126);
  fail("Expecting exception: RuntimeException");

} catch(RuntimeException e) {
   //
   // missing ; before statement (ZMF3_^Px,Z<LRi~#126)
   //
   verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
}

Test 36: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
// Undeclared exception!
try { 
  parser.parse("LNp|[mT=hu{\"s:%,", "LNp|[mT=hu{\"s:%,", 1245);
  fail("Expecting exception: RuntimeException");

} catch(RuntimeException e) {
   //
   // missing ] after element list (LNp|[mT=hu{\"s:%,#1245)
   //
   verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
}

Test 37: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
// Undeclared exception!
try { 
  parser.parse("l?[]y", ">`\r<0'(x.;/*B;", (-1216));
  fail("Expecting exception: IllegalArgumentException");

} catch(IllegalArgumentException e) {
   //
   // -1216
   //
   verifyException("org.mozilla.javascript.RhinoException", e);
}

Test 38: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
// Undeclared exception!
try { 
  parser.parse("v||,rf ct", "U4tc&S(2Py)J\u0001re", 20);
  fail("Expecting exception: RuntimeException");

} catch(RuntimeException e) {
   //
   // syntax error (U4tc&S(2Py)J\u0001re#20)
   //
   verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
}

Test 39: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
parser.parse("factory == null", "factory == null", 65);
Test 40: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
// Undeclared exception!
try { 
  parser.parse("Bfa<=6!r4TUT{{8", "'YGfpGJikZy", (-791));
  fail("Expecting exception: IllegalArgumentException");

} catch(IllegalArgumentException e) {
   //
   // -791
   //
   verifyException("org.mozilla.javascript.RhinoException", e);
}

Test 41: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
// Undeclared exception!
try { 
  parser.parse("PAE>rV*b36>*vev", "PAE>rV*b36>*vev", 46);
  fail("Expecting exception: RuntimeException");

} catch(RuntimeException e) {
   //
   // illegal character (PAE>rV*b36>*vev#46)
   //
   verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
}

Test 42: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Parser parser = new Parser(compilerEnvirons, (ErrorReporter) null);
// Undeclared exception!
try { 
  parser.parse("gv18Yz>=", "gv18Yz>=", (-5428));
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 43: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
// Undeclared exception!
try { 
  parser.parse("Z<<ED O4hRufFz@G", "Z<<ED O4hRufFz@G", (-1));
  fail("Expecting exception: RuntimeException");

} catch(RuntimeException e) {
   //
   // missing ; before statement
   //
   verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
}

Test 44: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Parser parser = new Parser(compilerEnvirons, (ErrorReporter) null);
// Undeclared exception!
try { 
  parser.parse("R-{", "R-{", 104);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 45: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Parser parser = new Parser(compilerEnvirons, (ErrorReporter) null);
// Undeclared exception!
try { 
  parser.parse("a/{}]u/c,!vtJqY;P/S", "$qM", 85);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 46: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Parser parser = new Parser(compilerEnvirons, (ErrorReporter) null);
// Undeclared exception!
try { 
  parser.parse("0%E&++", "K#_@+%8y", 4758);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 47: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Context enter = Context.enter();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)enter.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
// Undeclared exception!
try { 
  parser.parse("+Ag1ozs'D}Vt$]TJs", (String) null, 82);
  fail("Expecting exception: RuntimeException");

} catch(RuntimeException e) {
   //
   // unterminated string literal
   //
   verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
}

Test 48: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
// Undeclared exception!
try { 
  parser.parse("-IxXy5O+!>", "-IxXy5O+!>", 122);
  fail("Expecting exception: RuntimeException");

} catch(RuntimeException e) {
   //
   // syntax error (-IxXy5O+!>#122)
   //
   verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
}

Test 49: 
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
// Undeclared exception!
try { 
  parser.parse("6+~ .4`d", "6+~ .4`d", (-1468));
  fail("Expecting exception: IllegalArgumentException");

} catch(IllegalArgumentException e) {
   //
   // -1468
   //
   verifyException("org.mozilla.javascript.RhinoException", e);
}

Test 50: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
// Undeclared exception!
try { 
  parser.parse("delete ", "delete ", 404);
  fail("Expecting exception: RuntimeException");

} catch(RuntimeException e) {
   //
   // Unexpected end of file (delete #404)
   //
   verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
}

Test 51: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
// Undeclared exception!
try { 
  parser.parse("--", "?", 85);
  fail("Expecting exception: RuntimeException");

} catch(RuntimeException e) {
   //
   // Unexpected end of file (?#85)
   //
   verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
}

Test 52: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Parser parser = new Parser(compilerEnvirons, (ErrorReporter) null);
// Undeclared exception!
try { 
  parser.parse("void ", "XP:iUxw*Y>Rp7", 1036);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 53: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
compilerEnvirons.setXmlAvailable(false);
Parser parser = new Parser(compilerEnvirons, (ErrorReporter) null);
// Undeclared exception!
try { 
  parser.parse("<><7T4#FGD3mCwE=", "msg.destruct.assign.no.init", (-64));
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 54: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
// Undeclared exception!
try { 
  parser.parse("FXl8R9--jenv[;09", "FXl8R9--jenv[;09", 404);
  fail("Expecting exception: RuntimeException");

} catch(RuntimeException e) {
   //
   // missing ; before statement (FXl8R9--jenv[;09#404)
   //
   verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
}

Test 55: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
ContextFactory global = ContextFactory.getGlobal();
Context context = new Context(global);
DefaultErrorReporter errorReporter = (DefaultErrorReporter)context.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
StringReader stringReader = new StringReader("<7T4#FGD3mCwE={fU");
// Undeclared exception!
try { 
  parser.parse((Reader) stringReader, "language version", 12);
  fail("Expecting exception: RuntimeException");

} catch(RuntimeException e) {
   //
   // syntax error (language version#12)
   //
   verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
}

Test 56: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
// Undeclared exception!
try { 
  parser.parse("z:U()S", "set", 947);
  fail("Expecting exception: RuntimeException");

} catch(RuntimeException e) {
   //
   // missing ; before statement (set#947)
   //
   verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
}

Test 57: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
// Undeclared exception!
try { 
  parser.parse("nYf(3, ;aQ9*3Aqe{m", "nYf(3, ;aQ9*3Aqe{m", 120);
  fail("Expecting exception: RuntimeException");

} catch(RuntimeException e) {
   //
   // syntax error (nYf(3, ;aQ9*3Aqe{m#120)
   //
   verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
}

Test 58: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Context currentContext = Context.getCurrentContext();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)currentContext.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
StringReader stringReader = new StringReader("(new Boolean(false))");
parser.parse((Reader) stringReader, "(new Boolean(false))", 170);
parser.getCurrentLineNumber();
Test 59: 
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
// Undeclared exception!
try { 
  parser.parse("c..", "msg.no.paren.for.ctrl", 39);
  fail("Expecting exception: RuntimeException");

} catch(RuntimeException e) {
   //
   // missing name after . operator (msg.no.paren.for.ctrl#39)
   //
   verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
}

Test 60: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
compilerEnvirons.setXmlAvailable(false);
Parser parser = new Parser(compilerEnvirons, (ErrorReporter) null);
StringReader stringReader = new StringReader("msg.destruct.assign.no.init");
parser.parse((Reader) stringReader, "msg.destruct.assign.no.init", 128);
Test 61: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
// Undeclared exception!
try { 
  parser.parse("msg.bad.throw.eol", "msg.bad.throw.eol", (-478));
  fail("Expecting exception: IllegalStateException");

} catch(IllegalStateException e) {
   //
   // FAILED ASSERTION
   //
   verifyException("org.mozilla.javascript.Kit", e);
}

Test 62: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
// Undeclared exception!
try { 
  parser.parse("O[yE8.@:XCV^4\"", "O[yE8.@:XCV^4\"", 2087);
  fail("Expecting exception: RuntimeException");

} catch(RuntimeException e) {
   //
   // missing name after .@ (O[yE8.@:XCV^4\"#2087)
   //
   verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
}

Test 63: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
// Undeclared exception!
try { 
  parser.parse(" @*b@e+Zb([48%oywd", (String) null, 29);
  fail("Expecting exception: RuntimeException");

} catch(RuntimeException e) {
   //
   // missing ; before statement
   //
   verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
}

Test 64: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
// Undeclared exception!
try { 
  parser.parse("@ [i$", "@ [i$", (-1746));
  fail("Expecting exception: IllegalArgumentException");

} catch(IllegalArgumentException e) {
   //
   // -1746
   //
   verifyException("org.mozilla.javascript.RhinoException", e);
}

Test 65: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Parser parser = new Parser(compilerEnvirons, (ErrorReporter) null);
// Undeclared exception!
try { 
  parser.parse("/Qh{<~x:pdb!y/!bY", "_NMsJvfHh.(", 2613);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 66: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)compilerEnvirons.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
StringReader stringReader = new StringReader("''lj/vX?gWo");
// Undeclared exception!
try { 
  parser.parse((Reader) stringReader, "''lj/vX?gWo", 52);
  fail("Expecting exception: RuntimeException");

} catch(RuntimeException e) {
   //
   // missing ; before statement (''lj/vX?gWo#52)
   //
   verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
}

Test 67: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
StringReader stringReader = new StringReader("this");
ContextFactory contextFactory = new ContextFactory();
Context makeContext = contextFactory.makeContext();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)makeContext.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
parser.parse((Reader) stringReader, "[qHC,", 146);
Test 68: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)compilerEnvirons.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
// Undeclared exception!
try { 
  parser.parse(" /= ", "language version", 0);
  fail("Expecting exception: RuntimeException");

} catch(RuntimeException e) {
   //
   // unterminated regular expression literal
   //
   verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
}

Test 69: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
// Undeclared exception!
try { 
  parser.parse("goto", "goto", (-213));
  fail("Expecting exception: IllegalArgumentException");

} catch(IllegalArgumentException e) {
   //
   // -213
   //
   verifyException("org.mozilla.javascript.RhinoException", e);
}

Test 70: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Parser parser = new Parser(compilerEnvirons, (ErrorReporter) null);
// Undeclared exception!
try { 
  parser.parse("[qC,", "[qC,", (-89));
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 71: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)compilerEnvirons.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
// Undeclared exception!
try { 
  parser.parse("J^!{9 ", "J^!{9 ", 893);
  fail("Expecting exception: RuntimeException");

} catch(RuntimeException e) {
   //
   // missing : after property id (J^!{9 #893)
   //
   verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
}

Test 72: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)compilerEnvirons.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
StringReader stringReader = new StringReader("Hx+3-d;DiR:ppv");
parser.parse((Reader) stringReader, "Hx+3-d;DiR:ppv", 81);
Test 73: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Parser parser = new Parser(compilerEnvirons, (ErrorReporter) null);
// Undeclared exception!
try { 
  parser.parse("F|[$je#N]&r=lK", "F|[$je#N]&r=lK", (-195));
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 74: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
// Undeclared exception!
try { 
  parser.parse("RDxf%C[", "RDxf%C[", (-2646));
  fail("Expecting exception: IllegalArgumentException");

} catch(IllegalArgumentException e) {
   //
   // -2646
   //
   verifyException("org.mozilla.javascript.RhinoException", e);
}

Test 75: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)compilerEnvirons.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
parser.parse("false", "@ LAi$", 1326);
Test 76: 
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser((CompilerEnvirons) null, defaultErrorReporter);
parser.createDecompiler((CompilerEnvirons) null);
Test 77: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
StringReader stringReader = new StringReader("$qM");
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
parser.parse((Reader) stringReader, "language version", 10);
parser.eof();
Test 78: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
parser.parse("get", ":H&3o7,iy! ", 0);
parser.getCurrentLineNumber();
Test 79: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
parser.parse("uNT6<X;peS", "fv?'", 224);
parser.getEncodedSource();
Test 80: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)compilerEnvirons.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
parser.insideFunction();
Test 81: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter forEval = (DefaultErrorReporter)DefaultErrorReporter.forEval((ErrorReporter) null);
Parser parser = new Parser(compilerEnvirons, forEval);
StringReader stringReader = new StringReader("");
parser.parse((Reader) stringReader, "msg.try.no.catchfinally", 0);
Test 82: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)compilerEnvirons.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
// Undeclared exception!
try { 
  parser.parse("s?dJ:Nj:T1mgy!_ff", "I0&K", 99);
  fail("Expecting exception: RuntimeException");

} catch(RuntimeException e) {
   //
   // missing ; before statement (I0&K#99)
   //
   verifyException("org.mozilla.javascript.DefaultErrorReporter", e);
}

Test 83: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
// Undeclared exception!
try { 
  parser.parse("_NMsJvfHh.(", "_NMsJvfHh.(", (-1368));
  fail("Expecting exception: IllegalArgumentException");

} catch(IllegalArgumentException e) {
   //
   // -1368
   //
   verifyException("org.mozilla.javascript.RhinoException", e);
}

Test 84: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
Context currentContext = Context.getCurrentContext();
DefaultErrorReporter errorReporter = (DefaultErrorReporter)currentContext.getErrorReporter();
Parser parser = new Parser(compilerEnvirons, errorReporter);
// Undeclared exception!
try { 
  parser.addError("error reporter");
  fail("Expecting exception: RuntimeException");

} catch(RuntimeException e) {
   //
   // no message resource found for message property error reporter
   //
   verifyException("org.mozilla.javascript.ScriptRuntime$DefaultMessageProvider", e);
}

Test 85: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
// Undeclared exception!
try { 
  parser.popScope();
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.mozilla.javascript.Parser", e);
}

Test 86: 
CompilerEnvirons compilerEnvirons = new CompilerEnvirons();
DefaultErrorReporter defaultErrorReporter = DefaultErrorReporter.instance;
Parser parser = new Parser(compilerEnvirons, defaultErrorReporter);
// Undeclared exception!
try { 
  parser.reportError("TDp%h2$!V.b");
  fail("Expecting exception: RuntimeException");

} catch(RuntimeException e) {
   //
   // no message resource found for message property TDp%h2$!V.b
   //
   verifyException("org.mozilla.javascript.ScriptRuntime$DefaultMessageProvider", e);
}


* Going to analyze the coverage criteria
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 49%
* Total number of goals: 735
* Number of covered goals: 360
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 49%
* Total number of goals: 1211
* Number of covered goals: 594
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 44%
* Total number of goals: 80
* Number of covered goals: 35
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 16
* Number of covered goals: 16
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 48%
* Total number of goals: 735
* Number of covered goals: 352
* Generated 87 tests with total length 369
* Resulting test suite's coverage: 58% (average coverage for all fitness functions)
[MASTER] 02:05:05.131 [logback-1] WARN  TimeController - Already entered in phase: COVERAGE_ANALYSIS. This will mess up the timing calculations.
* Generating assertions
* Resulting test suite's mutation score: 11%
* Compiling and checking tests
[MASTER] 02:05:20.239 [logback-1] WARN  TimeController - Already entered in phase: ASSERTION_GENERATION. This will mess up the timing calculations.
Going to execute: removeTestsThatDoNotCompile
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 02:05:23.408 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar185825025601670585.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 02:05:23.409 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar185825025601670585.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 02:05:23.446 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar185825025601670585.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 02:05:23.447 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar185825025601670585.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 02:05:23.484 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar185825025601670585.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 02:05:23.485 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar185825025601670585.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 02:05:23.529 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar185825025601670585.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 02:05:23.529 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar185825025601670585.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 02:05:23.573 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar185825025601670585.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 02:05:23.574 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar185825025601670585.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 02:05:23.609 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar185825025601670585.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 02:05:23.609 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar185825025601670585.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 02:05:23.647 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar185825025601670585.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 02:05:23.648 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar185825025601670585.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 02:05:23.690 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar185825025601670585.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 02:05:23.691 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar185825025601670585.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 02:05:23.727 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar185825025601670585.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 02:05:23.728 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar185825025601670585.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 02:05:23.759 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar185825025601670585.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 02:05:23.760 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar185825025601670585.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 02:05:23.794 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar185825025601670585.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 02:05:23.795 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar185825025601670585.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 02:05:23.829 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar185825025601670585.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 02:05:23.830 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar185825025601670585.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 02:05:23.867 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar185825025601670585.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 02:05:23.868 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar185825025601670585.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 02:05:23.913 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar185825025601670585.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 02:05:23.914 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar185825025601670585.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 02:05:23.942 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar185825025601670585.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 02:05:23.943 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar185825025601670585.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 02:05:23.972 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar185825025601670585.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 02:05:23.973 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar185825025601670585.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 02:05:24.009 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar185825025601670585.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 02:05:24.010 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar185825025601670585.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 02:05:24.052 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar185825025601670585.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 02:05:24.054 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar185825025601670585.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 02:05:24.097 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar185825025601670585.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 02:05:24.098 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar185825025601670585.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 02:05:24.140 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar185825025601670585.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 02:05:24.141 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar185825025601670585.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 02:05:24.175 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar185825025601670585.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 02:05:24.176 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar185825025601670585.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 02:05:24.212 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar185825025601670585.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 02:05:24.213 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar185825025601670585.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 02:05:24.245 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar185825025601670585.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 02:05:24.246 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar185825025601670585.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 02:05:24.287 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar185825025601670585.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 02:05:24.288 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar185825025601670585.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 02:05:24.331 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar185825025601670585.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 02:05:24.332 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar185825025601670585.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 02:05:24.369 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar185825025601670585.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 02:05:24.370 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar185825025601670585.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 02:05:24.412 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar185825025601670585.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 02:05:24.413 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar185825025601670585.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 02:05:24.454 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar185825025601670585.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 02:05:24.455 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar185825025601670585.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 02:05:24.492 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar185825025601670585.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 02:05:24.492 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar185825025601670585.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 02:05:24.529 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar185825025601670585.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 02:05:24.530 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar185825025601670585.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 02:05:24.568 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar185825025601670585.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 02:05:24.569 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar185825025601670585.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 02:05:24.615 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar185825025601670585.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 02:05:24.615 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar185825025601670585.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 02:05:24.656 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar185825025601670585.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 02:05:24.657 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar185825025601670585.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 02:05:24.696 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar185825025601670585.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 02:05:24.697 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar185825025601670585.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 02:05:24.742 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar185825025601670585.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 02:05:24.743 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar185825025601670585.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 02:05:24.793 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar185825025601670585.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 02:05:24.794 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar185825025601670585.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 02:05:24.836 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar185825025601670585.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 02:05:24.837 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar185825025601670585.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 02:05:24.881 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar185825025601670585.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 02:05:24.882 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar185825025601670585.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 02:05:24.924 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar185825025601670585.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 02:05:24.925 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar185825025601670585.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 02:05:24.968 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar185825025601670585.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 02:05:24.969 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar185825025601670585.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 02:05:25.013 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar185825025601670585.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 02:05:25.014 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar185825025601670585.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 02:05:25.059 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar185825025601670585.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 02:05:25.060 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar185825025601670585.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 02:05:25.107 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar185825025601670585.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 02:05:25.107 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar185825025601670585.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 02:05:25.151 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar185825025601670585.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 02:05:25.152 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar185825025601670585.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 02:05:25.195 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar185825025601670585.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 02:05:25.197 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar185825025601670585.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 02:05:25.242 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar185825025601670585.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 02:05:25.243 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar185825025601670585.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 02:05:25.291 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar185825025601670585.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 02:05:25.292 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar185825025601670585.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 02:05:25.341 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar185825025601670585.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 02:05:25.342 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar185825025601670585.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 02:05:25.388 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar185825025601670585.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 02:05:25.389 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar185825025601670585.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 02:05:25.443 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar185825025601670585.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 02:05:25.444 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar185825025601670585.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 02:05:25.506 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar185825025601670585.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 02:05:25.506 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar185825025601670585.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 02:05:25.547 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar185825025601670585.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 02:05:25.548 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar185825025601670585.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 02:05:25.597 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar185825025601670585.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 02:05:25.598 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar185825025601670585.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 02:05:25.644 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar185825025601670585.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 02:05:25.645 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar185825025601670585.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 02:05:25.686 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar185825025601670585.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 02:05:25.687 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar185825025601670585.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 02:05:25.728 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar185825025601670585.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 02:05:25.729 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar185825025601670585.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 02:05:25.777 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar185825025601670585.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 02:05:25.778 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar185825025601670585.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 02:05:25.835 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar185825025601670585.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 02:05:25.836 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar185825025601670585.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 02:05:25.887 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar185825025601670585.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 02:05:25.887 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar185825025601670585.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 02:05:25.932 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar185825025601670585.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 02:05:25.933 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar185825025601670585.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 02:05:25.975 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar185825025601670585.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 02:05:25.975 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar185825025601670585.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 02:05:26.024 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar185825025601670585.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 02:05:26.025 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar185825025601670585.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 02:05:26.078 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar185825025601670585.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 02:05:26.079 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar185825025601670585.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 02:05:26.131 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar185825025601670585.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 02:05:26.132 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar185825025601670585.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 02:05:26.181 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar185825025601670585.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 02:05:26.181 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar185825025601670585.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 02:05:26.237 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar185825025601670585.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 02:05:26.238 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar185825025601670585.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 02:05:26.293 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar185825025601670585.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 02:05:26.294 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar185825025601670585.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 02:05:26.354 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar185825025601670585.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 02:05:26.355 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar185825025601670585.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 02:05:26.407 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar185825025601670585.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 02:05:26.408 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar185825025601670585.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 02:05:26.451 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar185825025601670585.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 02:05:26.451 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar185825025601670585.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
** Write a test suite: 1 called: 1 to improve: false
** Write a test suite: 2 called: 2 to improve: false
** Write a test suite: 3 called: 3 to improve: false
** Write a test suite: 4 called: 4 to improve: false
** Write a test suite: 5 called: 5 to improve: false
** Write a test suite: 6 called: 6 to improve: false
** Write a test suite: 7 called: 7 to improve: false
** Write a test suite: 8 called: 8 to improve: false
** Write a test suite: 9 called: 9 to improve: false
** Write a test suite: 10 called: 10 to improve: false
** Write a test suite: 11 called: 11 to improve: false
** Write a test suite: 12 called: 12 to improve: false
** Write a test suite: 13 called: 13 to improve: false
** Write a test suite: 14 called: 14 to improve: false
** Write a test suite: 15 called: 15 to improve: false
** Write a test suite: 16 called: 16 to improve: false
** Write a test suite: 17 called: 17 to improve: false
** Write a test suite: 18 called: 18 to improve: false
** Write a test suite: 19 called: 19 to improve: false
** Write a test suite: 20 called: 20 to improve: false
** Write a test suite: 21 called: 21 to improve: false
** Write a test suite: 22 called: 22 to improve: false
** Write a test suite: 23 called: 23 to improve: false
** Write a test suite: 24 called: 24 to improve: false
** Write a test suite: 25 called: 25 to improve: false
** Write a test suite: 26 called: 26 to improve: false
** Write a test suite: 27 called: 27 to improve: false
** Write a test suite: 28 called: 28 to improve: false
** Write a test suite: 29 called: 29 to improve: false
** Write a test suite: 30 called: 30 to improve: false
** Write a test suite: 31 called: 31 to improve: false
** Write a test suite: 32 called: 32 to improve: false
** Write a test suite: 33 called: 33 to improve: false
** Write a test suite: 34 called: 34 to improve: false
** Write a test suite: 35 called: 35 to improve: false
** Write a test suite: 36 called: 36 to improve: false
** Write a test suite: 37 called: 37 to improve: false
** Write a test suite: 38 called: 38 to improve: false
** Write a test suite: 39 called: 39 to improve: false
** Write a test suite: 40 called: 40 to improve: false
** Write a test suite: 41 called: 41 to improve: false
** Write a test suite: 42 called: 42 to improve: false
** Write a test suite: 43 called: 43 to improve: false
** Write a test suite: 44 called: 44 to improve: false
** Write a test suite: 45 called: 45 to improve: false
** Write a test suite: 46 called: 46 to improve: false
** Write a test suite: 47 called: 47 to improve: false
** Write a test suite: 48 called: 48 to improve: false
** Write a test suite: 49 called: 49 to improve: false
** Write a test suite: 50 called: 50 to improve: false
** Write a test suite: 51 called: 51 to improve: false
** Write a test suite: 52 called: 52 to improve: false
** Write a test suite: 53 called: 53 to improve: false
** Write a test suite: 54 called: 54 to improve: false
** Write a test suite: 55 called: 55 to improve: false
** Write a test suite: 56 called: 56 to improve: false
** Write a test suite: 57 called: 57 to improve: false
** Write a test suite: 58 called: 58 to improve: false
** Write a test suite: 59 called: 59 to improve: false
** Write a test suite: 60 called: 60 to improve: false
** Write a test suite: 61 called: 61 to improve: false
** Write a test suite: 62 called: 62 to improve: false
** Write a test suite: 63 called: 63 to improve: false
** Write a test suite: 64 called: 64 to improve: false
** Write a test suite: 65 called: 65 to improve: false
** Write a test suite: 66 called: 66 to improve: false
** Write a test suite: 67 called: 67 to improve: false
** Write a test suite: 68 called: 68 to improve: false
** Write a test suite: 69 called: 69 to improve: false
[MASTER] 02:05:28.393 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar185825025601670585.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 02:05:28.394 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar185825025601670585.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
** Write a test suite: 1 called: 1 to improve: false
** Write a test suite: 2 called: 2 to improve: false
** Write a test suite: 3 called: 3 to improve: false
** Write a test suite: 4 called: 4 to improve: false
** Write a test suite: 5 called: 5 to improve: false
** Write a test suite: 6 called: 6 to improve: false
** Write a test suite: 7 called: 7 to improve: false
** Write a test suite: 8 called: 8 to improve: false
** Write a test suite: 9 called: 9 to improve: false
** Write a test suite: 10 called: 10 to improve: false
** Write a test suite: 11 called: 11 to improve: false
** Write a test suite: 12 called: 12 to improve: false
** Write a test suite: 13 called: 13 to improve: false
** Write a test suite: 14 called: 14 to improve: false
** Write a test suite: 15 called: 15 to improve: false
** Write a test suite: 16 called: 16 to improve: false
** Write a test suite: 17 called: 17 to improve: false
** Write a test suite: 18 called: 18 to improve: false
** Write a test suite: 19 called: 19 to improve: false
** Write a test suite: 20 called: 20 to improve: false
** Write a test suite: 21 called: 21 to improve: false
** Write a test suite: 22 called: 22 to improve: false
** Write a test suite: 23 called: 23 to improve: false
** Write a test suite: 24 called: 24 to improve: false
** Write a test suite: 25 called: 25 to improve: false
** Write a test suite: 26 called: 26 to improve: false
** Write a test suite: 27 called: 27 to improve: false
** Write a test suite: 28 called: 28 to improve: false
** Write a test suite: 29 called: 29 to improve: false
** Write a test suite: 30 called: 30 to improve: false
** Write a test suite: 31 called: 31 to improve: false
** Write a test suite: 32 called: 32 to improve: false
** Write a test suite: 33 called: 33 to improve: false
** Write a test suite: 34 called: 34 to improve: false
** Write a test suite: 35 called: 35 to improve: false
** Write a test suite: 36 called: 36 to improve: false
** Write a test suite: 37 called: 37 to improve: false
** Write a test suite: 38 called: 38 to improve: false
** Write a test suite: 39 called: 39 to improve: false
** Write a test suite: 40 called: 40 to improve: false
** Write a test suite: 41 called: 41 to improve: false
** Write a test suite: 42 called: 42 to improve: false
** Write a test suite: 43 called: 43 to improve: false
** Write a test suite: 44 called: 44 to improve: false
** Write a test suite: 45 called: 45 to improve: false
** Write a test suite: 46 called: 46 to improve: false
** Write a test suite: 47 called: 47 to improve: false
** Write a test suite: 48 called: 48 to improve: false
** Write a test suite: 49 called: 49 to improve: false
** Write a test suite: 50 called: 50 to improve: false
** Write a test suite: 51 called: 51 to improve: false
** Write a test suite: 52 called: 52 to improve: false
** Write a test suite: 53 called: 53 to improve: false
** Write a test suite: 54 called: 54 to improve: false
** Write a test suite: 55 called: 55 to improve: false
** Write a test suite: 56 called: 56 to improve: false
** Write a test suite: 57 called: 57 to improve: false
** Write a test suite: 58 called: 58 to improve: false
** Write a test suite: 59 called: 59 to improve: false
** Write a test suite: 60 called: 60 to improve: false
** Write a test suite: 61 called: 61 to improve: false
** Write a test suite: 62 called: 62 to improve: false
** Write a test suite: 63 called: 63 to improve: false
** Write a test suite: 64 called: 64 to improve: false
** Write a test suite: 65 called: 65 to improve: false
** Write a test suite: 66 called: 66 to improve: false
** Write a test suite: 67 called: 67 to improve: false
** Write a test suite: 68 called: 68 to improve: false
** Write a test suite: 69 called: 69 to improve: false
[MASTER] 02:05:29.000 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/tmp/EvoSuite_pathingJar185825025601670585.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 02:05:29.001 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar185825025601670585.jar
* Writing tests to file
[MASTER] 02:05:29.004 [logback-1] WARN  TimeController - Already entered in phase: JUNIT_CHECK. This will mess up the timing calculations.
* Writing JUnit test case 'Parser_ESTest' to evosuite-tests
** Write a test suite: 7 called: 0 to improve: false
** Write a test suite: 11 called: 1 to improve: false
** Write a test suite: 12 called: 2 to improve: false
** Write a test suite: 16 called: 3 to improve: false
** Write a test suite: 21 called: 4 to improve: false
** Write a test suite: 31 called: 5 to improve: false
** Write a test suite: 46 called: 6 to improve: false
** Write a test suite: 47 called: 7 to improve: false
** Write a test suite: 48 called: 8 to improve: false
** Write a test suite: 54 called: 9 to improve: false
** Write a test suite: 57 called: 10 to improve: false
* Writing JUnit test case 'Parser_Original_ESTest' to evosuite-tests
** Write a test suite: 0 called: 0 to improve: false
** Write a test suite: 1 called: 1 to improve: false
** Write a test suite: 2 called: 2 to improve: false
** Write a test suite: 3 called: 3 to improve: false
** Write a test suite: 4 called: 4 to improve: false
** Write a test suite: 5 called: 5 to improve: false
** Write a test suite: 6 called: 6 to improve: false
** Write a test suite: 7 called: 7 to improve: false
** Write a test suite: 8 called: 8 to improve: false
** Write a test suite: 9 called: 9 to improve: false
** Write a test suite: 10 called: 10 to improve: false
** Write a test suite: 11 called: 11 to improve: false
** Write a test suite: 12 called: 12 to improve: false
** Write a test suite: 13 called: 13 to improve: false
** Write a test suite: 14 called: 14 to improve: false
** Write a test suite: 15 called: 15 to improve: false
** Write a test suite: 16 called: 16 to improve: false
** Write a test suite: 17 called: 17 to improve: false
** Write a test suite: 18 called: 18 to improve: false
** Write a test suite: 19 called: 19 to improve: false
** Write a test suite: 20 called: 20 to improve: false
** Write a test suite: 21 called: 21 to improve: false
** Write a test suite: 22 called: 22 to improve: false
** Write a test suite: 23 called: 23 to improve: false
** Write a test suite: 24 called: 24 to improve: false
** Write a test suite: 25 called: 25 to improve: false
** Write a test suite: 26 called: 26 to improve: false
** Write a test suite: 27 called: 27 to improve: false
** Write a test suite: 28 called: 28 to improve: false
** Write a test suite: 29 called: 29 to improve: false
** Write a test suite: 30 called: 30 to improve: false
** Write a test suite: 31 called: 31 to improve: false
** Write a test suite: 32 called: 32 to improve: false
** Write a test suite: 33 called: 33 to improve: false
** Write a test suite: 34 called: 34 to improve: false
** Write a test suite: 35 called: 35 to improve: false
** Write a test suite: 36 called: 36 to improve: false
** Write a test suite: 37 called: 37 to improve: false
** Write a test suite: 38 called: 38 to improve: false
** Write a test suite: 39 called: 39 to improve: false
** Write a test suite: 40 called: 40 to improve: false
** Write a test suite: 41 called: 41 to improve: false
** Write a test suite: 42 called: 42 to improve: false
** Write a test suite: 43 called: 43 to improve: false
** Write a test suite: 44 called: 44 to improve: false
** Write a test suite: 45 called: 45 to improve: false
** Write a test suite: 46 called: 46 to improve: false
** Write a test suite: 47 called: 47 to improve: false
** Write a test suite: 48 called: 48 to improve: false
** Write a test suite: 49 called: 49 to improve: false
** Write a test suite: 50 called: 50 to improve: false
** Write a test suite: 51 called: 51 to improve: false
** Write a test suite: 52 called: 52 to improve: false
** Write a test suite: 53 called: 53 to improve: false
** Write a test suite: 54 called: 54 to improve: false
** Write a test suite: 55 called: 55 to improve: false
** Write a test suite: 56 called: 56 to improve: false
** Write a test suite: 57 called: 57 to improve: false
** Write a test suite: 58 called: 58 to improve: false
** Write a test suite: 59 called: 59 to improve: false
** Write a test suite: 60 called: 60 to improve: false
** Write a test suite: 61 called: 61 to improve: false
** Write a test suite: 62 called: 62 to improve: false
** Write a test suite: 63 called: 63 to improve: false
** Write a test suite: 64 called: 64 to improve: false
** Write a test suite: 65 called: 65 to improve: false
** Write a test suite: 66 called: 66 to improve: false
** Write a test suite: 67 called: 67 to improve: false
** Write a test suite: 68 called: 68 to improve: false
** Write a test suite: 69 called: 69 to improve: false
* Done!

* Computation finished
