/*
 * This file was automatically generated by UTestGen and EvoSuite
 * Mon Mar 11 16:34:31 GMT 2024
 */

package uk.me.jockmacmad.jstate.state;

import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;
import org.junit.jupiter.api.Timeout;
import java.util.concurrent.TimeUnit;
import java.util.Vector;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import uk.me.jockmacmad.jstate.state.EndState;
import uk.me.jockmacmad.jstate.state.Event;
import uk.me.jockmacmad.jstate.state.IntegerGreaterThanGuardCondition;
import uk.me.jockmacmad.jstate.state.StartState;
import uk.me.jockmacmad.jstate.state.Transition;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Transition_Original_ESTest extends Transition_Original_ESTest_scaffolding {

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void testWillTrigger() throws Throwable  {
      StartState arg2 = StartState.getSingleton();
      EndState arg0 = new EndState();
      Transition transition = new Transition("com.objectmentors.state.StartState", (Event) null, arg2, arg0);
      boolean willTrigger = transition.willTrigger(arg0, (Event) null);
      assertFalse(willTrigger);
  }

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void testEvaluateGuardConditions() throws Throwable  {
      EndState arg3 = new EndState();
      Transition transition = new Transition("@AF5D6Lz}:`*cr", (Event) null, arg3, arg3);
      transition.evaluateGuardConditions();
  }

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void testEquals() throws Throwable  {
      Vector<IntegerGreaterThanGuardCondition> arg1 = new Vector<IntegerGreaterThanGuardCondition>();
      StartState arg3 = StartState.getSingleton();
      Event arg0 = new Event("com.objectmentors.state.StartState", arg1, arg3);
      Transition transition = new Transition("com.objectmentors.state.StartState", arg0, arg3, arg3);
      boolean equals = transition.equals(arg0);
      assertFalse(equals);
  }

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void testGetTriggerEvent() throws Throwable  {
      EndState arg3 = new EndState();
      Transition transition = new Transition("@AF5D6Lz}:`*cr", (Event) null, arg3, arg3);
      Event triggerEvent = transition.getTriggerEvent();
      assertNull(triggerEvent);
  }
}
