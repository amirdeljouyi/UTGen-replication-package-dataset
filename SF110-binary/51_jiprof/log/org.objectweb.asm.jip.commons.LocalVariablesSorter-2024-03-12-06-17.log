* EvoSuite 1.0.0-SNAPSHOT
* Going to generate test cases for class: org.objectweb.asm.jip.commons.LocalVariablesSorter
* Starting Client-0
* Properties loaded from /home/roham/Results-Utestgen/dataset/SF110-new-res/51_jiprof/evosuite-files/evosuite.properties
* Connecting to master process on port 21590
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
* Finished analyzing classpath
* Generating tests for class org.objectweb.asm.jip.commons.LocalVariablesSorter
* Test criteria:
  - Branch Coverage
  - Line Coverage
  - Method-Output Coverage
  - Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 299
* Using seed 1710224263746
* Starting evolution
[Progress:>                             0%] [Cov:>                                  0%]* Initial Number of Goals in DynaMOSA = 91 / 299
[Progress:>                             0%] [Cov:>                                  0%][Progress:>                             1%] [Cov:>                                  0%][Progress:>                             2%] [Cov:>                                  0%][Progress:>                             2%] [Cov:>                                  0%][Progress:>                             2%] [Cov:>                                  0%][Progress:>                             2%] [Cov:>                                  0%][Progress:>                             3%] [Cov:>                                  0%][Progress:>                             3%] [Cov:>                                  0%][Progress:>                             3%] [Cov:>                                  0%][Progress:>                             3%] [Cov:>                                  0%][Progress:>                             3%] [Cov:>                                  0%][Progress:=>                            4%] [Cov:>                                  0%][Progress:=>                            4%] [Cov:>                                  0%][Progress:=>                            4%] [Cov:>                                  0%][Progress:=>                            4%] [Cov:>                                  0%][Progress:=>                            4%] [Cov:>                                  0%][Progress:=>                            5%] [Cov:>                                  0%][Progress:=>                            5%] [Cov:>                                  0%][Progress:=>                            5%] [Cov:>                                  0%][Progress:=>                            5%] [Cov:>                                  0%][Progress:=>                            5%] [Cov:>                                  0%][Progress:=>                            5%] [Cov:>                                  0%][Progress:=>                            5%] [Cov:>                                  0%][Progress:=>                            6%] [Cov:>                                  0%][Progress:=>                            6%] [Cov:>                                  0%][Progress:=>                            6%] [Cov:>                                  0%][Progress:=>                            6%] [Cov:>                                  0%][Progress:=>                            6%] [Cov:>                                  0%][Progress:=>                            6%] [Cov:>                                  0%][Progress:==>                           7%] [Cov:>                                  0%][Progress:==>                           7%] [Cov:>                                  0%][Progress:==>                           7%] [Cov:>                                  0%][Progress:==>                           7%] [Cov:>                                  0%][Progress:==>                           7%] [Cov:>                                  0%][Progress:==>                           7%] [Cov:>                                  0%][Progress:==>                           7%] [Cov:=>                                 4%][Progress:==>                           8%] [Cov:=======>                           21%][Progress:==>                           8%] [Cov:============>                      35%][Progress:==>                           8%] [Cov:=============>                     38%][Progress:==>                           8%] [Cov:=============>                     38%][Progress:==>                           8%] [Cov:===============>                   45%][Progress:==>                           8%] [Cov:===============>                   45%][Progress:==>                           8%] [Cov:=================>                 49%][Progress:==>                           8%] [Cov:=================>                 49%][Progress:==>                           9%] [Cov:===================>               55%][Progress:==>                           9%] [Cov:====================>              59%][Progress:==>                           9%] [Cov:=====================>             61%][Progress:==>                           9%] [Cov:=====================>             61%][Progress:==>                           9%] [Cov:=====================>             61%][Progress:==>                           9%] [Cov:======================>            63%][Progress:==>                           9%] [Cov:======================>            64%][Progress:==>                           9%] [Cov:=======================>           66%][Progress:==>                           9%] [Cov:=======================>           66%][Progress:==>                           9%] [Cov:=======================>           66%][Progress:==>                           9%] [Cov:=======================>           66%][Progress:===>                          10%] [Cov:=======================>           66%][Progress:===>                          10%] [Cov:=======================>           66%][Progress:===>                          10%] [Cov:=======================>           66%][Progress:===>                          10%] [Cov:=======================>           66%][Progress:===>                          10%] [Cov:=======================>           66%][Progress:===>                          10%] [Cov:=======================>           66%][Progress:===>                          10%] [Cov:========================>          69%][Progress:===>                          10%] [Cov:========================>          69%][Progress:===>                          10%] [Cov:========================>          69%][Progress:===>                          11%] [Cov:========================>          69%][Progress:===>                          11%] [Cov:========================>          69%][Progress:===>                          11%] [Cov:========================>          69%][Progress:===>                          11%] [Cov:========================>          69%][Progress:===>                          11%] [Cov:========================>          69%][Progress:===>                          11%] [Cov:========================>          70%][Progress:===>                          11%] [Cov:========================>          70%][Progress:===>                          11%] [Cov:========================>          70%][Progress:===>                          11%] [Cov:========================>          70%][Progress:===>                          11%] [Cov:========================>          70%][Progress:===>                          11%] [Cov:========================>          70%][Progress:===>                          12%] [Cov:========================>          70%][Progress:===>                          12%] [Cov:========================>          70%][Progress:===>                          12%] [Cov:========================>          70%][Progress:===>                          12%] [Cov:========================>          70%][Progress:===>                          12%] [Cov:========================>          70%][Progress:===>                          12%] [Cov:========================>          70%][Progress:===>                          12%] [Cov:========================>          70%][Progress:===>                          12%] [Cov:========================>          70%][Progress:===>                          13%] [Cov:========================>          70%][Progress:===>                          13%] [Cov:========================>          70%][Progress:===>                          13%] [Cov:========================>          70%][Progress:===>                          13%] [Cov:========================>          70%][Progress:===>                          13%] [Cov:========================>          70%][Progress:===>                          13%] [Cov:========================>          70%][Progress:===>                          13%] [Cov:========================>          70%][Progress:===>                          13%] [Cov:========================>          70%][Progress:===>                          13%] [Cov:========================>          70%][Progress:===>                          13%] [Cov:========================>          70%][Progress:====>                         14%] [Cov:========================>          70%][Progress:====>                         14%] [Cov:========================>          71%][Progress:====>                         14%] [Cov:========================>          71%][Progress:====>                         14%] [Cov:========================>          71%][Progress:====>                         14%] [Cov:========================>          71%][Progress:====>                         14%] [Cov:========================>          71%][Progress:====>                         14%] [Cov:========================>          71%][Progress:====>                         14%] [Cov:========================>          71%][Progress:====>                         14%] [Cov:========================>          71%][Progress:====>                         14%] [Cov:========================>          71%][Progress:====>                         15%] [Cov:========================>          71%][Progress:====>                         15%] [Cov:========================>          71%][Progress:====>                         15%] [Cov:========================>          71%][Progress:====>                         15%] [Cov:========================>          71%][Progress:====>                         15%] [Cov:=========================>         72%][Progress:====>                         15%] [Cov:=========================>         72%][Progress:====>                         15%] [Cov:=========================>         72%][Progress:====>                         15%] [Cov:=========================>         72%][Progress:====>                         15%] [Cov:=========================>         72%][Progress:====>                         15%] [Cov:=========================>         72%][Progress:====>                         15%] [Cov:=========================>         72%][Progress:====>                         15%] [Cov:=========================>         72%][Progress:====>                         15%] [Cov:=========================>         72%][Progress:====>                         16%] [Cov:=========================>         72%][Progress:====>                         16%] [Cov:=========================>         72%][Progress:====>                         16%] [Cov:=========================>         72%][Progress:====>                         16%] [Cov:=========================>         72%][Progress:====>                         16%] [Cov:=========================>         72%][Progress:====>                         16%] [Cov:=========================>         72%][Progress:====>                         16%] [Cov:=========================>         72%][Progress:====>                         16%] [Cov:=========================>         72%][Progress:====>                         16%] [Cov:=========================>         72%][Progress:====>                         16%] [Cov:=========================>         72%][Progress:====>                         16%] [Cov:=========================>         72%][Progress:====>                         16%] [Cov:=========================>         72%][Progress:=====>                        17%] [Cov:=========================>         72%][Progress:=====>                        17%] [Cov:=========================>         72%][Progress:=====>                        17%] [Cov:=========================>         72%][Progress:=====>                        17%] [Cov:=========================>         72%][Progress:=====>                        17%] [Cov:=========================>         72%][Progress:=====>                        17%] [Cov:=========================>         72%][Progress:=====>                        17%] [Cov:=========================>         72%][Progress:=====>                        17%] [Cov:=========================>         72%][Progress:=====>                        17%] [Cov:=========================>         72%][Progress:=====>                        17%] [Cov:=========================>         72%][Progress:=====>                        17%] [Cov:=========================>         72%][Progress:=====>                        17%] [Cov:=========================>         72%][Progress:=====>                        17%] [Cov:=========================>         72%][Progress:=====>                        17%] [Cov:=========================>         73%][Progress:=====>                        17%] [Cov:=========================>         73%][Progress:=====>                        17%] [Cov:=========================>         73%][Progress:=====>                        18%] [Cov:=========================>         73%][Progress:=====>                        18%] [Cov:=========================>         73%][Progress:=====>                        18%] [Cov:=========================>         73%][Progress:=====>                        18%] [Cov:=========================>         73%][Progress:=====>                        18%] [Cov:=========================>         73%][Progress:=====>                        18%] [Cov:=========================>         73%][Progress:=====>                        18%] [Cov:=========================>         73%][Progress:=====>                        18%] [Cov:=========================>         73%][Progress:=====>                        18%] [Cov:=========================>         73%][Progress:=====>                        18%] [Cov:=========================>         73%][Progress:=====>                        18%] [Cov:=========================>         73%][Progress:=====>                        18%] [Cov:=========================>         73%][Progress:=====>                        19%] [Cov:=========================>         73%][Progress:=====>                        19%] [Cov:=========================>         73%][Progress:=====>                        19%] [Cov:=========================>         73%][Progress:=====>                        19%] [Cov:=========================>         73%][Progress:=====>                        19%] [Cov:=========================>         73%][Progress:=====>                        19%] [Cov:=========================>         73%][Progress:=====>                        19%] [Cov:=========================>         73%][Progress:=====>                        19%] [Cov:=========================>         73%][Progress:=====>                        19%] [Cov:=========================>         73%][Progress:=====>                        19%] [Cov:=========================>         73%][Progress:=====>                        19%] [Cov:=========================>         73%][Progress:=====>                        19%] [Cov:=========================>         73%][Progress:=====>                        19%] [Cov:=========================>         73%][Progress:=====>                        19%] [Cov:=========================>         73%][Progress:=====>                        19%] [Cov:=========================>         73%][Progress:======>                       20%] [Cov:=========================>         73%][Progress:======>                       20%] [Cov:=========================>         73%][Progress:======>                       20%] [Cov:=========================>         73%][Progress:======>                       20%] [Cov:=========================>         73%][Progress:======>                       20%] [Cov:=========================>         73%][Progress:======>                       20%] [Cov:=========================>         73%][Progress:======>                       20%] [Cov:=========================>         73%][Progress:======>                       20%] [Cov:=========================>         73%][Progress:======>                       20%] [Cov:=========================>         73%][Progress:======>                       20%] [Cov:=========================>         73%][Progress:======>                       20%] [Cov:=========================>         73%][Progress:======>                       21%] [Cov:=========================>         73%][Progress:======>                       21%] [Cov:=========================>         73%][Progress:======>                       21%] [Cov:=========================>         73%][Progress:======>                       21%] [Cov:=========================>         73%][Progress:======>                       21%] [Cov:=========================>         73%][Progress:======>                       21%] [Cov:=========================>         73%][Progress:======>                       21%] [Cov:=========================>         73%][Progress:======>                       21%] [Cov:=========================>         73%][Progress:======>                       21%] [Cov:=========================>         73%][Progress:======>                       21%] [Cov:=========================>         73%][Progress:======>                       21%] [Cov:=========================>         73%][Progress:======>                       21%] [Cov:=========================>         73%][Progress:======>                       21%] [Cov:=========================>         73%][Progress:======>                       21%] [Cov:=========================>         73%][Progress:======>                       22%] [Cov:=========================>         73%][Progress:======>                       22%] [Cov:=========================>         73%][Progress:======>                       22%] [Cov:=========================>         73%][Progress:======>                       22%] [Cov:=========================>         73%][Progress:======>                       22%] [Cov:=========================>         73%][Progress:======>                       22%] [Cov:=========================>         73%][Progress:======>                       22%] [Cov:=========================>         73%][Progress:======>                       22%] [Cov:=========================>         73%][Progress:======>                       22%] [Cov:=========================>         73%][Progress:======>                       22%] [Cov:=========================>         73%][Progress:======>                       22%] [Cov:=========================>         73%][Progress:======>                       22%] [Cov:=========================>         73%][Progress:======>                       22%] [Cov:=========================>         73%][Progress:======>                       22%] [Cov:=========================>         73%][Progress:======>                       22%] [Cov:=========================>         73%][Progress:======>                       23%] [Cov:=========================>         73%][Progress:======>                       23%] [Cov:=========================>         73%][Progress:======>                       23%] [Cov:=========================>         73%][Progress:======>                       23%] [Cov:=========================>         73%][Progress:======>                       23%] [Cov:=========================>         73%][Progress:======>                       23%] [Cov:=========================>         73%][Progress:======>                       23%] [Cov:=========================>         73%][Progress:======>                       23%] [Cov:=========================>         73%][Progress:======>                       23%] [Cov:=========================>         73%][Progress:======>                       23%] [Cov:=========================>         73%][Progress:======>                       23%] [Cov:=========================>         73%][Progress:======>                       23%] [Cov:=========================>         73%][Progress:=======>                      24%] [Cov:=========================>         73%][Progress:=======>                      24%] [Cov:=========================>         73%][Progress:=======>                      24%] [Cov:=========================>         73%][Progress:=======>                      24%] [Cov:=========================>         73%][Progress:=======>                      24%] [Cov:=========================>         73%][Progress:=======>                      24%] [Cov:=========================>         73%][Progress:=======>                      24%] [Cov:=========================>         73%][Progress:=======>                      24%] [Cov:=========================>         73%][Progress:=======>                      24%] [Cov:=========================>         73%][Progress:=======>                      24%] [Cov:=========================>         73%][Progress:=======>                      24%] [Cov:=========================>         73%][Progress:=======>                      25%] [Cov:=========================>         73%][Progress:=======>                      25%] [Cov:=========================>         73%][Progress:=======>                      25%] [Cov:=========================>         73%][Progress:=======>                      25%] [Cov:=========================>         73%][Progress:=======>                      25%] [Cov:=========================>         73%][Progress:=======>                      25%] [Cov:=========================>         73%][Progress:=======>                      25%] [Cov:=========================>         73%][Progress:=======>                      25%] [Cov:=========================>         73%][Progress:=======>                      25%] [Cov:=========================>         73%][Progress:=======>                      25%] [Cov:=========================>         73%][Progress:=======>                      25%] [Cov:=========================>         73%][Progress:=======>                      25%] [Cov:=========================>         73%][Progress:=======>                      25%] [Cov:=========================>         73%][Progress:=======>                      26%] [Cov:=========================>         73%][Progress:=======>                      26%] [Cov:=========================>         73%][Progress:=======>                      26%] [Cov:=========================>         73%][Progress:=======>                      26%] [Cov:=========================>         73%][Progress:=======>                      26%] [Cov:=========================>         73%][Progress:=======>                      26%] [Cov:=========================>         73%][Progress:=======>                      26%] [Cov:=========================>         73%][Progress:=======>                      26%] [Cov:=========================>         73%][Progress:=======>                      26%] [Cov:=========================>         73%][Progress:=======>                      26%] [Cov:=========================>         73%][Progress:=======>                      26%] [Cov:=========================>         73%][Progress:=======>                      26%] [Cov:=========================>         73%][Progress:=======>                      26%] [Cov:=========================>         73%][Progress:========>                     27%] [Cov:=========================>         73%][Progress:========>                     27%] [Cov:=========================>         73%][Progress:========>                     27%] [Cov:=========================>         73%][Progress:========>                     27%] [Cov:=========================>         73%][Progress:========>                     27%] [Cov:=========================>         73%][Progress:========>                     27%] [Cov:=========================>         73%][Progress:========>                     27%] [Cov:=========================>         73%][Progress:========>                     27%] [Cov:=========================>         73%][Progress:========>                     27%] [Cov:=========================>         73%][Progress:========>                     27%] [Cov:=========================>         73%][Progress:========>                     27%] [Cov:=========================>         73%][Progress:========>                     27%] [Cov:=========================>         73%][Progress:========>                     28%] [Cov:=========================>         73%][Progress:========>                     28%] [Cov:=========================>         73%][Progress:========>                     28%] [Cov:=========================>         73%][Progress:========>                     28%] [Cov:=========================>         73%][Progress:========>                     28%] [Cov:=========================>         73%][Progress:========>                     28%] [Cov:=========================>         73%][Progress:========>                     28%] [Cov:=========================>         73%][Progress:========>                     28%] [Cov:=========================>         73%][Progress:========>                     28%] [Cov:=========================>         73%][Progress:========>                     28%] [Cov:=========================>         73%][Progress:========>                     28%] [Cov:=========================>         73%][Progress:========>                     29%] [Cov:=========================>         73%][Progress:========>                     29%] [Cov:=========================>         73%][Progress:========>                     29%] [Cov:=========================>         73%][Progress:========>                     29%] [Cov:=========================>         73%][Progress:========>                     29%] [Cov:=========================>         73%][Progress:========>                     29%] [Cov:=========================>         73%][Progress:========>                     29%] [Cov:=========================>         73%][Progress:========>                     29%] [Cov:=========================>         73%][Progress:========>                     29%] [Cov:=========================>         73%][Progress:========>                     29%] [Cov:=========================>         73%][Progress:=========>                    30%] [Cov:=========================>         73%][Progress:=========>                    30%] [Cov:=========================>         73%][Progress:=========>                    30%] [Cov:=========================>         73%][Progress:=========>                    30%] [Cov:=========================>         73%][Progress:=========>                    30%] [Cov:=========================>         73%][Progress:=========>                    30%] [Cov:=========================>         73%][Progress:=========>                    30%] [Cov:=========================>         73%][Progress:=========>                    30%] [Cov:=========================>         73%][Progress:=========>                    30%] [Cov:=========================>         73%][Progress:=========>                    30%] [Cov:=========================>         73%][Progress:=========>                    30%] [Cov:=========================>         73%][Progress:=========>                    31%] [Cov:=========================>         73%][Progress:=========>                    31%] [Cov:=========================>         73%][Progress:=========>                    31%] [Cov:=========================>         73%][Progress:=========>                    31%] [Cov:=========================>         73%][Progress:=========>                    31%] [Cov:=========================>         73%][Progress:=========>                    31%] [Cov:=========================>         73%][Progress:=========>                    31%] [Cov:=========================>         73%][Progress:=========>                    31%] [Cov:=========================>         73%][Progress:=========>                    31%] [Cov:=========================>         73%][Progress:=========>                    32%] [Cov:=========================>         73%][Progress:=========>                    32%] [Cov:=========================>         73%][Progress:=========>                    32%] [Cov:=========================>         73%][Progress:=========>                    32%] [Cov:=========================>         73%][Progress:=========>                    32%] [Cov:=========================>         73%][Progress:=========>                    32%] [Cov:=========================>         73%][Progress:=========>                    32%] [Cov:=========================>         73%][Progress:=========>                    32%] [Cov:=========================>         73%][Progress:=========>                    32%] [Cov:=========================>         73%][Progress:=========>                    32%] [Cov:=========================>         73%][Progress:=========>                    32%] [Cov:=========================>         73%][Progress:=========>                    32%] [Cov:=========================>         73%][Progress:=========>                    32%] [Cov:=========================>         73%][Progress:=========>                    32%] [Cov:=========================>         73%][Progress:=========>                    32%] [Cov:=========================>         73%][Progress:=========>                    33%] [Cov:=========================>         73%][Progress:=========>                    33%] [Cov:=========================>         73%][Progress:=========>                    33%] [Cov:=========================>         73%][Progress:=========>                    33%] [Cov:=========================>         73%][Progress:=========>                    33%] [Cov:=========================>         73%][Progress:=========>                    33%] [Cov:=========================>         73%][Progress:=========>                    33%] [Cov:=========================>         73%][Progress:=========>                    33%] [Cov:=========================>         73%][Progress:=========>                    33%] [Cov:=========================>         73%][Progress:=========>                    33%] [Cov:=========================>         73%][Progress:=========>                    33%] [Cov:=========================>         73%][Progress:=========>                    33%] [Cov:=========================>         73%][Progress:=========>                    33%] [Cov:=========================>         73%][Progress:==========>                   34%] [Cov:=========================>         73%][Progress:==========>                   34%] [Cov:=========================>         73%][Progress:==========>                   34%] [Cov:=========================>         73%][Progress:==========>                   34%] [Cov:==========================>        76%][Progress:==========>                   34%] [Cov:==========================>        76%][Progress:==========>                   34%] [Cov:==========================>        76%][Progress:==========>                   34%] [Cov:==========================>        76%][Progress:==========>                   34%] [Cov:==========================>        76%][MASTER] 06:18:20.940 [logback-1] WARN  TestChromosome - Functional mock problem: org.evosuite.ga.ConstructionFailedException: Have no generator for class org.objectweb.asm.jip.commons.LocalVariablesSorter canUseFunctionalMocks=false, canBeMocked: false
[Progress:==========>                   34%] [Cov:==========================>        76%][Progress:==========>                   35%] [Cov:==========================>        76%][Progress:==========>                   35%] [Cov:==========================>        76%][Progress:==========>                   35%] [Cov:==========================>        76%][Progress:==========>                   35%] [Cov:==========================>        76%][Progress:==========>                   35%] [Cov:==========================>        76%][Progress:==========>                   35%] [Cov:==========================>        76%][Progress:==========>                   35%] [Cov:==========================>        76%][Progress:==========>                   35%] [Cov:==========================>        76%][Progress:==========>                   35%] [Cov:==========================>        76%][Progress:==========>                   35%] [Cov:==========================>        76%][Progress:==========>                   36%] [Cov:==========================>        76%][Progress:==========>                   36%] [Cov:==========================>        76%][Progress:==========>                   36%] [Cov:==========================>        76%][Progress:==========>                   36%] [Cov:==========================>        76%][Progress:==========>                   36%] [Cov:==========================>        76%][Progress:==========>                   36%] [Cov:==========================>        76%][Progress:==========>                   36%] [Cov:==========================>        76%][Progress:==========>                   36%] [Cov:==========================>        76%][Progress:==========>                   36%] [Cov:==========================>        76%][Progress:==========>                   36%] [Cov:==========================>        76%][Progress:===========>                  37%] [Cov:==========================>        76%][Progress:===========>                  37%] [Cov:==========================>        76%][Progress:===========>                  37%] [Cov:==========================>        76%][Progress:===========>                  37%] [Cov:==========================>        76%][Progress:===========>                  37%] [Cov:==========================>        76%][Progress:===========>                  37%] [Cov:==========================>        76%][Progress:===========>                  37%] [Cov:==========================>        76%][Progress:===========>                  37%] [Cov:==========================>        76%][Progress:===========>                  37%] [Cov:==========================>        76%][Progress:===========>                  37%] [Cov:==========================>        76%][Progress:===========>                  38%] [Cov:==========================>        76%][Progress:===========>                  38%] [Cov:==========================>        76%][Progress:===========>                  38%] [Cov:==========================>        76%][Progress:===========>                  38%] [Cov:==========================>        76%][Progress:===========>                  38%] [Cov:==========================>        76%][Progress:===========>                  38%] [Cov:==========================>        76%][Progress:===========>                  38%] [Cov:==========================>        76%][Progress:===========>                  38%] [Cov:==========================>        76%][Progress:===========>                  38%] [Cov:==========================>        76%][Progress:===========>                  38%] [Cov:==========================>        76%][Progress:===========>                  38%] [Cov:==========================>        76%][Progress:===========>                  39%] [Cov:==========================>        76%][Progress:===========>                  39%] [Cov:==========================>        76%][Progress:===========>                  39%] [Cov:==========================>        76%][Progress:===========>                  39%] [Cov:==========================>        76%][Progress:===========>                  39%] [Cov:==========================>        76%][Progress:===========>                  39%] [Cov:==========================>        76%][Progress:===========>                  39%] [Cov:==========================>        76%][Progress:===========>                  39%] [Cov:==========================>        76%][Progress:===========>                  39%] [Cov:==========================>        76%][Progress:===========>                  39%] [Cov:==========================>        76%][Progress:============>                 40%] [Cov:==========================>        76%][Progress:============>                 40%] [Cov:==========================>        76%][Progress:============>                 40%] [Cov:==========================>        76%][Progress:============>                 40%] [Cov:==========================>        76%][Progress:============>                 40%] [Cov:==========================>        76%][Progress:============>                 40%] [Cov:==========================>        76%][Progress:============>                 40%] [Cov:==========================>        76%][Progress:============>                 40%] [Cov:==========================>        76%][Progress:============>                 40%] [Cov:==========================>        76%][Progress:============>                 40%] [Cov:==========================>        76%][Progress:============>                 40%] [Cov:==========================>        76%][Progress:============>                 40%] [Cov:==========================>        76%][Progress:============>                 41%] [Cov:==========================>        76%][Progress:============>                 41%] [Cov:==========================>        76%][Progress:============>                 41%] [Cov:==========================>        76%][Progress:============>                 41%] [Cov:==========================>        76%][Progress:============>                 41%] [Cov:==========================>        76%][Progress:============>                 41%] [Cov:==========================>        76%][Progress:============>                 41%] [Cov:==========================>        76%][Progress:============>                 41%] [Cov:==========================>        76%][Progress:============>                 41%] [Cov:==========================>        76%][Progress:============>                 41%] [Cov:==========================>        76%][Progress:============>                 41%] [Cov:==========================>        76%][Progress:============>                 42%] [Cov:==========================>        76%][Progress:============>                 42%] [Cov:==========================>        76%][Progress:============>                 42%] [Cov:==========================>        76%][Progress:============>                 42%] [Cov:==========================>        76%][Progress:============>                 42%] [Cov:==========================>        76%][Progress:============>                 42%] [Cov:==========================>        76%][Progress:============>                 42%] [Cov:==========================>        76%][Progress:============>                 42%] [Cov:==========================>        76%][Progress:============>                 42%] [Cov:==========================>        76%][Progress:============>                 42%] [Cov:==========================>        76%][Progress:============>                 42%] [Cov:==========================>        76%][Progress:============>                 43%] [Cov:==========================>        76%][Progress:============>                 43%] [Cov:==========================>        76%][Progress:============>                 43%] [Cov:==========================>        76%][Progress:============>                 43%] [Cov:==========================>        76%][Progress:============>                 43%] [Cov:==========================>        76%][Progress:============>                 43%] [Cov:==========================>        76%][Progress:============>                 43%] [Cov:==========================>        76%][Progress:============>                 43%] [Cov:==========================>        76%][Progress:============>                 43%] [Cov:==========================>        76%][Progress:=============>                44%] [Cov:==========================>        76%][Progress:=============>                44%] [Cov:==========================>        76%][Progress:=============>                44%] [Cov:==========================>        76%][Progress:=============>                44%] [Cov:==========================>        76%][Progress:=============>                44%] [Cov:==========================>        76%][Progress:=============>                44%] [Cov:==========================>        76%][Progress:=============>                44%] [Cov:==========================>        76%][Progress:=============>                44%] [Cov:==========================>        76%][Progress:=============>                44%] [Cov:==========================>        76%][Progress:=============>                45%] [Cov:==========================>        76%][Progress:=============>                45%] [Cov:==========================>        76%][Progress:=============>                45%] [Cov:==========================>        76%][Progress:=============>                45%] [Cov:==========================>        76%][Progress:=============>                45%] [Cov:==========================>        76%][Progress:=============>                45%] [Cov:==========================>        76%][Progress:=============>                45%] [Cov:==========================>        76%][Progress:=============>                45%] [Cov:==========================>        76%][Progress:=============>                45%] [Cov:==========================>        76%][Progress:=============>                45%] [Cov:==========================>        76%][Progress:=============>                45%] [Cov:==========================>        77%][Progress:=============>                45%] [Cov:==========================>        77%][Progress:=============>                46%] [Cov:==========================>        77%][Progress:=============>                46%] [Cov:==========================>        77%][Progress:=============>                46%] [Cov:==========================>        77%][Progress:=============>                46%] [Cov:==========================>        77%][Progress:=============>                46%] [Cov:==========================>        77%][Progress:=============>                46%] [Cov:==========================>        77%][Progress:=============>                46%] [Cov:==========================>        77%][Progress:=============>                46%] [Cov:==========================>        77%][Progress:=============>                46%] [Cov:==========================>        77%][Progress:=============>                46%] [Cov:==========================>        77%][Progress:=============>                46%] [Cov:==========================>        77%][Progress:=============>                46%] [Cov:==========================>        77%][Progress:=============>                46%] [Cov:==========================>        77%][Progress:=============>                46%] [Cov:==========================>        77%][Progress:==============>               47%] [Cov:==========================>        77%][Progress:==============>               47%] [Cov:==========================>        77%][Progress:==============>               47%] [Cov:==========================>        77%][Progress:==============>               47%] [Cov:==========================>        77%][Progress:==============>               47%] [Cov:==========================>        77%][Progress:==============>               47%] [Cov:==========================>        77%][Progress:==============>               47%] [Cov:==========================>        77%][Progress:==============>               47%] [Cov:==========================>        77%][Progress:==============>               47%] [Cov:==========================>        77%][Progress:==============>               47%] [Cov:==========================>        77%][Progress:==============>               47%] [Cov:==========================>        77%][Progress:==============>               47%] [Cov:==========================>        77%][Progress:==============>               47%] [Cov:==========================>        77%][Progress:==============>               47%] [Cov:==========================>        77%][Progress:==============>               48%] [Cov:==========================>        77%][Progress:==============>               48%] [Cov:==========================>        77%][Progress:==============>               48%] [Cov:==========================>        77%][Progress:==============>               48%] [Cov:==========================>        77%][Progress:==============>               48%] [Cov:==========================>        77%][Progress:==============>               48%] [Cov:==========================>        77%][Progress:==============>               48%] [Cov:==========================>        77%][Progress:==============>               48%] [Cov:==========================>        77%][Progress:==============>               48%] [Cov:==========================>        77%][Progress:==============>               48%] [Cov:==========================>        77%][Progress:==============>               48%] [Cov:==========================>        77%][Progress:==============>               48%] [Cov:==========================>        77%][Progress:==============>               48%] [Cov:==========================>        77%][Progress:==============>               48%] [Cov:==========================>        77%][Progress:==============>               48%] [Cov:==========================>        77%][Progress:==============>               48%] [Cov:==========================>        77%][Progress:==============>               49%] [Cov:==========================>        77%][Progress:==============>               49%] [Cov:==========================>        77%][Progress:==============>               49%] [Cov:==========================>        77%][Progress:==============>               49%] [Cov:==========================>        77%][Progress:==============>               49%] [Cov:==========================>        77%][Progress:==============>               49%] [Cov:==========================>        77%][Progress:==============>               49%] [Cov:==========================>        77%][Progress:==============>               49%] [Cov:==========================>        77%][Progress:==============>               49%] [Cov:==========================>        77%][Progress:==============>               49%] [Cov:==========================>        77%][Progress:==============>               49%] [Cov:==========================>        77%][Progress:==============>               49%] [Cov:==========================>        77%][Progress:==============>               49%] [Cov:==========================>        77%][Progress:===============>              50%] [Cov:==========================>        77%][Progress:===============>              50%] [Cov:==========================>        77%][Progress:===============>              50%] [Cov:==========================>        77%][Progress:===============>              50%] [Cov:==========================>        77%][Progress:===============>              50%] [Cov:==========================>        77%][Progress:===============>              50%] [Cov:==========================>        77%][Progress:===============>              50%] [Cov:==========================>        77%][Progress:===============>              50%] [Cov:==========================>        77%][Progress:===============>              50%] [Cov:==========================>        77%][Progress:===============>              50%] [Cov:==========================>        77%][Progress:===============>              50%] [Cov:==========================>        77%][Progress:===============>              51%] [Cov:==========================>        77%][Progress:===============>              51%] [Cov:==========================>        77%][Progress:===============>              51%] [Cov:==========================>        77%][Progress:===============>              51%] [Cov:==========================>        77%][Progress:===============>              51%] [Cov:==========================>        77%][Progress:===============>              51%] [Cov:==========================>        77%][Progress:===============>              51%] [Cov:==========================>        77%][Progress:===============>              51%] [Cov:==========================>        77%][Progress:===============>              51%] [Cov:==========================>        77%][Progress:===============>              51%] [Cov:==========================>        77%][Progress:===============>              51%] [Cov:==========================>        77%][Progress:===============>              52%] [Cov:==========================>        77%][Progress:===============>              52%] [Cov:==========================>        77%][Progress:===============>              52%] [Cov:==========================>        77%][Progress:===============>              52%] [Cov:==========================>        77%][Progress:===============>              52%] [Cov:==========================>        77%][Progress:===============>              52%] [Cov:==========================>        77%][Progress:===============>              52%] [Cov:==========================>        77%][Progress:===============>              52%] [Cov:==========================>        77%][Progress:===============>              52%] [Cov:==========================>        77%][Progress:===============>              52%] [Cov:==========================>        77%][Progress:===============>              52%] [Cov:==========================>        77%][Progress:===============>              52%] [Cov:==========================>        77%][Progress:===============>              52%] [Cov:==========================>        77%][Progress:===============>              53%] [Cov:==========================>        77%][Progress:===============>              53%] [Cov:==========================>        77%][Progress:===============>              53%] [Cov:==========================>        77%][Progress:===============>              53%] [Cov:==========================>        77%][Progress:===============>              53%] [Cov:==========================>        77%][Progress:===============>              53%] [Cov:==========================>        77%][Progress:===============>              53%] [Cov:==========================>        77%][Progress:===============>              53%] [Cov:==========================>        77%][Progress:===============>              53%] [Cov:==========================>        77%][Progress:===============>              53%] [Cov:==========================>        77%][Progress:===============>              53%] [Cov:==========================>        77%][Progress:================>             54%] [Cov:==========================>        77%][Progress:================>             54%] [Cov:==========================>        77%][Progress:================>             54%] [Cov:==========================>        77%][Progress:================>             54%] [Cov:==========================>        77%][Progress:================>             54%] [Cov:==========================>        77%][Progress:================>             54%] [Cov:==========================>        77%][Progress:================>             54%] [Cov:==========================>        77%][Progress:================>             54%] [Cov:==========================>        77%][Progress:================>             54%] [Cov:==========================>        77%][Progress:================>             54%] [Cov:==========================>        77%][Progress:================>             55%] [Cov:==========================>        77%][Progress:================>             55%] [Cov:==========================>        77%][Progress:================>             55%] [Cov:==========================>        77%][Progress:================>             55%] [Cov:==========================>        77%][Progress:================>             55%] [Cov:==========================>        77%][Progress:================>             55%] [Cov:==========================>        77%][Progress:================>             55%] [Cov:==========================>        77%][Progress:================>             55%] [Cov:==========================>        77%][Progress:================>             55%] [Cov:==========================>        77%][Progress:================>             55%] [Cov:==========================>        77%][Progress:================>             56%] [Cov:==========================>        77%][Progress:================>             56%] [Cov:==========================>        77%][Progress:================>             56%] [Cov:==========================>        77%][Progress:================>             56%] [Cov:==========================>        77%][Progress:================>             56%] [Cov:==========================>        77%][Progress:================>             56%] [Cov:==========================>        77%][Progress:================>             56%] [Cov:==========================>        77%][Progress:================>             56%] [Cov:==========================>        77%][Progress:================>             56%] [Cov:==========================>        77%][Progress:================>             56%] [Cov:==========================>        77%][Progress:================>             56%] [Cov:==========================>        77%][Progress:================>             56%] [Cov:==========================>        77%][Progress:=================>            57%] [Cov:==========================>        77%][Progress:=================>            57%] [Cov:==========================>        77%][Progress:=================>            57%] [Cov:==========================>        77%][Progress:=================>            57%] [Cov:==========================>        77%][Progress:=================>            57%] [Cov:==========================>        77%][Progress:=================>            57%] [Cov:==========================>        77%][Progress:=================>            57%] [Cov:==========================>        77%][Progress:=================>            57%] [Cov:==========================>        77%][Progress:=================>            57%] [Cov:==========================>        77%][Progress:=================>            57%] [Cov:==========================>        77%][Progress:=================>            57%] [Cov:==========================>        77%][Progress:=================>            57%] [Cov:==========================>        77%][Progress:=================>            57%] [Cov:==========================>        77%][Progress:=================>            58%] [Cov:==========================>        77%][Progress:=================>            58%] [Cov:==========================>        77%][Progress:=================>            58%] [Cov:==========================>        77%][Progress:=================>            58%] [Cov:==========================>        77%][Progress:=================>            58%] [Cov:==========================>        77%][Progress:=================>            58%] [Cov:==========================>        77%][Progress:=================>            58%] [Cov:==========================>        77%][Progress:=================>            58%] [Cov:==========================>        77%][Progress:=================>            59%] [Cov:==========================>        77%][Progress:=================>            59%] [Cov:==========================>        77%][Progress:=================>            59%] [Cov:==========================>        77%][Progress:=================>            59%] [Cov:==========================>        77%][Progress:=================>            59%] [Cov:==========================>        77%][Progress:=================>            59%] [Cov:==========================>        77%][Progress:=================>            59%] [Cov:==========================>        77%][Progress:=================>            59%] [Cov:==========================>        77%][Progress:=================>            59%] [Cov:==========================>        77%][Progress:==================>           60%] [Cov:==========================>        77%][Progress:==================>           60%] [Cov:==========================>        77%][Progress:==================>           60%] [Cov:==========================>        77%][Progress:==================>           60%] [Cov:==========================>        77%][Progress:==================>           60%] [Cov:==========================>        77%][Progress:==================>           60%] [Cov:==========================>        77%][Progress:==================>           60%] [Cov:==========================>        77%][Progress:==================>           60%] [Cov:==========================>        77%][Progress:==================>           60%] [Cov:==========================>        77%][Progress:==================>           60%] [Cov:==========================>        77%][Progress:==================>           60%] [Cov:==========================>        77%][Progress:==================>           60%] [Cov:==========================>        77%][Progress:==================>           61%] [Cov:==========================>        77%][Progress:==================>           61%] [Cov:==========================>        77%][Progress:==================>           61%] [Cov:==========================>        77%][Progress:==================>           61%] [Cov:==========================>        77%][Progress:==================>           61%] [Cov:==========================>        77%][Progress:==================>           61%] [Cov:==========================>        77%][Progress:==================>           61%] [Cov:==========================>        77%][Progress:==================>           61%] [Cov:==========================>        77%][Progress:==================>           62%] [Cov:==========================>        77%][Progress:==================>           62%] [Cov:==========================>        77%][Progress:==================>           62%] [Cov:==========================>        77%][Progress:==================>           62%] [Cov:==========================>        77%][Progress:==================>           62%] [Cov:==========================>        77%][Progress:==================>           62%] [Cov:==========================>        77%][Progress:==================>           62%] [Cov:==========================>        77%][Progress:==================>           62%] [Cov:==========================>        77%][Progress:==================>           62%] [Cov:==========================>        77%][Progress:==================>           62%] [Cov:==========================>        77%][Progress:==================>           62%] [Cov:==========================>        77%][Progress:==================>           63%] [Cov:==========================>        77%][Progress:==================>           63%] [Cov:==========================>        77%][Progress:==================>           63%] [Cov:==========================>        77%][Progress:==================>           63%] [Cov:==========================>        77%][Progress:==================>           63%] [Cov:==========================>        77%][Progress:==================>           63%] [Cov:==========================>        77%][Progress:==================>           63%] [Cov:==========================>        77%][Progress:==================>           63%] [Cov:==========================>        77%][Progress:==================>           63%] [Cov:==========================>        77%][Progress:==================>           63%] [Cov:==========================>        77%][Progress:===================>          64%] [Cov:==========================>        77%][Progress:===================>          64%] [Cov:==========================>        77%][Progress:===================>          64%] [Cov:==========================>        77%][Progress:===================>          64%] [Cov:==========================>        77%][Progress:===================>          64%] [Cov:==========================>        77%][Progress:===================>          64%] [Cov:==========================>        77%][Progress:===================>          64%] [Cov:==========================>        77%][Progress:===================>          64%] [Cov:==========================>        77%][Progress:===================>          64%] [Cov:==========================>        77%][Progress:===================>          64%] [Cov:==========================>        77%][Progress:===================>          64%] [Cov:==========================>        77%][Progress:===================>          65%] [Cov:==========================>        77%][Progress:===================>          65%] [Cov:==========================>        77%][Progress:===================>          65%] [Cov:==========================>        77%][Progress:===================>          65%] [Cov:==========================>        77%][Progress:===================>          65%] [Cov:==========================>        77%][Progress:===================>          65%] [Cov:==========================>        77%][Progress:===================>          65%] [Cov:===========================>       78%][Progress:===================>          65%] [Cov:===========================>       78%][Progress:===================>          65%] [Cov:===========================>       78%][Progress:===================>          65%] [Cov:===========================>       78%][Progress:===================>          65%] [Cov:===========================>       78%][Progress:===================>          66%] [Cov:===========================>       78%][Progress:===================>          66%] [Cov:===========================>       78%][Progress:===================>          66%] [Cov:===========================>       78%][Progress:===================>          66%] [Cov:===========================>       78%][Progress:===================>          66%] [Cov:===========================>       78%][Progress:===================>          66%] [Cov:===========================>       78%][Progress:===================>          66%] [Cov:===========================>       78%][Progress:===================>          66%] [Cov:===========================>       78%][Progress:===================>          66%] [Cov:===========================>       78%][Progress:===================>          66%] [Cov:===========================>       78%][Progress:====================>         67%] [Cov:===========================>       78%][Progress:====================>         67%] [Cov:===========================>       78%][Progress:====================>         67%] [Cov:===========================>       78%][Progress:====================>         67%] [Cov:===========================>       78%][Progress:====================>         67%] [Cov:===========================>       78%][Progress:====================>         67%] [Cov:===========================>       78%][Progress:====================>         67%] [Cov:===========================>       78%][Progress:====================>         67%] [Cov:===========================>       78%][Progress:====================>         67%] [Cov:===========================>       78%][Progress:====================>         67%] [Cov:===========================>       78%][Progress:====================>         67%] [Cov:===========================>       78%][Progress:====================>         67%] [Cov:===========================>       78%][Progress:====================>         67%] [Cov:===========================>       78%][Progress:====================>         68%] [Cov:===========================>       78%][Progress:====================>         68%] [Cov:===========================>       78%][Progress:====================>         68%] [Cov:===========================>       78%][Progress:====================>         68%] [Cov:===========================>       78%][Progress:====================>         68%] [Cov:===========================>       78%][Progress:====================>         68%] [Cov:===========================>       78%][Progress:====================>         68%] [Cov:===========================>       78%][Progress:====================>         68%] [Cov:===========================>       78%][Progress:====================>         68%] [Cov:===========================>       78%][Progress:====================>         68%] [Cov:===========================>       78%][Progress:====================>         68%] [Cov:===========================>       78%][Progress:====================>         68%] [Cov:===========================>       78%][Progress:====================>         68%] [Cov:===========================>       78%][Progress:====================>         68%] [Cov:===========================>       78%][Progress:====================>         68%] [Cov:===========================>       78%][Progress:====================>         69%] [Cov:===========================>       78%][Progress:====================>         69%] [Cov:===========================>       78%][Progress:====================>         69%] [Cov:===========================>       78%][Progress:====================>         69%] [Cov:===========================>       78%][Progress:====================>         69%] [Cov:===========================>       78%][Progress:====================>         69%] [Cov:===========================>       78%][Progress:====================>         69%] [Cov:===========================>       78%][Progress:====================>         69%] [Cov:===========================>       78%][Progress:====================>         69%] [Cov:===========================>       78%][Progress:====================>         69%] [Cov:===========================>       78%][Progress:====================>         69%] [Cov:===========================>       78%][Progress:====================>         69%] [Cov:===========================>       78%][Progress:====================>         69%] [Cov:===========================>       78%][Progress:====================>         69%] [Cov:===========================>       78%][Progress:====================>         69%] [Cov:===========================>       78%][Progress:====================>         69%] [Cov:===========================>       78%][Progress:====================>         69%] [Cov:===========================>       78%][Progress:=====================>        70%] [Cov:===========================>       78%][Progress:=====================>        70%] [Cov:===========================>       78%][Progress:=====================>        70%] [Cov:===========================>       78%][Progress:=====================>        70%] [Cov:===========================>       78%][Progress:=====================>        70%] [Cov:===========================>       78%][Progress:=====================>        70%] [Cov:===========================>       78%][Progress:=====================>        70%] [Cov:===========================>       78%][Progress:=====================>        70%] [Cov:===========================>       78%][Progress:=====================>        70%] [Cov:===========================>       78%][Progress:=====================>        70%] [Cov:===========================>       78%][Progress:=====================>        70%] [Cov:===========================>       78%][Progress:=====================>        70%] [Cov:===========================>       78%][Progress:=====================>        70%] [Cov:===========================>       78%][Progress:=====================>        70%] [Cov:===========================>       78%][Progress:=====================>        71%] [Cov:===========================>       78%][Progress:=====================>        71%] [Cov:===========================>       78%][Progress:=====================>        71%] [Cov:===========================>       78%][Progress:=====================>        71%] [Cov:===========================>       78%][Progress:=====================>        71%] [Cov:===========================>       78%][Progress:=====================>        71%] [Cov:===========================>       78%][Progress:=====================>        71%] [Cov:===========================>       78%][Progress:=====================>        71%] [Cov:===========================>       78%][Progress:=====================>        71%] [Cov:===========================>       78%][Progress:=====================>        71%] [Cov:===========================>       78%][Progress:=====================>        71%] [Cov:===========================>       78%][Progress:=====================>        71%] [Cov:===========================>       78%][Progress:=====================>        71%] [Cov:===========================>       78%][Progress:=====================>        71%] [Cov:===========================>       78%][Progress:=====================>        71%] [Cov:===========================>       78%][Progress:=====================>        71%] [Cov:===========================>       78%][Progress:=====================>        71%] [Cov:===========================>       78%][Progress:=====================>        71%] [Cov:===========================>       78%][Progress:=====================>        72%] [Cov:===========================>       78%][Progress:=====================>        72%] [Cov:===========================>       78%][Progress:=====================>        72%] [Cov:===========================>       78%][Progress:=====================>        72%] [Cov:===========================>       78%][Progress:=====================>        72%] [Cov:===========================>       78%][Progress:=====================>        72%] [Cov:===========================>       78%][Progress:=====================>        72%] [Cov:===========================>       78%][Progress:=====================>        72%] [Cov:===========================>       78%][Progress:=====================>        72%] [Cov:===========================>       78%][Progress:=====================>        72%] [Cov:===========================>       78%][Progress:=====================>        72%] [Cov:===========================>       78%][Progress:=====================>        72%] [Cov:===========================>       78%][Progress:=====================>        72%] [Cov:===========================>       78%][Progress:=====================>        72%] [Cov:===========================>       78%][Progress:=====================>        72%] [Cov:===========================>       78%][Progress:=====================>        72%] [Cov:===========================>       78%][Progress:=====================>        73%] [Cov:===========================>       78%][Progress:=====================>        73%] [Cov:===========================>       78%][Progress:=====================>        73%] [Cov:===========================>       78%][Progress:=====================>        73%] [Cov:===========================>       78%][Progress:=====================>        73%] [Cov:===========================>       78%][Progress:=====================>        73%] [Cov:===========================>       78%][Progress:=====================>        73%] [Cov:===========================>       78%][Progress:=====================>        73%] [Cov:===========================>       78%][Progress:=====================>        73%] [Cov:===========================>       78%][Progress:=====================>        73%] [Cov:===========================>       78%][Progress:=====================>        73%] [Cov:===========================>       78%][Progress:=====================>        73%] [Cov:===========================>       78%][Progress:=====================>        73%] [Cov:===========================>       78%][Progress:=====================>        73%] [Cov:===========================>       78%][Progress:=====================>        73%] [Cov:===========================>       78%][Progress:=====================>        73%] [Cov:===========================>       78%][Progress:=====================>        73%] [Cov:===========================>       78%][Progress:=====================>        73%] [Cov:===========================>       78%][Progress:======================>       74%] [Cov:===========================>       78%][Progress:======================>       74%] [Cov:===========================>       78%][Progress:======================>       74%] [Cov:===========================>       78%][Progress:======================>       74%] [Cov:===========================>       78%][Progress:======================>       74%] [Cov:===========================>       78%][Progress:======================>       74%] [Cov:===========================>       78%][Progress:======================>       74%] [Cov:===========================>       78%][Progress:======================>       74%] [Cov:===========================>       78%][Progress:======================>       74%] [Cov:===========================>       78%][Progress:======================>       74%] [Cov:===========================>       78%][Progress:======================>       74%] [Cov:===========================>       78%][Progress:======================>       74%] [Cov:===========================>       78%][Progress:======================>       74%] [Cov:===========================>       78%][Progress:======================>       74%] [Cov:===========================>       78%][Progress:======================>       74%] [Cov:===========================>       78%][Progress:======================>       74%] [Cov:===========================>       78%][Progress:======================>       75%] [Cov:===========================>       78%][Progress:======================>       75%] [Cov:===========================>       78%][Progress:======================>       75%] [Cov:===========================>       78%][Progress:======================>       75%] [Cov:===========================>       78%][Progress:======================>       75%] [Cov:===========================>       78%][Progress:======================>       75%] [Cov:===========================>       78%][Progress:======================>       75%] [Cov:===========================>       78%][Progress:======================>       75%] [Cov:===========================>       78%][Progress:======================>       75%] [Cov:===========================>       78%][Progress:======================>       75%] [Cov:===========================>       78%][Progress:======================>       75%] [Cov:===========================>       78%][Progress:======================>       75%] [Cov:===========================>       78%][Progress:======================>       75%] [Cov:===========================>       78%][Progress:======================>       75%] [Cov:===========================>       78%][Progress:======================>       75%] [Cov:===========================>       78%][Progress:======================>       75%] [Cov:===========================>       78%][Progress:======================>       76%] [Cov:===========================>       78%][Progress:======================>       76%] [Cov:===========================>       78%][Progress:======================>       76%] [Cov:===========================>       78%][Progress:======================>       76%] [Cov:===========================>       78%][Progress:======================>       76%] [Cov:===========================>       78%][Progress:======================>       76%] [Cov:===========================>       78%][Progress:======================>       76%] [Cov:===========================>       78%][Progress:======================>       76%] [Cov:===========================>       78%][Progress:======================>       76%] [Cov:===========================>       78%][Progress:======================>       76%] [Cov:===========================>       78%][Progress:======================>       76%] [Cov:===========================>       78%][Progress:======================>       76%] [Cov:===========================>       78%][Progress:======================>       76%] [Cov:===========================>       78%][Progress:======================>       76%] [Cov:===========================>       78%][Progress:======================>       76%] [Cov:===========================>       78%][Progress:======================>       76%] [Cov:===========================>       78%][Progress:=======================>      77%] [Cov:===========================>       78%][Progress:=======================>      77%] [Cov:===========================>       78%][Progress:=======================>      77%] [Cov:===========================>       78%][Progress:=======================>      77%] [Cov:===========================>       78%][Progress:=======================>      77%] [Cov:===========================>       78%][Progress:=======================>      77%] [Cov:===========================>       78%][Progress:=======================>      77%] [Cov:===========================>       78%][Progress:=======================>      77%] [Cov:===========================>       78%][Progress:=======================>      77%] [Cov:===========================>       78%][Progress:=======================>      77%] [Cov:===========================>       78%][Progress:=======================>      77%] [Cov:===========================>       78%][Progress:=======================>      77%] [Cov:===========================>       78%][Progress:=======================>      77%] [Cov:===========================>       78%][Progress:=======================>      77%] [Cov:===========================>       78%][Progress:=======================>      77%] [Cov:===========================>       78%][Progress:=======================>      78%] [Cov:===========================>       78%][Progress:=======================>      78%] [Cov:===========================>       78%][Progress:=======================>      78%] [Cov:===========================>       78%][Progress:=======================>      78%] [Cov:===========================>       78%][Progress:=======================>      78%] [Cov:===========================>       78%][Progress:=======================>      78%] [Cov:===========================>       78%][Progress:=======================>      78%] [Cov:===========================>       78%][Progress:=======================>      78%] [Cov:===========================>       78%][Progress:=======================>      78%] [Cov:===========================>       78%][Progress:=======================>      78%] [Cov:===========================>       78%][Progress:=======================>      78%] [Cov:===========================>       78%][Progress:=======================>      78%] [Cov:===========================>       78%][Progress:=======================>      78%] [Cov:===========================>       78%][Progress:=======================>      78%] [Cov:===========================>       78%][Progress:=======================>      79%] [Cov:===========================>       78%][Progress:=======================>      79%] [Cov:===========================>       78%][Progress:=======================>      79%] [Cov:===========================>       78%][Progress:=======================>      79%] [Cov:===========================>       78%][Progress:=======================>      79%] [Cov:===========================>       78%][Progress:=======================>      79%] [Cov:===========================>       78%][Progress:=======================>      79%] [Cov:===========================>       78%][Progress:=======================>      79%] [Cov:===========================>       78%][Progress:=======================>      79%] [Cov:===========================>       78%][Progress:=======================>      79%] [Cov:===========================>       78%][Progress:=======================>      79%] [Cov:===========================>       78%][Progress:=======================>      79%] [Cov:===========================>       78%][Progress:=======================>      79%] [Cov:===========================>       78%][Progress:=======================>      79%] [Cov:===========================>       78%][Progress:=======================>      79%] [Cov:===========================>       78%][Progress:========================>     80%] [Cov:===========================>       78%][Progress:========================>     80%] [Cov:===========================>       78%][Progress:========================>     80%] [Cov:===========================>       78%][Progress:========================>     80%] [Cov:===========================>       78%][Progress:========================>     80%] [Cov:===========================>       78%][Progress:========================>     80%] [Cov:===========================>       78%][Progress:========================>     80%] [Cov:===========================>       78%][Progress:========================>     80%] [Cov:===========================>       78%][Progress:========================>     80%] [Cov:===========================>       78%][Progress:========================>     80%] [Cov:===========================>       78%][Progress:========================>     80%] [Cov:===========================>       78%][Progress:========================>     80%] [Cov:===========================>       78%][Progress:========================>     80%] [Cov:===========================>       78%][Progress:========================>     80%] [Cov:===========================>       78%][Progress:========================>     81%] [Cov:===========================>       78%][Progress:========================>     81%] [Cov:===========================>       78%][Progress:========================>     81%] [Cov:===========================>       78%][Progress:========================>     81%] [Cov:===========================>       78%][Progress:========================>     81%] [Cov:===========================>       78%][Progress:========================>     81%] [Cov:===========================>       78%][Progress:========================>     81%] [Cov:===========================>       78%][Progress:========================>     81%] [Cov:===========================>       78%][Progress:========================>     81%] [Cov:===========================>       78%][Progress:========================>     81%] [Cov:===========================>       78%][Progress:========================>     81%] [Cov:===========================>       78%][Progress:========================>     81%] [Cov:===========================>       78%][Progress:========================>     82%] [Cov:===========================>       78%][Progress:========================>     82%] [Cov:===========================>       78%][Progress:========================>     82%] [Cov:===========================>       78%][Progress:========================>     82%] [Cov:===========================>       78%][Progress:========================>     82%] [Cov:===========================>       78%][Progress:========================>     82%] [Cov:===========================>       78%][Progress:========================>     82%] [Cov:===========================>       78%][Progress:========================>     82%] [Cov:===========================>       78%][Progress:========================>     82%] [Cov:===========================>       78%][Progress:========================>     82%] [Cov:===========================>       78%][Progress:========================>     83%] [Cov:===========================>       78%][Progress:========================>     83%] [Cov:===========================>       78%][Progress:========================>     83%] [Cov:===========================>       78%][Progress:========================>     83%] [Cov:===========================>       78%][Progress:========================>     83%] [Cov:===========================>       78%][Progress:========================>     83%] [Cov:===========================>       78%][Progress:========================>     83%] [Cov:===========================>       78%][Progress:========================>     83%] [Cov:===========================>       78%][Progress:========================>     83%] [Cov:===========================>       78%][Progress:========================>     83%] [Cov:===========================>       78%][Progress:========================>     83%] [Cov:===========================>       78%][Progress:========================>     83%] [Cov:===========================>       78%][Progress:========================>     83%] [Cov:===========================>       78%][Progress:========================>     83%] [Cov:===========================>       78%][Progress:=========================>    84%] [Cov:===========================>       78%][Progress:=========================>    84%] [Cov:===========================>       78%][Progress:=========================>    84%] [Cov:===========================>       78%][Progress:=========================>    84%] [Cov:===========================>       78%][Progress:=========================>    84%] [Cov:===========================>       78%][Progress:=========================>    84%] [Cov:===========================>       78%][Progress:=========================>    84%] [Cov:===========================>       78%][Progress:=========================>    84%] [Cov:===========================>       78%][Progress:=========================>    84%] [Cov:===========================>       78%][Progress:=========================>    84%] [Cov:===========================>       78%][Progress:=========================>    84%] [Cov:===========================>       78%][Progress:=========================>    84%] [Cov:===========================>       78%][Progress:=========================>    84%] [Cov:===========================>       78%][Progress:=========================>    84%] [Cov:===========================>       78%][Progress:=========================>    84%] [Cov:===========================>       78%][Progress:=========================>    85%] [Cov:===========================>       78%][Progress:=========================>    85%] [Cov:===========================>       78%][Progress:=========================>    85%] [Cov:===========================>       78%][Progress:=========================>    85%] [Cov:===========================>       78%][Progress:=========================>    85%] [Cov:===========================>       78%][Progress:=========================>    85%] [Cov:===========================>       78%][Progress:=========================>    85%] [Cov:===========================>       78%][Progress:=========================>    85%] [Cov:===========================>       78%][Progress:=========================>    85%] [Cov:===========================>       78%][Progress:=========================>    85%] [Cov:===========================>       78%][Progress:=========================>    85%] [Cov:===========================>       78%][Progress:=========================>    85%] [Cov:===========================>       78%][Progress:=========================>    85%] [Cov:===========================>       78%][Progress:=========================>    85%] [Cov:===========================>       78%][Progress:=========================>    85%] [Cov:===========================>       78%][Progress:=========================>    85%] [Cov:===========================>       78%][Progress:=========================>    85%] [Cov:===========================>       78%][Progress:=========================>    85%] [Cov:===========================>       78%][Progress:=========================>    86%] [Cov:===========================>       78%][Progress:=========================>    86%] [Cov:===========================>       78%][Progress:=========================>    86%] [Cov:===========================>       78%][Progress:=========================>    86%] [Cov:===========================>       78%][Progress:=========================>    86%] [Cov:===========================>       78%][Progress:=========================>    86%] [Cov:===========================>       78%][Progress:=========================>    86%] [Cov:===========================>       78%][Progress:=========================>    86%] [Cov:===========================>       78%][Progress:=========================>    86%] [Cov:===========================>       78%][Progress:=========================>    86%] [Cov:===========================>       78%][Progress:=========================>    86%] [Cov:===========================>       78%][Progress:=========================>    86%] [Cov:===========================>       78%][Progress:=========================>    86%] [Cov:===========================>       78%][Progress:==========================>   87%] [Cov:===========================>       78%][Progress:==========================>   87%] [Cov:===========================>       78%][Progress:==========================>   87%] [Cov:===========================>       78%][Progress:==========================>   87%] [Cov:===========================>       78%][Progress:==========================>   87%] [Cov:===========================>       78%][Progress:==========================>   87%] [Cov:===========================>       78%][Progress:==========================>   87%] [Cov:===========================>       78%][Progress:==========================>   87%] [Cov:===========================>       78%][Progress:==========================>   87%] [Cov:===========================>       78%][Progress:==========================>   87%] [Cov:===========================>       78%][Progress:==========================>   87%] [Cov:===========================>       78%][Progress:==========================>   87%] [Cov:===========================>       78%][Progress:==========================>   88%] [Cov:===========================>       78%][Progress:==========================>   88%] [Cov:===========================>       78%][Progress:==========================>   88%] [Cov:===========================>       78%][Progress:==========================>   88%] [Cov:===========================>       78%][Progress:==========================>   88%] [Cov:===========================>       78%][Progress:==========================>   88%] [Cov:===========================>       78%][Progress:==========================>   88%] [Cov:===========================>       78%][Progress:==========================>   88%] [Cov:===========================>       78%][Progress:==========================>   88%] [Cov:===========================>       78%][Progress:==========================>   88%] [Cov:===========================>       78%][Progress:==========================>   88%] [Cov:===========================>       78%][Progress:==========================>   88%] [Cov:===========================>       78%][Progress:==========================>   88%] [Cov:===========================>       78%][Progress:==========================>   88%] [Cov:===========================>       78%][Progress:==========================>   89%] [Cov:===========================>       78%][Progress:==========================>   89%] [Cov:===========================>       78%][Progress:==========================>   89%] [Cov:===========================>       78%][Progress:==========================>   89%] [Cov:===========================>       78%][Progress:==========================>   89%] [Cov:===========================>       78%][Progress:==========================>   89%] [Cov:===========================>       78%][Progress:==========================>   89%] [Cov:===========================>       78%][Progress:==========================>   89%] [Cov:===========================>       78%][Progress:==========================>   89%] [Cov:===========================>       78%][Progress:==========================>   89%] [Cov:===========================>       78%][Progress:==========================>   89%] [Cov:===========================>       78%][Progress:==========================>   89%] [Cov:===========================>       78%][Progress:===========================>  90%] [Cov:===========================>       78%][Progress:===========================>  90%] [Cov:===========================>       78%][Progress:===========================>  90%] [Cov:===========================>       78%][Progress:===========================>  90%] [Cov:===========================>       78%][Progress:===========================>  90%] [Cov:===========================>       78%][Progress:===========================>  90%] [Cov:===========================>       78%][Progress:===========================>  90%] [Cov:===========================>       78%][Progress:===========================>  90%] [Cov:===========================>       78%][Progress:===========================>  90%] [Cov:===========================>       78%][Progress:===========================>  90%] [Cov:===========================>       78%][Progress:===========================>  90%] [Cov:===========================>       78%][Progress:===========================>  90%] [Cov:===========================>       78%][Progress:===========================>  90%] [Cov:===========================>       78%][Progress:===========================>  90%] [Cov:===========================>       78%][Progress:===========================>  90%] [Cov:===========================>       78%][Progress:===========================>  90%] [Cov:===========================>       78%][Progress:===========================>  90%] [Cov:===========================>       78%][Progress:===========================>  90%] [Cov:===========================>       78%][Progress:===========================>  91%] [Cov:===========================>       78%][Progress:===========================>  91%] [Cov:===========================>       78%][Progress:===========================>  91%] [Cov:===========================>       78%][Progress:===========================>  91%] [Cov:===========================>       78%][Progress:===========================>  91%] [Cov:===========================>       78%][Progress:===========================>  91%] [Cov:===========================>       78%][Progress:===========================>  91%] [Cov:===========================>       78%][Progress:===========================>  91%] [Cov:===========================>       78%][Progress:===========================>  91%] [Cov:===========================>       78%][Progress:===========================>  91%] [Cov:===========================>       78%][Progress:===========================>  91%] [Cov:===========================>       78%][Progress:===========================>  91%] [Cov:===========================>       78%][Progress:===========================>  92%] [Cov:===========================>       78%][Progress:===========================>  92%] [Cov:===========================>       78%][Progress:===========================>  92%] [Cov:===========================>       78%][Progress:===========================>  92%] [Cov:===========================>       78%][Progress:===========================>  92%] [Cov:===========================>       78%][Progress:===========================>  92%] [Cov:===========================>       78%][Progress:===========================>  92%] [Cov:===========================>       78%][Progress:===========================>  92%] [Cov:===========================>       78%][Progress:===========================>  92%] [Cov:===========================>       78%][Progress:===========================>  92%] [Cov:===========================>       78%][Progress:===========================>  92%] [Cov:===========================>       78%][Progress:===========================>  92%] [Cov:===========================>       78%][Progress:===========================>  92%] [Cov:===========================>       78%][Progress:===========================>  92%] [Cov:===========================>       78%][Progress:===========================>  92%] [Cov:===========================>       78%][Progress:===========================>  92%] [Cov:===========================>       78%][Progress:===========================>  92%] [Cov:===========================>       78%][Progress:===========================>  92%] [Cov:===========================>       78%][Progress:===========================>  93%] [Cov:===========================>       78%][Progress:===========================>  93%] [Cov:===========================>       78%][Progress:===========================>  93%] [Cov:===========================>       78%][Progress:===========================>  93%] [Cov:===========================>       78%][Progress:===========================>  93%] [Cov:===========================>       78%][Progress:===========================>  93%] [Cov:===========================>       78%][Progress:===========================>  93%] [Cov:===========================>       78%][Progress:===========================>  93%] [Cov:===========================>       78%][Progress:===========================>  93%] [Cov:===========================>       78%][Progress:===========================>  93%] [Cov:===========================>       78%][Progress:===========================>  93%] [Cov:===========================>       78%][Progress:===========================>  93%] [Cov:===========================>       78%][Progress:===========================>  93%] [Cov:===========================>       78%][Progress:===========================>  93%] [Cov:===========================>       78%][Progress:============================> 94%] [Cov:===========================>       78%][Progress:============================> 94%] [Cov:===========================>       78%][Progress:============================> 94%] [Cov:===========================>       78%][Progress:============================> 94%] [Cov:===========================>       78%][Progress:============================> 94%] [Cov:===========================>       78%][Progress:============================> 94%] [Cov:===========================>       78%][Progress:============================> 94%] [Cov:===========================>       78%][Progress:============================> 94%] [Cov:===========================>       78%][Progress:============================> 94%] [Cov:===========================>       78%][Progress:============================> 94%] [Cov:===========================>       78%][Progress:============================> 94%] [Cov:===========================>       78%][Progress:============================> 94%] [Cov:===========================>       78%][Progress:============================> 94%] [Cov:===========================>       78%][Progress:============================> 94%] [Cov:===========================>       78%][Progress:============================> 94%] [Cov:===========================>       78%][Progress:============================> 94%] [Cov:===========================>       78%][Progress:============================> 95%] [Cov:===========================>       78%][Progress:============================> 95%] [Cov:===========================>       78%][Progress:============================> 95%] [Cov:===========================>       78%][Progress:============================> 95%] [Cov:===========================>       78%][Progress:============================> 95%] [Cov:===========================>       78%][Progress:============================> 95%] [Cov:===========================>       78%][Progress:============================> 95%] [Cov:===========================>       78%][Progress:============================> 95%] [Cov:===========================>       78%][Progress:============================> 95%] [Cov:===========================>       78%][Progress:============================> 95%] [Cov:===========================>       78%][Progress:============================> 95%] [Cov:===========================>       78%][Progress:============================> 95%] [Cov:===========================>       78%][Progress:============================> 95%] [Cov:===========================>       78%][Progress:============================> 95%] [Cov:===========================>       78%][Progress:============================> 95%] [Cov:===========================>       78%][Progress:============================> 95%] [Cov:===========================>       78%][Progress:============================> 96%] [Cov:===========================>       78%][Progress:============================> 96%] [Cov:===========================>       78%][Progress:============================> 96%] [Cov:===========================>       78%][Progress:============================> 96%] [Cov:===========================>       78%][Progress:============================> 96%] [Cov:===========================>       78%][Progress:============================> 96%] [Cov:===========================>       78%][Progress:============================> 96%] [Cov:===========================>       78%][Progress:============================> 96%] [Cov:===========================>       78%][Progress:============================> 96%] [Cov:===========================>       78%][Progress:============================> 96%] [Cov:===========================>       78%][Progress:============================> 96%] [Cov:===========================>       78%][Progress:============================> 96%] [Cov:===========================>       78%][Progress:============================> 96%] [Cov:===========================>       78%][Progress:============================> 96%] [Cov:===========================>       78%][Progress:============================> 96%] [Cov:===========================>       78%][Progress:============================> 96%] [Cov:===========================>       78%][Progress:============================> 96%] [Cov:===========================>       78%][Progress:============================> 96%] [Cov:===========================>       78%][Progress:=============================>97%] [Cov:===========================>       78%][Progress:=============================>97%] [Cov:===========================>       78%][Progress:=============================>97%] [Cov:===========================>       78%][Progress:=============================>97%] [Cov:===========================>       78%][Progress:=============================>97%] [Cov:===========================>       78%][Progress:=============================>97%] [Cov:===========================>       78%][Progress:=============================>97%] [Cov:===========================>       78%][Progress:=============================>97%] [Cov:===========================>       78%][Progress:=============================>97%] [Cov:===========================>       78%][Progress:=============================>97%] [Cov:===========================>       78%][Progress:=============================>97%] [Cov:===========================>       78%][Progress:=============================>97%] [Cov:===========================>       78%][Progress:=============================>97%] [Cov:===========================>       78%][Progress:=============================>97%] [Cov:===========================>       78%][Progress:=============================>97%] [Cov:===========================>       78%][Progress:=============================>97%] [Cov:===========================>       78%][Progress:=============================>97%] [Cov:===========================>       78%][Progress:=============================>97%] [Cov:===========================>       78%][Progress:=============================>97%] [Cov:===========================>       78%][Progress:=============================>97%] [Cov:===========================>       78%][Progress:=============================>97%] [Cov:===========================>       78%][Progress:=============================>98%] [Cov:===========================>       78%][Progress:=============================>98%] [Cov:===========================>       78%][Progress:=============================>98%] [Cov:===========================>       78%][Progress:=============================>98%] [Cov:===========================>       78%][Progress:=============================>98%] [Cov:===========================>       78%][Progress:=============================>98%] [Cov:===========================>       78%][Progress:=============================>98%] [Cov:===========================>       78%][Progress:=============================>98%] [Cov:===========================>       78%][Progress:=============================>98%] [Cov:===========================>       78%][Progress:=============================>98%] [Cov:===========================>       78%][Progress:=============================>98%] [Cov:===========================>       78%][Progress:=============================>98%] [Cov:===========================>       78%][Progress:=============================>98%] [Cov:===========================>       78%][Progress:=============================>98%] [Cov:===========================>       78%][Progress:=============================>98%] [Cov:===========================>       78%][Progress:=============================>98%] [Cov:===========================>       78%][Progress:=============================>98%] [Cov:===========================>       78%][Progress:=============================>98%] [Cov:===========================>       78%][Progress:=============================>98%] [Cov:===========================>       78%][Progress:=============================>98%] [Cov:===========================>       78%][Progress:=============================>98%] [Cov:===========================>       78%][Progress:=============================>99%] [Cov:===========================>       78%][Progress:=============================>99%] [Cov:===========================>       78%][Progress:=============================>99%] [Cov:===========================>       78%][Progress:=============================>99%] [Cov:===========================>       78%][Progress:=============================>99%] [Cov:===========================>       78%][Progress:=============================>99%] [Cov:===========================>       78%][Progress:=============================>99%] [Cov:===========================>       78%][Progress:=============================>99%] [Cov:===========================>       78%][Progress:=============================>99%] [Cov:===========================>       78%][Progress:=============================>99%] [Cov:===========================>       78%][Progress:=============================>99%] [Cov:===========================>       78%][Progress:=============================>99%] [Cov:===========================>       78%][Progress:=============================>99%] [Cov:===========================>       78%][Progress:=============================>99%] [Cov:===========================>       78%][Progress:=============================>99%] [Cov:===========================>       78%][Progress:=============================>99%] [Cov:===========================>       78%][Progress:=============================>99%] [Cov:===========================>       78%][Progress:=============================>99%] [Cov:===========================>       78%][Progress:=============================>99%] [Cov:===========================>       78%][Progress:=============================>99%] [Cov:===========================>       78%][Progress:=============================>99%] [Cov:===========================>       78%][Progress:=============================>99%] [Cov:===========================>       78%][Progress:==============================100%] [Cov:===========================>       78%][Progress:==============================100%] [Cov:===========================>       78%][Progress:==============================100%] [Cov:===========================>       78%][Progress:==============================100%] [Cov:===========================>       78%][Progress:==============================100%] [Cov:===========================>       78%][Progress:==============================100%] [Cov:===========================>       78%][Progress:==============================100%] [Cov:===========================>       78%][Progress:==============================100%] [Cov:===========================>       78%][Progress:==============================100%] [Cov:===========================>       78%][Progress:==============================100%] [Cov:===========================>       78%][Progress:==============================100%] [Cov:===========================>       78%][Progress:==============================100%] [Cov:===========================>       78%][Progress:==============================100%] [Cov:===========================>       78%][Progress:==============================100%] [Cov:===========================>       78%][Progress:==============================100%] [Cov:===========================>       78%][Progress:==============================100%] [Cov:===========================>       78%][Progress:==============================100%] [Cov:===========================>       78%][Progress:==============================100%] [Cov:===========================>       78%][Progress:==============================100%] [Cov:===========================>       78%]
* Search finished after 101s and 1234 generations, 413417 statements, best individual has fitness: 87.0
* Generated before the refinement 29 tests with total length 94
statement is: mock(interface org.objectweb.asm.jip.MethodVisitor) type is: class org.evosuite.testcase.statements.FunctionalMockStatement return type interface org.objectweb.asm.jip.MethodVisitor
statement code is: MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer())
statement is: org.objectweb.asm.jip.MethodAdapter(Lorg/objectweb/asm/jip/MethodVisitor;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.objectweb.asm.jip.MethodAdapter
statement code is: MethodAdapter methodAdapter = new MethodAdapter(arg0)
statement is: org.objectweb.asm.jip.commons.LocalVariablesSorter(ILjava/lang/String;Lorg/objectweb/asm/jip/MethodVisitor;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.objectweb.asm.jip.commons.LocalVariablesSorter
statement code is: LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter((-959), "F)`{s+j=R`S1N~R", arg2)
statement is: org.objectweb.asm.jip.Label()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.objectweb.asm.jip.Label
statement code is: Label label = new Label()
statement is: visitLocalVariable(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/objectweb/asm/jip/Label;Lorg/objectweb/asm/jip/Label;I)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: localVariablesSorter.visitLocalVariable("F)`{s+j=R`S1N~R", "ClassReader.accept() should be called with EXPAND_FRAMES flag", "H+[()r7", arg4, arg4, 0)
test data is: MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer());
MethodAdapter methodAdapter = new MethodAdapter(methodVisitor);
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter((-959), "F)`{s+j=R`S1N~R", methodAdapter);
Label label = new Label();
localVariablesSorter.visitLocalVariable("F)`{s+j=R`S1N~R", "ClassReader.accept() should be called with EXPAND_FRAMES flag", "H+[()r7", label, label, 0);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer());
        MethodAdapter methodAdapter = new MethodAdapter(methodVisitor);
        LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(-959, "F)`{s+j=R`S1N~R", methodAdapter);
        Label label = new Label();
        localVariablesSorter.visitLocalVariable("F)`{s+j=R`S1N~R", "ClassReader.accept() should be called with EXPAND_FRAMES flag", "H+[()r7", label, label, 0);
        // Improved test data:
        MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer());
        MethodAdapter methodAdapter = new MethodAdapter(methodVisitor);
        LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(-959, "F)`{s+j=R`S1N~R", methodAdapter);
        Label label = new Label();
    }
}
statement is: MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer()), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: mock(MethodVisitor.class, new ViolatedAssumptionAnswer()) target is:  method is: mock(java.lang.Class,<unknown>)
target name is: MethodVisitor argument is: MethodVisitor.class
Matched Method is: mock(interface org.objectweb.asm.jip.MethodVisitor)
statement is: MethodAdapter methodAdapter = new MethodAdapter(methodVisitor), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(-959, "F)`{s+j=R`S1N~R", methodAdapter), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Label label = new Label(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: localVariablesSorter.visitLocalVariable("F)`{s+j=R`S1N~R", "ClassReader.accept() should be called with EXPAND_FRAMES flag", "H+[()r7", label, label, 0), class spoon.support.reflect.code.CtInvocationImpl
invocation is: localVariablesSorter.visitLocalVariable("F)`{s+j=R`S1N~R", "ClassReader.accept() should be called with EXPAND_FRAMES flag", "H+[()r7", label, label, 0) target is: localVariablesSorter method is: visitLocalVariable(java.lang.String,java.lang.String,java.lang.String,Label,Label,int)
source statement: org.objectweb.asm.jip.commons.LocalVariablesSorter(ILjava/lang/String;Lorg/objectweb/asm/jip/MethodVisitor;)V callee: VariableReference: Statement 2, type org.objectweb.asm.jip.commons.LocalVariablesSorterindex is: 3
Matched Method is: visitLocalVariable(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/objectweb/asm/jip/Label;Lorg/objectweb/asm/jip/Label;I)V
statement is: // Improved test data:
MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer()), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: mock(MethodVisitor.class, new ViolatedAssumptionAnswer()) target is:  method is: mock(java.lang.Class,<unknown>)
target name is: MethodVisitor argument is: MethodVisitor.class
Matched Method is: mock(interface org.objectweb.asm.jip.MethodVisitor)
statement is: MethodAdapter methodAdapter = new MethodAdapter(methodVisitor), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(-959, "F)`{s+j=R`S1N~R", methodAdapter), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Label label = new Label(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase is: MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer());
MethodAdapter methodAdapter = new MethodAdapter(methodVisitor);
String string = "F)`{s+j=R`S1N~R";
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter((int) string, (String) methodAdapter, methodAdapter);
Label label = new Label();
String string = "F)`{s+j=R`S1N~R";
String string = "ClassReader.accept() should be called with EXPAND_FRAMES flag";
String string = "H+[()r7";
int _int = 0;
((LocalVariablesSorter) string).visitLocalVariable(string, string, string, label, label, _int);
MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer());
MethodAdapter methodAdapter = new MethodAdapter(methodVisitor);
String string = "F)`{s+j=R`S1N~R";
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter((int) string, (String) methodAdapter, methodAdapter);
Label label = new Label();

statement is: mock(interface org.objectweb.asm.jip.MethodVisitor) type is: class org.evosuite.testcase.statements.FunctionalMockStatement return type interface org.objectweb.asm.jip.MethodVisitor
statement code is: MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer())
statement is: org.objectweb.asm.jip.MethodAdapter(Lorg/objectweb/asm/jip/MethodVisitor;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.objectweb.asm.jip.MethodAdapter
statement code is: MethodAdapter methodAdapter = new MethodAdapter(arg0)
statement is: org.objectweb.asm.jip.commons.LocalVariablesSorter(ILjava/lang/String;Lorg/objectweb/asm/jip/MethodVisitor;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.objectweb.asm.jip.commons.LocalVariablesSorter
statement code is: LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(130, "D)k,pITt]b;h", arg2)
statement is: visitIincInsn(II)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: localVariablesSorter.visitIincInsn(8, 0)
test data is: MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer());
MethodAdapter methodAdapter = new MethodAdapter(methodVisitor);
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(130, "D)k,pITt]b;h", methodAdapter);
localVariablesSorter.visitIincInsn(8, 0);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer());
        MethodAdapter methodAdapter = new MethodAdapter(methodVisitor);
        LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(130, "D)k,pITt]b;h", methodAdapter);
        localVariablesSorter.visitIincInsn(8, 42);
    }
}
statement is: MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer()), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: mock(MethodVisitor.class, new ViolatedAssumptionAnswer()) target is:  method is: mock(java.lang.Class,<unknown>)
target name is: MethodVisitor argument is: MethodVisitor.class
Matched Method is: mock(interface org.objectweb.asm.jip.MethodVisitor)
statement is: MethodAdapter methodAdapter = new MethodAdapter(methodVisitor), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(130, "D)k,pITt]b;h", methodAdapter), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: localVariablesSorter.visitIincInsn(8, 42), class spoon.support.reflect.code.CtInvocationImpl
invocation is: localVariablesSorter.visitIincInsn(8, 42) target is: localVariablesSorter method is: visitIincInsn(int,int)
source statement: org.objectweb.asm.jip.commons.LocalVariablesSorter(ILjava/lang/String;Lorg/objectweb/asm/jip/MethodVisitor;)V callee: VariableReference: Statement 2, type org.objectweb.asm.jip.commons.LocalVariablesSorterindex is: 4
Matched Method is: visitIincInsn(II)V
TestCase is: MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer());
MethodAdapter methodAdapter = new MethodAdapter(methodVisitor);
int _int = 130;
String string = "D)k,pITt]b;h";
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(_int, string, methodAdapter);
int _int = 8;
int _int = 42;
((MethodAdapter) _int).visitIincInsn(_int, _int);

statement is: org.objectweb.asm.jip.commons.LocalVariablesSorter(ILjava/lang/String;Lorg/objectweb/asm/jip/MethodVisitor;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.objectweb.asm.jip.commons.LocalVariablesSorter
statement code is: LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(9, "DD)kF,pI#Tt]b;", (MethodVisitor) null)
statement is: visitVarInsn(II)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: localVariablesSorter.visitVarInsn(24, 1)
test data is: LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(9, "DD)kF,pI#Tt]b;", (MethodVisitor) null);
localVariablesSorter.visitVarInsn(24, 1);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(9, "DD)kF,pI#Tt]b;", ((MethodVisitor) (null)));
        localVariablesSorter.visitVarInsn(24, 1);
        // Improved test data
        LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(9, "DD)kF,pI#Tt]b;", ((MethodVisitor) (null)));
        localVariablesSorter.visitVarInsn(24, 100);// Changed the primitive value to a more descriptive example

        localVariablesSorter.visitLdcInsn("Hello, World!");// Added a String example }}

    }
}
statement is: LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(9, "DD)kF,pI#Tt]b;", ((MethodVisitor) (null))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: localVariablesSorter.visitVarInsn(24, 1), class spoon.support.reflect.code.CtInvocationImpl
invocation is: localVariablesSorter.visitVarInsn(24, 1) target is: localVariablesSorter method is: visitVarInsn(int,int)
source statement: org.objectweb.asm.jip.commons.LocalVariablesSorter(ILjava/lang/String;Lorg/objectweb/asm/jip/MethodVisitor;)V callee: VariableReference: Statement 0, type org.objectweb.asm.jip.commons.LocalVariablesSorterindex is: 2
Matched Method is: visitVarInsn(II)V
statement is: // Improved test data
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(9, "DD)kF,pI#Tt]b;", ((MethodVisitor) (null))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: localVariablesSorter.visitVarInsn(24, 100)// Changed the primitive value to a more descriptive example
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: localVariablesSorter.visitVarInsn(24, 100)// Changed the primitive value to a more descriptive example
 target is: localVariablesSorter method is: visitVarInsn(int,int)
source statement: org.objectweb.asm.jip.commons.LocalVariablesSorter(ILjava/lang/String;Lorg/objectweb/asm/jip/MethodVisitor;)V callee: VariableReference: Statement 0, type org.objectweb.asm.jip.commons.LocalVariablesSorterindex is: 8
Matched Method is: visitVarInsn(II)V
statement is: localVariablesSorter.visitLdcInsn("Hello, World!")// Added a String example }}
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: localVariablesSorter.visitLdcInsn("Hello, World!")// Added a String example }}
 target is: localVariablesSorter method is: visitLdcInsn(java.lang.String)
TestCase is: int _int = 9;
String string = "DD)kF,pI#Tt]b;";
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(_int, string, (MethodVisitor) null);
int _int = 24;
int _int = 1;
((LocalVariablesSorter) _int).visitVarInsn(_int, _int);
int _int = 9;
String string = "DD)kF,pI#Tt]b;";
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(_int, string, (MethodVisitor) null);
int _int = 24;
int _int = 100;
((LocalVariablesSorter) _int).visitVarInsn(_int, _int);

statement is: org.objectweb.asm.jip.commons.LocalVariablesSorter(ILjava/lang/String;Lorg/objectweb/asm/jip/MethodVisitor;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.objectweb.asm.jip.commons.LocalVariablesSorter
statement code is: LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(23, "k)`{s_j=RWS1:~R", (MethodVisitor) null)
statement is: visitVarInsn(II)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: localVariablesSorter.visitVarInsn(21, 23)
test data is: LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(23, "k)`{s_j=RWS1:~R", (MethodVisitor) null);
localVariablesSorter.visitVarInsn(21, 23);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        localVariablesSorter.visitVarInsn(21, 23);
    }
}
statement is: localVariablesSorter.visitVarInsn(21, 23), class spoon.support.reflect.code.CtInvocationImpl
invocation is: localVariablesSorter.visitVarInsn(21, 23) target is: localVariablesSorter method is: visitVarInsn(int,int)
statement is: mock(interface org.objectweb.asm.jip.MethodVisitor) type is: class org.evosuite.testcase.statements.FunctionalMockStatement return type interface org.objectweb.asm.jip.MethodVisitor
statement code is: MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer())
statement is: org.objectweb.asm.jip.MethodAdapter(Lorg/objectweb/asm/jip/MethodVisitor;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.objectweb.asm.jip.MethodAdapter
statement code is: MethodAdapter methodAdapter = new MethodAdapter(arg0)
statement is: org.objectweb.asm.jip.commons.LocalVariablesSorter(ILjava/lang/String;Lorg/objectweb/asm/jip/MethodVisitor;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.objectweb.asm.jip.commons.LocalVariablesSorter
statement code is: LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(130, "D)k,pITt]b;h", arg2)
statement is: visitVarInsn(II)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: localVariablesSorter.visitVarInsn(130, 2)
statement is: visitVarInsn(II)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: localVariablesSorter.visitVarInsn(3, 2)
test data is: MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer());
MethodAdapter methodAdapter = new MethodAdapter(methodVisitor);
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(130, "D)k,pITt]b;h", methodAdapter);
localVariablesSorter.visitVarInsn(130, 2);
localVariablesSorter.visitVarInsn(3, 2);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer());
        MethodAdapter methodAdapter = new MethodAdapter(methodVisitor);
        LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(130, "D)k,pITt]b;h", methodAdapter);
        localVariablesSorter.visitVarInsn(130, 2);
        localVariablesSorter.visitVarInsn(3, 2);
    }
}
statement is: MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer()), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: mock(MethodVisitor.class, new ViolatedAssumptionAnswer()) target is:  method is: mock(java.lang.Class,<unknown>)
target name is: MethodVisitor argument is: MethodVisitor.class
Matched Method is: mock(interface org.objectweb.asm.jip.MethodVisitor)
statement is: MethodAdapter methodAdapter = new MethodAdapter(methodVisitor), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(130, "D)k,pITt]b;h", methodAdapter), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: localVariablesSorter.visitVarInsn(130, 2), class spoon.support.reflect.code.CtInvocationImpl
invocation is: localVariablesSorter.visitVarInsn(130, 2) target is: localVariablesSorter method is: visitVarInsn(int,int)
source statement: org.objectweb.asm.jip.commons.LocalVariablesSorter(ILjava/lang/String;Lorg/objectweb/asm/jip/MethodVisitor;)V callee: VariableReference: Statement 2, type org.objectweb.asm.jip.commons.LocalVariablesSorterindex is: 4
source statement: org.objectweb.asm.jip.commons.LocalVariablesSorter(ILjava/lang/String;Lorg/objectweb/asm/jip/MethodVisitor;)V callee: VariableReference: Statement 2, type org.objectweb.asm.jip.commons.LocalVariablesSorterindex is: 4
Matched Method is: visitVarInsn(II)V
statement is: localVariablesSorter.visitVarInsn(3, 2), class spoon.support.reflect.code.CtInvocationImpl
invocation is: localVariablesSorter.visitVarInsn(3, 2) target is: localVariablesSorter method is: visitVarInsn(int,int)
source statement: org.objectweb.asm.jip.commons.LocalVariablesSorter(ILjava/lang/String;Lorg/objectweb/asm/jip/MethodVisitor;)V callee: VariableReference: Statement 2, type org.objectweb.asm.jip.commons.LocalVariablesSorterindex is: 4
source statement: org.objectweb.asm.jip.commons.LocalVariablesSorter(ILjava/lang/String;Lorg/objectweb/asm/jip/MethodVisitor;)V callee: VariableReference: Statement 2, type org.objectweb.asm.jip.commons.LocalVariablesSorterindex is: 4
Matched Method is: visitVarInsn(II)V
TestCase is: MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer());
MethodAdapter methodAdapter = new MethodAdapter(methodVisitor);
int _int = 130;
String string = "D)k,pITt]b;h";
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(_int, string, methodAdapter);
int _int = 130;
int _int = 2;
((LocalVariablesSorter) _int).visitVarInsn(_int, _int);
int _int = 3;
int _int = 2;
((LocalVariablesSorter) _int).visitVarInsn(_int, _int);

statement is: org.objectweb.asm.jip.commons.LocalVariablesSorter(ILjava/lang/String;Lorg/objectweb/asm/jip/MethodVisitor;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.objectweb.asm.jip.commons.LocalVariablesSorter
statement code is: LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(20, "k)`{s_j=RWS1:~R", (MethodVisitor) null)
statement is: visitVarInsn(II)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: localVariablesSorter.visitVarInsn(22, 20)
test data is: LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(20, "k)`{s_j=RWS1:~R", (MethodVisitor) null);
localVariablesSorter.visitVarInsn(22, 20);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(20, new IntegerComparator(), ((MethodVisitor) (null)));
        localVariablesSorter.visitVarInsn(22, 20);
    }
}
statement is: LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(20, new IntegerComparator(), ((MethodVisitor) (null))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: localVariablesSorter.visitVarInsn(22, 20), class spoon.support.reflect.code.CtInvocationImpl
invocation is: localVariablesSorter.visitVarInsn(22, 20) target is: localVariablesSorter method is: visitVarInsn(int,int)
source statement: org.objectweb.asm.jip.commons.LocalVariablesSorter(ILjava/lang/String;Lorg/objectweb/asm/jip/MethodVisitor;)V callee: VariableReference: Statement 0, type org.objectweb.asm.jip.commons.LocalVariablesSorterindex is: 1
Matched Method is: visitVarInsn(II)V
TestCase is: int _int = 20;
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(_int, "k)`{s_j=RWS1:~R", (MethodVisitor) null);
int _int = 22;
int _int = 20;
((LocalVariablesSorter) _int).visitVarInsn(_int, _int);

statement is: org.objectweb.asm.jip.commons.LocalVariablesSorter(ILjava/lang/String;Lorg/objectweb/asm/jip/MethodVisitor;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.objectweb.asm.jip.commons.LocalVariablesSorter
statement code is: LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(23, "F)`{s+j=RWS1N~R", (MethodVisitor) null)
statement is: visitVarInsn(II)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: localVariablesSorter.visitVarInsn(23, 23)
test data is: LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(23, "F)`{s+j=RWS1N~R", (MethodVisitor) null);
localVariablesSorter.visitVarInsn(23, 23);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(23, "Fancy String", ((MethodVisitor) (null)));
        localVariablesSorter.visitVarInsn(23, 23);
    }
}
statement is: LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(23, "Fancy String", ((MethodVisitor) (null))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: localVariablesSorter.visitVarInsn(23, 23), class spoon.support.reflect.code.CtInvocationImpl
invocation is: localVariablesSorter.visitVarInsn(23, 23) target is: localVariablesSorter method is: visitVarInsn(int,int)
source statement: org.objectweb.asm.jip.commons.LocalVariablesSorter(ILjava/lang/String;Lorg/objectweb/asm/jip/MethodVisitor;)V callee: VariableReference: Statement 0, type org.objectweb.asm.jip.commons.LocalVariablesSorterindex is: 2
Matched Method is: visitVarInsn(II)V
TestCase is: int _int = 23;
String string = "Fancy String";
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(_int, string, (MethodVisitor) null);
int _int = 23;
int _int = 23;
((LocalVariablesSorter) _int).visitVarInsn(_int, _int);

statement is: org.objectweb.asm.jip.commons.LocalVariablesSorter(ILjava/lang/String;Lorg/objectweb/asm/jip/MethodVisitor;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.objectweb.asm.jip.commons.LocalVariablesSorter
statement code is: LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(23, "F)`{s+j=R`S1N~R", (MethodVisitor) null)
statement is: visitVarInsn(II)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: localVariablesSorter.visitVarInsn(54, 54)
test data is: LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(23, "F)`{s+j=R`S1N~R", (MethodVisitor) null);
localVariablesSorter.visitVarInsn(54, 54);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        localVariablesSorter.visitVarInsn(54, 100);// Changed the value from 54 to 100 to make it more representative of a real-world situation. }}

    }
}
statement is: localVariablesSorter.visitVarInsn(54, 100)// Changed the value from 54 to 100 to make it more representative of a real-world situation. }}
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: localVariablesSorter.visitVarInsn(54, 100)// Changed the value from 54 to 100 to make it more representative of a real-world situation. }}
 target is: localVariablesSorter method is: visitVarInsn(int,int)
statement is: org.objectweb.asm.jip.commons.LocalVariablesSorter(ILjava/lang/String;Lorg/objectweb/asm/jip/MethodVisitor;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.objectweb.asm.jip.commons.LocalVariablesSorter
statement code is: LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(4, "D)k,pITt]b;h", (MethodVisitor) null)
statement is: visitVarInsn(II)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: localVariablesSorter.visitVarInsn(55, 8)
test data is: LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(4, "D)k,pITt]b;h", (MethodVisitor) null);
localVariablesSorter.visitVarInsn(55, 8);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(10, "myMethod", ((MethodVisitor) (null)));
        localVariablesSorter.visitVarInsn(55, 8);
    }
}
statement is: LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(10, "myMethod", ((MethodVisitor) (null))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: localVariablesSorter.visitVarInsn(55, 8), class spoon.support.reflect.code.CtInvocationImpl
invocation is: localVariablesSorter.visitVarInsn(55, 8) target is: localVariablesSorter method is: visitVarInsn(int,int)
source statement: org.objectweb.asm.jip.commons.LocalVariablesSorter(ILjava/lang/String;Lorg/objectweb/asm/jip/MethodVisitor;)V callee: VariableReference: Statement 0, type org.objectweb.asm.jip.commons.LocalVariablesSorterindex is: 2
Matched Method is: visitVarInsn(II)V
TestCase is: int _int = 10;
String string = "myMethod";
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(_int, string, (MethodVisitor) null);
int _int = 55;
int _int = 8;
((LocalVariablesSorter) _int).visitVarInsn(_int, _int);

statement is: org.objectweb.asm.jip.commons.LocalVariablesSorter(ILjava/lang/String;Lorg/objectweb/asm/jip/MethodVisitor;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.objectweb.asm.jip.commons.LocalVariablesSorter
statement code is: LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(2, "F)`{s+j=R`S1N~R", (MethodVisitor) null)
statement is: visitVarInsn(II)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: localVariablesSorter.visitVarInsn(56, 1775)
test data is: LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(2, "F)`{s+j=R`S1N~R", (MethodVisitor) null);
localVariablesSorter.visitVarInsn(56, 1775);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(2, "F", ((MethodVisitor) (null)));
        localVariablesSorter.visitVarInsn(56, 1775);
    }
}
statement is: LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(2, "F", ((MethodVisitor) (null))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: localVariablesSorter.visitVarInsn(56, 1775), class spoon.support.reflect.code.CtInvocationImpl
invocation is: localVariablesSorter.visitVarInsn(56, 1775) target is: localVariablesSorter method is: visitVarInsn(int,int)
source statement: org.objectweb.asm.jip.commons.LocalVariablesSorter(ILjava/lang/String;Lorg/objectweb/asm/jip/MethodVisitor;)V callee: VariableReference: Statement 0, type org.objectweb.asm.jip.commons.LocalVariablesSorterindex is: 2
Matched Method is: visitVarInsn(II)V
TestCase is: int _int = 2;
String string = "F";
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(_int, string, (MethodVisitor) null);
int _int = 56;
int _int = 1775;
((LocalVariablesSorter) _int).visitVarInsn(_int, _int);

statement is: org.objectweb.asm.jip.commons.LocalVariablesSorter(ILjava/lang/String;Lorg/objectweb/asm/jip/MethodVisitor;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.objectweb.asm.jip.commons.LocalVariablesSorter
statement code is: LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(57, "F)v{4j=RRSN~R", (MethodVisitor) null)
statement is: visitVarInsn(II)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: localVariablesSorter.visitVarInsn(57, 57)
test data is: LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(57, "F)v{4j=RRSN~R", (MethodVisitor) null);
localVariablesSorter.visitVarInsn(57, 57);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        localVariablesSorter.visitVarInsn(57, 57);
        // Improved test data:
        LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(100, "F)v{4j=RRSN~R", ((MethodVisitor) (null)));
        localVariablesSorter.visitVarInsn(57, 57);
    }
}
statement is: localVariablesSorter.visitVarInsn(57, 57), class spoon.support.reflect.code.CtInvocationImpl
invocation is: localVariablesSorter.visitVarInsn(57, 57) target is: localVariablesSorter method is: visitVarInsn(int,int)
statement is: // Improved test data:
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(100, "F)v{4j=RRSN~R", ((MethodVisitor) (null))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: localVariablesSorter.visitVarInsn(57, 57), class spoon.support.reflect.code.CtInvocationImpl
invocation is: localVariablesSorter.visitVarInsn(57, 57) target is: localVariablesSorter method is: visitVarInsn(int,int)
source statement: org.objectweb.asm.jip.commons.LocalVariablesSorter(ILjava/lang/String;Lorg/objectweb/asm/jip/MethodVisitor;)V callee: VariableReference: Statement 0, type org.objectweb.asm.jip.commons.LocalVariablesSorterindex is: 2
Matched Method is: visitVarInsn(II)V
TestCase is: int _int = 100;
String string = "F)v{4j=RRSN~R";
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(_int, string, (MethodVisitor) null);
int _int = 57;
int _int = 57;
((LocalVariablesSorter) _int).visitVarInsn(_int, _int);

statement is: mock(interface org.objectweb.asm.jip.MethodVisitor) type is: class org.evosuite.testcase.statements.FunctionalMockStatement return type interface org.objectweb.asm.jip.MethodVisitor
statement code is: MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer())
statement is: org.objectweb.asm.jip.MethodAdapter(Lorg/objectweb/asm/jip/MethodVisitor;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.objectweb.asm.jip.MethodAdapter
statement code is: MethodAdapter methodAdapter = new MethodAdapter(arg0)
statement is: org.objectweb.asm.jip.commons.LocalVariablesSorter(ILjava/lang/String;Lorg/objectweb/asm/jip/MethodVisitor;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.objectweb.asm.jip.commons.LocalVariablesSorter
statement code is: LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(130, "D)k,pITt]b;h", arg2)
statement is: org.evosuite.testcase.statements.ArrayStatement@34eed64b type is: class org.evosuite.testcase.statements.ArrayStatement return type class [Ljava.lang.Object;
statement code is: Object[] objectArray = new Object[0]
statement is: visitFrame(II[Ljava/lang/Object;I[Ljava/lang/Object;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: localVariablesSorter.visitFrame(1713, 8, arg4, 96, arg4)
test data is: MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer());
MethodAdapter methodAdapter = new MethodAdapter(methodVisitor);
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(130, "D)k,pITt]b;h", methodAdapter);
Object[] objectArray = new Object[0];
localVariablesSorter.visitFrame(1713, 8, objectArray, 96, objectArray);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer());
        MethodAdapter methodAdapter = new MethodAdapter(methodVisitor);
        LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(130, "D)k,pITt]b;h", methodAdapter);
        Object[] objectArray = new Object[2];
        objectArray[0] = 56;
        objectArray[1] = "This is a test string";
        localVariablesSorter.visitFrame(1713, 8, objectArray, 96, objectArray);
    }
}
statement is: MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer()), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: mock(MethodVisitor.class, new ViolatedAssumptionAnswer()) target is:  method is: mock(java.lang.Class,<unknown>)
target name is: MethodVisitor argument is: MethodVisitor.class
Matched Method is: mock(interface org.objectweb.asm.jip.MethodVisitor)
statement is: MethodAdapter methodAdapter = new MethodAdapter(methodVisitor), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(130, "D)k,pITt]b;h", methodAdapter), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Object[] objectArray = new Object[2], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [2] Ct is: Object[] objectArray = new Object[0] isAssignment: false Array: new Object[2] Elements: []
lengths: [0] [2]
Their type are: class [Ljava.lang.Object; Object[]
statement is: objectArray[0] = 56, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : objectArray[0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl Object Assignment:56 Ct is: objectArray[0] = 56
target : objectArray class spoon.support.reflect.code.CtLiteralImpl
statement is: objectArray[1] = "This is a test string", class spoon.support.reflect.code.CtAssignmentImpl
Assigned : objectArray[1] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl Object Assignment:"This is a test string" Ct is: objectArray[1] = "This is a test string"
target : objectArray class spoon.support.reflect.code.CtLiteralImpl
statement is: localVariablesSorter.visitFrame(1713, 8, objectArray, 96, objectArray), class spoon.support.reflect.code.CtInvocationImpl
invocation is: localVariablesSorter.visitFrame(1713, 8, objectArray, 96, objectArray) target is: localVariablesSorter method is: visitFrame(int,int,java.lang.Object[],int,java.lang.Object[])
source statement: org.objectweb.asm.jip.commons.LocalVariablesSorter(ILjava/lang/String;Lorg/objectweb/asm/jip/MethodVisitor;)V callee: VariableReference: Statement 2, type org.objectweb.asm.jip.commons.LocalVariablesSorterindex is: 4
Matched Method is: visitFrame(II[Ljava/lang/Object;I[Ljava/lang/Object;)V
TestCase is: MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer());
MethodAdapter methodAdapter = new MethodAdapter(methodVisitor);
int _int = 130;
String string = "D)k,pITt]b;h";
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(_int, string, methodAdapter);
Object[] objectArray = new Object[0];
int _int = 1713;
int _int = 8;
int _int = 96;
((LocalVariablesSorter) _int).visitFrame(_int, _int, objectArray, _int, objectArray);

statement is: org.objectweb.asm.jip.commons.LocalVariablesSorter(ILjava/lang/String;Lorg/objectweb/asm/jip/MethodVisitor;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.objectweb.asm.jip.commons.LocalVariablesSorter
statement code is: LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(2, "F)`{s+j=R`S1N~R", (MethodVisitor) null)
statement is: org.evosuite.testcase.statements.FieldStatement@230e7eea type is: class org.evosuite.testcase.statements.FieldStatement return type class org.objectweb.asm.jip.Type
statement code is: Type type = Type.BOOLEAN_TYPE
statement is: newLocal(Lorg/objectweb/asm/jip/Type;)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int newLocal = localVariablesSorter.newLocal(arg0)
test data is: LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(2, "F)`{s+j=R`S1N~R", (MethodVisitor) null);
Type type = Type.BOOLEAN_TYPE;
localVariablesSorter.newLocal(type);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Type type = Type.getType("Ljava/lang/String;");
        localVariablesSorter.newLocal(type);
    }
}
statement is: Type type = Type.getType("Ljava/lang/String;"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: Type.getType("Ljava/lang/String;") target is: Type method is: getType(java.lang.String)
statement is: localVariablesSorter.newLocal(type), class spoon.support.reflect.code.CtInvocationImpl
invocation is: localVariablesSorter.newLocal(type) target is: localVariablesSorter method is: newLocal(Type)
statement is: org.objectweb.asm.jip.commons.LocalVariablesSorter(ILjava/lang/String;Lorg/objectweb/asm/jip/MethodVisitor;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.objectweb.asm.jip.commons.LocalVariablesSorter
statement code is: LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(2, "F)`{s+j=R`S1N~R", (MethodVisitor) null)
statement is: org.evosuite.testcase.statements.FieldStatement@ba0fd8a0 type is: class org.evosuite.testcase.statements.FieldStatement return type class org.objectweb.asm.jip.Type
statement code is: Type type = Type.CHAR_TYPE
statement is: newLocal(Lorg/objectweb/asm/jip/Type;)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int newLocal = localVariablesSorter.newLocal(arg0)
test data is: LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(2, "F)`{s+j=R`S1N~R", (MethodVisitor) null);
Type type = Type.CHAR_TYPE;
localVariablesSorter.newLocal(type);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Type type = Type.getType(String.class);
        localVariablesSorter.newLocal(type);
    }
}
statement is: Type type = Type.getType(String.class), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: Type.getType(String.class) target is: Type method is: getType(java.lang.Class)
statement is: localVariablesSorter.newLocal(type), class spoon.support.reflect.code.CtInvocationImpl
invocation is: localVariablesSorter.newLocal(type) target is: localVariablesSorter method is: newLocal(Type)
statement is: org.evosuite.testcase.statements.FieldStatement@a2d8bea type is: class org.evosuite.testcase.statements.FieldStatement return type class org.objectweb.asm.jip.Type
statement code is: Type type = Type.BYTE_TYPE
statement is: org.objectweb.asm.jip.commons.LocalVariablesSorter(ILjava/lang/String;Lorg/objectweb/asm/jip/MethodVisitor;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.objectweb.asm.jip.commons.LocalVariablesSorter
statement code is: LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(5, "k)`{s_jvRWS1~R", (MethodVisitor) null)
statement is: newLocal(Lorg/objectweb/asm/jip/Type;)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int newLocal = localVariablesSorter.newLocal(arg0)
test data is: Type type = Type.BYTE_TYPE;
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(5, "k)`{s_jvRWS1~R", (MethodVisitor) null);
localVariablesSorter.newLocal(type);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Type type = Type.LONG_TYPE;
        LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(5, "k{s_jvRWS1~R", ((MethodVisitor) (null)));
        localVariablesSorter.newLocal(type);
    }
}
statement is: Type type = Type.LONG_TYPE, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: Type.LONG_TYPE is Type
CtField is: public static org.objectweb.asm.jip.Type org.objectweb.asm.jip.Type.BYTE_TYPE Type BYTE_TYPE
statement is: LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(5, "k{s_jvRWS1~R", ((MethodVisitor) (null))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: localVariablesSorter.newLocal(type), class spoon.support.reflect.code.CtInvocationImpl
invocation is: localVariablesSorter.newLocal(type) target is: localVariablesSorter method is: newLocal(Type)
source statement: org.objectweb.asm.jip.commons.LocalVariablesSorter(ILjava/lang/String;Lorg/objectweb/asm/jip/MethodVisitor;)V callee: VariableReference: Statement 1, type org.objectweb.asm.jip.commons.LocalVariablesSorterindex is: 3
Matched Method is: newLocal(Lorg/objectweb/asm/jip/Type;)I
TestCase is: Type type = Type.BYTE_TYPE;
int _int = 5;
String string = "k{s_jvRWS1~R";
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(_int, string, (MethodVisitor) null);
((LocalVariablesSorter) _int).newLocal(type);

statement is: org.objectweb.asm.jip.commons.LocalVariablesSorter(ILjava/lang/String;Lorg/objectweb/asm/jip/MethodVisitor;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.objectweb.asm.jip.commons.LocalVariablesSorter
statement code is: LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(2, "F)`{s+j=R`S1N~R", (MethodVisitor) null)
statement is: org.evosuite.testcase.statements.FieldStatement@4eb982e6 type is: class org.evosuite.testcase.statements.FieldStatement return type class org.objectweb.asm.jip.Type
statement code is: Type type = Type.SHORT_TYPE
statement is: newLocal(Lorg/objectweb/asm/jip/Type;)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int newLocal = localVariablesSorter.newLocal(arg0)
test data is: LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(2, "F)`{s+j=R`S1N~R", (MethodVisitor) null);
Type type = Type.SHORT_TYPE;
localVariablesSorter.newLocal(type);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Type type = Type.SHORT_TYPE;
        localVariablesSorter.newLocal(type);
    }
}
statement is: Type type = Type.SHORT_TYPE, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: Type.SHORT_TYPE is Type
CtField is: public static org.objectweb.asm.jip.Type org.objectweb.asm.jip.Type.SHORT_TYPE Type SHORT_TYPE
statement is: localVariablesSorter.newLocal(type), class spoon.support.reflect.code.CtInvocationImpl
invocation is: localVariablesSorter.newLocal(type) target is: localVariablesSorter method is: newLocal(Type)
TestCase is: Type type = Type.SHORT_TYPE;

statement is: org.objectweb.asm.jip.commons.LocalVariablesSorter(ILjava/lang/String;Lorg/objectweb/asm/jip/MethodVisitor;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.objectweb.asm.jip.commons.LocalVariablesSorter
statement code is: LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter((-459), "F)`{s+j=R`S1N~R", (MethodVisitor) null)
statement is: org.evosuite.testcase.statements.FieldStatement@79503a9b type is: class org.evosuite.testcase.statements.FieldStatement return type class org.objectweb.asm.jip.Type
statement code is: Type type = Type.INT_TYPE
statement is: newLocal(Lorg/objectweb/asm/jip/Type;)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int newLocal = localVariablesSorter.newLocal(arg0)
test data is: LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter((-459), "F)`{s+j=R`S1N~R", (MethodVisitor) null);
Type type = Type.INT_TYPE;
localVariablesSorter.newLocal(type);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(10, "myLocalVariable", ((MethodVisitor) (null)));
        Type type = Type.INT_TYPE;
        localVariablesSorter.newLocal(type);
    }
}
statement is: LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(10, "myLocalVariable", ((MethodVisitor) (null))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Type type = Type.INT_TYPE, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: Type.INT_TYPE is Type
CtField is: public static org.objectweb.asm.jip.Type org.objectweb.asm.jip.Type.INT_TYPE Type INT_TYPE
statement is: localVariablesSorter.newLocal(type), class spoon.support.reflect.code.CtInvocationImpl
invocation is: localVariablesSorter.newLocal(type) target is: localVariablesSorter method is: newLocal(Type)
source statement: org.objectweb.asm.jip.commons.LocalVariablesSorter(ILjava/lang/String;Lorg/objectweb/asm/jip/MethodVisitor;)V callee: VariableReference: Statement 0, type org.objectweb.asm.jip.commons.LocalVariablesSorterindex is: 2
Matched Method is: newLocal(Lorg/objectweb/asm/jip/Type;)I
TestCase is: int _int = 10;
String string = "myLocalVariable";
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(_int, string, (MethodVisitor) null);
Type type = Type.INT_TYPE;
((LocalVariablesSorter) _int).newLocal(type);

statement is: org.objectweb.asm.jip.commons.LocalVariablesSorter(ILjava/lang/String;Lorg/objectweb/asm/jip/MethodVisitor;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.objectweb.asm.jip.commons.LocalVariablesSorter
statement code is: LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter((-459), "F)`{s+j=R`S1N~R", (MethodVisitor) null)
statement is: getType(Ljava/lang/String;)Lorg/objectweb/asm/jip/Type; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.objectweb.asm.jip.Type
statement code is: Type type = Type.getType("F)`{s+j=R`S1N~R")
statement is: newLocal(Lorg/objectweb/asm/jip/Type;)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int newLocal = localVariablesSorter.newLocal(arg0)
test data is: LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter((-459), "F)`{s+j=R`S1N~R", (MethodVisitor) null);
Type type = Type.getType("F)`{s+j=R`S1N~R");
localVariablesSorter.newLocal(type);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(-459, "[Ljava/lang/String;", ((MethodVisitor) (null)));
        Type type = Type.getType("[Ljava/lang/String;");
        localVariablesSorter.newLocal(type);
    }
}
statement is: LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(-459, "[Ljava/lang/String;", ((MethodVisitor) (null))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Type type = Type.getType("[Ljava/lang/String;"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: Type.getType("[Ljava/lang/String;") target is: Type method is: getType(java.lang.String)
Matched Method is: getType(Ljava/lang/String;)Lorg/objectweb/asm/jip/Type;
statement is: localVariablesSorter.newLocal(type), class spoon.support.reflect.code.CtInvocationImpl
invocation is: localVariablesSorter.newLocal(type) target is: localVariablesSorter method is: newLocal(Type)
source statement: org.objectweb.asm.jip.commons.LocalVariablesSorter(ILjava/lang/String;Lorg/objectweb/asm/jip/MethodVisitor;)V callee: VariableReference: Statement 0, type org.objectweb.asm.jip.commons.LocalVariablesSorterindex is: 1
Matched Method is: newLocal(Lorg/objectweb/asm/jip/Type;)I
TestCase is: String string = "[Ljava/lang/String;";
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter((int) string, "F)`{s+j=R`S1N~R", (MethodVisitor) null);
String string = "[Ljava/lang/String;";
Type type = Type.getType(string);
((LocalVariablesSorter) string).newLocal(type);

statement is: org.objectweb.asm.jip.commons.LocalVariablesSorter(ILjava/lang/String;Lorg/objectweb/asm/jip/MethodVisitor;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.objectweb.asm.jip.commons.LocalVariablesSorter
statement code is: LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(2, "F)`{s+j=R`S1N~R", (MethodVisitor) null)
statement is: org.evosuite.testcase.statements.FieldStatement@354b686 type is: class org.evosuite.testcase.statements.FieldStatement return type class org.objectweb.asm.jip.Type
statement code is: Type type = Type.LONG_TYPE
statement is: newLocal(Lorg/objectweb/asm/jip/Type;)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int newLocal = localVariablesSorter.newLocal(arg0)
test data is: LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(2, "F)`{s+j=R`S1N~R", (MethodVisitor) null);
Type type = Type.LONG_TYPE;
localVariablesSorter.newLocal(type);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(2, "F)", ((MethodVisitor) (null)));
        Type type = Type.LONG_TYPE;
        localVariablesSorter.newLocal(type);
    }
}
statement is: LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(2, "F)", ((MethodVisitor) (null))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Type type = Type.LONG_TYPE, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: Type.LONG_TYPE is Type
CtField is: public static org.objectweb.asm.jip.Type org.objectweb.asm.jip.Type.LONG_TYPE Type LONG_TYPE
statement is: localVariablesSorter.newLocal(type), class spoon.support.reflect.code.CtInvocationImpl
invocation is: localVariablesSorter.newLocal(type) target is: localVariablesSorter method is: newLocal(Type)
source statement: org.objectweb.asm.jip.commons.LocalVariablesSorter(ILjava/lang/String;Lorg/objectweb/asm/jip/MethodVisitor;)V callee: VariableReference: Statement 0, type org.objectweb.asm.jip.commons.LocalVariablesSorterindex is: 2
Matched Method is: newLocal(Lorg/objectweb/asm/jip/Type;)I
TestCase is: int _int = 2;
String string = "F)";
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(_int, string, (MethodVisitor) null);
Type type = Type.LONG_TYPE;
((LocalVariablesSorter) _int).newLocal(type);

statement is: org.objectweb.asm.jip.commons.LocalVariablesSorter(ILjava/lang/String;Lorg/objectweb/asm/jip/MethodVisitor;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.objectweb.asm.jip.commons.LocalVariablesSorter
statement code is: LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter((-1), "F)4j=RN", (MethodVisitor) null)
statement is: getReturnType(Ljava/lang/String;)Lorg/objectweb/asm/jip/Type; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.objectweb.asm.jip.Type
statement code is: Type returnType = Type.getReturnType("[BFO\"I}]-F+`G}m1")
statement is: newLocal(Lorg/objectweb/asm/jip/Type;)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int newLocal = localVariablesSorter.newLocal(arg0)
test data is: LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter((-1), "F)4j=RN", (MethodVisitor) null);
Type returnType = Type.getReturnType("[BFO\"I}]-F+`G}m1");
localVariablesSorter.newLocal(returnType);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(-1, "F)4j=RN", ((MethodVisitor) (null)));
        Type returnType = Type.getReturnType("[BFO\"I}]-F+`G}m1");
        localVariablesSorter.newLocal(returnType);
    }
}
statement is: LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(-1, "F)4j=RN", ((MethodVisitor) (null))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Type returnType = Type.getReturnType("[BFO\"I}]-F+`G}m1"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: Type.getReturnType("[BFO\"I}]-F+`G}m1") target is: Type method is: getReturnType(java.lang.String)
Matched Method is: getReturnType(Ljava/lang/String;)Lorg/objectweb/asm/jip/Type;
statement is: localVariablesSorter.newLocal(returnType), class spoon.support.reflect.code.CtInvocationImpl
invocation is: localVariablesSorter.newLocal(returnType) target is: localVariablesSorter method is: newLocal(Type)
source statement: org.objectweb.asm.jip.commons.LocalVariablesSorter(ILjava/lang/String;Lorg/objectweb/asm/jip/MethodVisitor;)V callee: VariableReference: Statement 0, type org.objectweb.asm.jip.commons.LocalVariablesSorterindex is: 1
Matched Method is: newLocal(Lorg/objectweb/asm/jip/Type;)I
TestCase is: String string = "F)4j=RN";
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter((int) string, "F)4j=RN", (MethodVisitor) null);
String string = "[BFO\"I}]-F+`G}m1";
Type returnType = Type.getReturnType(string);
((LocalVariablesSorter) string).newLocal(returnType);

statement is: org.evosuite.testcase.statements.FieldStatement@4797d9f5 type is: class org.evosuite.testcase.statements.FieldStatement return type class org.objectweb.asm.jip.Type
statement code is: Type type = Type.DOUBLE_TYPE
statement is: org.objectweb.asm.jip.commons.LocalVariablesSorter(ILjava/lang/String;Lorg/objectweb/asm/jip/MethodVisitor;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.objectweb.asm.jip.commons.LocalVariablesSorter
statement code is: LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(3, "D)k,pITt]b;h", (MethodVisitor) null)
statement is: org.evosuite.testcase.statements.AssignmentStatement@539713a9 type is: class org.evosuite.testcase.statements.AssignmentStatement return type int
statement code is: localVariablesSorter.nextLocal = 202
statement is: newLocal(Lorg/objectweb/asm/jip/Type;)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int newLocal = localVariablesSorter.newLocal(arg0)
test data is: Type type = Type.DOUBLE_TYPE;
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(3, "D)k,pITt]b;h", (MethodVisitor) null);
localVariablesSorter.nextLocal = 202;
localVariablesSorter.newLocal(type);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Type type = Type.INT_TYPE;
        LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(3, "methodName", ((MethodVisitor) (null)));
        localVariablesSorter.nextLocal = 100;
        localVariablesSorter.newLocal(type);
    }
}
statement is: Type type = Type.INT_TYPE, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: Type.INT_TYPE is Type
CtField is: public static org.objectweb.asm.jip.Type org.objectweb.asm.jip.Type.DOUBLE_TYPE Type DOUBLE_TYPE
statement is: LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(3, "methodName", ((MethodVisitor) (null))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: localVariablesSorter.nextLocal = 100, class spoon.support.reflect.code.CtAssignmentImpl
statement is: localVariablesSorter.newLocal(type), class spoon.support.reflect.code.CtInvocationImpl
invocation is: localVariablesSorter.newLocal(type) target is: localVariablesSorter method is: newLocal(Type)
source statement: org.objectweb.asm.jip.commons.LocalVariablesSorter(ILjava/lang/String;Lorg/objectweb/asm/jip/MethodVisitor;)V callee: VariableReference: Statement 1, type org.objectweb.asm.jip.commons.LocalVariablesSorterindex is: 3
Matched Method is: newLocal(Lorg/objectweb/asm/jip/Type;)I
TestCase is: Type type = Type.DOUBLE_TYPE;
int _int = 3;
String string = "methodName";
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(_int, string, (MethodVisitor) null);
((LocalVariablesSorter) _int).newLocal(type);

statement is: mock(interface org.objectweb.asm.jip.MethodVisitor) type is: class org.evosuite.testcase.statements.FunctionalMockStatement return type interface org.objectweb.asm.jip.MethodVisitor
statement code is: MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer())
statement is: org.objectweb.asm.jip.MethodAdapter(Lorg/objectweb/asm/jip/MethodVisitor;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.objectweb.asm.jip.MethodAdapter
statement code is: MethodAdapter methodAdapter = new MethodAdapter(arg0)
statement is: org.objectweb.asm.jip.commons.LocalVariablesSorter(ILjava/lang/String;Lorg/objectweb/asm/jip/MethodVisitor;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.objectweb.asm.jip.commons.LocalVariablesSorter
statement code is: LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(130, "D)k,pITt]b;h", arg2)
statement is: Class<Object> class = Object.class type is: class org.evosuite.testcase.statements.ClassPrimitiveStatement return type java.lang.Class<java.lang.Object>
statement code is: Class<Object> class = Object.class
statement is: getType(Ljava/lang/Class;)Lorg/objectweb/asm/jip/Type; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.objectweb.asm.jip.Type
statement code is: Type type = Type.getType(arg0)
statement is: newLocal(Lorg/objectweb/asm/jip/Type;)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int newLocal = localVariablesSorter.newLocal(arg0)
statement is: visitVarInsn(II)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: localVariablesSorter.visitVarInsn(130, 2)
test data is: MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer());
MethodAdapter methodAdapter = new MethodAdapter(methodVisitor);
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(130, "D)k,pITt]b;h", methodAdapter);
Class<Object> class = Object.class;
Type type = Type.getType(class);
localVariablesSorter.newLocal(type);
localVariablesSorter.visitVarInsn(130, 2);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer());
        MethodAdapter methodAdapter = new MethodAdapter(methodVisitor);
        LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(130, "D)k,pITt]b;h", methodAdapter);
        Class<Integer> $missing$ = Integer.class;
        Type type = Type.getType();
        localVariablesSorter.newLocal(type);
        localVariablesSorter.visitVarInsn(130, 2);
    }
}
statement is: MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer()), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: mock(MethodVisitor.class, new ViolatedAssumptionAnswer()) target is:  method is: mock(java.lang.Class,<unknown>)
target name is: MethodVisitor argument is: MethodVisitor.class
Matched Method is: mock(interface org.objectweb.asm.jip.MethodVisitor)
statement is: MethodAdapter methodAdapter = new MethodAdapter(methodVisitor), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(130, "D)k,pITt]b;h", methodAdapter), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Class<Integer> $missing$ = Integer.class, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: Integer.class is Integer
statement is: Type type = Type.getType(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: Type.getType() target is: Type method is: getType()
statement is: localVariablesSorter.newLocal(type), class spoon.support.reflect.code.CtInvocationImpl
invocation is: localVariablesSorter.newLocal(type) target is: localVariablesSorter method is: newLocal(Type)
source statement: org.objectweb.asm.jip.commons.LocalVariablesSorter(ILjava/lang/String;Lorg/objectweb/asm/jip/MethodVisitor;)V callee: VariableReference: Statement 2, type org.objectweb.asm.jip.commons.LocalVariablesSorterindex is: 4
Matched Method is: newLocal(Lorg/objectweb/asm/jip/Type;)I
i 0 Parameters size() 0 Num of Method Parameters: 1
statement is: localVariablesSorter.visitVarInsn(130, 2), class spoon.support.reflect.code.CtInvocationImpl
invocation is: localVariablesSorter.visitVarInsn(130, 2) target is: localVariablesSorter method is: visitVarInsn(int,int)
source statement: org.objectweb.asm.jip.commons.LocalVariablesSorter(ILjava/lang/String;Lorg/objectweb/asm/jip/MethodVisitor;)V callee: VariableReference: Statement 2, type org.objectweb.asm.jip.commons.LocalVariablesSorterindex is: 4
Matched Method is: visitVarInsn(II)V
TestCase is: MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer());
MethodAdapter methodAdapter = new MethodAdapter(methodVisitor);
int _int = 130;
String string = "D)k,pITt]b;h";
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(_int, string, methodAdapter);
Type type = null;
((LocalVariablesSorter) _int).newLocal(type);
int _int = 130;
int _int = 2;
((LocalVariablesSorter) _int).visitVarInsn(_int, _int);

statement is: org.objectweb.asm.jip.commons.LocalVariablesSorter(ILjava/lang/String;Lorg/objectweb/asm/jip/MethodVisitor;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.objectweb.asm.jip.commons.LocalVariablesSorter
statement code is: LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter((-9), "F)`{s+j=R`S1N~R", (MethodVisitor) null)
statement is: org.evosuite.testcase.statements.AssignmentStatement@7b18769b type is: class org.evosuite.testcase.statements.AssignmentStatement return type int
statement code is: localVariablesSorter.nextLocal = (-9)
statement is: org.evosuite.testcase.statements.FieldStatement@ca1fbf46 type is: class org.evosuite.testcase.statements.FieldStatement return type class org.objectweb.asm.jip.Type
statement code is: Type type = Type.FLOAT_TYPE
statement is: newLocalMapping(Lorg/objectweb/asm/jip/Type;)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int newLocalMapping = localVariablesSorter.newLocalMapping(arg0)
test data is: LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter((-9), "F)`{s+j=R`S1N~R", (MethodVisitor) null);
localVariablesSorter.nextLocal = (-9);
Type type = Type.FLOAT_TYPE;
localVariablesSorter.newLocalMapping(type);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        localVariablesSorter.nextLocal = -9;
        Type type = Type.FLOAT_TYPE;
        localVariablesSorter.newLocalMapping(type);
        // Improved test data:
        LocalVariablesSorter localVariablesSorter2 = new LocalVariablesSorter(-10, "G)`{s+j=R`S1N~R", ((MethodVisitor) (null)));
        localVariablesSorter2.nextLocal = -10;
        Type type2 = Type.FLOAT_TYPE;
        localVariablesSorter2.newLocalMapping(type2);
    }
}
statement is: localVariablesSorter.nextLocal = -9, class spoon.support.reflect.code.CtAssignmentImpl
statement is: Type type = Type.FLOAT_TYPE, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: Type.FLOAT_TYPE is Type
CtField is: public static org.objectweb.asm.jip.Type org.objectweb.asm.jip.Type.FLOAT_TYPE Type FLOAT_TYPE
statement is: localVariablesSorter.newLocalMapping(type), class spoon.support.reflect.code.CtInvocationImpl
invocation is: localVariablesSorter.newLocalMapping(type) target is: localVariablesSorter method is: newLocalMapping(Type)
statement is: // Improved test data:
LocalVariablesSorter localVariablesSorter2 = new LocalVariablesSorter(-10, "G)`{s+j=R`S1N~R", ((MethodVisitor) (null))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: localVariablesSorter2.nextLocal = -10, class spoon.support.reflect.code.CtAssignmentImpl
statement is: Type type2 = Type.FLOAT_TYPE, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: Type.FLOAT_TYPE is Type
CtField is: public static org.objectweb.asm.jip.Type org.objectweb.asm.jip.Type.FLOAT_TYPE Type FLOAT_TYPE
statement is: localVariablesSorter2.newLocalMapping(type2), class spoon.support.reflect.code.CtInvocationImpl
invocation is: localVariablesSorter2.newLocalMapping(type2) target is: localVariablesSorter2 method is: newLocalMapping(Type)
source statement: org.objectweb.asm.jip.commons.LocalVariablesSorter(ILjava/lang/String;Lorg/objectweb/asm/jip/MethodVisitor;)V callee: VariableReference: Statement 0, type org.objectweb.asm.jip.commons.LocalVariablesSorterindex is: 2
Matched Method is: newLocalMapping(Lorg/objectweb/asm/jip/Type;)I
TestCase is: Type type = Type.FLOAT_TYPE;
String string = "G)`{s+j=R`S1N~R";
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter((int) string, "F)`{s+j=R`S1N~R", (MethodVisitor) null);
Type type = Type.FLOAT_TYPE;
((LocalVariablesSorter) type).newLocalMapping(type);

statement is: org.objectweb.asm.jip.commons.LocalVariablesSorter(ILjava/lang/String;Lorg/objectweb/asm/jip/MethodVisitor;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.objectweb.asm.jip.commons.LocalVariablesSorter
statement code is: LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter((-9), "F)`{s+j=R`S1N~R", (MethodVisitor) null)
statement is: org.evosuite.testcase.statements.FieldStatement@ca1fbf46 type is: class org.evosuite.testcase.statements.FieldStatement return type class org.objectweb.asm.jip.Type
statement code is: Type type = Type.FLOAT_TYPE
statement is: newLocalMapping(Lorg/objectweb/asm/jip/Type;)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int newLocalMapping = localVariablesSorter.newLocalMapping(arg0)
test data is: LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter((-9), "F)`{s+j=R`S1N~R", (MethodVisitor) null);
Type type = Type.FLOAT_TYPE;
localVariablesSorter.newLocalMapping(type);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Type type = Type.FLOAT_TYPE;
        localVariablesSorter.newLocalMapping(type);
    }
}
statement is: Type type = Type.FLOAT_TYPE, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: Type.FLOAT_TYPE is Type
CtField is: public static org.objectweb.asm.jip.Type org.objectweb.asm.jip.Type.FLOAT_TYPE Type FLOAT_TYPE
statement is: localVariablesSorter.newLocalMapping(type), class spoon.support.reflect.code.CtInvocationImpl
invocation is: localVariablesSorter.newLocalMapping(type) target is: localVariablesSorter method is: newLocalMapping(Type)
TestCase is: Type type = Type.FLOAT_TYPE;

statement is: org.objectweb.asm.jip.commons.LocalVariablesSorter(ILjava/lang/String;Lorg/objectweb/asm/jip/MethodVisitor;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.objectweb.asm.jip.commons.LocalVariablesSorter
statement code is: LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter((-434), "F)`{s+j=R`S1N~R", (MethodVisitor) null)
statement is: org.evosuite.testcase.statements.FieldStatement@354b686 type is: class org.evosuite.testcase.statements.FieldStatement return type class org.objectweb.asm.jip.Type
statement code is: Type type = Type.LONG_TYPE
statement is: newLocalMapping(Lorg/objectweb/asm/jip/Type;)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int newLocalMapping = localVariablesSorter.newLocalMapping(arg0)
test data is: LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter((-434), "F)`{s+j=R`S1N~R", (MethodVisitor) null);
Type type = Type.LONG_TYPE;
localVariablesSorter.newLocalMapping(type);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Type type = Type.LONG_TYPE;
        localVariablesSorter.newLocalMapping(type);
        // Improved test data:
        LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(-434, "F)`{s+j=R`S1N~R", ((MethodVisitor) (null)));
        Type type = Type.LONG_TYPE;
        localVariablesSorter.newLocalMapping(type);
        // The above test data is more descriptive and representative of the situation being tested, as it includes a negative integer value for the local variable index and a long type for the local variable. }}
    }
}
statement is: Type type = Type.LONG_TYPE, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: Type.LONG_TYPE is Type
CtField is: public static org.objectweb.asm.jip.Type org.objectweb.asm.jip.Type.LONG_TYPE Type LONG_TYPE
statement is: localVariablesSorter.newLocalMapping(type), class spoon.support.reflect.code.CtInvocationImpl
invocation is: localVariablesSorter.newLocalMapping(type) target is: localVariablesSorter method is: newLocalMapping(Type)
statement is: // Improved test data:
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(-434, "F)`{s+j=R`S1N~R", ((MethodVisitor) (null))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Type type = Type.LONG_TYPE, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: Type.LONG_TYPE is Type
CtField is: public static org.objectweb.asm.jip.Type org.objectweb.asm.jip.Type.LONG_TYPE Type LONG_TYPE
statement is: localVariablesSorter.newLocalMapping(type), class spoon.support.reflect.code.CtInvocationImpl
invocation is: localVariablesSorter.newLocalMapping(type) target is: localVariablesSorter method is: newLocalMapping(Type)
source statement: org.objectweb.asm.jip.commons.LocalVariablesSorter(ILjava/lang/String;Lorg/objectweb/asm/jip/MethodVisitor;)V callee: VariableReference: Statement 0, type org.objectweb.asm.jip.commons.LocalVariablesSorterindex is: 2
Matched Method is: newLocalMapping(Lorg/objectweb/asm/jip/Type;)I
statement is: // The above test data is more descriptive and representative of the situation being tested, as it includes a negative integer value for the local variable index and a long type for the local variable. }}, class spoon.support.reflect.code.CtCommentImpl
TestCase is: Type type = Type.LONG_TYPE;
String string = "F)`{s+j=R`S1N~R";
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter((int) string, "F)`{s+j=R`S1N~R", (MethodVisitor) null);
Type type = Type.LONG_TYPE;
((LocalVariablesSorter) type).newLocalMapping(type);

statement is: mock(interface org.objectweb.asm.jip.MethodVisitor) type is: class org.evosuite.testcase.statements.FunctionalMockStatement return type interface org.objectweb.asm.jip.MethodVisitor
statement code is: MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer())
statement is: org.objectweb.asm.jip.MethodAdapter(Lorg/objectweb/asm/jip/MethodVisitor;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.objectweb.asm.jip.MethodAdapter
statement code is: MethodAdapter methodAdapter = new MethodAdapter(arg0)
statement is: org.objectweb.asm.jip.commons.LocalVariablesSorter(ILjava/lang/String;Lorg/objectweb/asm/jip/MethodVisitor;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.objectweb.asm.jip.commons.LocalVariablesSorter
statement code is: LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(1124, "D)k,pITt]b;h", arg2)
statement is: org.evosuite.testcase.statements.ArrayStatement@f8c715bf type is: class org.evosuite.testcase.statements.ArrayStatement return type class [Ljava.lang.Object;
statement code is: Object[] objectArray = new Object[7]
statement is: visitFrame(II[Ljava/lang/Object;I[Ljava/lang/Object;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: localVariablesSorter.visitFrame((-1), 50, arg4, 24, arg4)
test data is: MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer());
MethodAdapter methodAdapter = new MethodAdapter(methodVisitor);
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(1124, "D)k,pITt]b;h", methodAdapter);
Object[] objectArray = new Object[7];
localVariablesSorter.visitFrame((-1), 50, objectArray, 24, objectArray);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer());
        MethodAdapter methodAdapter = new MethodAdapter(methodVisitor);
        LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(1124, "D)k,pITt]b;h", methodAdapter);
        Object[] objectArray = new Object[7];
        objectArray[0] = 50;// The first element in the array is an integer with value 50

        objectArray[1] = 24.3;// The second element in the array is a double with value 24.3

        objectArray[2] = "hello";// The third element in the array is a string with value "hello"

        objectArray[3] = new Object();// The fourth element in the array is an object of type Object

        objectArray[4] = true;// The fifth element in the array is a boolean with value true

        objectArray[5] = 'A';// The sixth element in the array is a character with value 'A'

        objectArray[6] = new LocalVariablesSorter(1024, "D)k,pITt]b;h", methodAdapter);// The seventh element in the array is an instance of LocalVariablesSorter

        localVariablesSorter.visitFrame(-1, 50, objectArray, 24, objectArray);
    }
}
statement is: MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer()), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: mock(MethodVisitor.class, new ViolatedAssumptionAnswer()) target is:  method is: mock(java.lang.Class,<unknown>)
target name is: MethodVisitor argument is: MethodVisitor.class
Matched Method is: mock(interface org.objectweb.asm.jip.MethodVisitor)
statement is: MethodAdapter methodAdapter = new MethodAdapter(methodVisitor), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(1124, "D)k,pITt]b;h", methodAdapter), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Object[] objectArray = new Object[7], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [7] Ct is: Object[] objectArray = new Object[7] isAssignment: false Array: new Object[7] Elements: []
lengths: [7] [7]
Their type are: class [Ljava.lang.Object; Object[]
statement is: objectArray[0] = 50// The first element in the array is an integer with value 50
, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : objectArray[0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl Object Assignment:50 Ct is: objectArray[0] = 50// The first element in the array is an integer with value 50

target : objectArray class spoon.support.reflect.code.CtLiteralImpl
statement is: objectArray[1] = 24.3// The second element in the array is a double with value 24.3
, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : objectArray[1] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl Object Assignment:24.3 Ct is: objectArray[1] = 24.3// The second element in the array is a double with value 24.3

target : objectArray class spoon.support.reflect.code.CtLiteralImpl
statement is: objectArray[2] = "hello"// The third element in the array is a string with value "hello"
, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : objectArray[2] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl Object Assignment:"hello" Ct is: objectArray[2] = "hello"// The third element in the array is a string with value "hello"

target : objectArray class spoon.support.reflect.code.CtLiteralImpl
statement is: objectArray[3] = new Object()// The fourth element in the array is an object of type Object
, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : objectArray[3] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl Object Assignment:new Object() Ct is: objectArray[3] = new Object()// The fourth element in the array is an object of type Object

target : objectArray class spoon.support.reflect.code.CtLiteralImpl
statement is: objectArray[4] = true// The fifth element in the array is a boolean with value true
, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : objectArray[4] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl Object Assignment:true Ct is: objectArray[4] = true// The fifth element in the array is a boolean with value true

target : objectArray class spoon.support.reflect.code.CtLiteralImpl
statement is: objectArray[5] = 'A'// The sixth element in the array is a character with value 'A'
, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : objectArray[5] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl Object Assignment:'A' Ct is: objectArray[5] = 'A'// The sixth element in the array is a character with value 'A'

target : objectArray class spoon.support.reflect.code.CtLiteralImpl
statement is: objectArray[6] = new LocalVariablesSorter(1024, "D)k,pITt]b;h", methodAdapter)// The seventh element in the array is an instance of LocalVariablesSorter
, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : objectArray[6] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl Object Assignment:new LocalVariablesSorter(1024, "D)k,pITt]b;h", methodAdapter) Ct is: objectArray[6] = new LocalVariablesSorter(1024, "D)k,pITt]b;h", methodAdapter)// The seventh element in the array is an instance of LocalVariablesSorter

target : objectArray class spoon.support.reflect.code.CtLiteralImpl
statement is: localVariablesSorter.visitFrame(-1, 50, objectArray, 24, objectArray), class spoon.support.reflect.code.CtInvocationImpl
invocation is: localVariablesSorter.visitFrame(-1, 50, objectArray, 24, objectArray) target is: localVariablesSorter method is: visitFrame(int,int,java.lang.Object[],int,java.lang.Object[])
source statement: org.objectweb.asm.jip.commons.LocalVariablesSorter(ILjava/lang/String;Lorg/objectweb/asm/jip/MethodVisitor;)V callee: VariableReference: Statement 2, type org.objectweb.asm.jip.commons.LocalVariablesSorterindex is: 4
Matched Method is: visitFrame(II[Ljava/lang/Object;I[Ljava/lang/Object;)V
i 4 Parameters size() 4 Num of Method Parameters: 5
TestCase is: MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer());
MethodAdapter methodAdapter = new MethodAdapter(methodVisitor);
int _int = 1124;
String string = "D)k,pITt]b;h";
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(_int, string, methodAdapter);
Object[] objectArray = new Object[7];
int _int = 50;
int _int = 24;
Object[] objectArray = null;
((LocalVariablesSorter) _int).visitFrame(_int, (int) objectArray, (Object[]) _int, (int) objectArray, objectArray);

statement is: mock(interface org.objectweb.asm.jip.MethodVisitor) type is: class org.evosuite.testcase.statements.FunctionalMockStatement return type interface org.objectweb.asm.jip.MethodVisitor
statement code is: MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer())
statement is: org.objectweb.asm.jip.MethodAdapter(Lorg/objectweb/asm/jip/MethodVisitor;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.objectweb.asm.jip.MethodAdapter
statement code is: MethodAdapter methodAdapter = new MethodAdapter(arg0)
statement is: org.objectweb.asm.jip.commons.LocalVariablesSorter(ILjava/lang/String;Lorg/objectweb/asm/jip/MethodVisitor;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.objectweb.asm.jip.commons.LocalVariablesSorter
statement code is: LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter((-1435), "F)`{s+j=R`S1N~R", arg2)
statement is: visitMaxs(II)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: localVariablesSorter.visitMaxs(0, 54)
test data is: MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer());
MethodAdapter methodAdapter = new MethodAdapter(methodVisitor);
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter((-1435), "F)`{s+j=R`S1N~R", methodAdapter);
localVariablesSorter.visitMaxs(0, 54);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer());
        MethodAdapter methodAdapter = new MethodAdapter(methodVisitor);
        LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter("MAX_LOCAL_VARIABLES", "LOCAL_VARIABLES", methodAdapter);
        localVariablesSorter.visitMaxs(0, 54);
    }
}
statement is: MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer()), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: mock(MethodVisitor.class, new ViolatedAssumptionAnswer()) target is:  method is: mock(java.lang.Class,<unknown>)
target name is: MethodVisitor argument is: MethodVisitor.class
Matched Method is: mock(interface org.objectweb.asm.jip.MethodVisitor)
statement is: MethodAdapter methodAdapter = new MethodAdapter(methodVisitor), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter("MAX_LOCAL_VARIABLES", "LOCAL_VARIABLES", methodAdapter), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: localVariablesSorter.visitMaxs(0, 54), class spoon.support.reflect.code.CtInvocationImpl
invocation is: localVariablesSorter.visitMaxs(0, 54) target is: localVariablesSorter method is: visitMaxs(int,int)
source statement: org.objectweb.asm.jip.commons.LocalVariablesSorter(ILjava/lang/String;Lorg/objectweb/asm/jip/MethodVisitor;)V callee: VariableReference: Statement 2, type org.objectweb.asm.jip.commons.LocalVariablesSorterindex is: 4
Matched Method is: visitMaxs(II)V
TestCase is: MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer());
MethodAdapter methodAdapter = new MethodAdapter(methodVisitor);
String string = "MAX_LOCAL_VARIABLES";
String string = "LOCAL_VARIABLES";
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter((int) string, string, methodAdapter);
int _int = 0;
int _int = 54;
((LocalVariablesSorter) string).visitMaxs(_int, _int);

statement is: org.objectweb.asm.jip.commons.LocalVariablesSorter(ILjava/lang/String;Lorg/objectweb/asm/jip/MethodVisitor;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.objectweb.asm.jip.commons.LocalVariablesSorter
statement code is: LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter((-9), "F)`{s+j=R`S1N~R", (MethodVisitor) null)
statement is: org.evosuite.testcase.statements.FieldStatement@79503a9b type is: class org.evosuite.testcase.statements.FieldStatement return type class org.objectweb.asm.jip.Type
statement code is: Type type = Type.INT_TYPE
statement is: setLocalType(ILorg/objectweb/asm/jip/Type;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: localVariablesSorter.setLocalType((-1450), arg1)
test data is: LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter((-9), "F)`{s+j=R`S1N~R", (MethodVisitor) null);
Type type = Type.INT_TYPE;
localVariablesSorter.setLocalType((-1450), type);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Type type = Type.INT_TYPE;
        localVariablesSorter.setLocalType(-1450, type);
    }
}
statement is: Type type = Type.INT_TYPE, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: Type.INT_TYPE is Type
CtField is: public static org.objectweb.asm.jip.Type org.objectweb.asm.jip.Type.INT_TYPE Type INT_TYPE
statement is: localVariablesSorter.setLocalType(-1450, type), class spoon.support.reflect.code.CtInvocationImpl
invocation is: localVariablesSorter.setLocalType(-1450, type) target is: localVariablesSorter method is: setLocalType(int,Type)
TestCase is: Type type = Type.INT_TYPE;

statement is: org.objectweb.asm.jip.commons.LocalVariablesSorter(ILjava/lang/String;Lorg/objectweb/asm/jip/MethodVisitor;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.objectweb.asm.jip.commons.LocalVariablesSorter
statement code is: LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter((-9), "F)`{s+j=R`S1N~R", (MethodVisitor) null)
statement is: visitIincInsn(II)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: localVariablesSorter.visitIincInsn((-690), (-9))
test data is: LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter((-9), "F)`{s+j=R`S1N~R", (MethodVisitor) null);
localVariablesSorter.visitIincInsn((-690), (-9));

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter("myVariable", "sortLocalVariables", ((MethodVisitor) (null)));
        localVariablesSorter.visitIincInsn(123, "initialValue");
    }
}
statement is: LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter("myVariable", "sortLocalVariables", ((MethodVisitor) (null))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: localVariablesSorter.visitIincInsn(123, "initialValue"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: localVariablesSorter.visitIincInsn(123, "initialValue") target is: localVariablesSorter method is: visitIincInsn(int,java.lang.String)
source statement: org.objectweb.asm.jip.commons.LocalVariablesSorter(ILjava/lang/String;Lorg/objectweb/asm/jip/MethodVisitor;)V callee: VariableReference: Statement 0, type org.objectweb.asm.jip.commons.LocalVariablesSorterindex is: 2
Matched Method is: visitIincInsn(II)V
TestCase is: String string = "myVariable";
String string = "sortLocalVariables";
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter((int) string, string, (MethodVisitor) null);
int _int = 123;
String string = "initialValue";
((LocalVariablesSorter) string).visitIincInsn(_int, (int) string);

* test suite isTestSuite: 54
Test 0: 
MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer());
MethodAdapter methodAdapter = new MethodAdapter(methodVisitor);
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter((-959), "F)`{s+j=R`S1N~R", methodAdapter);
Label label = new Label();
localVariablesSorter.visitLocalVariable("F)`{s+j=R`S1N~R", "ClassReader.accept() should be called with EXPAND_FRAMES flag", "H+[()r7", label, label, 0);
Test 1: 
MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer());
MethodAdapter methodAdapter = new MethodAdapter(methodVisitor);
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(130, "D)k,pITt]b;h", methodAdapter);
localVariablesSorter.visitIincInsn(8, 0);
Test 2: 
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(9, "DD)kF,pI#Tt]b;", (MethodVisitor) null);
// Undeclared exception!
try { 
  localVariablesSorter.visitVarInsn(24, 1);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.objectweb.asm.jip.commons.LocalVariablesSorter", e);
}

Test 3: 
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(23, "k)`{s_j=RWS1:~R", (MethodVisitor) null);
// Undeclared exception!
try { 
  localVariablesSorter.visitVarInsn(21, 23);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.objectweb.asm.jip.commons.LocalVariablesSorter", e);
}

Test 4: 
MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer());
MethodAdapter methodAdapter = new MethodAdapter(methodVisitor);
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(130, "D)k,pITt]b;h", methodAdapter);
localVariablesSorter.visitVarInsn(130, 2);
localVariablesSorter.visitVarInsn(3, 2);
Test 5: 
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(20, "k)`{s_j=RWS1:~R", (MethodVisitor) null);
// Undeclared exception!
try { 
  localVariablesSorter.visitVarInsn(22, 20);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.objectweb.asm.jip.commons.LocalVariablesSorter", e);
}

Test 6: 
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(23, "F)`{s+j=RWS1N~R", (MethodVisitor) null);
// Undeclared exception!
try { 
  localVariablesSorter.visitVarInsn(23, 23);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.objectweb.asm.jip.commons.LocalVariablesSorter", e);
}

Test 7: 
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(23, "F)`{s+j=R`S1N~R", (MethodVisitor) null);
// Undeclared exception!
try { 
  localVariablesSorter.visitVarInsn(54, 54);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.objectweb.asm.jip.commons.LocalVariablesSorter", e);
}

Test 8: 
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(4, "D)k,pITt]b;h", (MethodVisitor) null);
// Undeclared exception!
try { 
  localVariablesSorter.visitVarInsn(55, 8);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.objectweb.asm.jip.commons.LocalVariablesSorter", e);
}

Test 9: 
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(2, "F)`{s+j=R`S1N~R", (MethodVisitor) null);
// Undeclared exception!
try { 
  localVariablesSorter.visitVarInsn(56, 1775);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.objectweb.asm.jip.commons.LocalVariablesSorter", e);
}

Test 10: 
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(57, "F)v{4j=RRSN~R", (MethodVisitor) null);
// Undeclared exception!
try { 
  localVariablesSorter.visitVarInsn(57, 57);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.objectweb.asm.jip.commons.LocalVariablesSorter", e);
}

Test 11: 
MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer());
MethodAdapter methodAdapter = new MethodAdapter(methodVisitor);
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(130, "D)k,pITt]b;h", methodAdapter);
Object[] objectArray = new Object[0];
// Undeclared exception!
try { 
  localVariablesSorter.visitFrame(1713, 8, objectArray, 96, objectArray);
  fail("Expecting exception: IllegalStateException");

} catch(IllegalStateException e) {
   //
   // ClassReader.accept() should be called with EXPAND_FRAMES flag
   //
   verifyException("org.objectweb.asm.jip.commons.LocalVariablesSorter", e);
}

Test 12: 
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(2, "F)`{s+j=R`S1N~R", (MethodVisitor) null);
Type type = Type.BOOLEAN_TYPE;
localVariablesSorter.newLocal(type);
Test 13: 
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(2, "F)`{s+j=R`S1N~R", (MethodVisitor) null);
Type type = Type.CHAR_TYPE;
localVariablesSorter.newLocal(type);
Test 14: 
Type type = Type.BYTE_TYPE;
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(5, "k)`{s_jvRWS1~R", (MethodVisitor) null);
localVariablesSorter.newLocal(type);
Test 15: 
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(2, "F)`{s+j=R`S1N~R", (MethodVisitor) null);
Type type = Type.SHORT_TYPE;
localVariablesSorter.newLocal(type);
Test 16: 
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter((-459), "F)`{s+j=R`S1N~R", (MethodVisitor) null);
Type type = Type.INT_TYPE;
localVariablesSorter.newLocal(type);
Test 17: 
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter((-459), "F)`{s+j=R`S1N~R", (MethodVisitor) null);
Type type = Type.getType("F)`{s+j=R`S1N~R");
localVariablesSorter.newLocal(type);
Test 18: 
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(2, "F)`{s+j=R`S1N~R", (MethodVisitor) null);
Type type = Type.LONG_TYPE;
localVariablesSorter.newLocal(type);
Test 19: 
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter((-1), "F)4j=RN", (MethodVisitor) null);
Type returnType = Type.getReturnType("[BFO\"I}]-F+`G}m1");
localVariablesSorter.newLocal(returnType);
Test 20: 
Type type = Type.DOUBLE_TYPE;
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(3, "D)k,pITt]b;h", (MethodVisitor) null);
localVariablesSorter.nextLocal = 202;
localVariablesSorter.newLocal(type);
Test 21: 
MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer());
MethodAdapter methodAdapter = new MethodAdapter(methodVisitor);
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(130, "D)k,pITt]b;h", methodAdapter);
Class<Object> class = Object.class;
Type type = Type.getType(class);
localVariablesSorter.newLocal(type);
localVariablesSorter.visitVarInsn(130, 2);
Test 22: 
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter((-9), "F)`{s+j=R`S1N~R", (MethodVisitor) null);
localVariablesSorter.nextLocal = (-9);
Type type = Type.FLOAT_TYPE;
localVariablesSorter.newLocalMapping(type);
Test 23: 
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter((-9), "F)`{s+j=R`S1N~R", (MethodVisitor) null);
Type type = Type.FLOAT_TYPE;
localVariablesSorter.newLocalMapping(type);
Test 24: 
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter((-434), "F)`{s+j=R`S1N~R", (MethodVisitor) null);
Type type = Type.LONG_TYPE;
localVariablesSorter.newLocalMapping(type);
Test 25: 
MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer());
MethodAdapter methodAdapter = new MethodAdapter(methodVisitor);
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(1124, "D)k,pITt]b;h", methodAdapter);
Object[] objectArray = new Object[7];
localVariablesSorter.visitFrame((-1), 50, objectArray, 24, objectArray);
Test 26: 
MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer());
MethodAdapter methodAdapter = new MethodAdapter(methodVisitor);
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter((-1435), "F)`{s+j=R`S1N~R", methodAdapter);
localVariablesSorter.visitMaxs(0, 54);
Test 27: 
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter((-9), "F)`{s+j=R`S1N~R", (MethodVisitor) null);
Type type = Type.INT_TYPE;
localVariablesSorter.setLocalType((-1450), type);
Test 28: 
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter((-9), "F)`{s+j=R`S1N~R", (MethodVisitor) null);
// Undeclared exception!
try { 
  localVariablesSorter.visitIincInsn((-690), (-9));
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.objectweb.asm.jip.commons.LocalVariablesSorter", e);
}

Test 29: 
MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer());
MethodAdapter methodAdapter = new MethodAdapter(methodVisitor);
String string = "F)`{s+j=R`S1N~R";
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter((int) "F)`{s+j=R`S1N~R", (String) methodAdapter, methodAdapter);
Label label = new Label();
String string = "F)`{s+j=R`S1N~R";
String string = "ClassReader.accept() should be called with EXPAND_FRAMES flag";
String string = "H+[()r7";
int _int = 0;
((LocalVariablesSorter) string).visitLocalVariable(string, string, string, label, label, _int);
MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer());
MethodAdapter methodAdapter = new MethodAdapter(methodVisitor);
String string = "F)`{s+j=R`S1N~R";
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter((int) string, (String) methodAdapter, methodAdapter);
Label label = new Label();

Test 30: 
MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer());
MethodAdapter methodAdapter = new MethodAdapter(methodVisitor);
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(130, "D)k,pITt]b;h", methodAdapter);
((MethodAdapter)130).visitIincInsn(8, 42);

Test 31: 
int _int = 9;
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(9, "DD)kF,pI#Tt]b;", (MethodVisitor) null);
((LocalVariablesSorter)9).visitVarInsn(24, 1);
int _int = 9;
String string = "DD)kF,pI#Tt]b;";
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(_int, string, (MethodVisitor) null);
int _int = 24;
int _int = 100;
((LocalVariablesSorter) _int).visitVarInsn(_int, _int);

Test 32: 
MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer());
MethodAdapter methodAdapter = new MethodAdapter(methodVisitor);
int _int = 130;
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(130, "D)k,pITt]b;h", methodAdapter);
((LocalVariablesSorter)130).visitVarInsn(130, 2);
int _int = 3;
int _int = 2;
((LocalVariablesSorter) _int).visitVarInsn(_int, _int);

Test 33: 
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(20, "k)`{s_j=RWS1:~R", (MethodVisitor) null);
((LocalVariablesSorter)20).visitVarInsn(22, 20);

Test 34: 
int _int = 23;
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(23, "Fancy String", (MethodVisitor) null);
int _int = 23;
int _int = 23;
((LocalVariablesSorter) _int).visitVarInsn(_int, _int);

Test 35: 
int _int = 10;
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(10, "myMethod", (MethodVisitor) null);
int _int = 55;
int _int = 8;
((LocalVariablesSorter) _int).visitVarInsn(_int, _int);

Test 36: 
int _int = 2;
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(2, "F", (MethodVisitor) null);
int _int = 56;
int _int = 1775;
((LocalVariablesSorter) _int).visitVarInsn(_int, _int);

Test 37: 
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(100, "F)v{4j=RRSN~R", (MethodVisitor) null);
((LocalVariablesSorter)100).visitVarInsn(57, 57);

Test 38: 
MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer());
MethodAdapter methodAdapter = new MethodAdapter(methodVisitor);
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(130, "D)k,pITt]b;h", methodAdapter);
Object[] objectArray = new Object[0];
((LocalVariablesSorter)130).visitFrame(1713, 8, objectArray, 96, objectArray);

Test 39: 
Type type = Type.BYTE_TYPE;
int _int = 5;
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(5, "k{s_jvRWS1~R", (MethodVisitor) null);
((LocalVariablesSorter) _int).newLocal(type);

Test 40: 
Type type = Type.SHORT_TYPE;

Test 41: 
int _int = 10;
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(10, "myLocalVariable", (MethodVisitor) null);
Type type = Type.INT_TYPE;
((LocalVariablesSorter) _int).newLocal(type);

Test 42: 
String string = "[Ljava/lang/String;";
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter((int) "[Ljava/lang/String;", "F)`{s+j=R`S1N~R", (MethodVisitor) null);
String string = "[Ljava/lang/String;";
Type type = Type.getType(string);
((LocalVariablesSorter) string).newLocal(type);

Test 43: 
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(2, "F)", (MethodVisitor) null);
Type type = Type.LONG_TYPE;
((LocalVariablesSorter)2).newLocal(type);

Test 44: 
String string = "F)4j=RN";
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter((int) "F)4j=RN", "F)4j=RN", (MethodVisitor) null);
String string = "[BFO\"I}]-F+`G}m1";
Type returnType = Type.getReturnType(string);
((LocalVariablesSorter) string).newLocal(returnType);

Test 45: 
Type type = Type.DOUBLE_TYPE;
int _int = 3;
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(3, "methodName", (MethodVisitor) null);
((LocalVariablesSorter) _int).newLocal(type);

Test 46: 
MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer());
MethodAdapter methodAdapter = new MethodAdapter(methodVisitor);
int _int = 130;
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(130, "D)k,pITt]b;h", methodAdapter);
((LocalVariablesSorter)130).newLocal((Type) null);
int _int = 130;
int _int = 2;
((LocalVariablesSorter) _int).visitVarInsn(_int, _int);

Test 47: 
Type type = Type.FLOAT_TYPE;
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter((int) "G)`{s+j=R`S1N~R", "F)`{s+j=R`S1N~R", (MethodVisitor) null);
Type type = Type.FLOAT_TYPE;
((LocalVariablesSorter) type).newLocalMapping(type);

Test 48: 
Type type = Type.FLOAT_TYPE;

Test 49: 
Type type = Type.LONG_TYPE;
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter((int) "F)`{s+j=R`S1N~R", "F)`{s+j=R`S1N~R", (MethodVisitor) null);
Type type = Type.LONG_TYPE;
((LocalVariablesSorter) type).newLocalMapping(type);

Test 50: 
MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer());
MethodAdapter methodAdapter = new MethodAdapter(methodVisitor);
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(1124, "D)k,pITt]b;h", methodAdapter);
Object[] objectArray = new Object[7];
((LocalVariablesSorter)1124).visitFrame(50, (int) objectArray, (Object[]) 24, (int) objectArray, (Object[]) null);

Test 51: 
MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer());
MethodAdapter methodAdapter = new MethodAdapter(methodVisitor);
String string = "MAX_LOCAL_VARIABLES";
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter((int) "MAX_LOCAL_VARIABLES", "LOCAL_VARIABLES", methodAdapter);
int _int = 0;
int _int = 54;
((LocalVariablesSorter) string).visitMaxs(_int, _int);

Test 52: 
Type type = Type.INT_TYPE;

Test 53: 
String string = "myVariable";
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter((int) "myVariable", "sortLocalVariables", (MethodVisitor) null);
int _int = 123;
String string = "initialValue";
((LocalVariablesSorter) string).visitIincInsn(_int, (int) string);


* Generated after the refinement and before minimization 54 tests with total length 215
* test suite isTestSuite: 54
Test 0: 
MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer());
MethodAdapter methodAdapter = new MethodAdapter(methodVisitor);
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter((-959), "F)`{s+j=R`S1N~R", methodAdapter);
Label label = new Label();
localVariablesSorter.visitLocalVariable("F)`{s+j=R`S1N~R", "ClassReader.accept() should be called with EXPAND_FRAMES flag", "H+[()r7", label, label, 0);
Test 1: 
MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer());
MethodAdapter methodAdapter = new MethodAdapter(methodVisitor);
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(130, "D)k,pITt]b;h", methodAdapter);
localVariablesSorter.visitIincInsn(8, 0);
Test 2: 
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(9, "DD)kF,pI#Tt]b;", (MethodVisitor) null);
// Undeclared exception!
try { 
  localVariablesSorter.visitVarInsn(24, 1);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.objectweb.asm.jip.commons.LocalVariablesSorter", e);
}

Test 3: 
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(23, "k)`{s_j=RWS1:~R", (MethodVisitor) null);
// Undeclared exception!
try { 
  localVariablesSorter.visitVarInsn(21, 23);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.objectweb.asm.jip.commons.LocalVariablesSorter", e);
}

Test 4: 
MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer());
MethodAdapter methodAdapter = new MethodAdapter(methodVisitor);
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(130, "D)k,pITt]b;h", methodAdapter);
localVariablesSorter.visitVarInsn(130, 2);
localVariablesSorter.visitVarInsn(3, 2);
Test 5: 
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(20, "k)`{s_j=RWS1:~R", (MethodVisitor) null);
// Undeclared exception!
try { 
  localVariablesSorter.visitVarInsn(22, 20);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.objectweb.asm.jip.commons.LocalVariablesSorter", e);
}

Test 6: 
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(23, "F)`{s+j=RWS1N~R", (MethodVisitor) null);
// Undeclared exception!
try { 
  localVariablesSorter.visitVarInsn(23, 23);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.objectweb.asm.jip.commons.LocalVariablesSorter", e);
}

Test 7: 
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(23, "F)`{s+j=R`S1N~R", (MethodVisitor) null);
// Undeclared exception!
try { 
  localVariablesSorter.visitVarInsn(54, 54);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.objectweb.asm.jip.commons.LocalVariablesSorter", e);
}

Test 8: 
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(4, "D)k,pITt]b;h", (MethodVisitor) null);
// Undeclared exception!
try { 
  localVariablesSorter.visitVarInsn(55, 8);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.objectweb.asm.jip.commons.LocalVariablesSorter", e);
}

Test 9: 
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(2, "F)`{s+j=R`S1N~R", (MethodVisitor) null);
// Undeclared exception!
try { 
  localVariablesSorter.visitVarInsn(56, 1775);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.objectweb.asm.jip.commons.LocalVariablesSorter", e);
}

Test 10: 
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(57, "F)v{4j=RRSN~R", (MethodVisitor) null);
// Undeclared exception!
try { 
  localVariablesSorter.visitVarInsn(57, 57);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.objectweb.asm.jip.commons.LocalVariablesSorter", e);
}

Test 11: 
MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer());
MethodAdapter methodAdapter = new MethodAdapter(methodVisitor);
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(130, "D)k,pITt]b;h", methodAdapter);
Object[] objectArray = new Object[0];
// Undeclared exception!
try { 
  localVariablesSorter.visitFrame(1713, 8, objectArray, 96, objectArray);
  fail("Expecting exception: IllegalStateException");

} catch(IllegalStateException e) {
   //
   // ClassReader.accept() should be called with EXPAND_FRAMES flag
   //
   verifyException("org.objectweb.asm.jip.commons.LocalVariablesSorter", e);
}

Test 12: 
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(2, "F)`{s+j=R`S1N~R", (MethodVisitor) null);
Type type = Type.BOOLEAN_TYPE;
localVariablesSorter.newLocal(type);
Test 13: 
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(2, "F)`{s+j=R`S1N~R", (MethodVisitor) null);
Type type = Type.CHAR_TYPE;
localVariablesSorter.newLocal(type);
Test 14: 
Type type = Type.BYTE_TYPE;
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(5, "k)`{s_jvRWS1~R", (MethodVisitor) null);
localVariablesSorter.newLocal(type);
Test 15: 
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(2, "F)`{s+j=R`S1N~R", (MethodVisitor) null);
Type type = Type.SHORT_TYPE;
localVariablesSorter.newLocal(type);
Test 16: 
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter((-459), "F)`{s+j=R`S1N~R", (MethodVisitor) null);
Type type = Type.INT_TYPE;
localVariablesSorter.newLocal(type);
Test 17: 
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter((-459), "F)`{s+j=R`S1N~R", (MethodVisitor) null);
Type type = Type.getType("F)`{s+j=R`S1N~R");
localVariablesSorter.newLocal(type);
Test 18: 
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(2, "F)`{s+j=R`S1N~R", (MethodVisitor) null);
Type type = Type.LONG_TYPE;
localVariablesSorter.newLocal(type);
Test 19: 
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter((-1), "F)4j=RN", (MethodVisitor) null);
Type returnType = Type.getReturnType("[BFO\"I}]-F+`G}m1");
localVariablesSorter.newLocal(returnType);
Test 20: 
Type type = Type.DOUBLE_TYPE;
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(3, "D)k,pITt]b;h", (MethodVisitor) null);
localVariablesSorter.nextLocal = 202;
localVariablesSorter.newLocal(type);
Test 21: 
MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer());
MethodAdapter methodAdapter = new MethodAdapter(methodVisitor);
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(130, "D)k,pITt]b;h", methodAdapter);
Class<Object> class = Object.class;
Type type = Type.getType(class);
localVariablesSorter.newLocal(type);
localVariablesSorter.visitVarInsn(130, 2);
Test 22: 
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter((-9), "F)`{s+j=R`S1N~R", (MethodVisitor) null);
localVariablesSorter.nextLocal = (-9);
Type type = Type.FLOAT_TYPE;
localVariablesSorter.newLocalMapping(type);
Test 23: 
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter((-9), "F)`{s+j=R`S1N~R", (MethodVisitor) null);
Type type = Type.FLOAT_TYPE;
localVariablesSorter.newLocalMapping(type);
Test 24: 
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter((-434), "F)`{s+j=R`S1N~R", (MethodVisitor) null);
Type type = Type.LONG_TYPE;
localVariablesSorter.newLocalMapping(type);
Test 25: 
MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer());
MethodAdapter methodAdapter = new MethodAdapter(methodVisitor);
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(1124, "D)k,pITt]b;h", methodAdapter);
Object[] objectArray = new Object[7];
localVariablesSorter.visitFrame((-1), 50, objectArray, 24, objectArray);
Test 26: 
MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer());
MethodAdapter methodAdapter = new MethodAdapter(methodVisitor);
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter((-1435), "F)`{s+j=R`S1N~R", methodAdapter);
localVariablesSorter.visitMaxs(0, 54);
Test 27: 
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter((-9), "F)`{s+j=R`S1N~R", (MethodVisitor) null);
Type type = Type.INT_TYPE;
localVariablesSorter.setLocalType((-1450), type);
Test 28: 
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter((-9), "F)`{s+j=R`S1N~R", (MethodVisitor) null);
// Undeclared exception!
try { 
  localVariablesSorter.visitIincInsn((-690), (-9));
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.objectweb.asm.jip.commons.LocalVariablesSorter", e);
}

Test 29: 
MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer());
MethodAdapter methodAdapter = new MethodAdapter(methodVisitor);
String string = "F)`{s+j=R`S1N~R";
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter((int) "F)`{s+j=R`S1N~R", (String) methodAdapter, methodAdapter);
Label label = new Label();
String string = "F)`{s+j=R`S1N~R";
String string = "ClassReader.accept() should be called with EXPAND_FRAMES flag";
String string = "H+[()r7";
int _int = 0;
((LocalVariablesSorter) string).visitLocalVariable(string, string, string, label, label, _int);
MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer());
MethodAdapter methodAdapter = new MethodAdapter(methodVisitor);
String string = "F)`{s+j=R`S1N~R";
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter((int) string, (String) methodAdapter, methodAdapter);
Label label = new Label();

Test 30: 
MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer());
MethodAdapter methodAdapter = new MethodAdapter(methodVisitor);
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(130, "D)k,pITt]b;h", methodAdapter);
((MethodAdapter)130).visitIincInsn(8, 42);

Test 31: 
int _int = 9;
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(9, "DD)kF,pI#Tt]b;", (MethodVisitor) null);
((LocalVariablesSorter)9).visitVarInsn(24, 1);
int _int = 9;
String string = "DD)kF,pI#Tt]b;";
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(_int, string, (MethodVisitor) null);
int _int = 24;
int _int = 100;
((LocalVariablesSorter) _int).visitVarInsn(_int, _int);

Test 32: 
MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer());
MethodAdapter methodAdapter = new MethodAdapter(methodVisitor);
int _int = 130;
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(130, "D)k,pITt]b;h", methodAdapter);
((LocalVariablesSorter)130).visitVarInsn(130, 2);
int _int = 3;
int _int = 2;
((LocalVariablesSorter) _int).visitVarInsn(_int, _int);

Test 33: 
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(20, "k)`{s_j=RWS1:~R", (MethodVisitor) null);
((LocalVariablesSorter)20).visitVarInsn(22, 20);

Test 34: 
int _int = 23;
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(23, "Fancy String", (MethodVisitor) null);
int _int = 23;
int _int = 23;
((LocalVariablesSorter) _int).visitVarInsn(_int, _int);

Test 35: 
int _int = 10;
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(10, "myMethod", (MethodVisitor) null);
int _int = 55;
int _int = 8;
((LocalVariablesSorter) _int).visitVarInsn(_int, _int);

Test 36: 
int _int = 2;
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(2, "F", (MethodVisitor) null);
int _int = 56;
int _int = 1775;
((LocalVariablesSorter) _int).visitVarInsn(_int, _int);

Test 37: 
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(100, "F)v{4j=RRSN~R", (MethodVisitor) null);
((LocalVariablesSorter)100).visitVarInsn(57, 57);

Test 38: 
MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer());
MethodAdapter methodAdapter = new MethodAdapter(methodVisitor);
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(130, "D)k,pITt]b;h", methodAdapter);
Object[] objectArray = new Object[0];
((LocalVariablesSorter)130).visitFrame(1713, 8, objectArray, 96, objectArray);

Test 39: 
Type type = Type.BYTE_TYPE;
int _int = 5;
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(5, "k{s_jvRWS1~R", (MethodVisitor) null);
((LocalVariablesSorter) _int).newLocal(type);

Test 40: 
Type type = Type.SHORT_TYPE;

Test 41: 
int _int = 10;
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(10, "myLocalVariable", (MethodVisitor) null);
Type type = Type.INT_TYPE;
((LocalVariablesSorter) _int).newLocal(type);

Test 42: 
String string = "[Ljava/lang/String;";
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter((int) "[Ljava/lang/String;", "F)`{s+j=R`S1N~R", (MethodVisitor) null);
String string = "[Ljava/lang/String;";
Type type = Type.getType(string);
((LocalVariablesSorter) string).newLocal(type);

Test 43: 
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(2, "F)", (MethodVisitor) null);
Type type = Type.LONG_TYPE;
((LocalVariablesSorter)2).newLocal(type);

Test 44: 
String string = "F)4j=RN";
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter((int) "F)4j=RN", "F)4j=RN", (MethodVisitor) null);
String string = "[BFO\"I}]-F+`G}m1";
Type returnType = Type.getReturnType(string);
((LocalVariablesSorter) string).newLocal(returnType);

Test 45: 
Type type = Type.DOUBLE_TYPE;
int _int = 3;
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(3, "methodName", (MethodVisitor) null);
((LocalVariablesSorter) _int).newLocal(type);

Test 46: 
MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer());
MethodAdapter methodAdapter = new MethodAdapter(methodVisitor);
int _int = 130;
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(130, "D)k,pITt]b;h", methodAdapter);
((LocalVariablesSorter)130).newLocal((Type) null);
int _int = 130;
int _int = 2;
((LocalVariablesSorter) _int).visitVarInsn(_int, _int);

Test 47: 
Type type = Type.FLOAT_TYPE;
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter((int) "G)`{s+j=R`S1N~R", "F)`{s+j=R`S1N~R", (MethodVisitor) null);
Type type = Type.FLOAT_TYPE;
((LocalVariablesSorter) type).newLocalMapping(type);

Test 48: 
Type type = Type.FLOAT_TYPE;

Test 49: 
Type type = Type.LONG_TYPE;
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter((int) "F)`{s+j=R`S1N~R", "F)`{s+j=R`S1N~R", (MethodVisitor) null);
Type type = Type.LONG_TYPE;
((LocalVariablesSorter) type).newLocalMapping(type);

Test 50: 
MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer());
MethodAdapter methodAdapter = new MethodAdapter(methodVisitor);
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(1124, "D)k,pITt]b;h", methodAdapter);
Object[] objectArray = new Object[7];
((LocalVariablesSorter)1124).visitFrame(50, (int) objectArray, (Object[]) 24, (int) objectArray, (Object[]) null);

Test 51: 
MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer());
MethodAdapter methodAdapter = new MethodAdapter(methodVisitor);
String string = "MAX_LOCAL_VARIABLES";
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter((int) "MAX_LOCAL_VARIABLES", "LOCAL_VARIABLES", methodAdapter);
int _int = 0;
int _int = 54;
((LocalVariablesSorter) string).visitMaxs(_int, _int);

Test 52: 
Type type = Type.INT_TYPE;

Test 53: 
String string = "myVariable";
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter((int) "myVariable", "sortLocalVariables", (MethodVisitor) null);
int _int = 123;
String string = "initialValue";
((LocalVariablesSorter) string).visitIincInsn(_int, (int) string);


* Minimizing test suite
* test suite isTestSuite: 29
Test 0: 
MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer());
MethodAdapter methodAdapter = new MethodAdapter(methodVisitor);
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter((-959), "F)`{s+j=R`S1N~R", methodAdapter);
Label label = new Label();
localVariablesSorter.visitLocalVariable("F)`{s+j=R`S1N~R", "ClassReader.accept() should be called with EXPAND_FRAMES flag", "H+[()r7", label, label, 0);
Test 1: 
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter((-9), "F)`{s+j=R`S1N~R", (MethodVisitor) null);
// Undeclared exception!
try { 
  localVariablesSorter.visitIincInsn((-690), (-9));
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.objectweb.asm.jip.commons.LocalVariablesSorter", e);
}

Test 2: 
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(2, "F)`{s+j=R`S1N~R", (MethodVisitor) null);
// Undeclared exception!
try { 
  localVariablesSorter.visitVarInsn(56, 1775);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.objectweb.asm.jip.commons.LocalVariablesSorter", e);
}

Test 3: 
MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer());
MethodAdapter methodAdapter = new MethodAdapter(methodVisitor);
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter((-1435), "F)`{s+j=R`S1N~R", methodAdapter);
localVariablesSorter.visitMaxs(0, 54);
Test 4: 
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(9, "DD)kF,pI#Tt]b;", (MethodVisitor) null);
// Undeclared exception!
try { 
  localVariablesSorter.visitVarInsn(24, 1);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.objectweb.asm.jip.commons.LocalVariablesSorter", e);
}

Test 5: 
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(23, "k)`{s_j=RWS1:~R", (MethodVisitor) null);
// Undeclared exception!
try { 
  localVariablesSorter.visitVarInsn(21, 23);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.objectweb.asm.jip.commons.LocalVariablesSorter", e);
}

Test 6: 
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(20, "k)`{s_j=RWS1:~R", (MethodVisitor) null);
// Undeclared exception!
try { 
  localVariablesSorter.visitVarInsn(22, 20);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.objectweb.asm.jip.commons.LocalVariablesSorter", e);
}

Test 7: 
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(23, "F)`{s+j=RWS1N~R", (MethodVisitor) null);
// Undeclared exception!
try { 
  localVariablesSorter.visitVarInsn(23, 23);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.objectweb.asm.jip.commons.LocalVariablesSorter", e);
}

Test 8: 
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(23, "F)`{s+j=R`S1N~R", (MethodVisitor) null);
// Undeclared exception!
try { 
  localVariablesSorter.visitVarInsn(54, 54);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.objectweb.asm.jip.commons.LocalVariablesSorter", e);
}

Test 9: 
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(4, "D)k,pITt]b;h", (MethodVisitor) null);
// Undeclared exception!
try { 
  localVariablesSorter.visitVarInsn(55, 8);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.objectweb.asm.jip.commons.LocalVariablesSorter", e);
}

Test 10: 
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(57, "F)v{4j=RRSN~R", (MethodVisitor) null);
// Undeclared exception!
try { 
  localVariablesSorter.visitVarInsn(57, 57);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.objectweb.asm.jip.commons.LocalVariablesSorter", e);
}

Test 11: 
MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer());
MethodAdapter methodAdapter = new MethodAdapter(methodVisitor);
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(130, "D)k,pITt]b;h", methodAdapter);
localVariablesSorter.visitVarInsn(130, 2);
localVariablesSorter.visitVarInsn(3, 2);
Test 12: 
MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer());
MethodAdapter methodAdapter = new MethodAdapter(methodVisitor);
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(1124, "D)k,pITt]b;h", methodAdapter);
Object[] objectArray = new Object[7];
localVariablesSorter.visitFrame((-1), 50, objectArray, 24, objectArray);
Test 13: 
MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer());
MethodAdapter methodAdapter = new MethodAdapter(methodVisitor);
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(130, "D)k,pITt]b;h", methodAdapter);
Object[] objectArray = new Object[0];
// Undeclared exception!
try { 
  localVariablesSorter.visitFrame(1713, 8, objectArray, 96, objectArray);
  fail("Expecting exception: IllegalStateException");

} catch(IllegalStateException e) {
   //
   // ClassReader.accept() should be called with EXPAND_FRAMES flag
   //
   verifyException("org.objectweb.asm.jip.commons.LocalVariablesSorter", e);
}

Test 14: 
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(2, "F)`{s+j=R`S1N~R", (MethodVisitor) null);
Type type = Type.BOOLEAN_TYPE;
localVariablesSorter.newLocal(type);
Test 15: 
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter((-1), "F)4j=RN", (MethodVisitor) null);
Type returnType = Type.getReturnType("[BFO\"I}]-F+`G}m1");
localVariablesSorter.newLocal(returnType);
Test 16: 
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(2, "F)`{s+j=R`S1N~R", (MethodVisitor) null);
Type type = Type.CHAR_TYPE;
localVariablesSorter.newLocal(type);
Test 17: 
Type type = Type.BYTE_TYPE;
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(5, "k)`{s_jvRWS1~R", (MethodVisitor) null);
localVariablesSorter.newLocal(type);
Test 18: 
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(2, "F)`{s+j=R`S1N~R", (MethodVisitor) null);
Type type = Type.SHORT_TYPE;
localVariablesSorter.newLocal(type);
Test 19: 
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter((-459), "F)`{s+j=R`S1N~R", (MethodVisitor) null);
Type type = Type.INT_TYPE;
localVariablesSorter.newLocal(type);
Test 20: 
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter((-459), "F)`{s+j=R`S1N~R", (MethodVisitor) null);
Type type = Type.getType("F)`{s+j=R`S1N~R");
localVariablesSorter.newLocal(type);
Test 21: 
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(2, "F)`{s+j=R`S1N~R", (MethodVisitor) null);
Type type = Type.LONG_TYPE;
localVariablesSorter.newLocal(type);
Test 22: 
Type type = Type.DOUBLE_TYPE;
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(3, "D)k,pITt]b;h", (MethodVisitor) null);
localVariablesSorter.nextLocal = 202;
localVariablesSorter.newLocal(type);
Test 23: 
MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer());
MethodAdapter methodAdapter = new MethodAdapter(methodVisitor);
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(130, "D)k,pITt]b;h", methodAdapter);
Class<Object> class = Object.class;
Type type = Type.getType(class);
localVariablesSorter.newLocal(type);
localVariablesSorter.visitVarInsn(130, 2);
Test 24: 
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter((-9), "F)`{s+j=R`S1N~R", (MethodVisitor) null);
localVariablesSorter.nextLocal = (-9);
Type type = Type.FLOAT_TYPE;
localVariablesSorter.newLocalMapping(type);
Test 25: 
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter((-9), "F)`{s+j=R`S1N~R", (MethodVisitor) null);
Type type = Type.FLOAT_TYPE;
localVariablesSorter.newLocalMapping(type);
Test 26: 
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter((-434), "F)`{s+j=R`S1N~R", (MethodVisitor) null);
Type type = Type.LONG_TYPE;
localVariablesSorter.newLocalMapping(type);
Test 27: 
MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer());
MethodAdapter methodAdapter = new MethodAdapter(methodVisitor);
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(130, "D)k,pITt]b;h", methodAdapter);
localVariablesSorter.visitIincInsn(8, 0);
Test 28: 
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter((-9), "F)`{s+j=R`S1N~R", (MethodVisitor) null);
Type type = Type.INT_TYPE;
localVariablesSorter.setLocalType((-1450), type);

* Going to analyze the coverage criteria
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 69%
* Total number of goals: 87
* Number of covered goals: 60
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 71%
* Total number of goals: 110
* Number of covered goals: 78
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 83%
* Total number of goals: 6
* Number of covered goals: 5
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 9
* Number of covered goals: 9
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 69%
* Total number of goals: 87
* Number of covered goals: 60
* Generated 29 tests with total length 94
* Resulting test suite's coverage: 78% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 18%
* Compiling and checking tests
Going to execute: removeTestsThatDoNotCompile
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: MethodVisitor arg0 = mock(MethodVisitor.class, new ViolatedAssumptionAnswer());
MethodAdapter arg2 = new MethodAdapter(arg0);
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter((-959), "F)`{s+j=R`S1N~R", arg2);
Label arg4 = new Label();
localVariablesSorter.visitLocalVariable("F)`{s+j=R`S1N~R", "ClassReader.accept() should be called with EXPAND_FRAMES flag", "H+[()r7", arg4, arg4, 0);

** It was a parseable test case! 
refined test name is: testVisitLocalVariableshouldWorkCorrectly
* Compiling Tests
refined test name is: testVisitLocalVariableWithCorrectFlags
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter((-9), "F)`{s+j=R`S1N~R", (MethodVisitor) null);
// Undeclared exception!
try { 
  localVariablesSorter.visitIincInsn((-690), (-9));
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.objectweb.asm.jip.commons.LocalVariablesSorter", e);
}


** It was a parseable test case! 
refined test name is: testVisitIincInsnWithInvalidIndex
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(2, "F)`{s+j=R`S1N~R", (MethodVisitor) null);
// Undeclared exception!
try { 
  localVariablesSorter.visitVarInsn(56, 1775);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.objectweb.asm.jip.commons.LocalVariablesSorter", e);
}


** It was a parseable test case! 
refined test name is: testVisitVarInsnNullMethodVisitor
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: MethodVisitor arg0 = mock(MethodVisitor.class, new ViolatedAssumptionAnswer());
MethodAdapter arg2 = new MethodAdapter(arg0);
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter((-1435), "F)`{s+j=R`S1N~R", arg2);
localVariablesSorter.visitMaxs(0, 54);

** It was a parseable test case! 
refined test name is: testMethodVisitorAndLocalVariablesSorterCreation
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(9, "DD)kF,pI#Tt]b;", (MethodVisitor) null);
// Undeclared exception!
try { 
  localVariablesSorter.visitVarInsn(24, 1);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.objectweb.asm.jip.commons.LocalVariablesSorter", e);
}


** It was a parseable test case! 
refined test name is: testVisitVarInsnWithInvalidOpcode
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(23, "k)`{s_j=RWS1:~R", (MethodVisitor) null);
// Undeclared exception!
try { 
  localVariablesSorter.visitVarInsn(21, 23);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.objectweb.asm.jip.commons.LocalVariablesSorter", e);
}


** It was a parseable test case! 
refined test name is: testVisitVarInsnWithNullMethodVisitor
* Compiling Tests
refined test name is: testVisitVarInsnthrowsNullPointerException
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(20, "k)`{s_j=RWS1:~R", (MethodVisitor) null);
// Undeclared exception!
try { 
  localVariablesSorter.visitVarInsn(22, 20);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.objectweb.asm.jip.commons.LocalVariablesSorter", e);
}


** It was a parseable test case! 
refined test name is: testVisitVarInsnWithNullNameThrowsException
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(23, "F)`{s+j=RWS1N~R", (MethodVisitor) null);
// Undeclared exception!
try { 
  localVariablesSorter.visitVarInsn(23, 23);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.objectweb.asm.jip.commons.LocalVariablesSorter", e);
}


** It was a parseable test case! 
refined test name is: testVisitVarInsnthrowsNullPointerException
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(23, "F)`{s+j=R`S1N~R", (MethodVisitor) null);
// Undeclared exception!
try { 
  localVariablesSorter.visitVarInsn(54, 54);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.objectweb.asm.jip.commons.LocalVariablesSorter", e);
}


** It was a parseable test case! 
refined test name is: testAddNullVariableThrowsException
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(4, "D)k,pITt]b;h", (MethodVisitor) null);
// Undeclared exception!
try { 
  localVariablesSorter.visitVarInsn(55, 8);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.objectweb.asm.jip.commons.LocalVariablesSorter", e);
}


** It was a parseable test case! 
refined test name is: testVisitVarInsnwithInvalidOpcode
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(57, "F)v{4j=RRSN~R", (MethodVisitor) null);
// Undeclared exception!
try { 
  localVariablesSorter.visitVarInsn(57, 57);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.objectweb.asm.jip.commons.LocalVariablesSorter", e);
}


** It was a parseable test case! 
refined test name is: testVisitVarInsnNullIndexParameter
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: MethodVisitor arg0 = mock(MethodVisitor.class, new ViolatedAssumptionAnswer());
MethodAdapter arg2 = new MethodAdapter(arg0);
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(130, "D)k,pITt]b;h", arg2);
localVariablesSorter.visitVarInsn(130, 2);
localVariablesSorter.visitVarInsn(3, 2);

** It was a parseable test case! 
refined test name is: shouldCreateAndVisitLocalVariablesSorter
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: MethodVisitor arg0 = mock(MethodVisitor.class, new ViolatedAssumptionAnswer());
MethodAdapter arg2 = new MethodAdapter(arg0);
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(1124, "D)k,pITt]b;h", arg2);
Object[] arg4 = new Object[7];
localVariablesSorter.visitFrame((-1), 50, arg4, 24, arg4);
assertEquals(7, arg4.length);


** It was a parseable test case! 
refined test name is: testLocalVariablesSorterVisitFrameWithArguments
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: MethodVisitor arg0 = mock(MethodVisitor.class, new ViolatedAssumptionAnswer());
MethodAdapter arg2 = new MethodAdapter(arg0);
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(130, "D)k,pITt]b;h", arg2);
Object[] arg4 = new Object[0];
// Undeclared exception!
try { 
  localVariablesSorter.visitFrame(1713, 8, arg4, 96, arg4);
  fail("Expecting exception: IllegalStateException");

} catch(IllegalStateException e) {
   //
   // ClassReader.accept() should be called with EXPAND_FRAMES flag
   //
   verifyException("org.objectweb.asm.jip.commons.LocalVariablesSorter", e);
}


** It was a parseable test case! 
refined test name is: testIllegalFrameVisitThrowsException
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(2, "F)`{s+j=R`S1N~R", (MethodVisitor) null);
Type arg0 = Type.BOOLEAN_TYPE;
int newLocal = localVariablesSorter.newLocal(arg0);
assertEquals(1, newLocal);


** It was a parseable test case! 
refined test name is: testNewLocalWithBooleanType
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter((-1), "F)4j=RN", (MethodVisitor) null);
Type arg0 = Type.getReturnType("[BFO\"I}]-F+`G}m1");
int newLocal = localVariablesSorter.newLocal(arg0);
assertEquals(0, newLocal);


** It was a parseable test case! 
refined test name is: testNewLocal
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(2, "F)`{s+j=R`S1N~R", (MethodVisitor) null);
Type arg0 = Type.CHAR_TYPE;
int newLocal = localVariablesSorter.newLocal(arg0);
assertEquals(1, newLocal);


** It was a parseable test case! 
refined test name is: testCreateNewLocalVariableWithCharacterType
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Type arg0 = Type.BYTE_TYPE;
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(5, "k)`{s_jvRWS1~R", (MethodVisitor) null);
int newLocal = localVariablesSorter.newLocal(arg0);
assertEquals(1, newLocal);


** It was a parseable test case! 
refined test name is: testNewLocalVariable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(2, "F)`{s+j=R`S1N~R", (MethodVisitor) null);
Type arg0 = Type.SHORT_TYPE;
int newLocal = localVariablesSorter.newLocal(arg0);
assertEquals(1, newLocal);


** It was a parseable test case! 
refined test name is: testCreateNewShortLocalVariable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter((-459), "F)`{s+j=R`S1N~R", (MethodVisitor) null);
Type arg0 = Type.INT_TYPE;
int newLocal = localVariablesSorter.newLocal(arg0);
assertEquals(1, newLocal);


** It was a parseable test case! 
refined test name is: testNewLocalWithIntegerArgument
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter((-459), "F)`{s+j=R`S1N~R", (MethodVisitor) null);
Type arg0 = Type.getType("F)`{s+j=R`S1N~R");
int newLocal = localVariablesSorter.newLocal(arg0);
assertEquals(1, newLocal);


** It was a parseable test case! 
refined test name is: testNewLocalWithType
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(2, "F)`{s+j=R`S1N~R", (MethodVisitor) null);
Type arg0 = Type.LONG_TYPE;
int newLocal = localVariablesSorter.newLocal(arg0);
assertEquals(1, newLocal);


** It was a parseable test case! 
refined test name is: testNewLocalVariableIndexReturned
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Type arg0 = Type.DOUBLE_TYPE;
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(3, "D)k,pITt]b;h", (MethodVisitor) null);
localVariablesSorter.nextLocal = 202;
int newLocal = localVariablesSorter.newLocal(arg0);
assertEquals(202, newLocal);


** It was a parseable test case! 
refined test name is: testNewLocalWithTypeAndNameReturnsCorrectValue
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter((-9), "F)`{s+j=R`S1N~R", (MethodVisitor) null);
localVariablesSorter.nextLocal = (-9);
Type arg0 = Type.FLOAT_TYPE;
int newLocalMapping = localVariablesSorter.newLocalMapping(arg0);
assertEquals((-9), newLocalMapping);


** It was a parseable test case! 
refined test name is: testNewLocalMappingWithFloatType
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter((-9), "F)`{s+j=R`S1N~R", (MethodVisitor) null);
Type arg0 = Type.FLOAT_TYPE;
int newLocalMapping = localVariablesSorter.newLocalMapping(arg0);
assertEquals(1, newLocalMapping);


** It was a parseable test case! 
refined test name is: testNewLocalMappingNegativeSizeLimit
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter((-434), "F)`{s+j=R`S1N~R", (MethodVisitor) null);
Type arg0 = Type.LONG_TYPE;
int newLocalMapping = localVariablesSorter.newLocalMapping(arg0);
assertEquals(0, newLocalMapping);


** It was a parseable test case! 
refined test name is: testNewLocalMappingReturnsZero
* Compiling Tests
refined test name is: testNewLocalMappingWithTypeLong
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: MethodVisitor arg0 = mock(MethodVisitor.class, new ViolatedAssumptionAnswer());
MethodAdapter arg2 = new MethodAdapter(arg0);
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(130, "D)k,pITt]b;h", arg2);
localVariablesSorter.visitIincInsn(8, 0);

** It was a parseable test case! 
refined test name is: testVisitIincInsn
* Compiling Tests
refined test name is: testVisitLocalVariablesAndIincInsn
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter((-9), "F)`{s+j=R`S1N~R", (MethodVisitor) null);
Type arg1 = Type.INT_TYPE;
localVariablesSorter.setLocalType((-1450), arg1);
assertEquals(5, Type.INT);


** It was a parseable test case! 
refined test name is: testSetLocalTypeCorrectlyChangesLocalVariableType
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 06:41:42.019 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar5669939321414185953.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 06:41:42.041 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5669939321414185953.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 06:41:42.090 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar5669939321414185953.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 06:41:42.090 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5669939321414185953.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 06:41:42.147 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar5669939321414185953.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 06:41:42.148 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5669939321414185953.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 06:41:42.204 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar5669939321414185953.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 06:41:42.205 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5669939321414185953.jar
[MASTER] 06:41:42.256 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar5669939321414185953.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 06:41:42.257 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5669939321414185953.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 06:41:42.316 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar5669939321414185953.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 06:41:42.317 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5669939321414185953.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 06:41:42.382 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar5669939321414185953.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 06:41:42.383 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5669939321414185953.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 06:41:42.447 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar5669939321414185953.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 06:41:42.448 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5669939321414185953.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 06:41:42.512 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar5669939321414185953.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 06:41:42.513 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5669939321414185953.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 06:41:42.787 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar5669939321414185953.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 06:41:42.788 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5669939321414185953.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 06:41:42.840 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar5669939321414185953.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 06:41:42.841 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5669939321414185953.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 06:41:42.894 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar5669939321414185953.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 06:41:42.895 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5669939321414185953.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 06:41:42.949 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar5669939321414185953.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 06:41:42.950 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5669939321414185953.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 06:41:43.002 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar5669939321414185953.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 06:41:43.003 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5669939321414185953.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 06:41:43.049 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar5669939321414185953.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 06:41:43.050 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5669939321414185953.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 06:41:43.098 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar5669939321414185953.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 06:41:43.099 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5669939321414185953.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 06:41:43.148 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar5669939321414185953.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 06:41:43.149 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5669939321414185953.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 06:41:43.192 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar5669939321414185953.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 06:41:43.193 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5669939321414185953.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 06:41:43.240 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar5669939321414185953.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 06:41:43.241 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5669939321414185953.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 06:41:43.292 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar5669939321414185953.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 06:41:43.296 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5669939321414185953.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 06:41:43.364 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar5669939321414185953.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 06:41:43.365 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5669939321414185953.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 06:41:43.416 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar5669939321414185953.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 06:41:43.417 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5669939321414185953.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 06:41:43.465 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar5669939321414185953.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 06:41:43.466 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5669939321414185953.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 06:41:43.505 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar5669939321414185953.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 06:41:43.506 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5669939321414185953.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 06:41:43.550 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar5669939321414185953.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 06:41:43.551 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5669939321414185953.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 06:41:43.593 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar5669939321414185953.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 06:41:43.593 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5669939321414185953.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 06:41:43.640 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar5669939321414185953.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 06:41:43.641 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5669939321414185953.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 06:41:43.686 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar5669939321414185953.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 06:41:43.686 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5669939321414185953.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
** Write a test suite: 5 called: 1 to improve: false
** Write a test suite: 25 called: 2 to improve: false
** Write a test suite: 26 called: 3 to improve: false
[MASTER] 06:41:44.290 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar5669939321414185953.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 06:41:44.291 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5669939321414185953.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 1 called: 0 to improve: false
** Write a test suite: 2 called: 1 to improve: false
** Write a test suite: 22 called: 2 to improve: false
** Write a test suite: 27 called: 3 to improve: false
[MASTER] 06:41:44.811 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/tmp/EvoSuite_pathingJar5669939321414185953.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 06:41:44.812 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5669939321414185953.jar
[MASTER] 06:41:45.337 [logback-1] WARN  TimeController - Already entered in phase: INLINING. This will mess up the timing calculations.
[MASTER] 06:41:45.755 [logback-1] WARN  TimeController - Already entered in phase: MINIMIZATION. This will mess up the timing calculations.
* Computation finished
