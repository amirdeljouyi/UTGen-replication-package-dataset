* EvoSuite 1.0.0-SNAPSHOT
* Going to generate test cases for class: org.objectweb.asm.jip.commons.LocalVariablesSorter
* Starting Client-0
* Properties loaded from /home/roham/Results-Utestgen/dataset/SF110-new-res/51_jiprof/evosuite-files/evosuite.properties
* Connecting to master process on port 15816
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
* Finished analyzing classpath
* Generating tests for class org.objectweb.asm.jip.commons.LocalVariablesSorter
* Test criteria:
  - Branch Coverage
  - Line Coverage
  - Method-Output Coverage
  - Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 299
* Using seed 1710240986153
[Progress:>                             0%] [Cov:>                                  0%]* Starting evolution
* Initial Number of Goals in DynaMOSA = 91 / 299
[Progress:>                             0%] [Cov:>                                  0%][Progress:>                             0%] [Cov:>                                  0%][Progress:>                             1%] [Cov:>                                  0%][Progress:>                             1%] [Cov:>                                  0%][Progress:>                             1%] [Cov:>                                  0%][Progress:>                             1%] [Cov:>                                  0%][Progress:>                             1%] [Cov:>                                  0%][Progress:>                             1%] [Cov:>                                  0%][Progress:>                             1%] [Cov:==>                                8%][Progress:>                             1%] [Cov:==>                                8%][Progress:>                             2%] [Cov:=======>                           22%][Progress:>                             2%] [Cov:=================>                 51%][Progress:>                             2%] [Cov:===================>               55%][MASTER] 10:56:33.096 [logback-1] WARN  TestChromosome - Functional mock problem: org.evosuite.ga.ConstructionFailedException: Have no generator for class org.objectweb.asm.jip.commons.LocalVariablesSorter canUseFunctionalMocks=false, canBeMocked: false
[Progress:>                             2%] [Cov:===================>               57%][Progress:>                             2%] [Cov:====================>              58%][Progress:>                             2%] [Cov:====================>              59%][Progress:>                             2%] [Cov:====================>              59%][Progress:>                             3%] [Cov:=====================>             60%][Progress:>                             3%] [Cov:=====================>             61%][Progress:>                             3%] [Cov:======================>            63%][Progress:>                             3%] [Cov:======================>            63%][Progress:>                             3%] [Cov:======================>            63%][Progress:>                             3%] [Cov:======================>            63%][Progress:>                             3%] [Cov:======================>            63%][Progress:>                             3%] [Cov:======================>            63%][Progress:>                             3%] [Cov:======================>            63%][Progress:>                             3%] [Cov:======================>            63%][Progress:>                             3%] [Cov:======================>            63%][Progress:>                             3%] [Cov:======================>            63%][Progress:=>                            4%] [Cov:======================>            63%][Progress:=>                            4%] [Cov:=======================>           67%][Progress:=>                            4%] [Cov:=======================>           67%][Progress:=>                            4%] [Cov:=======================>           67%][Progress:=>                            4%] [Cov:=======================>           67%][Progress:=>                            4%] [Cov:=======================>           67%][Progress:=>                            4%] [Cov:=======================>           67%][Progress:=>                            4%] [Cov:=======================>           68%][Progress:=>                            4%] [Cov:=======================>           68%][Progress:=>                            4%] [Cov:=======================>           68%][Progress:=>                            4%] [Cov:=======================>           68%][Progress:=>                            4%] [Cov:=======================>           68%][Progress:=>                            4%] [Cov:========================>          69%][Progress:=>                            4%] [Cov:========================>          69%][Progress:=>                            4%] [Cov:========================>          69%][Progress:=>                            4%] [Cov:========================>          69%][Progress:=>                            5%] [Cov:========================>          69%][Progress:=>                            5%] [Cov:========================>          69%][Progress:=>                            5%] [Cov:========================>          69%][Progress:=>                            5%] [Cov:========================>          69%][Progress:=>                            5%] [Cov:========================>          69%][Progress:=>                            5%] [Cov:========================>          69%][Progress:=>                            5%] [Cov:========================>          69%][Progress:=>                            5%] [Cov:========================>          69%][Progress:=>                            5%] [Cov:========================>          69%][Progress:=>                            5%] [Cov:========================>          69%][Progress:=>                            5%] [Cov:========================>          69%][Progress:=>                            5%] [Cov:========================>          69%][Progress:=>                            5%] [Cov:========================>          69%][Progress:=>                            5%] [Cov:========================>          69%][Progress:=>                            5%] [Cov:========================>          69%][Progress:=>                            5%] [Cov:=========================>         72%][Progress:=>                            5%] [Cov:=========================>         72%][Progress:=>                            6%] [Cov:=========================>         72%][Progress:=>                            6%] [Cov:=========================>         72%][Progress:=>                            6%] [Cov:=========================>         72%][Progress:=>                            6%] [Cov:=========================>         72%][Progress:=>                            6%] [Cov:=========================>         72%][Progress:=>                            6%] [Cov:=========================>         72%][Progress:=>                            6%] [Cov:=========================>         72%][Progress:=>                            6%] [Cov:=========================>         72%][Progress:=>                            6%] [Cov:=========================>         72%][Progress:=>                            6%] [Cov:=========================>         72%][Progress:=>                            6%] [Cov:=========================>         72%][Progress:=>                            6%] [Cov:=========================>         72%][Progress:=>                            6%] [Cov:=========================>         72%][Progress:=>                            6%] [Cov:=========================>         72%][Progress:==>                           7%] [Cov:=========================>         72%][Progress:==>                           7%] [Cov:=========================>         72%][Progress:==>                           7%] [Cov:=========================>         72%][Progress:==>                           7%] [Cov:=========================>         72%][Progress:==>                           7%] [Cov:=========================>         72%][Progress:==>                           7%] [Cov:=========================>         72%][Progress:==>                           7%] [Cov:=========================>         72%][Progress:==>                           7%] [Cov:=========================>         72%][Progress:==>                           7%] [Cov:=========================>         72%][Progress:==>                           7%] [Cov:=========================>         72%][Progress:==>                           7%] [Cov:=========================>         72%][Progress:==>                           7%] [Cov:=========================>         72%][Progress:==>                           7%] [Cov:=========================>         72%][Progress:==>                           7%] [Cov:=========================>         72%][Progress:==>                           8%] [Cov:=========================>         72%][Progress:==>                           8%] [Cov:=========================>         72%][Progress:==>                           8%] [Cov:=========================>         72%][Progress:==>                           8%] [Cov:=========================>         72%][Progress:==>                           8%] [Cov:=========================>         72%][Progress:==>                           8%] [Cov:=========================>         72%][Progress:==>                           8%] [Cov:=========================>         72%][Progress:==>                           8%] [Cov:=========================>         72%][Progress:==>                           8%] [Cov:=========================>         72%][Progress:==>                           8%] [Cov:=========================>         72%][Progress:==>                           8%] [Cov:=========================>         72%][Progress:==>                           8%] [Cov:=========================>         72%][Progress:==>                           8%] [Cov:=========================>         72%][Progress:==>                           8%] [Cov:=========================>         74%][Progress:==>                           8%] [Cov:=========================>         74%][Progress:==>                           8%] [Cov:=========================>         74%][Progress:==>                           8%] [Cov:=========================>         74%][Progress:==>                           9%] [Cov:=========================>         74%][Progress:==>                           9%] [Cov:=========================>         74%][Progress:==>                           9%] [Cov:=========================>         74%][Progress:==>                           9%] [Cov:===========================>       79%][Progress:==>                           9%] [Cov:===========================>       79%][Progress:==>                           9%] [Cov:===========================>       79%][Progress:==>                           9%] [Cov:===========================>       79%][Progress:==>                           9%] [Cov:===========================>       79%][Progress:==>                           9%] [Cov:===========================>       79%][Progress:==>                           9%] [Cov:===========================>       79%][Progress:==>                           9%] [Cov:============================>      81%][Progress:==>                           9%] [Cov:============================>      81%][Progress:==>                           9%] [Cov:============================>      81%][Progress:===>                          10%] [Cov:============================>      81%][Progress:===>                          10%] [Cov:============================>      81%][Progress:===>                          10%] [Cov:============================>      81%][Progress:===>                          10%] [Cov:============================>      81%][Progress:===>                          10%] [Cov:============================>      81%][Progress:===>                          10%] [Cov:============================>      81%][Progress:===>                          10%] [Cov:============================>      81%][Progress:===>                          10%] [Cov:============================>      82%][Progress:===>                          10%] [Cov:============================>      82%][Progress:===>                          10%] [Cov:============================>      82%][Progress:===>                          10%] [Cov:============================>      82%][Progress:===>                          10%] [Cov:============================>      82%][Progress:===>                          10%] [Cov:============================>      82%][Progress:===>                          10%] [Cov:============================>      82%][Progress:===>                          10%] [Cov:============================>      82%][Progress:===>                          11%] [Cov:============================>      82%][Progress:===>                          11%] [Cov:============================>      82%][Progress:===>                          11%] [Cov:============================>      82%][Progress:===>                          11%] [Cov:============================>      82%][Progress:===>                          11%] [Cov:============================>      82%][Progress:===>                          11%] [Cov:============================>      82%][Progress:===>                          11%] [Cov:============================>      82%][Progress:===>                          11%] [Cov:============================>      82%][Progress:===>                          11%] [Cov:============================>      82%][Progress:===>                          11%] [Cov:============================>      82%][Progress:===>                          11%] [Cov:============================>      82%][Progress:===>                          11%] [Cov:============================>      82%][Progress:===>                          11%] [Cov:============================>      82%][Progress:===>                          11%] [Cov:============================>      82%][Progress:===>                          11%] [Cov:============================>      82%][Progress:===>                          11%] [Cov:============================>      82%][Progress:===>                          11%] [Cov:============================>      82%][Progress:===>                          11%] [Cov:============================>      82%][Progress:===>                          11%] [Cov:============================>      82%][Progress:===>                          12%] [Cov:============================>      82%][Progress:===>                          12%] [Cov:============================>      82%][Progress:===>                          12%] [Cov:============================>      82%][Progress:===>                          12%] [Cov:============================>      82%][Progress:===>                          12%] [Cov:============================>      82%][Progress:===>                          12%] [Cov:============================>      82%][Progress:===>                          12%] [Cov:==============================>    87%][Progress:===>                          12%] [Cov:==============================>    87%][Progress:===>                          12%] [Cov:==============================>    87%][Progress:===>                          12%] [Cov:==============================>    87%][Progress:===>                          12%] [Cov:==============================>    87%][Progress:===>                          12%] [Cov:==============================>    87%][Progress:===>                          12%] [Cov:==============================>    87%][Progress:===>                          12%] [Cov:==============================>    87%][Progress:===>                          13%] [Cov:==============================>    87%][Progress:===>                          13%] [Cov:==============================>    87%][Progress:===>                          13%] [Cov:==============================>    87%][Progress:===>                          13%] [Cov:==============================>    87%][Progress:===>                          13%] [Cov:==============================>    87%][Progress:===>                          13%] [Cov:==============================>    87%][Progress:===>                          13%] [Cov:==============================>    87%][Progress:===>                          13%] [Cov:==============================>    87%][Progress:===>                          13%] [Cov:==============================>    87%][Progress:===>                          13%] [Cov:==============================>    87%][Progress:===>                          13%] [Cov:==============================>    87%][Progress:===>                          13%] [Cov:==============================>    87%][Progress:===>                          13%] [Cov:==============================>    87%][Progress:===>                          13%] [Cov:==============================>    87%][Progress:===>                          13%] [Cov:==============================>    87%][Progress:===>                          13%] [Cov:==============================>    87%][Progress:===>                          13%] [Cov:==============================>    87%][Progress:====>                         14%] [Cov:==============================>    87%][Progress:====>                         14%] [Cov:==============================>    87%][Progress:====>                         14%] [Cov:==============================>    87%][Progress:====>                         14%] [Cov:==============================>    87%][Progress:====>                         14%] [Cov:==============================>    87%][Progress:====>                         14%] [Cov:==============================>    87%][Progress:====>                         14%] [Cov:==============================>    87%][Progress:====>                         14%] [Cov:==============================>    87%][Progress:====>                         14%] [Cov:==============================>    87%][Progress:====>                         14%] [Cov:==============================>    87%][Progress:====>                         14%] [Cov:==============================>    87%][Progress:====>                         14%] [Cov:==============================>    87%][Progress:====>                         14%] [Cov:==============================>    87%][Progress:====>                         14%] [Cov:==============================>    87%][Progress:====>                         14%] [Cov:==============================>    87%][Progress:====>                         15%] [Cov:==============================>    87%][Progress:====>                         15%] [Cov:==============================>    87%][Progress:====>                         15%] [Cov:==============================>    87%][Progress:====>                         15%] [Cov:==============================>    87%][Progress:====>                         15%] [Cov:==============================>    88%][Progress:====>                         15%] [Cov:==============================>    88%][Progress:====>                         15%] [Cov:==============================>    88%][Progress:====>                         15%] [Cov:==============================>    88%][Progress:====>                         15%] [Cov:==============================>    88%][Progress:====>                         15%] [Cov:==============================>    88%][Progress:====>                         15%] [Cov:==============================>    88%][Progress:====>                         15%] [Cov:==============================>    88%][Progress:====>                         15%] [Cov:==============================>    88%][Progress:====>                         15%] [Cov:==============================>    88%][Progress:====>                         15%] [Cov:==============================>    88%][Progress:====>                         15%] [Cov:==============================>    88%][Progress:====>                         15%] [Cov:==============================>    88%][Progress:====>                         15%] [Cov:==============================>    88%][Progress:====>                         15%] [Cov:==============================>    88%][Progress:====>                         15%] [Cov:==============================>    88%][Progress:====>                         16%] [Cov:==============================>    88%][Progress:====>                         16%] [Cov:==============================>    88%][Progress:====>                         16%] [Cov:==============================>    88%][Progress:====>                         16%] [Cov:==============================>    88%][Progress:====>                         16%] [Cov:==============================>    88%][Progress:====>                         16%] [Cov:==============================>    88%][Progress:====>                         16%] [Cov:==============================>    88%][Progress:====>                         16%] [Cov:==============================>    88%][Progress:====>                         16%] [Cov:==============================>    88%][Progress:====>                         16%] [Cov:==============================>    88%][Progress:====>                         16%] [Cov:==============================>    88%][Progress:====>                         16%] [Cov:==============================>    88%][Progress:====>                         16%] [Cov:==============================>    88%][Progress:====>                         16%] [Cov:==============================>    88%][Progress:====>                         16%] [Cov:==============================>    88%][Progress:====>                         16%] [Cov:==============================>    88%][Progress:====>                         16%] [Cov:==============================>    88%][Progress:====>                         16%] [Cov:==============================>    88%][Progress:====>                         16%] [Cov:==============================>    88%][Progress:=====>                        17%] [Cov:==============================>    88%][Progress:=====>                        17%] [Cov:==============================>    88%][Progress:=====>                        17%] [Cov:==============================>    88%][Progress:=====>                        17%] [Cov:==============================>    88%][Progress:=====>                        17%] [Cov:==============================>    88%][Progress:=====>                        17%] [Cov:==============================>    88%][Progress:=====>                        17%] [Cov:==============================>    88%][Progress:=====>                        17%] [Cov:==============================>    88%][Progress:=====>                        17%] [Cov:==============================>    88%][Progress:=====>                        17%] [Cov:==============================>    88%][Progress:=====>                        17%] [Cov:==============================>    88%][Progress:=====>                        17%] [Cov:==============================>    88%][Progress:=====>                        17%] [Cov:==============================>    88%][Progress:=====>                        17%] [Cov:==============================>    88%][Progress:=====>                        17%] [Cov:==============================>    88%][Progress:=====>                        17%] [Cov:==============================>    88%][Progress:=====>                        18%] [Cov:==============================>    88%][Progress:=====>                        18%] [Cov:==============================>    88%][Progress:=====>                        18%] [Cov:==============================>    88%][Progress:=====>                        18%] [Cov:==============================>    88%][Progress:=====>                        18%] [Cov:==============================>    88%][Progress:=====>                        18%] [Cov:==============================>    88%][Progress:=====>                        18%] [Cov:==============================>    88%][Progress:=====>                        18%] [Cov:==============================>    88%][Progress:=====>                        18%] [Cov:==============================>    88%][Progress:=====>                        18%] [Cov:==============================>    88%][Progress:=====>                        18%] [Cov:==============================>    88%][Progress:=====>                        18%] [Cov:==============================>    88%][Progress:=====>                        18%] [Cov:==============================>    88%][Progress:=====>                        18%] [Cov:==============================>    88%][Progress:=====>                        18%] [Cov:==============================>    88%][Progress:=====>                        18%] [Cov:==============================>    88%][Progress:=====>                        18%] [Cov:==============================>    88%][Progress:=====>                        18%] [Cov:==============================>    88%][Progress:=====>                        18%] [Cov:==============================>    88%][Progress:=====>                        18%] [Cov:==============================>    88%][Progress:=====>                        18%] [Cov:==============================>    88%][Progress:=====>                        19%] [Cov:==============================>    88%][Progress:=====>                        19%] [Cov:==============================>    88%][Progress:=====>                        19%] [Cov:==============================>    88%][Progress:=====>                        19%] [Cov:==============================>    88%][Progress:=====>                        19%] [Cov:==============================>    88%][Progress:=====>                        19%] [Cov:==============================>    88%][Progress:=====>                        19%] [Cov:==============================>    88%][Progress:=====>                        19%] [Cov:==============================>    88%][Progress:=====>                        19%] [Cov:==============================>    88%][Progress:=====>                        19%] [Cov:==============================>    88%][Progress:=====>                        19%] [Cov:==============================>    88%][Progress:=====>                        19%] [Cov:==============================>    88%][Progress:=====>                        19%] [Cov:==============================>    88%][Progress:=====>                        19%] [Cov:==============================>    88%][Progress:=====>                        19%] [Cov:==============================>    88%][Progress:=====>                        19%] [Cov:==============================>    88%][Progress:=====>                        19%] [Cov:==============================>    88%][Progress:=====>                        19%] [Cov:==============================>    88%][Progress:=====>                        19%] [Cov:==============================>    88%][Progress:=====>                        19%] [Cov:==============================>    88%][Progress:=====>                        19%] [Cov:==============================>    88%][Progress:=====>                        19%] [Cov:==============================>    88%][Progress:=====>                        19%] [Cov:==============================>    88%][Progress:=====>                        19%] [Cov:==============================>    88%][Progress:=====>                        19%] [Cov:==============================>    88%][Progress:=====>                        19%] [Cov:==============================>    88%][Progress:=====>                        19%] [Cov:==============================>    88%][Progress:======>                       20%] [Cov:==============================>    88%][Progress:======>                       20%] [Cov:==============================>    88%][Progress:======>                       20%] [Cov:==============================>    88%][Progress:======>                       20%] [Cov:==============================>    88%][Progress:======>                       20%] [Cov:==============================>    88%][Progress:======>                       20%] [Cov:==============================>    88%][Progress:======>                       20%] [Cov:==============================>    88%][Progress:======>                       20%] [Cov:==============================>    88%][Progress:======>                       20%] [Cov:==============================>    88%][Progress:======>                       20%] [Cov:==============================>    88%][Progress:======>                       20%] [Cov:==============================>    88%][Progress:======>                       20%] [Cov:==============================>    88%][Progress:======>                       20%] [Cov:==============================>    88%][Progress:======>                       20%] [Cov:==============================>    88%][Progress:======>                       20%] [Cov:==============================>    88%][Progress:======>                       20%] [Cov:==============================>    88%][Progress:======>                       20%] [Cov:==============================>    88%][Progress:======>                       20%] [Cov:==============================>    88%][Progress:======>                       21%] [Cov:==============================>    88%][Progress:======>                       21%] [Cov:==============================>    88%][Progress:======>                       21%] [Cov:==============================>    88%][Progress:======>                       21%] [Cov:==============================>    88%][Progress:======>                       21%] [Cov:==============================>    88%][Progress:======>                       21%] [Cov:==============================>    88%][Progress:======>                       21%] [Cov:==============================>    88%][Progress:======>                       21%] [Cov:==============================>    88%][Progress:======>                       21%] [Cov:==============================>    88%][Progress:======>                       21%] [Cov:==============================>    88%][Progress:======>                       21%] [Cov:==============================>    88%][Progress:======>                       21%] [Cov:==============================>    88%][Progress:======>                       21%] [Cov:==============================>    88%][Progress:======>                       21%] [Cov:==============================>    88%][Progress:======>                       21%] [Cov:==============================>    88%][Progress:======>                       21%] [Cov:==============================>    88%][Progress:======>                       21%] [Cov:==============================>    88%][Progress:======>                       22%] [Cov:==============================>    88%][Progress:======>                       22%] [Cov:==============================>    88%][Progress:======>                       22%] [Cov:==============================>    88%][Progress:======>                       22%] [Cov:==============================>    88%][Progress:======>                       22%] [Cov:==============================>    88%][Progress:======>                       22%] [Cov:==============================>    88%][Progress:======>                       22%] [Cov:==============================>    88%][Progress:======>                       22%] [Cov:==============================>    88%][Progress:======>                       22%] [Cov:==============================>    88%][Progress:======>                       22%] [Cov:==============================>    88%][Progress:======>                       22%] [Cov:==============================>    88%][Progress:======>                       22%] [Cov:==============================>    88%][Progress:======>                       22%] [Cov:==============================>    88%][Progress:======>                       22%] [Cov:==============================>    88%][Progress:======>                       22%] [Cov:==============================>    88%][Progress:======>                       22%] [Cov:==============================>    88%][Progress:======>                       22%] [Cov:==============================>    88%][Progress:======>                       23%] [Cov:==============================>    88%][Progress:======>                       23%] [Cov:==============================>    88%][Progress:======>                       23%] [Cov:==============================>    88%][Progress:======>                       23%] [Cov:==============================>    88%][Progress:======>                       23%] [Cov:==============================>    88%][Progress:======>                       23%] [Cov:==============================>    88%][Progress:======>                       23%] [Cov:==============================>    88%][Progress:======>                       23%] [Cov:==============================>    88%][Progress:======>                       23%] [Cov:==============================>    88%][Progress:======>                       23%] [Cov:==============================>    88%][Progress:======>                       23%] [Cov:==============================>    88%][Progress:======>                       23%] [Cov:==============================>    88%][Progress:======>                       23%] [Cov:==============================>    88%][Progress:======>                       23%] [Cov:==============================>    88%][Progress:======>                       23%] [Cov:==============================>    88%][Progress:======>                       23%] [Cov:==============================>    88%][Progress:======>                       23%] [Cov:==============================>    88%][Progress:=======>                      24%] [Cov:==============================>    88%][Progress:=======>                      24%] [Cov:==============================>    88%][Progress:=======>                      24%] [Cov:==============================>    88%][Progress:=======>                      24%] [Cov:==============================>    88%][Progress:=======>                      24%] [Cov:==============================>    88%][Progress:=======>                      24%] [Cov:==============================>    88%][Progress:=======>                      24%] [Cov:==============================>    88%][Progress:=======>                      24%] [Cov:==============================>    88%][Progress:=======>                      24%] [Cov:==============================>    88%][Progress:=======>                      24%] [Cov:==============================>    88%][Progress:=======>                      24%] [Cov:==============================>    88%][Progress:=======>                      24%] [Cov:==============================>    88%][Progress:=======>                      24%] [Cov:==============================>    88%][Progress:=======>                      24%] [Cov:==============================>    88%][Progress:=======>                      24%] [Cov:==============================>    88%][Progress:=======>                      24%] [Cov:==============================>    88%][Progress:=======>                      25%] [Cov:==============================>    88%][Progress:=======>                      25%] [Cov:==============================>    88%][Progress:=======>                      25%] [Cov:==============================>    88%][Progress:=======>                      25%] [Cov:==============================>    88%][Progress:=======>                      25%] [Cov:==============================>    88%][Progress:=======>                      25%] [Cov:==============================>    88%][Progress:=======>                      25%] [Cov:==============================>    88%][Progress:=======>                      25%] [Cov:==============================>    88%][Progress:=======>                      25%] [Cov:==============================>    88%][Progress:=======>                      25%] [Cov:==============================>    88%][Progress:=======>                      25%] [Cov:==============================>    88%][Progress:=======>                      25%] [Cov:==============================>    88%][Progress:=======>                      25%] [Cov:==============================>    88%][Progress:=======>                      25%] [Cov:==============================>    88%][Progress:=======>                      25%] [Cov:==============================>    88%][Progress:=======>                      25%] [Cov:==============================>    88%][Progress:=======>                      25%] [Cov:==============================>    88%][Progress:=======>                      25%] [Cov:==============================>    88%][Progress:=======>                      25%] [Cov:==============================>    88%][Progress:=======>                      25%] [Cov:==============================>    88%][Progress:=======>                      25%] [Cov:==============================>    88%][Progress:=======>                      25%] [Cov:==============================>    88%][Progress:=======>                      25%] [Cov:==============================>    88%][Progress:=======>                      26%] [Cov:==============================>    88%][Progress:=======>                      26%] [Cov:==============================>    88%][Progress:=======>                      26%] [Cov:==============================>    88%][Progress:=======>                      26%] [Cov:==============================>    88%][Progress:=======>                      26%] [Cov:==============================>    88%][Progress:=======>                      26%] [Cov:==============================>    88%][Progress:=======>                      26%] [Cov:==============================>    88%][Progress:=======>                      26%] [Cov:==============================>    88%][Progress:=======>                      26%] [Cov:==============================>    88%][Progress:=======>                      26%] [Cov:==============================>    88%][Progress:=======>                      26%] [Cov:==============================>    88%][Progress:=======>                      26%] [Cov:==============================>    88%][Progress:=======>                      26%] [Cov:==============================>    88%][Progress:=======>                      26%] [Cov:==============================>    88%][Progress:=======>                      26%] [Cov:==============================>    88%][Progress:=======>                      26%] [Cov:==============================>    88%][Progress:=======>                      26%] [Cov:==============================>    88%][Progress:=======>                      26%] [Cov:==============================>    88%][Progress:=======>                      26%] [Cov:==============================>    88%][Progress:========>                     27%] [Cov:==============================>    88%][Progress:========>                     27%] [Cov:==============================>    88%][Progress:========>                     27%] [Cov:==============================>    88%][Progress:========>                     27%] [Cov:==============================>    88%][Progress:========>                     27%] [Cov:==============================>    88%][Progress:========>                     27%] [Cov:==============================>    88%][Progress:========>                     27%] [Cov:==============================>    88%][Progress:========>                     27%] [Cov:==============================>    88%][Progress:========>                     27%] [Cov:==============================>    88%][Progress:========>                     27%] [Cov:==============================>    88%][Progress:========>                     27%] [Cov:==============================>    88%][Progress:========>                     27%] [Cov:==============================>    88%][Progress:========>                     27%] [Cov:==============================>    88%][Progress:========>                     27%] [Cov:==============================>    88%][Progress:========>                     27%] [Cov:==============================>    88%][Progress:========>                     27%] [Cov:==============================>    88%][Progress:========>                     28%] [Cov:==============================>    88%][Progress:========>                     28%] [Cov:==============================>    88%][Progress:========>                     28%] [Cov:==============================>    88%][Progress:========>                     28%] [Cov:==============================>    88%][Progress:========>                     28%] [Cov:==============================>    88%][Progress:========>                     28%] [Cov:==============================>    88%][Progress:========>                     28%] [Cov:==============================>    88%][Progress:========>                     28%] [Cov:==============================>    88%][Progress:========>                     28%] [Cov:==============================>    88%][Progress:========>                     28%] [Cov:==============================>    88%][Progress:========>                     28%] [Cov:==============================>    88%][Progress:========>                     28%] [Cov:==============================>    88%][Progress:========>                     28%] [Cov:==============================>    88%][Progress:========>                     28%] [Cov:==============================>    88%][Progress:========>                     28%] [Cov:==============================>    88%][Progress:========>                     28%] [Cov:==============================>    88%][Progress:========>                     28%] [Cov:==============================>    88%][Progress:========>                     28%] [Cov:==============================>    88%][Progress:========>                     28%] [Cov:==============================>    88%][Progress:========>                     28%] [Cov:==============================>    88%][Progress:========>                     28%] [Cov:==============================>    88%][Progress:========>                     28%] [Cov:==============================>    88%][Progress:========>                     28%] [Cov:==============================>    88%][Progress:========>                     28%] [Cov:==============================>    88%][Progress:========>                     29%] [Cov:==============================>    88%][Progress:========>                     29%] [Cov:==============================>    88%][Progress:========>                     29%] [Cov:==============================>    88%][Progress:========>                     29%] [Cov:==============================>    88%][Progress:========>                     29%] [Cov:==============================>    88%][Progress:========>                     29%] [Cov:==============================>    88%][Progress:========>                     29%] [Cov:==============================>    88%][Progress:========>                     29%] [Cov:==============================>    88%][Progress:========>                     29%] [Cov:==============================>    88%][Progress:========>                     29%] [Cov:==============================>    88%][Progress:========>                     29%] [Cov:==============================>    88%][Progress:========>                     29%] [Cov:==============================>    88%][Progress:========>                     29%] [Cov:==============================>    88%][Progress:========>                     29%] [Cov:==============================>    88%][Progress:========>                     29%] [Cov:==============================>    88%][Progress:========>                     29%] [Cov:==============================>    88%][Progress:========>                     29%] [Cov:==============================>    88%][Progress:========>                     29%] [Cov:==============================>    88%][Progress:========>                     29%] [Cov:==============================>    88%][Progress:========>                     29%] [Cov:==============================>    88%][Progress:========>                     29%] [Cov:==============================>    88%][Progress:========>                     29%] [Cov:==============================>    88%][Progress:========>                     29%] [Cov:==============================>    88%][Progress:========>                     29%] [Cov:==============================>    88%][Progress:=========>                    30%] [Cov:==============================>    88%][Progress:=========>                    30%] [Cov:==============================>    88%][Progress:=========>                    30%] [Cov:==============================>    88%][Progress:=========>                    30%] [Cov:==============================>    88%][Progress:=========>                    30%] [Cov:==============================>    88%][Progress:=========>                    30%] [Cov:==============================>    88%][Progress:=========>                    30%] [Cov:==============================>    88%][Progress:=========>                    30%] [Cov:==============================>    88%][Progress:=========>                    30%] [Cov:==============================>    88%][Progress:=========>                    30%] [Cov:==============================>    88%][Progress:=========>                    30%] [Cov:==============================>    88%][Progress:=========>                    30%] [Cov:==============================>    88%][Progress:=========>                    30%] [Cov:==============================>    88%][Progress:=========>                    30%] [Cov:==============================>    88%][Progress:=========>                    30%] [Cov:==============================>    88%][Progress:=========>                    30%] [Cov:==============================>    88%][Progress:=========>                    30%] [Cov:==============================>    88%][Progress:=========>                    31%] [Cov:==============================>    88%][Progress:=========>                    31%] [Cov:==============================>    88%][Progress:=========>                    31%] [Cov:==============================>    88%][Progress:=========>                    31%] [Cov:==============================>    88%][Progress:=========>                    31%] [Cov:==============================>    88%][Progress:=========>                    31%] [Cov:==============================>    88%][Progress:=========>                    31%] [Cov:==============================>    88%][Progress:=========>                    31%] [Cov:==============================>    88%][Progress:=========>                    31%] [Cov:==============================>    88%][Progress:=========>                    31%] [Cov:==============================>    88%][Progress:=========>                    31%] [Cov:==============================>    88%][Progress:=========>                    31%] [Cov:==============================>    88%][Progress:=========>                    31%] [Cov:==============================>    88%][Progress:=========>                    31%] [Cov:==============================>    88%][Progress:=========>                    31%] [Cov:==============================>    88%][Progress:=========>                    31%] [Cov:==============================>    88%][Progress:=========>                    31%] [Cov:==============================>    88%][Progress:=========>                    31%] [Cov:==============================>    88%][Progress:=========>                    31%] [Cov:==============================>    88%][Progress:=========>                    31%] [Cov:==============================>    88%][Progress:=========>                    32%] [Cov:==============================>    88%][Progress:=========>                    32%] [Cov:==============================>    88%][Progress:=========>                    32%] [Cov:==============================>    88%][Progress:=========>                    32%] [Cov:==============================>    88%][Progress:=========>                    32%] [Cov:==============================>    88%][Progress:=========>                    32%] [Cov:==============================>    88%][Progress:=========>                    32%] [Cov:==============================>    88%][Progress:=========>                    32%] [Cov:==============================>    88%][Progress:=========>                    32%] [Cov:==============================>    88%][Progress:=========>                    32%] [Cov:==============================>    88%][Progress:=========>                    32%] [Cov:==============================>    88%][Progress:=========>                    32%] [Cov:==============================>    88%][Progress:=========>                    32%] [Cov:==============================>    88%][Progress:=========>                    32%] [Cov:==============================>    88%][Progress:=========>                    32%] [Cov:==============================>    88%][Progress:=========>                    32%] [Cov:==============================>    88%][Progress:=========>                    32%] [Cov:==============================>    88%][Progress:=========>                    32%] [Cov:==============================>    88%][Progress:=========>                    32%] [Cov:==============================>    88%][Progress:=========>                    33%] [Cov:==============================>    88%][Progress:=========>                    33%] [Cov:==============================>    88%][Progress:=========>                    33%] [Cov:==============================>    88%][Progress:=========>                    33%] [Cov:==============================>    88%][Progress:=========>                    33%] [Cov:==============================>    88%][Progress:=========>                    33%] [Cov:==============================>    88%][Progress:=========>                    33%] [Cov:==============================>    88%][Progress:=========>                    33%] [Cov:==============================>    88%][Progress:=========>                    33%] [Cov:==============================>    88%][Progress:=========>                    33%] [Cov:==============================>    88%][Progress:=========>                    33%] [Cov:==============================>    88%][Progress:=========>                    33%] [Cov:==============================>    88%][Progress:=========>                    33%] [Cov:==============================>    88%][Progress:=========>                    33%] [Cov:==============================>    88%][Progress:=========>                    33%] [Cov:==============================>    88%][Progress:=========>                    33%] [Cov:==============================>    88%][Progress:=========>                    33%] [Cov:==============================>    88%][Progress:=========>                    33%] [Cov:==============================>    88%][Progress:=========>                    33%] [Cov:==============================>    88%][Progress:=========>                    33%] [Cov:==============================>    88%][Progress:=========>                    33%] [Cov:==============================>    88%][Progress:=========>                    33%] [Cov:==============================>    88%][Progress:=========>                    33%] [Cov:==============================>    88%][Progress:=========>                    33%] [Cov:==============================>    88%][Progress:==========>                   34%] [Cov:==============================>    88%][Progress:==========>                   34%] [Cov:==============================>    88%][Progress:==========>                   34%] [Cov:==============================>    88%][Progress:==========>                   34%] [Cov:==============================>    88%][Progress:==========>                   34%] [Cov:==============================>    88%][Progress:==========>                   34%] [Cov:==============================>    88%][Progress:==========>                   34%] [Cov:==============================>    88%][Progress:==========>                   34%] [Cov:==============================>    88%][Progress:==========>                   34%] [Cov:==============================>    88%][Progress:==========>                   34%] [Cov:==============================>    88%][Progress:==========>                   34%] [Cov:==============================>    88%][Progress:==========>                   34%] [Cov:==============================>    88%][Progress:==========>                   34%] [Cov:==============================>    88%][Progress:==========>                   34%] [Cov:==============================>    88%][Progress:==========>                   34%] [Cov:==============================>    88%][Progress:==========>                   35%] [Cov:==============================>    88%][Progress:==========>                   35%] [Cov:==============================>    88%][Progress:==========>                   35%] [Cov:==============================>    88%][Progress:==========>                   35%] [Cov:==============================>    88%][Progress:==========>                   35%] [Cov:==============================>    88%][Progress:==========>                   35%] [Cov:==============================>    88%][Progress:==========>                   35%] [Cov:==============================>    88%][Progress:==========>                   35%] [Cov:==============================>    88%][Progress:==========>                   35%] [Cov:==============================>    88%][Progress:==========>                   35%] [Cov:==============================>    88%][Progress:==========>                   35%] [Cov:==============================>    88%][Progress:==========>                   35%] [Cov:==============================>    88%][Progress:==========>                   35%] [Cov:==============================>    88%][Progress:==========>                   35%] [Cov:==============================>    88%][Progress:==========>                   36%] [Cov:==============================>    88%][Progress:==========>                   36%] [Cov:==============================>    88%][Progress:==========>                   36%] [Cov:==============================>    88%][Progress:==========>                   36%] [Cov:==============================>    88%][Progress:==========>                   36%] [Cov:==============================>    88%][Progress:==========>                   36%] [Cov:==============================>    88%][Progress:==========>                   36%] [Cov:==============================>    88%][Progress:==========>                   36%] [Cov:==============================>    88%][Progress:==========>                   36%] [Cov:==============================>    88%][Progress:==========>                   36%] [Cov:==============================>    88%][Progress:==========>                   36%] [Cov:==============================>    88%][Progress:==========>                   36%] [Cov:==============================>    88%][Progress:==========>                   36%] [Cov:==============================>    88%][Progress:==========>                   36%] [Cov:==============================>    88%][Progress:==========>                   36%] [Cov:==============================>    88%][Progress:===========>                  37%] [Cov:==============================>    88%][Progress:===========>                  37%] [Cov:==============================>    88%][Progress:===========>                  37%] [Cov:==============================>    88%][Progress:===========>                  37%] [Cov:==============================>    88%][Progress:===========>                  37%] [Cov:==============================>    88%][Progress:===========>                  37%] [Cov:==============================>    88%][Progress:===========>                  37%] [Cov:==============================>    88%][Progress:===========>                  37%] [Cov:==============================>    88%][Progress:===========>                  37%] [Cov:==============================>    88%][Progress:===========>                  37%] [Cov:==============================>    88%][Progress:===========>                  37%] [Cov:==============================>    88%][Progress:===========>                  37%] [Cov:==============================>    88%][Progress:===========>                  37%] [Cov:==============================>    88%][Progress:===========>                  37%] [Cov:==============================>    88%][Progress:===========>                  37%] [Cov:==============================>    88%][Progress:===========>                  37%] [Cov:==============================>    88%][Progress:===========>                  37%] [Cov:==============================>    88%][Progress:===========>                  37%] [Cov:==============================>    88%][Progress:===========>                  37%] [Cov:==============================>    88%][Progress:===========>                  38%] [Cov:==============================>    88%][Progress:===========>                  38%] [Cov:==============================>    88%][Progress:===========>                  38%] [Cov:==============================>    88%][Progress:===========>                  38%] [Cov:==============================>    88%][Progress:===========>                  38%] [Cov:==============================>    88%][Progress:===========>                  38%] [Cov:==============================>    88%][Progress:===========>                  38%] [Cov:==============================>    88%][Progress:===========>                  38%] [Cov:==============================>    88%][Progress:===========>                  38%] [Cov:==============================>    88%][Progress:===========>                  38%] [Cov:==============================>    88%][Progress:===========>                  38%] [Cov:==============================>    88%][Progress:===========>                  38%] [Cov:==============================>    88%][Progress:===========>                  38%] [Cov:==============================>    88%][Progress:===========>                  38%] [Cov:==============================>    88%][Progress:===========>                  38%] [Cov:==============================>    88%][Progress:===========>                  38%] [Cov:==============================>    88%][Progress:===========>                  38%] [Cov:==============================>    88%][Progress:===========>                  38%] [Cov:==============================>    88%][Progress:===========>                  38%] [Cov:==============================>    88%][Progress:===========>                  38%] [Cov:==============================>    88%][Progress:===========>                  38%] [Cov:==============================>    88%][Progress:===========>                  39%] [Cov:==============================>    88%][Progress:===========>                  39%] [Cov:==============================>    88%][Progress:===========>                  39%] [Cov:==============================>    88%][Progress:===========>                  39%] [Cov:==============================>    88%][Progress:===========>                  39%] [Cov:==============================>    88%][Progress:===========>                  39%] [Cov:==============================>    88%][Progress:===========>                  39%] [Cov:==============================>    88%][Progress:===========>                  39%] [Cov:==============================>    88%][Progress:===========>                  39%] [Cov:==============================>    88%][Progress:===========>                  39%] [Cov:==============================>    88%][Progress:===========>                  39%] [Cov:==============================>    88%][Progress:===========>                  39%] [Cov:==============================>    88%][Progress:============>                 40%] [Cov:==============================>    88%][Progress:============>                 40%] [Cov:==============================>    88%][Progress:============>                 40%] [Cov:==============================>    88%][Progress:============>                 40%] [Cov:==============================>    88%][Progress:============>                 40%] [Cov:==============================>    88%][Progress:============>                 40%] [Cov:==============================>    88%][Progress:============>                 40%] [Cov:==============================>    88%][Progress:============>                 40%] [Cov:==============================>    88%][Progress:============>                 40%] [Cov:==============================>    88%][Progress:============>                 40%] [Cov:==============================>    88%][Progress:============>                 40%] [Cov:==============================>    88%][Progress:============>                 40%] [Cov:==============================>    88%][Progress:============>                 40%] [Cov:==============================>    88%][Progress:============>                 40%] [Cov:==============================>    88%][Progress:============>                 40%] [Cov:==============================>    88%][Progress:============>                 40%] [Cov:==============================>    88%][Progress:============>                 41%] [Cov:==============================>    88%][Progress:============>                 41%] [Cov:==============================>    88%][Progress:============>                 41%] [Cov:==============================>    88%][Progress:============>                 41%] [Cov:==============================>    88%][Progress:============>                 41%] [Cov:==============================>    88%][Progress:============>                 41%] [Cov:==============================>    88%][Progress:============>                 41%] [Cov:==============================>    88%][Progress:============>                 41%] [Cov:==============================>    88%][Progress:============>                 41%] [Cov:==============================>    88%][Progress:============>                 41%] [Cov:==============================>    88%][Progress:============>                 41%] [Cov:==============================>    88%][Progress:============>                 41%] [Cov:==============================>    88%][Progress:============>                 41%] [Cov:==============================>    88%][Progress:============>                 41%] [Cov:==============================>    88%][Progress:============>                 41%] [Cov:==============================>    88%][Progress:============>                 42%] [Cov:==============================>    88%][Progress:============>                 42%] [Cov:==============================>    88%][Progress:============>                 42%] [Cov:==============================>    88%][Progress:============>                 42%] [Cov:==============================>    88%][Progress:============>                 42%] [Cov:==============================>    88%][Progress:============>                 42%] [Cov:==============================>    88%][Progress:============>                 42%] [Cov:==============================>    88%][Progress:============>                 42%] [Cov:==============================>    88%][Progress:============>                 42%] [Cov:==============================>    88%][Progress:============>                 42%] [Cov:==============================>    88%][Progress:============>                 42%] [Cov:==============================>    88%][Progress:============>                 42%] [Cov:==============================>    88%][Progress:============>                 42%] [Cov:==============================>    88%][Progress:============>                 42%] [Cov:==============================>    88%][Progress:============>                 42%] [Cov:==============================>    88%][Progress:============>                 43%] [Cov:==============================>    88%][Progress:============>                 43%] [Cov:==============================>    88%][Progress:============>                 43%] [Cov:==============================>    88%][Progress:============>                 43%] [Cov:==============================>    88%][Progress:============>                 43%] [Cov:==============================>    88%][Progress:============>                 43%] [Cov:==============================>    88%][Progress:============>                 43%] [Cov:==============================>    88%][Progress:============>                 43%] [Cov:==============================>    88%][Progress:============>                 43%] [Cov:==============================>    88%][Progress:============>                 43%] [Cov:==============================>    88%][Progress:============>                 43%] [Cov:==============================>    88%][Progress:============>                 43%] [Cov:==============================>    88%][Progress:============>                 43%] [Cov:==============================>    88%][Progress:=============>                44%] [Cov:==============================>    88%][Progress:=============>                44%] [Cov:==============================>    88%][Progress:=============>                44%] [Cov:==============================>    88%][Progress:=============>                44%] [Cov:==============================>    88%][Progress:=============>                44%] [Cov:==============================>    88%][Progress:=============>                44%] [Cov:==============================>    88%][Progress:=============>                44%] [Cov:==============================>    88%][Progress:=============>                44%] [Cov:==============================>    88%][Progress:=============>                44%] [Cov:==============================>    88%][Progress:=============>                44%] [Cov:==============================>    88%][Progress:=============>                44%] [Cov:==============================>    88%][Progress:=============>                44%] [Cov:==============================>    88%][Progress:=============>                44%] [Cov:==============================>    88%][Progress:=============>                44%] [Cov:==============================>    88%][Progress:=============>                44%] [Cov:==============================>    88%][Progress:=============>                44%] [Cov:==============================>    88%][Progress:=============>                44%] [Cov:==============================>    88%][Progress:=============>                44%] [Cov:==============================>    88%][Progress:=============>                44%] [Cov:==============================>    88%][Progress:=============>                45%] [Cov:==============================>    88%][Progress:=============>                45%] [Cov:==============================>    88%][Progress:=============>                45%] [Cov:==============================>    88%][Progress:=============>                45%] [Cov:==============================>    88%][Progress:=============>                45%] [Cov:==============================>    88%][Progress:=============>                45%] [Cov:==============================>    88%][Progress:=============>                45%] [Cov:==============================>    88%][Progress:=============>                45%] [Cov:================================>  92%][Progress:=============>                45%] [Cov:================================>  92%][Progress:=============>                45%] [Cov:================================>  92%][Progress:=============>                45%] [Cov:================================>  92%][Progress:=============>                45%] [Cov:================================>  92%][Progress:=============>                45%] [Cov:================================>  92%][Progress:=============>                45%] [Cov:================================>  92%][Progress:=============>                45%] [Cov:================================>  92%][Progress:=============>                46%] [Cov:================================>  92%][Progress:=============>                46%] [Cov:================================>  92%][Progress:=============>                46%] [Cov:================================>  92%][Progress:=============>                46%] [Cov:================================>  92%][Progress:=============>                46%] [Cov:================================>  92%][Progress:=============>                46%] [Cov:================================>  92%][Progress:=============>                46%] [Cov:================================>  92%][Progress:=============>                46%] [Cov:================================>  92%][Progress:=============>                46%] [Cov:================================>  92%][Progress:=============>                46%] [Cov:================================>  92%][Progress:=============>                46%] [Cov:================================>  92%][Progress:=============>                46%] [Cov:================================>  92%][Progress:=============>                46%] [Cov:================================>  92%][Progress:=============>                46%] [Cov:================================>  92%][Progress:=============>                46%] [Cov:================================>  92%][Progress:==============>               47%] [Cov:================================>  92%][Progress:==============>               47%] [Cov:================================>  92%][Progress:==============>               47%] [Cov:================================>  92%][Progress:==============>               47%] [Cov:================================>  92%][Progress:==============>               47%] [Cov:================================>  92%][Progress:==============>               47%] [Cov:================================>  92%][Progress:==============>               47%] [Cov:================================>  92%][Progress:==============>               47%] [Cov:================================>  92%][Progress:==============>               47%] [Cov:================================>  92%][Progress:==============>               47%] [Cov:================================>  92%][Progress:==============>               47%] [Cov:================================>  92%][Progress:==============>               47%] [Cov:================================>  92%][Progress:==============>               47%] [Cov:================================>  92%][Progress:==============>               47%] [Cov:================================>  92%][Progress:==============>               48%] [Cov:================================>  92%][Progress:==============>               48%] [Cov:================================>  92%][Progress:==============>               48%] [Cov:================================>  92%][Progress:==============>               48%] [Cov:================================>  92%][Progress:==============>               48%] [Cov:================================>  92%][Progress:==============>               48%] [Cov:================================>  92%][Progress:==============>               48%] [Cov:================================>  92%][Progress:==============>               48%] [Cov:================================>  92%][Progress:==============>               48%] [Cov:================================>  92%][Progress:==============>               48%] [Cov:================================>  92%][Progress:==============>               48%] [Cov:================================>  92%][Progress:==============>               48%] [Cov:================================>  92%][Progress:==============>               48%] [Cov:================================>  92%][Progress:==============>               48%] [Cov:================================>  92%][Progress:==============>               48%] [Cov:================================>  92%][Progress:==============>               48%] [Cov:================================>  92%][Progress:==============>               48%] [Cov:================================>  92%][Progress:==============>               48%] [Cov:================================>  92%][Progress:==============>               48%] [Cov:================================>  92%][Progress:==============>               48%] [Cov:================================>  92%][Progress:==============>               49%] [Cov:================================>  92%][Progress:==============>               49%] [Cov:================================>  92%][Progress:==============>               49%] [Cov:================================>  92%][Progress:==============>               49%] [Cov:================================>  92%][Progress:==============>               49%] [Cov:================================>  92%][Progress:==============>               49%] [Cov:================================>  92%][Progress:==============>               49%] [Cov:================================>  92%][Progress:==============>               49%] [Cov:================================>  92%][Progress:==============>               49%] [Cov:================================>  92%][Progress:==============>               49%] [Cov:================================>  92%][Progress:==============>               49%] [Cov:================================>  92%][Progress:==============>               49%] [Cov:================================>  92%][Progress:==============>               49%] [Cov:================================>  92%][Progress:==============>               49%] [Cov:================================>  92%][Progress:==============>               49%] [Cov:================================>  92%][Progress:==============>               49%] [Cov:================================>  92%][Progress:==============>               49%] [Cov:================================>  92%][Progress:==============>               49%] [Cov:================================>  92%][Progress:==============>               49%] [Cov:================================>  92%][Progress:==============>               49%] [Cov:================================>  92%][Progress:==============>               49%] [Cov:================================>  92%][Progress:==============>               49%] [Cov:================================>  92%][Progress:==============>               49%] [Cov:================================>  92%][Progress:==============>               49%] [Cov:================================>  92%][Progress:===============>              50%] [Cov:================================>  92%][Progress:===============>              50%] [Cov:================================>  92%][Progress:===============>              50%] [Cov:================================>  92%][Progress:===============>              50%] [Cov:================================>  92%][Progress:===============>              50%] [Cov:================================>  92%][Progress:===============>              50%] [Cov:================================>  92%][Progress:===============>              50%] [Cov:================================>  92%][Progress:===============>              50%] [Cov:================================>  92%][Progress:===============>              50%] [Cov:================================>  92%][Progress:===============>              50%] [Cov:================================>  92%][Progress:===============>              50%] [Cov:================================>  92%][Progress:===============>              50%] [Cov:================================>  92%][Progress:===============>              50%] [Cov:================================>  92%][Progress:===============>              50%] [Cov:================================>  92%][Progress:===============>              50%] [Cov:================================>  92%][Progress:===============>              51%] [Cov:================================>  92%][Progress:===============>              51%] [Cov:================================>  92%][Progress:===============>              51%] [Cov:================================>  92%][Progress:===============>              51%] [Cov:================================>  92%][Progress:===============>              51%] [Cov:================================>  92%][Progress:===============>              51%] [Cov:================================>  92%][Progress:===============>              51%] [Cov:================================>  92%][Progress:===============>              51%] [Cov:================================>  92%][Progress:===============>              51%] [Cov:================================>  92%][Progress:===============>              51%] [Cov:================================>  92%][Progress:===============>              51%] [Cov:================================>  92%][Progress:===============>              51%] [Cov:================================>  92%][Progress:===============>              51%] [Cov:================================>  92%][Progress:===============>              51%] [Cov:================================>  92%][Progress:===============>              52%] [Cov:================================>  92%][Progress:===============>              52%] [Cov:================================>  92%][Progress:===============>              52%] [Cov:================================>  92%][Progress:===============>              52%] [Cov:================================>  92%][Progress:===============>              52%] [Cov:================================>  92%][Progress:===============>              52%] [Cov:================================>  92%][Progress:===============>              52%] [Cov:================================>  92%][Progress:===============>              52%] [Cov:================================>  92%][Progress:===============>              52%] [Cov:================================>  92%][Progress:===============>              52%] [Cov:================================>  92%][Progress:===============>              52%] [Cov:================================>  92%][Progress:===============>              52%] [Cov:================================>  92%][Progress:===============>              52%] [Cov:================================>  92%][Progress:===============>              52%] [Cov:================================>  92%][Progress:===============>              52%] [Cov:================================>  92%][Progress:===============>              52%] [Cov:================================>  92%][Progress:===============>              52%] [Cov:================================>  92%][Progress:===============>              53%] [Cov:================================>  92%][Progress:===============>              53%] [Cov:================================>  92%][Progress:===============>              53%] [Cov:================================>  92%][Progress:===============>              53%] [Cov:================================>  92%][Progress:===============>              53%] [Cov:================================>  92%][Progress:===============>              53%] [Cov:================================>  92%][Progress:===============>              53%] [Cov:================================>  92%][Progress:===============>              53%] [Cov:================================>  92%][Progress:===============>              53%] [Cov:================================>  92%][Progress:===============>              53%] [Cov:================================>  92%][Progress:===============>              53%] [Cov:================================>  92%][Progress:===============>              53%] [Cov:================================>  92%][Progress:===============>              53%] [Cov:================================>  92%][Progress:===============>              53%] [Cov:================================>  92%][Progress:===============>              53%] [Cov:================================>  92%][Progress:===============>              53%] [Cov:================================>  92%][Progress:===============>              53%] [Cov:================================>  92%][Progress:===============>              53%] [Cov:================================>  92%][Progress:================>             54%] [Cov:================================>  92%][Progress:================>             54%] [Cov:================================>  92%][Progress:================>             54%] [Cov:================================>  92%][Progress:================>             54%] [Cov:================================>  92%][Progress:================>             54%] [Cov:================================>  92%][Progress:================>             54%] [Cov:================================>  92%][Progress:================>             54%] [Cov:================================>  92%][Progress:================>             54%] [Cov:================================>  92%][Progress:================>             54%] [Cov:================================>  92%][Progress:================>             54%] [Cov:================================>  92%][Progress:================>             54%] [Cov:================================>  92%][Progress:================>             54%] [Cov:================================>  92%][Progress:================>             54%] [Cov:================================>  92%][Progress:================>             54%] [Cov:================================>  92%][Progress:================>             55%] [Cov:================================>  92%][Progress:================>             55%] [Cov:================================>  92%][Progress:================>             55%] [Cov:================================>  92%][Progress:================>             55%] [Cov:================================>  92%][Progress:================>             55%] [Cov:================================>  92%][Progress:================>             55%] [Cov:================================>  92%][Progress:================>             55%] [Cov:================================>  92%][Progress:================>             55%] [Cov:================================>  92%][Progress:================>             55%] [Cov:================================>  92%][Progress:================>             55%] [Cov:================================>  92%][Progress:================>             55%] [Cov:================================>  92%][Progress:================>             55%] [Cov:================================>  92%][Progress:================>             55%] [Cov:================================>  92%][Progress:================>             55%] [Cov:================================>  92%][Progress:================>             56%] [Cov:================================>  92%][Progress:================>             56%] [Cov:================================>  92%][Progress:================>             56%] [Cov:================================>  92%][Progress:================>             56%] [Cov:================================>  92%][Progress:================>             56%] [Cov:================================>  92%][Progress:================>             56%] [Cov:================================>  92%][Progress:================>             56%] [Cov:================================>  92%][Progress:================>             56%] [Cov:================================>  92%][Progress:================>             56%] [Cov:================================>  92%][Progress:================>             56%] [Cov:================================>  92%][Progress:================>             56%] [Cov:================================>  92%][Progress:================>             56%] [Cov:================================>  92%][Progress:================>             56%] [Cov:================================>  92%][Progress:=================>            57%] [Cov:================================>  92%][Progress:=================>            57%] [Cov:================================>  92%][Progress:=================>            57%] [Cov:================================>  92%][Progress:=================>            57%] [Cov:================================>  92%][Progress:=================>            57%] [Cov:================================>  92%][Progress:=================>            57%] [Cov:================================>  92%][Progress:=================>            57%] [Cov:================================>  92%][Progress:=================>            57%] [Cov:================================>  92%][Progress:=================>            57%] [Cov:================================>  92%][Progress:=================>            57%] [Cov:================================>  92%][Progress:=================>            57%] [Cov:================================>  92%][Progress:=================>            57%] [Cov:================================>  92%][Progress:=================>            57%] [Cov:================================>  92%][Progress:=================>            57%] [Cov:================================>  92%][Progress:=================>            57%] [Cov:================================>  92%][Progress:=================>            58%] [Cov:================================>  92%][Progress:=================>            58%] [Cov:================================>  92%][Progress:=================>            58%] [Cov:================================>  92%][Progress:=================>            58%] [Cov:================================>  92%][Progress:=================>            58%] [Cov:================================>  92%][Progress:=================>            58%] [Cov:================================>  92%][Progress:=================>            58%] [Cov:================================>  92%][Progress:=================>            58%] [Cov:================================>  92%][Progress:=================>            58%] [Cov:================================>  92%][Progress:=================>            58%] [Cov:================================>  92%][Progress:=================>            58%] [Cov:================================>  92%][Progress:=================>            58%] [Cov:================================>  92%][Progress:=================>            58%] [Cov:================================>  92%][Progress:=================>            58%] [Cov:================================>  92%][Progress:=================>            59%] [Cov:================================>  92%][Progress:=================>            59%] [Cov:================================>  92%][Progress:=================>            59%] [Cov:================================>  92%][Progress:=================>            59%] [Cov:================================>  92%][Progress:=================>            59%] [Cov:================================>  92%][Progress:=================>            59%] [Cov:================================>  92%][Progress:=================>            59%] [Cov:================================>  92%][Progress:=================>            59%] [Cov:================================>  92%][Progress:=================>            59%] [Cov:================================>  92%][Progress:=================>            59%] [Cov:================================>  92%][Progress:=================>            59%] [Cov:================================>  92%][Progress:=================>            59%] [Cov:================================>  92%][Progress:=================>            59%] [Cov:================================>  92%][Progress:=================>            59%] [Cov:================================>  92%][Progress:=================>            59%] [Cov:================================>  92%][Progress:=================>            59%] [Cov:================================>  92%][Progress:=================>            59%] [Cov:================================>  92%][Progress:=================>            59%] [Cov:================================>  92%][Progress:==================>           60%] [Cov:================================>  92%][Progress:==================>           60%] [Cov:================================>  92%][Progress:==================>           60%] [Cov:================================>  92%][Progress:==================>           60%] [Cov:================================>  92%][Progress:==================>           60%] [Cov:================================>  92%][Progress:==================>           60%] [Cov:================================>  92%][Progress:==================>           60%] [Cov:================================>  92%][Progress:==================>           60%] [Cov:================================>  92%][Progress:==================>           60%] [Cov:================================>  92%][Progress:==================>           60%] [Cov:================================>  92%][Progress:==================>           60%] [Cov:================================>  92%][Progress:==================>           60%] [Cov:================================>  92%][Progress:==================>           60%] [Cov:================================>  92%][Progress:==================>           60%] [Cov:================================>  92%][Progress:==================>           60%] [Cov:================================>  92%][Progress:==================>           60%] [Cov:================================>  92%][Progress:==================>           60%] [Cov:================================>  92%][Progress:==================>           60%] [Cov:================================>  92%][Progress:==================>           60%] [Cov:================================>  92%][Progress:==================>           60%] [Cov:================================>  92%][Progress:==================>           61%] [Cov:================================>  92%][Progress:==================>           61%] [Cov:================================>  92%][Progress:==================>           61%] [Cov:================================>  92%][Progress:==================>           61%] [Cov:================================>  92%][Progress:==================>           61%] [Cov:================================>  92%][Progress:==================>           61%] [Cov:================================>  92%][Progress:==================>           61%] [Cov:================================>  92%][Progress:==================>           61%] [Cov:================================>  92%][Progress:==================>           61%] [Cov:================================>  92%][Progress:==================>           61%] [Cov:================================>  92%][Progress:==================>           61%] [Cov:================================>  92%][Progress:==================>           61%] [Cov:================================>  92%][Progress:==================>           61%] [Cov:================================>  92%][Progress:==================>           61%] [Cov:================================>  92%][Progress:==================>           62%] [Cov:================================>  92%][Progress:==================>           62%] [Cov:================================>  92%][Progress:==================>           62%] [Cov:================================>  92%][Progress:==================>           62%] [Cov:================================>  92%][Progress:==================>           62%] [Cov:================================>  92%][Progress:==================>           62%] [Cov:================================>  92%][Progress:==================>           62%] [Cov:================================>  92%][Progress:==================>           62%] [Cov:================================>  92%][Progress:==================>           62%] [Cov:================================>  92%][Progress:==================>           62%] [Cov:================================>  92%][Progress:==================>           62%] [Cov:================================>  92%][Progress:==================>           62%] [Cov:================================>  92%][Progress:==================>           62%] [Cov:================================>  92%][Progress:==================>           62%] [Cov:================================>  92%][Progress:==================>           62%] [Cov:================================>  92%][Progress:==================>           62%] [Cov:================================>  92%][Progress:==================>           63%] [Cov:================================>  92%][Progress:==================>           63%] [Cov:================================>  92%][Progress:==================>           63%] [Cov:================================>  92%][Progress:==================>           63%] [Cov:================================>  92%][Progress:==================>           63%] [Cov:================================>  92%][Progress:==================>           63%] [Cov:================================>  92%][Progress:==================>           63%] [Cov:================================>  92%][Progress:==================>           63%] [Cov:================================>  92%][Progress:==================>           63%] [Cov:================================>  92%][Progress:==================>           63%] [Cov:================================>  92%][Progress:==================>           63%] [Cov:================================>  92%][Progress:==================>           63%] [Cov:================================>  92%][Progress:==================>           63%] [Cov:================================>  92%][Progress:==================>           63%] [Cov:================================>  92%][Progress:==================>           63%] [Cov:================================>  92%][Progress:==================>           63%] [Cov:================================>  92%][Progress:==================>           63%] [Cov:================================>  92%][Progress:===================>          64%] [Cov:================================>  92%][Progress:===================>          64%] [Cov:================================>  92%][Progress:===================>          64%] [Cov:================================>  92%][Progress:===================>          64%] [Cov:================================>  92%][Progress:===================>          64%] [Cov:================================>  92%][Progress:===================>          64%] [Cov:================================>  92%][Progress:===================>          64%] [Cov:================================>  92%][Progress:===================>          64%] [Cov:================================>  92%][Progress:===================>          64%] [Cov:================================>  92%][Progress:===================>          64%] [Cov:================================>  92%][Progress:===================>          64%] [Cov:================================>  92%][Progress:===================>          64%] [Cov:================================>  92%][Progress:===================>          64%] [Cov:================================>  92%][Progress:===================>          64%] [Cov:================================>  92%][Progress:===================>          64%] [Cov:================================>  92%][Progress:===================>          64%] [Cov:================================>  92%][Progress:===================>          64%] [Cov:================================>  92%][Progress:===================>          65%] [Cov:================================>  92%][Progress:===================>          65%] [Cov:================================>  92%][Progress:===================>          65%] [Cov:================================>  92%][Progress:===================>          65%] [Cov:================================>  92%][Progress:===================>          65%] [Cov:================================>  92%][Progress:===================>          65%] [Cov:================================>  92%][Progress:===================>          65%] [Cov:================================>  92%][Progress:===================>          65%] [Cov:================================>  92%][Progress:===================>          65%] [Cov:================================>  92%][Progress:===================>          65%] [Cov:================================>  92%][Progress:===================>          65%] [Cov:================================>  92%][Progress:===================>          65%] [Cov:================================>  92%][Progress:===================>          65%] [Cov:================================>  92%][Progress:===================>          65%] [Cov:================================>  92%][Progress:===================>          65%] [Cov:================================>  92%][Progress:===================>          65%] [Cov:================================>  92%][Progress:===================>          65%] [Cov:================================>  92%][Progress:===================>          65%] [Cov:================================>  92%][Progress:===================>          65%] [Cov:================================>  92%][Progress:===================>          65%] [Cov:================================>  92%][Progress:===================>          66%] [Cov:================================>  92%][Progress:===================>          66%] [Cov:================================>  92%][Progress:===================>          66%] [Cov:================================>  92%][Progress:===================>          66%] [Cov:================================>  92%][Progress:===================>          66%] [Cov:================================>  92%][Progress:===================>          66%] [Cov:================================>  92%][Progress:===================>          66%] [Cov:================================>  92%][Progress:===================>          66%] [Cov:================================>  92%][Progress:===================>          66%] [Cov:================================>  92%][Progress:===================>          66%] [Cov:================================>  92%][Progress:===================>          66%] [Cov:================================>  92%][Progress:===================>          66%] [Cov:================================>  92%][Progress:===================>          66%] [Cov:================================>  92%][Progress:===================>          66%] [Cov:================================>  92%][Progress:===================>          66%] [Cov:================================>  92%][Progress:===================>          66%] [Cov:================================>  92%][Progress:===================>          66%] [Cov:================================>  92%][Progress:===================>          66%] [Cov:================================>  92%][Progress:===================>          66%] [Cov:================================>  92%][Progress:===================>          66%] [Cov:================================>  92%][Progress:====================>         67%] [Cov:================================>  92%][Progress:====================>         67%] [Cov:================================>  92%][Progress:====================>         67%] [Cov:================================>  92%][Progress:====================>         67%] [Cov:================================>  92%][Progress:====================>         67%] [Cov:================================>  92%][Progress:====================>         67%] [Cov:================================>  92%][Progress:====================>         67%] [Cov:================================>  92%][Progress:====================>         67%] [Cov:================================>  92%][Progress:====================>         67%] [Cov:================================>  92%][Progress:====================>         67%] [Cov:================================>  92%][Progress:====================>         67%] [Cov:================================>  92%][Progress:====================>         67%] [Cov:================================>  92%][Progress:====================>         67%] [Cov:================================>  92%][Progress:====================>         68%] [Cov:================================>  92%][Progress:====================>         68%] [Cov:================================>  92%][Progress:====================>         68%] [Cov:================================>  92%][Progress:====================>         68%] [Cov:================================>  92%][Progress:====================>         68%] [Cov:================================>  92%][Progress:====================>         68%] [Cov:================================>  92%][Progress:====================>         68%] [Cov:================================>  92%][Progress:====================>         68%] [Cov:================================>  92%][Progress:====================>         68%] [Cov:================================>  92%][Progress:====================>         68%] [Cov:================================>  92%][Progress:====================>         68%] [Cov:================================>  92%][Progress:====================>         68%] [Cov:================================>  92%][Progress:====================>         68%] [Cov:================================>  92%][Progress:====================>         68%] [Cov:================================>  92%][Progress:====================>         68%] [Cov:================================>  92%][Progress:====================>         68%] [Cov:================================>  92%][Progress:====================>         68%] [Cov:================================>  92%][Progress:====================>         68%] [Cov:================================>  92%][Progress:====================>         68%] [Cov:================================>  92%][Progress:====================>         68%] [Cov:================================>  92%][Progress:====================>         68%] [Cov:================================>  92%][Progress:====================>         68%] [Cov:================================>  92%][Progress:====================>         68%] [Cov:================================>  92%][Progress:====================>         69%] [Cov:================================>  92%][Progress:====================>         69%] [Cov:================================>  92%][Progress:====================>         69%] [Cov:================================>  92%][Progress:====================>         69%] [Cov:================================>  92%][Progress:====================>         69%] [Cov:================================>  92%][Progress:====================>         69%] [Cov:================================>  92%][Progress:====================>         69%] [Cov:================================>  92%][Progress:====================>         69%] [Cov:================================>  92%][Progress:====================>         69%] [Cov:================================>  92%][Progress:====================>         69%] [Cov:================================>  92%][Progress:====================>         69%] [Cov:================================>  92%][Progress:====================>         69%] [Cov:================================>  92%][Progress:====================>         69%] [Cov:================================>  92%][Progress:====================>         69%] [Cov:================================>  92%][Progress:====================>         69%] [Cov:================================>  92%][Progress:====================>         69%] [Cov:================================>  92%][Progress:====================>         69%] [Cov:================================>  92%][Progress:====================>         69%] [Cov:================================>  92%][Progress:=====================>        70%] [Cov:================================>  92%][Progress:=====================>        70%] [Cov:================================>  92%][Progress:=====================>        70%] [Cov:================================>  92%][Progress:=====================>        70%] [Cov:================================>  92%][Progress:=====================>        70%] [Cov:================================>  92%][Progress:=====================>        70%] [Cov:================================>  92%][Progress:=====================>        70%] [Cov:================================>  92%][Progress:=====================>        70%] [Cov:================================>  92%][Progress:=====================>        70%] [Cov:================================>  92%][Progress:=====================>        70%] [Cov:================================>  92%][Progress:=====================>        70%] [Cov:================================>  92%][Progress:=====================>        70%] [Cov:================================>  92%][Progress:=====================>        70%] [Cov:================================>  92%][Progress:=====================>        70%] [Cov:================================>  92%][Progress:=====================>        70%] [Cov:================================>  92%][Progress:=====================>        70%] [Cov:================================>  92%][Progress:=====================>        70%] [Cov:================================>  92%][Progress:=====================>        71%] [Cov:================================>  92%][Progress:=====================>        71%] [Cov:================================>  92%][Progress:=====================>        71%] [Cov:================================>  92%][Progress:=====================>        71%] [Cov:================================>  92%][Progress:=====================>        71%] [Cov:================================>  92%][Progress:=====================>        71%] [Cov:================================>  92%][Progress:=====================>        71%] [Cov:================================>  92%][Progress:=====================>        71%] [Cov:================================>  92%][Progress:=====================>        71%] [Cov:================================>  92%][Progress:=====================>        71%] [Cov:================================>  92%][Progress:=====================>        71%] [Cov:================================>  92%][Progress:=====================>        71%] [Cov:================================>  92%][Progress:=====================>        71%] [Cov:================================>  92%][Progress:=====================>        71%] [Cov:================================>  92%][Progress:=====================>        71%] [Cov:================================>  92%][Progress:=====================>        71%] [Cov:================================>  92%][Progress:=====================>        72%] [Cov:================================>  92%][Progress:=====================>        72%] [Cov:================================>  92%][Progress:=====================>        72%] [Cov:================================>  92%][Progress:=====================>        72%] [Cov:================================>  92%][Progress:=====================>        72%] [Cov:================================>  92%][Progress:=====================>        72%] [Cov:================================>  92%][Progress:=====================>        72%] [Cov:================================>  92%][Progress:=====================>        72%] [Cov:================================>  92%][Progress:=====================>        72%] [Cov:================================>  92%][Progress:=====================>        72%] [Cov:================================>  92%][Progress:=====================>        72%] [Cov:================================>  92%][Progress:=====================>        72%] [Cov:================================>  92%][Progress:=====================>        72%] [Cov:================================>  92%][Progress:=====================>        72%] [Cov:================================>  92%][Progress:=====================>        72%] [Cov:================================>  92%][Progress:=====================>        72%] [Cov:================================>  92%][Progress:=====================>        72%] [Cov:================================>  92%][Progress:=====================>        73%] [Cov:================================>  92%][Progress:=====================>        73%] [Cov:================================>  92%][Progress:=====================>        73%] [Cov:================================>  92%][Progress:=====================>        73%] [Cov:================================>  92%][Progress:=====================>        73%] [Cov:================================>  92%][Progress:=====================>        73%] [Cov:================================>  92%][Progress:=====================>        73%] [Cov:================================>  92%][Progress:=====================>        73%] [Cov:================================>  92%][Progress:=====================>        73%] [Cov:================================>  92%][Progress:=====================>        73%] [Cov:================================>  92%][Progress:=====================>        73%] [Cov:================================>  92%][Progress:=====================>        73%] [Cov:================================>  92%][Progress:=====================>        73%] [Cov:================================>  92%][Progress:=====================>        73%] [Cov:================================>  92%][Progress:=====================>        73%] [Cov:================================>  92%][Progress:=====================>        73%] [Cov:================================>  92%][Progress:=====================>        73%] [Cov:================================>  92%][Progress:=====================>        73%] [Cov:================================>  92%][Progress:=====================>        73%] [Cov:================================>  92%][Progress:=====================>        73%] [Cov:================================>  92%][Progress:======================>       74%] [Cov:================================>  92%][Progress:======================>       74%] [Cov:================================>  92%][Progress:======================>       74%] [Cov:================================>  92%][Progress:======================>       74%] [Cov:================================>  92%][Progress:======================>       74%] [Cov:================================>  92%][Progress:======================>       74%] [Cov:================================>  92%][Progress:======================>       74%] [Cov:================================>  92%][Progress:======================>       74%] [Cov:================================>  92%][Progress:======================>       74%] [Cov:================================>  92%][Progress:======================>       74%] [Cov:================================>  92%][Progress:======================>       74%] [Cov:================================>  92%][Progress:======================>       74%] [Cov:================================>  92%][Progress:======================>       74%] [Cov:================================>  92%][Progress:======================>       74%] [Cov:================================>  92%][Progress:======================>       74%] [Cov:================================>  92%][Progress:======================>       74%] [Cov:================================>  92%][Progress:======================>       74%] [Cov:================================>  92%][Progress:======================>       74%] [Cov:================================>  92%][Progress:======================>       74%] [Cov:================================>  92%][Progress:======================>       74%] [Cov:================================>  92%][Progress:======================>       74%] [Cov:================================>  92%][Progress:======================>       74%] [Cov:================================>  92%][Progress:======================>       75%] [Cov:================================>  92%][Progress:======================>       75%] [Cov:================================>  92%][Progress:======================>       75%] [Cov:================================>  92%][Progress:======================>       75%] [Cov:================================>  92%][Progress:======================>       75%] [Cov:================================>  92%][Progress:======================>       75%] [Cov:================================>  92%][Progress:======================>       75%] [Cov:================================>  92%][Progress:======================>       75%] [Cov:================================>  92%][Progress:======================>       75%] [Cov:================================>  92%][Progress:======================>       75%] [Cov:================================>  92%][Progress:======================>       75%] [Cov:================================>  92%][Progress:======================>       75%] [Cov:================================>  92%][Progress:======================>       75%] [Cov:================================>  92%][Progress:======================>       75%] [Cov:================================>  92%][Progress:======================>       75%] [Cov:================================>  92%][Progress:======================>       75%] [Cov:================================>  92%][Progress:======================>       76%] [Cov:================================>  92%][Progress:======================>       76%] [Cov:================================>  92%][Progress:======================>       76%] [Cov:================================>  92%][Progress:======================>       76%] [Cov:================================>  92%][Progress:======================>       76%] [Cov:================================>  92%][Progress:======================>       76%] [Cov:================================>  92%][Progress:======================>       76%] [Cov:================================>  92%][Progress:======================>       76%] [Cov:================================>  92%][Progress:======================>       76%] [Cov:================================>  92%][Progress:======================>       76%] [Cov:================================>  92%][Progress:======================>       76%] [Cov:================================>  92%][Progress:======================>       76%] [Cov:================================>  92%][Progress:======================>       76%] [Cov:================================>  92%][Progress:=======================>      77%] [Cov:================================>  92%][Progress:=======================>      77%] [Cov:================================>  92%][Progress:=======================>      77%] [Cov:================================>  92%][Progress:=======================>      77%] [Cov:================================>  92%][Progress:=======================>      77%] [Cov:================================>  92%][Progress:=======================>      77%] [Cov:================================>  92%][Progress:=======================>      77%] [Cov:================================>  92%][Progress:=======================>      77%] [Cov:================================>  92%][Progress:=======================>      77%] [Cov:================================>  92%][Progress:=======================>      77%] [Cov:================================>  92%][Progress:=======================>      77%] [Cov:================================>  92%][Progress:=======================>      78%] [Cov:================================>  92%][Progress:=======================>      78%] [Cov:================================>  92%][Progress:=======================>      78%] [Cov:================================>  92%][Progress:=======================>      78%] [Cov:================================>  92%][Progress:=======================>      78%] [Cov:================================>  92%][Progress:=======================>      78%] [Cov:================================>  92%][Progress:=======================>      78%] [Cov:================================>  92%][Progress:=======================>      78%] [Cov:================================>  92%][Progress:=======================>      78%] [Cov:================================>  92%][Progress:=======================>      78%] [Cov:================================>  92%][Progress:=======================>      78%] [Cov:================================>  92%][Progress:=======================>      78%] [Cov:================================>  92%][Progress:=======================>      78%] [Cov:================================>  92%][Progress:=======================>      78%] [Cov:================================>  92%][Progress:=======================>      79%] [Cov:================================>  92%][Progress:=======================>      79%] [Cov:================================>  92%][Progress:=======================>      79%] [Cov:================================>  92%][Progress:=======================>      79%] [Cov:================================>  92%][Progress:=======================>      79%] [Cov:================================>  92%][Progress:=======================>      79%] [Cov:================================>  92%][Progress:=======================>      79%] [Cov:================================>  92%][Progress:=======================>      79%] [Cov:================================>  92%][Progress:=======================>      79%] [Cov:================================>  92%][Progress:=======================>      79%] [Cov:================================>  92%][Progress:=======================>      79%] [Cov:================================>  92%][Progress:=======================>      79%] [Cov:================================>  92%][Progress:=======================>      79%] [Cov:================================>  92%][Progress:=======================>      79%] [Cov:================================>  92%][Progress:========================>     80%] [Cov:================================>  92%][Progress:========================>     80%] [Cov:================================>  92%][Progress:========================>     80%] [Cov:================================>  92%][Progress:========================>     80%] [Cov:================================>  92%][Progress:========================>     80%] [Cov:================================>  92%][Progress:========================>     80%] [Cov:================================>  92%][Progress:========================>     80%] [Cov:================================>  92%][Progress:========================>     80%] [Cov:================================>  92%][Progress:========================>     80%] [Cov:================================>  92%][Progress:========================>     80%] [Cov:================================>  92%][Progress:========================>     80%] [Cov:================================>  92%][Progress:========================>     80%] [Cov:================================>  92%][Progress:========================>     80%] [Cov:================================>  92%][Progress:========================>     80%] [Cov:================================>  92%][Progress:========================>     81%] [Cov:================================>  92%][Progress:========================>     81%] [Cov:================================>  92%][Progress:========================>     81%] [Cov:================================>  92%][Progress:========================>     81%] [Cov:================================>  92%][Progress:========================>     81%] [Cov:================================>  92%][Progress:========================>     81%] [Cov:================================>  92%][Progress:========================>     81%] [Cov:================================>  92%][Progress:========================>     81%] [Cov:================================>  92%][Progress:========================>     81%] [Cov:================================>  92%][Progress:========================>     81%] [Cov:================================>  92%][Progress:========================>     81%] [Cov:================================>  92%][Progress:========================>     81%] [Cov:================================>  92%][Progress:========================>     81%] [Cov:================================>  92%][Progress:========================>     81%] [Cov:================================>  92%][Progress:========================>     81%] [Cov:================================>  92%][Progress:========================>     81%] [Cov:================================>  92%][Progress:========================>     81%] [Cov:================================>  92%][Progress:========================>     82%] [Cov:================================>  92%][Progress:========================>     82%] [Cov:================================>  92%][Progress:========================>     82%] [Cov:================================>  92%][Progress:========================>     82%] [Cov:================================>  92%][Progress:========================>     82%] [Cov:================================>  92%][Progress:========================>     82%] [Cov:================================>  92%][Progress:========================>     82%] [Cov:================================>  92%][Progress:========================>     82%] [Cov:================================>  92%][Progress:========================>     82%] [Cov:================================>  92%][Progress:========================>     82%] [Cov:================================>  92%][Progress:========================>     82%] [Cov:================================>  92%][Progress:========================>     82%] [Cov:================================>  92%][Progress:========================>     82%] [Cov:================================>  92%][Progress:========================>     82%] [Cov:================================>  92%][Progress:========================>     82%] [Cov:================================>  92%][Progress:========================>     83%] [Cov:================================>  92%][Progress:========================>     83%] [Cov:================================>  92%][Progress:========================>     83%] [Cov:================================>  92%][Progress:========================>     83%] [Cov:================================>  92%][Progress:========================>     83%] [Cov:================================>  92%][Progress:========================>     83%] [Cov:================================>  92%][Progress:========================>     83%] [Cov:================================>  92%][Progress:========================>     83%] [Cov:================================>  92%][Progress:========================>     83%] [Cov:================================>  92%][Progress:========================>     83%] [Cov:================================>  92%][Progress:========================>     83%] [Cov:================================>  92%][Progress:========================>     83%] [Cov:================================>  92%][Progress:=========================>    84%] [Cov:================================>  92%][Progress:=========================>    84%] [Cov:================================>  92%][Progress:=========================>    84%] [Cov:================================>  92%][Progress:=========================>    84%] [Cov:================================>  92%][Progress:=========================>    84%] [Cov:================================>  92%][Progress:=========================>    84%] [Cov:================================>  92%][Progress:=========================>    84%] [Cov:================================>  92%][Progress:=========================>    84%] [Cov:================================>  92%][Progress:=========================>    84%] [Cov:================================>  92%][Progress:=========================>    84%] [Cov:================================>  92%][Progress:=========================>    84%] [Cov:================================>  92%][Progress:=========================>    84%] [Cov:================================>  92%][Progress:=========================>    84%] [Cov:================================>  92%][Progress:=========================>    84%] [Cov:================================>  92%][Progress:=========================>    84%] [Cov:================================>  92%][Progress:=========================>    84%] [Cov:================================>  92%][Progress:=========================>    84%] [Cov:================================>  92%][Progress:=========================>    84%] [Cov:================================>  92%][Progress:=========================>    84%] [Cov:================================>  92%][Progress:=========================>    84%] [Cov:================================>  92%][Progress:=========================>    84%] [Cov:================================>  92%][Progress:=========================>    85%] [Cov:================================>  92%][Progress:=========================>    85%] [Cov:================================>  92%][Progress:=========================>    85%] [Cov:================================>  92%][Progress:=========================>    85%] [Cov:================================>  92%][Progress:=========================>    85%] [Cov:================================>  92%][Progress:=========================>    85%] [Cov:================================>  92%][Progress:=========================>    85%] [Cov:================================>  92%][Progress:=========================>    85%] [Cov:================================>  92%][Progress:=========================>    85%] [Cov:================================>  92%][Progress:=========================>    85%] [Cov:================================>  92%][Progress:=========================>    85%] [Cov:================================>  92%][Progress:=========================>    85%] [Cov:================================>  92%][Progress:=========================>    85%] [Cov:================================>  92%][Progress:=========================>    85%] [Cov:================================>  92%][Progress:=========================>    85%] [Cov:================================>  92%][Progress:=========================>    85%] [Cov:================================>  92%][Progress:=========================>    85%] [Cov:================================>  92%][Progress:=========================>    85%] [Cov:================================>  92%][Progress:=========================>    85%] [Cov:================================>  92%][Progress:=========================>    85%] [Cov:================================>  92%][Progress:=========================>    86%] [Cov:================================>  92%][Progress:=========================>    86%] [Cov:================================>  92%][Progress:=========================>    86%] [Cov:================================>  92%][Progress:=========================>    86%] [Cov:================================>  92%][Progress:=========================>    86%] [Cov:================================>  92%][Progress:=========================>    86%] [Cov:================================>  92%][Progress:=========================>    86%] [Cov:================================>  92%][Progress:=========================>    86%] [Cov:================================>  92%][Progress:=========================>    86%] [Cov:================================>  92%][Progress:=========================>    86%] [Cov:================================>  92%][Progress:=========================>    86%] [Cov:================================>  92%][Progress:=========================>    86%] [Cov:================================>  92%][Progress:=========================>    86%] [Cov:================================>  92%][Progress:=========================>    86%] [Cov:================================>  92%][Progress:=========================>    86%] [Cov:================================>  92%][Progress:=========================>    86%] [Cov:================================>  92%][Progress:=========================>    86%] [Cov:================================>  92%][Progress:=========================>    86%] [Cov:================================>  92%][Progress:=========================>    86%] [Cov:================================>  92%][Progress:=========================>    86%] [Cov:================================>  92%][Progress:==========================>   87%] [Cov:================================>  92%][Progress:==========================>   87%] [Cov:================================>  92%][Progress:==========================>   87%] [Cov:================================>  92%][Progress:==========================>   87%] [Cov:================================>  92%][Progress:==========================>   87%] [Cov:================================>  92%][Progress:==========================>   87%] [Cov:================================>  92%][Progress:==========================>   87%] [Cov:================================>  92%][Progress:==========================>   87%] [Cov:================================>  92%][Progress:==========================>   87%] [Cov:================================>  92%][Progress:==========================>   87%] [Cov:================================>  92%][Progress:==========================>   87%] [Cov:================================>  92%][Progress:==========================>   87%] [Cov:================================>  92%][Progress:==========================>   87%] [Cov:================================>  92%][Progress:==========================>   87%] [Cov:================================>  92%][Progress:==========================>   87%] [Cov:================================>  92%][Progress:==========================>   87%] [Cov:================================>  92%][Progress:==========================>   87%] [Cov:================================>  92%][Progress:==========================>   87%] [Cov:================================>  92%][Progress:==========================>   87%] [Cov:================================>  92%][Progress:==========================>   87%] [Cov:================================>  92%][Progress:==========================>   87%] [Cov:================================>  92%][Progress:==========================>   87%] [Cov:================================>  92%][Progress:==========================>   87%] [Cov:================================>  92%][Progress:==========================>   88%] [Cov:================================>  92%][Progress:==========================>   88%] [Cov:================================>  92%][Progress:==========================>   88%] [Cov:================================>  92%][Progress:==========================>   88%] [Cov:================================>  92%][Progress:==========================>   88%] [Cov:================================>  92%][Progress:==========================>   88%] [Cov:================================>  92%][Progress:==========================>   88%] [Cov:================================>  92%][Progress:==========================>   88%] [Cov:================================>  92%][Progress:==========================>   88%] [Cov:================================>  92%][Progress:==========================>   88%] [Cov:================================>  92%][Progress:==========================>   88%] [Cov:================================>  92%][Progress:==========================>   88%] [Cov:================================>  92%][Progress:==========================>   88%] [Cov:================================>  92%][Progress:==========================>   88%] [Cov:================================>  92%][Progress:==========================>   88%] [Cov:================================>  92%][Progress:==========================>   88%] [Cov:================================>  92%][Progress:==========================>   88%] [Cov:================================>  92%][Progress:==========================>   88%] [Cov:================================>  92%][Progress:==========================>   89%] [Cov:================================>  92%][Progress:==========================>   89%] [Cov:================================>  92%][Progress:==========================>   89%] [Cov:================================>  92%][Progress:==========================>   89%] [Cov:================================>  92%][Progress:==========================>   89%] [Cov:================================>  92%][Progress:==========================>   89%] [Cov:================================>  92%][Progress:==========================>   89%] [Cov:================================>  92%][Progress:==========================>   89%] [Cov:================================>  92%][Progress:==========================>   89%] [Cov:================================>  92%][Progress:==========================>   89%] [Cov:================================>  92%][Progress:==========================>   89%] [Cov:================================>  92%][Progress:==========================>   89%] [Cov:================================>  92%][Progress:==========================>   89%] [Cov:================================>  92%][Progress:==========================>   89%] [Cov:================================>  92%][Progress:==========================>   89%] [Cov:================================>  92%][Progress:==========================>   89%] [Cov:================================>  92%][Progress:==========================>   89%] [Cov:================================>  92%][Progress:==========================>   89%] [Cov:================================>  92%][Progress:===========================>  90%] [Cov:================================>  92%][Progress:===========================>  90%] [Cov:================================>  92%][Progress:===========================>  90%] [Cov:================================>  92%][Progress:===========================>  90%] [Cov:================================>  92%][Progress:===========================>  90%] [Cov:================================>  92%][Progress:===========================>  90%] [Cov:================================>  92%][Progress:===========================>  90%] [Cov:================================>  92%][Progress:===========================>  90%] [Cov:================================>  92%][Progress:===========================>  90%] [Cov:================================>  92%][Progress:===========================>  90%] [Cov:================================>  92%][Progress:===========================>  90%] [Cov:================================>  92%][Progress:===========================>  90%] [Cov:================================>  92%][Progress:===========================>  90%] [Cov:================================>  92%][Progress:===========================>  90%] [Cov:================================>  92%][Progress:===========================>  90%] [Cov:================================>  92%][Progress:===========================>  90%] [Cov:================================>  92%][Progress:===========================>  90%] [Cov:================================>  92%][Progress:===========================>  90%] [Cov:================================>  92%][Progress:===========================>  90%] [Cov:================================>  92%][Progress:===========================>  90%] [Cov:================================>  92%][Progress:===========================>  90%] [Cov:================================>  92%][Progress:===========================>  90%] [Cov:================================>  92%][Progress:===========================>  91%] [Cov:================================>  92%][Progress:===========================>  91%] [Cov:================================>  92%][Progress:===========================>  91%] [Cov:================================>  92%][Progress:===========================>  91%] [Cov:================================>  92%][Progress:===========================>  91%] [Cov:================================>  92%][Progress:===========================>  91%] [Cov:================================>  92%][Progress:===========================>  91%] [Cov:================================>  92%][Progress:===========================>  91%] [Cov:================================>  92%][Progress:===========================>  91%] [Cov:================================>  92%][Progress:===========================>  91%] [Cov:================================>  92%][Progress:===========================>  91%] [Cov:================================>  92%][Progress:===========================>  91%] [Cov:================================>  92%][Progress:===========================>  91%] [Cov:================================>  92%][Progress:===========================>  91%] [Cov:================================>  92%][Progress:===========================>  91%] [Cov:================================>  92%][Progress:===========================>  91%] [Cov:================================>  92%][Progress:===========================>  91%] [Cov:================================>  92%][Progress:===========================>  91%] [Cov:================================>  92%][Progress:===========================>  91%] [Cov:================================>  92%][Progress:===========================>  92%] [Cov:================================>  92%][Progress:===========================>  92%] [Cov:================================>  92%][Progress:===========================>  92%] [Cov:================================>  92%][Progress:===========================>  92%] [Cov:================================>  92%][Progress:===========================>  92%] [Cov:================================>  92%][Progress:===========================>  92%] [Cov:================================>  92%][Progress:===========================>  92%] [Cov:================================>  92%][Progress:===========================>  92%] [Cov:================================>  92%][Progress:===========================>  92%] [Cov:================================>  92%][Progress:===========================>  92%] [Cov:================================>  92%][Progress:===========================>  92%] [Cov:================================>  92%][Progress:===========================>  92%] [Cov:================================>  92%][Progress:===========================>  92%] [Cov:================================>  92%][Progress:===========================>  92%] [Cov:================================>  92%][Progress:===========================>  92%] [Cov:================================>  92%][Progress:===========================>  92%] [Cov:================================>  92%][Progress:===========================>  93%] [Cov:================================>  92%][Progress:===========================>  93%] [Cov:================================>  92%][Progress:===========================>  93%] [Cov:================================>  92%][Progress:===========================>  93%] [Cov:================================>  92%][Progress:===========================>  93%] [Cov:================================>  92%][Progress:===========================>  93%] [Cov:================================>  92%][Progress:===========================>  93%] [Cov:================================>  92%][Progress:===========================>  93%] [Cov:================================>  92%][Progress:===========================>  93%] [Cov:================================>  92%][Progress:===========================>  93%] [Cov:================================>  92%][Progress:===========================>  93%] [Cov:================================>  92%][Progress:===========================>  93%] [Cov:================================>  92%][Progress:===========================>  93%] [Cov:================================>  92%][Progress:===========================>  93%] [Cov:================================>  92%][Progress:============================> 94%] [Cov:================================>  92%][Progress:============================> 94%] [Cov:================================>  92%][Progress:============================> 94%] [Cov:================================>  92%][Progress:============================> 94%] [Cov:================================>  92%][Progress:============================> 94%] [Cov:================================>  92%][Progress:============================> 94%] [Cov:================================>  92%][Progress:============================> 94%] [Cov:================================>  92%][Progress:============================> 94%] [Cov:================================>  92%][Progress:============================> 94%] [Cov:================================>  92%][Progress:============================> 94%] [Cov:================================>  92%][Progress:============================> 94%] [Cov:================================>  92%][Progress:============================> 94%] [Cov:================================>  92%][Progress:============================> 94%] [Cov:================================>  92%][Progress:============================> 94%] [Cov:================================>  92%][Progress:============================> 94%] [Cov:================================>  92%][Progress:============================> 94%] [Cov:================================>  92%][Progress:============================> 94%] [Cov:================================>  92%][Progress:============================> 95%] [Cov:================================>  92%][Progress:============================> 95%] [Cov:================================>  92%][Progress:============================> 95%] [Cov:================================>  92%][Progress:============================> 95%] [Cov:================================>  92%][Progress:============================> 95%] [Cov:================================>  92%][Progress:============================> 95%] [Cov:================================>  92%][Progress:============================> 95%] [Cov:================================>  92%][Progress:============================> 95%] [Cov:================================>  92%][Progress:============================> 95%] [Cov:================================>  92%][Progress:============================> 95%] [Cov:================================>  92%][Progress:============================> 95%] [Cov:================================>  92%][Progress:============================> 95%] [Cov:================================>  92%][Progress:============================> 95%] [Cov:================================>  92%][Progress:============================> 95%] [Cov:================================>  92%][Progress:============================> 95%] [Cov:================================>  92%][Progress:============================> 95%] [Cov:================================>  92%][Progress:============================> 95%] [Cov:================================>  92%][Progress:============================> 95%] [Cov:================================>  92%][Progress:============================> 95%] [Cov:================================>  92%][Progress:============================> 95%] [Cov:================================>  92%][Progress:============================> 96%] [Cov:================================>  92%][Progress:============================> 96%] [Cov:================================>  92%][Progress:============================> 96%] [Cov:================================>  92%][Progress:============================> 96%] [Cov:================================>  92%][Progress:============================> 96%] [Cov:================================>  92%][Progress:============================> 96%] [Cov:================================>  92%][Progress:============================> 96%] [Cov:================================>  92%][Progress:============================> 96%] [Cov:================================>  92%][Progress:============================> 96%] [Cov:================================>  92%][Progress:============================> 96%] [Cov:================================>  92%][Progress:============================> 96%] [Cov:================================>  92%][Progress:============================> 96%] [Cov:================================>  92%][Progress:============================> 96%] [Cov:================================>  92%][Progress:============================> 96%] [Cov:================================>  92%][Progress:============================> 96%] [Cov:================================>  92%][Progress:============================> 96%] [Cov:================================>  92%][Progress:============================> 96%] [Cov:================================>  92%][Progress:============================> 96%] [Cov:================================>  92%][Progress:=============================>97%] [Cov:================================>  92%][Progress:=============================>97%] [Cov:================================>  92%][Progress:=============================>97%] [Cov:================================>  92%][Progress:=============================>97%] [Cov:================================>  92%][Progress:=============================>97%] [Cov:================================>  92%][Progress:=============================>97%] [Cov:================================>  92%][Progress:=============================>97%] [Cov:================================>  92%][Progress:=============================>97%] [Cov:================================>  92%][Progress:=============================>97%] [Cov:================================>  92%][Progress:=============================>97%] [Cov:================================>  92%][Progress:=============================>97%] [Cov:================================>  92%][Progress:=============================>97%] [Cov:================================>  92%][Progress:=============================>97%] [Cov:================================>  92%][Progress:=============================>97%] [Cov:================================>  92%][Progress:=============================>97%] [Cov:================================>  92%][Progress:=============================>97%] [Cov:================================>  92%][Progress:=============================>98%] [Cov:================================>  92%][Progress:=============================>98%] [Cov:================================>  92%][Progress:=============================>98%] [Cov:================================>  92%][Progress:=============================>98%] [Cov:================================>  92%][Progress:=============================>98%] [Cov:================================>  92%][Progress:=============================>98%] [Cov:================================>  92%][Progress:=============================>98%] [Cov:================================>  92%][Progress:=============================>98%] [Cov:================================>  92%][Progress:=============================>98%] [Cov:================================>  92%][Progress:=============================>98%] [Cov:================================>  92%][Progress:=============================>98%] [Cov:================================>  92%][Progress:=============================>98%] [Cov:================================>  92%][Progress:=============================>98%] [Cov:================================>  92%][Progress:=============================>98%] [Cov:================================>  92%][Progress:=============================>98%] [Cov:================================>  92%][Progress:=============================>99%] [Cov:================================>  92%][Progress:=============================>99%] [Cov:================================>  92%][Progress:=============================>99%] [Cov:================================>  92%][Progress:=============================>99%] [Cov:================================>  92%][Progress:=============================>99%] [Cov:================================>  92%][Progress:=============================>99%] [Cov:================================>  92%][Progress:=============================>99%] [Cov:================================>  92%][Progress:=============================>99%] [Cov:================================>  92%][Progress:=============================>99%] [Cov:================================>  92%][Progress:=============================>99%] [Cov:================================>  92%][Progress:=============================>99%] [Cov:================================>  92%][Progress:=============================>99%] [Cov:================================>  92%][Progress:=============================>99%] [Cov:================================>  92%][Progress:==============================100%] [Cov:================================>  92%][Progress:==============================100%] [Cov:================================>  92%][Progress:==============================100%] [Cov:================================>  92%][Progress:==============================100%] [Cov:================================>  92%][Progress:==============================100%] [Cov:================================>  92%][Progress:==============================100%] [Cov:================================>  92%][Progress:==============================100%] [Cov:================================>  92%][Progress:==============================100%] [Cov:================================>  92%][Progress:==============================100%] [Cov:================================>  92%]
* Search finished after 201s and 1682 generations, 917031 statements, best individual has fitness: 21.0
* Generated before the refinement 27 tests with total length 129
statement is: mock(interface org.objectweb.asm.jip.MethodVisitor) type is: class org.evosuite.testcase.statements.FunctionalMockStatement return type interface org.objectweb.asm.jip.MethodVisitor
statement code is: MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer())
statement is: org.objectweb.asm.jip.commons.LocalVariablesSorter(ILjava/lang/String;Lorg/objectweb/asm/jip/MethodVisitor;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.objectweb.asm.jip.commons.LocalVariablesSorter
statement code is: LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(2, "pI)@(2x\"EUkpwB", arg2)
statement is: org.objectweb.asm.jip.Label()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.objectweb.asm.jip.Label
statement code is: Label label = new Label()
statement is: visitLocalVariable(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/objectweb/asm/jip/Label;Lorg/objectweb/asm/jip/Label;I)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: localVariablesSorter.visitLocalVariable("pI)@(2x\"EUkpwB", "Z", "Eqv.,#A~\"*Ciuy", arg4, arg4, 1)
test data is: MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer());
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(2, "pI)@(2x\"EUkpwB", methodVisitor);
Label label = new Label();
localVariablesSorter.visitLocalVariable("pI)@(2x\"EUkpwB", "Z", "Eqv.,#A~\"*Ciuy", label, label, 1);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer());
        LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(2, "myInt", methodVisitor);
        Label label = new Label();
        localVariablesSorter.visitLocalVariable("myInt", "I", "myInteger", label, label, 1);
    }
}
statement is: MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer()), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: mock(MethodVisitor.class, new ViolatedAssumptionAnswer()) target is:  method is: mock(java.lang.Class,<unknown>)
target name is: MethodVisitor argument is: MethodVisitor.class
Matched Method is: mock(interface org.objectweb.asm.jip.MethodVisitor)
statement is: LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(2, "myInt", methodVisitor), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Label label = new Label(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: localVariablesSorter.visitLocalVariable("myInt", "I", "myInteger", label, label, 1), class spoon.support.reflect.code.CtInvocationImpl
invocation is: localVariablesSorter.visitLocalVariable("myInt", "I", "myInteger", label, label, 1) target is: localVariablesSorter method is: visitLocalVariable(java.lang.String,java.lang.String,java.lang.String,Label,Label,int)
source statement: org.objectweb.asm.jip.commons.LocalVariablesSorter(ILjava/lang/String;Lorg/objectweb/asm/jip/MethodVisitor;)V callee: VariableReference: Statement 1, type org.objectweb.asm.jip.commons.LocalVariablesSorterindex is: 3
Matched Method is: visitLocalVariable(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/objectweb/asm/jip/Label;Lorg/objectweb/asm/jip/Label;I)V
TestCase is: MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer());
int _int = 2;
String string = "myInt";
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(_int, string, methodVisitor);
Label label = new Label();
String string = "myInt";
String string = "I";
String string = "myInteger";
int _int = 1;
((LocalVariablesSorter) _int).visitLocalVariable(string, string, string, label, label, _int);

statement is: mock(interface org.objectweb.asm.jip.MethodVisitor) type is: class org.evosuite.testcase.statements.FunctionalMockStatement return type interface org.objectweb.asm.jip.MethodVisitor
statement code is: MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer())
statement is: org.objectweb.asm.jip.commons.LocalVariablesSorter(ILjava/lang/String;Lorg/objectweb/asm/jip/MethodVisitor;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.objectweb.asm.jip.commons.LocalVariablesSorter
statement code is: LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(2, "pI)@(2x\"EUkpwB", arg2)
statement is: visitVarInsn(II)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: localVariablesSorter.visitVarInsn(21, 5)
test data is: MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer());
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(2, "pI)@(2x\"EUkpwB", methodVisitor);
localVariablesSorter.visitVarInsn(21, 5);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer());
        LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(2, "pI)@(2x\"EUkp\u007fwB", methodVisitor);
        localVariablesSorter.visitVarInsn(21, 5);
        // Test data
        int[] inputArray = new int[]{ 3, 4, 5, 7, 8 };// Input array to be sorted

        int[] expectedOutput = new int[]{ 3, 4, 5, 7, 8 };// Expected output after sorting }}

    }
}
statement is: MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer()), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: mock(MethodVisitor.class, new ViolatedAssumptionAnswer()) target is:  method is: mock(java.lang.Class,<unknown>)
target name is: MethodVisitor argument is: MethodVisitor.class
Matched Method is: mock(interface org.objectweb.asm.jip.MethodVisitor)
statement is: LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(2, "pI)@(2x\"EUkp\u007fwB", methodVisitor), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: localVariablesSorter.visitVarInsn(21, 5), class spoon.support.reflect.code.CtInvocationImpl
invocation is: localVariablesSorter.visitVarInsn(21, 5) target is: localVariablesSorter method is: visitVarInsn(int,int)
source statement: org.objectweb.asm.jip.commons.LocalVariablesSorter(ILjava/lang/String;Lorg/objectweb/asm/jip/MethodVisitor;)V callee: VariableReference: Statement 1, type org.objectweb.asm.jip.commons.LocalVariablesSorterindex is: 3
Matched Method is: visitVarInsn(II)V
statement is: // Test data
int[] inputArray = new int[]{ 3, 4, 5, 7, 8 }// Input array to be sorted
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
statement is: int[] expectedOutput = new int[]{ 3, 4, 5, 7, 8 }// Expected output after sorting }}
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
TestCase is: MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer());
int _int = 2;
String string = "pI)@(2x\"EUkpwB";
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(_int, string, methodVisitor);
int _int = 21;
int _int = 5;
((LocalVariablesSorter) _int).visitVarInsn(_int, _int);

statement is: mock(interface org.objectweb.asm.jip.MethodVisitor) type is: class org.evosuite.testcase.statements.FunctionalMockStatement return type interface org.objectweb.asm.jip.MethodVisitor
statement code is: MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer())
statement is: org.objectweb.asm.jip.commons.LocalVariablesSorter(ILjava/lang/String;Lorg/objectweb/asm/jip/MethodVisitor;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.objectweb.asm.jip.commons.LocalVariablesSorter
statement code is: LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(1, "pI)@(2x\"EUkpwB", arg2)
statement is: visitVarInsn(II)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: localVariablesSorter.visitVarInsn(23, 9)
test data is: MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer());
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(1, "pI)@(2x\"EUkpwB", methodVisitor);
localVariablesSorter.visitVarInsn(23, 9);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer());
        LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(1, "pI)@(2x\"EUkp\u007fwB", methodVisitor);
        localVariablesSorter.visitVarInsn(23, 9);
    }
}
statement is: MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer()), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: mock(MethodVisitor.class, new ViolatedAssumptionAnswer()) target is:  method is: mock(java.lang.Class,<unknown>)
target name is: MethodVisitor argument is: MethodVisitor.class
Matched Method is: mock(interface org.objectweb.asm.jip.MethodVisitor)
statement is: LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(1, "pI)@(2x\"EUkp\u007fwB", methodVisitor), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: localVariablesSorter.visitVarInsn(23, 9), class spoon.support.reflect.code.CtInvocationImpl
invocation is: localVariablesSorter.visitVarInsn(23, 9) target is: localVariablesSorter method is: visitVarInsn(int,int)
source statement: org.objectweb.asm.jip.commons.LocalVariablesSorter(ILjava/lang/String;Lorg/objectweb/asm/jip/MethodVisitor;)V callee: VariableReference: Statement 1, type org.objectweb.asm.jip.commons.LocalVariablesSorterindex is: 3
Matched Method is: visitVarInsn(II)V
TestCase is: MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer());
int _int = 1;
String string = "pI)@(2x\"EUkpwB";
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(_int, string, methodVisitor);
int _int = 23;
int _int = 9;
((LocalVariablesSorter) _int).visitVarInsn(_int, _int);

statement is: mock(interface org.objectweb.asm.jip.MethodVisitor) type is: class org.evosuite.testcase.statements.FunctionalMockStatement return type interface org.objectweb.asm.jip.MethodVisitor
statement code is: MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer())
statement is: org.objectweb.asm.jip.commons.LocalVariablesSorter(ILjava/lang/String;Lorg/objectweb/asm/jip/MethodVisitor;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.objectweb.asm.jip.commons.LocalVariablesSorter
statement code is: LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(1, "pI)@(2x\"EUkpwB", arg2)
statement is: visitVarInsn(II)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: localVariablesSorter.visitVarInsn(24, 9)
test data is: MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer());
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(1, "pI)@(2x\"EUkpwB", methodVisitor);
localVariablesSorter.visitVarInsn(24, 9);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer());
        LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(1, "pI)@(2x\"EUkp\u007fwB", methodVisitor);
        localVariablesSorter.visitVarInsn(24, 9);
    }
}
statement is: MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer()), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: mock(MethodVisitor.class, new ViolatedAssumptionAnswer()) target is:  method is: mock(java.lang.Class,<unknown>)
target name is: MethodVisitor argument is: MethodVisitor.class
Matched Method is: mock(interface org.objectweb.asm.jip.MethodVisitor)
statement is: LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(1, "pI)@(2x\"EUkp\u007fwB", methodVisitor), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: localVariablesSorter.visitVarInsn(24, 9), class spoon.support.reflect.code.CtInvocationImpl
invocation is: localVariablesSorter.visitVarInsn(24, 9) target is: localVariablesSorter method is: visitVarInsn(int,int)
source statement: org.objectweb.asm.jip.commons.LocalVariablesSorter(ILjava/lang/String;Lorg/objectweb/asm/jip/MethodVisitor;)V callee: VariableReference: Statement 1, type org.objectweb.asm.jip.commons.LocalVariablesSorterindex is: 3
Matched Method is: visitVarInsn(II)V
TestCase is: MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer());
int _int = 1;
String string = "pI)@(2x\"EUkpwB";
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(_int, string, methodVisitor);
int _int = 24;
int _int = 9;
((LocalVariablesSorter) _int).visitVarInsn(_int, _int);

statement is: mock(interface org.objectweb.asm.jip.MethodVisitor) type is: class org.evosuite.testcase.statements.FunctionalMockStatement return type interface org.objectweb.asm.jip.MethodVisitor
statement code is: MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer())
statement is: org.objectweb.asm.jip.commons.LocalVariablesSorter(ILjava/lang/String;Lorg/objectweb/asm/jip/MethodVisitor;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.objectweb.asm.jip.commons.LocalVariablesSorter
statement code is: LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(2, "pI)@(2x\"EUkpwB", arg2)
statement is: visitVarInsn(II)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: localVariablesSorter.visitVarInsn(54, (-1527))
test data is: MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer());
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(2, "pI)@(2x\"EUkpwB", methodVisitor);
localVariablesSorter.visitVarInsn(54, (-1527));

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer());
        LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(2, "pI)@(2x\"EUkp\u007fwB", methodVisitor);
        localVariablesSorter.visitVarInsn(54, -1527);
    }
}
statement is: MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer()), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: mock(MethodVisitor.class, new ViolatedAssumptionAnswer()) target is:  method is: mock(java.lang.Class,<unknown>)
target name is: MethodVisitor argument is: MethodVisitor.class
Matched Method is: mock(interface org.objectweb.asm.jip.MethodVisitor)
statement is: LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(2, "pI)@(2x\"EUkp\u007fwB", methodVisitor), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: localVariablesSorter.visitVarInsn(54, -1527), class spoon.support.reflect.code.CtInvocationImpl
invocation is: localVariablesSorter.visitVarInsn(54, -1527) target is: localVariablesSorter method is: visitVarInsn(int,int)
source statement: org.objectweb.asm.jip.commons.LocalVariablesSorter(ILjava/lang/String;Lorg/objectweb/asm/jip/MethodVisitor;)V callee: VariableReference: Statement 1, type org.objectweb.asm.jip.commons.LocalVariablesSorterindex is: 3
Matched Method is: visitVarInsn(II)V
i 1 Parameters size() 1 Num of Method Parameters: 2
TestCase is: MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer());
int _int = 2;
String string = "pI)@(2x\"EUkpwB";
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(_int, string, methodVisitor);
int _int = 54;
int _int = null;
((LocalVariablesSorter) _int).visitVarInsn(_int, _int);

statement is: mock(interface org.objectweb.asm.jip.MethodVisitor) type is: class org.evosuite.testcase.statements.FunctionalMockStatement return type interface org.objectweb.asm.jip.MethodVisitor
statement code is: MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer())
statement is: org.objectweb.asm.jip.commons.LocalVariablesSorter(ILjava/lang/String;Lorg/objectweb/asm/jip/MethodVisitor;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.objectweb.asm.jip.commons.LocalVariablesSorter
statement code is: LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(2, "pI)@(2x\"EUkpwB", arg2)
statement is: visitVarInsn(II)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: localVariablesSorter.visitVarInsn(55, 66)
test data is: MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer());
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(2, "pI)@(2x\"EUkpwB", methodVisitor);
localVariablesSorter.visitVarInsn(55, 66);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer());
        LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(2, "pI)@(2x\"EUkp\u007fwB", methodVisitor);
        localVariablesSorter.visitVarInsn(ALOAD, -1);
    }
}
statement is: MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer()), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: mock(MethodVisitor.class, new ViolatedAssumptionAnswer()) target is:  method is: mock(java.lang.Class,<unknown>)
target name is: MethodVisitor argument is: MethodVisitor.class
Matched Method is: mock(interface org.objectweb.asm.jip.MethodVisitor)
statement is: LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(2, "pI)@(2x\"EUkp\u007fwB", methodVisitor), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: localVariablesSorter.visitVarInsn(ALOAD, -1), class spoon.support.reflect.code.CtInvocationImpl
invocation is: localVariablesSorter.visitVarInsn(ALOAD, -1) target is: localVariablesSorter method is: visitVarInsn(int)
source statement: org.objectweb.asm.jip.commons.LocalVariablesSorter(ILjava/lang/String;Lorg/objectweb/asm/jip/MethodVisitor;)V callee: VariableReference: Statement 1, type org.objectweb.asm.jip.commons.LocalVariablesSorterindex is: 3
Matched Method is: visitVarInsn(II)V
i 0 Parameters size() 0 Num of Method Parameters: 2
i 1 Parameters size() 0 Num of Method Parameters: 2
TestCase is: MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer());
int _int = 2;
String string = "pI)@(2x\"EUkpwB";
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(_int, string, methodVisitor);
int _int = null;
int _int = null;
((LocalVariablesSorter) _int).visitVarInsn(_int, _int);

statement is: mock(interface org.objectweb.asm.jip.MethodVisitor) type is: class org.evosuite.testcase.statements.FunctionalMockStatement return type interface org.objectweb.asm.jip.MethodVisitor
statement code is: MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer())
statement is: org.objectweb.asm.jip.commons.LocalVariablesSorter(ILjava/lang/String;Lorg/objectweb/asm/jip/MethodVisitor;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.objectweb.asm.jip.commons.LocalVariablesSorter
statement code is: LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(23, "pI)@(2x\"EUkpwB", arg2)
statement is: visitVarInsn(II)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: localVariablesSorter.visitVarInsn(56, 2926)
test data is: MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer());
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(23, "pI)@(2x\"EUkpwB", methodVisitor);
localVariablesSorter.visitVarInsn(56, 2926);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer());
        LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(23, "pI)@(2x\"EUkp\u007fwB", methodVisitor);
        localVariablesSorter.visitVarInsn(56, 100);
    }
}
statement is: MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer()), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: mock(MethodVisitor.class, new ViolatedAssumptionAnswer()) target is:  method is: mock(java.lang.Class,<unknown>)
target name is: MethodVisitor argument is: MethodVisitor.class
Matched Method is: mock(interface org.objectweb.asm.jip.MethodVisitor)
statement is: LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(23, "pI)@(2x\"EUkp\u007fwB", methodVisitor), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: localVariablesSorter.visitVarInsn(56, 100), class spoon.support.reflect.code.CtInvocationImpl
invocation is: localVariablesSorter.visitVarInsn(56, 100) target is: localVariablesSorter method is: visitVarInsn(int,int)
source statement: org.objectweb.asm.jip.commons.LocalVariablesSorter(ILjava/lang/String;Lorg/objectweb/asm/jip/MethodVisitor;)V callee: VariableReference: Statement 1, type org.objectweb.asm.jip.commons.LocalVariablesSorterindex is: 3
Matched Method is: visitVarInsn(II)V
TestCase is: MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer());
int _int = 23;
String string = "pI)@(2x\"EUkpwB";
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(_int, string, methodVisitor);
int _int = 56;
int _int = 100;
((LocalVariablesSorter) _int).visitVarInsn(_int, _int);

statement is: mock(interface org.objectweb.asm.jip.MethodVisitor) type is: class org.evosuite.testcase.statements.FunctionalMockStatement return type interface org.objectweb.asm.jip.MethodVisitor
statement code is: MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer())
statement is: org.objectweb.asm.jip.commons.LocalVariablesSorter(ILjava/lang/String;Lorg/objectweb/asm/jip/MethodVisitor;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.objectweb.asm.jip.commons.LocalVariablesSorter
statement code is: LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(2, "pI)@(2x\"EUkpwB", arg2)
statement is: visitVarInsn(II)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: localVariablesSorter.visitVarInsn(57, (-65))
test data is: MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer());
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(2, "pI)@(2x\"EUkpwB", methodVisitor);
localVariablesSorter.visitVarInsn(57, (-65));

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer());
        LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(2, "pI)@(2x\"EUkp\u007fwB", methodVisitor);
        localVariablesSorter.visitVarInsn(57, -65);// visiting a variable with index -65 }}

    }
}
statement is: MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer()), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: mock(MethodVisitor.class, new ViolatedAssumptionAnswer()) target is:  method is: mock(java.lang.Class,<unknown>)
target name is: MethodVisitor argument is: MethodVisitor.class
Matched Method is: mock(interface org.objectweb.asm.jip.MethodVisitor)
statement is: LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(2, "pI)@(2x\"EUkp\u007fwB", methodVisitor), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: localVariablesSorter.visitVarInsn(57, -65)// visiting a variable with index -65 }}
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: localVariablesSorter.visitVarInsn(57, -65)// visiting a variable with index -65 }}
 target is: localVariablesSorter method is: visitVarInsn(int,int)
source statement: org.objectweb.asm.jip.commons.LocalVariablesSorter(ILjava/lang/String;Lorg/objectweb/asm/jip/MethodVisitor;)V callee: VariableReference: Statement 1, type org.objectweb.asm.jip.commons.LocalVariablesSorterindex is: 3
Matched Method is: visitVarInsn(II)V
i 1 Parameters size() 1 Num of Method Parameters: 2
TestCase is: MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer());
int _int = 2;
String string = "pI)@(2x\"EUkpwB";
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(_int, string, methodVisitor);
int _int = 57;
int _int = null;
((LocalVariablesSorter) _int).visitVarInsn(_int, _int);

statement is: mock(interface org.objectweb.asm.jip.MethodVisitor) type is: class org.evosuite.testcase.statements.FunctionalMockStatement return type interface org.objectweb.asm.jip.MethodVisitor
statement code is: MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer())
statement is: org.objectweb.asm.jip.commons.LocalVariablesSorter(ILjava/lang/String;Lorg/objectweb/asm/jip/MethodVisitor;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.objectweb.asm.jip.commons.LocalVariablesSorter
statement code is: LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(0, "pI)@(2x\"EUkpwB", arg2)
statement is: org.evosuite.testcase.statements.ArrayStatement@fbb102c8 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [Lorg.objectweb.asm.jip.Label;
statement code is: Label[] labelArray = new Label[6]
statement is: visitFrame(II[Ljava/lang/Object;I[Ljava/lang/Object;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: localVariablesSorter.visitFrame((-1), (-1702), (Object[]) null, 2, arg4)
test data is: MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer());
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(0, "pI)@(2x\"EUkpwB", methodVisitor);
Label[] labelArray = new Label[6];
localVariablesSorter.visitFrame((-1), (-1702), (Object[]) null, 2, labelArray);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer());
        LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(0, "This is a string literal used as an input value", methodVisitor);
        Label[] labelArray = new Label[6];
        localVariablesSorter.visitFrame(-1702, 2, ((Object[]) (null)), labelArray);
    }
}
statement is: MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer()), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: mock(MethodVisitor.class, new ViolatedAssumptionAnswer()) target is:  method is: mock(java.lang.Class,<unknown>)
target name is: MethodVisitor argument is: MethodVisitor.class
Matched Method is: mock(interface org.objectweb.asm.jip.MethodVisitor)
statement is: LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(0, "This is a string literal used as an input value", methodVisitor), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Label[] labelArray = new Label[6], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [6] Ct is: Label[] labelArray = new Label[6] isAssignment: false Array: new Label[6] Elements: []
lengths: [6] [6]
Their type are: class [Lorg.objectweb.asm.jip.Label; Label[]
statement is: localVariablesSorter.visitFrame(-1702, 2, ((Object[]) (null)), labelArray), class spoon.support.reflect.code.CtInvocationImpl
invocation is: localVariablesSorter.visitFrame(-1702, 2, ((Object[]) (null)), labelArray) target is: localVariablesSorter method is: visitFrame(int,int,java.lang.Object[],Label[])
TestCase is: MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer());
int _int = 0;
String string = "This is a string literal used as an input value";
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(_int, string, methodVisitor);
Label[] labelArray = new Label[6];

statement is: mock(interface org.objectweb.asm.jip.MethodVisitor) type is: class org.evosuite.testcase.statements.FunctionalMockStatement return type interface org.objectweb.asm.jip.MethodVisitor
statement code is: MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer())
statement is: org.objectweb.asm.jip.commons.LocalVariablesSorter(ILjava/lang/String;Lorg/objectweb/asm/jip/MethodVisitor;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.objectweb.asm.jip.commons.LocalVariablesSorter
statement code is: LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(2, "pI)@(2x\"EUkpwB", arg2)
statement is: org.evosuite.testcase.statements.ArrayStatement@e9e76e18 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [Ljava.lang.Object;
statement code is: Object[] objectArray = new Object[7]
statement is: visitFrame(II[Ljava/lang/Object;I[Ljava/lang/Object;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: localVariablesSorter.visitFrame(1, (-1463), arg4, 0, arg4)
test data is: MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer());
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(2, "pI)@(2x\"EUkpwB", methodVisitor);
Object[] objectArray = new Object[7];
localVariablesSorter.visitFrame(1, (-1463), objectArray, 0, objectArray);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer());
        LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(2, "pI)@(2x\"EUkp\u007fwB", methodVisitor);
        Object[] objectArray = new Object[7];
        objectArray[0] = 1;// int value

        objectArray[1] = 3.14;// double value

        objectArray[2] = "hello";// String value

        objectArray[3] = 'a';// char value

        localVariablesSorter.visitFrame(1, -1463, objectArray, 0, objectArray);
    }
}
statement is: MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer()), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: mock(MethodVisitor.class, new ViolatedAssumptionAnswer()) target is:  method is: mock(java.lang.Class,<unknown>)
target name is: MethodVisitor argument is: MethodVisitor.class
Matched Method is: mock(interface org.objectweb.asm.jip.MethodVisitor)
statement is: LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(2, "pI)@(2x\"EUkp\u007fwB", methodVisitor), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Object[] objectArray = new Object[7], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [7] Ct is: Object[] objectArray = new Object[7] isAssignment: false Array: new Object[7] Elements: []
lengths: [7] [7]
Their type are: class [Ljava.lang.Object; Object[]
statement is: objectArray[0] = 1// int value
, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : objectArray[0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl Object Assignment:1 Ct is: objectArray[0] = 1// int value

target : objectArray class spoon.support.reflect.code.CtLiteralImpl
statement is: objectArray[1] = 3.14// double value
, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : objectArray[1] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl Object Assignment:3.14 Ct is: objectArray[1] = 3.14// double value

target : objectArray class spoon.support.reflect.code.CtLiteralImpl
statement is: objectArray[2] = "hello"// String value
, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : objectArray[2] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl Object Assignment:"hello" Ct is: objectArray[2] = "hello"// String value

target : objectArray class spoon.support.reflect.code.CtLiteralImpl
statement is: objectArray[3] = 'a'// char value
, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : objectArray[3] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl Object Assignment:'a' Ct is: objectArray[3] = 'a'// char value

target : objectArray class spoon.support.reflect.code.CtLiteralImpl
statement is: localVariablesSorter.visitFrame(1, -1463, objectArray, 0, objectArray), class spoon.support.reflect.code.CtInvocationImpl
invocation is: localVariablesSorter.visitFrame(1, -1463, objectArray, 0, objectArray) target is: localVariablesSorter method is: visitFrame(int,int,java.lang.Object[],int,java.lang.Object[])
source statement: org.objectweb.asm.jip.commons.LocalVariablesSorter(ILjava/lang/String;Lorg/objectweb/asm/jip/MethodVisitor;)V callee: VariableReference: Statement 1, type org.objectweb.asm.jip.commons.LocalVariablesSorterindex is: 3
Matched Method is: visitFrame(II[Ljava/lang/Object;I[Ljava/lang/Object;)V
i 4 Parameters size() 4 Num of Method Parameters: 5
TestCase is: MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer());
int _int = 2;
String string = "pI)@(2x\"EUkpwB";
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(_int, string, methodVisitor);
Object[] objectArray = new Object[7];
int _int = 1;
int _int = 0;
Object[] objectArray = null;
((LocalVariablesSorter) _int).visitFrame(_int, (int) objectArray, (Object[]) _int, (int) objectArray, objectArray);

statement is: mock(interface org.objectweb.asm.jip.MethodVisitor) type is: class org.evosuite.testcase.statements.FunctionalMockStatement return type interface org.objectweb.asm.jip.MethodVisitor
statement code is: MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer())
statement is: org.evosuite.testcase.statements.FieldStatement@4797d9f5 type is: class org.evosuite.testcase.statements.FieldStatement return type class org.objectweb.asm.jip.Type
statement code is: Type type = Type.DOUBLE_TYPE
statement is: org.objectweb.asm.jip.commons.LocalVariablesSorter(ILjava/lang/String;Lorg/objectweb/asm/jip/MethodVisitor;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.objectweb.asm.jip.commons.LocalVariablesSorter
statement code is: LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(1, "p)I)@(2x\"EUkpwB", arg2)
statement is: newLocal(Lorg/objectweb/asm/jip/Type;)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int newLocal = localVariablesSorter.newLocal(arg0)
statement is: visitIincInsn(II)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: localVariablesSorter.visitIincInsn(6, 8)
statement is: visitFrame(II[Ljava/lang/Object;I[Ljava/lang/Object;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: localVariablesSorter.visitFrame((-1), 0, (Object[]) null, 5, (Object[]) null)
test data is: MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer());
Type type = Type.DOUBLE_TYPE;
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(1, "p)I)@(2x\"EUkpwB", methodVisitor);
localVariablesSorter.newLocal(type);
localVariablesSorter.visitIincInsn(6, 8);
localVariablesSorter.visitFrame((-1), 0, (Object[]) null, 5, (Object[]) null);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer());
        Type type = Type.DOUBLE_TYPE;
        LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(1, "p)I)@(2x\"EUkp\u007fwB", methodVisitor);
        localVariablesSorter.newLocal(type);
        localVariablesSorter.visitIincInsn(6, 8);
        localVariablesSorter.visitFrame(-1, 0, ((Object[]) (null)), 5, ((Object[]) (null)));
    }
}
statement is: MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer()), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: mock(MethodVisitor.class, new ViolatedAssumptionAnswer()) target is:  method is: mock(java.lang.Class,<unknown>)
target name is: MethodVisitor argument is: MethodVisitor.class
Matched Method is: mock(interface org.objectweb.asm.jip.MethodVisitor)
statement is: Type type = Type.DOUBLE_TYPE, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: Type.DOUBLE_TYPE is Type
CtField is: public static org.objectweb.asm.jip.Type org.objectweb.asm.jip.Type.DOUBLE_TYPE Type DOUBLE_TYPE
statement is: LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(1, "p)I)@(2x\"EUkp\u007fwB", methodVisitor), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: localVariablesSorter.newLocal(type), class spoon.support.reflect.code.CtInvocationImpl
invocation is: localVariablesSorter.newLocal(type) target is: localVariablesSorter method is: newLocal(Type)
source statement: org.objectweb.asm.jip.commons.LocalVariablesSorter(ILjava/lang/String;Lorg/objectweb/asm/jip/MethodVisitor;)V callee: VariableReference: Statement 2, type org.objectweb.asm.jip.commons.LocalVariablesSorterindex is: 4
Matched Method is: newLocal(Lorg/objectweb/asm/jip/Type;)I
statement is: localVariablesSorter.visitIincInsn(6, 8), class spoon.support.reflect.code.CtInvocationImpl
invocation is: localVariablesSorter.visitIincInsn(6, 8) target is: localVariablesSorter method is: visitIincInsn(int,int)
source statement: org.objectweb.asm.jip.commons.LocalVariablesSorter(ILjava/lang/String;Lorg/objectweb/asm/jip/MethodVisitor;)V callee: VariableReference: Statement 2, type org.objectweb.asm.jip.commons.LocalVariablesSorterindex is: 4
Matched Method is: visitIincInsn(II)V
statement is: localVariablesSorter.visitFrame(-1, 0, ((Object[]) (null)), 5, ((Object[]) (null))), class spoon.support.reflect.code.CtInvocationImpl
invocation is: localVariablesSorter.visitFrame(-1, 0, ((Object[]) (null)), 5, ((Object[]) (null))) target is: localVariablesSorter method is: visitFrame(int,int,java.lang.Object[],int,java.lang.Object[])
source statement: org.objectweb.asm.jip.commons.LocalVariablesSorter(ILjava/lang/String;Lorg/objectweb/asm/jip/MethodVisitor;)V callee: VariableReference: Statement 2, type org.objectweb.asm.jip.commons.LocalVariablesSorterindex is: 4
Matched Method is: visitFrame(II[Ljava/lang/Object;I[Ljava/lang/Object;)V
i 2 Parameters size() 2 Num of Method Parameters: 5
i 3 Parameters size() 2 Num of Method Parameters: 5
i 4 Parameters size() 2 Num of Method Parameters: 5
TestCase is: MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer());
Type type = Type.DOUBLE_TYPE;
int _int = 1;
String string = "p)I)@(2x\"EUkpwB";
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(_int, string, methodVisitor);
((LocalVariablesSorter) _int).newLocal(type);
int _int = 6;
int _int = 8;
((LocalVariablesSorter) _int).visitIincInsn(_int, _int);
int _int = 0;
int _int = 5;
Object[] objectArray = null;
int _int = null;
Object[] objectArray = null;
((LocalVariablesSorter) _int).visitFrame(_int, _int, objectArray, _int, objectArray);

statement is: mock(interface org.objectweb.asm.jip.MethodVisitor) type is: class org.evosuite.testcase.statements.FunctionalMockStatement return type interface org.objectweb.asm.jip.MethodVisitor
statement code is: MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer())
statement is: org.evosuite.testcase.statements.FieldStatement@354b686 type is: class org.evosuite.testcase.statements.FieldStatement return type class org.objectweb.asm.jip.Type
statement code is: Type type = Type.LONG_TYPE
statement is: org.objectweb.asm.jip.commons.LocalVariablesSorter(ILjava/lang/String;Lorg/objectweb/asm/jip/MethodVisitor;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.objectweb.asm.jip.commons.LocalVariablesSorter
statement code is: LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(1, "p)I)@(2x\"EUkpwB", arg2)
statement is: newLocal(Lorg/objectweb/asm/jip/Type;)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int newLocal = localVariablesSorter.newLocal(arg0)
statement is: visitIincInsn(II)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: localVariablesSorter.visitIincInsn(6, 8)
statement is: visitFrame(II[Ljava/lang/Object;I[Ljava/lang/Object;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: localVariablesSorter.visitFrame((-1), 0, (Object[]) null, 5, (Object[]) null)
test data is: MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer());
Type type = Type.LONG_TYPE;
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(1, "p)I)@(2x\"EUkpwB", methodVisitor);
localVariablesSorter.newLocal(type);
localVariablesSorter.visitIincInsn(6, 8);
localVariablesSorter.visitFrame((-1), 0, (Object[]) null, 5, (Object[]) null);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer());
        Type type = Type.LONG_TYPE;
        LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(1, "p)I)@(2x\"EUkp\u007fwB", methodVisitor);
        localVariablesSorter.newLocal(type);
        localVariablesSorter.visitIincInsn(6, 8);
        localVariablesSorter.visitFrame(-1, 0, ((Object[]) (null)), 5, ((Object[]) (null)));
    }
}
statement is: MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer()), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: mock(MethodVisitor.class, new ViolatedAssumptionAnswer()) target is:  method is: mock(java.lang.Class,<unknown>)
target name is: MethodVisitor argument is: MethodVisitor.class
Matched Method is: mock(interface org.objectweb.asm.jip.MethodVisitor)
statement is: Type type = Type.LONG_TYPE, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: Type.LONG_TYPE is Type
CtField is: public static org.objectweb.asm.jip.Type org.objectweb.asm.jip.Type.LONG_TYPE Type LONG_TYPE
statement is: LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(1, "p)I)@(2x\"EUkp\u007fwB", methodVisitor), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: localVariablesSorter.newLocal(type), class spoon.support.reflect.code.CtInvocationImpl
invocation is: localVariablesSorter.newLocal(type) target is: localVariablesSorter method is: newLocal(Type)
source statement: org.objectweb.asm.jip.commons.LocalVariablesSorter(ILjava/lang/String;Lorg/objectweb/asm/jip/MethodVisitor;)V callee: VariableReference: Statement 2, type org.objectweb.asm.jip.commons.LocalVariablesSorterindex is: 4
Matched Method is: newLocal(Lorg/objectweb/asm/jip/Type;)I
statement is: localVariablesSorter.visitIincInsn(6, 8), class spoon.support.reflect.code.CtInvocationImpl
invocation is: localVariablesSorter.visitIincInsn(6, 8) target is: localVariablesSorter method is: visitIincInsn(int,int)
source statement: org.objectweb.asm.jip.commons.LocalVariablesSorter(ILjava/lang/String;Lorg/objectweb/asm/jip/MethodVisitor;)V callee: VariableReference: Statement 2, type org.objectweb.asm.jip.commons.LocalVariablesSorterindex is: 4
Matched Method is: visitIincInsn(II)V
statement is: localVariablesSorter.visitFrame(-1, 0, ((Object[]) (null)), 5, ((Object[]) (null))), class spoon.support.reflect.code.CtInvocationImpl
invocation is: localVariablesSorter.visitFrame(-1, 0, ((Object[]) (null)), 5, ((Object[]) (null))) target is: localVariablesSorter method is: visitFrame(int,int,java.lang.Object[],int,java.lang.Object[])
source statement: org.objectweb.asm.jip.commons.LocalVariablesSorter(ILjava/lang/String;Lorg/objectweb/asm/jip/MethodVisitor;)V callee: VariableReference: Statement 2, type org.objectweb.asm.jip.commons.LocalVariablesSorterindex is: 4
Matched Method is: visitFrame(II[Ljava/lang/Object;I[Ljava/lang/Object;)V
i 2 Parameters size() 2 Num of Method Parameters: 5
i 3 Parameters size() 2 Num of Method Parameters: 5
i 4 Parameters size() 2 Num of Method Parameters: 5
TestCase is: MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer());
Type type = Type.LONG_TYPE;
int _int = 1;
String string = "p)I)@(2x\"EUkpwB";
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(_int, string, methodVisitor);
((LocalVariablesSorter) _int).newLocal(type);
int _int = 6;
int _int = 8;
((LocalVariablesSorter) _int).visitIincInsn(_int, _int);
int _int = 0;
int _int = 5;
Object[] objectArray = null;
int _int = null;
Object[] objectArray = null;
((LocalVariablesSorter) _int).visitFrame(_int, _int, objectArray, _int, objectArray);

statement is: mock(interface org.objectweb.asm.jip.MethodVisitor) type is: class org.evosuite.testcase.statements.FunctionalMockStatement return type interface org.objectweb.asm.jip.MethodVisitor
statement code is: MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer())
statement is: org.evosuite.testcase.statements.FieldStatement@4eb982e6 type is: class org.evosuite.testcase.statements.FieldStatement return type class org.objectweb.asm.jip.Type
statement code is: Type type = Type.SHORT_TYPE
statement is: org.objectweb.asm.jip.commons.LocalVariablesSorter(ILjava/lang/String;Lorg/objectweb/asm/jip/MethodVisitor;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.objectweb.asm.jip.commons.LocalVariablesSorter
statement code is: LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(1, "p)I)@(2x\"EUkpwB", arg2)
statement is: newLocal(Lorg/objectweb/asm/jip/Type;)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int newLocal = localVariablesSorter.newLocal(arg0)
statement is: visitIincInsn(II)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: localVariablesSorter.visitIincInsn(6, 8)
statement is: visitFrame(II[Ljava/lang/Object;I[Ljava/lang/Object;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: localVariablesSorter.visitFrame((-1), 0, (Object[]) null, 5, (Object[]) null)
test data is: MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer());
Type type = Type.SHORT_TYPE;
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(1, "p)I)@(2x\"EUkpwB", methodVisitor);
localVariablesSorter.newLocal(type);
localVariablesSorter.visitIincInsn(6, 8);
localVariablesSorter.visitFrame((-1), 0, (Object[]) null, 5, (Object[]) null);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer());
        Type type = Type.SHORT_TYPE;
        LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(1, "p)I)@(2x\"EUkp\u007fwB", methodVisitor);
        localVariablesSorter.newLocal(type);
        localVariablesSorter.visitIincInsn(6, 8);
        localVariablesSorter.visitFrame(-1, 0, ((Object[]) (null)), 5, ((Object[]) (null)));
        // Test data for "visitIincInsn" method
        Integer i = 6;
        Integer j = 8;
        localVariablesSorter.visitIincInsn(i, j);
        // Test data for "visitFrame" method
        Integer nLocal = -1;
        Integer nStack = 0;
        Object[] local = null;
        Object[] stack = null;
        localVariablesSorter.visitFrame(nLocal, nStack, local, 5, stack);
    }
}
statement is: MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer()), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: mock(MethodVisitor.class, new ViolatedAssumptionAnswer()) target is:  method is: mock(java.lang.Class,<unknown>)
target name is: MethodVisitor argument is: MethodVisitor.class
Matched Method is: mock(interface org.objectweb.asm.jip.MethodVisitor)
statement is: Type type = Type.SHORT_TYPE, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: Type.SHORT_TYPE is Type
CtField is: public static org.objectweb.asm.jip.Type org.objectweb.asm.jip.Type.SHORT_TYPE Type SHORT_TYPE
statement is: LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(1, "p)I)@(2x\"EUkp\u007fwB", methodVisitor), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: localVariablesSorter.newLocal(type), class spoon.support.reflect.code.CtInvocationImpl
invocation is: localVariablesSorter.newLocal(type) target is: localVariablesSorter method is: newLocal(Type)
source statement: org.objectweb.asm.jip.commons.LocalVariablesSorter(ILjava/lang/String;Lorg/objectweb/asm/jip/MethodVisitor;)V callee: VariableReference: Statement 2, type org.objectweb.asm.jip.commons.LocalVariablesSorterindex is: 4
Matched Method is: newLocal(Lorg/objectweb/asm/jip/Type;)I
statement is: localVariablesSorter.visitIincInsn(6, 8), class spoon.support.reflect.code.CtInvocationImpl
invocation is: localVariablesSorter.visitIincInsn(6, 8) target is: localVariablesSorter method is: visitIincInsn(int,int)
source statement: org.objectweb.asm.jip.commons.LocalVariablesSorter(ILjava/lang/String;Lorg/objectweb/asm/jip/MethodVisitor;)V callee: VariableReference: Statement 2, type org.objectweb.asm.jip.commons.LocalVariablesSorterindex is: 4
Matched Method is: visitIincInsn(II)V
statement is: localVariablesSorter.visitFrame(-1, 0, ((Object[]) (null)), 5, ((Object[]) (null))), class spoon.support.reflect.code.CtInvocationImpl
invocation is: localVariablesSorter.visitFrame(-1, 0, ((Object[]) (null)), 5, ((Object[]) (null))) target is: localVariablesSorter method is: visitFrame(int,int,java.lang.Object[],int,java.lang.Object[])
source statement: org.objectweb.asm.jip.commons.LocalVariablesSorter(ILjava/lang/String;Lorg/objectweb/asm/jip/MethodVisitor;)V callee: VariableReference: Statement 2, type org.objectweb.asm.jip.commons.LocalVariablesSorterindex is: 4
Matched Method is: visitFrame(II[Ljava/lang/Object;I[Ljava/lang/Object;)V
i 2 Parameters size() 2 Num of Method Parameters: 5
i 3 Parameters size() 2 Num of Method Parameters: 5
i 4 Parameters size() 2 Num of Method Parameters: 5
statement is: // Test data for "visitIincInsn" method
Integer i = 6, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: Integer j = 8, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: localVariablesSorter.visitIincInsn(i, j), class spoon.support.reflect.code.CtInvocationImpl
invocation is: localVariablesSorter.visitIincInsn(i, j) target is: localVariablesSorter method is: visitIincInsn(java.lang.Integer,java.lang.Integer)
source statement: org.objectweb.asm.jip.commons.LocalVariablesSorter(ILjava/lang/String;Lorg/objectweb/asm/jip/MethodVisitor;)V callee: VariableReference: Statement 2, type org.objectweb.asm.jip.commons.LocalVariablesSorterindex is: 4
Matched Method is: visitIincInsn(II)V
statement is: // Test data for "visitFrame" method
Integer nLocal = -1, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtUnaryOperatorImpl
IT HAS NOT BEEN SUPPORTED YET: -1
statement is: Integer nStack = 0, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: Object[] local = null, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: Object[] stack = null, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: localVariablesSorter.visitFrame(nLocal, nStack, local, 5, stack), class spoon.support.reflect.code.CtInvocationImpl
invocation is: localVariablesSorter.visitFrame(nLocal, nStack, local, 5, stack) target is: localVariablesSorter method is: visitFrame(java.lang.Integer,java.lang.Integer,java.lang.Object[],int,java.lang.Object[])
source statement: org.objectweb.asm.jip.commons.LocalVariablesSorter(ILjava/lang/String;Lorg/objectweb/asm/jip/MethodVisitor;)V callee: VariableReference: Statement 2, type org.objectweb.asm.jip.commons.LocalVariablesSorterindex is: 4
Matched Method is: visitFrame(II[Ljava/lang/Object;I[Ljava/lang/Object;)V
i 2 Parameters size() 2 Num of Method Parameters: 5
i 3 Parameters size() 2 Num of Method Parameters: 5
i 4 Parameters size() 2 Num of Method Parameters: 5
TestCase is: MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer());
Type type = Type.SHORT_TYPE;
int _int = 1;
String string = "p)I)@(2x\"EUkpwB";
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(_int, string, methodVisitor);
((LocalVariablesSorter) _int).newLocal(type);
int _int = 6;
int _int = 8;
((LocalVariablesSorter) _int).visitIincInsn(_int, _int);
int _int = 0;
int _int = 5;
Object[] objectArray = null;
int _int = null;
Object[] objectArray = null;
((LocalVariablesSorter) _int).visitFrame(_int, _int, objectArray, _int, objectArray);
int _int = 6;
int _int = 8;
((LocalVariablesSorter) _int).visitIincInsn(_int, _int);
int _int = 0;
int _int = 5;
Object[] objectArray = null;
int _int = null;
Object[] objectArray = null;
((LocalVariablesSorter) _int).visitFrame(_int, _int, objectArray, _int, objectArray);

statement is: org.objectweb.asm.jip.MethodAdapter(Lorg/objectweb/asm/jip/MethodVisitor;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.objectweb.asm.jip.MethodAdapter
statement code is: MethodAdapter methodAdapter = new MethodAdapter((MethodVisitor) null)
statement is: org.objectweb.asm.jip.commons.LocalVariablesSorter(ILjava/lang/String;Lorg/objectweb/asm/jip/MethodVisitor;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.objectweb.asm.jip.commons.LocalVariablesSorter
statement code is: LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(81, "pI)O2xEUkpwabB", arg2)
statement is: org.evosuite.testcase.statements.FieldStatement@a2d8bea type is: class org.evosuite.testcase.statements.FieldStatement return type class org.objectweb.asm.jip.Type
statement code is: Type type = Type.BYTE_TYPE
statement is: newLocal(Lorg/objectweb/asm/jip/Type;)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int newLocal = localVariablesSorter.newLocal(arg0)
test data is: MethodAdapter methodAdapter = new MethodAdapter((MethodVisitor) null);
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(81, "pI)O2xEUkpwabB", methodAdapter);
Type type = Type.BYTE_TYPE;
localVariablesSorter.newLocal(type);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        MethodAdapter methodAdapter = new MethodAdapter(((MethodVisitor) (null)));
        LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(81, "pI)O2xEUkpwabB", methodAdapter);
        Type type = Type.getObjectType("java.lang.String");
        localVariablesSorter.newLocal(type);
    }
}
statement is: MethodAdapter methodAdapter = new MethodAdapter(((MethodVisitor) (null))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(81, "pI)O2xEUkpwabB", methodAdapter), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Type type = Type.getObjectType("java.lang.String"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: Type.getObjectType("java.lang.String") target is: Type method is: getObjectType(java.lang.String)
statement is: localVariablesSorter.newLocal(type), class spoon.support.reflect.code.CtInvocationImpl
invocation is: localVariablesSorter.newLocal(type) target is: localVariablesSorter method is: newLocal(Type)
source statement: org.objectweb.asm.jip.commons.LocalVariablesSorter(ILjava/lang/String;Lorg/objectweb/asm/jip/MethodVisitor;)V callee: VariableReference: Statement 1, type org.objectweb.asm.jip.commons.LocalVariablesSorterindex is: 3
Matched Method is: newLocal(Lorg/objectweb/asm/jip/Type;)I
i 0 Parameters size() 0 Num of Method Parameters: 1
TestCase is: MethodAdapter methodAdapter = new MethodAdapter((MethodVisitor) null);
int _int = 81;
String string = "pI)O2xEUkpwabB";
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(_int, string, methodAdapter);
Type type = null;
((LocalVariablesSorter) _int).newLocal(type);

statement is: mock(interface org.objectweb.asm.jip.MethodVisitor) type is: class org.evosuite.testcase.statements.FunctionalMockStatement return type interface org.objectweb.asm.jip.MethodVisitor
statement code is: MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer())
statement is: org.evosuite.testcase.statements.FieldStatement@79503a9b type is: class org.evosuite.testcase.statements.FieldStatement return type class org.objectweb.asm.jip.Type
statement code is: Type type = Type.INT_TYPE
statement is: org.objectweb.asm.jip.commons.LocalVariablesSorter(ILjava/lang/String;Lorg/objectweb/asm/jip/MethodVisitor;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.objectweb.asm.jip.commons.LocalVariablesSorter
statement code is: LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(0, "pI)@(2x\"EUkpwB", arg2)
statement is: newLocal(Lorg/objectweb/asm/jip/Type;)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int newLocal = localVariablesSorter.newLocal(arg0)
test data is: MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer());
Type type = Type.INT_TYPE;
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(0, "pI)@(2x\"EUkpwB", methodVisitor);
localVariablesSorter.newLocal(type);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer());
        Type type = Type.INT_TYPE;
        LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(0, "pI)@(2x\"EUkp\u007fwB", methodVisitor);
        localVariablesSorter.newLocal(type);
    }
}
statement is: MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer()), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: mock(MethodVisitor.class, new ViolatedAssumptionAnswer()) target is:  method is: mock(java.lang.Class,<unknown>)
target name is: MethodVisitor argument is: MethodVisitor.class
Matched Method is: mock(interface org.objectweb.asm.jip.MethodVisitor)
statement is: Type type = Type.INT_TYPE, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: Type.INT_TYPE is Type
CtField is: public static org.objectweb.asm.jip.Type org.objectweb.asm.jip.Type.INT_TYPE Type INT_TYPE
statement is: LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(0, "pI)@(2x\"EUkp\u007fwB", methodVisitor), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: localVariablesSorter.newLocal(type), class spoon.support.reflect.code.CtInvocationImpl
invocation is: localVariablesSorter.newLocal(type) target is: localVariablesSorter method is: newLocal(Type)
source statement: org.objectweb.asm.jip.commons.LocalVariablesSorter(ILjava/lang/String;Lorg/objectweb/asm/jip/MethodVisitor;)V callee: VariableReference: Statement 2, type org.objectweb.asm.jip.commons.LocalVariablesSorterindex is: 4
Matched Method is: newLocal(Lorg/objectweb/asm/jip/Type;)I
TestCase is: MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer());
Type type = Type.INT_TYPE;
int _int = 0;
String string = "pI)@(2x\"EUkpwB";
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(_int, string, methodVisitor);
((LocalVariablesSorter) _int).newLocal(type);

statement is: mock(interface org.objectweb.asm.jip.MethodVisitor) type is: class org.evosuite.testcase.statements.FunctionalMockStatement return type interface org.objectweb.asm.jip.MethodVisitor
statement code is: MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer())
statement is: org.objectweb.asm.jip.commons.LocalVariablesSorter(ILjava/lang/String;Lorg/objectweb/asm/jip/MethodVisitor;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.objectweb.asm.jip.commons.LocalVariablesSorter
statement code is: LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(1, "pI)@(2x\"EUkpwB", arg2)
statement is: org.evosuite.testcase.statements.FieldStatement@ca1fbf46 type is: class org.evosuite.testcase.statements.FieldStatement return type class org.objectweb.asm.jip.Type
statement code is: Type type = Type.FLOAT_TYPE
statement is: newLocal(Lorg/objectweb/asm/jip/Type;)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int newLocal = localVariablesSorter.newLocal(arg0)
test data is: MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer());
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(1, "pI)@(2x\"EUkpwB", methodVisitor);
Type type = Type.FLOAT_TYPE;
localVariablesSorter.newLocal(type);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer());
        LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(1, "pI)@(2x\"EUkp\u007fwB", methodVisitor);
        Type type = Type.getObjectType("java.lang.String");
        localVariablesSorter.newLocal(type);
    }
}
statement is: MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer()), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: mock(MethodVisitor.class, new ViolatedAssumptionAnswer()) target is:  method is: mock(java.lang.Class,<unknown>)
target name is: MethodVisitor argument is: MethodVisitor.class
Matched Method is: mock(interface org.objectweb.asm.jip.MethodVisitor)
statement is: LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(1, "pI)@(2x\"EUkp\u007fwB", methodVisitor), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Type type = Type.getObjectType("java.lang.String"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: Type.getObjectType("java.lang.String") target is: Type method is: getObjectType(java.lang.String)
statement is: localVariablesSorter.newLocal(type), class spoon.support.reflect.code.CtInvocationImpl
invocation is: localVariablesSorter.newLocal(type) target is: localVariablesSorter method is: newLocal(Type)
source statement: org.objectweb.asm.jip.commons.LocalVariablesSorter(ILjava/lang/String;Lorg/objectweb/asm/jip/MethodVisitor;)V callee: VariableReference: Statement 1, type org.objectweb.asm.jip.commons.LocalVariablesSorterindex is: 3
Matched Method is: newLocal(Lorg/objectweb/asm/jip/Type;)I
i 0 Parameters size() 0 Num of Method Parameters: 1
TestCase is: MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer());
int _int = 1;
String string = "pI)@(2x\"EUkpwB";
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(_int, string, methodVisitor);
Type type = null;
((LocalVariablesSorter) _int).newLocal(type);

statement is: mock(interface org.objectweb.asm.jip.MethodVisitor) type is: class org.evosuite.testcase.statements.FunctionalMockStatement return type interface org.objectweb.asm.jip.MethodVisitor
statement code is: MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer())
statement is: org.objectweb.asm.jip.commons.LocalVariablesSorter(ILjava/lang/String;Lorg/objectweb/asm/jip/MethodVisitor;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.objectweb.asm.jip.commons.LocalVariablesSorter
statement code is: LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(3, "iV)@\u0002E,UkB", arg2)
statement is: getType(Ljava/lang/String;)Lorg/objectweb/asm/jip/Type; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.objectweb.asm.jip.Type
statement code is: Type type = Type.getType("[gk,h]RAuA")
statement is: newLocal(Lorg/objectweb/asm/jip/Type;)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int newLocal = localVariablesSorter.newLocal(arg0)
test data is: MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer());
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(3, "iV)@\u0002E,UkB", methodVisitor);
Type type = Type.getType("[gk,h]RAuA");
localVariablesSorter.newLocal(type);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        MethodVisitor mockedMethodVisitor = mock(MethodVisitor.class);
        LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(MAX_LOCAL_VARIABLES, "myMethod", mockedMethodVisitor);
        Type type = Type.getType("[gk,h]RAuA");
        localVariablesSorter.newLocal(type);
    }
}
statement is: MethodVisitor mockedMethodVisitor = mock(MethodVisitor.class), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: mock(MethodVisitor.class) target is:  method is: mock(java.lang.Class)
target name is: MethodVisitor argument is: MethodVisitor.class
Matched Method is: mock(interface org.objectweb.asm.jip.MethodVisitor)
statement is: LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(MAX_LOCAL_VARIABLES, "myMethod", mockedMethodVisitor), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Type type = Type.getType("[gk,h]RAuA"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: Type.getType("[gk,h]RAuA") target is: Type method is: getType(java.lang.String)
Matched Method is: getType(Ljava/lang/String;)Lorg/objectweb/asm/jip/Type;
statement is: localVariablesSorter.newLocal(type), class spoon.support.reflect.code.CtInvocationImpl
invocation is: localVariablesSorter.newLocal(type) target is: localVariablesSorter method is: newLocal(Type)
source statement: org.objectweb.asm.jip.commons.LocalVariablesSorter(ILjava/lang/String;Lorg/objectweb/asm/jip/MethodVisitor;)V callee: VariableReference: Statement 1, type org.objectweb.asm.jip.commons.LocalVariablesSorterindex is: 2
Matched Method is: newLocal(Lorg/objectweb/asm/jip/Type;)I
TestCase is: MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer());
String string = "myMethod";
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter((int) string, (String) methodVisitor, methodVisitor);
String string = "[gk,h]RAuA";
Type type = Type.getType(string);
((LocalVariablesSorter) string).newLocal(type);

statement is: mock(interface org.objectweb.asm.jip.MethodVisitor) type is: class org.evosuite.testcase.statements.FunctionalMockStatement return type interface org.objectweb.asm.jip.MethodVisitor
statement code is: MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer())
statement is: org.objectweb.asm.jip.commons.LocalVariablesSorter(ILjava/lang/String;Lorg/objectweb/asm/jip/MethodVisitor;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.objectweb.asm.jip.commons.LocalVariablesSorter
statement code is: LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(2, "pI)@(2x\"EUkpwB", arg2)
statement is: Class<Object> class = Object.class type is: class org.evosuite.testcase.statements.ClassPrimitiveStatement return type java.lang.Class<java.lang.Object>
statement code is: Class<Object> class = Object.class
statement is: getType(Ljava/lang/Class;)Lorg/objectweb/asm/jip/Type; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.objectweb.asm.jip.Type
statement code is: Type type = Type.getType(arg0)
statement is: newLocal(Lorg/objectweb/asm/jip/Type;)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int newLocal = localVariablesSorter.newLocal(arg0)
test data is: MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer());
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(2, "pI)@(2x\"EUkpwB", methodVisitor);
Class<Object> class = Object.class;
Type type = Type.getType(class);
localVariablesSorter.newLocal(type);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer());
        LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(2, "pI)@(2x\"EUkp\u007fwB", methodVisitor);
        Class<String> $missing$ = String.class;
        Type type = Type.getType();
        localVariablesSorter.newLocal(type);
    }
}
statement is: MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer()), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: mock(MethodVisitor.class, new ViolatedAssumptionAnswer()) target is:  method is: mock(java.lang.Class,<unknown>)
target name is: MethodVisitor argument is: MethodVisitor.class
Matched Method is: mock(interface org.objectweb.asm.jip.MethodVisitor)
statement is: LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(2, "pI)@(2x\"EUkp\u007fwB", methodVisitor), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Class<String> $missing$ = String.class, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: String.class is String
statement is: Type type = Type.getType(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: Type.getType() target is: Type method is: getType()
statement is: localVariablesSorter.newLocal(type), class spoon.support.reflect.code.CtInvocationImpl
invocation is: localVariablesSorter.newLocal(type) target is: localVariablesSorter method is: newLocal(Type)
source statement: org.objectweb.asm.jip.commons.LocalVariablesSorter(ILjava/lang/String;Lorg/objectweb/asm/jip/MethodVisitor;)V callee: VariableReference: Statement 1, type org.objectweb.asm.jip.commons.LocalVariablesSorterindex is: 3
Matched Method is: newLocal(Lorg/objectweb/asm/jip/Type;)I
i 0 Parameters size() 0 Num of Method Parameters: 1
TestCase is: MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer());
int _int = 2;
String string = "pI)@(2x\"EUkpwB";
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(_int, string, methodVisitor);
Type type = null;
((LocalVariablesSorter) _int).newLocal(type);

statement is: mock(interface org.objectweb.asm.jip.MethodVisitor) type is: class org.evosuite.testcase.statements.FunctionalMockStatement return type interface org.objectweb.asm.jip.MethodVisitor
statement code is: MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer())
statement is: org.evosuite.testcase.statements.FieldStatement@230e7eea type is: class org.evosuite.testcase.statements.FieldStatement return type class org.objectweb.asm.jip.Type
statement code is: Type type = Type.BOOLEAN_TYPE
statement is: org.objectweb.asm.jip.commons.LocalVariablesSorter(ILjava/lang/String;Lorg/objectweb/asm/jip/MethodVisitor;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.objectweb.asm.jip.commons.LocalVariablesSorter
statement code is: LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(2, "pI)@(2x\"EUkpwB", arg2)
statement is: visitVarInsn(II)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: localVariablesSorter.visitVarInsn((-4669), 4)
statement is: newLocal(Lorg/objectweb/asm/jip/Type;)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int newLocal = localVariablesSorter.newLocal(arg0)
statement is: newLocal(Lorg/objectweb/asm/jip/Type;)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int newLocal = localVariablesSorter.newLocal(arg0)
statement is: visitIincInsn(II)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: localVariablesSorter.visitIincInsn(89, 95)
statement is: visitIincInsn(II)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: localVariablesSorter.visitIincInsn(1034, 4)
statement is: newLocal(Lorg/objectweb/asm/jip/Type;)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int newLocal = localVariablesSorter.newLocal(arg0)
statement is: newLocalMapping(Lorg/objectweb/asm/jip/Type;)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int newLocalMapping = localVariablesSorter.newLocalMapping(arg0)
statement is: newLocal(Lorg/objectweb/asm/jip/Type;)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int newLocal = localVariablesSorter.newLocal(arg0)
statement is: newLocal(Lorg/objectweb/asm/jip/Type;)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int newLocal = localVariablesSorter.newLocal(arg0)
statement is: visitIincInsn(II)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: localVariablesSorter.visitIincInsn(9, (-564))
statement is: visitVarInsn(II)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: localVariablesSorter.visitVarInsn(5, 1510)
statement is: newLocalMapping(Lorg/objectweb/asm/jip/Type;)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int newLocalMapping = localVariablesSorter.newLocalMapping(arg0)
statement is: newLocal(Lorg/objectweb/asm/jip/Type;)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int newLocal = localVariablesSorter.newLocal(arg0)
statement is: visitVarInsn(II)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: localVariablesSorter.visitVarInsn(1, 3042)
statement is: newLocal(Lorg/objectweb/asm/jip/Type;)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int newLocal = localVariablesSorter.newLocal(arg0)
statement is: newLocal(Lorg/objectweb/asm/jip/Type;)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int newLocal = localVariablesSorter.newLocal(arg0)
statement is: newLocal(Lorg/objectweb/asm/jip/Type;)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int newLocal = localVariablesSorter.newLocal(arg0)
statement is: newLocalMapping(Lorg/objectweb/asm/jip/Type;)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int newLocalMapping = localVariablesSorter.newLocalMapping(arg0)
statement is: newLocal(Lorg/objectweb/asm/jip/Type;)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int newLocal = localVariablesSorter.newLocal(arg0)
test data is: MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer());
Type type = Type.BOOLEAN_TYPE;
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(2, "pI)@(2x\"EUkpwB", methodVisitor);
localVariablesSorter.visitVarInsn((-4669), 4);
localVariablesSorter.newLocal(type);
localVariablesSorter.newLocal(type);
localVariablesSorter.visitIincInsn(89, 95);
localVariablesSorter.visitIincInsn(1034, 4);
localVariablesSorter.newLocal(type);
localVariablesSorter.newLocalMapping(type);
localVariablesSorter.newLocal(type);
localVariablesSorter.newLocal(type);
localVariablesSorter.visitIincInsn(9, (-564));
localVariablesSorter.visitVarInsn(5, 1510);
localVariablesSorter.newLocalMapping(type);
localVariablesSorter.newLocal(type);
localVariablesSorter.visitVarInsn(1, 3042);
localVariablesSorter.newLocal(type);
localVariablesSorter.newLocal(type);
localVariablesSorter.newLocal(type);
localVariablesSorter.newLocalMapping(type);
localVariablesSorter.newLocal(type);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer());
        Type type = Type.BOOLEAN_TYPE;
        LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(2, "pI)@(2x\"EUkp\u007fwB", methodVisitor);
        localVariablesSorter.visitVarInsn(-4669, 4);
        localVariablesSorter.newLocal(type);
        localVariablesSorter.newLocal(type);
        localVariablesSorter.visitIincInsn(89, 95);
        localVariablesSorter.visitIincInsn(1034, 4);
        localVariablesSorter.newLocal(type);
        localVariablesSorter.newLocalMapping(type);
        localVariablesSorter.newLocal(type);
        localVariablesSorter.newLocal(type);
        localVariablesSorter.visitIincInsn(9, -564);
        localVariablesSorter.visitVarInsn(5, 1510);
        localVariablesSorter.newLocalMapping(type);
        localVariablesSorter.newLocal(type);
        localVariablesSorter.visitVarInsn(1, 3042);
        localVariablesSorter.newLocal(type);
        localVariablesSorter.newLocal(type);
        localVariablesSorter.newLocal(type);
        localVariablesSorter.newLocalMapping(type);
        localVariablesSorter.newLocal(type);
    }
}
statement is: MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer()), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: mock(MethodVisitor.class, new ViolatedAssumptionAnswer()) target is:  method is: mock(java.lang.Class,<unknown>)
target name is: MethodVisitor argument is: MethodVisitor.class
Matched Method is: mock(interface org.objectweb.asm.jip.MethodVisitor)
statement is: Type type = Type.BOOLEAN_TYPE, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: Type.BOOLEAN_TYPE is Type
CtField is: public static org.objectweb.asm.jip.Type org.objectweb.asm.jip.Type.BOOLEAN_TYPE Type BOOLEAN_TYPE
statement is: LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(2, "pI)@(2x\"EUkp\u007fwB", methodVisitor), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: localVariablesSorter.visitVarInsn(-4669, 4), class spoon.support.reflect.code.CtInvocationImpl
invocation is: localVariablesSorter.visitVarInsn(-4669, 4) target is: localVariablesSorter method is: visitVarInsn(int,int)
source statement: org.objectweb.asm.jip.commons.LocalVariablesSorter(ILjava/lang/String;Lorg/objectweb/asm/jip/MethodVisitor;)V callee: VariableReference: Statement 2, type org.objectweb.asm.jip.commons.LocalVariablesSorterindex is: 4
source statement: org.objectweb.asm.jip.commons.LocalVariablesSorter(ILjava/lang/String;Lorg/objectweb/asm/jip/MethodVisitor;)V callee: VariableReference: Statement 2, type org.objectweb.asm.jip.commons.LocalVariablesSorterindex is: 4
source statement: org.objectweb.asm.jip.commons.LocalVariablesSorter(ILjava/lang/String;Lorg/objectweb/asm/jip/MethodVisitor;)V callee: VariableReference: Statement 2, type org.objectweb.asm.jip.commons.LocalVariablesSorterindex is: 4
Matched Method is: visitVarInsn(II)V
i 1 Parameters size() 1 Num of Method Parameters: 2
statement is: localVariablesSorter.newLocal(type), class spoon.support.reflect.code.CtInvocationImpl
invocation is: localVariablesSorter.newLocal(type) target is: localVariablesSorter method is: newLocal(Type)
source statement: org.objectweb.asm.jip.commons.LocalVariablesSorter(ILjava/lang/String;Lorg/objectweb/asm/jip/MethodVisitor;)V callee: VariableReference: Statement 2, type org.objectweb.asm.jip.commons.LocalVariablesSorterindex is: 4
source statement: org.objectweb.asm.jip.commons.LocalVariablesSorter(ILjava/lang/String;Lorg/objectweb/asm/jip/MethodVisitor;)V callee: VariableReference: Statement 2, type org.objectweb.asm.jip.commons.LocalVariablesSorterindex is: 4
source statement: org.objectweb.asm.jip.commons.LocalVariablesSorter(ILjava/lang/String;Lorg/objectweb/asm/jip/MethodVisitor;)V callee: VariableReference: Statement 2, type org.objectweb.asm.jip.commons.LocalVariablesSorterindex is: 4
source statement: org.objectweb.asm.jip.commons.LocalVariablesSorter(ILjava/lang/String;Lorg/objectweb/asm/jip/MethodVisitor;)V callee: VariableReference: Statement 2, type org.objectweb.asm.jip.commons.LocalVariablesSorterindex is: 4
source statement: org.objectweb.asm.jip.commons.LocalVariablesSorter(ILjava/lang/String;Lorg/objectweb/asm/jip/MethodVisitor;)V callee: VariableReference: Statement 2, type org.objectweb.asm.jip.commons.LocalVariablesSorterindex is: 4
source statement: org.objectweb.asm.jip.commons.LocalVariablesSorter(ILjava/lang/String;Lorg/objectweb/asm/jip/MethodVisitor;)V callee: VariableReference: Statement 2, type org.objectweb.asm.jip.commons.LocalVariablesSorterindex is: 4
source statement: org.objectweb.asm.jip.commons.LocalVariablesSorter(ILjava/lang/String;Lorg/objectweb/asm/jip/MethodVisitor;)V callee: VariableReference: Statement 2, type org.objectweb.asm.jip.commons.LocalVariablesSorterindex is: 4
source statement: org.objectweb.asm.jip.commons.LocalVariablesSorter(ILjava/lang/String;Lorg/objectweb/asm/jip/MethodVisitor;)V callee: VariableReference: Statement 2, type org.objectweb.asm.jip.commons.LocalVariablesSorterindex is: 4
source statement: org.objectweb.asm.jip.commons.LocalVariablesSorter(ILjava/lang/String;Lorg/objectweb/asm/jip/MethodVisitor;)V callee: VariableReference: Statement 2, type org.objectweb.asm.jip.commons.LocalVariablesSorterindex is: 4
source statement: org.objectweb.asm.jip.commons.LocalVariablesSorter(ILjava/lang/String;Lorg/objectweb/asm/jip/MethodVisitor;)V callee: VariableReference: Statement 2, type org.objectweb.asm.jip.commons.LocalVariablesSorterindex is: 4
Matched Method is: newLocal(Lorg/objectweb/asm/jip/Type;)I
statement is: localVariablesSorter.newLocal(type), class spoon.support.reflect.code.CtInvocationImpl
invocation is: localVariablesSorter.newLocal(type) target is: localVariablesSorter method is: newLocal(Type)
source statement: org.objectweb.asm.jip.commons.LocalVariablesSorter(ILjava/lang/String;Lorg/objectweb/asm/jip/MethodVisitor;)V callee: VariableReference: Statement 2, type org.objectweb.asm.jip.commons.LocalVariablesSorterindex is: 4
source statement: org.objectweb.asm.jip.commons.LocalVariablesSorter(ILjava/lang/String;Lorg/objectweb/asm/jip/MethodVisitor;)V callee: VariableReference: Statement 2, type org.objectweb.asm.jip.commons.LocalVariablesSorterindex is: 4
source statement: org.objectweb.asm.jip.commons.LocalVariablesSorter(ILjava/lang/String;Lorg/objectweb/asm/jip/MethodVisitor;)V callee: VariableReference: Statement 2, type org.objectweb.asm.jip.commons.LocalVariablesSorterindex is: 4
source statement: org.objectweb.asm.jip.commons.LocalVariablesSorter(ILjava/lang/String;Lorg/objectweb/asm/jip/MethodVisitor;)V callee: VariableReference: Statement 2, type org.objectweb.asm.jip.commons.LocalVariablesSorterindex is: 4
source statement: org.objectweb.asm.jip.commons.LocalVariablesSorter(ILjava/lang/String;Lorg/objectweb/asm/jip/MethodVisitor;)V callee: VariableReference: Statement 2, type org.objectweb.asm.jip.commons.LocalVariablesSorterindex is: 4
source statement: org.objectweb.asm.jip.commons.LocalVariablesSorter(ILjava/lang/String;Lorg/objectweb/asm/jip/MethodVisitor;)V callee: VariableReference: Statement 2, type org.objectweb.asm.jip.commons.LocalVariablesSorterindex is: 4
source statement: org.objectweb.asm.jip.commons.LocalVariablesSorter(ILjava/lang/String;Lorg/objectweb/asm/jip/MethodVisitor;)V callee: VariableReference: Statement 2, type org.objectweb.asm.jip.commons.LocalVariablesSorterindex is: 4
source statement: org.objectweb.asm.jip.commons.LocalVariablesSorter(ILjava/lang/String;Lorg/objectweb/asm/jip/MethodVisitor;)V callee: VariableReference: Statement 2, type org.objectweb.asm.jip.commons.LocalVariablesSorterindex is: 4
source statement: org.objectweb.asm.jip.commons.LocalVariablesSorter(ILjava/lang/String;Lorg/objectweb/asm/jip/MethodVisitor;)V callee: VariableReference: Statement 2, type org.objectweb.asm.jip.commons.LocalVariablesSorterindex is: 4
source statement: org.objectweb.asm.jip.commons.LocalVariablesSorter(ILjava/lang/String;Lorg/objectweb/asm/jip/MethodVisitor;)V callee: VariableReference: Statement 2, type org.objectweb.asm.jip.commons.LocalVariablesSorterindex is: 4
Matched Method is: newLocal(Lorg/objectweb/asm/jip/Type;)I
statement is: localVariablesSorter.visitIincInsn(89, 95), class spoon.support.reflect.code.CtInvocationImpl
invocation is: localVariablesSorter.visitIincInsn(89, 95) target is: localVariablesSorter method is: visitIincInsn(int,int)
source statement: org.objectweb.asm.jip.commons.LocalVariablesSorter(ILjava/lang/String;Lorg/objectweb/asm/jip/MethodVisitor;)V callee: VariableReference: Statement 2, type org.objectweb.asm.jip.commons.LocalVariablesSorterindex is: 4
source statement: org.objectweb.asm.jip.commons.LocalVariablesSorter(ILjava/lang/String;Lorg/objectweb/asm/jip/MethodVisitor;)V callee: VariableReference: Statement 2, type org.objectweb.asm.jip.commons.LocalVariablesSorterindex is: 4
source statement: org.objectweb.asm.jip.commons.LocalVariablesSorter(ILjava/lang/String;Lorg/objectweb/asm/jip/MethodVisitor;)V callee: VariableReference: Statement 2, type org.objectweb.asm.jip.commons.LocalVariablesSorterindex is: 4
Matched Method is: visitIincInsn(II)V
statement is: localVariablesSorter.visitIincInsn(1034, 4), class spoon.support.reflect.code.CtInvocationImpl
invocation is: localVariablesSorter.visitIincInsn(1034, 4) target is: localVariablesSorter method is: visitIincInsn(int,int)
source statement: org.objectweb.asm.jip.commons.LocalVariablesSorter(ILjava/lang/String;Lorg/objectweb/asm/jip/MethodVisitor;)V callee: VariableReference: Statement 2, type org.objectweb.asm.jip.commons.LocalVariablesSorterindex is: 4
source statement: org.objectweb.asm.jip.commons.LocalVariablesSorter(ILjava/lang/String;Lorg/objectweb/asm/jip/MethodVisitor;)V callee: VariableReference: Statement 2, type org.objectweb.asm.jip.commons.LocalVariablesSorterindex is: 4
source statement: org.objectweb.asm.jip.commons.LocalVariablesSorter(ILjava/lang/String;Lorg/objectweb/asm/jip/MethodVisitor;)V callee: VariableReference: Statement 2, type org.objectweb.asm.jip.commons.LocalVariablesSorterindex is: 4
Matched Method is: visitIincInsn(II)V
statement is: localVariablesSorter.newLocal(type), class spoon.support.reflect.code.CtInvocationImpl
invocation is: localVariablesSorter.newLocal(type) target is: localVariablesSorter method is: newLocal(Type)
source statement: org.objectweb.asm.jip.commons.LocalVariablesSorter(ILjava/lang/String;Lorg/objectweb/asm/jip/MethodVisitor;)V callee: VariableReference: Statement 2, type org.objectweb.asm.jip.commons.LocalVariablesSorterindex is: 4
source statement: org.objectweb.asm.jip.commons.LocalVariablesSorter(ILjava/lang/String;Lorg/objectweb/asm/jip/MethodVisitor;)V callee: VariableReference: Statement 2, type org.objectweb.asm.jip.commons.LocalVariablesSorterindex is: 4
source statement: org.objectweb.asm.jip.commons.LocalVariablesSorter(ILjava/lang/String;Lorg/objectweb/asm/jip/MethodVisitor;)V callee: VariableReference: Statement 2, type org.objectweb.asm.jip.commons.LocalVariablesSorterindex is: 4
source statement: org.objectweb.asm.jip.commons.LocalVariablesSorter(ILjava/lang/String;Lorg/objectweb/asm/jip/MethodVisitor;)V callee: VariableReference: Statement 2, type org.objectweb.asm.jip.commons.LocalVariablesSorterindex is: 4
source statement: org.objectweb.asm.jip.commons.LocalVariablesSorter(ILjava/lang/String;Lorg/objectweb/asm/jip/MethodVisitor;)V callee: VariableReference: Statement 2, type org.objectweb.asm.jip.commons.LocalVariablesSorterindex is: 4
source statement: org.objectweb.asm.jip.commons.LocalVariablesSorter(ILjava/lang/String;Lorg/objectweb/asm/jip/MethodVisitor;)V callee: VariableReference: Statement 2, type org.objectweb.asm.jip.commons.LocalVariablesSorterindex is: 4
source statement: org.objectweb.asm.jip.commons.LocalVariablesSorter(ILjava/lang/String;Lorg/objectweb/asm/jip/MethodVisitor;)V callee: VariableReference: Statement 2, type org.objectweb.asm.jip.commons.LocalVariablesSorterindex is: 4
source statement: org.objectweb.asm.jip.commons.LocalVariablesSorter(ILjava/lang/String;Lorg/objectweb/asm/jip/MethodVisitor;)V callee: VariableReference: Statement 2, type org.objectweb.asm.jip.commons.LocalVariablesSorterindex is: 4
source statement: org.objectweb.asm.jip.commons.LocalVariablesSorter(ILjava/lang/String;Lorg/objectweb/asm/jip/MethodVisitor;)V callee: VariableReference: Statement 2, type org.objectweb.asm.jip.commons.LocalVariablesSorterindex is: 4
source statement: org.objectweb.asm.jip.commons.LocalVariablesSorter(ILjava/lang/String;Lorg/objectweb/asm/jip/MethodVisitor;)V callee: VariableReference: Statement 2, type org.objectweb.asm.jip.commons.LocalVariablesSorterindex is: 4
Matched Method is: newLocal(Lorg/objectweb/asm/jip/Type;)I
statement is: localVariablesSorter.newLocalMapping(type), class spoon.support.reflect.code.CtInvocationImpl
invocation is: localVariablesSorter.newLocalMapping(type) target is: localVariablesSorter method is: newLocalMapping(Type)
source statement: org.objectweb.asm.jip.commons.LocalVariablesSorter(ILjava/lang/String;Lorg/objectweb/asm/jip/MethodVisitor;)V callee: VariableReference: Statement 2, type org.objectweb.asm.jip.commons.LocalVariablesSorterindex is: 4
source statement: org.objectweb.asm.jip.commons.LocalVariablesSorter(ILjava/lang/String;Lorg/objectweb/asm/jip/MethodVisitor;)V callee: VariableReference: Statement 2, type org.objectweb.asm.jip.commons.LocalVariablesSorterindex is: 4
source statement: org.objectweb.asm.jip.commons.LocalVariablesSorter(ILjava/lang/String;Lorg/objectweb/asm/jip/MethodVisitor;)V callee: VariableReference: Statement 2, type org.objectweb.asm.jip.commons.LocalVariablesSorterindex is: 4
Matched Method is: newLocalMapping(Lorg/objectweb/asm/jip/Type;)I
statement is: localVariablesSorter.newLocal(type), class spoon.support.reflect.code.CtInvocationImpl
invocation is: localVariablesSorter.newLocal(type) target is: localVariablesSorter method is: newLocal(Type)
source statement: org.objectweb.asm.jip.commons.LocalVariablesSorter(ILjava/lang/String;Lorg/objectweb/asm/jip/MethodVisitor;)V callee: VariableReference: Statement 2, type org.objectweb.asm.jip.commons.LocalVariablesSorterindex is: 4
source statement: org.objectweb.asm.jip.commons.LocalVariablesSorter(ILjava/lang/String;Lorg/objectweb/asm/jip/MethodVisitor;)V callee: VariableReference: Statement 2, type org.objectweb.asm.jip.commons.LocalVariablesSorterindex is: 4
source statement: org.objectweb.asm.jip.commons.LocalVariablesSorter(ILjava/lang/String;Lorg/objectweb/asm/jip/MethodVisitor;)V callee: VariableReference: Statement 2, type org.objectweb.asm.jip.commons.LocalVariablesSorterindex is: 4
source statement: org.objectweb.asm.jip.commons.LocalVariablesSorter(ILjava/lang/String;Lorg/objectweb/asm/jip/MethodVisitor;)V callee: VariableReference: Statement 2, type org.objectweb.asm.jip.commons.LocalVariablesSorterindex is: 4
source statement: org.objectweb.asm.jip.commons.LocalVariablesSorter(ILjava/lang/String;Lorg/objectweb/asm/jip/MethodVisitor;)V callee: VariableReference: Statement 2, type org.objectweb.asm.jip.commons.LocalVariablesSorterindex is: 4
source statement: org.objectweb.asm.jip.commons.LocalVariablesSorter(ILjava/lang/String;Lorg/objectweb/asm/jip/MethodVisitor;)V callee: VariableReference: Statement 2, type org.objectweb.asm.jip.commons.LocalVariablesSorterindex is: 4
source statement: org.objectweb.asm.jip.commons.LocalVariablesSorter(ILjava/lang/String;Lorg/objectweb/asm/jip/MethodVisitor;)V callee: VariableReference: Statement 2, type org.objectweb.asm.jip.commons.LocalVariablesSorterindex is: 4
source statement: org.objectweb.asm.jip.commons.LocalVariablesSorter(ILjava/lang/String;Lorg/objectweb/asm/jip/MethodVisitor;)V callee: VariableReference: Statement 2, type org.objectweb.asm.jip.commons.LocalVariablesSorterindex is: 4
source statement: org.objectweb.asm.jip.commons.LocalVariablesSorter(ILjava/lang/String;Lorg/objectweb/asm/jip/MethodVisitor;)V callee: VariableReference: Statement 2, type org.objectweb.asm.jip.commons.LocalVariablesSorterindex is: 4
source statement: org.objectweb.asm.jip.commons.LocalVariablesSorter(ILjava/lang/String;Lorg/objectweb/asm/jip/MethodVisitor;)V callee: VariableReference: Statement 2, type org.objectweb.asm.jip.commons.LocalVariablesSorterindex is: 4
Matched Method is: newLocal(Lorg/objectweb/asm/jip/Type;)I
statement is: localVariablesSorter.newLocal(type), class spoon.support.reflect.code.CtInvocationImpl
invocation is: localVariablesSorter.newLocal(type) target is: localVariablesSorter method is: newLocal(Type)
source statement: org.objectweb.asm.jip.commons.LocalVariablesSorter(ILjava/lang/String;Lorg/objectweb/asm/jip/MethodVisitor;)V callee: VariableReference: Statement 2, type org.objectweb.asm.jip.commons.LocalVariablesSorterindex is: 4
source statement: org.objectweb.asm.jip.commons.LocalVariablesSorter(ILjava/lang/String;Lorg/objectweb/asm/jip/MethodVisitor;)V callee: VariableReference: Statement 2, type org.objectweb.asm.jip.commons.LocalVariablesSorterindex is: 4
source statement: org.objectweb.asm.jip.commons.LocalVariablesSorter(ILjava/lang/String;Lorg/objectweb/asm/jip/MethodVisitor;)V callee: VariableReference: Statement 2, type org.objectweb.asm.jip.commons.LocalVariablesSorterindex is: 4
source statement: org.objectweb.asm.jip.commons.LocalVariablesSorter(ILjava/lang/String;Lorg/objectweb/asm/jip/MethodVisitor;)V callee: VariableReference: Statement 2, type org.objectweb.asm.jip.commons.LocalVariablesSorterindex is: 4
source statement: org.objectweb.asm.jip.commons.LocalVariablesSorter(ILjava/lang/String;Lorg/objectweb/asm/jip/MethodVisitor;)V callee: VariableReference: Statement 2, type org.objectweb.asm.jip.commons.LocalVariablesSorterindex is: 4
source statement: org.objectweb.asm.jip.commons.LocalVariablesSorter(ILjava/lang/String;Lorg/objectweb/asm/jip/MethodVisitor;)V callee: VariableReference: Statement 2, type org.objectweb.asm.jip.commons.LocalVariablesSorterindex is: 4
source statement: org.objectweb.asm.jip.commons.LocalVariablesSorter(ILjava/lang/String;Lorg/objectweb/asm/jip/MethodVisitor;)V callee: VariableReference: Statement 2, type org.objectweb.asm.jip.commons.LocalVariablesSorterindex is: 4
source statement: org.objectweb.asm.jip.commons.LocalVariablesSorter(ILjava/lang/String;Lorg/objectweb/asm/jip/MethodVisitor;)V callee: VariableReference: Statement 2, type org.objectweb.asm.jip.commons.LocalVariablesSorterindex is: 4
source statement: org.objectweb.asm.jip.commons.LocalVariablesSorter(ILjava/lang/String;Lorg/objectweb/asm/jip/MethodVisitor;)V callee: VariableReference: Statement 2, type org.objectweb.asm.jip.commons.LocalVariablesSorterindex is: 4
source statement: org.objectweb.asm.jip.commons.LocalVariablesSorter(ILjava/lang/String;Lorg/objectweb/asm/jip/MethodVisitor;)V callee: VariableReference: Statement 2, type org.objectweb.asm.jip.commons.LocalVariablesSorterindex is: 4
Matched Method is: newLocal(Lorg/objectweb/asm/jip/Type;)I
statement is: localVariablesSorter.visitIincInsn(9, -564), class spoon.support.reflect.code.CtInvocationImpl
invocation is: localVariablesSorter.visitIincInsn(9, -564) target is: localVariablesSorter method is: visitIincInsn(int,int)
source statement: org.objectweb.asm.jip.commons.LocalVariablesSorter(ILjava/lang/String;Lorg/objectweb/asm/jip/MethodVisitor;)V callee: VariableReference: Statement 2, type org.objectweb.asm.jip.commons.LocalVariablesSorterindex is: 4
source statement: org.objectweb.asm.jip.commons.LocalVariablesSorter(ILjava/lang/String;Lorg/objectweb/asm/jip/MethodVisitor;)V callee: VariableReference: Statement 2, type org.objectweb.asm.jip.commons.LocalVariablesSorterindex is: 4
source statement: org.objectweb.asm.jip.commons.LocalVariablesSorter(ILjava/lang/String;Lorg/objectweb/asm/jip/MethodVisitor;)V callee: VariableReference: Statement 2, type org.objectweb.asm.jip.commons.LocalVariablesSorterindex is: 4
Matched Method is: visitIincInsn(II)V
i 1 Parameters size() 1 Num of Method Parameters: 2
statement is: localVariablesSorter.visitVarInsn(5, 1510), class spoon.support.reflect.code.CtInvocationImpl
invocation is: localVariablesSorter.visitVarInsn(5, 1510) target is: localVariablesSorter method is: visitVarInsn(int,int)
source statement: org.objectweb.asm.jip.commons.LocalVariablesSorter(ILjava/lang/String;Lorg/objectweb/asm/jip/MethodVisitor;)V callee: VariableReference: Statement 2, type org.objectweb.asm.jip.commons.LocalVariablesSorterindex is: 4
source statement: org.objectweb.asm.jip.commons.LocalVariablesSorter(ILjava/lang/String;Lorg/objectweb/asm/jip/MethodVisitor;)V callee: VariableReference: Statement 2, type org.objectweb.asm.jip.commons.LocalVariablesSorterindex is: 4
source statement: org.objectweb.asm.jip.commons.LocalVariablesSorter(ILjava/lang/String;Lorg/objectweb/asm/jip/MethodVisitor;)V callee: VariableReference: Statement 2, type org.objectweb.asm.jip.commons.LocalVariablesSorterindex is: 4
Matched Method is: visitVarInsn(II)V
statement is: localVariablesSorter.newLocalMapping(type), class spoon.support.reflect.code.CtInvocationImpl
invocation is: localVariablesSorter.newLocalMapping(type) target is: localVariablesSorter method is: newLocalMapping(Type)
source statement: org.objectweb.asm.jip.commons.LocalVariablesSorter(ILjava/lang/String;Lorg/objectweb/asm/jip/MethodVisitor;)V callee: VariableReference: Statement 2, type org.objectweb.asm.jip.commons.LocalVariablesSorterindex is: 4
source statement: org.objectweb.asm.jip.commons.LocalVariablesSorter(ILjava/lang/String;Lorg/objectweb/asm/jip/MethodVisitor;)V callee: VariableReference: Statement 2, type org.objectweb.asm.jip.commons.LocalVariablesSorterindex is: 4
source statement: org.objectweb.asm.jip.commons.LocalVariablesSorter(ILjava/lang/String;Lorg/objectweb/asm/jip/MethodVisitor;)V callee: VariableReference: Statement 2, type org.objectweb.asm.jip.commons.LocalVariablesSorterindex is: 4
Matched Method is: newLocalMapping(Lorg/objectweb/asm/jip/Type;)I
statement is: localVariablesSorter.newLocal(type), class spoon.support.reflect.code.CtInvocationImpl
invocation is: localVariablesSorter.newLocal(type) target is: localVariablesSorter method is: newLocal(Type)
source statement: org.objectweb.asm.jip.commons.LocalVariablesSorter(ILjava/lang/String;Lorg/objectweb/asm/jip/MethodVisitor;)V callee: VariableReference: Statement 2, type org.objectweb.asm.jip.commons.LocalVariablesSorterindex is: 4
source statement: org.objectweb.asm.jip.commons.LocalVariablesSorter(ILjava/lang/String;Lorg/objectweb/asm/jip/MethodVisitor;)V callee: VariableReference: Statement 2, type org.objectweb.asm.jip.commons.LocalVariablesSorterindex is: 4
source statement: org.objectweb.asm.jip.commons.LocalVariablesSorter(ILjava/lang/String;Lorg/objectweb/asm/jip/MethodVisitor;)V callee: VariableReference: Statement 2, type org.objectweb.asm.jip.commons.LocalVariablesSorterindex is: 4
source statement: org.objectweb.asm.jip.commons.LocalVariablesSorter(ILjava/lang/String;Lorg/objectweb/asm/jip/MethodVisitor;)V callee: VariableReference: Statement 2, type org.objectweb.asm.jip.commons.LocalVariablesSorterindex is: 4
source statement: org.objectweb.asm.jip.commons.LocalVariablesSorter(ILjava/lang/String;Lorg/objectweb/asm/jip/MethodVisitor;)V callee: VariableReference: Statement 2, type org.objectweb.asm.jip.commons.LocalVariablesSorterindex is: 4
source statement: org.objectweb.asm.jip.commons.LocalVariablesSorter(ILjava/lang/String;Lorg/objectweb/asm/jip/MethodVisitor;)V callee: VariableReference: Statement 2, type org.objectweb.asm.jip.commons.LocalVariablesSorterindex is: 4
source statement: org.objectweb.asm.jip.commons.LocalVariablesSorter(ILjava/lang/String;Lorg/objectweb/asm/jip/MethodVisitor;)V callee: VariableReference: Statement 2, type org.objectweb.asm.jip.commons.LocalVariablesSorterindex is: 4
source statement: org.objectweb.asm.jip.commons.LocalVariablesSorter(ILjava/lang/String;Lorg/objectweb/asm/jip/MethodVisitor;)V callee: VariableReference: Statement 2, type org.objectweb.asm.jip.commons.LocalVariablesSorterindex is: 4
source statement: org.objectweb.asm.jip.commons.LocalVariablesSorter(ILjava/lang/String;Lorg/objectweb/asm/jip/MethodVisitor;)V callee: VariableReference: Statement 2, type org.objectweb.asm.jip.commons.LocalVariablesSorterindex is: 4
source statement: org.objectweb.asm.jip.commons.LocalVariablesSorter(ILjava/lang/String;Lorg/objectweb/asm/jip/MethodVisitor;)V callee: VariableReference: Statement 2, type org.objectweb.asm.jip.commons.LocalVariablesSorterindex is: 4
Matched Method is: newLocal(Lorg/objectweb/asm/jip/Type;)I
statement is: localVariablesSorter.visitVarInsn(1, 3042), class spoon.support.reflect.code.CtInvocationImpl
invocation is: localVariablesSorter.visitVarInsn(1, 3042) target is: localVariablesSorter method is: visitVarInsn(int,int)
source statement: org.objectweb.asm.jip.commons.LocalVariablesSorter(ILjava/lang/String;Lorg/objectweb/asm/jip/MethodVisitor;)V callee: VariableReference: Statement 2, type org.objectweb.asm.jip.commons.LocalVariablesSorterindex is: 4
source statement: org.objectweb.asm.jip.commons.LocalVariablesSorter(ILjava/lang/String;Lorg/objectweb/asm/jip/MethodVisitor;)V callee: VariableReference: Statement 2, type org.objectweb.asm.jip.commons.LocalVariablesSorterindex is: 4
source statement: org.objectweb.asm.jip.commons.LocalVariablesSorter(ILjava/lang/String;Lorg/objectweb/asm/jip/MethodVisitor;)V callee: VariableReference: Statement 2, type org.objectweb.asm.jip.commons.LocalVariablesSorterindex is: 4
Matched Method is: visitVarInsn(II)V
statement is: localVariablesSorter.newLocal(type), class spoon.support.reflect.code.CtInvocationImpl
invocation is: localVariablesSorter.newLocal(type) target is: localVariablesSorter method is: newLocal(Type)
source statement: org.objectweb.asm.jip.commons.LocalVariablesSorter(ILjava/lang/String;Lorg/objectweb/asm/jip/MethodVisitor;)V callee: VariableReference: Statement 2, type org.objectweb.asm.jip.commons.LocalVariablesSorterindex is: 4
source statement: org.objectweb.asm.jip.commons.LocalVariablesSorter(ILjava/lang/String;Lorg/objectweb/asm/jip/MethodVisitor;)V callee: VariableReference: Statement 2, type org.objectweb.asm.jip.commons.LocalVariablesSorterindex is: 4
source statement: org.objectweb.asm.jip.commons.LocalVariablesSorter(ILjava/lang/String;Lorg/objectweb/asm/jip/MethodVisitor;)V callee: VariableReference: Statement 2, type org.objectweb.asm.jip.commons.LocalVariablesSorterindex is: 4
source statement: org.objectweb.asm.jip.commons.LocalVariablesSorter(ILjava/lang/String;Lorg/objectweb/asm/jip/MethodVisitor;)V callee: VariableReference: Statement 2, type org.objectweb.asm.jip.commons.LocalVariablesSorterindex is: 4
source statement: org.objectweb.asm.jip.commons.LocalVariablesSorter(ILjava/lang/String;Lorg/objectweb/asm/jip/MethodVisitor;)V callee: VariableReference: Statement 2, type org.objectweb.asm.jip.commons.LocalVariablesSorterindex is: 4
source statement: org.objectweb.asm.jip.commons.LocalVariablesSorter(ILjava/lang/String;Lorg/objectweb/asm/jip/MethodVisitor;)V callee: VariableReference: Statement 2, type org.objectweb.asm.jip.commons.LocalVariablesSorterindex is: 4
source statement: org.objectweb.asm.jip.commons.LocalVariablesSorter(ILjava/lang/String;Lorg/objectweb/asm/jip/MethodVisitor;)V callee: VariableReference: Statement 2, type org.objectweb.asm.jip.commons.LocalVariablesSorterindex is: 4
source statement: org.objectweb.asm.jip.commons.LocalVariablesSorter(ILjava/lang/String;Lorg/objectweb/asm/jip/MethodVisitor;)V callee: VariableReference: Statement 2, type org.objectweb.asm.jip.commons.LocalVariablesSorterindex is: 4
source statement: org.objectweb.asm.jip.commons.LocalVariablesSorter(ILjava/lang/String;Lorg/objectweb/asm/jip/MethodVisitor;)V callee: VariableReference: Statement 2, type org.objectweb.asm.jip.commons.LocalVariablesSorterindex is: 4
source statement: org.objectweb.asm.jip.commons.LocalVariablesSorter(ILjava/lang/String;Lorg/objectweb/asm/jip/MethodVisitor;)V callee: VariableReference: Statement 2, type org.objectweb.asm.jip.commons.LocalVariablesSorterindex is: 4
Matched Method is: newLocal(Lorg/objectweb/asm/jip/Type;)I
statement is: localVariablesSorter.newLocal(type), class spoon.support.reflect.code.CtInvocationImpl
invocation is: localVariablesSorter.newLocal(type) target is: localVariablesSorter method is: newLocal(Type)
source statement: org.objectweb.asm.jip.commons.LocalVariablesSorter(ILjava/lang/String;Lorg/objectweb/asm/jip/MethodVisitor;)V callee: VariableReference: Statement 2, type org.objectweb.asm.jip.commons.LocalVariablesSorterindex is: 4
source statement: org.objectweb.asm.jip.commons.LocalVariablesSorter(ILjava/lang/String;Lorg/objectweb/asm/jip/MethodVisitor;)V callee: VariableReference: Statement 2, type org.objectweb.asm.jip.commons.LocalVariablesSorterindex is: 4
source statement: org.objectweb.asm.jip.commons.LocalVariablesSorter(ILjava/lang/String;Lorg/objectweb/asm/jip/MethodVisitor;)V callee: VariableReference: Statement 2, type org.objectweb.asm.jip.commons.LocalVariablesSorterindex is: 4
source statement: org.objectweb.asm.jip.commons.LocalVariablesSorter(ILjava/lang/String;Lorg/objectweb/asm/jip/MethodVisitor;)V callee: VariableReference: Statement 2, type org.objectweb.asm.jip.commons.LocalVariablesSorterindex is: 4
source statement: org.objectweb.asm.jip.commons.LocalVariablesSorter(ILjava/lang/String;Lorg/objectweb/asm/jip/MethodVisitor;)V callee: VariableReference: Statement 2, type org.objectweb.asm.jip.commons.LocalVariablesSorterindex is: 4
source statement: org.objectweb.asm.jip.commons.LocalVariablesSorter(ILjava/lang/String;Lorg/objectweb/asm/jip/MethodVisitor;)V callee: VariableReference: Statement 2, type org.objectweb.asm.jip.commons.LocalVariablesSorterindex is: 4
source statement: org.objectweb.asm.jip.commons.LocalVariablesSorter(ILjava/lang/String;Lorg/objectweb/asm/jip/MethodVisitor;)V callee: VariableReference: Statement 2, type org.objectweb.asm.jip.commons.LocalVariablesSorterindex is: 4
source statement: org.objectweb.asm.jip.commons.LocalVariablesSorter(ILjava/lang/String;Lorg/objectweb/asm/jip/MethodVisitor;)V callee: VariableReference: Statement 2, type org.objectweb.asm.jip.commons.LocalVariablesSorterindex is: 4
source statement: org.objectweb.asm.jip.commons.LocalVariablesSorter(ILjava/lang/String;Lorg/objectweb/asm/jip/MethodVisitor;)V callee: VariableReference: Statement 2, type org.objectweb.asm.jip.commons.LocalVariablesSorterindex is: 4
source statement: org.objectweb.asm.jip.commons.LocalVariablesSorter(ILjava/lang/String;Lorg/objectweb/asm/jip/MethodVisitor;)V callee: VariableReference: Statement 2, type org.objectweb.asm.jip.commons.LocalVariablesSorterindex is: 4
Matched Method is: newLocal(Lorg/objectweb/asm/jip/Type;)I
statement is: localVariablesSorter.newLocal(type), class spoon.support.reflect.code.CtInvocationImpl
invocation is: localVariablesSorter.newLocal(type) target is: localVariablesSorter method is: newLocal(Type)
source statement: org.objectweb.asm.jip.commons.LocalVariablesSorter(ILjava/lang/String;Lorg/objectweb/asm/jip/MethodVisitor;)V callee: VariableReference: Statement 2, type org.objectweb.asm.jip.commons.LocalVariablesSorterindex is: 4
source statement: org.objectweb.asm.jip.commons.LocalVariablesSorter(ILjava/lang/String;Lorg/objectweb/asm/jip/MethodVisitor;)V callee: VariableReference: Statement 2, type org.objectweb.asm.jip.commons.LocalVariablesSorterindex is: 4
source statement: org.objectweb.asm.jip.commons.LocalVariablesSorter(ILjava/lang/String;Lorg/objectweb/asm/jip/MethodVisitor;)V callee: VariableReference: Statement 2, type org.objectweb.asm.jip.commons.LocalVariablesSorterindex is: 4
source statement: org.objectweb.asm.jip.commons.LocalVariablesSorter(ILjava/lang/String;Lorg/objectweb/asm/jip/MethodVisitor;)V callee: VariableReference: Statement 2, type org.objectweb.asm.jip.commons.LocalVariablesSorterindex is: 4
source statement: org.objectweb.asm.jip.commons.LocalVariablesSorter(ILjava/lang/String;Lorg/objectweb/asm/jip/MethodVisitor;)V callee: VariableReference: Statement 2, type org.objectweb.asm.jip.commons.LocalVariablesSorterindex is: 4
source statement: org.objectweb.asm.jip.commons.LocalVariablesSorter(ILjava/lang/String;Lorg/objectweb/asm/jip/MethodVisitor;)V callee: VariableReference: Statement 2, type org.objectweb.asm.jip.commons.LocalVariablesSorterindex is: 4
source statement: org.objectweb.asm.jip.commons.LocalVariablesSorter(ILjava/lang/String;Lorg/objectweb/asm/jip/MethodVisitor;)V callee: VariableReference: Statement 2, type org.objectweb.asm.jip.commons.LocalVariablesSorterindex is: 4
source statement: org.objectweb.asm.jip.commons.LocalVariablesSorter(ILjava/lang/String;Lorg/objectweb/asm/jip/MethodVisitor;)V callee: VariableReference: Statement 2, type org.objectweb.asm.jip.commons.LocalVariablesSorterindex is: 4
source statement: org.objectweb.asm.jip.commons.LocalVariablesSorter(ILjava/lang/String;Lorg/objectweb/asm/jip/MethodVisitor;)V callee: VariableReference: Statement 2, type org.objectweb.asm.jip.commons.LocalVariablesSorterindex is: 4
source statement: org.objectweb.asm.jip.commons.LocalVariablesSorter(ILjava/lang/String;Lorg/objectweb/asm/jip/MethodVisitor;)V callee: VariableReference: Statement 2, type org.objectweb.asm.jip.commons.LocalVariablesSorterindex is: 4
Matched Method is: newLocal(Lorg/objectweb/asm/jip/Type;)I
statement is: localVariablesSorter.newLocalMapping(type), class spoon.support.reflect.code.CtInvocationImpl
invocation is: localVariablesSorter.newLocalMapping(type) target is: localVariablesSorter method is: newLocalMapping(Type)
source statement: org.objectweb.asm.jip.commons.LocalVariablesSorter(ILjava/lang/String;Lorg/objectweb/asm/jip/MethodVisitor;)V callee: VariableReference: Statement 2, type org.objectweb.asm.jip.commons.LocalVariablesSorterindex is: 4
source statement: org.objectweb.asm.jip.commons.LocalVariablesSorter(ILjava/lang/String;Lorg/objectweb/asm/jip/MethodVisitor;)V callee: VariableReference: Statement 2, type org.objectweb.asm.jip.commons.LocalVariablesSorterindex is: 4
source statement: org.objectweb.asm.jip.commons.LocalVariablesSorter(ILjava/lang/String;Lorg/objectweb/asm/jip/MethodVisitor;)V callee: VariableReference: Statement 2, type org.objectweb.asm.jip.commons.LocalVariablesSorterindex is: 4
Matched Method is: newLocalMapping(Lorg/objectweb/asm/jip/Type;)I
statement is: localVariablesSorter.newLocal(type), class spoon.support.reflect.code.CtInvocationImpl
invocation is: localVariablesSorter.newLocal(type) target is: localVariablesSorter method is: newLocal(Type)
source statement: org.objectweb.asm.jip.commons.LocalVariablesSorter(ILjava/lang/String;Lorg/objectweb/asm/jip/MethodVisitor;)V callee: VariableReference: Statement 2, type org.objectweb.asm.jip.commons.LocalVariablesSorterindex is: 4
source statement: org.objectweb.asm.jip.commons.LocalVariablesSorter(ILjava/lang/String;Lorg/objectweb/asm/jip/MethodVisitor;)V callee: VariableReference: Statement 2, type org.objectweb.asm.jip.commons.LocalVariablesSorterindex is: 4
source statement: org.objectweb.asm.jip.commons.LocalVariablesSorter(ILjava/lang/String;Lorg/objectweb/asm/jip/MethodVisitor;)V callee: VariableReference: Statement 2, type org.objectweb.asm.jip.commons.LocalVariablesSorterindex is: 4
source statement: org.objectweb.asm.jip.commons.LocalVariablesSorter(ILjava/lang/String;Lorg/objectweb/asm/jip/MethodVisitor;)V callee: VariableReference: Statement 2, type org.objectweb.asm.jip.commons.LocalVariablesSorterindex is: 4
source statement: org.objectweb.asm.jip.commons.LocalVariablesSorter(ILjava/lang/String;Lorg/objectweb/asm/jip/MethodVisitor;)V callee: VariableReference: Statement 2, type org.objectweb.asm.jip.commons.LocalVariablesSorterindex is: 4
source statement: org.objectweb.asm.jip.commons.LocalVariablesSorter(ILjava/lang/String;Lorg/objectweb/asm/jip/MethodVisitor;)V callee: VariableReference: Statement 2, type org.objectweb.asm.jip.commons.LocalVariablesSorterindex is: 4
source statement: org.objectweb.asm.jip.commons.LocalVariablesSorter(ILjava/lang/String;Lorg/objectweb/asm/jip/MethodVisitor;)V callee: VariableReference: Statement 2, type org.objectweb.asm.jip.commons.LocalVariablesSorterindex is: 4
source statement: org.objectweb.asm.jip.commons.LocalVariablesSorter(ILjava/lang/String;Lorg/objectweb/asm/jip/MethodVisitor;)V callee: VariableReference: Statement 2, type org.objectweb.asm.jip.commons.LocalVariablesSorterindex is: 4
source statement: org.objectweb.asm.jip.commons.LocalVariablesSorter(ILjava/lang/String;Lorg/objectweb/asm/jip/MethodVisitor;)V callee: VariableReference: Statement 2, type org.objectweb.asm.jip.commons.LocalVariablesSorterindex is: 4
source statement: org.objectweb.asm.jip.commons.LocalVariablesSorter(ILjava/lang/String;Lorg/objectweb/asm/jip/MethodVisitor;)V callee: VariableReference: Statement 2, type org.objectweb.asm.jip.commons.LocalVariablesSorterindex is: 4
Matched Method is: newLocal(Lorg/objectweb/asm/jip/Type;)I
TestCase is: MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer());
Type type = Type.BOOLEAN_TYPE;
int _int = 2;
String string = "pI)@(2x\"EUkpwB";
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(_int, string, methodVisitor);
int _int = 4;
int _int = null;
((LocalVariablesSorter) _int).visitVarInsn(_int, _int);
((LocalVariablesSorter) _int).newLocal(type);
((LocalVariablesSorter) _int).newLocal(type);
int _int = 89;
int _int = 95;
((LocalVariablesSorter) _int).visitIincInsn(_int, _int);
int _int = 1034;
int _int = 4;
((LocalVariablesSorter) _int).visitIincInsn(_int, _int);
((LocalVariablesSorter) _int).newLocal(type);
((LocalVariablesSorter) _int).newLocalMapping(type);
((LocalVariablesSorter) _int).newLocal(type);
((LocalVariablesSorter) _int).newLocal(type);
int _int = 9;
int _int = null;
((LocalVariablesSorter) _int).visitIincInsn(_int, _int);
int _int = 5;
int _int = 1510;
((LocalVariablesSorter) _int).visitVarInsn(_int, _int);
((LocalVariablesSorter) _int).newLocalMapping(type);
((LocalVariablesSorter) _int).newLocal(type);
int _int = 1;
int _int = 3042;
((LocalVariablesSorter) _int).visitVarInsn(_int, _int);
((LocalVariablesSorter) _int).newLocal(type);
((LocalVariablesSorter) _int).newLocal(type);
((LocalVariablesSorter) _int).newLocal(type);
((LocalVariablesSorter) _int).newLocalMapping(type);
((LocalVariablesSorter) _int).newLocal(type);

statement is: mock(interface org.objectweb.asm.jip.MethodVisitor) type is: class org.evosuite.testcase.statements.FunctionalMockStatement return type interface org.objectweb.asm.jip.MethodVisitor
statement code is: MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer())
statement is: org.objectweb.asm.jip.commons.LocalVariablesSorter(ILjava/lang/String;Lorg/objectweb/asm/jip/MethodVisitor;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.objectweb.asm.jip.commons.LocalVariablesSorter
statement code is: LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(2, "pI)@(2x\"EUkpwB", arg2)
statement is: visitIincInsn(II)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: localVariablesSorter.visitIincInsn(21, 3)
statement is: visitIincInsn(II)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: localVariablesSorter.visitIincInsn(21, 6)
test data is: MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer());
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(2, "pI)@(2x\"EUkpwB", methodVisitor);
localVariablesSorter.visitIincInsn(21, 3);
localVariablesSorter.visitIincInsn(21, 6);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer());
        LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(2, "pI)@(2x\"EUkp\u007fwB", methodVisitor);
        localVariablesSorter.visitIincInsn(21, 3);
        localVariablesSorter.visitIincInsn(21, 6);
    }
}
statement is: MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer()), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: mock(MethodVisitor.class, new ViolatedAssumptionAnswer()) target is:  method is: mock(java.lang.Class,<unknown>)
target name is: MethodVisitor argument is: MethodVisitor.class
Matched Method is: mock(interface org.objectweb.asm.jip.MethodVisitor)
statement is: LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(2, "pI)@(2x\"EUkp\u007fwB", methodVisitor), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: localVariablesSorter.visitIincInsn(21, 3), class spoon.support.reflect.code.CtInvocationImpl
invocation is: localVariablesSorter.visitIincInsn(21, 3) target is: localVariablesSorter method is: visitIincInsn(int,int)
source statement: org.objectweb.asm.jip.commons.LocalVariablesSorter(ILjava/lang/String;Lorg/objectweb/asm/jip/MethodVisitor;)V callee: VariableReference: Statement 1, type org.objectweb.asm.jip.commons.LocalVariablesSorterindex is: 3
source statement: org.objectweb.asm.jip.commons.LocalVariablesSorter(ILjava/lang/String;Lorg/objectweb/asm/jip/MethodVisitor;)V callee: VariableReference: Statement 1, type org.objectweb.asm.jip.commons.LocalVariablesSorterindex is: 3
Matched Method is: visitIincInsn(II)V
statement is: localVariablesSorter.visitIincInsn(21, 6), class spoon.support.reflect.code.CtInvocationImpl
invocation is: localVariablesSorter.visitIincInsn(21, 6) target is: localVariablesSorter method is: visitIincInsn(int,int)
source statement: org.objectweb.asm.jip.commons.LocalVariablesSorter(ILjava/lang/String;Lorg/objectweb/asm/jip/MethodVisitor;)V callee: VariableReference: Statement 1, type org.objectweb.asm.jip.commons.LocalVariablesSorterindex is: 3
source statement: org.objectweb.asm.jip.commons.LocalVariablesSorter(ILjava/lang/String;Lorg/objectweb/asm/jip/MethodVisitor;)V callee: VariableReference: Statement 1, type org.objectweb.asm.jip.commons.LocalVariablesSorterindex is: 3
Matched Method is: visitIincInsn(II)V
TestCase is: MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer());
int _int = 2;
String string = "pI)@(2x\"EUkpwB";
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(_int, string, methodVisitor);
int _int = 21;
int _int = 3;
((LocalVariablesSorter) _int).visitIincInsn(_int, _int);
int _int = 21;
int _int = 6;
((LocalVariablesSorter) _int).visitIincInsn(_int, _int);

statement is: mock(interface org.objectweb.asm.jip.MethodVisitor) type is: class org.evosuite.testcase.statements.FunctionalMockStatement return type interface org.objectweb.asm.jip.MethodVisitor
statement code is: MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer())
statement is: org.evosuite.testcase.statements.FieldStatement@230e7eea type is: class org.evosuite.testcase.statements.FieldStatement return type class org.objectweb.asm.jip.Type
statement code is: Type type = Type.BOOLEAN_TYPE
statement is: org.objectweb.asm.jip.commons.LocalVariablesSorter(ILjava/lang/String;Lorg/objectweb/asm/jip/MethodVisitor;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.objectweb.asm.jip.commons.LocalVariablesSorter
statement code is: LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(2, "pI)@(2x\"EUkpwB", arg2)
statement is: newLocal(Lorg/objectweb/asm/jip/Type;)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int newLocal = localVariablesSorter.newLocal(arg0)
statement is: visitVarInsn(II)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: localVariablesSorter.visitVarInsn(22, 3)
test data is: MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer());
Type type = Type.BOOLEAN_TYPE;
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(2, "pI)@(2x\"EUkpwB", methodVisitor);
localVariablesSorter.newLocal(type);
localVariablesSorter.visitVarInsn(22, 3);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer());
        Type type = Type.getType("Ljava/lang/String;");// use a more descriptive and representative type for the test data

        LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(2, "pI)@(2x\"EUkp\u007fwB", methodVisitor);
        localVariablesSorter.newLocal(type);
        localVariablesSorter.visitVarInsn(ASTORE, 3);// use a more descriptive and representative opcode for the test data }}

    }
}
statement is: MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer()), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: mock(MethodVisitor.class, new ViolatedAssumptionAnswer()) target is:  method is: mock(java.lang.Class,<unknown>)
target name is: MethodVisitor argument is: MethodVisitor.class
Matched Method is: mock(interface org.objectweb.asm.jip.MethodVisitor)
statement is: Type type = Type.getType("Ljava/lang/String;")// use a more descriptive and representative type for the test data
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: Type.getType("Ljava/lang/String;") target is: Type method is: getType(java.lang.String)
statement is: LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(2, "pI)@(2x\"EUkp\u007fwB", methodVisitor), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: localVariablesSorter.newLocal(type), class spoon.support.reflect.code.CtInvocationImpl
invocation is: localVariablesSorter.newLocal(type) target is: localVariablesSorter method is: newLocal(Type)
source statement: org.objectweb.asm.jip.commons.LocalVariablesSorter(ILjava/lang/String;Lorg/objectweb/asm/jip/MethodVisitor;)V callee: VariableReference: Statement 2, type org.objectweb.asm.jip.commons.LocalVariablesSorterindex is: 3
Matched Method is: newLocal(Lorg/objectweb/asm/jip/Type;)I
i 0 Parameters size() 0 Num of Method Parameters: 1
statement is: localVariablesSorter.visitVarInsn(ASTORE, 3)// use a more descriptive and representative opcode for the test data }}
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: localVariablesSorter.visitVarInsn(ASTORE, 3)// use a more descriptive and representative opcode for the test data }}
 target is: localVariablesSorter method is: visitVarInsn(int)
source statement: org.objectweb.asm.jip.commons.LocalVariablesSorter(ILjava/lang/String;Lorg/objectweb/asm/jip/MethodVisitor;)V callee: VariableReference: Statement 2, type org.objectweb.asm.jip.commons.LocalVariablesSorterindex is: 3
Matched Method is: visitVarInsn(II)V
i 1 Parameters size() 1 Num of Method Parameters: 2
TestCase is: MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer());
int _int = 2;
String string = "pI)@(2x\"EUkpwB";
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(_int, string, methodVisitor);
Type type = null;
((LocalVariablesSorter) string).newLocal(type);
int _int = 3;
int _int = null;
((LocalVariablesSorter) string).visitVarInsn(_int, _int);

statement is: org.evosuite.testcase.statements.FieldStatement@ba0fd8a0 type is: class org.evosuite.testcase.statements.FieldStatement return type class org.objectweb.asm.jip.Type
statement code is: Type type = Type.CHAR_TYPE
statement is: org.objectweb.asm.jip.commons.LocalVariablesSorter(ILjava/lang/String;Lorg/objectweb/asm/jip/MethodVisitor;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.objectweb.asm.jip.commons.LocalVariablesSorter
statement code is: LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter((-1812), "p)I)G(2\"%Ukp9B", (MethodVisitor) null)
statement is: newLocal(Lorg/objectweb/asm/jip/Type;)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int newLocal = localVariablesSorter.newLocal(arg0)
test data is: Type type = Type.CHAR_TYPE;
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter((-1812), "p)I)G(2\"%Ukp9B", (MethodVisitor) null);
localVariablesSorter.newLocal(type);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Type type = Type.INT_TYPE;
        LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(-1812, "p)I)G(2\"%Ukp\u007f9B", ((MethodVisitor) (null)));
        localVariablesSorter.newLocal(type);
    }
}
statement is: Type type = Type.INT_TYPE, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: Type.INT_TYPE is Type
CtField is: public static org.objectweb.asm.jip.Type org.objectweb.asm.jip.Type.CHAR_TYPE Type CHAR_TYPE
statement is: LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(-1812, "p)I)G(2\"%Ukp\u007f9B", ((MethodVisitor) (null))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: localVariablesSorter.newLocal(type), class spoon.support.reflect.code.CtInvocationImpl
invocation is: localVariablesSorter.newLocal(type) target is: localVariablesSorter method is: newLocal(Type)
source statement: org.objectweb.asm.jip.commons.LocalVariablesSorter(ILjava/lang/String;Lorg/objectweb/asm/jip/MethodVisitor;)V callee: VariableReference: Statement 1, type org.objectweb.asm.jip.commons.LocalVariablesSorterindex is: 2
Matched Method is: newLocal(Lorg/objectweb/asm/jip/Type;)I
TestCase is: Type type = Type.CHAR_TYPE;
String string = "p)I)G(2\"%Ukp9B";
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter((int) string, "p)I)G(2\"%Ukp9B", (MethodVisitor) null);
((LocalVariablesSorter) string).newLocal(type);

statement is: mock(interface org.objectweb.asm.jip.MethodVisitor) type is: class org.evosuite.testcase.statements.FunctionalMockStatement return type interface org.objectweb.asm.jip.MethodVisitor
statement code is: MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer())
statement is: org.evosuite.testcase.statements.FieldStatement@230e7eea type is: class org.evosuite.testcase.statements.FieldStatement return type class org.objectweb.asm.jip.Type
statement code is: Type type = Type.BOOLEAN_TYPE
statement is: org.objectweb.asm.jip.commons.LocalVariablesSorter(ILjava/lang/String;Lorg/objectweb/asm/jip/MethodVisitor;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.objectweb.asm.jip.commons.LocalVariablesSorter
statement code is: LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(23, "pI)@(2x\"EUkpwB", arg2)
statement is: org.evosuite.testcase.statements.AssignmentStatement@6238f1e3 type is: class org.evosuite.testcase.statements.AssignmentStatement return type int
statement code is: localVariablesSorter.nextLocal = (-1874)
statement is: newLocalMapping(Lorg/objectweb/asm/jip/Type;)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int newLocalMapping = localVariablesSorter.newLocalMapping(arg0)
test data is: MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer());
Type type = Type.BOOLEAN_TYPE;
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(23, "pI)@(2x\"EUkpwB", methodVisitor);
localVariablesSorter.nextLocal = (-1874);
localVariablesSorter.newLocalMapping(type);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer());
        Type type = Type.BOOLEAN_TYPE;
        LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(23, "pI)@(2x\"EUkp\u007fwB", methodVisitor);
        localVariablesSorter.nextLocal = 42;
        localVariablesSorter.newLocalMapping(type);
    }
}
statement is: MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer()), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: mock(MethodVisitor.class, new ViolatedAssumptionAnswer()) target is:  method is: mock(java.lang.Class,<unknown>)
target name is: MethodVisitor argument is: MethodVisitor.class
Matched Method is: mock(interface org.objectweb.asm.jip.MethodVisitor)
statement is: Type type = Type.BOOLEAN_TYPE, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: Type.BOOLEAN_TYPE is Type
CtField is: public static org.objectweb.asm.jip.Type org.objectweb.asm.jip.Type.BOOLEAN_TYPE Type BOOLEAN_TYPE
statement is: LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(23, "pI)@(2x\"EUkp\u007fwB", methodVisitor), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: localVariablesSorter.nextLocal = 42, class spoon.support.reflect.code.CtAssignmentImpl
statement is: localVariablesSorter.newLocalMapping(type), class spoon.support.reflect.code.CtInvocationImpl
invocation is: localVariablesSorter.newLocalMapping(type) target is: localVariablesSorter method is: newLocalMapping(Type)
source statement: org.objectweb.asm.jip.commons.LocalVariablesSorter(ILjava/lang/String;Lorg/objectweb/asm/jip/MethodVisitor;)V callee: VariableReference: Statement 2, type org.objectweb.asm.jip.commons.LocalVariablesSorterindex is: 4
Matched Method is: newLocalMapping(Lorg/objectweb/asm/jip/Type;)I
TestCase is: MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer());
Type type = Type.BOOLEAN_TYPE;
int _int = 23;
String string = "pI)@(2x\"EUkpwB";
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(_int, string, methodVisitor);
((LocalVariablesSorter) _int).newLocalMapping(type);

statement is: mock(interface org.objectweb.asm.jip.MethodVisitor) type is: class org.evosuite.testcase.statements.FunctionalMockStatement return type interface org.objectweb.asm.jip.MethodVisitor
statement code is: MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer())
statement is: org.objectweb.asm.jip.MethodAdapter(Lorg/objectweb/asm/jip/MethodVisitor;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.objectweb.asm.jip.MethodAdapter
statement code is: MethodAdapter methodAdapter = new MethodAdapter(arg0)
statement is: org.objectweb.asm.jip.commons.LocalVariablesSorter(ILjava/lang/String;Lorg/objectweb/asm/jip/MethodVisitor;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.objectweb.asm.jip.commons.LocalVariablesSorter
statement code is: LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(813, "B)c?ECrKEfW", arg2)
statement is: org.evosuite.testcase.statements.FieldStatement@79503a9b type is: class org.evosuite.testcase.statements.FieldStatement return type class org.objectweb.asm.jip.Type
statement code is: Type type = Type.INT_TYPE
statement is: newLocalMapping(Lorg/objectweb/asm/jip/Type;)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int newLocalMapping = localVariablesSorter.newLocalMapping(arg0)
test data is: MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer());
MethodAdapter methodAdapter = new MethodAdapter(methodVisitor);
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(813, "B)c?ECrKEfW", methodAdapter);
Type type = Type.INT_TYPE;
localVariablesSorter.newLocalMapping(type);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer());
        MethodAdapter methodAdapter = new MethodAdapter(methodVisitor);
        LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(1000, "Ljava/lang/String;", methodAdapter);
        Type type = Type.INT_TYPE;
        localVariablesSorter.newLocalMapping(type);
    }
}
statement is: MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer()), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: mock(MethodVisitor.class, new ViolatedAssumptionAnswer()) target is:  method is: mock(java.lang.Class,<unknown>)
target name is: MethodVisitor argument is: MethodVisitor.class
Matched Method is: mock(interface org.objectweb.asm.jip.MethodVisitor)
statement is: MethodAdapter methodAdapter = new MethodAdapter(methodVisitor), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(1000, "Ljava/lang/String;", methodAdapter), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Type type = Type.INT_TYPE, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: Type.INT_TYPE is Type
CtField is: public static org.objectweb.asm.jip.Type org.objectweb.asm.jip.Type.INT_TYPE Type INT_TYPE
statement is: localVariablesSorter.newLocalMapping(type), class spoon.support.reflect.code.CtInvocationImpl
invocation is: localVariablesSorter.newLocalMapping(type) target is: localVariablesSorter method is: newLocalMapping(Type)
source statement: org.objectweb.asm.jip.commons.LocalVariablesSorter(ILjava/lang/String;Lorg/objectweb/asm/jip/MethodVisitor;)V callee: VariableReference: Statement 2, type org.objectweb.asm.jip.commons.LocalVariablesSorterindex is: 4
Matched Method is: newLocalMapping(Lorg/objectweb/asm/jip/Type;)I
TestCase is: MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer());
MethodAdapter methodAdapter = new MethodAdapter(methodVisitor);
int _int = 1000;
String string = "Ljava/lang/String;";
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(_int, string, methodAdapter);
Type type = Type.INT_TYPE;
((LocalVariablesSorter) _int).newLocalMapping(type);

statement is: mock(interface org.objectweb.asm.jip.MethodVisitor) type is: class org.evosuite.testcase.statements.FunctionalMockStatement return type interface org.objectweb.asm.jip.MethodVisitor
statement code is: MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer())
statement is: org.objectweb.asm.jip.commons.LocalVariablesSorter(ILjava/lang/String;Lorg/objectweb/asm/jip/MethodVisitor;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.objectweb.asm.jip.commons.LocalVariablesSorter
statement code is: LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(1, "pI)@(2x\"EUkpwB", arg2)
statement is: visitIincInsn(II)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: localVariablesSorter.visitIincInsn(43, 0)
statement is: org.evosuite.testcase.statements.ArrayStatement@d9a6b0a type is: class org.evosuite.testcase.statements.ArrayStatement return type class [Ljava.lang.Object;
statement code is: Object[] objectArray = new Object[4]
statement is: org.evosuite.testcase.statements.AssignmentStatement@f9accb26 type is: class org.evosuite.testcase.statements.AssignmentStatement return type class java.lang.Object
statement code is: objectArray[0] = (Object) "int"
statement is: visitFrame(II[Ljava/lang/Object;I[Ljava/lang/Object;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: localVariablesSorter.visitFrame((-1), 4, arg4, 1683, arg4)
test data is: MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer());
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(1, "pI)@(2x\"EUkpwB", methodVisitor);
localVariablesSorter.visitIincInsn(43, 0);
Object[] objectArray = new Object[4];
objectArray[0] = (Object) "int";
localVariablesSorter.visitFrame((-1), 4, objectArray, 1683, objectArray);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer());
        LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(1, "pI)@(2x\"EUkp\u007fwB", methodVisitor);
        localVariablesSorter.visitIincInsn(43, 0);
        Object[] objectArray = new Object[4];
        objectArray[0] = ((Object) (Integer.valueOf(1)));// Changed to a more descriptive value

        localVariablesSorter.visitFrame(-1, 4, objectArray, 1683, objectArray);
    }
}
statement is: MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer()), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: mock(MethodVisitor.class, new ViolatedAssumptionAnswer()) target is:  method is: mock(java.lang.Class,<unknown>)
target name is: MethodVisitor argument is: MethodVisitor.class
Matched Method is: mock(interface org.objectweb.asm.jip.MethodVisitor)
statement is: LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(1, "pI)@(2x\"EUkp\u007fwB", methodVisitor), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: localVariablesSorter.visitIincInsn(43, 0), class spoon.support.reflect.code.CtInvocationImpl
invocation is: localVariablesSorter.visitIincInsn(43, 0) target is: localVariablesSorter method is: visitIincInsn(int,int)
source statement: org.objectweb.asm.jip.commons.LocalVariablesSorter(ILjava/lang/String;Lorg/objectweb/asm/jip/MethodVisitor;)V callee: VariableReference: Statement 1, type org.objectweb.asm.jip.commons.LocalVariablesSorterindex is: 3
Matched Method is: visitIincInsn(II)V
statement is: Object[] objectArray = new Object[4], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [4] Ct is: Object[] objectArray = new Object[4] isAssignment: false Array: new Object[4] Elements: []
lengths: [4] [4]
Their type are: class [Ljava.lang.Object; Object[]
statement is: objectArray[0] = ((Object) (Integer.valueOf(1)))// Changed to a more descriptive value
, class spoon.support.reflect.code.CtAssignmentImpl
Assigned : objectArray[0] Assigned Type class spoon.support.reflect.code.CtArrayWriteImpl Object Assignment:((Object) (Integer.valueOf(1))) Ct is: objectArray[0] = ((Object) (Integer.valueOf(1)))// Changed to a more descriptive value

target : objectArray class spoon.support.reflect.code.CtLiteralImpl
TestCase Could not be added: org.evosuite.testcase.statements.AssignmentStatement@9658a54f
statement is: localVariablesSorter.visitFrame(-1, 4, objectArray, 1683, objectArray), class spoon.support.reflect.code.CtInvocationImpl
invocation is: localVariablesSorter.visitFrame(-1, 4, objectArray, 1683, objectArray) target is: localVariablesSorter method is: visitFrame(int,int,java.lang.Object[],int,java.lang.Object[])
source statement: org.objectweb.asm.jip.commons.LocalVariablesSorter(ILjava/lang/String;Lorg/objectweb/asm/jip/MethodVisitor;)V callee: VariableReference: Statement 1, type org.objectweb.asm.jip.commons.LocalVariablesSorterindex is: 3
Matched Method is: visitFrame(II[Ljava/lang/Object;I[Ljava/lang/Object;)V
i 4 Parameters size() 4 Num of Method Parameters: 5
TestCase is: MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer());
int _int = 1;
String string = "pI)@(2x\"EUkpwB";
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(_int, string, methodVisitor);
int _int = 43;
int _int = 0;
((LocalVariablesSorter) _int).visitIincInsn(_int, _int);
Object[] objectArray = new Object[4];
int _int = 4;
int _int = 1683;
Object[] objectArray = null;
((LocalVariablesSorter) _int).visitFrame(_int, (int) objectArray, (Object[]) _int, (int) objectArray, objectArray);

statement is: mock(interface org.objectweb.asm.jip.MethodVisitor) type is: class org.evosuite.testcase.statements.FunctionalMockStatement return type interface org.objectweb.asm.jip.MethodVisitor
statement code is: MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer())
statement is: org.objectweb.asm.jip.commons.LocalVariablesSorter(ILjava/lang/String;Lorg/objectweb/asm/jip/MethodVisitor;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.objectweb.asm.jip.commons.LocalVariablesSorter
statement code is: LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(0, "pI)@(2x\"EUkpwB", arg2)
statement is: visitMaxs(II)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: localVariablesSorter.visitMaxs(1, (-1528))
test data is: MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer());
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(0, "pI)@(2x\"EUkpwB", methodVisitor);
localVariablesSorter.visitMaxs(1, (-1528));

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer());
        LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(0, "pI)@(2x\"EUkp\u007fwB", methodVisitor);
        localVariablesSorter.visitMaxs(1, -1528);
    }
}
statement is: MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer()), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: mock(MethodVisitor.class, new ViolatedAssumptionAnswer()) target is:  method is: mock(java.lang.Class,<unknown>)
target name is: MethodVisitor argument is: MethodVisitor.class
Matched Method is: mock(interface org.objectweb.asm.jip.MethodVisitor)
statement is: LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(0, "pI)@(2x\"EUkp\u007fwB", methodVisitor), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: localVariablesSorter.visitMaxs(1, -1528), class spoon.support.reflect.code.CtInvocationImpl
invocation is: localVariablesSorter.visitMaxs(1, -1528) target is: localVariablesSorter method is: visitMaxs(int,int)
source statement: org.objectweb.asm.jip.commons.LocalVariablesSorter(ILjava/lang/String;Lorg/objectweb/asm/jip/MethodVisitor;)V callee: VariableReference: Statement 1, type org.objectweb.asm.jip.commons.LocalVariablesSorterindex is: 3
Matched Method is: visitMaxs(II)V
i 1 Parameters size() 1 Num of Method Parameters: 2
TestCase is: MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer());
int _int = 0;
String string = "pI)@(2x\"EUkpwB";
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(_int, string, methodVisitor);
int _int = 1;
int _int = null;
((LocalVariablesSorter) _int).visitMaxs(_int, _int);

statement is: mock(interface org.objectweb.asm.jip.MethodVisitor) type is: class org.evosuite.testcase.statements.FunctionalMockStatement return type interface org.objectweb.asm.jip.MethodVisitor
statement code is: MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer())
statement is: org.evosuite.testcase.statements.FieldStatement@230e7eea type is: class org.evosuite.testcase.statements.FieldStatement return type class org.objectweb.asm.jip.Type
statement code is: Type type = Type.BOOLEAN_TYPE
statement is: org.objectweb.asm.jip.commons.LocalVariablesSorter(ILjava/lang/String;Lorg/objectweb/asm/jip/MethodVisitor;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.objectweb.asm.jip.commons.LocalVariablesSorter
statement code is: LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(0, "pI)@(2x\"EUkpwB", arg2)
statement is: setLocalType(ILorg/objectweb/asm/jip/Type;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: localVariablesSorter.setLocalType(2, arg1)
test data is: MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer());
Type type = Type.BOOLEAN_TYPE;
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(0, "pI)@(2x\"EUkpwB", methodVisitor);
localVariablesSorter.setLocalType(2, type);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer());
        Type type = Type.BOOLEAN_TYPE;
        LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(0, "pI)@(2x\"EUkp\u007fwB", methodVisitor);
        localVariablesSorter.setLocalType(2, type);
    }
}
statement is: MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer()), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: mock(MethodVisitor.class, new ViolatedAssumptionAnswer()) target is:  method is: mock(java.lang.Class,<unknown>)
target name is: MethodVisitor argument is: MethodVisitor.class
Matched Method is: mock(interface org.objectweb.asm.jip.MethodVisitor)
statement is: Type type = Type.BOOLEAN_TYPE, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtFieldReadImpl
Field is: Type.BOOLEAN_TYPE is Type
CtField is: public static org.objectweb.asm.jip.Type org.objectweb.asm.jip.Type.BOOLEAN_TYPE Type BOOLEAN_TYPE
statement is: LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(0, "pI)@(2x\"EUkp\u007fwB", methodVisitor), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: localVariablesSorter.setLocalType(2, type), class spoon.support.reflect.code.CtInvocationImpl
invocation is: localVariablesSorter.setLocalType(2, type) target is: localVariablesSorter method is: setLocalType(int,Type)
source statement: org.objectweb.asm.jip.commons.LocalVariablesSorter(ILjava/lang/String;Lorg/objectweb/asm/jip/MethodVisitor;)V callee: VariableReference: Statement 2, type org.objectweb.asm.jip.commons.LocalVariablesSorterindex is: 4
Matched Method is: setLocalType(ILorg/objectweb/asm/jip/Type;)V
TestCase is: MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer());
Type type = Type.BOOLEAN_TYPE;
int _int = 0;
String string = "pI)@(2x\"EUkpwB";
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(_int, string, methodVisitor);
int _int = 2;
((LocalVariablesSorter) _int).setLocalType(_int, type);

* test suite isTestSuite: 54
Test 0: 
MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer());
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(2, "pI)@(2x\"EUkpwB", methodVisitor);
Label label = new Label();
localVariablesSorter.visitLocalVariable("pI)@(2x\"EUkpwB", "Z", "Eqv.,#A~\"*Ciuy", label, label, 1);
Test 1: 
MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer());
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(2, "pI)@(2x\"EUkpwB", methodVisitor);
localVariablesSorter.visitVarInsn(21, 5);
Test 2: 
MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer());
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(1, "pI)@(2x\"EUkpwB", methodVisitor);
localVariablesSorter.visitVarInsn(23, 9);
Test 3: 
MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer());
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(1, "pI)@(2x\"EUkpwB", methodVisitor);
localVariablesSorter.visitVarInsn(24, 9);
Test 4: 
MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer());
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(2, "pI)@(2x\"EUkpwB", methodVisitor);
localVariablesSorter.visitVarInsn(54, (-1527));
Test 5: 
MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer());
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(2, "pI)@(2x\"EUkpwB", methodVisitor);
localVariablesSorter.visitVarInsn(55, 66);
Test 6: 
MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer());
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(23, "pI)@(2x\"EUkpwB", methodVisitor);
localVariablesSorter.visitVarInsn(56, 2926);
Test 7: 
MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer());
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(2, "pI)@(2x\"EUkpwB", methodVisitor);
localVariablesSorter.visitVarInsn(57, (-65));
Test 8: 
MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer());
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(0, "pI)@(2x\"EUkpwB", methodVisitor);
Label[] labelArray = new Label[6];
localVariablesSorter.visitFrame((-1), (-1702), (Object[]) null, 2, labelArray);
Test 9: 
MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer());
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(2, "pI)@(2x\"EUkpwB", methodVisitor);
Object[] objectArray = new Object[7];
// Undeclared exception!
try { 
  localVariablesSorter.visitFrame(1, (-1463), objectArray, 0, objectArray);
  fail("Expecting exception: IllegalStateException");

} catch(IllegalStateException e) {
   //
   // ClassReader.accept() should be called with EXPAND_FRAMES flag
   //
   verifyException("org.objectweb.asm.jip.commons.LocalVariablesSorter", e);
}

Test 10: 
MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer());
Type type = Type.DOUBLE_TYPE;
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(1, "p)I)@(2x\"EUkpwB", methodVisitor);
localVariablesSorter.newLocal(type);
localVariablesSorter.visitIincInsn(6, 8);
localVariablesSorter.visitFrame((-1), 0, (Object[]) null, 5, (Object[]) null);
Test 11: 
MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer());
Type type = Type.LONG_TYPE;
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(1, "p)I)@(2x\"EUkpwB", methodVisitor);
localVariablesSorter.newLocal(type);
localVariablesSorter.visitIincInsn(6, 8);
localVariablesSorter.visitFrame((-1), 0, (Object[]) null, 5, (Object[]) null);
Test 12: 
MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer());
Type type = Type.SHORT_TYPE;
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(1, "p)I)@(2x\"EUkpwB", methodVisitor);
localVariablesSorter.newLocal(type);
localVariablesSorter.visitIincInsn(6, 8);
localVariablesSorter.visitFrame((-1), 0, (Object[]) null, 5, (Object[]) null);
Test 13: 
MethodAdapter methodAdapter = new MethodAdapter((MethodVisitor) null);
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(81, "pI)O2xEUkpwabB", methodAdapter);
Type type = Type.BYTE_TYPE;
localVariablesSorter.newLocal(type);
Test 14: 
MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer());
Type type = Type.INT_TYPE;
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(0, "pI)@(2x\"EUkpwB", methodVisitor);
localVariablesSorter.newLocal(type);
Test 15: 
MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer());
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(1, "pI)@(2x\"EUkpwB", methodVisitor);
Type type = Type.FLOAT_TYPE;
localVariablesSorter.newLocal(type);
Test 16: 
MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer());
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(3, "iV)@\u0002E,UkB", methodVisitor);
Type type = Type.getType("[gk,h]RAuA");
localVariablesSorter.newLocal(type);
Test 17: 
MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer());
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(2, "pI)@(2x\"EUkpwB", methodVisitor);
Class<Object> class = Object.class;
Type type = Type.getType(class);
localVariablesSorter.newLocal(type);
Test 18: 
MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer());
Type type = Type.BOOLEAN_TYPE;
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(2, "pI)@(2x\"EUkpwB", methodVisitor);
localVariablesSorter.visitVarInsn((-4669), 4);
localVariablesSorter.newLocal(type);
localVariablesSorter.newLocal(type);
localVariablesSorter.visitIincInsn(89, 95);
localVariablesSorter.visitIincInsn(1034, 4);
localVariablesSorter.newLocal(type);
localVariablesSorter.newLocalMapping(type);
localVariablesSorter.newLocal(type);
localVariablesSorter.newLocal(type);
localVariablesSorter.visitIincInsn(9, (-564));
localVariablesSorter.visitVarInsn(5, 1510);
localVariablesSorter.newLocalMapping(type);
localVariablesSorter.newLocal(type);
localVariablesSorter.visitVarInsn(1, 3042);
localVariablesSorter.newLocal(type);
localVariablesSorter.newLocal(type);
localVariablesSorter.newLocal(type);
localVariablesSorter.newLocalMapping(type);
localVariablesSorter.newLocal(type);
Test 19: 
MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer());
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(2, "pI)@(2x\"EUkpwB", methodVisitor);
localVariablesSorter.visitIincInsn(21, 3);
localVariablesSorter.visitIincInsn(21, 6);
Test 20: 
MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer());
Type type = Type.BOOLEAN_TYPE;
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(2, "pI)@(2x\"EUkpwB", methodVisitor);
localVariablesSorter.newLocal(type);
localVariablesSorter.visitVarInsn(22, 3);
Test 21: 
Type type = Type.CHAR_TYPE;
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter((-1812), "p)I)G(2\"%Ukp9B", (MethodVisitor) null);
localVariablesSorter.newLocal(type);
Test 22: 
MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer());
Type type = Type.BOOLEAN_TYPE;
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(23, "pI)@(2x\"EUkpwB", methodVisitor);
localVariablesSorter.nextLocal = (-1874);
localVariablesSorter.newLocalMapping(type);
Test 23: 
MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer());
MethodAdapter methodAdapter = new MethodAdapter(methodVisitor);
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(813, "B)c?ECrKEfW", methodAdapter);
Type type = Type.INT_TYPE;
localVariablesSorter.newLocalMapping(type);
Test 24: 
MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer());
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(1, "pI)@(2x\"EUkpwB", methodVisitor);
localVariablesSorter.visitIincInsn(43, 0);
Object[] objectArray = new Object[4];
objectArray[0] = (Object) "int";
// Undeclared exception!
try { 
  localVariablesSorter.visitFrame((-1), 4, objectArray, 1683, objectArray);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 25: 
MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer());
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(0, "pI)@(2x\"EUkpwB", methodVisitor);
localVariablesSorter.visitMaxs(1, (-1528));
Test 26: 
MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer());
Type type = Type.BOOLEAN_TYPE;
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(0, "pI)@(2x\"EUkpwB", methodVisitor);
localVariablesSorter.setLocalType(2, type);
Test 27: 
MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer());
int _int = 2;
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(2, "myInt", methodVisitor);
Label label = new Label();
String string = "myInt";
String string = "I";
String string = "myInteger";
int _int = 1;
((LocalVariablesSorter) _int).visitLocalVariable(string, string, string, label, label, _int);

Test 28: 
MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer());
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(2, "pI)@(2x\"EUkpwB", methodVisitor);
((LocalVariablesSorter)2).visitVarInsn(21, 5);

Test 29: 
MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer());
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(1, "pI)@(2x\"EUkpwB", methodVisitor);
((LocalVariablesSorter)1).visitVarInsn(23, 9);

Test 30: 
MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer());
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(1, "pI)@(2x\"EUkpwB", methodVisitor);
((LocalVariablesSorter)1).visitVarInsn(24, 9);

Test 31: 
MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer());
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(2, "pI)@(2x\"EUkpwB", methodVisitor);
((LocalVariablesSorter)2).visitVarInsn(54, (int) (Integer) null);

Test 32: 
MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer());
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(2, "pI)@(2x\"EUkpwB", methodVisitor);
((LocalVariablesSorter)2).visitVarInsn((int) (Integer) null, (int) (Integer) null);

Test 33: 
MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer());
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(23, "pI)@(2x\"EUkpwB", methodVisitor);
((LocalVariablesSorter)23).visitVarInsn(56, 100);

Test 34: 
MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer());
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(2, "pI)@(2x\"EUkpwB", methodVisitor);
((LocalVariablesSorter)2).visitVarInsn(57, (int) (Integer) null);

Test 35: 
MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer());
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(0, "This is a string literal used as an input value", methodVisitor);
Label[] labelArray = new Label[6];

Test 36: 
MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer());
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(2, "pI)@(2x\"EUkpwB", methodVisitor);
Object[] objectArray = new Object[7];
((LocalVariablesSorter)2).visitFrame(1, (int) objectArray, (Object[]) 0, (int) objectArray, (Object[]) null);

Test 37: 
MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer());
Type type = Type.DOUBLE_TYPE;
int _int = 1;
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(1, "p)I)@(2x\"EUkpwB", methodVisitor);
((LocalVariablesSorter)1).newLocal(type);
int _int = 6;
int _int = 8;
((LocalVariablesSorter) _int).visitIincInsn(_int, _int);
int _int = 0;
int _int = 5;
Object[] objectArray = null;
int _int = null;
Object[] objectArray = null;
((LocalVariablesSorter) _int).visitFrame(_int, _int, objectArray, _int, objectArray);

Test 38: 
MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer());
Type type = Type.LONG_TYPE;
int _int = 1;
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(1, "p)I)@(2x\"EUkpwB", methodVisitor);
((LocalVariablesSorter)1).newLocal(type);
int _int = 6;
int _int = 8;
((LocalVariablesSorter) _int).visitIincInsn(_int, _int);
int _int = 0;
int _int = 5;
Object[] objectArray = null;
int _int = null;
Object[] objectArray = null;
((LocalVariablesSorter) _int).visitFrame(_int, _int, objectArray, _int, objectArray);

Test 39: 
MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer());
Type type = Type.SHORT_TYPE;
int _int = 1;
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(1, "p)I)@(2x\"EUkpwB", methodVisitor);
((LocalVariablesSorter)1).newLocal(type);
int _int = 6;
int _int = 8;
((LocalVariablesSorter) _int).visitIincInsn(_int, _int);
int _int = 0;
int _int = 5;
Object[] objectArray = null;
int _int = null;
Object[] objectArray = null;
((LocalVariablesSorter) _int).visitFrame(_int, _int, objectArray, _int, objectArray);
int _int = 6;
int _int = 8;
((LocalVariablesSorter) _int).visitIincInsn(_int, _int);
int _int = 0;
int _int = 5;
Object[] objectArray = null;
int _int = null;
Object[] objectArray = null;
((LocalVariablesSorter) _int).visitFrame(_int, _int, objectArray, _int, objectArray);

Test 40: 
MethodAdapter methodAdapter = new MethodAdapter((MethodVisitor) null);
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(81, "pI)O2xEUkpwabB", methodAdapter);
((LocalVariablesSorter)81).newLocal((Type) null);

Test 41: 
MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer());
Type type = Type.INT_TYPE;
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(0, "pI)@(2x\"EUkpwB", methodVisitor);
((LocalVariablesSorter)0).newLocal(type);

Test 42: 
MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer());
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(1, "pI)@(2x\"EUkpwB", methodVisitor);
((LocalVariablesSorter)1).newLocal((Type) null);

Test 43: 
MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer());
String string = "myMethod";
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter((int) "myMethod", (String) methodVisitor, methodVisitor);
String string = "[gk,h]RAuA";
Type type = Type.getType(string);
((LocalVariablesSorter) string).newLocal(type);

Test 44: 
MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer());
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(2, "pI)@(2x\"EUkpwB", methodVisitor);
((LocalVariablesSorter)2).newLocal((Type) null);

Test 45: 
MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer());
Type type = Type.BOOLEAN_TYPE;
int _int = 2;
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(2, "pI)@(2x\"EUkpwB", methodVisitor);
((LocalVariablesSorter)2).visitVarInsn(4, (int) (Integer) null);
((LocalVariablesSorter) _int).newLocal(type);
((LocalVariablesSorter) _int).newLocal(type);
int _int = 89;
int _int = 95;
((LocalVariablesSorter) _int).visitIincInsn(_int, _int);
int _int = 1034;
int _int = 4;
((LocalVariablesSorter) _int).visitIincInsn(_int, _int);
((LocalVariablesSorter) _int).newLocal(type);
((LocalVariablesSorter) _int).newLocalMapping(type);
((LocalVariablesSorter) _int).newLocal(type);
((LocalVariablesSorter) _int).newLocal(type);
int _int = 9;
int _int = null;
((LocalVariablesSorter) _int).visitIincInsn(_int, _int);
int _int = 5;
int _int = 1510;
((LocalVariablesSorter) _int).visitVarInsn(_int, _int);
((LocalVariablesSorter) _int).newLocalMapping(type);
((LocalVariablesSorter) _int).newLocal(type);
int _int = 1;
int _int = 3042;
((LocalVariablesSorter) _int).visitVarInsn(_int, _int);
((LocalVariablesSorter) _int).newLocal(type);
((LocalVariablesSorter) _int).newLocal(type);
((LocalVariablesSorter) _int).newLocal(type);
((LocalVariablesSorter) _int).newLocalMapping(type);
((LocalVariablesSorter) _int).newLocal(type);

Test 46: 
MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer());
int _int = 2;
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(2, "pI)@(2x\"EUkpwB", methodVisitor);
((LocalVariablesSorter)2).visitIincInsn(21, 3);
int _int = 21;
int _int = 6;
((LocalVariablesSorter) _int).visitIincInsn(_int, _int);

Test 47: 
MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer());
String string = "pI)@(2x\"EUkpwB";
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(2, "pI)@(2x\"EUkpwB", methodVisitor);
((LocalVariablesSorter)"pI)@(2x\"EUkpwB").newLocal((Type) null);
int _int = 3;
int _int = null;
((LocalVariablesSorter) string).visitVarInsn(_int, _int);

Test 48: 
Type type = Type.CHAR_TYPE;
String string = "p)I)G(2\"%Ukp9B";
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter((int) "p)I)G(2\"%Ukp9B", "p)I)G(2\"%Ukp9B", (MethodVisitor) null);
((LocalVariablesSorter) string).newLocal(type);

Test 49: 
MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer());
Type type = Type.BOOLEAN_TYPE;
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(23, "pI)@(2x\"EUkpwB", methodVisitor);
((LocalVariablesSorter)23).newLocalMapping(type);

Test 50: 
MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer());
MethodAdapter methodAdapter = new MethodAdapter(methodVisitor);
int _int = 1000;
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(1000, "Ljava/lang/String;", methodAdapter);
Type type = Type.INT_TYPE;
((LocalVariablesSorter) _int).newLocalMapping(type);

Test 51: 
MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer());
int _int = 1;
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(1, "pI)@(2x\"EUkpwB", methodVisitor);
((LocalVariablesSorter)1).visitIincInsn(43, 0);
Object[] objectArray = new Object[4];
int _int = 4;
int _int = 1683;
Object[] objectArray = null;
((LocalVariablesSorter) _int).visitFrame(_int, (int) objectArray, (Object[]) _int, (int) objectArray, objectArray);

Test 52: 
MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer());
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(0, "pI)@(2x\"EUkpwB", methodVisitor);
((LocalVariablesSorter)0).visitMaxs(1, (int) (Integer) null);

Test 53: 
MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer());
Type type = Type.BOOLEAN_TYPE;
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(0, "pI)@(2x\"EUkpwB", methodVisitor);
((LocalVariablesSorter)0).setLocalType(2, type);


* Generated after the refinement and before minimization 54 tests with total length 313
* test suite isTestSuite: 54
Test 0: 
MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer());
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(2, "pI)@(2x\"EUkpwB", methodVisitor);
Label label = new Label();
localVariablesSorter.visitLocalVariable("pI)@(2x\"EUkpwB", "Z", "Eqv.,#A~\"*Ciuy", label, label, 1);
Test 1: 
MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer());
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(2, "pI)@(2x\"EUkpwB", methodVisitor);
localVariablesSorter.visitVarInsn(21, 5);
Test 2: 
MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer());
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(1, "pI)@(2x\"EUkpwB", methodVisitor);
localVariablesSorter.visitVarInsn(23, 9);
Test 3: 
MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer());
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(1, "pI)@(2x\"EUkpwB", methodVisitor);
localVariablesSorter.visitVarInsn(24, 9);
Test 4: 
MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer());
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(2, "pI)@(2x\"EUkpwB", methodVisitor);
localVariablesSorter.visitVarInsn(54, (-1527));
Test 5: 
MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer());
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(2, "pI)@(2x\"EUkpwB", methodVisitor);
localVariablesSorter.visitVarInsn(55, 66);
Test 6: 
MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer());
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(23, "pI)@(2x\"EUkpwB", methodVisitor);
localVariablesSorter.visitVarInsn(56, 2926);
Test 7: 
MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer());
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(2, "pI)@(2x\"EUkpwB", methodVisitor);
localVariablesSorter.visitVarInsn(57, (-65));
Test 8: 
MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer());
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(0, "pI)@(2x\"EUkpwB", methodVisitor);
Label[] labelArray = new Label[6];
localVariablesSorter.visitFrame((-1), (-1702), (Object[]) null, 2, labelArray);
Test 9: 
MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer());
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(2, "pI)@(2x\"EUkpwB", methodVisitor);
Object[] objectArray = new Object[7];
// Undeclared exception!
try { 
  localVariablesSorter.visitFrame(1, (-1463), objectArray, 0, objectArray);
  fail("Expecting exception: IllegalStateException");

} catch(IllegalStateException e) {
   //
   // ClassReader.accept() should be called with EXPAND_FRAMES flag
   //
   verifyException("org.objectweb.asm.jip.commons.LocalVariablesSorter", e);
}

Test 10: 
MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer());
Type type = Type.DOUBLE_TYPE;
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(1, "p)I)@(2x\"EUkpwB", methodVisitor);
localVariablesSorter.newLocal(type);
localVariablesSorter.visitIincInsn(6, 8);
localVariablesSorter.visitFrame((-1), 0, (Object[]) null, 5, (Object[]) null);
Test 11: 
MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer());
Type type = Type.LONG_TYPE;
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(1, "p)I)@(2x\"EUkpwB", methodVisitor);
localVariablesSorter.newLocal(type);
localVariablesSorter.visitIincInsn(6, 8);
localVariablesSorter.visitFrame((-1), 0, (Object[]) null, 5, (Object[]) null);
Test 12: 
MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer());
Type type = Type.SHORT_TYPE;
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(1, "p)I)@(2x\"EUkpwB", methodVisitor);
localVariablesSorter.newLocal(type);
localVariablesSorter.visitIincInsn(6, 8);
localVariablesSorter.visitFrame((-1), 0, (Object[]) null, 5, (Object[]) null);
Test 13: 
MethodAdapter methodAdapter = new MethodAdapter((MethodVisitor) null);
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(81, "pI)O2xEUkpwabB", methodAdapter);
Type type = Type.BYTE_TYPE;
localVariablesSorter.newLocal(type);
Test 14: 
MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer());
Type type = Type.INT_TYPE;
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(0, "pI)@(2x\"EUkpwB", methodVisitor);
localVariablesSorter.newLocal(type);
Test 15: 
MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer());
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(1, "pI)@(2x\"EUkpwB", methodVisitor);
Type type = Type.FLOAT_TYPE;
localVariablesSorter.newLocal(type);
Test 16: 
MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer());
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(3, "iV)@\u0002E,UkB", methodVisitor);
Type type = Type.getType("[gk,h]RAuA");
localVariablesSorter.newLocal(type);
Test 17: 
MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer());
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(2, "pI)@(2x\"EUkpwB", methodVisitor);
Class<Object> class = Object.class;
Type type = Type.getType(class);
localVariablesSorter.newLocal(type);
Test 18: 
MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer());
Type type = Type.BOOLEAN_TYPE;
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(2, "pI)@(2x\"EUkpwB", methodVisitor);
localVariablesSorter.visitVarInsn((-4669), 4);
localVariablesSorter.newLocal(type);
localVariablesSorter.newLocal(type);
localVariablesSorter.visitIincInsn(89, 95);
localVariablesSorter.visitIincInsn(1034, 4);
localVariablesSorter.newLocal(type);
localVariablesSorter.newLocalMapping(type);
localVariablesSorter.newLocal(type);
localVariablesSorter.newLocal(type);
localVariablesSorter.visitIincInsn(9, (-564));
localVariablesSorter.visitVarInsn(5, 1510);
localVariablesSorter.newLocalMapping(type);
localVariablesSorter.newLocal(type);
localVariablesSorter.visitVarInsn(1, 3042);
localVariablesSorter.newLocal(type);
localVariablesSorter.newLocal(type);
localVariablesSorter.newLocal(type);
localVariablesSorter.newLocalMapping(type);
localVariablesSorter.newLocal(type);
Test 19: 
MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer());
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(2, "pI)@(2x\"EUkpwB", methodVisitor);
localVariablesSorter.visitIincInsn(21, 3);
localVariablesSorter.visitIincInsn(21, 6);
Test 20: 
MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer());
Type type = Type.BOOLEAN_TYPE;
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(2, "pI)@(2x\"EUkpwB", methodVisitor);
localVariablesSorter.newLocal(type);
localVariablesSorter.visitVarInsn(22, 3);
Test 21: 
Type type = Type.CHAR_TYPE;
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter((-1812), "p)I)G(2\"%Ukp9B", (MethodVisitor) null);
localVariablesSorter.newLocal(type);
Test 22: 
MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer());
Type type = Type.BOOLEAN_TYPE;
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(23, "pI)@(2x\"EUkpwB", methodVisitor);
localVariablesSorter.nextLocal = (-1874);
localVariablesSorter.newLocalMapping(type);
Test 23: 
MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer());
MethodAdapter methodAdapter = new MethodAdapter(methodVisitor);
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(813, "B)c?ECrKEfW", methodAdapter);
Type type = Type.INT_TYPE;
localVariablesSorter.newLocalMapping(type);
Test 24: 
MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer());
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(1, "pI)@(2x\"EUkpwB", methodVisitor);
localVariablesSorter.visitIincInsn(43, 0);
Object[] objectArray = new Object[4];
objectArray[0] = (Object) "int";
// Undeclared exception!
try { 
  localVariablesSorter.visitFrame((-1), 4, objectArray, 1683, objectArray);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 25: 
MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer());
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(0, "pI)@(2x\"EUkpwB", methodVisitor);
localVariablesSorter.visitMaxs(1, (-1528));
Test 26: 
MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer());
Type type = Type.BOOLEAN_TYPE;
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(0, "pI)@(2x\"EUkpwB", methodVisitor);
localVariablesSorter.setLocalType(2, type);
Test 27: 
MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer());
int _int = 2;
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(2, "myInt", methodVisitor);
Label label = new Label();
String string = "myInt";
String string = "I";
String string = "myInteger";
int _int = 1;
((LocalVariablesSorter) _int).visitLocalVariable(string, string, string, label, label, _int);

Test 28: 
MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer());
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(2, "pI)@(2x\"EUkpwB", methodVisitor);
((LocalVariablesSorter)2).visitVarInsn(21, 5);

Test 29: 
MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer());
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(1, "pI)@(2x\"EUkpwB", methodVisitor);
((LocalVariablesSorter)1).visitVarInsn(23, 9);

Test 30: 
MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer());
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(1, "pI)@(2x\"EUkpwB", methodVisitor);
((LocalVariablesSorter)1).visitVarInsn(24, 9);

Test 31: 
MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer());
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(2, "pI)@(2x\"EUkpwB", methodVisitor);
((LocalVariablesSorter)2).visitVarInsn(54, (int) (Integer) null);

Test 32: 
MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer());
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(2, "pI)@(2x\"EUkpwB", methodVisitor);
((LocalVariablesSorter)2).visitVarInsn((int) (Integer) null, (int) (Integer) null);

Test 33: 
MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer());
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(23, "pI)@(2x\"EUkpwB", methodVisitor);
((LocalVariablesSorter)23).visitVarInsn(56, 100);

Test 34: 
MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer());
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(2, "pI)@(2x\"EUkpwB", methodVisitor);
((LocalVariablesSorter)2).visitVarInsn(57, (int) (Integer) null);

Test 35: 
MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer());
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(0, "This is a string literal used as an input value", methodVisitor);
Label[] labelArray = new Label[6];

Test 36: 
MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer());
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(2, "pI)@(2x\"EUkpwB", methodVisitor);
Object[] objectArray = new Object[7];
((LocalVariablesSorter)2).visitFrame(1, (int) objectArray, (Object[]) 0, (int) objectArray, (Object[]) null);

Test 37: 
MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer());
Type type = Type.DOUBLE_TYPE;
int _int = 1;
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(1, "p)I)@(2x\"EUkpwB", methodVisitor);
((LocalVariablesSorter)1).newLocal(type);
int _int = 6;
int _int = 8;
((LocalVariablesSorter) _int).visitIincInsn(_int, _int);
int _int = 0;
int _int = 5;
Object[] objectArray = null;
int _int = null;
Object[] objectArray = null;
((LocalVariablesSorter) _int).visitFrame(_int, _int, objectArray, _int, objectArray);

Test 38: 
MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer());
Type type = Type.LONG_TYPE;
int _int = 1;
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(1, "p)I)@(2x\"EUkpwB", methodVisitor);
((LocalVariablesSorter)1).newLocal(type);
int _int = 6;
int _int = 8;
((LocalVariablesSorter) _int).visitIincInsn(_int, _int);
int _int = 0;
int _int = 5;
Object[] objectArray = null;
int _int = null;
Object[] objectArray = null;
((LocalVariablesSorter) _int).visitFrame(_int, _int, objectArray, _int, objectArray);

Test 39: 
MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer());
Type type = Type.SHORT_TYPE;
int _int = 1;
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(1, "p)I)@(2x\"EUkpwB", methodVisitor);
((LocalVariablesSorter)1).newLocal(type);
int _int = 6;
int _int = 8;
((LocalVariablesSorter) _int).visitIincInsn(_int, _int);
int _int = 0;
int _int = 5;
Object[] objectArray = null;
int _int = null;
Object[] objectArray = null;
((LocalVariablesSorter) _int).visitFrame(_int, _int, objectArray, _int, objectArray);
int _int = 6;
int _int = 8;
((LocalVariablesSorter) _int).visitIincInsn(_int, _int);
int _int = 0;
int _int = 5;
Object[] objectArray = null;
int _int = null;
Object[] objectArray = null;
((LocalVariablesSorter) _int).visitFrame(_int, _int, objectArray, _int, objectArray);

Test 40: 
MethodAdapter methodAdapter = new MethodAdapter((MethodVisitor) null);
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(81, "pI)O2xEUkpwabB", methodAdapter);
((LocalVariablesSorter)81).newLocal((Type) null);

Test 41: 
MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer());
Type type = Type.INT_TYPE;
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(0, "pI)@(2x\"EUkpwB", methodVisitor);
((LocalVariablesSorter)0).newLocal(type);

Test 42: 
MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer());
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(1, "pI)@(2x\"EUkpwB", methodVisitor);
((LocalVariablesSorter)1).newLocal((Type) null);

Test 43: 
MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer());
String string = "myMethod";
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter((int) "myMethod", (String) methodVisitor, methodVisitor);
String string = "[gk,h]RAuA";
Type type = Type.getType(string);
((LocalVariablesSorter) string).newLocal(type);

Test 44: 
MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer());
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(2, "pI)@(2x\"EUkpwB", methodVisitor);
((LocalVariablesSorter)2).newLocal((Type) null);

Test 45: 
MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer());
Type type = Type.BOOLEAN_TYPE;
int _int = 2;
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(2, "pI)@(2x\"EUkpwB", methodVisitor);
((LocalVariablesSorter)2).visitVarInsn(4, (int) (Integer) null);
((LocalVariablesSorter) _int).newLocal(type);
((LocalVariablesSorter) _int).newLocal(type);
int _int = 89;
int _int = 95;
((LocalVariablesSorter) _int).visitIincInsn(_int, _int);
int _int = 1034;
int _int = 4;
((LocalVariablesSorter) _int).visitIincInsn(_int, _int);
((LocalVariablesSorter) _int).newLocal(type);
((LocalVariablesSorter) _int).newLocalMapping(type);
((LocalVariablesSorter) _int).newLocal(type);
((LocalVariablesSorter) _int).newLocal(type);
int _int = 9;
int _int = null;
((LocalVariablesSorter) _int).visitIincInsn(_int, _int);
int _int = 5;
int _int = 1510;
((LocalVariablesSorter) _int).visitVarInsn(_int, _int);
((LocalVariablesSorter) _int).newLocalMapping(type);
((LocalVariablesSorter) _int).newLocal(type);
int _int = 1;
int _int = 3042;
((LocalVariablesSorter) _int).visitVarInsn(_int, _int);
((LocalVariablesSorter) _int).newLocal(type);
((LocalVariablesSorter) _int).newLocal(type);
((LocalVariablesSorter) _int).newLocal(type);
((LocalVariablesSorter) _int).newLocalMapping(type);
((LocalVariablesSorter) _int).newLocal(type);

Test 46: 
MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer());
int _int = 2;
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(2, "pI)@(2x\"EUkpwB", methodVisitor);
((LocalVariablesSorter)2).visitIincInsn(21, 3);
int _int = 21;
int _int = 6;
((LocalVariablesSorter) _int).visitIincInsn(_int, _int);

Test 47: 
MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer());
String string = "pI)@(2x\"EUkpwB";
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(2, "pI)@(2x\"EUkpwB", methodVisitor);
((LocalVariablesSorter)"pI)@(2x\"EUkpwB").newLocal((Type) null);
int _int = 3;
int _int = null;
((LocalVariablesSorter) string).visitVarInsn(_int, _int);

Test 48: 
Type type = Type.CHAR_TYPE;
String string = "p)I)G(2\"%Ukp9B";
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter((int) "p)I)G(2\"%Ukp9B", "p)I)G(2\"%Ukp9B", (MethodVisitor) null);
((LocalVariablesSorter) string).newLocal(type);

Test 49: 
MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer());
Type type = Type.BOOLEAN_TYPE;
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(23, "pI)@(2x\"EUkpwB", methodVisitor);
((LocalVariablesSorter)23).newLocalMapping(type);

Test 50: 
MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer());
MethodAdapter methodAdapter = new MethodAdapter(methodVisitor);
int _int = 1000;
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(1000, "Ljava/lang/String;", methodAdapter);
Type type = Type.INT_TYPE;
((LocalVariablesSorter) _int).newLocalMapping(type);

Test 51: 
MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer());
int _int = 1;
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(1, "pI)@(2x\"EUkpwB", methodVisitor);
((LocalVariablesSorter)1).visitIincInsn(43, 0);
Object[] objectArray = new Object[4];
int _int = 4;
int _int = 1683;
Object[] objectArray = null;
((LocalVariablesSorter) _int).visitFrame(_int, (int) objectArray, (Object[]) _int, (int) objectArray, objectArray);

Test 52: 
MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer());
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(0, "pI)@(2x\"EUkpwB", methodVisitor);
((LocalVariablesSorter)0).visitMaxs(1, (int) (Integer) null);

Test 53: 
MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer());
Type type = Type.BOOLEAN_TYPE;
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(0, "pI)@(2x\"EUkpwB", methodVisitor);
((LocalVariablesSorter)0).setLocalType(2, type);


* Minimizing test suite
* test suite isTestSuite: 27
Test 0: 
MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer());
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(2, "pI)@(2x\"EUkpwB", methodVisitor);
Label label = new Label();
localVariablesSorter.visitLocalVariable("pI)@(2x\"EUkpwB", "Z", "Eqv.,#A~\"*Ciuy", label, label, 1);
Test 1: 
MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer());
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(2, "pI)@(2x\"EUkpwB", methodVisitor);
localVariablesSorter.visitIincInsn(21, 3);
localVariablesSorter.visitIincInsn(21, 6);
Test 2: 
MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer());
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(0, "pI)@(2x\"EUkpwB", methodVisitor);
localVariablesSorter.visitMaxs(1, (-1528));
Test 3: 
MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer());
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(2, "pI)@(2x\"EUkpwB", methodVisitor);
localVariablesSorter.visitVarInsn(21, 5);
Test 4: 
MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer());
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(1, "pI)@(2x\"EUkpwB", methodVisitor);
localVariablesSorter.visitVarInsn(23, 9);
Test 5: 
MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer());
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(1, "pI)@(2x\"EUkpwB", methodVisitor);
localVariablesSorter.visitVarInsn(24, 9);
Test 6: 
MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer());
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(2, "pI)@(2x\"EUkpwB", methodVisitor);
localVariablesSorter.visitVarInsn(54, (-1527));
Test 7: 
MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer());
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(2, "pI)@(2x\"EUkpwB", methodVisitor);
localVariablesSorter.visitVarInsn(55, 66);
Test 8: 
MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer());
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(23, "pI)@(2x\"EUkpwB", methodVisitor);
localVariablesSorter.visitVarInsn(56, 2926);
Test 9: 
MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer());
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(2, "pI)@(2x\"EUkpwB", methodVisitor);
localVariablesSorter.visitVarInsn(57, (-65));
Test 10: 
MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer());
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(0, "pI)@(2x\"EUkpwB", methodVisitor);
Label[] labelArray = new Label[6];
localVariablesSorter.visitFrame((-1), (-1702), (Object[]) null, 2, labelArray);
Test 11: 
MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer());
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(2, "pI)@(2x\"EUkpwB", methodVisitor);
Object[] objectArray = new Object[7];
// Undeclared exception!
try { 
  localVariablesSorter.visitFrame(1, (-1463), objectArray, 0, objectArray);
  fail("Expecting exception: IllegalStateException");

} catch(IllegalStateException e) {
   //
   // ClassReader.accept() should be called with EXPAND_FRAMES flag
   //
   verifyException("org.objectweb.asm.jip.commons.LocalVariablesSorter", e);
}

Test 12: 
MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer());
Type type = Type.DOUBLE_TYPE;
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(1, "p)I)@(2x\"EUkpwB", methodVisitor);
localVariablesSorter.newLocal(type);
localVariablesSorter.visitIincInsn(6, 8);
localVariablesSorter.visitFrame((-1), 0, (Object[]) null, 5, (Object[]) null);
Test 13: 
MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer());
Type type = Type.LONG_TYPE;
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(1, "p)I)@(2x\"EUkpwB", methodVisitor);
localVariablesSorter.newLocal(type);
localVariablesSorter.visitIincInsn(6, 8);
localVariablesSorter.visitFrame((-1), 0, (Object[]) null, 5, (Object[]) null);
Test 14: 
MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer());
Type type = Type.SHORT_TYPE;
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(1, "p)I)@(2x\"EUkpwB", methodVisitor);
localVariablesSorter.newLocal(type);
localVariablesSorter.visitIincInsn(6, 8);
localVariablesSorter.visitFrame((-1), 0, (Object[]) null, 5, (Object[]) null);
Test 15: 
Type type = Type.CHAR_TYPE;
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter((-1812), "p)I)G(2\"%Ukp9B", (MethodVisitor) null);
localVariablesSorter.newLocal(type);
Test 16: 
MethodAdapter methodAdapter = new MethodAdapter((MethodVisitor) null);
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(81, "pI)O2xEUkpwabB", methodAdapter);
Type type = Type.BYTE_TYPE;
localVariablesSorter.newLocal(type);
Test 17: 
MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer());
Type type = Type.INT_TYPE;
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(0, "pI)@(2x\"EUkpwB", methodVisitor);
localVariablesSorter.newLocal(type);
Test 18: 
MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer());
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(1, "pI)@(2x\"EUkpwB", methodVisitor);
Type type = Type.FLOAT_TYPE;
localVariablesSorter.newLocal(type);
Test 19: 
MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer());
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(3, "iV)@\u0002E,UkB", methodVisitor);
Type type = Type.getType("[gk,h]RAuA");
localVariablesSorter.newLocal(type);
Test 20: 
MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer());
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(2, "pI)@(2x\"EUkpwB", methodVisitor);
Class<Object> class = Object.class;
Type type = Type.getType(class);
localVariablesSorter.newLocal(type);
Test 21: 
MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer());
Type type = Type.BOOLEAN_TYPE;
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(2, "pI)@(2x\"EUkpwB", methodVisitor);
localVariablesSorter.visitVarInsn((-4669), 4);
localVariablesSorter.newLocal(type);
localVariablesSorter.newLocal(type);
localVariablesSorter.visitIincInsn(89, 95);
localVariablesSorter.visitIincInsn(1034, 4);
localVariablesSorter.newLocal(type);
localVariablesSorter.newLocalMapping(type);
localVariablesSorter.newLocal(type);
localVariablesSorter.newLocal(type);
localVariablesSorter.visitIincInsn(9, (-564));
localVariablesSorter.visitVarInsn(5, 1510);
localVariablesSorter.newLocalMapping(type);
localVariablesSorter.newLocal(type);
localVariablesSorter.visitVarInsn(1, 3042);
localVariablesSorter.newLocal(type);
localVariablesSorter.newLocal(type);
localVariablesSorter.newLocal(type);
localVariablesSorter.newLocalMapping(type);
localVariablesSorter.newLocal(type);
Test 22: 
MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer());
Type type = Type.BOOLEAN_TYPE;
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(2, "pI)@(2x\"EUkpwB", methodVisitor);
localVariablesSorter.newLocal(type);
localVariablesSorter.visitVarInsn(22, 3);
Test 23: 
MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer());
Type type = Type.BOOLEAN_TYPE;
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(23, "pI)@(2x\"EUkpwB", methodVisitor);
localVariablesSorter.nextLocal = (-1874);
localVariablesSorter.newLocalMapping(type);
Test 24: 
MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer());
MethodAdapter methodAdapter = new MethodAdapter(methodVisitor);
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(813, "B)c?ECrKEfW", methodAdapter);
Type type = Type.INT_TYPE;
localVariablesSorter.newLocalMapping(type);
Test 25: 
MethodVisitor methodVisitor = mock(MethodVisitor.class, new ViolatedAssumptionAnswer());
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(1, "pI)@(2x\"EUkpwB", methodVisitor);
localVariablesSorter.visitIincInsn(43, 0);
Object[] objectArray = new Object[4];
objectArray[0] = (Object) "int";
// Undeclared exception!
try { 
  localVariablesSorter.visitFrame((-1), 4, objectArray, 1683, objectArray);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 26: 
Type type = Type.BOOLEAN_TYPE;
// Undeclared exception!
try { 
  ((LocalVariablesSorter)0).setLocalType(2, type);
  fail("Expecting exception: IllegalArgumentException");

} catch(IllegalArgumentException e) {
}


* Going to analyze the coverage criteria
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 91%
* Total number of goals: 87
* Number of covered goals: 79
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 96%
* Total number of goals: 110
* Number of covered goals: 106
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 83%
* Total number of goals: 6
* Number of covered goals: 5
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 9
* Number of covered goals: 9
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 91%
* Total number of goals: 87
* Number of covered goals: 79
* Generated 27 tests with total length 127
* Resulting test suite's coverage: 92% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 28%
* Compiling and checking tests
Going to execute: removeTestsThatDoNotCompile
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: MethodVisitor arg2 = mock(MethodVisitor.class, new ViolatedAssumptionAnswer());
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(2, "pI)@(2x\"EUkpwB", arg2);
Label arg4 = new Label();
localVariablesSorter.visitLocalVariable("pI)@(2x\"EUkpwB", "Z", "Eqv.,#A~\"*Ciuy", arg4, arg4, 1);

** It was a parseable test case! 
refined test name is: testVisitLocalVariableWithMockedArguments
* Compiling Tests
refined test name is: testLocalVariablesSorterVisitLocalVariable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: MethodVisitor arg2 = mock(MethodVisitor.class, new ViolatedAssumptionAnswer());
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(2, "pI)@(2x\"EUkpwB", arg2);
localVariablesSorter.visitIincInsn(21, 3);
localVariablesSorter.visitIincInsn(21, 6);

** It was a parseable test case! 
refined test name is: testVisitIincInsn
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: MethodVisitor arg2 = mock(MethodVisitor.class, new ViolatedAssumptionAnswer());
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(0, "pI)@(2x\"EUkpwB", arg2);
localVariablesSorter.visitMaxs(1, (-1528));

** It was a parseable test case! 
refined test name is: testVisitMaxsWithValidArguments
* Compiling Tests
refined test name is: testVisitMaxsWithNegativeValues
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: MethodVisitor arg2 = mock(MethodVisitor.class, new ViolatedAssumptionAnswer());
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(2, "pI)@(2x\"EUkpwB", arg2);
localVariablesSorter.visitVarInsn(21, 5);

** It was a parseable test case! 
refined test name is: testLocalVariablesSorterConstructor
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: MethodVisitor arg2 = mock(MethodVisitor.class, new ViolatedAssumptionAnswer());
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(1, "pI)@(2x\"EUkpwB", arg2);
localVariablesSorter.visitVarInsn(23, 9);

** It was a parseable test case! 
refined test name is: testALoadInstruction
* Compiling Tests
refined test name is: testVisitingLocalVariableInstruction
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: MethodVisitor arg2 = mock(MethodVisitor.class, new ViolatedAssumptionAnswer());
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(1, "pI)@(2x\"EUkpwB", arg2);
localVariablesSorter.visitVarInsn(24, 9);

** It was a parseable test case! 
refined test name is: testSortAndFormatVariables
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: MethodVisitor arg2 = mock(MethodVisitor.class, new ViolatedAssumptionAnswer());
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(2, "pI)@(2x\"EUkpwB", arg2);
localVariablesSorter.visitVarInsn(54, (-1527));

** It was a parseable test case! 
refined test name is: testVisitVarInsnwithCorrectOpcodeAndOperand
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: MethodVisitor arg2 = mock(MethodVisitor.class, new ViolatedAssumptionAnswer());
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(2, "pI)@(2x\"EUkpwB", arg2);
localVariablesSorter.visitVarInsn(55, 66);

** It was a parseable test case! 
refined test name is: testLocalVariablesSorter
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: MethodVisitor arg2 = mock(MethodVisitor.class, new ViolatedAssumptionAnswer());
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(23, "pI)@(2x\"EUkpwB", arg2);
localVariablesSorter.visitVarInsn(56, 2926);

** It was a parseable test case! 
refined test name is: testLocalVariablesSorterInitialization
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: MethodVisitor arg2 = mock(MethodVisitor.class, new ViolatedAssumptionAnswer());
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(2, "pI)@(2x\"EUkpwB", arg2);
localVariablesSorter.visitVarInsn(57, (-65));

** It was a parseable test case! 
refined test name is: testVisitVarInsn
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: MethodVisitor arg2 = mock(MethodVisitor.class, new ViolatedAssumptionAnswer());
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(0, "pI)@(2x\"EUkpwB", arg2);
Label[] arg4 = new Label[6];
localVariablesSorter.visitFrame((-1), (-1702), (Object[]) null, 2, arg4);
assertEquals(6, arg4.length);


** It was a parseable test case! 
refined test name is: testvisitFrameaddssixlabels
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: MethodVisitor arg2 = mock(MethodVisitor.class, new ViolatedAssumptionAnswer());
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(2, "pI)@(2x\"EUkpwB", arg2);
Object[] arg4 = new Object[7];
// Undeclared exception!
try { 
  localVariablesSorter.visitFrame(1, (-1463), arg4, 0, arg4);
  fail("Expecting exception: IllegalStateException");

} catch(IllegalStateException e) {
   //
   // ClassReader.accept() should be called with EXPAND_FRAMES flag
   //
   verifyException("org.objectweb.asm.jip.commons.LocalVariablesSorter", e);
}


** It was a parseable test case! 
refined test name is: testVisitFrameWithInvalidFlags
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: MethodVisitor arg2 = mock(MethodVisitor.class, new ViolatedAssumptionAnswer());
Type arg0 = Type.DOUBLE_TYPE;
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(1, "p)I)@(2x\"EUkpwB", arg2);
localVariablesSorter.newLocal(arg0);
localVariablesSorter.visitIincInsn(6, 8);
localVariablesSorter.visitFrame((-1), 0, (Object[]) null, 5, (Object[]) null);

** It was a parseable test case! 
refined test name is: testVisitIincInsnwithLocalVariable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: MethodVisitor arg2 = mock(MethodVisitor.class, new ViolatedAssumptionAnswer());
Type arg0 = Type.LONG_TYPE;
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(1, "p)I)@(2x\"EUkpwB", arg2);
localVariablesSorter.newLocal(arg0);
localVariablesSorter.visitIincInsn(6, 8);
localVariablesSorter.visitFrame((-1), 0, (Object[]) null, 5, (Object[]) null);

** It was a parseable test case! 
refined test name is: testNewLocalIncrementsLongValue
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: MethodVisitor arg2 = mock(MethodVisitor.class, new ViolatedAssumptionAnswer());
Type arg0 = Type.SHORT_TYPE;
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(1, "p)I)@(2x\"EUkpwB", arg2);
localVariablesSorter.newLocal(arg0);
localVariablesSorter.visitIincInsn(6, 8);
localVariablesSorter.visitFrame((-1), 0, (Object[]) null, 5, (Object[]) null);

** It was a parseable test case! 
refined test name is: testVisitIincInsn
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Type arg0 = Type.CHAR_TYPE;
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter((-1812), "p)I)G(2\"%Ukp9B", (MethodVisitor) null);
int newLocal = localVariablesSorter.newLocal(arg0);
assertEquals(0, newLocal);


** It was a parseable test case! 
refined test name is: testNewLocalVariableIndex
* Compiling Tests
refined test name is: testNewLocal
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: MethodAdapter arg2 = new MethodAdapter((MethodVisitor) null);
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(81, "pI)O2xEUkpwabB", arg2);
Type arg0 = Type.BYTE_TYPE;
int newLocal = localVariablesSorter.newLocal(arg0);
assertEquals(2, newLocal);


** It was a parseable test case! 
refined test name is: testNewLocalVariableIndexExceeded
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: MethodVisitor arg2 = mock(MethodVisitor.class, new ViolatedAssumptionAnswer());
Type arg0 = Type.INT_TYPE;
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(0, "pI)@(2x\"EUkpwB", arg2);
int newLocal = localVariablesSorter.newLocal(arg0);
assertEquals(2, newLocal);


** It was a parseable test case! 
refined test name is: testNewLocalWithTypeIntReturnsCorrectValue
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: MethodVisitor arg2 = mock(MethodVisitor.class, new ViolatedAssumptionAnswer());
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(1, "pI)@(2x\"EUkpwB", arg2);
Type arg0 = Type.FLOAT_TYPE;
int newLocal = localVariablesSorter.newLocal(arg0);
assertEquals(2, newLocal);


** It was a parseable test case! 
refined test name is: testNewLocalMethodReturnsCorrectValue
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: MethodVisitor arg2 = mock(MethodVisitor.class, new ViolatedAssumptionAnswer());
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(3, "iV)@\u0002E,UkB", arg2);
Type arg0 = Type.getType("[gk,h]RAuA");
int newLocal = localVariablesSorter.newLocal(arg0);
assertEquals(1, newLocal);


** It was a parseable test case! 
refined test name is: testNewLocalWithArrayType
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: MethodVisitor arg2 = mock(MethodVisitor.class, new ViolatedAssumptionAnswer());
Type arg0 = Type.BOOLEAN_TYPE;
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(2, "pI)@(2x\"EUkpwB", arg2);
localVariablesSorter.visitVarInsn((-4669), 4);
localVariablesSorter.newLocal(arg0);
localVariablesSorter.newLocal(arg0);
localVariablesSorter.visitIincInsn(89, 95);
localVariablesSorter.visitIincInsn(1034, 4);
localVariablesSorter.newLocal(arg0);
localVariablesSorter.newLocalMapping(arg0);
localVariablesSorter.newLocal(arg0);
localVariablesSorter.newLocal(arg0);
localVariablesSorter.visitIincInsn(9, (-564));
localVariablesSorter.visitVarInsn(5, 1510);
localVariablesSorter.newLocalMapping(arg0);
localVariablesSorter.newLocal(arg0);
localVariablesSorter.visitVarInsn(1, 3042);
localVariablesSorter.newLocal(arg0);
localVariablesSorter.newLocal(arg0);
localVariablesSorter.newLocal(arg0);
int newLocalMapping = localVariablesSorter.newLocalMapping(arg0);
assertEquals(19, newLocalMapping);

int newLocal = localVariablesSorter.newLocal(arg0);
assertEquals(20, newLocal);


** It was a parseable test case! 
refined test name is: testNewLocalMappingAndNewLocalMethods
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: MethodVisitor arg2 = mock(MethodVisitor.class, new ViolatedAssumptionAnswer());
Type arg0 = Type.BOOLEAN_TYPE;
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(2, "pI)@(2x\"EUkpwB", arg2);
localVariablesSorter.newLocal(arg0);
localVariablesSorter.visitVarInsn(22, 3);

** It was a parseable test case! 
refined test name is: TestNewLocalMethodCallsVisitorCorrectly
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: MethodVisitor arg2 = mock(MethodVisitor.class, new ViolatedAssumptionAnswer());
Type arg0 = Type.BOOLEAN_TYPE;
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(23, "pI)@(2x\"EUkpwB", arg2);
localVariablesSorter.nextLocal = (-1874);
int newLocalMapping = localVariablesSorter.newLocalMapping(arg0);
assertEquals((-1874), newLocalMapping);


** It was a parseable test case! 
refined test name is: testNewLocalMappingWithNoFreeIndices
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: MethodVisitor arg2 = mock(MethodVisitor.class, new ViolatedAssumptionAnswer());
LocalVariablesSorter localVariablesSorter = new LocalVariablesSorter(1, "pI)@(2x\"EUkpwB", arg2);
localVariablesSorter.visitIincInsn(43, 0);
Object[] arg4 = new Object[4];
arg4[0] = (Object) "int";
// Undeclared exception!
try { 
  localVariablesSorter.visitFrame((-1), 4, arg4, 1683, arg4);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.objectweb.asm.jip.Type", e);
}


** It was a parseable test case! 
refined test name is: testVisitFramewithNullArgumentthrowsNPE
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 11:18:46.161 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/tmp/EvoSuite_pathingJar5856056985240842188.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 11:18:46.182 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5856056985240842188.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 11:18:46.233 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/tmp/EvoSuite_pathingJar5856056985240842188.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 11:18:46.234 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5856056985240842188.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 11:18:46.293 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/tmp/EvoSuite_pathingJar5856056985240842188.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 11:18:46.293 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5856056985240842188.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 11:18:46.357 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/tmp/EvoSuite_pathingJar5856056985240842188.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 11:18:46.358 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5856056985240842188.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 11:18:46.418 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/tmp/EvoSuite_pathingJar5856056985240842188.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 11:18:46.419 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5856056985240842188.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 11:18:46.478 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/tmp/EvoSuite_pathingJar5856056985240842188.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 11:18:46.479 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5856056985240842188.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 11:18:46.538 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/tmp/EvoSuite_pathingJar5856056985240842188.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 11:18:46.539 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5856056985240842188.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 11:18:46.605 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/tmp/EvoSuite_pathingJar5856056985240842188.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 11:18:46.606 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5856056985240842188.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 11:18:46.678 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/tmp/EvoSuite_pathingJar5856056985240842188.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 11:18:46.679 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5856056985240842188.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 11:18:46.772 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/tmp/EvoSuite_pathingJar5856056985240842188.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 11:18:46.774 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5856056985240842188.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 11:18:46.860 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/tmp/EvoSuite_pathingJar5856056985240842188.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 11:18:46.861 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5856056985240842188.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 11:18:46.947 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/tmp/EvoSuite_pathingJar5856056985240842188.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 11:18:46.949 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5856056985240842188.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 11:18:47.034 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/tmp/EvoSuite_pathingJar5856056985240842188.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 11:18:47.036 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5856056985240842188.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 11:18:47.122 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/tmp/EvoSuite_pathingJar5856056985240842188.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 11:18:47.124 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5856056985240842188.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 11:18:47.209 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/tmp/EvoSuite_pathingJar5856056985240842188.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 11:18:47.211 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5856056985240842188.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 11:18:47.293 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/tmp/EvoSuite_pathingJar5856056985240842188.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 11:18:47.295 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5856056985240842188.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 11:18:47.386 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/tmp/EvoSuite_pathingJar5856056985240842188.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 11:18:47.387 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5856056985240842188.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 11:18:47.470 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/tmp/EvoSuite_pathingJar5856056985240842188.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 11:18:47.472 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5856056985240842188.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 11:18:47.560 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/tmp/EvoSuite_pathingJar5856056985240842188.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 11:18:47.562 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5856056985240842188.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 11:18:47.646 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/tmp/EvoSuite_pathingJar5856056985240842188.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 11:18:47.651 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5856056985240842188.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 11:18:47.722 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/tmp/EvoSuite_pathingJar5856056985240842188.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 11:18:47.723 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5856056985240842188.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 11:18:47.789 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/tmp/EvoSuite_pathingJar5856056985240842188.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 11:18:47.791 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5856056985240842188.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 11:18:47.852 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/tmp/EvoSuite_pathingJar5856056985240842188.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 11:18:47.853 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5856056985240842188.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 11:18:47.931 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/tmp/EvoSuite_pathingJar5856056985240842188.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 11:18:47.932 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5856056985240842188.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
** Write a test suite: 2 called: 1 to improve: false
** Write a test suite: 4 called: 2 to improve: false
** Write a test suite: 15 called: 3 to improve: false
[MASTER] 11:18:49.009 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/tmp/EvoSuite_pathingJar5856056985240842188.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 11:18:49.012 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5856056985240842188.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 8 called: 0 to improve: false
** Write a test suite: 19 called: 1 to improve: false
** Write a test suite: 21 called: 2 to improve: false
** Write a test suite: 23 called: 3 to improve: false
[MASTER] 11:18:50.024 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/tmp/EvoSuite_pathingJar5856056985240842188.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 11:18:50.025 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5856056985240842188.jar
[MASTER] 11:18:50.189 [logback-1] WARN  TimeController - Already entered in phase: INLINING. This will mess up the timing calculations.
[MASTER] 11:18:50.320 [logback-1] WARN  TimeController - Already entered in phase: MINIMIZATION. This will mess up the timing calculations.
* Computation finished
