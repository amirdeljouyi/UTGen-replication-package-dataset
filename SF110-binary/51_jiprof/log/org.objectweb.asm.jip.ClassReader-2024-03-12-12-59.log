* EvoSuite 1.0.0-SNAPSHOT
* Going to generate test cases for class: org.objectweb.asm.jip.ClassReader
* Starting Client-0
* Properties loaded from /home/roham/Results-Utestgen/dataset/SF110-new-res/51_jiprof/evosuite-files/evosuite.properties
* Connecting to master process on port 19859
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
* Finished analyzing classpath
* Generating tests for class org.objectweb.asm.jip.ClassReader
* Test criteria:
  - Branch Coverage
  - Line Coverage
  - Method-Output Coverage
  - Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 2586
* Using seed 1710248380429
* Starting evolution
[Progress:>                             0%] [Cov:>                                  0%]* Initial Number of Goals in DynaMOSA = 242 / 2586
[Progress:>                             0%] [Cov:=>                                 3%][Progress:>                             0%] [Cov:=>                                 3%][Progress:>                             1%] [Cov:=>                                 3%][Progress:>                             1%] [Cov:=>                                 5%][Progress:>                             1%] [Cov:==>                                7%][Progress:>                             1%] [Cov:==>                                8%][Progress:>                             2%] [Cov:====>                              13%][Progress:>                             2%] [Cov:========>                          23%][Progress:=>                            4%] [Cov:=========>                         27%][Progress:=>                            5%] [Cov:==========>                        30%][Progress:==>                           7%] [Cov:============>                      36%][Progress:===>                          13%] [Cov:=============>                     39%][Progress:=====>                        18%] [Cov:===============>                   44%][Progress:======>                       21%] [Cov:===============>                   45%][Progress:======>                       21%] [Cov:===============>                   45%][Progress:======>                       21%] [Cov:===============>                   45%][Progress:======>                       22%] [Cov:===============>                   45%][Progress:======>                       22%] [Cov:================>                  46%][Progress:======>                       22%] [Cov:================>                  47%][Progress:======>                       23%] [Cov:================>                  47%][Progress:=======>                      25%] [Cov:================>                  48%][Progress:=======>                      26%] [Cov:================>                  48%][Progress:=======>                      26%] [Cov:================>                  48%][Progress:========>                     27%] [Cov:================>                  48%][Progress:========>                     27%] [Cov:=================>                 51%][Progress:========>                     28%] [Cov:=================>                 51%][Progress:=========>                    31%] [Cov:==================>                52%][Progress:=========>                    31%] [Cov:==================>                52%][Progress:=========>                    32%] [Cov:==================>                52%][Progress:=========>                    33%] [Cov:==================>                52%][Progress:==========>                   35%] [Cov:==================>                52%][Progress:==========>                   35%] [Cov:==================>                52%][Progress:==========>                   35%] [Cov:==================>                52%][Progress:==========>                   36%] [Cov:====================>              58%][Progress:===========>                  37%] [Cov:====================>              58%][Progress:============>                 41%] [Cov:====================>              58%][Progress:=============>                44%] [Cov:====================>              58%][Progress:==============>               47%] [Cov:====================>              59%][Progress:==============>               49%] [Cov:====================>              59%][Progress:===============>              51%] [Cov:=====================>             61%][Progress:===============>              52%] [Cov:======================>            63%][Progress:===============>              53%] [Cov:======================>            63%][Progress:================>             55%] [Cov:======================>            63%][Progress:=================>            57%] [Cov:======================>            63%][Progress:==================>           62%] [Cov:======================>            63%][Progress:===================>          64%] [Cov:======================>            63%][Progress:=====================>        71%] [Cov:======================>            63%][Progress:======================>       74%] [Cov:======================>            63%][Progress:======================>       75%] [Cov:======================>            63%][Progress:=======================>      79%] [Cov:======================>            63%][Progress:========================>     82%] [Cov:======================>            63%][Progress:=========================>    85%] [Cov:======================>            64%][Progress:===========================>  92%] [Cov:======================>            64%][Progress:=============================>97%] [Cov:======================>            64%][Progress:==============================100%] [Cov:======================>            64%]
* Search finished after 203s and 54 generations, 21177 statements, best individual has fitness: 1102.0
* Generated before the refinement 39 tests with total length 100
statement is: org.objectweb.asm.jip.ClassReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.objectweb.asm.jip.ClassReader
statement code is: ClassReader classReader = new ClassReader("0")
test data is: ClassReader classReader = new ClassReader("0");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        classReader.setMaxValue(10);
        classReader.setMinValue(-5);
        classReader.setStringValue("Test String");
    }
}
statement is: classReader.setMaxValue(10), class spoon.support.reflect.code.CtInvocationImpl
invocation is: classReader.setMaxValue(10) target is: classReader method is: setMaxValue(int)
statement is: classReader.setMinValue(-5), class spoon.support.reflect.code.CtInvocationImpl
invocation is: classReader.setMinValue(-5) target is: classReader method is: setMinValue(int)
statement is: classReader.setStringValue("Test String"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: classReader.setStringValue("Test String") target is: classReader method is: setStringValue(java.lang.String)
statement is: org.objectweb.asm.jip.ClassReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.objectweb.asm.jip.ClassReader
statement code is: ClassReader classReader = new ClassReader("org.objectweb.asm.jip.Frame")
statement is: readConst(I[C)Ljava/lang/Object; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.lang.Integer
statement code is: Integer readConst = (Integer)classReader.readConst(15, (char[]) null)
test data is: ClassReader classReader = new ClassReader("org.objectweb.asm.jip.Frame");
classReader.readConst(15, (char[]) null);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        classReader.readConst(15, ((char[]) (null)));
    }
}
statement is: classReader.readConst(15, ((char[]) (null))), class spoon.support.reflect.code.CtInvocationImpl
invocation is: classReader.readConst(15, ((char[]) (null))) target is: classReader method is: readConst(int,char[])
statement is: org.evosuite.testcase.statements.ArrayStatement@b31cc752 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [B
statement code is: byte[] byteArray = new byte[10]
statement is: org.objectweb.asm.jip.ClassReader([B)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.objectweb.asm.jip.ClassReader
statement code is: ClassReader classReader = new ClassReader(arg0)
statement is: getAccess()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int access = classReader.getAccess()
test data is: byte[] byteArray = new byte[10];
ClassReader classReader = new ClassReader(byteArray);
classReader.getAccess();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        byte[] byteArray = new byte[]{ ((byte) (0xca)), ((byte) (0xfe)), ((byte) (0xba)), ((byte) (0xbe)), ((byte) (0x13)), ((byte) (0x37)) };
        ClassReader classReader = new ClassReader(byteArray);
        classReader.getAccess();
    }
}
statement is: byte[] byteArray = new byte[]{ ((byte) (0xca)), ((byte) (0xfe)), ((byte) (0xba)), ((byte) (0xbe)), ((byte) (0x13)), ((byte) (0x37)) }, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [] Ct is: byte[] byteArray = new byte[10] isAssignment: false Array: new byte[]{ ((byte) (0xca)), ((byte) (0xfe)), ((byte) (0xba)), ((byte) (0xbe)), ((byte) (0x13)), ((byte) (0x37)) } Elements: [((byte) (0xca)), ((byte) (0xfe)), ((byte) (0xba)), ((byte) (0xbe)), ((byte) (0x13)), ((byte) (0x37))]
lengths: [10] []
statement is: ClassReader classReader = new ClassReader(byteArray), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: org.objectweb.asm.jip.ClassReader([B)V
statement is: classReader.getAccess(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: classReader.getAccess() target is: classReader method is: getAccess()
statement is: org.objectweb.asm.jip.ClassReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.objectweb.asm.jip.ClassReader
statement code is: ClassReader classReader = new ClassReader("org.yasl.jars.JarFileFilter")
statement is: getItem(I)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int item = classReader.getItem(13)
test data is: ClassReader classReader = new ClassReader("org.yasl.jars.JarFileFilter");
classReader.getItem(13);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        classReader.getItem(13);
        // Improved code using more descriptive examples
        Integer[] intArray = new Integer[]{ 1, 2, 3 };
        String[] stringArray = new String[]{ "apple", "banana", "cherry" };
        classReader.getItem(intArray);// retrieving an item from the array based on an integer index

        classReader.getItem(stringArray);// retrieving an item from the array based on a String value }}

    }
}
statement is: classReader.getItem(13), class spoon.support.reflect.code.CtInvocationImpl
invocation is: classReader.getItem(13) target is: classReader method is: getItem(int)
statement is: // Improved code using more descriptive examples
Integer[] intArray = new Integer[]{ 1, 2, 3 }, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
statement is: String[] stringArray = new String[]{ "apple", "banana", "cherry" }, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
statement is: classReader.getItem(intArray)// retrieving an item from the array based on an integer index
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: classReader.getItem(intArray)// retrieving an item from the array based on an integer index
 target is: classReader method is: getItem(java.lang.Integer[])
statement is: classReader.getItem(stringArray)// retrieving an item from the array based on a String value }}
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: classReader.getItem(stringArray)// retrieving an item from the array based on a String value }}
 target is: classReader method is: getItem(java.lang.String[])
statement is: org.objectweb.asm.jip.ClassReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.objectweb.asm.jip.ClassReader
statement code is: ClassReader classReader = new ClassReader("org.yasl.jars.JarFileFilter")
statement is: readByte(I)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int readByte = classReader.readByte(2)
test data is: ClassReader classReader = new ClassReader("org.yasl.jars.JarFileFilter");
classReader.readByte(2);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Improved test data
        int expectedResult = 42;
    }
}
statement is: // Improved test data
int expectedResult = 42, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
* this is vulnerable: int _int = 42
TestCase is: int _int = 42;

statement is: org.objectweb.asm.jip.ClassReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.objectweb.asm.jip.ClassReader
statement code is: ClassReader classReader = new ClassReader("org.yasl.jars.JarFileFilter")
statement is: getClassName()Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.lang.String
statement code is: String className = classReader.getClassName()
test data is: ClassReader classReader = new ClassReader("org.yasl.jars.JarFileFilter");
classReader.getClassName();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Improved test data
        int[] numbers = new int[]{ 1, 2, 3, 4, 5 };
        String[] strings = new String[]{ "apple", "banana", "cherry" };
        char[] chars = new char[]{ 'a', 'b', 'c' };
        double[] doubles = new double[]{ 1.0, 2.0, 3.0 };
    }
}
statement is: // Improved test data
int[] numbers = new int[]{ 1, 2, 3, 4, 5 }, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
statement is: String[] strings = new String[]{ "apple", "banana", "cherry" }, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
statement is: char[] chars = new char[]{ 'a', 'b', 'c' }, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
statement is: double[] doubles = new double[]{ 1.0, 2.0, 3.0 }, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
statement is: org.objectweb.asm.jip.ClassReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.objectweb.asm.jip.ClassReader
statement code is: ClassReader classReader = new ClassReader("java/lang/Class")
statement is: getSuperName()Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.lang.String
statement code is: String superName = classReader.getSuperName()
test data is: ClassReader classReader = new ClassReader("java/lang/Class");
classReader.getSuperName();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        classReader.getSuperName();
    }
}
statement is: classReader.getSuperName(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: classReader.getSuperName() target is: classReader method is: getSuperName()
statement is: org.objectweb.asm.jip.ClassReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.objectweb.asm.jip.ClassReader
statement code is: ClassReader classReader = new ClassReader("org.yasl.jars.JarFileFilter")
statement is: org.objectweb.asm.jip.ClassReader([BII)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.objectweb.asm.jip.ClassReader
statement code is: ClassReader classReader = new ClassReader(classReader.b, 2, 2)
test data is: ClassReader classReader = new ClassReader("org.yasl.jars.JarFileFilter");
ClassReader classReader = new ClassReader(classReader.b, 2, 2);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Improved test data for the given code snippet }}
    }
}
statement is: // Improved test data for the given code snippet }}, class spoon.support.reflect.code.CtCommentImpl
statement is: org.objectweb.asm.jip.ClassReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.objectweb.asm.jip.ClassReader
statement code is: ClassReader classReader = new ClassReader("org.objectweb.asm.jip.Frame")
statement is: getInterfaces()[Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class [Ljava.lang.String;
statement code is: String[] interfaces = classReader.getInterfaces()
test data is: ClassReader classReader = new ClassReader("org.objectweb.asm.jip.Frame");
classReader.getInterfaces();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        classReader.getInterfaces();
        String[] interfaces = classReader.getInterfaces();
        assertNotNull(interfaces);
        assertEquals(2, interfaces.length);
        assertEquals("org.objectweb.asm.jip.JipInterface", interfaces[0]);
        assertEquals("org.objectweb.asm.jip.FooInterface", interfaces[1]);
        // Improved test data:
        ClassReader classReader = new ClassReader("org.objectweb.asm.jip.Frame");
        classReader.getInterfaces();
        String[] interfaces = classReader.getInterfaces();
        assertNotNull(interfaces);
        assertEquals(2, interfaces.length);
        assertEquals("org.objectweb.asm.jip.JipInterface", interfaces[0]);
        assertEquals("org.objectweb.asm.jip.BarInterface", interfaces[1]);
    }
}
statement is: classReader.getInterfaces(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: classReader.getInterfaces() target is: classReader method is: getInterfaces()
statement is: String[] interfaces = classReader.getInterfaces(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: classReader.getInterfaces() target is: classReader method is: getInterfaces()
statement is: assertNotNull(interfaces), class spoon.support.reflect.code.CtInvocationImpl
invocation is: assertNotNull(interfaces) target is:  method is: assertNotNull(java.lang.String[])
statement is: assertEquals(2, interfaces.length), class spoon.support.reflect.code.CtInvocationImpl
invocation is: assertEquals(2, interfaces.length) target is:  method is: assertEquals(int,int)
statement is: assertEquals("org.objectweb.asm.jip.JipInterface", interfaces[0]), class spoon.support.reflect.code.CtInvocationImpl
invocation is: assertEquals("org.objectweb.asm.jip.JipInterface", interfaces[0]) target is:  method is: assertEquals(java.lang.String,java.lang.String)
statement is: assertEquals("org.objectweb.asm.jip.FooInterface", interfaces[1]), class spoon.support.reflect.code.CtInvocationImpl
invocation is: assertEquals("org.objectweb.asm.jip.FooInterface", interfaces[1]) target is:  method is: assertEquals(java.lang.String,java.lang.String)
statement is: // Improved test data:
ClassReader classReader = new ClassReader("org.objectweb.asm.jip.Frame"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: classReader.getInterfaces(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: classReader.getInterfaces() target is: classReader method is: getInterfaces()
source statement: org.objectweb.asm.jip.ClassReader(Ljava/lang/String;)V callee: VariableReference: Statement 0, type org.objectweb.asm.jip.ClassReaderindex is: 1
Matched Method is: getInterfaces()[Ljava/lang/String;
statement is: String[] interfaces = classReader.getInterfaces(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: classReader.getInterfaces() target is: classReader method is: getInterfaces()
source statement: org.objectweb.asm.jip.ClassReader(Ljava/lang/String;)V callee: VariableReference: Statement 0, type org.objectweb.asm.jip.ClassReaderindex is: 1
Matched Method is: getInterfaces()[Ljava/lang/String;
statement is: assertNotNull(interfaces), class spoon.support.reflect.code.CtInvocationImpl
invocation is: assertNotNull(interfaces) target is:  method is: assertNotNull(java.lang.String[])
statement is: assertEquals(2, interfaces.length), class spoon.support.reflect.code.CtInvocationImpl
invocation is: assertEquals(2, interfaces.length) target is:  method is: assertEquals(int,int)
statement is: assertEquals("org.objectweb.asm.jip.JipInterface", interfaces[0]), class spoon.support.reflect.code.CtInvocationImpl
invocation is: assertEquals("org.objectweb.asm.jip.JipInterface", interfaces[0]) target is:  method is: assertEquals(java.lang.String,java.lang.String)
statement is: assertEquals("org.objectweb.asm.jip.BarInterface", interfaces[1]), class spoon.support.reflect.code.CtInvocationImpl
invocation is: assertEquals("org.objectweb.asm.jip.BarInterface", interfaces[1]) target is:  method is: assertEquals(java.lang.String,java.lang.String)
TestCase is: String string = "org.objectweb.asm.jip.Frame";
ClassReader classReader = new ClassReader(string);
((ClassReader) string).getInterfaces();
((ClassReader) string).getInterfaces();

statement is: org.objectweb.asm.jip.ClassReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.objectweb.asm.jip.ClassReader
statement code is: ClassReader classReader = new ClassReader("org.yasl.jars.JarFileFilter")
statement is: getInterfaces()[Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class [Ljava.lang.String;
statement code is: String[] interfaces = classReader.getInterfaces()
test data is: ClassReader classReader = new ClassReader("org.yasl.jars.JarFileFilter");
classReader.getInterfaces();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Improved test data
        ClassReader classReader = new ClassReader("com.example.MyClass");
        String[] interfaces = classReader.getInterfaces();
        assertEquals(2, interfaces.length);
        assertTrue(interfaces[0].equals("java.io.Serializable") || interfaces[1].equals("java.lang.Comparable"));
    }
}
statement is: // Improved test data
ClassReader classReader = new ClassReader("com.example.MyClass"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: String[] interfaces = classReader.getInterfaces(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: classReader.getInterfaces() target is: classReader method is: getInterfaces()
source statement: org.objectweb.asm.jip.ClassReader(Ljava/lang/String;)V callee: VariableReference: Statement 0, type org.objectweb.asm.jip.ClassReaderindex is: 1
Matched Method is: getInterfaces()[Ljava/lang/String;
statement is: assertEquals(2, interfaces.length), class spoon.support.reflect.code.CtInvocationImpl
invocation is: assertEquals(2, interfaces.length) target is:  method is: assertEquals(int,int)
statement is: assertTrue(interfaces[0].equals("java.io.Serializable") || interfaces[1].equals("java.lang.Comparable")), class spoon.support.reflect.code.CtInvocationImpl
invocation is: assertTrue(interfaces[0].equals("java.io.Serializable") || interfaces[1].equals("java.lang.Comparable")) target is:  method is: assertTrue(boolean)
TestCase is: String string = "com.example.MyClass";
ClassReader classReader = new ClassReader(string);
((ClassReader) string).getInterfaces();

statement is: org.objectweb.asm.jip.ClassReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.objectweb.asm.jip.ClassReader
statement code is: ClassReader classReader = new ClassReader("java/lang/Class")
statement is: org.objectweb.asm.jip.ClassWriter(Lorg/objectweb/asm/jip/ClassReader;I)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.objectweb.asm.jip.ClassWriter
statement code is: ClassWriter classWriter = new ClassWriter(arg0, 19569)
test data is: ClassReader classReader = new ClassReader("java/lang/Class");
ClassWriter classWriter = new ClassWriter(classReader, 19569);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        int a = 42;// more descriptive value

        double b = 3.14;// more descriptive value

        String c = "Goodbye";// more descriptive string

        char d = 'Z';// more descriptive character }}

    }
}
statement is: int a = 42// more descriptive value
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: double b = 3.14// more descriptive value
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: String c = "Goodbye"// more descriptive string
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: char d = 'Z'// more descriptive character }}
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
* this is vulnerable: int _int = 42
* this is vulnerable: double _double = 3.14
* this is vulnerable: String string = "Goodbye"
* this is vulnerable: char _char = 'Z'
TestCase is: int _int = 42;
double _double = 3.14;
String string = "Goodbye";
char _char = 'Z';

statement is: org.objectweb.asm.jip.ClassReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.objectweb.asm.jip.ClassReader
statement code is: ClassReader classReader = new ClassReader("java/lang/Throwable")
statement is: org.objectweb.asm.jip.ClassReader([BII)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.objectweb.asm.jip.ClassReader
statement code is: ClassReader classReader = new ClassReader(classReader.b, 8, 9)
statement is: org.objectweb.asm.jip.ClassWriter(Lorg/objectweb/asm/jip/ClassReader;I)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.objectweb.asm.jip.ClassWriter
statement code is: ClassWriter classWriter = new ClassWriter(arg0, 1000)
test data is: ClassReader classReader = new ClassReader("java/lang/Throwable");
ClassReader classReader = new ClassReader(classReader.b, 8, 9);
ClassWriter classWriter = new ClassWriter(classReader, 1000);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Changed the primitive value to a more descriptive example
        ClassReader classReader = new ClassReader(classReader.b, 8, 10);
        // Changed the String value to a more representative example }}
    }
}
statement is: // Changed the primitive value to a more descriptive example
ClassReader classReader = new ClassReader(classReader.b, 8, 10), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: // Changed the String value to a more representative example }}, class spoon.support.reflect.code.CtCommentImpl
TestCase is: int _int = 8;
int _int = 10;
ClassReader classReader = new ClassReader((byte[]) _int, _int, 9);

statement is: org.evosuite.testcase.statements.ArrayStatement@334fb805 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [B
statement code is: byte[] byteArray = new byte[0]
statement is: java.io.ByteArrayInputStream([B)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class java.io.ByteArrayInputStream
statement code is: ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(arg0)
statement is: org.objectweb.asm.jip.ClassReader(Ljava/io/InputStream;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.objectweb.asm.jip.ClassReader
statement code is: ClassReader classReader = new ClassReader(arg0)
test data is: byte[] byteArray = new byte[0];
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
ClassReader classReader = new ClassReader(byteArrayInputStream);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Improved byte array for testing purposes
        byte[] byteArray = new byte[]{ ((byte) (0xca)), ((byte) (0xfe)), ((byte) (0xba)), ((byte) (0xbe)) };
        ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
    }
}
statement is: // Improved byte array for testing purposes
byte[] byteArray = new byte[]{ ((byte) (0xca)), ((byte) (0xfe)), ((byte) (0xba)), ((byte) (0xbe)) }, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [] Ct is: byte[] byteArray = new byte[0] isAssignment: false Array: new byte[]{ ((byte) (0xca)), ((byte) (0xfe)), ((byte) (0xba)), ((byte) (0xbe)) } Elements: [((byte) (0xca)), ((byte) (0xfe)), ((byte) (0xba)), ((byte) (0xbe))]
lengths: [0] []
statement is: ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
TestCase Could not be added: java.io.ByteArrayInputStream([B)V
statement is: org.objectweb.asm.jip.ClassReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.objectweb.asm.jip.ClassReader
statement code is: ClassReader classReader = new ClassReader("org.objectweb.asm.jip.Frame")
statement is: org.objectweb.asm.jip.ClassWriter(Lorg/objectweb/asm/jip/ClassReader;I)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.objectweb.asm.jip.ClassWriter
statement code is: ClassWriter classWriter = new ClassWriter(arg0, 4)
statement is: org.objectweb.asm.jip.ClassReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.objectweb.asm.jip.ClassReader
statement code is: ClassReader classReader = new ClassReader("java/lang/Throwable")
statement is: accept(Lorg/objectweb/asm/jip/ClassVisitor;I)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: classReader.accept((ClassVisitor) arg0, 122)
test data is: ClassReader classReader = new ClassReader("org.objectweb.asm.jip.Frame");
ClassWriter classWriter = new ClassWriter(classReader, 4);
ClassReader classReader = new ClassReader("java/lang/Throwable");
classReader.accept((ClassVisitor) classWriter, 122);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Improved test data for the above code snippet }}
    }
}
statement is: // Improved test data for the above code snippet }}, class spoon.support.reflect.code.CtCommentImpl
statement is: org.objectweb.asm.jip.ClassReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.objectweb.asm.jip.ClassReader
statement code is: ClassReader classReader = new ClassReader("java/lang/Class")
statement is: org.objectweb.asm.jip.ClassWriter(I)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.objectweb.asm.jip.ClassWriter
statement code is: ClassWriter classWriter = new ClassWriter(2)
statement is: accept(Lorg/objectweb/asm/jip/ClassVisitor;I)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: classReader.accept((ClassVisitor) arg0, 8)
test data is: ClassReader classReader = new ClassReader("java/lang/Class");
ClassWriter classWriter = new ClassWriter(2);
classReader.accept((ClassVisitor) classWriter, 8);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Improved test data
        String inputStr = "Hello, World!";
        int inputInt = 10;
        double inputDouble = 3.14;
        char inputChar = 'a';
        String expectedResult = "Hello, World!";
    }
}
statement is: // Improved test data
String inputStr = "Hello, World!", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: int inputInt = 10, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: double inputDouble = 3.14, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: char inputChar = 'a', class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: String expectedResult = "Hello, World!", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
* this is vulnerable: String string = "Hello, World!"
* this is vulnerable: int _int = 10
* this is vulnerable: double _double = 3.14
* this is vulnerable: char _char = 'a'
* this is vulnerable: String string = "Hello, World!"
TestCase is: String string = "Hello, World!";
int _int = 10;
double _double = 3.14;
char _char = 'a';
String string = "Hello, World!";

statement is: org.objectweb.asm.jip.ClassReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.objectweb.asm.jip.ClassReader
statement code is: ClassReader classReader = new ClassReader("org.objectweb.asm.jip.Frame")
statement is: org.evosuite.testcase.statements.ArrayStatement@143ca142 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [C
statement code is: char[] charArray = new char[1]
statement is: readConst(I[C)Ljava/lang/Object; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.lang.Object
statement code is: Object readConst = classReader.readConst(288, arg1)
test data is: ClassReader classReader = new ClassReader("org.objectweb.asm.jip.Frame");
char[] charArray = new char[1];
classReader.readConst(288, charArray);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        char[] charArray = new char[1];
        classReader.readConst(288, charArray);
    }
}
statement is: char[] charArray = new char[1], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [1] Ct is: char[] charArray = new char[1] isAssignment: false Array: new char[1] Elements: []
lengths: [1] [1]
Their type are: class [C char[]
statement is: classReader.readConst(288, charArray), class spoon.support.reflect.code.CtInvocationImpl
invocation is: classReader.readConst(288, charArray) target is: classReader method is: readConst(int,char[])
TestCase is: char[] charArray = new char[1];

statement is: org.objectweb.asm.jip.ClassReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.objectweb.asm.jip.ClassReader
statement code is: ClassReader classReader = new ClassReader("org.objectweb.asm.jip.Frame")
statement is: org.evosuite.testcase.statements.ArrayStatement@33c6fb7c type is: class org.evosuite.testcase.statements.ArrayStatement return type class [C
statement code is: char[] charArray = new char[13]
statement is: readUTF8(I[C)Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.lang.String
statement code is: String readUTF8 = classReader.readUTF8(4, arg1)
test data is: ClassReader classReader = new ClassReader("org.objectweb.asm.jip.Frame");
char[] charArray = new char[13];
classReader.readUTF8(4, charArray);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Improved test data: using more descriptive and representative values for the primitive types
        char[] charArray = new char[13];
        classReader.readUTF8(4, charArray);
        // Improved test data: using more illustrative examples for the Strings
        String string1 = "This is a sample String";
        String string2 = "Another sample String";
        // Improved test data: using more descriptive and representative values for the primitive types
        int int1 = 10;
        int int2 = 20;
    }
}
statement is: // Improved test data: using more descriptive and representative values for the primitive types
char[] charArray = new char[13], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [13] Ct is: char[] charArray = new char[13] isAssignment: false Array: new char[13] Elements: []
lengths: [13] [13]
Their type are: class [C char[]
statement is: classReader.readUTF8(4, charArray), class spoon.support.reflect.code.CtInvocationImpl
invocation is: classReader.readUTF8(4, charArray) target is: classReader method is: readUTF8(int,char[])
statement is: // Improved test data: using more illustrative examples for the Strings
String string1 = "This is a sample String", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: String string2 = "Another sample String", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: // Improved test data: using more descriptive and representative values for the primitive types
int int1 = 10, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: int int2 = 20, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
* this is vulnerable: String string = "This is a sample String"
* this is vulnerable: String string = "Another sample String"
* this is vulnerable: int _int = 10
* this is vulnerable: int _int = 20
TestCase is: char[] charArray = new char[13];
String string = "This is a sample String";
String string = "Another sample String";
int _int = 10;
int _int = 20;

statement is: org.objectweb.asm.jip.ClassReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.objectweb.asm.jip.ClassReader
statement code is: ClassReader classReader = new ClassReader("org.yasl.jars.JarFileFilter")
statement is: readUnsignedShort(I)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int readUnsignedShort = classReader.readUnsignedShort(166)
test data is: ClassReader classReader = new ClassReader("org.yasl.jars.JarFileFilter");
classReader.readUnsignedShort(166);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        classReader.readUnsignedShort(12345);
    }
}
statement is: classReader.readUnsignedShort(12345), class spoon.support.reflect.code.CtInvocationImpl
invocation is: classReader.readUnsignedShort(12345) target is: classReader method is: readUnsignedShort(int)
statement is: org.objectweb.asm.jip.ClassReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.objectweb.asm.jip.ClassReader
statement code is: ClassReader classReader = new ClassReader("org.yasl.jars.JarFileFilter")
statement is: readShort(I)S type is: class org.evosuite.testcase.statements.MethodStatement return type short
statement code is: short readShort = classReader.readShort(46)
test data is: ClassReader classReader = new ClassReader("org.yasl.jars.JarFileFilter");
classReader.readShort(46);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        classReader.readShort(123);// Changed to a more descriptive value for testing purposes }}

    }
}
statement is: classReader.readShort(123)// Changed to a more descriptive value for testing purposes }}
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: classReader.readShort(123)// Changed to a more descriptive value for testing purposes }}
 target is: classReader method is: readShort(int)
statement is: org.objectweb.asm.jip.ClassReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.objectweb.asm.jip.ClassReader
statement code is: ClassReader classReader = new ClassReader("org.yasl.jars.JarFileFilter")
statement is: readInt(I)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int readInt = classReader.readInt(18)
test data is: ClassReader classReader = new ClassReader("org.yasl.jars.JarFileFilter");
classReader.readInt(18);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        classReader.readInt(42);
    }
}
statement is: classReader.readInt(42), class spoon.support.reflect.code.CtInvocationImpl
invocation is: classReader.readInt(42) target is: classReader method is: readInt(int)
statement is: org.objectweb.asm.jip.ClassReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.objectweb.asm.jip.ClassReader
statement code is: ClassReader classReader = new ClassReader("org.yasl.jars.JarFileFilter")
statement is: org.objectweb.asm.jip.ClassWriter(I)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.objectweb.asm.jip.ClassWriter
statement code is: ClassWriter classWriter = new ClassWriter(4)
statement is: org.objectweb.asm.jip.ClassAdapter(Lorg/objectweb/asm/jip/ClassVisitor;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.objectweb.asm.jip.ClassAdapter
statement code is: ClassAdapter classAdapter = new ClassAdapter(arg0)
statement is: accept(Lorg/objectweb/asm/jip/ClassVisitor;[Lorg/objectweb/asm/jip/Attribute;I)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: classReader.accept((ClassVisitor) arg0, (Attribute[]) null, 47)
test data is: ClassReader classReader = new ClassReader("org.yasl.jars.JarFileFilter");
ClassWriter classWriter = new ClassWriter(4);
ClassAdapter classAdapter = new ClassAdapter(classWriter);
classReader.accept((ClassVisitor) classAdapter, (Attribute[]) null, 47);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        classReader.accept(((ClassVisitor) (classAdapter)), ((Attribute[]) (null)), 47);
    }
}
statement is: classReader.accept(((ClassVisitor) (classAdapter)), ((Attribute[]) (null)), 47), class spoon.support.reflect.code.CtInvocationImpl
invocation is: classReader.accept(((ClassVisitor) (classAdapter)), ((Attribute[]) (null)), 47) target is: classReader method is: accept(ClassVisitor,Attribute[],int)
statement is: org.objectweb.asm.jip.ClassReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.objectweb.asm.jip.ClassReader
statement code is: ClassReader classReader = new ClassReader("org.objectweb.asm.jip.Frame")
statement is: org.objectweb.asm.jip.ClassWriter(Lorg/objectweb/asm/jip/ClassReader;I)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.objectweb.asm.jip.ClassWriter
statement code is: ClassWriter classWriter = new ClassWriter(arg0, 4)
statement is: accept(Lorg/objectweb/asm/jip/ClassVisitor;[Lorg/objectweb/asm/jip/Attribute;I)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: classReader.accept((ClassVisitor) arg0, (Attribute[]) null, 204)
test data is: ClassReader classReader = new ClassReader("org.objectweb.asm.jip.Frame");
ClassWriter classWriter = new ClassWriter(classReader, 4);
classReader.accept((ClassVisitor) classWriter, (Attribute[]) null, 204);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        classReader.accept(((ClassVisitor) (classWriter)), ((Attribute[]) (null)), 204);
    }
}
statement is: classReader.accept(((ClassVisitor) (classWriter)), ((Attribute[]) (null)), 204), class spoon.support.reflect.code.CtInvocationImpl
invocation is: classReader.accept(((ClassVisitor) (classWriter)), ((Attribute[]) (null)), 204) target is: classReader method is: accept(ClassVisitor,Attribute[],int)
statement is: org.objectweb.asm.jip.ClassReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.objectweb.asm.jip.ClassReader
statement code is: ClassReader classReader = new ClassReader("java/lang/Class")
statement is: org.objectweb.asm.jip.ClassWriter(I)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.objectweb.asm.jip.ClassWriter
statement code is: ClassWriter classWriter = new ClassWriter(19569)
statement is: org.evosuite.testcase.statements.ArrayStatement@fda41c05 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [Lorg.objectweb.asm.jip.Attribute;
statement code is: Attribute[] attributeArray = new Attribute[3]
statement is: accept(Lorg/objectweb/asm/jip/ClassVisitor;[Lorg/objectweb/asm/jip/Attribute;I)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: classReader.accept((ClassVisitor) arg0, arg1, 2)
test data is: ClassReader classReader = new ClassReader("java/lang/Class");
ClassWriter classWriter = new ClassWriter(19569);
Attribute[] attributeArray = new Attribute[3];
classReader.accept((ClassVisitor) classWriter, attributeArray, 2);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        attributeArray = new Attribute[]{ new SignatureAttribute("Ljava/lang/String;"), new SourceDebugExtensionAttribute("Source file for MyTest.java") };
    }
}
statement is: attributeArray = new Attribute[]{ new SignatureAttribute("Ljava/lang/String;"), new SourceDebugExtensionAttribute("Source file for MyTest.java") }, class spoon.support.reflect.code.CtAssignmentImpl
statement is: org.objectweb.asm.jip.ClassReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.objectweb.asm.jip.ClassReader
statement code is: ClassReader classReader = new ClassReader("org.objectweb.asm.jip.Frame")
statement is: org.objectweb.asm.jip.ClassWriter(I)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.objectweb.asm.jip.ClassWriter
statement code is: ClassWriter classWriter = new ClassWriter((-3666))
statement is: accept(Lorg/objectweb/asm/jip/ClassVisitor;[Lorg/objectweb/asm/jip/Attribute;I)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: classReader.accept((ClassVisitor) arg0, (Attribute[]) null, 2570)
test data is: ClassReader classReader = new ClassReader("org.objectweb.asm.jip.Frame");
ClassWriter classWriter = new ClassWriter((-3666));
classReader.accept((ClassVisitor) classWriter, (Attribute[]) null, 2570);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Set a more descriptive name for the class file
        String className = "MyCustomFrame";
        // Set a more descriptive value for the access flags
        int accessFlags = 2570;// This is equivalent to ACC_PUBLIC | ACC_SUPER in ASM

        ClassWriter classWriter = new ClassWriter(accessFlags);
        classReader.accept(((ClassVisitor) (classWriter)), ((Attribute[]) (null)), className);
    }
}
statement is: // Set a more descriptive name for the class file
String className = "MyCustomFrame", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: // Set a more descriptive value for the access flags
int accessFlags = 2570// This is equivalent to ACC_PUBLIC | ACC_SUPER in ASM
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: ClassWriter classWriter = new ClassWriter(accessFlags), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: classReader.accept(((ClassVisitor) (classWriter)), ((Attribute[]) (null)), className), class spoon.support.reflect.code.CtInvocationImpl
invocation is: classReader.accept(((ClassVisitor) (classWriter)), ((Attribute[]) (null)), className) target is: classReader method is: accept(ClassVisitor,Attribute[],java.lang.String)
* this is vulnerable: String string = "MyCustomFrame"
TestCase is: String string = "MyCustomFrame";
int _int = 2570;
ClassWriter classWriter = new ClassWriter(_int);

statement is: org.objectweb.asm.jip.ClassReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.objectweb.asm.jip.ClassReader
statement code is: ClassReader classReader = new ClassReader("org.objectweb.asm.jip.Frame")
statement is: org.objectweb.asm.jip.ClassWriter(I)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.objectweb.asm.jip.ClassWriter
statement code is: ClassWriter classWriter = new ClassWriter(19569)
statement is: org.objectweb.asm.jip.ClassAdapter(Lorg/objectweb/asm/jip/ClassVisitor;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.objectweb.asm.jip.ClassAdapter
statement code is: ClassAdapter classAdapter = new ClassAdapter(arg0)
statement is: org.evosuite.testcase.statements.ArrayStatement@d0db1c7b type is: class org.evosuite.testcase.statements.ArrayStatement return type class [Lorg.objectweb.asm.jip.Attribute;
statement code is: Attribute[] attributeArray = new Attribute[3]
statement is: accept(Lorg/objectweb/asm/jip/ClassVisitor;[Lorg/objectweb/asm/jip/Attribute;I)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: classReader.accept((ClassVisitor) arg0, arg1, (-3924))
test data is: ClassReader classReader = new ClassReader("org.objectweb.asm.jip.Frame");
ClassWriter classWriter = new ClassWriter(19569);
ClassAdapter classAdapter = new ClassAdapter(classWriter);
Attribute[] attributeArray = new Attribute[3];
classReader.accept((ClassVisitor) classAdapter, attributeArray, (-3924));

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Improved test data
        ClassReader classReader = new ClassReader("org.objectweb.asm.jip.Frame");
        ClassWriter classWriter = new ClassWriter(100);
        ClassAdapter classAdapter = new ClassAdapter(classWriter);
        Attribute[] attributeArray = new Attribute[3];
    }
}
statement is: // Improved test data
ClassReader classReader = new ClassReader("org.objectweb.asm.jip.Frame"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: ClassWriter classWriter = new ClassWriter(100), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: ClassAdapter classAdapter = new ClassAdapter(classWriter), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Attribute[] attributeArray = new Attribute[3], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [3] Ct is: Attribute[] attributeArray = new Attribute[3] isAssignment: false Array: new Attribute[3] Elements: []
lengths: [3] [3]
Their type are: class [Lorg.objectweb.asm.jip.Attribute; Attribute[]
TestCase is: String string = "org.objectweb.asm.jip.Frame";
ClassReader classReader = new ClassReader(string);
int _int = 100;
ClassWriter classWriter = new ClassWriter(_int);
ClassAdapter classAdapter = new ClassAdapter(classWriter);
Attribute[] attributeArray = new Attribute[3];

statement is: org.objectweb.asm.jip.ClassReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.objectweb.asm.jip.ClassReader
statement code is: ClassReader classReader = new ClassReader("org.yasl.jars.JarFileFilter")
statement is: org.objectweb.asm.jip.ClassWriter(I)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.objectweb.asm.jip.ClassWriter
statement code is: ClassWriter classWriter = new ClassWriter(4)
statement is: accept(Lorg/objectweb/asm/jip/ClassVisitor;[Lorg/objectweb/asm/jip/Attribute;I)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: classReader.accept((ClassVisitor) arg0, (Attribute[]) null, 4)
test data is: ClassReader classReader = new ClassReader("org.yasl.jars.JarFileFilter");
ClassWriter classWriter = new ClassWriter(4);
classReader.accept((ClassVisitor) classWriter, (Attribute[]) null, 4);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        classReader.accept(((ClassVisitor) (classWriter)), ((Attribute[]) (null)), '#');
    }
}
statement is: classReader.accept(((ClassVisitor) (classWriter)), ((Attribute[]) (null)), '#'), class spoon.support.reflect.code.CtInvocationImpl
invocation is: classReader.accept(((ClassVisitor) (classWriter)), ((Attribute[]) (null)), '#') target is: classReader method is: accept(ClassVisitor,Attribute[],char)
statement is: org.objectweb.asm.jip.ClassReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.objectweb.asm.jip.ClassReader
statement code is: ClassReader classReader = new ClassReader("org.yasl.jars.JarFileFilter")
statement is: readConst(I[C)Ljava/lang/Object; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.lang.Object
statement code is: Object readConst = classReader.readConst(15, (char[]) null)
test data is: ClassReader classReader = new ClassReader("org.yasl.jars.JarFileFilter");
classReader.readConst(15, (char[]) null);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        classReader.readConst(10, ((char[]) ("Testing")));
    }
}
statement is: classReader.readConst(10, ((char[]) ("Testing"))), class spoon.support.reflect.code.CtInvocationImpl
invocation is: classReader.readConst(10, ((char[]) ("Testing"))) target is: classReader method is: readConst(int,char[])
statement is: org.objectweb.asm.jip.ClassReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.objectweb.asm.jip.ClassReader
statement code is: ClassReader classReader = new ClassReader("org.yasl.jars.JarFileFilter")
statement is: getAccess()I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int access = classReader.getAccess()
test data is: ClassReader classReader = new ClassReader("org.yasl.jars.JarFileFilter");
classReader.getAccess();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        classReader.getAccess();// This method returns a value indicating whether the specified class has permission to access the specified member. }}

    }
}
statement is: classReader.getAccess()// This method returns a value indicating whether the specified class has permission to access the specified member. }}
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: classReader.getAccess()// This method returns a value indicating whether the specified class has permission to access the specified member. }}
 target is: classReader method is: getAccess()
statement is: org.objectweb.asm.jip.ClassReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.objectweb.asm.jip.ClassReader
statement code is: ClassReader classReader = new ClassReader("org.yasl.jars.JarFileFilter")
statement is: readByte(I)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int readByte = classReader.readByte(21)
test data is: ClassReader classReader = new ClassReader("org.yasl.jars.JarFileFilter");
classReader.readByte(21);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        classReader.readByte(5);
    }
}
statement is: classReader.readByte(5), class spoon.support.reflect.code.CtInvocationImpl
invocation is: classReader.readByte(5) target is: classReader method is: readByte(int)
statement is: org.objectweb.asm.jip.ClassReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.objectweb.asm.jip.ClassReader
statement code is: ClassReader classReader = new ClassReader("org.yasl.jars.JarFileFilter")
statement is: org.objectweb.asm.jip.ClassWriter(Lorg/objectweb/asm/jip/ClassReader;I)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.objectweb.asm.jip.ClassWriter
statement code is: ClassWriter classWriter = new ClassWriter(arg0, 1)
statement is: org.evosuite.testcase.statements.ArrayStatement@60e00244 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [C
statement code is: char[] charArray = new char[4]
statement is: readClass(I[C)Ljava/lang/String; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.lang.String
statement code is: String readClass = classReader.readClass(19, arg1)
test data is: ClassReader classReader = new ClassReader("org.yasl.jars.JarFileFilter");
ClassWriter classWriter = new ClassWriter(classReader, 1);
char[] charArray = new char[4];
classReader.readClass(19, charArray);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        char[] charArray = new char[4];
        classReader.readClass(19, charArray);
        // Improved test data
        int maxLength = 20;
        List<String> words = Arrays.asList("apple", "banana", "orange");
    }
}
statement is: char[] charArray = new char[4], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [4] Ct is: char[] charArray = new char[4] isAssignment: false Array: new char[4] Elements: []
lengths: [4] [4]
Their type are: class [C char[]
statement is: classReader.readClass(19, charArray), class spoon.support.reflect.code.CtInvocationImpl
invocation is: classReader.readClass(19, charArray) target is: classReader method is: readClass(int,char[])
statement is: // Improved test data
int maxLength = 20, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: List<String> words = Arrays.asList("apple", "banana", "orange"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: Arrays.asList("apple", "banana", "orange") target is: Arrays method is: asList(java.lang.String,java.lang.String,java.lang.String)
* this is vulnerable: int _int = 20
TestCase is: char[] charArray = new char[4];
int _int = 20;

statement is: org.objectweb.asm.jip.ClassReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.objectweb.asm.jip.ClassReader
statement code is: ClassReader classReader = new ClassReader("org.yasl.jars.JarFileFilter")
statement is: org.evosuite.testcase.statements.ArrayStatement@a267e0b4 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [C
statement code is: char[] charArray = new char[8]
statement is: readConst(I[C)Ljava/lang/Object; type is: class org.evosuite.testcase.statements.MethodStatement return type class java.lang.String
statement code is: String readConst = (String)classReader.readConst(4, arg1)
test data is: ClassReader classReader = new ClassReader("org.yasl.jars.JarFileFilter");
char[] charArray = new char[8];
classReader.readConst(4, charArray);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        char[] charArray = new char[10];
        classReader.readConst(6, charArray);
    }
}
statement is: char[] charArray = new char[10], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [10] Ct is: char[] charArray = new char[8] isAssignment: false Array: new char[10] Elements: []
lengths: [8] [10]
Their type are: class [C char[]
statement is: classReader.readConst(6, charArray), class spoon.support.reflect.code.CtInvocationImpl
invocation is: classReader.readConst(6, charArray) target is: classReader method is: readConst(int,char[])
TestCase is: char[] charArray = new char[8];

statement is: org.objectweb.asm.jip.ClassReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.objectweb.asm.jip.ClassReader
statement code is: ClassReader classReader = new ClassReader("org.yasl.jars.JarFileFilter")
statement is: readInt(I)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int readInt = classReader.readInt(2)
test data is: ClassReader classReader = new ClassReader("org.yasl.jars.JarFileFilter");
classReader.readInt(2);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        int myIntegerValue = 10;
        classReader.readInt(myIntegerValue);
    }
}
statement is: int myIntegerValue = 10, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: classReader.readInt(myIntegerValue), class spoon.support.reflect.code.CtInvocationImpl
invocation is: classReader.readInt(myIntegerValue) target is: classReader method is: readInt(int)
* this is vulnerable: int _int = 10
TestCase is: int _int = 10;

statement is: org.objectweb.asm.jip.ClassReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.objectweb.asm.jip.ClassReader
statement code is: ClassReader classReader = new ClassReader("org.yasl.jars.JarFileFilter")
statement is: org.evosuite.testcase.statements.ArrayStatement@fe290d74 type is: class org.evosuite.testcase.statements.ArrayStatement return type class [Lorg.objectweb.asm.jip.Label;
statement code is: Label[] labelArray = new Label[7]
statement is: readLabel(I[Lorg/objectweb/asm/jip/Label;)Lorg/objectweb/asm/jip/Label; type is: class org.evosuite.testcase.statements.MethodStatement return type class org.objectweb.asm.jip.Label
statement code is: Label readLabel = classReader.readLabel(4, arg1)
test data is: ClassReader classReader = new ClassReader("org.yasl.jars.JarFileFilter");
Label[] labelArray = new Label[7];
classReader.readLabel(4, labelArray);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Label[] labelArray = new Label[7];
        classReader.readLabel(4, labelArray);
        String[] jarFilePaths = new String[]{ "/path/to/jar1", "/path/to/jar2", "/path/to/jar3" };
        String[] filterPatterns = new String[]{ "**/*.class", "**/*.java", "**/*.properties" };
        List<JarFile> jars = new ArrayList<>();
        for (String jarFilePath : jarFilePaths) {
            JarFile jarFile = new JarFile(jarFilePath);
            for (String filterPattern : filterPatterns) {
                Enumeration<JarEntry> entries = jarFile.entries();
                while (entries.hasMoreElements()) {
                    JarEntry entry = entries.nextElement();
                    if (filterPattern.equals(entry.getName())) {
                        jars.add(jarFile);
                        break;
                    }
                } 
            }
        }
    }
}
statement is: Label[] labelArray = new Label[7], class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [7] Ct is: Label[] labelArray = new Label[7] isAssignment: false Array: new Label[7] Elements: []
lengths: [7] [7]
Their type are: class [Lorg.objectweb.asm.jip.Label; Label[]
statement is: classReader.readLabel(4, labelArray), class spoon.support.reflect.code.CtInvocationImpl
invocation is: classReader.readLabel(4, labelArray) target is: classReader method is: readLabel(int,Label[])
statement is: String[] jarFilePaths = new String[]{ "/path/to/jar1", "/path/to/jar2", "/path/to/jar3" }, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [] Ct is: Label[] labelArray = new Label[7] isAssignment: false Array: new String[]{ "/path/to/jar1", "/path/to/jar2", "/path/to/jar3" } Elements: ["/path/to/jar1", "/path/to/jar2", "/path/to/jar3"]
lengths: [7] []
statement is: String[] filterPatterns = new String[]{ "**/*.class", "**/*.java", "**/*.properties" }, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
Dimension: [] Ct is: Label[] labelArray = new Label[7] isAssignment: false Array: new String[]{ "**/*.class", "**/*.java", "**/*.properties" } Elements: ["**/*.class", "**/*.java", "**/*.properties"]
lengths: [7] []
statement is: List<JarFile> jars = new ArrayList<>(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: for (String jarFilePath : jarFilePaths) {
    JarFile jarFile = new JarFile(jarFilePath);
    for (String filterPattern : filterPatterns) {
        Enumeration<JarEntry> entries = jarFile.entries();
        while (entries.hasMoreElements()) {
            JarEntry entry = entries.nextElement();
            if (filterPattern.equals(entry.getName())) {
                jars.add(jarFile);
                break;
            }
        } 
    }
}, class spoon.support.reflect.code.CtForEachImpl
TestCase is: Label[] labelArray = new Label[7];

statement is: org.objectweb.asm.jip.ClassReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.objectweb.asm.jip.ClassReader
statement code is: ClassReader classReader = new ClassReader("org.yasl.jars.JarFileFilter")
statement is: readLong(I)J type is: class org.evosuite.testcase.statements.MethodStatement return type long
statement code is: long readLong = classReader.readLong(1)
test data is: ClassReader classReader = new ClassReader("org.yasl.jars.JarFileFilter");
classReader.readLong(1);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        classReader.readLong(1);// Replace 1 with a more descriptive value, such as "file_size" or "file_timestamp" }}

    }
}
statement is: classReader.readLong(1)// Replace 1 with a more descriptive value, such as "file_size" or "file_timestamp" }}
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: classReader.readLong(1)// Replace 1 with a more descriptive value, such as "file_size" or "file_timestamp" }}
 target is: classReader method is: readLong(int)
statement is: org.objectweb.asm.jip.ClassReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.objectweb.asm.jip.ClassReader
statement code is: ClassReader classReader = new ClassReader("org.yasl.jars.JarFileFilter")
statement is: readLong(I)J type is: class org.evosuite.testcase.statements.MethodStatement return type long
statement code is: long readLong = classReader.readLong(29)
test data is: ClassReader classReader = new ClassReader("org.yasl.jars.JarFileFilter");
classReader.readLong(29);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        classReader.readLong(1000000);// 1 million }}

    }
}
statement is: classReader.readLong(1000000)// 1 million }}
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: classReader.readLong(1000000)// 1 million }}
 target is: classReader method is: readLong(int)
statement is: org.objectweb.asm.jip.ClassReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.objectweb.asm.jip.ClassReader
statement code is: ClassReader classReader = new ClassReader("org.yasl.jars.JarFileFilter")
statement is: readShort(I)S type is: class org.evosuite.testcase.statements.MethodStatement return type short
statement code is: short readShort = classReader.readShort(2)
test data is: ClassReader classReader = new ClassReader("org.yasl.jars.JarFileFilter");
classReader.readShort(2);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        classReader.readString("org.yasl.jars.JarFileFilter");// This line of code reads a String value "org.yasl.jars.JarFileFilter" from the stream }}

    }
}
statement is: classReader.readString("org.yasl.jars.JarFileFilter")// This line of code reads a String value "org.yasl.jars.JarFileFilter" from the stream }}
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: classReader.readString("org.yasl.jars.JarFileFilter")// This line of code reads a String value "org.yasl.jars.JarFileFilter" from the stream }}
 target is: classReader method is: readString(java.lang.String)
statement is: org.objectweb.asm.jip.ClassReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.objectweb.asm.jip.ClassReader
statement code is: ClassReader classReader = new ClassReader("org.yasl.jars.JarFileFilter")
statement is: readShort(I)S type is: class org.evosuite.testcase.statements.MethodStatement return type short
statement code is: short readShort = classReader.readShort(4)
test data is: ClassReader classReader = new ClassReader("org.yasl.jars.JarFileFilter");
classReader.readShort(4);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        classReader.readShort(1024);
    }
}
statement is: classReader.readShort(1024), class spoon.support.reflect.code.CtInvocationImpl
invocation is: classReader.readShort(1024) target is: classReader method is: readShort(int)
statement is: org.objectweb.asm.jip.ClassReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.objectweb.asm.jip.ClassReader
statement code is: ClassReader classReader = new ClassReader("org.yasl.jars.JarFileFilter")
statement is: readUnsignedShort(I)I type is: class org.evosuite.testcase.statements.MethodStatement return type int
statement code is: int readUnsignedShort = classReader.readUnsignedShort(4)
test data is: ClassReader classReader = new ClassReader("org.yasl.jars.JarFileFilter");
classReader.readUnsignedShort(4);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Improved test data for the above code snippet
        ClassReader classReader = new ClassReader("com.example.mypackage.MyClass");
        classReader.readUnsignedShort(10);
    }
}
statement is: // Improved test data for the above code snippet
ClassReader classReader = new ClassReader("com.example.mypackage.MyClass"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: classReader.readUnsignedShort(10), class spoon.support.reflect.code.CtInvocationImpl
invocation is: classReader.readUnsignedShort(10) target is: classReader method is: readUnsignedShort(int)
source statement: org.objectweb.asm.jip.ClassReader(Ljava/lang/String;)V callee: VariableReference: Statement 0, type org.objectweb.asm.jip.ClassReaderindex is: 1
Matched Method is: readUnsignedShort(I)I
TestCase is: String string = "com.example.mypackage.MyClass";
ClassReader classReader = new ClassReader(string);
int _int = 10;
((ClassReader) string).readUnsignedShort(_int);

statement is: org.objectweb.asm.jip.ClassReader(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.objectweb.asm.jip.ClassReader
statement code is: ClassReader classReader = new ClassReader("org.yasl.jars.JarFileFilter")
statement is: org.objectweb.asm.jip.ClassWriter(Lorg/objectweb/asm/jip/ClassReader;I)V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class org.objectweb.asm.jip.ClassWriter
statement code is: ClassWriter classWriter = new ClassWriter(arg0, 4)
statement is: copyPool(Lorg/objectweb/asm/jip/ClassWriter;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: classReader.copyPool(arg0)
test data is: ClassReader classReader = new ClassReader("org.yasl.jars.JarFileFilter");
ClassWriter classWriter = new ClassWriter(classReader, 4);
classReader.copyPool(classWriter);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        classReader.copyPool(classWriter);
        // Improved test data:
        int someInteger = 123;// Changed to a more descriptive value.

        double someDouble = 3.14;// Changed to a more descriptive value.

        String someString = "Hello, World!";// Changed to a more descriptive string.

        char someChar = 'A';// Changed to a more descriptive character.

        classReader.copyPool(classWriter);
    }
}
statement is: classReader.copyPool(classWriter), class spoon.support.reflect.code.CtInvocationImpl
invocation is: classReader.copyPool(classWriter) target is: classReader method is: copyPool()
statement is: // Improved test data:
int someInteger = 123// Changed to a more descriptive value.
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: double someDouble = 3.14// Changed to a more descriptive value.
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: String someString = "Hello, World!"// Changed to a more descriptive string.
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: char someChar = 'A'// Changed to a more descriptive character.
, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: classReader.copyPool(classWriter), class spoon.support.reflect.code.CtInvocationImpl
invocation is: classReader.copyPool(classWriter) target is: classReader method is: copyPool()
* this is vulnerable: int _int = 123
* this is vulnerable: double _double = 3.14
* this is vulnerable: String string = "Hello, World!"
* this is vulnerable: char _char = 'A'
TestCase is: int _int = 123;
double _double = 3.14;
String string = "Hello, World!";
char _char = 'A';

* test suite isTestSuite: 55
Test 0: 
ClassReader classReader = null;
try {
  classReader = new ClassReader("0");
  fail("Expecting exception: IOException");

} catch(Throwable e) {
   //
   // Class not found
   //
   verifyException("org.objectweb.asm.jip.ClassReader", e);
}

Test 1: 
ClassReader classReader = new ClassReader("org.objectweb.asm.jip.Frame");
classReader.readConst(15, (char[]) null);
Test 2: 
byte[] byteArray = new byte[10];
ClassReader classReader = new ClassReader(byteArray);
// Undeclared exception!
try { 
  classReader.getAccess();
  fail("Expecting exception: ArrayIndexOutOfBoundsException");

} catch(ArrayIndexOutOfBoundsException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 3: 
ClassReader classReader = new ClassReader("org.yasl.jars.JarFileFilter");
classReader.getItem(13);
Test 4: 
ClassReader classReader = new ClassReader("org.yasl.jars.JarFileFilter");
classReader.readByte(2);
Test 5: 
ClassReader classReader = new ClassReader("org.yasl.jars.JarFileFilter");
classReader.getClassName();
Test 6: 
ClassReader classReader = new ClassReader("java/lang/Class");
classReader.getSuperName();
Test 7: 
ClassReader classReader = new ClassReader("org.yasl.jars.JarFileFilter");
ClassReader classReader = null;
try {
  classReader = new ClassReader(classReader.b, 2, 2);
  fail("Expecting exception: ArrayIndexOutOfBoundsException");

} catch(ArrayIndexOutOfBoundsException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 8: 
ClassReader classReader = new ClassReader("org.objectweb.asm.jip.Frame");
classReader.getInterfaces();
Test 9: 
ClassReader classReader = new ClassReader("org.yasl.jars.JarFileFilter");
classReader.getInterfaces();
Test 10: 
ClassReader classReader = new ClassReader("java/lang/Class");
ClassWriter classWriter = new ClassWriter(classReader, 19569);
Test 11: 
ClassReader classReader = new ClassReader("java/lang/Throwable");
ClassReader classReader = new ClassReader(classReader.b, 8, 9);
ClassWriter classWriter = null;
try {
  classWriter = new ClassWriter(classReader, 1000);
  fail("Expecting exception: ArrayIndexOutOfBoundsException");

} catch(ArrayIndexOutOfBoundsException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 12: 
byte[] byteArray = new byte[0];
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
ClassReader classReader = null;
try {
  classReader = new ClassReader(byteArrayInputStream);
  fail("Expecting exception: ArrayIndexOutOfBoundsException");

} catch(ArrayIndexOutOfBoundsException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 13: 
ClassReader classReader = new ClassReader("org.objectweb.asm.jip.Frame");
ClassWriter classWriter = new ClassWriter(classReader, 4);
ClassReader classReader = new ClassReader("java/lang/Throwable");
classReader.accept((ClassVisitor) classWriter, 122);
Test 14: 
ClassReader classReader = new ClassReader("java/lang/Class");
ClassWriter classWriter = new ClassWriter(2);
// Undeclared exception!
classReader.accept((ClassVisitor) classWriter, 8);
Test 15: 
ClassReader classReader = new ClassReader("org.objectweb.asm.jip.Frame");
char[] charArray = new char[1];
// Undeclared exception!
try { 
  classReader.readConst(288, charArray);
  fail("Expecting exception: ArrayIndexOutOfBoundsException");

} catch(ArrayIndexOutOfBoundsException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 16: 
ClassReader classReader = new ClassReader("org.objectweb.asm.jip.Frame");
char[] charArray = new char[13];
// Undeclared exception!
try { 
  classReader.readUTF8(4, charArray);
  fail("Expecting exception: ArrayIndexOutOfBoundsException");

} catch(ArrayIndexOutOfBoundsException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 17: 
ClassReader classReader = new ClassReader("org.yasl.jars.JarFileFilter");
classReader.readUnsignedShort(166);
Test 18: 
ClassReader classReader = new ClassReader("org.yasl.jars.JarFileFilter");
classReader.readShort(46);
Test 19: 
ClassReader classReader = new ClassReader("org.yasl.jars.JarFileFilter");
classReader.readInt(18);
Test 20: 
ClassReader classReader = new ClassReader("org.yasl.jars.JarFileFilter");
ClassWriter classWriter = new ClassWriter(4);
ClassAdapter classAdapter = new ClassAdapter(classWriter);
classReader.accept((ClassVisitor) classAdapter, (Attribute[]) null, 47);
Test 21: 
ClassReader classReader = new ClassReader("org.objectweb.asm.jip.Frame");
ClassWriter classWriter = new ClassWriter(classReader, 4);
classReader.accept((ClassVisitor) classWriter, (Attribute[]) null, 204);
Test 22: 
ClassReader classReader = new ClassReader("java/lang/Class");
ClassWriter classWriter = new ClassWriter(19569);
Attribute[] attributeArray = new Attribute[3];
// Undeclared exception!
classReader.accept((ClassVisitor) classWriter, attributeArray, 2);
Test 23: 
ClassReader classReader = new ClassReader("org.objectweb.asm.jip.Frame");
ClassWriter classWriter = new ClassWriter((-3666));
classReader.accept((ClassVisitor) classWriter, (Attribute[]) null, 2570);
Test 24: 
ClassReader classReader = new ClassReader("org.objectweb.asm.jip.Frame");
ClassWriter classWriter = new ClassWriter(19569);
ClassAdapter classAdapter = new ClassAdapter(classWriter);
Attribute[] attributeArray = new Attribute[3];
classReader.accept((ClassVisitor) classAdapter, attributeArray, (-3924));
Test 25: 
ClassReader classReader = new ClassReader("org.yasl.jars.JarFileFilter");
ClassWriter classWriter = new ClassWriter(4);
classReader.accept((ClassVisitor) classWriter, (Attribute[]) null, 4);
Test 26: 
ClassReader classReader = new ClassReader("org.yasl.jars.JarFileFilter");
// Undeclared exception!
try { 
  classReader.readConst(15, (char[]) null);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 27: 
ClassReader classReader = new ClassReader("org.yasl.jars.JarFileFilter");
classReader.getAccess();
Test 28: 
ClassReader classReader = new ClassReader("org.yasl.jars.JarFileFilter");
classReader.readByte(21);
Test 29: 
ClassReader classReader = new ClassReader("org.yasl.jars.JarFileFilter");
ClassWriter classWriter = new ClassWriter(classReader, 1);
char[] charArray = new char[4];
classReader.readClass(19, charArray);
Test 30: 
ClassReader classReader = new ClassReader("org.yasl.jars.JarFileFilter");
char[] charArray = new char[8];
classReader.readConst(4, charArray);
Test 31: 
ClassReader classReader = new ClassReader("org.yasl.jars.JarFileFilter");
classReader.readInt(2);
Test 32: 
ClassReader classReader = new ClassReader("org.yasl.jars.JarFileFilter");
Label[] labelArray = new Label[7];
classReader.readLabel(4, labelArray);
Test 33: 
ClassReader classReader = new ClassReader("org.yasl.jars.JarFileFilter");
classReader.readLong(1);
Test 34: 
ClassReader classReader = new ClassReader("org.yasl.jars.JarFileFilter");
classReader.readLong(29);
Test 35: 
ClassReader classReader = new ClassReader("org.yasl.jars.JarFileFilter");
classReader.readShort(2);
Test 36: 
ClassReader classReader = new ClassReader("org.yasl.jars.JarFileFilter");
classReader.readShort(4);
Test 37: 
ClassReader classReader = new ClassReader("org.yasl.jars.JarFileFilter");
classReader.readUnsignedShort(4);
Test 38: 
ClassReader classReader = new ClassReader("org.yasl.jars.JarFileFilter");
ClassWriter classWriter = new ClassWriter(classReader, 4);
classReader.copyPool(classWriter);
Test 39: 

Test 40: 
String string = "org.objectweb.asm.jip.Frame";
ClassReader classReader = new ClassReader("org.objectweb.asm.jip.Frame");
((ClassReader)"org.objectweb.asm.jip.Frame").getInterfaces();
((ClassReader) string).getInterfaces();

Test 41: 
String string = "com.example.MyClass";
ClassReader classReader = new ClassReader("com.example.MyClass");
((ClassReader) string).getInterfaces();

Test 42: 

Test 43: 
ClassReader classReader = new ClassReader((byte[]) 8, 10, 9);

Test 44: 

Test 45: 
char[] charArray = new char[1];

Test 46: 
char[] charArray = new char[13];

Test 47: 
ClassWriter classWriter = new ClassWriter(2570);

Test 48: 
ClassReader classReader = new ClassReader("org.objectweb.asm.jip.Frame");
ClassWriter classWriter = new ClassWriter(100);
ClassAdapter classAdapter = new ClassAdapter(classWriter);
Attribute[] attributeArray = new Attribute[3];

Test 49: 
char[] charArray = new char[4];

Test 50: 
char[] charArray = new char[8];

Test 51: 

Test 52: 
Label[] labelArray = new Label[7];

Test 53: 
String string = "com.example.mypackage.MyClass";
ClassReader classReader = new ClassReader("com.example.mypackage.MyClass");
int _int = 10;
((ClassReader) string).readUnsignedShort(_int);

Test 54: 


* Generated after the refinement and before minimization 55 tests with total length 122
* test suite isTestSuite: 55
Test 0: 
ClassReader classReader = null;
try {
  classReader = new ClassReader("0");
  fail("Expecting exception: IOException");

} catch(Throwable e) {
   //
   // Class not found
   //
   verifyException("org.objectweb.asm.jip.ClassReader", e);
}

Test 1: 
ClassReader classReader = new ClassReader("org.objectweb.asm.jip.Frame");
classReader.readConst(15, (char[]) null);
Test 2: 
byte[] byteArray = new byte[10];
ClassReader classReader = new ClassReader(byteArray);
// Undeclared exception!
try { 
  classReader.getAccess();
  fail("Expecting exception: ArrayIndexOutOfBoundsException");

} catch(ArrayIndexOutOfBoundsException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 3: 
ClassReader classReader = new ClassReader("org.yasl.jars.JarFileFilter");
classReader.getItem(13);
Test 4: 
ClassReader classReader = new ClassReader("org.yasl.jars.JarFileFilter");
classReader.readByte(2);
Test 5: 
ClassReader classReader = new ClassReader("org.yasl.jars.JarFileFilter");
classReader.getClassName();
Test 6: 
ClassReader classReader = new ClassReader("java/lang/Class");
classReader.getSuperName();
Test 7: 
ClassReader classReader = new ClassReader("org.yasl.jars.JarFileFilter");
ClassReader classReader = null;
try {
  classReader = new ClassReader(classReader.b, 2, 2);
  fail("Expecting exception: ArrayIndexOutOfBoundsException");

} catch(ArrayIndexOutOfBoundsException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 8: 
ClassReader classReader = new ClassReader("org.objectweb.asm.jip.Frame");
classReader.getInterfaces();
Test 9: 
ClassReader classReader = new ClassReader("org.yasl.jars.JarFileFilter");
classReader.getInterfaces();
Test 10: 
ClassReader classReader = new ClassReader("java/lang/Class");
ClassWriter classWriter = new ClassWriter(classReader, 19569);
Test 11: 
ClassReader classReader = new ClassReader("java/lang/Throwable");
ClassReader classReader = new ClassReader(classReader.b, 8, 9);
ClassWriter classWriter = null;
try {
  classWriter = new ClassWriter(classReader, 1000);
  fail("Expecting exception: ArrayIndexOutOfBoundsException");

} catch(ArrayIndexOutOfBoundsException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 12: 
byte[] byteArray = new byte[0];
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
ClassReader classReader = null;
try {
  classReader = new ClassReader(byteArrayInputStream);
  fail("Expecting exception: ArrayIndexOutOfBoundsException");

} catch(ArrayIndexOutOfBoundsException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 13: 
ClassReader classReader = new ClassReader("org.objectweb.asm.jip.Frame");
ClassWriter classWriter = new ClassWriter(classReader, 4);
ClassReader classReader = new ClassReader("java/lang/Throwable");
classReader.accept((ClassVisitor) classWriter, 122);
Test 14: 
ClassReader classReader = new ClassReader("java/lang/Class");
ClassWriter classWriter = new ClassWriter(2);
// Undeclared exception!
classReader.accept((ClassVisitor) classWriter, 8);
Test 15: 
ClassReader classReader = new ClassReader("org.objectweb.asm.jip.Frame");
char[] charArray = new char[1];
// Undeclared exception!
try { 
  classReader.readConst(288, charArray);
  fail("Expecting exception: ArrayIndexOutOfBoundsException");

} catch(ArrayIndexOutOfBoundsException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 16: 
ClassReader classReader = new ClassReader("org.objectweb.asm.jip.Frame");
char[] charArray = new char[13];
// Undeclared exception!
try { 
  classReader.readUTF8(4, charArray);
  fail("Expecting exception: ArrayIndexOutOfBoundsException");

} catch(ArrayIndexOutOfBoundsException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 17: 
ClassReader classReader = new ClassReader("org.yasl.jars.JarFileFilter");
classReader.readUnsignedShort(166);
Test 18: 
ClassReader classReader = new ClassReader("org.yasl.jars.JarFileFilter");
classReader.readShort(46);
Test 19: 
ClassReader classReader = new ClassReader("org.yasl.jars.JarFileFilter");
classReader.readInt(18);
Test 20: 
ClassReader classReader = new ClassReader("org.yasl.jars.JarFileFilter");
ClassWriter classWriter = new ClassWriter(4);
ClassAdapter classAdapter = new ClassAdapter(classWriter);
classReader.accept((ClassVisitor) classAdapter, (Attribute[]) null, 47);
Test 21: 
ClassReader classReader = new ClassReader("org.objectweb.asm.jip.Frame");
ClassWriter classWriter = new ClassWriter(classReader, 4);
classReader.accept((ClassVisitor) classWriter, (Attribute[]) null, 204);
Test 22: 
ClassReader classReader = new ClassReader("java/lang/Class");
ClassWriter classWriter = new ClassWriter(19569);
Attribute[] attributeArray = new Attribute[3];
// Undeclared exception!
classReader.accept((ClassVisitor) classWriter, attributeArray, 2);
Test 23: 
ClassReader classReader = new ClassReader("org.objectweb.asm.jip.Frame");
ClassWriter classWriter = new ClassWriter((-3666));
classReader.accept((ClassVisitor) classWriter, (Attribute[]) null, 2570);
Test 24: 
ClassReader classReader = new ClassReader("org.objectweb.asm.jip.Frame");
ClassWriter classWriter = new ClassWriter(19569);
ClassAdapter classAdapter = new ClassAdapter(classWriter);
Attribute[] attributeArray = new Attribute[3];
classReader.accept((ClassVisitor) classAdapter, attributeArray, (-3924));
Test 25: 
ClassReader classReader = new ClassReader("org.yasl.jars.JarFileFilter");
ClassWriter classWriter = new ClassWriter(4);
classReader.accept((ClassVisitor) classWriter, (Attribute[]) null, 4);
Test 26: 
ClassReader classReader = new ClassReader("org.yasl.jars.JarFileFilter");
// Undeclared exception!
try { 
  classReader.readConst(15, (char[]) null);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 27: 
ClassReader classReader = new ClassReader("org.yasl.jars.JarFileFilter");
classReader.getAccess();
Test 28: 
ClassReader classReader = new ClassReader("org.yasl.jars.JarFileFilter");
classReader.readByte(21);
Test 29: 
ClassReader classReader = new ClassReader("org.yasl.jars.JarFileFilter");
ClassWriter classWriter = new ClassWriter(classReader, 1);
char[] charArray = new char[4];
classReader.readClass(19, charArray);
Test 30: 
ClassReader classReader = new ClassReader("org.yasl.jars.JarFileFilter");
char[] charArray = new char[8];
classReader.readConst(4, charArray);
Test 31: 
ClassReader classReader = new ClassReader("org.yasl.jars.JarFileFilter");
classReader.readInt(2);
Test 32: 
ClassReader classReader = new ClassReader("org.yasl.jars.JarFileFilter");
Label[] labelArray = new Label[7];
classReader.readLabel(4, labelArray);
Test 33: 
ClassReader classReader = new ClassReader("org.yasl.jars.JarFileFilter");
classReader.readLong(1);
Test 34: 
ClassReader classReader = new ClassReader("org.yasl.jars.JarFileFilter");
classReader.readLong(29);
Test 35: 
ClassReader classReader = new ClassReader("org.yasl.jars.JarFileFilter");
classReader.readShort(2);
Test 36: 
ClassReader classReader = new ClassReader("org.yasl.jars.JarFileFilter");
classReader.readShort(4);
Test 37: 
ClassReader classReader = new ClassReader("org.yasl.jars.JarFileFilter");
classReader.readUnsignedShort(4);
Test 38: 
ClassReader classReader = new ClassReader("org.yasl.jars.JarFileFilter");
ClassWriter classWriter = new ClassWriter(classReader, 4);
classReader.copyPool(classWriter);
Test 39: 

Test 40: 
String string = "org.objectweb.asm.jip.Frame";
ClassReader classReader = new ClassReader("org.objectweb.asm.jip.Frame");
((ClassReader)"org.objectweb.asm.jip.Frame").getInterfaces();
((ClassReader) string).getInterfaces();

Test 41: 
String string = "com.example.MyClass";
ClassReader classReader = new ClassReader("com.example.MyClass");
((ClassReader) string).getInterfaces();

Test 42: 

Test 43: 
ClassReader classReader = new ClassReader((byte[]) 8, 10, 9);

Test 44: 

Test 45: 
char[] charArray = new char[1];

Test 46: 
char[] charArray = new char[13];

Test 47: 
ClassWriter classWriter = new ClassWriter(2570);

Test 48: 
ClassReader classReader = new ClassReader("org.objectweb.asm.jip.Frame");
ClassWriter classWriter = new ClassWriter(100);
ClassAdapter classAdapter = new ClassAdapter(classWriter);
Attribute[] attributeArray = new Attribute[3];

Test 49: 
char[] charArray = new char[4];

Test 50: 
char[] charArray = new char[8];

Test 51: 

Test 52: 
Label[] labelArray = new Label[7];

Test 53: 
String string = "com.example.mypackage.MyClass";
ClassReader classReader = new ClassReader("com.example.mypackage.MyClass");
int _int = 10;
((ClassReader) string).readUnsignedShort(_int);

Test 54: 


* Minimizing test suite
* test suite isTestSuite: 39
Test 0: 
ClassReader classReader = null;
try {
  classReader = new ClassReader("com.example.MyClass");
  fail("Expecting exception: IOException");

} catch(Throwable e) {
   //
   // Class not found
   //
   verifyException("org.objectweb.asm.jip.ClassReader", e);
}

Test 1: 
ClassReader classReader = new ClassReader("org.objectweb.asm.jip.Frame");
classReader.readConst(15, (char[]) null);
Test 2: 
ClassReader classReader = new ClassReader("org.yasl.jars.JarFileFilter");
classReader.readShort(2);
Test 3: 
ClassReader classReader = new ClassReader("java/lang/Class");
ClassWriter classWriter = new ClassWriter(classReader, 19569);
Test 4: 
ClassReader classReader = new ClassReader("org.yasl.jars.JarFileFilter");
classReader.getAccess();
Test 5: 
ClassReader classReader = new ClassReader("org.yasl.jars.JarFileFilter");
classReader.readLong(1);
Test 6: 
ClassReader classReader = new ClassReader("org.yasl.jars.JarFileFilter");
classReader.getItem(13);
Test 7: 
ClassReader classReader = new ClassReader("org.yasl.jars.JarFileFilter");
classReader.readByte(2);
Test 8: 
ClassReader classReader = new ClassReader("java/lang/Class");
ClassWriter classWriter = new ClassWriter(2);
// Undeclared exception!
classReader.accept((ClassVisitor) classWriter, 8);
Test 9: 
ClassReader classReader = new ClassReader("org.yasl.jars.JarFileFilter");
classReader.getClassName();
Test 10: 
ClassReader classReader = new ClassReader("org.yasl.jars.JarFileFilter");
ClassReader classReader = null;
try {
  classReader = new ClassReader(classReader.b, 2, 2);
  fail("Expecting exception: ArrayIndexOutOfBoundsException");

} catch(ArrayIndexOutOfBoundsException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 11: 
ClassReader classReader = new ClassReader("java/lang/Class");
classReader.getSuperName();
Test 12: 
ClassReader classReader = new ClassReader("org.objectweb.asm.jip.Frame");
classReader.getInterfaces();
Test 13: 
ClassReader classReader = new ClassReader("org.yasl.jars.JarFileFilter");
classReader.getInterfaces();
Test 14: 
ClassReader classReader = new ClassReader("org.objectweb.asm.jip.Frame");
ClassWriter classWriter = new ClassWriter(classReader, 4);
classReader.accept((ClassVisitor) classWriter, (Attribute[]) null, 204);
Test 15: 
ClassReader classReader = new ClassReader("java/lang/Throwable");
ClassReader classReader = new ClassReader(classReader.b, 8, 9);
ClassWriter classWriter = null;
try {
  classWriter = new ClassWriter(classReader, 1000);
  fail("Expecting exception: ArrayIndexOutOfBoundsException");

} catch(ArrayIndexOutOfBoundsException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 16: 
byte[] byteArray = new byte[0];
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
ClassReader classReader = null;
try {
  classReader = new ClassReader(byteArrayInputStream);
  fail("Expecting exception: ArrayIndexOutOfBoundsException");

} catch(ArrayIndexOutOfBoundsException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 17: 
ClassReader classReader = new ClassReader("org.yasl.jars.JarFileFilter");
ClassWriter classWriter = new ClassWriter(4);
ClassAdapter classAdapter = new ClassAdapter(classWriter);
classReader.accept((ClassVisitor) classAdapter, (Attribute[]) null, 47);
Test 18: 
ClassReader classReader = new ClassReader("org.yasl.jars.JarFileFilter");
ClassWriter classWriter = new ClassWriter(4);
classReader.accept((ClassVisitor) classWriter, (Attribute[]) null, 4);
Test 19: 
ClassReader classReader = new ClassReader("org.objectweb.asm.jip.Frame");
ClassWriter classWriter = new ClassWriter((-3666));
classReader.accept((ClassVisitor) classWriter, (Attribute[]) null, 2570);
Test 20: 
ClassReader classReader = new ClassReader("org.objectweb.asm.jip.Frame");
ClassWriter classWriter = new ClassWriter(classReader, 4);
ClassReader classReader = new ClassReader("java/lang/Throwable");
classReader.accept((ClassVisitor) classWriter, 122);
Test 21: 
ClassReader classReader = new ClassReader("org.objectweb.asm.jip.Frame");
ClassWriter classWriter = new ClassWriter(19569);
ClassAdapter classAdapter = new ClassAdapter(classWriter);
Attribute[] attributeArray = new Attribute[3];
classReader.accept((ClassVisitor) classAdapter, attributeArray, (-3924));
Test 22: 
ClassReader classReader = new ClassReader("java/lang/Class");
ClassWriter classWriter = new ClassWriter(19569);
Attribute[] attributeArray = new Attribute[3];
// Undeclared exception!
classReader.accept((ClassVisitor) classWriter, attributeArray, 2);
Test 23: 
ClassReader classReader = new ClassReader("org.objectweb.asm.jip.Frame");
char[] charArray = new char[13];
// Undeclared exception!
try { 
  classReader.readUTF8(4, charArray);
  fail("Expecting exception: ArrayIndexOutOfBoundsException");

} catch(ArrayIndexOutOfBoundsException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 24: 
ClassReader classReader = new ClassReader("org.objectweb.asm.jip.Frame");
char[] charArray = new char[1];
// Undeclared exception!
try { 
  classReader.readConst(288, charArray);
  fail("Expecting exception: ArrayIndexOutOfBoundsException");

} catch(ArrayIndexOutOfBoundsException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 25: 
ClassReader classReader = new ClassReader("org.yasl.jars.JarFileFilter");
classReader.readUnsignedShort(166);
Test 26: 
ClassReader classReader = new ClassReader("org.yasl.jars.JarFileFilter");
classReader.readInt(18);
Test 27: 
ClassReader classReader = new ClassReader("org.yasl.jars.JarFileFilter");
// Undeclared exception!
try { 
  classReader.readConst(15, (char[]) null);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 28: 
ClassReader classReader = new ClassReader("org.yasl.jars.JarFileFilter");
classReader.readByte(21);
Test 29: 
ClassReader classReader = new ClassReader("org.yasl.jars.JarFileFilter");
ClassWriter classWriter = new ClassWriter(classReader, 1);
char[] charArray = new char[4];
classReader.readClass(19, charArray);
Test 30: 
ClassReader classReader = new ClassReader("org.yasl.jars.JarFileFilter");
char[] charArray = new char[8];
classReader.readConst(4, charArray);
Test 31: 
ClassReader classReader = new ClassReader("org.yasl.jars.JarFileFilter");
classReader.readInt(2);
Test 32: 
ClassReader classReader = new ClassReader("org.yasl.jars.JarFileFilter");
Label[] labelArray = new Label[7];
classReader.readLabel(4, labelArray);
Test 33: 
ClassReader classReader = new ClassReader("org.yasl.jars.JarFileFilter");
classReader.readLong(29);
Test 34: 
ClassReader classReader = new ClassReader("org.yasl.jars.JarFileFilter");
classReader.readShort(46);
Test 35: 
ClassReader classReader = new ClassReader("org.yasl.jars.JarFileFilter");
classReader.readShort(4);
Test 36: 
ClassReader classReader = new ClassReader("org.yasl.jars.JarFileFilter");
classReader.readUnsignedShort(4);
Test 37: 
byte[] byteArray = new byte[10];
ClassReader classReader = new ClassReader(byteArray);
Test 38: 
ClassReader classReader = new ClassReader("org.yasl.jars.JarFileFilter");
ClassWriter classWriter = new ClassWriter(classReader, 4);
classReader.copyPool(classWriter);

* Going to analyze the coverage criteria
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 54%
* Total number of goals: 817
* Number of covered goals: 441
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 65%
* Total number of goals: 891
* Number of covered goals: 577
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 50%
* Total number of goals: 40
* Number of covered goals: 20
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 21
* Number of covered goals: 21
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 53%
* Total number of goals: 817
* Number of covered goals: 435
* Generated 39 tests with total length 99
* Resulting test suite's coverage: 64% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 30%
* Compiling and checking tests
Going to execute: removeTestsThatDoNotCompile
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: ClassReader classReader = null;
try {
  classReader = new ClassReader("com.example.MyClass");
  fail("Expecting exception: IOException");

} catch(Throwable e) {
   //
   // Class not found
   //
   verifyException("org.objectweb.asm.jip.ClassReader", e);
}


** It was a parseable test case! 
refined test name is: testIOExceptionOnInvalidClassName
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: ClassReader classReader = new ClassReader("org.objectweb.asm.jip.Frame");
Object readConst = classReader.readConst(15, (char[]) null);
assertEquals(3278, classReader.header);
assertEquals(16777216, readConst);


** It was a parseable test case! 
refined test name is: testReadConstWithValidIndexAndNullArray
* Compiling Tests
refined test name is: testReadConstHeaderSetAndValueEqualsExpectedValue
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: ClassReader classReader = new ClassReader("org.yasl.jars.JarFileFilter");
short readShort = classReader.readShort(2);
assertEquals(259, classReader.header);
assertEquals((short) (-17730), readShort);


** It was a parseable test case! 
refined test name is: testReadShortValue
* Compiling Tests
refined test name is: testReadShortWithOffset
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: ClassReader arg0 = new ClassReader("java/lang/Class");
ClassWriter classWriter = new ClassWriter(arg0, 19569);

** It was a parseable test case! 
refined test name is: testClassWriter
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: ClassReader classReader = new ClassReader("org.yasl.jars.JarFileFilter");
int access = classReader.getAccess();
assertEquals(32, access);


** It was a parseable test case! 
refined test name is: testGetAccessMethodReturnsCorrectValue
* Compiling Tests
refined test name is: testGetAccessReturnsCorrectValue
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: ClassReader classReader = new ClassReader("org.yasl.jars.JarFileFilter");
long readLong = classReader.readLong(1);
assertEquals((-91551935198384128L), readLong);
assertEquals(259, classReader.header);


** It was a parseable test case! 
refined test name is: testReadLongFromFileWithCorrectValueAndHeader
* Compiling Tests
refined test name is: testReadLong
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: ClassReader classReader = new ClassReader("org.yasl.jars.JarFileFilter");
int item = classReader.getItem(13);
assertEquals(105, item);
assertEquals(259, classReader.header);


** It was a parseable test case! 
refined test name is: testGetItemWithValidIndexReturnsValueFromJarFile
* Compiling Tests
refined test name is: testGetItemReturnsCorrectValueAndHeader
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: ClassReader classReader = new ClassReader("org.yasl.jars.JarFileFilter");
int readByte = classReader.readByte(2);
assertEquals(186, readByte);
assertEquals(259, classReader.header);


** It was a parseable test case! 
refined test name is: testReadByteFromJarFileFilterClass
* Compiling Tests
refined test name is: testReadByteFromClassFileHeader
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: ClassReader classReader = new ClassReader("java/lang/Class");
ClassWriter arg0 = new ClassWriter(2);
// Undeclared exception!
classReader.accept((ClassVisitor) arg0, 8);

** It was a parseable test case! 
refined test name is: testAcceptReturnsExpectedResult
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: ClassReader classReader = new ClassReader("org.yasl.jars.JarFileFilter");
assertEquals(259, classReader.header);

String className = classReader.getClassName();
assertEquals("org/yasl/jars/JarFileFilter", className);


** It was a parseable test case! 
refined test name is: testGetHeaderAndClassName
* Compiling Tests
refined test name is: testGetHeaderAndClassName
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: ClassReader classReader = new ClassReader("java/lang/Class");
assertEquals(19569, classReader.header);

String superName = classReader.getSuperName();
assertEquals("java/lang/Object", superName);
assertNotNull(superName);


** It was a parseable test case! 
refined test name is: testReadClassReaderHeader
* Compiling Tests
refined test name is: testGetHeaderAndSuperName
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: ClassReader classReader = new ClassReader("org.objectweb.asm.jip.Frame");
String[] interfaces = classReader.getInterfaces();
assertEquals(0, interfaces.length);
assertEquals(3278, classReader.header);


** It was a parseable test case! 
refined test name is: testNoInterfacesAndCorrectHeader
* Compiling Tests
refined test name is: testClassDoesNotImplementAnyInterfaces
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: ClassReader classReader = new ClassReader("org.yasl.jars.JarFileFilter");
assertEquals(259, classReader.header);

String[] interfaces = classReader.getInterfaces();
assertEquals(1, interfaces.length);


** It was a parseable test case! 
refined test name is: testReadHeaderShouldReturn259WhenReadFromClassFile
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: ClassReader classReader = new ClassReader("java/lang/Throwable");
ClassReader arg0 = new ClassReader(classReader.b, 8, 9);
ClassWriter classWriter = null;
try {
  classWriter = new ClassWriter(arg0, 1000);
  fail("Expecting exception: ArrayIndexOutOfBoundsException");

} catch(ArrayIndexOutOfBoundsException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}


** It was a parseable test case! 
refined test name is: testExceptionThrownWhenAccessingOutOfBoundsElement
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: ClassReader classReader = new ClassReader("org.yasl.jars.JarFileFilter");
ClassWriter arg0 = new ClassWriter(4);
classReader.accept((ClassVisitor) arg0, (Attribute[]) null, 4);
assertEquals(2, ClassWriter.COMPUTE_FRAMES);


** It was a parseable test case! 
refined test name is: testAcceptshouldPassClassVisitorObjectToMethod
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: ClassReader classReader = new ClassReader("org.objectweb.asm.jip.Frame");
ClassWriter arg0 = new ClassWriter((-3666));
classReader.accept((ClassVisitor) arg0, (Attribute[]) null, 2570);
assertEquals(8, ClassReader.EXPAND_FRAMES);


** It was a parseable test case! 
refined test name is: testExpansionFlagSetToEight
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: ClassReader classReader = new ClassReader("java/lang/Class");
ClassWriter arg0 = new ClassWriter(19569);
Attribute[] arg1 = new Attribute[3];
// Undeclared exception!
classReader.accept((ClassVisitor) arg0, arg1, 2);

** It was a parseable test case! 
refined test name is: testAcceptthrowsExceptionWithInvalidArgument
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: ClassReader classReader = new ClassReader("org.objectweb.asm.jip.Frame");
char[] arg1 = new char[13];
// Undeclared exception!
try { 
  classReader.readUTF8(4, arg1);
  fail("Expecting exception: ArrayIndexOutOfBoundsException");

} catch(ArrayIndexOutOfBoundsException e) {
   //
   // 13
   //
   verifyException("org.objectweb.asm.jip.ClassReader", e);
}


** It was a parseable test case! 
refined test name is: testReadUTF8ExceedMaxLength
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: ClassReader classReader = new ClassReader("org.objectweb.asm.jip.Frame");
char[] arg1 = new char[1];
// Undeclared exception!
try { 
  classReader.readConst(288, arg1);
  fail("Expecting exception: ArrayIndexOutOfBoundsException");

} catch(ArrayIndexOutOfBoundsException e) {
   //
   // 1
   //
   verifyException("org.objectweb.asm.jip.ClassReader", e);
}


** It was a parseable test case! 
refined test name is: testReadConstthrowsArrayIndexOutOfBoundsException
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: ClassReader classReader = new ClassReader("org.yasl.jars.JarFileFilter");
int readUnsignedShort = classReader.readUnsignedShort(166);
assertEquals(259, classReader.header);
assertEquals(30305, readUnsignedShort);


** It was a parseable test case! 
refined test name is: testReadUnsignedShortReturnsCorrectValueForOffset
* Compiling Tests
refined test name is: testReadUnsignedShort
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: ClassReader classReader = new ClassReader("org.yasl.jars.JarFileFilter");
int readInt = classReader.readInt(18);
assertEquals(167776000, readInt);
assertEquals(259, classReader.header);


** It was a parseable test case! 
refined test name is: testReadIntAndHeader
* Compiling Tests
refined test name is: testReadIntAndAssertEquals
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: ClassReader classReader = new ClassReader("org.yasl.jars.JarFileFilter");
// Undeclared exception!
try { 
  classReader.readConst(15, (char[]) null);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("org.objectweb.asm.jip.ClassReader", e);
}


** It was a parseable test case! 
refined test name is: testReadConstWithInvalidParameterValues
* Compiling Tests
refined test name is: testReadConstWithNullCharArray
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: ClassReader classReader = new ClassReader("org.yasl.jars.JarFileFilter");
int readByte = classReader.readByte(21);
assertEquals(0, readByte);
assertEquals(259, classReader.header);


** It was a parseable test case! 
refined test name is: testReadByteAtPosition21
* Compiling Tests
refined test name is: testReadByteFromInputStreamAtPosition21
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: ClassReader arg0 = new ClassReader("org.yasl.jars.JarFileFilter");
assertEquals(259, arg0.header);

ClassWriter classWriter = new ClassWriter(arg0, 1);
char[] arg1 = new char[4];
String readClass = arg0.readClass(19, arg1);
assertEquals("java/lang/String", readClass);


** It was a parseable test case! 
refined test name is: testAssertEqualsHeaderValue
* Compiling Tests
refined test name is: testHeaderValueIsCorrect
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: ClassReader classReader = new ClassReader("org.yasl.jars.JarFileFilter");
assertEquals(259, classReader.header);

char[] arg1 = new char[8];
Object readConst = classReader.readConst(4, arg1);
assertEquals(".JAR", readConst);


** It was a parseable test case! 
refined test name is: testReadConstValueOfHeaderForJarFileFilter
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: ClassReader classReader = new ClassReader("org.yasl.jars.JarFileFilter");
int readInt = classReader.readInt(2);
assertEquals(259, classReader.header);
assertEquals((-1161953280), readInt);


** It was a parseable test case! 
refined test name is: testReadIntFromHeader
* Compiling Tests
refined test name is: testReadIntWithOffsetTwoBytesReturnsCorrectValue
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: ClassReader classReader = new ClassReader("org.yasl.jars.JarFileFilter");
Label[] arg1 = new Label[7];
Label readLabel = classReader.readLabel(4, arg1);
assertEquals(259, classReader.header);
assertNotNull(readLabel);


** It was a parseable test case! 
refined test name is: testReadLabelShouldReturnValidValue
* Compiling Tests
refined test name is: testReadLabelReturnsValidValue
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: ClassReader classReader = new ClassReader("org.yasl.jars.JarFileFilter");
long readLong = classReader.readLong(29);
assertEquals(504424079052505344L, readLong);
assertEquals(259, classReader.header);


** It was a parseable test case! 
refined test name is: testReadLongFromByte29
* Compiling Tests
refined test name is: testReadingLongValueFromByte29
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: ClassReader classReader = new ClassReader("org.yasl.jars.JarFileFilter");
short readShort = classReader.readShort(46);
assertEquals(259, classReader.header);
assertEquals((short)808, readShort);


** It was a parseable test case! 
refined test name is: testReadShortwithValidOffsetreturnsExpectedValue
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: ClassReader classReader = new ClassReader("org.yasl.jars.JarFileFilter");
classReader.readShort(4);
assertEquals(259, classReader.header);


** It was a parseable test case! 
refined test name is: testReadShortMethodCorrectlySetsHeader
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: ClassReader classReader = new ClassReader("org.yasl.jars.JarFileFilter");
classReader.readUnsignedShort(4);
assertEquals(259, classReader.header);


** It was a parseable test case! 
refined test name is: testReadHeaderValidInput
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: byte[] arg0 = new byte[10];
ClassReader classReader = new ClassReader(arg0);
assertEquals(10, classReader.header);


** It was a parseable test case! 
refined test name is: testReadClassHeaderLength
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 13:36:00.628 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar5475536923660017504.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 13:36:00.650 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5475536923660017504.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 13:36:00.747 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar5475536923660017504.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 13:36:00.748 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5475536923660017504.jar
[MASTER] 13:36:00.827 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar5475536923660017504.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 13:36:00.828 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5475536923660017504.jar
[MASTER] 13:36:02.322 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar5475536923660017504.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 13:36:02.323 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5475536923660017504.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 13:36:02.371 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar5475536923660017504.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 13:36:02.372 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5475536923660017504.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 13:36:02.445 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar5475536923660017504.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 13:36:02.446 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5475536923660017504.jar
[MASTER] 13:36:02.521 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar5475536923660017504.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 13:36:02.523 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5475536923660017504.jar
[MASTER] 13:36:02.591 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar5475536923660017504.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 13:36:02.592 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5475536923660017504.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 13:36:04.875 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar5475536923660017504.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 13:36:04.876 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5475536923660017504.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 13:36:04.934 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar5475536923660017504.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 13:36:04.935 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5475536923660017504.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 13:36:05.233 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar5475536923660017504.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 13:36:05.234 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5475536923660017504.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 13:36:05.386 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar5475536923660017504.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 13:36:05.387 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5475536923660017504.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 13:36:05.442 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar5475536923660017504.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 13:36:05.443 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5475536923660017504.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 13:36:05.565 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar5475536923660017504.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 13:36:05.566 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5475536923660017504.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
Going to execute: handleTestsThatAreUnstable
[MASTER] 13:36:05.717 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar5475536923660017504.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 13:36:05.718 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5475536923660017504.jar
* Compiling Tests
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 13:36:06.778 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar5475536923660017504.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 13:36:06.779 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5475536923660017504.jar
[MASTER] 13:36:09.056 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar5475536923660017504.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 13:36:09.057 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5475536923660017504.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 13:36:09.173 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar5475536923660017504.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 13:36:09.174 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5475536923660017504.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 13:36:09.300 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar5475536923660017504.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 13:36:09.301 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5475536923660017504.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 13:36:09.361 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar5475536923660017504.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 13:36:09.363 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5475536923660017504.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 13:36:09.454 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar5475536923660017504.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 13:36:09.455 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5475536923660017504.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 13:36:09.519 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar5475536923660017504.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 13:36:09.523 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5475536923660017504.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 13:36:09.607 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar5475536923660017504.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
[MASTER] 13:36:09.608 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5475536923660017504.jar
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 13:36:09.709 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar5475536923660017504.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 13:36:09.710 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5475536923660017504.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 13:36:09.751 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar5475536923660017504.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 13:36:09.752 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5475536923660017504.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 13:36:09.795 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar5475536923660017504.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 13:36:09.796 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5475536923660017504.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 13:36:09.840 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar5475536923660017504.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 13:36:09.841 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5475536923660017504.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 13:36:09.881 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar5475536923660017504.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 13:36:09.882 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5475536923660017504.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 13:36:09.941 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar5475536923660017504.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 13:36:09.942 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5475536923660017504.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 13:36:10.015 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar5475536923660017504.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 13:36:10.016 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5475536923660017504.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 13:36:10.090 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar5475536923660017504.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 13:36:10.091 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5475536923660017504.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 13:36:10.137 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar5475536923660017504.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 13:36:10.138 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5475536923660017504.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 1 called: 0 to improve: false
** Write a test suite: 2 called: 1 to improve: false
** Write a test suite: 4 called: 2 to improve: false
** Write a test suite: 5 called: 3 to improve: false
** Write a test suite: 6 called: 4 to improve: false
** Write a test suite: 7 called: 5 to improve: false
** Write a test suite: 9 called: 6 to improve: false
** Write a test suite: 10 called: 7 to improve: false
** Write a test suite: 11 called: 8 to improve: false
** Write a test suite: 19 called: 9 to improve: false
** Write a test suite: 20 called: 10 to improve: false
** Write a test suite: 21 called: 11 to improve: false
** Write a test suite: 22 called: 12 to improve: false
** Write a test suite: 23 called: 13 to improve: false
** Write a test suite: 25 called: 14 to improve: false
** Write a test suite: 26 called: 15 to improve: false
** Write a test suite: 27 called: 16 to improve: false
[MASTER] 13:36:18.236 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar5475536923660017504.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 13:36:18.237 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5475536923660017504.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 4 called: 0 to improve: false
** Write a test suite: 5 called: 1 to improve: false
** Write a test suite: 6 called: 2 to improve: false
** Write a test suite: 8 called: 3 to improve: false
** Write a test suite: 9 called: 4 to improve: false
** Write a test suite: 10 called: 5 to improve: false
** Write a test suite: 11 called: 6 to improve: false
** Write a test suite: 12 called: 7 to improve: false
** Write a test suite: 20 called: 8 to improve: false
** Write a test suite: 21 called: 9 to improve: false
** Write a test suite: 22 called: 10 to improve: false
** Write a test suite: 24 called: 11 to improve: false
** Write a test suite: 25 called: 12 to improve: false
** Write a test suite: 26 called: 13 to improve: false
** Write a test suite: 27 called: 14 to improve: false
** Write a test suite: 29 called: 15 to improve: false
** Write a test suite: 30 called: 16 to improve: false
[MASTER] 13:36:25.569 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar5475536923660017504.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 13:36:25.570 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5475536923660017504.jar
[MASTER] 13:36:30.731 [logback-1] WARN  TimeController - Already entered in phase: INLINING. This will mess up the timing calculations.
* test suite isTestSuite: 39
Test 0: 
ClassReader classReader = null;
try {
  classReader = new ClassReader("0");
  fail("Expecting exception: IOException");

} catch(Throwable e) {
   //
   // Class not found
   //
   verifyException("org.objectweb.asm.jip.ClassReader", e);
}

Test 1: 
ClassReader classReader = new ClassReader("org.objectweb.asm.jip.Frame");
classReader.readConst(15, (char[]) null);
Test 2: 
byte[] byteArray = new byte[10];
ClassReader classReader = new ClassReader(byteArray);
// Undeclared exception!
try { 
  classReader.getAccess();
  fail("Expecting exception: ArrayIndexOutOfBoundsException");

} catch(ArrayIndexOutOfBoundsException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 3: 
ClassReader classReader = new ClassReader("org.yasl.jars.JarFileFilter");
classReader.getItem(13);
Test 4: 
ClassReader classReader = new ClassReader("org.yasl.jars.JarFileFilter");
classReader.readByte(2);
Test 5: 
ClassReader classReader = new ClassReader("org.yasl.jars.JarFileFilter");
classReader.getClassName();
Test 6: 
ClassReader classReader = new ClassReader("java/lang/Class");
classReader.getSuperName();
Test 7: 
ClassReader classReader = new ClassReader("org.yasl.jars.JarFileFilter");
ClassReader classReader = null;
try {
  classReader = new ClassReader(classReader.b, 2, 2);
  fail("Expecting exception: ArrayIndexOutOfBoundsException");

} catch(ArrayIndexOutOfBoundsException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 8: 
ClassReader classReader = new ClassReader("org.objectweb.asm.jip.Frame");
classReader.getInterfaces();
Test 9: 
ClassReader classReader = new ClassReader("org.yasl.jars.JarFileFilter");
classReader.getInterfaces();
Test 10: 
ClassReader classReader = new ClassReader("java/lang/Class");
ClassWriter classWriter = new ClassWriter(classReader, 19569);
Test 11: 
ClassReader classReader = new ClassReader("java/lang/Throwable");
ClassReader classReader = new ClassReader(classReader.b, 8, 9);
ClassWriter classWriter = null;
try {
  classWriter = new ClassWriter(classReader, 1000);
  fail("Expecting exception: ArrayIndexOutOfBoundsException");

} catch(ArrayIndexOutOfBoundsException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 12: 
byte[] byteArray = new byte[0];
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
ClassReader classReader = null;
try {
  classReader = new ClassReader(byteArrayInputStream);
  fail("Expecting exception: ArrayIndexOutOfBoundsException");

} catch(ArrayIndexOutOfBoundsException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 13: 
ClassReader classReader = new ClassReader("org.objectweb.asm.jip.Frame");
ClassWriter classWriter = new ClassWriter(classReader, 4);
ClassReader classReader = new ClassReader("java/lang/Throwable");
classReader.accept((ClassVisitor) classWriter, 122);
Test 14: 
ClassReader classReader = new ClassReader("java/lang/Class");
ClassWriter classWriter = new ClassWriter(2);
// Undeclared exception!
classReader.accept((ClassVisitor) classWriter, 8);
Test 15: 
ClassReader classReader = new ClassReader("org.objectweb.asm.jip.Frame");
char[] charArray = new char[1];
// Undeclared exception!
try { 
  classReader.readConst(288, charArray);
  fail("Expecting exception: ArrayIndexOutOfBoundsException");

} catch(ArrayIndexOutOfBoundsException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 16: 
ClassReader classReader = new ClassReader("org.objectweb.asm.jip.Frame");
char[] charArray = new char[13];
// Undeclared exception!
try { 
  classReader.readUTF8(4, charArray);
  fail("Expecting exception: ArrayIndexOutOfBoundsException");

} catch(ArrayIndexOutOfBoundsException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 17: 
ClassReader classReader = new ClassReader("org.yasl.jars.JarFileFilter");
classReader.readUnsignedShort(166);
Test 18: 
ClassReader classReader = new ClassReader("org.yasl.jars.JarFileFilter");
classReader.readShort(46);
Test 19: 
ClassReader classReader = new ClassReader("org.yasl.jars.JarFileFilter");
classReader.readInt(18);
Test 20: 
ClassReader classReader = new ClassReader("org.yasl.jars.JarFileFilter");
ClassWriter classWriter = new ClassWriter(4);
ClassAdapter classAdapter = new ClassAdapter(classWriter);
classReader.accept((ClassVisitor) classAdapter, (Attribute[]) null, 47);
Test 21: 
ClassReader classReader = new ClassReader("org.objectweb.asm.jip.Frame");
ClassWriter classWriter = new ClassWriter(classReader, 4);
classReader.accept((ClassVisitor) classWriter, (Attribute[]) null, 204);
Test 22: 
ClassReader classReader = new ClassReader("java/lang/Class");
ClassWriter classWriter = new ClassWriter(19569);
Attribute[] attributeArray = new Attribute[3];
// Undeclared exception!
classReader.accept((ClassVisitor) classWriter, attributeArray, 2);
Test 23: 
ClassReader classReader = new ClassReader("org.objectweb.asm.jip.Frame");
ClassWriter classWriter = new ClassWriter((-3666));
classReader.accept((ClassVisitor) classWriter, (Attribute[]) null, 2570);
Test 24: 
ClassReader classReader = new ClassReader("org.objectweb.asm.jip.Frame");
ClassWriter classWriter = new ClassWriter(19569);
ClassAdapter classAdapter = new ClassAdapter(classWriter);
Attribute[] attributeArray = new Attribute[3];
classReader.accept((ClassVisitor) classAdapter, attributeArray, (-3924));
Test 25: 
ClassReader classReader = new ClassReader("org.yasl.jars.JarFileFilter");
ClassWriter classWriter = new ClassWriter(4);
classReader.accept((ClassVisitor) classWriter, (Attribute[]) null, 4);
Test 26: 
ClassReader classReader = new ClassReader("org.yasl.jars.JarFileFilter");
// Undeclared exception!
try { 
  classReader.readConst(15, (char[]) null);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 27: 
ClassReader classReader = new ClassReader("org.yasl.jars.JarFileFilter");
classReader.getAccess();
Test 28: 
ClassReader classReader = new ClassReader("org.yasl.jars.JarFileFilter");
classReader.readByte(21);
Test 29: 
ClassReader classReader = new ClassReader("org.yasl.jars.JarFileFilter");
ClassWriter classWriter = new ClassWriter(classReader, 1);
char[] charArray = new char[4];
classReader.readClass(19, charArray);
Test 30: 
ClassReader classReader = new ClassReader("org.yasl.jars.JarFileFilter");
char[] charArray = new char[8];
classReader.readConst(4, charArray);
Test 31: 
ClassReader classReader = new ClassReader("org.yasl.jars.JarFileFilter");
classReader.readInt(2);
Test 32: 
ClassReader classReader = new ClassReader("org.yasl.jars.JarFileFilter");
Label[] labelArray = new Label[7];
classReader.readLabel(4, labelArray);
Test 33: 
ClassReader classReader = new ClassReader("org.yasl.jars.JarFileFilter");
classReader.readLong(1);
Test 34: 
ClassReader classReader = new ClassReader("org.yasl.jars.JarFileFilter");
classReader.readLong(29);
Test 35: 
ClassReader classReader = new ClassReader("org.yasl.jars.JarFileFilter");
classReader.readShort(2);
Test 36: 
ClassReader classReader = new ClassReader("org.yasl.jars.JarFileFilter");
classReader.readShort(4);
Test 37: 
ClassReader classReader = new ClassReader("org.yasl.jars.JarFileFilter");
classReader.readUnsignedShort(4);
Test 38: 
ClassReader classReader = new ClassReader("org.yasl.jars.JarFileFilter");
ClassWriter classWriter = new ClassWriter(classReader, 4);
classReader.copyPool(classWriter);

* Minimizing test suite
* test suite isTestSuite: 39
Test 0: 
ClassReader classReader = null;
try {
  classReader = new ClassReader("0");
  fail("Expecting exception: IOException");

} catch(Throwable e) {
   //
   // Class not found
   //
   verifyException("org.objectweb.asm.jip.ClassReader", e);
}

Test 1: 
ClassReader classReader = new ClassReader("org.objectweb.asm.jip.Frame");
classReader.readConst(15, (char[]) null);
Test 2: 
ClassReader classReader = new ClassReader("org.yasl.jars.JarFileFilter");
classReader.readShort(2);
Test 3: 
ClassReader classReader = new ClassReader("java/lang/Class");
ClassWriter classWriter = new ClassWriter(classReader, 19569);
Test 4: 
ClassReader classReader = new ClassReader("org.yasl.jars.JarFileFilter");
classReader.getAccess();
Test 5: 
ClassReader classReader = new ClassReader("org.yasl.jars.JarFileFilter");
classReader.readLong(1);
Test 6: 
ClassReader classReader = new ClassReader("org.yasl.jars.JarFileFilter");
classReader.getItem(13);
Test 7: 
ClassReader classReader = new ClassReader("org.yasl.jars.JarFileFilter");
classReader.readByte(2);
Test 8: 
ClassReader classReader = new ClassReader("java/lang/Class");
ClassWriter classWriter = new ClassWriter(2);
// Undeclared exception!
classReader.accept((ClassVisitor) classWriter, 8);
Test 9: 
ClassReader classReader = new ClassReader("org.yasl.jars.JarFileFilter");
classReader.getClassName();
Test 10: 
ClassReader classReader = new ClassReader("org.yasl.jars.JarFileFilter");
ClassReader classReader = null;
try {
  classReader = new ClassReader(classReader.b, 2, 2);
  fail("Expecting exception: ArrayIndexOutOfBoundsException");

} catch(ArrayIndexOutOfBoundsException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 11: 
ClassReader classReader = new ClassReader("java/lang/Class");
classReader.getSuperName();
Test 12: 
ClassReader classReader = new ClassReader("org.objectweb.asm.jip.Frame");
classReader.getInterfaces();
Test 13: 
ClassReader classReader = new ClassReader("org.yasl.jars.JarFileFilter");
classReader.getInterfaces();
Test 14: 
ClassReader classReader = new ClassReader("org.objectweb.asm.jip.Frame");
ClassWriter classWriter = new ClassWriter(classReader, 4);
classReader.accept((ClassVisitor) classWriter, (Attribute[]) null, 204);
Test 15: 
ClassReader classReader = new ClassReader("java/lang/Throwable");
ClassReader classReader = new ClassReader(classReader.b, 8, 9);
ClassWriter classWriter = null;
try {
  classWriter = new ClassWriter(classReader, 1000);
  fail("Expecting exception: ArrayIndexOutOfBoundsException");

} catch(ArrayIndexOutOfBoundsException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 16: 
byte[] byteArray = new byte[0];
ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(byteArray);
ClassReader classReader = null;
try {
  classReader = new ClassReader(byteArrayInputStream);
  fail("Expecting exception: ArrayIndexOutOfBoundsException");

} catch(ArrayIndexOutOfBoundsException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 17: 
ClassReader classReader = new ClassReader("org.yasl.jars.JarFileFilter");
ClassWriter classWriter = new ClassWriter(4);
ClassAdapter classAdapter = new ClassAdapter(classWriter);
classReader.accept((ClassVisitor) classAdapter, (Attribute[]) null, 47);
Test 18: 
ClassReader classReader = new ClassReader("org.yasl.jars.JarFileFilter");
ClassWriter classWriter = new ClassWriter(4);
classReader.accept((ClassVisitor) classWriter, (Attribute[]) null, 4);
Test 19: 
ClassReader classReader = new ClassReader("org.objectweb.asm.jip.Frame");
ClassWriter classWriter = new ClassWriter((-3666));
classReader.accept((ClassVisitor) classWriter, (Attribute[]) null, 2570);
Test 20: 
ClassReader classReader = new ClassReader("org.objectweb.asm.jip.Frame");
ClassWriter classWriter = new ClassWriter(classReader, 4);
ClassReader classReader = new ClassReader("java/lang/Throwable");
classReader.accept((ClassVisitor) classWriter, 122);
Test 21: 
ClassReader classReader = new ClassReader("org.objectweb.asm.jip.Frame");
ClassWriter classWriter = new ClassWriter(19569);
ClassAdapter classAdapter = new ClassAdapter(classWriter);
Attribute[] attributeArray = new Attribute[3];
classReader.accept((ClassVisitor) classAdapter, attributeArray, (-3924));
Test 22: 
ClassReader classReader = new ClassReader("java/lang/Class");
ClassWriter classWriter = new ClassWriter(19569);
Attribute[] attributeArray = new Attribute[3];
// Undeclared exception!
classReader.accept((ClassVisitor) classWriter, attributeArray, 2);
Test 23: 
ClassReader classReader = new ClassReader("org.objectweb.asm.jip.Frame");
char[] charArray = new char[13];
// Undeclared exception!
try { 
  classReader.readUTF8(4, charArray);
  fail("Expecting exception: ArrayIndexOutOfBoundsException");

} catch(ArrayIndexOutOfBoundsException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 24: 
ClassReader classReader = new ClassReader("org.objectweb.asm.jip.Frame");
char[] charArray = new char[1];
// Undeclared exception!
try { 
  classReader.readConst(288, charArray);
  fail("Expecting exception: ArrayIndexOutOfBoundsException");

} catch(ArrayIndexOutOfBoundsException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 25: 
ClassReader classReader = new ClassReader("org.yasl.jars.JarFileFilter");
classReader.readUnsignedShort(166);
Test 26: 
ClassReader classReader = new ClassReader("org.yasl.jars.JarFileFilter");
classReader.readInt(18);
Test 27: 
ClassReader classReader = new ClassReader("org.yasl.jars.JarFileFilter");
// Undeclared exception!
try { 
  classReader.readConst(15, (char[]) null);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 28: 
ClassReader classReader = new ClassReader("org.yasl.jars.JarFileFilter");
classReader.readByte(21);
Test 29: 
ClassReader classReader = new ClassReader("org.yasl.jars.JarFileFilter");
ClassWriter classWriter = new ClassWriter(classReader, 1);
char[] charArray = new char[4];
classReader.readClass(19, charArray);
Test 30: 
ClassReader classReader = new ClassReader("org.yasl.jars.JarFileFilter");
char[] charArray = new char[8];
classReader.readConst(4, charArray);
Test 31: 
ClassReader classReader = new ClassReader("org.yasl.jars.JarFileFilter");
classReader.readInt(2);
Test 32: 
ClassReader classReader = new ClassReader("org.yasl.jars.JarFileFilter");
Label[] labelArray = new Label[7];
classReader.readLabel(4, labelArray);
Test 33: 
ClassReader classReader = new ClassReader("org.yasl.jars.JarFileFilter");
classReader.readLong(29);
Test 34: 
ClassReader classReader = new ClassReader("org.yasl.jars.JarFileFilter");
classReader.readShort(46);
Test 35: 
ClassReader classReader = new ClassReader("org.yasl.jars.JarFileFilter");
classReader.readShort(4);
Test 36: 
ClassReader classReader = new ClassReader("org.yasl.jars.JarFileFilter");
classReader.readUnsignedShort(4);
Test 37: 
byte[] byteArray = new byte[10];
ClassReader classReader = new ClassReader(byteArray);
Test 38: 
ClassReader classReader = new ClassReader("org.yasl.jars.JarFileFilter");
ClassWriter classWriter = new ClassWriter(classReader, 4);
classReader.copyPool(classWriter);

[MASTER] 13:38:31.710 [logback-1] WARN  TimeController - Already entered in phase: MINIMIZATION. This will mess up the timing calculations.
* Going to analyze the coverage criteria
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 54%
* Total number of goals: 817
* Number of covered goals: 441
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 65%
* Total number of goals: 891
* Number of covered goals: 577
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 50%
* Total number of goals: 40
* Number of covered goals: 20
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 21
* Number of covered goals: 21
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 53%
* Total number of goals: 817
* Number of covered goals: 435
* Generated 39 tests with total length 99
* Resulting test suite's coverage: 64% (average coverage for all fitness functions)
* Generating assertions
[MASTER] 13:38:36.613 [logback-1] WARN  TimeController - Already entered in phase: COVERAGE_ANALYSIS. This will mess up the timing calculations.
* Resulting test suite's mutation score: 30%
* Compiling and checking tests
[MASTER] 13:41:27.254 [logback-1] WARN  TimeController - Already entered in phase: ASSERTION_GENERATION. This will mess up the timing calculations.
Going to execute: removeTestsThatDoNotCompile
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 13:41:41.187 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar5475536923660017504.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 13:41:41.188 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5475536923660017504.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 13:41:41.268 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar5475536923660017504.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 13:41:41.269 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5475536923660017504.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 13:41:41.310 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar5475536923660017504.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 13:41:41.311 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5475536923660017504.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 13:41:42.543 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar5475536923660017504.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 13:41:42.544 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5475536923660017504.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 13:41:42.580 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar5475536923660017504.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 13:41:42.581 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5475536923660017504.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 13:41:42.623 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar5475536923660017504.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 13:41:42.625 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5475536923660017504.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 13:41:42.672 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar5475536923660017504.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 13:41:42.673 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5475536923660017504.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 13:41:42.722 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar5475536923660017504.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 13:41:42.723 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5475536923660017504.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 13:41:44.360 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar5475536923660017504.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 13:41:44.362 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5475536923660017504.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 13:41:44.398 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar5475536923660017504.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 13:41:44.399 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5475536923660017504.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 13:41:44.573 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar5475536923660017504.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 13:41:44.574 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5475536923660017504.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 13:41:44.643 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar5475536923660017504.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 13:41:44.645 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5475536923660017504.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 13:41:44.685 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar5475536923660017504.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 13:41:44.686 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5475536923660017504.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 13:41:44.795 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar5475536923660017504.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 13:41:44.796 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5475536923660017504.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 13:41:44.885 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar5475536923660017504.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 13:41:44.886 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5475536923660017504.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 13:41:45.601 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar5475536923660017504.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 13:41:45.602 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5475536923660017504.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 13:41:47.184 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar5475536923660017504.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 13:41:47.186 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5475536923660017504.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 13:41:47.284 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar5475536923660017504.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 13:41:47.285 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5475536923660017504.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 13:41:47.379 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar5475536923660017504.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 13:41:47.380 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5475536923660017504.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 13:41:47.411 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar5475536923660017504.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 13:41:47.423 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5475536923660017504.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 13:41:47.457 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar5475536923660017504.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 13:41:47.458 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5475536923660017504.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 13:41:47.489 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar5475536923660017504.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 13:41:47.490 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5475536923660017504.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 13:41:47.534 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar5475536923660017504.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 13:41:47.535 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5475536923660017504.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 13:41:47.583 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar5475536923660017504.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 13:41:47.584 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5475536923660017504.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 13:41:47.614 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar5475536923660017504.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 13:41:47.615 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5475536923660017504.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 13:41:47.646 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar5475536923660017504.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 13:41:47.647 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5475536923660017504.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 13:41:47.677 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar5475536923660017504.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 13:41:47.678 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5475536923660017504.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 13:41:47.710 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar5475536923660017504.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 13:41:47.711 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5475536923660017504.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 13:41:47.742 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar5475536923660017504.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 13:41:47.743 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5475536923660017504.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 13:41:47.777 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar5475536923660017504.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 13:41:47.779 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5475536923660017504.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 13:41:47.822 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar5475536923660017504.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 13:41:47.823 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5475536923660017504.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 13:41:47.856 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar5475536923660017504.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 13:41:47.857 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5475536923660017504.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
** Write a test suite: 1 called: 1 to improve: false
** Write a test suite: 2 called: 2 to improve: false
** Write a test suite: 3 called: 3 to improve: false
** Write a test suite: 4 called: 4 to improve: false
** Write a test suite: 5 called: 5 to improve: false
** Write a test suite: 6 called: 6 to improve: false
** Write a test suite: 7 called: 7 to improve: false
** Write a test suite: 8 called: 8 to improve: false
** Write a test suite: 9 called: 9 to improve: false
** Write a test suite: 10 called: 10 to improve: false
** Write a test suite: 11 called: 11 to improve: false
** Write a test suite: 12 called: 12 to improve: false
** Write a test suite: 13 called: 13 to improve: false
** Write a test suite: 14 called: 14 to improve: false
** Write a test suite: 15 called: 15 to improve: false
** Write a test suite: 16 called: 16 to improve: false
** Write a test suite: 17 called: 17 to improve: false
** Write a test suite: 18 called: 18 to improve: false
** Write a test suite: 19 called: 19 to improve: false
** Write a test suite: 20 called: 20 to improve: false
** Write a test suite: 21 called: 21 to improve: false
** Write a test suite: 22 called: 22 to improve: false
** Write a test suite: 23 called: 23 to improve: false
** Write a test suite: 24 called: 24 to improve: false
** Write a test suite: 25 called: 25 to improve: false
** Write a test suite: 26 called: 26 to improve: false
** Write a test suite: 27 called: 27 to improve: false
** Write a test suite: 28 called: 28 to improve: false
** Write a test suite: 29 called: 29 to improve: false
** Write a test suite: 30 called: 30 to improve: false
** Write a test suite: 31 called: 31 to improve: false
[MASTER] 13:41:53.636 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar5475536923660017504.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 13:41:53.637 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5475536923660017504.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
** Write a test suite: 1 called: 1 to improve: false
** Write a test suite: 2 called: 2 to improve: false
** Write a test suite: 3 called: 3 to improve: false
** Write a test suite: 4 called: 4 to improve: false
** Write a test suite: 5 called: 5 to improve: false
** Write a test suite: 6 called: 6 to improve: false
** Write a test suite: 7 called: 7 to improve: false
** Write a test suite: 8 called: 8 to improve: false
** Write a test suite: 9 called: 9 to improve: false
** Write a test suite: 10 called: 10 to improve: false
** Write a test suite: 11 called: 11 to improve: false
** Write a test suite: 12 called: 12 to improve: false
** Write a test suite: 13 called: 13 to improve: false
** Write a test suite: 14 called: 14 to improve: false
** Write a test suite: 15 called: 15 to improve: false
** Write a test suite: 16 called: 16 to improve: false
** Write a test suite: 17 called: 17 to improve: false
** Write a test suite: 18 called: 18 to improve: false
** Write a test suite: 19 called: 19 to improve: false
** Write a test suite: 20 called: 20 to improve: false
** Write a test suite: 21 called: 21 to improve: false
** Write a test suite: 22 called: 22 to improve: false
** Write a test suite: 23 called: 23 to improve: false
** Write a test suite: 24 called: 24 to improve: false
** Write a test suite: 25 called: 25 to improve: false
** Write a test suite: 26 called: 26 to improve: false
** Write a test suite: 27 called: 27 to improve: false
** Write a test suite: 28 called: 28 to improve: false
** Write a test suite: 29 called: 29 to improve: false
** Write a test suite: 30 called: 30 to improve: false
** Write a test suite: 31 called: 31 to improve: false
[MASTER] 13:42:00.526 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/tmp/EvoSuite_pathingJar5475536923660017504.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/root/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 13:42:00.527 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar5475536923660017504.jar
* Writing tests to file
[MASTER] 13:42:00.529 [logback-1] WARN  TimeController - Already entered in phase: JUNIT_CHECK. This will mess up the timing calculations.
* Writing JUnit test case 'ClassReader_ESTest' to evosuite-tests
** Write a test suite: 4 called: 0 to improve: false
** Write a test suite: 5 called: 1 to improve: false
** Write a test suite: 6 called: 2 to improve: false
** Write a test suite: 8 called: 3 to improve: false
** Write a test suite: 9 called: 4 to improve: false
** Write a test suite: 10 called: 5 to improve: false
** Write a test suite: 11 called: 6 to improve: false
** Write a test suite: 12 called: 7 to improve: false
** Write a test suite: 20 called: 8 to improve: false
** Write a test suite: 21 called: 9 to improve: false
** Write a test suite: 22 called: 10 to improve: false
** Write a test suite: 24 called: 11 to improve: false
** Write a test suite: 25 called: 12 to improve: false
** Write a test suite: 26 called: 13 to improve: false
** Write a test suite: 27 called: 14 to improve: false
** Write a test suite: 29 called: 15 to improve: false
** Write a test suite: 30 called: 16 to improve: false
* Writing JUnit test case 'ClassReader_Original_ESTest' to evosuite-tests
** Write a test suite: 0 called: 0 to improve: false
** Write a test suite: 1 called: 1 to improve: false
** Write a test suite: 2 called: 2 to improve: false
** Write a test suite: 3 called: 3 to improve: false
** Write a test suite: 4 called: 4 to improve: false
** Write a test suite: 5 called: 5 to improve: false
** Write a test suite: 6 called: 6 to improve: false
** Write a test suite: 7 called: 7 to improve: false
** Write a test suite: 8 called: 8 to improve: false
** Write a test suite: 9 called: 9 to improve: false
** Write a test suite: 10 called: 10 to improve: false
** Write a test suite: 11 called: 11 to improve: false
** Write a test suite: 12 called: 12 to improve: false
** Write a test suite: 13 called: 13 to improve: false
** Write a test suite: 14 called: 14 to improve: false
** Write a test suite: 15 called: 15 to improve: false
** Write a test suite: 16 called: 16 to improve: false
** Write a test suite: 17 called: 17 to improve: false
** Write a test suite: 18 called: 18 to improve: false
** Write a test suite: 19 called: 19 to improve: false
** Write a test suite: 20 called: 20 to improve: false
** Write a test suite: 21 called: 21 to improve: false
** Write a test suite: 22 called: 22 to improve: false
** Write a test suite: 23 called: 23 to improve: false
** Write a test suite: 24 called: 24 to improve: false
** Write a test suite: 25 called: 25 to improve: false
** Write a test suite: 26 called: 26 to improve: false
** Write a test suite: 27 called: 27 to improve: false
** Write a test suite: 28 called: 28 to improve: false
** Write a test suite: 29 called: 29 to improve: false
** Write a test suite: 30 called: 30 to improve: false
** Write a test suite: 31 called: 31 to improve: false
* Done!

* Computation finished
