* EvoSuite 1.2.1-SNAPSHOT
* Going to generate test cases for class: com.mentorgen.tools.profile.runtime.Profile
* Starting Client-0
* Properties loaded from /home/ubuntu/UTestGen/Evaluation/getting_results/dataset/SF110/51_jiprof/evosuite-files/evosuite.properties
* Connecting to master process on port 13582
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
* Finished analyzing classpath
* Generating tests for class com.mentorgen.tools.profile.runtime.Profile
* Test criteria:
  - Branch Coverage
  - Line Coverage
  - Method-Output Coverage
  - Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 350
* Using seed 1709259361134
[Progress:>                             0%] [Cov:>                                  0%]* Starting evolution
* Initial Number of Goals in DynaMOSA = 106 / 350
[Progress:>                             0%] [Cov:====================>              59%][Progress:>                             1%] [Cov:====================>              59%][Progress:>                             1%] [Cov:======================>            64%][Progress:>                             1%] [Cov:=======================>           66%][Progress:>                             2%] [Cov:=======================>           67%][Progress:>                             2%] [Cov:=======================>           68%][Progress:>                             2%] [Cov:========================>          70%][Progress:>                             3%] [Cov:========================>          70%][Progress:>                             3%] [Cov:========================>          70%][Progress:>                             3%] [Cov:========================>          71%][Progress:>                             3%] [Cov:=========================>         74%][Progress:=>                            4%] [Cov:=========================>         74%][Progress:=>                            4%] [Cov:=========================>         74%][Progress:=>                            4%] [Cov:==========================>        75%][Progress:=>                            4%] [Cov:==========================>        75%][Progress:=>                            5%] [Cov:==========================>        76%][Progress:=>                            5%] [Cov:==========================>        76%][Progress:=>                            5%] [Cov:==========================>        76%][Progress:=>                            5%] [Cov:==========================>        76%][Progress:=>                            6%] [Cov:===========================>       78%][Progress:=>                            6%] [Cov:===========================>       79%][Progress:=>                            6%] [Cov:============================>      80%][Progress:=>                            6%] [Cov:============================>      81%][Progress:==>                           7%] [Cov:============================>      81%][Progress:==>                           7%] [Cov:============================>      81%][Progress:==>                           7%] [Cov:============================>      81%][Progress:==>                           7%] [Cov:============================>      81%][Progress:==>                           8%] [Cov:============================>      81%][Progress:==>                           8%] [Cov:============================>      81%][Progress:==>                           8%] [Cov:============================>      81%][Progress:==>                           8%] [Cov:============================>      81%][Progress:==>                           8%] [Cov:============================>      81%][Progress:==>                           9%] [Cov:============================>      81%][Progress:==>                           9%] [Cov:============================>      81%][Progress:==>                           9%] [Cov:============================>      81%][Progress:==>                           9%] [Cov:============================>      81%][Progress:==>                           9%] [Cov:============================>      81%][Progress:===>                          10%] [Cov:============================>      81%][Progress:===>                          10%] [Cov:============================>      81%][Progress:===>                          10%] [Cov:============================>      81%][Progress:===>                          10%] [Cov:============================>      81%][Progress:===>                          10%] [Cov:============================>      81%][Progress:===>                          11%] [Cov:============================>      81%][Progress:===>                          11%] [Cov:============================>      81%][Progress:===>                          11%] [Cov:============================>      81%][Progress:===>                          11%] [Cov:============================>      81%][Progress:===>                          11%] [Cov:============================>      81%][Progress:===>                          12%] [Cov:============================>      81%][Progress:===>                          12%] [Cov:============================>      81%][Progress:===>                          12%] [Cov:============================>      81%][Progress:===>                          12%] [Cov:============================>      81%][Progress:===>                          13%] [Cov:============================>      81%][Progress:===>                          13%] [Cov:============================>      81%][Progress:===>                          13%] [Cov:============================>      81%][Progress:===>                          13%] [Cov:============================>      81%][Progress:===>                          13%] [Cov:============================>      81%][Progress:====>                         14%] [Cov:============================>      81%][Progress:====>                         14%] [Cov:============================>      81%][Progress:====>                         14%] [Cov:============================>      81%][Progress:====>                         14%] [Cov:============================>      81%][Progress:====>                         15%] [Cov:============================>      81%][Progress:====>                         15%] [Cov:============================>      81%][Progress:====>                         15%] [Cov:============================>      81%][Progress:====>                         15%] [Cov:============================>      81%][Progress:====>                         15%] [Cov:============================>      81%][Progress:====>                         15%] [Cov:============================>      81%][Progress:====>                         16%] [Cov:============================>      81%][Progress:====>                         16%] [Cov:============================>      81%][Progress:====>                         16%] [Cov:============================>      81%][Progress:====>                         16%] [Cov:============================>      81%][Progress:====>                         16%] [Cov:============================>      81%][Progress:=====>                        17%] [Cov:============================>      81%][Progress:=====>                        17%] [Cov:============================>      81%][Progress:=====>                        17%] [Cov:============================>      81%][Progress:=====>                        17%] [Cov:============================>      81%][Progress:=====>                        17%] [Cov:============================>      81%][Progress:=====>                        18%] [Cov:============================>      81%][Progress:=====>                        18%] [Cov:============================>      81%][Progress:=====>                        18%] [Cov:============================>      81%][Progress:=====>                        18%] [Cov:============================>      81%][Progress:=====>                        18%] [Cov:============================>      81%][Progress:=====>                        18%] [Cov:============================>      81%][Progress:=====>                        18%] [Cov:============================>      81%][Progress:=====>                        18%] [Cov:============================>      81%][Progress:=====>                        19%] [Cov:============================>      81%][Progress:=====>                        19%] [Cov:============================>      81%][Progress:=====>                        19%] [Cov:============================>      81%][Progress:=====>                        19%] [Cov:============================>      81%][Progress:=====>                        19%] [Cov:============================>      81%][Progress:=====>                        19%] [Cov:============================>      81%][Progress:=====>                        19%] [Cov:============================>      81%][Progress:=====>                        19%] [Cov:============================>      81%][Progress:=====>                        19%] [Cov:============================>      81%][Progress:======>                       20%] [Cov:============================>      81%][Progress:======>                       20%] [Cov:============================>      81%][Progress:======>                       20%] [Cov:============================>      81%][Progress:======>                       20%] [Cov:============================>      81%][Progress:======>                       20%] [Cov:============================>      81%][Progress:======>                       20%] [Cov:============================>      81%][Progress:======>                       20%] [Cov:============================>      81%][Progress:======>                       20%] [Cov:============================>      81%][Progress:======>                       20%] [Cov:============================>      81%][Progress:======>                       21%] [Cov:============================>      81%][Progress:======>                       21%] [Cov:============================>      81%][Progress:======>                       21%] [Cov:============================>      81%][Progress:======>                       21%] [Cov:============================>      81%][Progress:======>                       21%] [Cov:============================>      81%][Progress:======>                       21%] [Cov:============================>      81%][Progress:======>                       21%] [Cov:============================>      81%][Progress:======>                       21%] [Cov:============================>      81%][Progress:======>                       22%] [Cov:============================>      81%][Progress:======>                       22%] [Cov:============================>      81%][Progress:======>                       22%] [Cov:============================>      81%][Progress:======>                       22%] [Cov:============================>      81%][Progress:======>                       22%] [Cov:============================>      81%][Progress:======>                       22%] [Cov:============================>      81%][Progress:======>                       22%] [Cov:============================>      81%][Progress:======>                       23%] [Cov:============================>      81%][Progress:======>                       23%] [Cov:============================>      81%][Progress:======>                       23%] [Cov:============================>      81%][Progress:======>                       23%] [Cov:============================>      81%][Progress:======>                       23%] [Cov:============================>      81%][Progress:======>                       23%] [Cov:============================>      81%][Progress:======>                       23%] [Cov:============================>      81%][Progress:=======>                      24%] [Cov:============================>      81%][Progress:=======>                      24%] [Cov:============================>      81%][Progress:=======>                      24%] [Cov:============================>      81%][Progress:=======>                      24%] [Cov:============================>      81%][Progress:=======>                      24%] [Cov:============================>      81%][Progress:=======>                      24%] [Cov:============================>      81%][Progress:=======>                      24%] [Cov:============================>      81%][Progress:=======>                      24%] [Cov:============================>      81%][Progress:=======>                      25%] [Cov:============================>      81%][Progress:=======>                      25%] [Cov:============================>      81%][Progress:=======>                      25%] [Cov:============================>      81%][Progress:=======>                      25%] [Cov:============================>      81%][Progress:=======>                      25%] [Cov:============================>      81%][Progress:=======>                      25%] [Cov:============================>      81%][Progress:=======>                      25%] [Cov:============================>      81%][Progress:=======>                      25%] [Cov:============================>      81%][Progress:=======>                      26%] [Cov:============================>      81%][Progress:=======>                      26%] [Cov:============================>      81%][Progress:=======>                      26%] [Cov:============================>      81%][Progress:=======>                      26%] [Cov:============================>      81%][Progress:=======>                      26%] [Cov:============================>      81%][Progress:=======>                      26%] [Cov:============================>      81%][Progress:=======>                      26%] [Cov:============================>      81%][Progress:=======>                      26%] [Cov:============================>      81%][Progress:=======>                      26%] [Cov:============================>      81%][Progress:=======>                      26%] [Cov:============================>      81%][Progress:========>                     27%] [Cov:============================>      81%][Progress:========>                     27%] [Cov:============================>      81%][Progress:========>                     27%] [Cov:============================>      81%][Progress:========>                     27%] [Cov:============================>      81%][Progress:========>                     27%] [Cov:============================>      81%][Progress:========>                     27%] [Cov:============================>      81%][Progress:========>                     27%] [Cov:============================>      81%][Progress:========>                     27%] [Cov:============================>      81%][Progress:========>                     27%] [Cov:============================>      81%][Progress:========>                     27%] [Cov:============================>      81%][Progress:========>                     28%] [Cov:============================>      81%][Progress:========>                     28%] [Cov:============================>      81%][Progress:========>                     28%] [Cov:============================>      81%][Progress:========>                     28%] [Cov:============================>      81%][Progress:========>                     28%] [Cov:============================>      81%][Progress:========>                     28%] [Cov:============================>      81%][Progress:========>                     28%] [Cov:============================>      81%][Progress:========>                     28%] [Cov:============================>      81%][Progress:========>                     29%] [Cov:============================>      81%][Progress:========>                     29%] [Cov:============================>      81%][Progress:========>                     29%] [Cov:============================>      81%][Progress:========>                     29%] [Cov:============================>      81%][Progress:========>                     29%] [Cov:============================>      81%][Progress:========>                     29%] [Cov:============================>      81%][Progress:========>                     29%] [Cov:============================>      81%][Progress:=========>                    30%] [Cov:============================>      81%][Progress:=========>                    30%] [Cov:============================>      81%][Progress:=========>                    30%] [Cov:============================>      81%][Progress:=========>                    30%] [Cov:============================>      81%][Progress:=========>                    30%] [Cov:============================>      81%][Progress:=========>                    30%] [Cov:============================>      81%][Progress:=========>                    31%] [Cov:============================>      81%][Progress:=========>                    31%] [Cov:============================>      81%][Progress:=========>                    31%] [Cov:============================>      81%][Progress:=========>                    31%] [Cov:============================>      81%][Progress:=========>                    31%] [Cov:============================>      81%][Progress:=========>                    31%] [Cov:============================>      81%][Progress:=========>                    31%] [Cov:============================>      81%][Progress:=========>                    31%] [Cov:============================>      81%][Progress:=========>                    32%] [Cov:============================>      81%][Progress:=========>                    32%] [Cov:============================>      81%][Progress:=========>                    32%] [Cov:============================>      81%][Progress:=========>                    32%] [Cov:============================>      81%][Progress:=========>                    32%] [Cov:============================>      81%][Progress:=========>                    32%] [Cov:============================>      81%][Progress:=========>                    32%] [Cov:============================>      81%][Progress:=========>                    33%] [Cov:============================>      81%][Progress:=========>                    33%] [Cov:============================>      81%][Progress:=========>                    33%] [Cov:============================>      81%][Progress:=========>                    33%] [Cov:============================>      81%][Progress:=========>                    33%] [Cov:============================>      81%][Progress:=========>                    33%] [Cov:============================>      81%][Progress:=========>                    33%] [Cov:============================>      81%][Progress:=========>                    33%] [Cov:============================>      81%][Progress:==========>                   34%] [Cov:============================>      81%][Progress:==========>                   34%] [Cov:============================>      81%][Progress:==========>                   34%] [Cov:============================>      81%][Progress:==========>                   34%] [Cov:============================>      81%][Progress:==========>                   34%] [Cov:============================>      81%][Progress:==========>                   34%] [Cov:============================>      81%][Progress:==========>                   34%] [Cov:============================>      81%][Progress:==========>                   35%] [Cov:============================>      81%][Progress:==========>                   35%] [Cov:============================>      81%][Progress:==========>                   35%] [Cov:============================>      81%][Progress:==========>                   35%] [Cov:============================>      81%][Progress:==========>                   35%] [Cov:============================>      81%][Progress:==========>                   35%] [Cov:============================>      81%][Progress:==========>                   36%] [Cov:============================>      81%][Progress:==========>                   36%] [Cov:============================>      81%][Progress:==========>                   36%] [Cov:============================>      81%][Progress:==========>                   36%] [Cov:============================>      81%][Progress:==========>                   36%] [Cov:============================>      81%][Progress:===========>                  37%] [Cov:============================>      81%][Progress:===========>                  37%] [Cov:============================>      81%][Progress:===========>                  37%] [Cov:============================>      81%][Progress:===========>                  37%] [Cov:============================>      81%][Progress:===========>                  38%] [Cov:============================>      81%][Progress:===========>                  38%] [Cov:============================>      81%][Progress:===========>                  38%] [Cov:============================>      81%][Progress:===========>                  38%] [Cov:============================>      81%][Progress:===========>                  38%] [Cov:============================>      81%][Progress:===========>                  39%] [Cov:============================>      81%][Progress:===========>                  39%] [Cov:============================>      81%][Progress:===========>                  39%] [Cov:============================>      81%][Progress:===========>                  39%] [Cov:============================>      81%][Progress:============>                 40%] [Cov:============================>      81%][Progress:============>                 40%] [Cov:============================>      81%][Progress:============>                 40%] [Cov:============================>      81%][Progress:============>                 40%] [Cov:============================>      81%][Progress:============>                 40%] [Cov:============================>      81%][Progress:============>                 41%] [Cov:============================>      81%][Progress:============>                 41%] [Cov:============================>      81%][Progress:============>                 41%] [Cov:============================>      81%][Progress:============>                 41%] [Cov:============================>      81%][Progress:============>                 42%] [Cov:============================>      81%][Progress:============>                 42%] [Cov:============================>      81%][Progress:============>                 42%] [Cov:============================>      81%][Progress:============>                 42%] [Cov:============================>      81%][Progress:============>                 43%] [Cov:============================>      81%][Progress:============>                 43%] [Cov:============================>      81%][Progress:============>                 43%] [Cov:============================>      81%][Progress:============>                 43%] [Cov:============================>      81%][Progress:=============>                44%] [Cov:============================>      81%][Progress:=============>                44%] [Cov:============================>      81%][Progress:=============>                44%] [Cov:============================>      81%][Progress:=============>                44%] [Cov:============================>      81%][Progress:=============>                45%] [Cov:============================>      81%][Progress:=============>                45%] [Cov:============================>      81%][Progress:=============>                45%] [Cov:============================>      81%][Progress:=============>                45%] [Cov:============================>      81%][Progress:=============>                45%] [Cov:============================>      81%][Progress:=============>                46%] [Cov:============================>      81%][Progress:=============>                46%] [Cov:============================>      81%][Progress:=============>                46%] [Cov:============================>      81%][Progress:=============>                46%] [Cov:============================>      81%][Progress:==============>               47%] [Cov:============================>      81%][Progress:==============>               47%] [Cov:============================>      81%][Progress:==============>               47%] [Cov:============================>      81%][Progress:==============>               48%] [Cov:============================>      81%][Progress:==============>               48%] [Cov:============================>      81%][Progress:==============>               48%] [Cov:============================>      81%][Progress:==============>               48%] [Cov:============================>      81%][Progress:==============>               49%] [Cov:============================>      81%][Progress:==============>               49%] [Cov:============================>      81%][Progress:==============>               49%] [Cov:============================>      81%][Progress:==============>               49%] [Cov:============================>      81%][Progress:===============>              50%] [Cov:============================>      81%][Progress:===============>              50%] [Cov:============================>      81%][Progress:===============>              50%] [Cov:============================>      81%][Progress:===============>              51%] [Cov:============================>      81%][Progress:===============>              51%] [Cov:============================>      81%][Progress:===============>              51%] [Cov:============================>      81%][Progress:===============>              51%] [Cov:============================>      81%][Progress:===============>              52%] [Cov:============================>      81%][Progress:===============>              52%] [Cov:============================>      81%][Progress:===============>              52%] [Cov:============================>      81%][Progress:===============>              52%] [Cov:============================>      81%][Progress:===============>              53%] [Cov:============================>      81%][Progress:===============>              53%] [Cov:============================>      81%][Progress:===============>              53%] [Cov:============================>      81%][Progress:================>             54%] [Cov:============================>      81%][Progress:================>             54%] [Cov:============================>      81%][Progress:================>             54%] [Cov:============================>      81%][Progress:================>             54%] [Cov:============================>      81%][Progress:================>             55%] [Cov:============================>      81%][Progress:================>             55%] [Cov:============================>      81%][Progress:================>             55%] [Cov:============================>      81%][Progress:================>             55%] [Cov:============================>      81%][Progress:================>             56%] [Cov:============================>      81%][Progress:================>             56%] [Cov:============================>      81%][Progress:================>             56%] [Cov:============================>      81%][Progress:================>             56%] [Cov:============================>      81%][Progress:=================>            57%] [Cov:============================>      81%][Progress:=================>            57%] [Cov:============================>      81%][Progress:=================>            57%] [Cov:============================>      81%][Progress:=================>            57%] [Cov:============================>      81%][Progress:=================>            57%] [Cov:============================>      81%][Progress:=================>            57%] [Cov:============================>      81%][Progress:=================>            57%] [Cov:============================>      81%][Progress:=================>            58%] [Cov:============================>      81%][Progress:=================>            58%] [Cov:============================>      81%][Progress:=================>            58%] [Cov:============================>      81%][Progress:=================>            58%] [Cov:============================>      81%][Progress:=================>            58%] [Cov:============================>      81%][Progress:=================>            58%] [Cov:============================>      81%][Progress:=================>            59%] [Cov:============================>      81%][Progress:=================>            59%] [Cov:============================>      81%][Progress:=================>            59%] [Cov:============================>      81%][Progress:=================>            59%] [Cov:============================>      81%][Progress:=================>            59%] [Cov:============================>      81%][Progress:=================>            59%] [Cov:============================>      81%][Progress:==================>           60%] [Cov:============================>      81%][Progress:==================>           60%] [Cov:============================>      81%][Progress:==================>           60%] [Cov:============================>      81%][Progress:==================>           60%] [Cov:============================>      81%][Progress:==================>           60%] [Cov:============================>      81%][Progress:==================>           60%] [Cov:============================>      81%][Progress:==================>           61%] [Cov:============================>      81%][Progress:==================>           61%] [Cov:============================>      81%][Progress:==================>           61%] [Cov:============================>      81%][Progress:==================>           61%] [Cov:============================>      81%][Progress:==================>           61%] [Cov:============================>      81%][Progress:==================>           61%] [Cov:============================>      81%][Progress:==================>           61%] [Cov:============================>      81%][Progress:==================>           62%] [Cov:============================>      81%][Progress:==================>           62%] [Cov:============================>      81%][Progress:==================>           62%] [Cov:============================>      81%][Progress:==================>           62%] [Cov:============================>      81%][Progress:==================>           62%] [Cov:============================>      81%][Progress:==================>           62%] [Cov:============================>      81%][Progress:==================>           63%] [Cov:============================>      81%][Progress:==================>           63%] [Cov:============================>      81%][Progress:==================>           63%] [Cov:============================>      81%][Progress:==================>           63%] [Cov:============================>      81%][Progress:==================>           63%] [Cov:============================>      81%][Progress:===================>          64%] [Cov:============================>      81%][Progress:===================>          64%] [Cov:============================>      81%][Progress:===================>          64%] [Cov:============================>      81%][Progress:===================>          64%] [Cov:============================>      81%][Progress:===================>          64%] [Cov:============================>      81%][Progress:===================>          64%] [Cov:============================>      81%][Progress:===================>          65%] [Cov:============================>      81%][Progress:===================>          65%] [Cov:============================>      81%][Progress:===================>          65%] [Cov:============================>      81%][Progress:===================>          65%] [Cov:============================>      81%][Progress:===================>          65%] [Cov:============================>      81%][Progress:===================>          65%] [Cov:============================>      81%][Progress:===================>          66%] [Cov:============================>      81%][Progress:===================>          66%] [Cov:============================>      81%][Progress:===================>          66%] [Cov:============================>      81%][Progress:===================>          66%] [Cov:============================>      81%][Progress:===================>          66%] [Cov:============================>      81%][Progress:===================>          66%] [Cov:============================>      81%][Progress:====================>         67%] [Cov:============================>      81%][Progress:====================>         67%] [Cov:============================>      81%][Progress:====================>         67%] [Cov:============================>      81%][Progress:====================>         67%] [Cov:============================>      81%][Progress:====================>         67%] [Cov:============================>      81%][Progress:====================>         67%] [Cov:============================>      81%][Progress:====================>         68%] [Cov:============================>      81%][Progress:====================>         68%] [Cov:============================>      81%][Progress:====================>         68%] [Cov:============================>      81%][Progress:====================>         68%] [Cov:============================>      81%][Progress:====================>         68%] [Cov:============================>      81%][Progress:====================>         69%] [Cov:============================>      81%][Progress:====================>         69%] [Cov:============================>      81%][Progress:====================>         69%] [Cov:============================>      81%][Progress:====================>         69%] [Cov:============================>      81%][Progress:====================>         69%] [Cov:============================>      81%][Progress:====================>         69%] [Cov:============================>      81%][Progress:=====================>        70%] [Cov:============================>      81%][Progress:=====================>        70%] [Cov:============================>      81%][Progress:=====================>        70%] [Cov:============================>      81%][Progress:=====================>        70%] [Cov:============================>      81%][Progress:=====================>        70%] [Cov:============================>      81%][Progress:=====================>        70%] [Cov:============================>      81%][Progress:=====================>        71%] [Cov:============================>      81%][Progress:=====================>        71%] [Cov:============================>      81%][Progress:=====================>        71%] [Cov:============================>      81%][Progress:=====================>        71%] [Cov:============================>      81%][Progress:=====================>        71%] [Cov:============================>      81%][Progress:=====================>        71%] [Cov:============================>      81%][Progress:=====================>        72%] [Cov:============================>      81%][Progress:=====================>        72%] [Cov:============================>      81%][Progress:=====================>        72%] [Cov:============================>      81%][Progress:=====================>        72%] [Cov:============================>      81%][Progress:=====================>        72%] [Cov:============================>      81%][Progress:=====================>        73%] [Cov:============================>      81%][Progress:=====================>        73%] [Cov:============================>      81%][Progress:=====================>        73%] [Cov:============================>      81%][Progress:=====================>        73%] [Cov:============================>      81%][Progress:=====================>        73%] [Cov:============================>      81%][Progress:=====================>        73%] [Cov:============================>      81%][Progress:======================>       74%] [Cov:============================>      81%][Progress:======================>       74%] [Cov:============================>      81%][Progress:======================>       74%] [Cov:============================>      81%][Progress:======================>       74%] [Cov:============================>      81%][Progress:======================>       74%] [Cov:============================>      81%][Progress:======================>       74%] [Cov:============================>      81%][Progress:======================>       75%] [Cov:============================>      81%][Progress:======================>       75%] [Cov:============================>      81%][Progress:======================>       75%] [Cov:============================>      81%][Progress:======================>       75%] [Cov:============================>      81%][Progress:======================>       75%] [Cov:============================>      81%][Progress:======================>       76%] [Cov:============================>      81%][Progress:======================>       76%] [Cov:============================>      81%][Progress:======================>       76%] [Cov:============================>      81%][Progress:======================>       76%] [Cov:============================>      81%][Progress:======================>       76%] [Cov:============================>      81%][Progress:======================>       76%] [Cov:============================>      81%][Progress:=======================>      77%] [Cov:============================>      81%][Progress:=======================>      77%] [Cov:============================>      81%][Progress:=======================>      77%] [Cov:============================>      81%][Progress:=======================>      77%] [Cov:============================>      81%][Progress:=======================>      77%] [Cov:============================>      81%][Progress:=======================>      78%] [Cov:============================>      81%][Progress:=======================>      78%] [Cov:============================>      81%][Progress:=======================>      78%] [Cov:============================>      81%][Progress:=======================>      78%] [Cov:============================>      81%][Progress:=======================>      78%] [Cov:============================>      81%][Progress:=======================>      78%] [Cov:============================>      81%][Progress:=======================>      79%] [Cov:============================>      81%][Progress:=======================>      79%] [Cov:============================>      81%][Progress:=======================>      79%] [Cov:============================>      81%][Progress:=======================>      79%] [Cov:============================>      81%][Progress:=======================>      79%] [Cov:============================>      81%][Progress:========================>     80%] [Cov:============================>      81%][Progress:========================>     80%] [Cov:============================>      81%][Progress:========================>     80%] [Cov:============================>      81%][Progress:========================>     80%] [Cov:============================>      81%][Progress:========================>     80%] [Cov:============================>      81%][Progress:========================>     80%] [Cov:============================>      81%][Progress:========================>     81%] [Cov:============================>      81%][Progress:========================>     81%] [Cov:============================>      81%][Progress:========================>     81%] [Cov:============================>      81%][Progress:========================>     81%] [Cov:============================>      81%][Progress:========================>     81%] [Cov:============================>      81%][Progress:========================>     82%] [Cov:============================>      81%][Progress:========================>     82%] [Cov:============================>      81%][Progress:========================>     82%] [Cov:============================>      81%][Progress:========================>     82%] [Cov:============================>      81%][Progress:========================>     82%] [Cov:============================>      81%][Progress:========================>     82%] [Cov:============================>      81%][Progress:========================>     83%] [Cov:============================>      81%][Progress:========================>     83%] [Cov:============================>      81%][Progress:========================>     83%] [Cov:============================>      81%][Progress:========================>     83%] [Cov:============================>      81%][Progress:========================>     83%] [Cov:============================>      81%][Progress:=========================>    84%] [Cov:============================>      81%][Progress:=========================>    84%] [Cov:============================>      81%][Progress:=========================>    84%] [Cov:============================>      81%][Progress:=========================>    84%] [Cov:============================>      81%][Progress:=========================>    84%] [Cov:============================>      81%][Progress:=========================>    84%] [Cov:============================>      81%][Progress:=========================>    84%] [Cov:============================>      81%][Progress:=========================>    85%] [Cov:============================>      81%][Progress:=========================>    85%] [Cov:============================>      81%][Progress:=========================>    85%] [Cov:============================>      81%][Progress:=========================>    85%] [Cov:============================>      81%][Progress:=========================>    85%] [Cov:============================>      81%][Progress:=========================>    85%] [Cov:============================>      81%][Progress:=========================>    86%] [Cov:============================>      81%][Progress:=========================>    86%] [Cov:============================>      81%][Progress:=========================>    86%] [Cov:============================>      81%][Progress:=========================>    86%] [Cov:============================>      81%][Progress:=========================>    86%] [Cov:============================>      81%][Progress:=========================>    86%] [Cov:=============================>     83%][Progress:==========================>   87%] [Cov:=============================>     83%][Progress:==========================>   87%] [Cov:=============================>     83%][Progress:==========================>   87%] [Cov:=============================>     83%][Progress:==========================>   87%] [Cov:=============================>     83%][Progress:==========================>   87%] [Cov:=============================>     83%][Progress:==========================>   87%] [Cov:=============================>     83%][Progress:==========================>   88%] [Cov:=============================>     83%][Progress:==========================>   88%] [Cov:=============================>     83%][Progress:==========================>   88%] [Cov:=============================>     83%][Progress:==========================>   88%] [Cov:=============================>     83%][Progress:==========================>   88%] [Cov:=============================>     83%][Progress:==========================>   88%] [Cov:=============================>     83%][Progress:==========================>   88%] [Cov:=============================>     83%][Progress:==========================>   88%] [Cov:=============================>     83%][Progress:==========================>   89%] [Cov:=============================>     83%][Progress:==========================>   89%] [Cov:=============================>     83%][Progress:==========================>   89%] [Cov:=============================>     83%][Progress:==========================>   89%] [Cov:=============================>     83%][Progress:===========================>  90%] [Cov:=============================>     83%][Progress:===========================>  90%] [Cov:=============================>     83%][Progress:===========================>  90%] [Cov:=============================>     83%][Progress:===========================>  90%] [Cov:=============================>     83%][Progress:===========================>  90%] [Cov:=============================>     83%][Progress:===========================>  90%] [Cov:=============================>     83%][Progress:===========================>  91%] [Cov:=============================>     83%][Progress:===========================>  91%] [Cov:=============================>     83%][Progress:===========================>  91%] [Cov:=============================>     83%][Progress:===========================>  91%] [Cov:=============================>     83%][Progress:===========================>  91%] [Cov:=============================>     83%][Progress:===========================>  92%] [Cov:=============================>     83%][Progress:===========================>  92%] [Cov:=============================>     83%][Progress:===========================>  92%] [Cov:=============================>     83%][Progress:===========================>  92%] [Cov:=============================>     83%][Progress:===========================>  92%] [Cov:=============================>     83%][Progress:===========================>  93%] [Cov:=============================>     83%][Progress:===========================>  93%] [Cov:=============================>     83%][Progress:===========================>  93%] [Cov:=============================>     83%][Progress:===========================>  93%] [Cov:=============================>     83%][Progress:============================> 94%] [Cov:=============================>     83%][Progress:============================> 94%] [Cov:=============================>     83%][Progress:============================> 94%] [Cov:=============================>     83%][Progress:============================> 94%] [Cov:=============================>     83%][Progress:============================> 94%] [Cov:=============================>     83%][Progress:============================> 95%] [Cov:=============================>     83%][Progress:============================> 95%] [Cov:=============================>     83%][Progress:============================> 95%] [Cov:=============================>     83%][Progress:============================> 95%] [Cov:=============================>     83%][Progress:============================> 96%] [Cov:=============================>     83%][Progress:============================> 96%] [Cov:=============================>     83%][Progress:============================> 96%] [Cov:=============================>     83%][Progress:============================> 96%] [Cov:=============================>     83%][Progress:============================> 96%] [Cov:=============================>     83%][Progress:=============================>97%] [Cov:=============================>     83%][Progress:=============================>97%] [Cov:=============================>     83%][Progress:=============================>97%] [Cov:=============================>     83%][Progress:=============================>97%] [Cov:=============================>     83%][Progress:=============================>97%] [Cov:=============================>     83%][Progress:=============================>97%] [Cov:=============================>     83%][Progress:=============================>98%] [Cov:=============================>     83%][Progress:=============================>98%] [Cov:=============================>     83%][Progress:=============================>98%] [Cov:=============================>     83%][Progress:=============================>98%] [Cov:=============================>     83%][Progress:=============================>98%] [Cov:=============================>     83%][Progress:=============================>98%] [Cov:=============================>     83%][Progress:=============================>98%] [Cov:=============================>     83%][Progress:=============================>99%] [Cov:=============================>     83%][Progress:=============================>99%] [Cov:=============================>     83%][Progress:=============================>99%] [Cov:=============================>     83%][Progress:=============================>99%] [Cov:=============================>     83%][Progress:=============================>99%] [Cov:=============================>     83%][Progress:=============================>99%] [Cov:=============================>     83%][Progress:==============================100%] [Cov:=============================>     83%][Progress:==============================100%] [Cov:=============================>     83%][Progress:==============================100%] [Cov:=============================>     83%][Progress:==============================100%] [Cov:=============================>     83%][Progress:==============================100%] [Cov:=============================>     83%][Progress:==============================100%] [Cov:=============================>     83%][Progress:==============================100%] [Cov:=============================>     83%][Progress:==============================100%] [Cov:=============================>     83%][Progress:==============================100%] [Cov:=============================>     83%]
* Search finished after 101s and 556 generations, 156250 statements, best individual has fitness: 38.0
* Generated before the refinement 28 tests with total length 72
statement is: allocations()Ljava/lang/Iterable; type is: class org.evosuite.testcase.statements.MethodStatement return type java.lang.Iterable<com.mentorgen.tools.profile.runtime.ClassAllocation>
statement code is: Iterable<ClassAllocation> allocations = Profile.allocations()
test data is: Profile.allocations();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        int[] intArray = new int[]{ 1, 2, 3 };
        String[] stringArray = new String[]{ "apple", "banana", "cherry" };
        double[] doubleArray = new double[]{ 1.0, 2.5, 3.14 };
        char[] charArray = new char[]{ 'a', 'b', 'c' };
    }
}
statement is: int[] intArray = new int[]{ 1, 2, 3 }, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
statement is: String[] stringArray = new String[]{ "apple", "banana", "cherry" }, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
statement is: double[] doubleArray = new double[]{ 1.0, 2.5, 3.14 }, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
statement is: char[] charArray = new char[]{ 'a', 'b', 'c' }, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtNewArrayImpl
statement is: initProfiler()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: Profile.initProfiler()
statement is: start(Ljava/lang/String;Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: Profile.start("<init>", "<init>")
statement is: alloc(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: Profile.alloc("<init>")
test data is: Profile.initProfiler();
Profile.start("<init>", "<init>");
Profile.alloc("<init>");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Profile.initProfiler();
        Profile.start("Constructor", "Constructor");
        Profile.alloc("Constructor");
    }
}
statement is: Profile.initProfiler(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: Profile.initProfiler() target is: Profile method is: initProfiler()
Matched Method is: initProfiler()V
statement is: Profile.start("Constructor", "Constructor"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: Profile.start("Constructor", "Constructor") target is: Profile method is: start(java.lang.String,java.lang.String)
Matched Method is: start(Ljava/lang/String;Ljava/lang/String;)V
statement is: Profile.alloc("Constructor"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: Profile.alloc("Constructor") target is: Profile method is: alloc(java.lang.String)
Matched Method is: alloc(Ljava/lang/String;)V
TestCase is: Profile.initProfiler();
String string = "Constructor";
String string = "Constructor";
Profile.start(string, string);
String string = "Constructor";
Profile.alloc(string);

statement is: clear()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: Profile.clear()
statement is: end(Ljava/lang/String;Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: Profile.end("USR}w}k)Hfn.FQ", "USR}w}k)Hfn.FQ")
test data is: Profile.clear();
Profile.end("USR}w}k)Hfn.FQ", "USR}w}k)Hfn.FQ");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Profile.clear();
        Profile.end("San Francisco", "San Francisco");
    }
}
statement is: Profile.clear(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: Profile.clear() target is: Profile method is: clear()
Matched Method is: clear()V
statement is: Profile.end("San Francisco", "San Francisco"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: Profile.end("San Francisco", "San Francisco") target is: Profile method is: end(java.lang.String,java.lang.String)
Matched Method is: end(Ljava/lang/String;Ljava/lang/String;)V
TestCase is: Profile.clear();
String string = "San Francisco";
String string = "San Francisco";
Profile.end(string, string);

statement is: setFileName(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: Profile.setFileName("")
test data is: Profile.setFileName("");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Profile.setFileName("profile_for_JohnDoe@example.com.txt");
    }
}
statement is: Profile.setFileName("profile_for_JohnDoe@example.com.txt"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: Profile.setFileName("profile_for_JohnDoe@example.com.txt") target is: Profile method is: setFileName(java.lang.String)
Matched Method is: setFileName(Ljava/lang/String;)V
TestCase is: String string = "profile_for_JohnDoe@example.com.txt";
Profile.setFileName(string);

statement is: initProfiler()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: Profile.initProfiler()
statement is: stop()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: Profile.stop()
statement is: start(Ljava/lang/String;Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: Profile.start("}v", "}v")
test data is: Profile.initProfiler();
Profile.stop();
Profile.start("}v", "}v");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Profile.initProfiler();
        Profile.stop();
        Profile.start("profile_test", "profile_test2");
    }
}
statement is: Profile.initProfiler(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: Profile.initProfiler() target is: Profile method is: initProfiler()
Matched Method is: initProfiler()V
statement is: Profile.stop(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: Profile.stop() target is: Profile method is: stop()
Matched Method is: stop()V
statement is: Profile.start("profile_test", "profile_test2"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: Profile.start("profile_test", "profile_test2") target is: Profile method is: start(java.lang.String,java.lang.String)
Matched Method is: start(Ljava/lang/String;Ljava/lang/String;)V
TestCase is: Profile.initProfiler();
Profile.stop();
String string = "profile_test";
String string = "profile_test2";
Profile.start(string, string);

statement is: initProfiler()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: Profile.initProfiler()
statement is: start(Ljava/lang/String;Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: Profile.start("date", "date")
statement is: start(Ljava/lang/String;Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: Profile.start("date", "date")
statement is: end(Ljava/lang/String;Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: Profile.end("date", "date")
statement is: start(Ljava/lang/String;Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: Profile.start("date", "date")
test data is: Profile.initProfiler();
Profile.start("date", "date");
Profile.start("date", "date");
Profile.end("date", "date");
Profile.start("date", "date");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Profile.initProfiler();
        Profile.start("01/01/2023", "date");
        Profile.start("02/02/2023", "date");
        Profile.end("01/01/2023", "date");
        Profile.start("03/03/2023", "date");
    }
}
statement is: Profile.initProfiler(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: Profile.initProfiler() target is: Profile method is: initProfiler()
Matched Method is: initProfiler()V
statement is: Profile.start("01/01/2023", "date"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: Profile.start("01/01/2023", "date") target is: Profile method is: start(java.lang.String,java.lang.String)
Matched Method is: start(Ljava/lang/String;Ljava/lang/String;)V
statement is: Profile.start("02/02/2023", "date"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: Profile.start("02/02/2023", "date") target is: Profile method is: start(java.lang.String,java.lang.String)
Matched Method is: start(Ljava/lang/String;Ljava/lang/String;)V
statement is: Profile.end("01/01/2023", "date"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: Profile.end("01/01/2023", "date") target is: Profile method is: end(java.lang.String,java.lang.String)
Matched Method is: end(Ljava/lang/String;Ljava/lang/String;)V
statement is: Profile.start("03/03/2023", "date"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: Profile.start("03/03/2023", "date") target is: Profile method is: start(java.lang.String,java.lang.String)
Matched Method is: start(Ljava/lang/String;Ljava/lang/String;)V
TestCase is: Profile.initProfiler();
String string = "01/01/2023";
String string = "date";
Profile.start(string, string);
String string = "02/02/2023";
String string = "date";
Profile.start(string, string);
String string = "01/01/2023";
String string = "date";
Profile.end(string, string);
String string = "03/03/2023";
String string = "date";
Profile.start(string, string);

statement is: initProfiler()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: Profile.initProfiler()
statement is: start(Ljava/lang/String;Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: Profile.start("date", "date")
statement is: end(Ljava/lang/String;Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: Profile.end("date", "date")
test data is: Profile.initProfiler();
Profile.start("date", "date");
Profile.end("date", "date");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Improved test data
        Profile.initProfiler();
        Profile.start("date", "date");
        Date currentDate = new Date();
        Profile.end("date", "date");
    }
}
statement is: // Improved test data
Profile.initProfiler(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: // Improved test data
Profile.initProfiler() target is: Profile method is: initProfiler()
Matched Method is: initProfiler()V
statement is: Profile.start("date", "date"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: Profile.start("date", "date") target is: Profile method is: start(java.lang.String,java.lang.String)
Matched Method is: start(Ljava/lang/String;Ljava/lang/String;)V
statement is: Date currentDate = new Date(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: Profile.end("date", "date"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: Profile.end("date", "date") target is: Profile method is: end(java.lang.String,java.lang.String)
Matched Method is: end(Ljava/lang/String;Ljava/lang/String;)V
TestCase is: Profile.initProfiler();
String string = "date";
String string = "date";
Profile.start(string, string);
String string = "date";
String string = "date";
Profile.end(string, string);

statement is: initProfiler()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: Profile.initProfiler()
statement is: start(Ljava/lang/String;Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: Profile.start("l_<@", "l_<@")
statement is: beginWait(Ljava/lang/String;Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: Profile.beginWait("l_<@", "l_<@")
test data is: Profile.initProfiler();
Profile.start("l_<@", "l_<@");
Profile.beginWait("l_<@", "l_<@");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Profile.initProfiler();
        Profile.start("l_<@", "l_<@");
        Profile.beginWait("l_<@", "l_<@");
    }
}
statement is: Profile.initProfiler(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: Profile.initProfiler() target is: Profile method is: initProfiler()
Matched Method is: initProfiler()V
statement is: Profile.start("l_<@", "l_<@"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: Profile.start("l_<@", "l_<@") target is: Profile method is: start(java.lang.String,java.lang.String)
Matched Method is: start(Ljava/lang/String;Ljava/lang/String;)V
statement is: Profile.beginWait("l_<@", "l_<@"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: Profile.beginWait("l_<@", "l_<@") target is: Profile method is: beginWait(java.lang.String,java.lang.String)
Matched Method is: beginWait(Ljava/lang/String;Ljava/lang/String;)V
TestCase is: Profile.initProfiler();
String string = "l_<@";
String string = "l_<@";
Profile.start(string, string);
String string = "l_<@";
String string = "l_<@";
Profile.beginWait(string, string);

statement is: initProfiler()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: Profile.initProfiler()
statement is: start(Ljava/lang/String;Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: Profile.start("mY]b CJrq9_,}/7)871", "mY]b CJrq9_,}/7)871")
statement is: endWait(Ljava/lang/String;Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: Profile.endWait("mY]b CJrq9_,}/7)871", "mY]b CJrq9_,}/7)871")
test data is: Profile.initProfiler();
Profile.start("mY]b CJrq9_,}/7)871", "mY]b CJrq9_,}/7)871");
Profile.endWait("mY]b CJrq9_,}/7)871", "mY]b CJrq9_,}/7)871");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Profile.initProfiler();
        Profile.start("My profile name", "My profile name");
        Profile.endWait("My profile name", "My profile name");
    }
}
statement is: Profile.initProfiler(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: Profile.initProfiler() target is: Profile method is: initProfiler()
Matched Method is: initProfiler()V
statement is: Profile.start("My profile name", "My profile name"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: Profile.start("My profile name", "My profile name") target is: Profile method is: start(java.lang.String,java.lang.String)
Matched Method is: start(Ljava/lang/String;Ljava/lang/String;)V
statement is: Profile.endWait("My profile name", "My profile name"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: Profile.endWait("My profile name", "My profile name") target is: Profile method is: endWait(java.lang.String,java.lang.String)
Matched Method is: endWait(Ljava/lang/String;Ljava/lang/String;)V
TestCase is: Profile.initProfiler();
String string = "My profile name";
String string = "My profile name";
Profile.start(string, string);
String string = "My profile name";
String string = "My profile name";
Profile.endWait(string, string);

statement is: initProfiler()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: Profile.initProfiler()
statement is: start(Ljava/lang/String;Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: Profile.start("lc_<@", "lc_<@")
statement is: unwind(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: Profile.unwind("lc_<@", "lc_<@", "lc_<@")
test data is: Profile.initProfiler();
Profile.start("lc_<@", "lc_<@");
Profile.unwind("lc_<@", "lc_<@", "lc_<@");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Profile.initProfiler();
        Profile.start("lc_<@", "lc_<@");
        // Improved test data:
        Profile.start("lc_<@", "lc_<@", 100);
        Profile.unwind("lc_<@", "lc_<@", "lc_<@", 500);
    }
}
statement is: Profile.initProfiler(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: Profile.initProfiler() target is: Profile method is: initProfiler()
Matched Method is: initProfiler()V
statement is: Profile.start("lc_<@", "lc_<@"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: Profile.start("lc_<@", "lc_<@") target is: Profile method is: start(java.lang.String,java.lang.String)
Matched Method is: start(Ljava/lang/String;Ljava/lang/String;)V
statement is: // Improved test data:
Profile.start("lc_<@", "lc_<@", 100), class spoon.support.reflect.code.CtInvocationImpl
invocation is: // Improved test data:
Profile.start("lc_<@", "lc_<@", 100) target is: Profile method is: start(java.lang.String,java.lang.String,int)
statement is: Profile.unwind("lc_<@", "lc_<@", "lc_<@", 500), class spoon.support.reflect.code.CtInvocationImpl
invocation is: Profile.unwind("lc_<@", "lc_<@", "lc_<@", 500) target is: Profile method is: unwind(java.lang.String,java.lang.String,java.lang.String,int)
TestCase is: Profile.initProfiler();
String string = "lc_<@";
String string = "lc_<@";
Profile.start(string, string);

statement is: clear()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: Profile.clear()
statement is: unwind(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: Profile.unwind(";i3hfE>r),0~g", "", "")
test data is: Profile.clear();
Profile.unwind(";i3hfE>r),0~g", "", "");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Profile.clear();
        Profile.unwind(";i3hfE>r),0~g", "John Doe", "johndoe@example.com");
    }
}
statement is: Profile.clear(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: Profile.clear() target is: Profile method is: clear()
Matched Method is: clear()V
statement is: Profile.unwind(";i3hfE>r),0~g", "John Doe", "johndoe@example.com"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: Profile.unwind(";i3hfE>r),0~g", "John Doe", "johndoe@example.com") target is: Profile method is: unwind(java.lang.String,java.lang.String,java.lang.String)
Matched Method is: unwind(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
TestCase is: Profile.clear();
String string = ";i3hfE>r),0~g";
String string = "John Doe";
String string = "johndoe@example.com";
Profile.unwind(string, string, string);

statement is: initProfiler()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: Profile.initProfiler()
statement is: start(Ljava/lang/String;Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: Profile.start("Unwinding ", "Unwinding ")
statement is: com.mentorgen.tools.profile.runtime.Profile()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.mentorgen.tools.profile.runtime.Profile
statement code is: Profile profile = new Profile()
statement is: run()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: profile.run()
statement is: unwind(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: Profile.unwind("Unwinding ", "Unwinding ", "Unwinding ")
test data is: Profile.initProfiler();
Profile.start("Unwinding ", "Unwinding ");
Profile profile = new Profile();
profile.run();
Profile.unwind("Unwinding ", "Unwinding ", "Unwinding ");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Profile.initProfiler();
        Profile.start("Data Preparation", "Data Preparation");
        Profile profile = new Profile();
        profile.run();
        Profile.unwind("Cleanup", "Termination", "Unwinding");
    }
}
statement is: Profile.initProfiler(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: Profile.initProfiler() target is: Profile method is: initProfiler()
Matched Method is: initProfiler()V
statement is: Profile.start("Data Preparation", "Data Preparation"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: Profile.start("Data Preparation", "Data Preparation") target is: Profile method is: start(java.lang.String,java.lang.String)
Matched Method is: start(Ljava/lang/String;Ljava/lang/String;)V
statement is: Profile profile = new Profile(), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: profile.run(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: profile.run() target is: profile method is: run()
source statement: com.mentorgen.tools.profile.runtime.Profile()V callee: VariableReference: Statement 2, type com.mentorgen.tools.profile.runtime.Profileindex is: 4
Matched Method is: run()V
statement is: Profile.unwind("Cleanup", "Termination", "Unwinding"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: Profile.unwind("Cleanup", "Termination", "Unwinding") target is: Profile method is: unwind(java.lang.String,java.lang.String,java.lang.String)
Matched Method is: unwind(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
TestCase is: Profile.initProfiler();
String string = "Data Preparation";
String string = "Data Preparation";
Profile.start(string, string);
Profile profile = new Profile();
((Profile) string).run();
String string = "Cleanup";
String string = "Termination";
String string = "Unwinding";
Profile.unwind(string, string, string);

statement is: initProfiler()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: Profile.initProfiler()
statement is: start(Ljava/lang/String;Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: Profile.start("mY]b CJrq9_,}/7)871", "mY]b CJrq9_,}/7)871")
statement is: endWait(Ljava/lang/String;Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: Profile.endWait("mY]b CJrq9_,}/7)871", "bnYe,h")
test data is: Profile.initProfiler();
Profile.start("mY]b CJrq9_,}/7)871", "mY]b CJrq9_,}/7)871");
Profile.endWait("mY]b CJrq9_,}/7)871", "bnYe,h");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Profile.initProfiler();
    }
}
statement is: Profile.initProfiler(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: Profile.initProfiler() target is: Profile method is: initProfiler()
Matched Method is: initProfiler()V
TestCase is: Profile.initProfiler();

statement is: initProfiler()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: Profile.initProfiler()
statement is: start(Ljava/lang/String;Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: Profile.start("(jRv5", "(jRv5")
statement is: start(Ljava/lang/String;Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: Profile.start("@V)m?x@l*sYP+@n3by", "(jRv5")
statement is: beginWait(Ljava/lang/String;Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: Profile.beginWait("UW_6a+(+vmK3xu2&Y}", "(jRv5")
test data is: Profile.initProfiler();
Profile.start("(jRv5", "(jRv5");
Profile.start("@V)m?x@l*sYP+@n3by", "(jRv5");
Profile.beginWait("UW_6a+(+vmK3xu2&Y}", "(jRv5");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Profile.initProfiler();
        Profile.start("(jRv5", "userLogin");
        Profile.start("@V)m?x@l*sYP+@n3by", "loginButtonClicked");
    }
}
statement is: Profile.initProfiler(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: Profile.initProfiler() target is: Profile method is: initProfiler()
Matched Method is: initProfiler()V
statement is: Profile.start("(jRv5", "userLogin"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: Profile.start("(jRv5", "userLogin") target is: Profile method is: start(java.lang.String,java.lang.String)
Matched Method is: start(Ljava/lang/String;Ljava/lang/String;)V
statement is: Profile.start("@V)m?x@l*sYP+@n3by", "loginButtonClicked"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: Profile.start("@V)m?x@l*sYP+@n3by", "loginButtonClicked") target is: Profile method is: start(java.lang.String,java.lang.String)
Matched Method is: start(Ljava/lang/String;Ljava/lang/String;)V
TestCase is: Profile.initProfiler();
String string = "(jRv5";
String string = "userLogin";
Profile.start(string, string);
String string = "@V)m?x@l*sYP+@n3by";
String string = "loginButtonClicked";
Profile.start(string, string);

statement is: initProfiler()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: Profile.initProfiler()
statement is: shutdown()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: Profile.shutdown()
statement is: alloc(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: Profile.alloc("")
test data is: Profile.initProfiler();
Profile.shutdown();
Profile.alloc("");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Profile.initProfiler();
        Profile.shutdown();
        Profile.alloc("Test");
    }
}
statement is: Profile.initProfiler(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: Profile.initProfiler() target is: Profile method is: initProfiler()
Matched Method is: initProfiler()V
statement is: Profile.shutdown(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: Profile.shutdown() target is: Profile method is: shutdown()
Matched Method is: shutdown()V
statement is: Profile.alloc("Test"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: Profile.alloc("Test") target is: Profile method is: alloc(java.lang.String)
Matched Method is: alloc(Ljava/lang/String;)V
TestCase is: Profile.initProfiler();
Profile.shutdown();
String string = "Test";
Profile.alloc(string);

statement is: initProfiler()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: Profile.initProfiler()
statement is: start(Ljava/lang/String;Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: Profile.start("lc_<@", "lc_<@")
statement is: alloc(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: Profile.alloc("Yro>!|l'")
test data is: Profile.initProfiler();
Profile.start("lc_<@", "lc_<@");
Profile.alloc("Yro>!|l'");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Profile.initProfiler();
        Profile.start("lc_<@", "lc_<@");
        Profile.alloc("Hello World!");
    }
}
statement is: Profile.initProfiler(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: Profile.initProfiler() target is: Profile method is: initProfiler()
Matched Method is: initProfiler()V
statement is: Profile.start("lc_<@", "lc_<@"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: Profile.start("lc_<@", "lc_<@") target is: Profile method is: start(java.lang.String,java.lang.String)
Matched Method is: start(Ljava/lang/String;Ljava/lang/String;)V
statement is: Profile.alloc("Hello World!"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: Profile.alloc("Hello World!") target is: Profile method is: alloc(java.lang.String)
Matched Method is: alloc(Ljava/lang/String;)V
TestCase is: Profile.initProfiler();
String string = "lc_<@";
String string = "lc_<@";
Profile.start(string, string);
String string = "Hello World!";
Profile.alloc(string);

statement is: initProfiler()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: Profile.initProfiler()
statement is: start(Ljava/lang/String;Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: Profile.start("date", "date")
statement is: alloc(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: Profile.alloc("date")
test data is: Profile.initProfiler();
Profile.start("date", "date");
Profile.alloc("date");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Profile.initProfiler();
        Profile.start("2023-02-28", "date");
        Profile.alloc("February 28, 2023");
    }
}
statement is: Profile.initProfiler(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: Profile.initProfiler() target is: Profile method is: initProfiler()
Matched Method is: initProfiler()V
statement is: Profile.start("2023-02-28", "date"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: Profile.start("2023-02-28", "date") target is: Profile method is: start(java.lang.String,java.lang.String)
Matched Method is: start(Ljava/lang/String;Ljava/lang/String;)V
statement is: Profile.alloc("February 28, 2023"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: Profile.alloc("February 28, 2023") target is: Profile method is: alloc(java.lang.String)
Matched Method is: alloc(Ljava/lang/String;)V
TestCase is: Profile.initProfiler();
String string = "2023-02-28";
String string = "date";
Profile.start(string, string);
String string = "February 28, 2023";
Profile.alloc(string);

statement is: initProfiler()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: Profile.initProfiler()
statement is: alloc(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: Profile.alloc("@")
statement is: alloc(Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: Profile.alloc("@")
test data is: Profile.initProfiler();
Profile.alloc("@");
Profile.alloc("@");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        tag is;
        to indicate;
        code between;
        tag is;
        test data;
    }
}
statement is: tag is, class spoon.support.reflect.code.CtLocalVariableImpl
statement is: to indicate, class spoon.support.reflect.code.CtLocalVariableImpl
statement is: code between, class spoon.support.reflect.code.CtLocalVariableImpl
statement is: tag is, class spoon.support.reflect.code.CtLocalVariableImpl
statement is: test data, class spoon.support.reflect.code.CtLocalVariableImpl
statement is: com.mentorgen.tools.profile.runtime.Profile()V type is: class org.evosuite.testcase.statements.ConstructorStatement return type class com.mentorgen.tools.profile.runtime.Profile
statement code is: Profile profile = new Profile()
statement is: run()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: profile.run()
test data is: Profile profile = new Profile();
profile.run();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Improved test data
        Profile profile = new Profile("John Doe", 25, "johndoe@email.com");
        profile.setLocation("New York City");
        profile.setAge(30);
        profile.run();
    }
}
statement is: // Improved test data
Profile profile = new Profile("John Doe", 25, "johndoe@email.com"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: profile.setLocation("New York City"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: profile.setLocation("New York City") target is: profile method is: setLocation(java.lang.String)
statement is: profile.setAge(30), class spoon.support.reflect.code.CtInvocationImpl
invocation is: profile.setAge(30) target is: profile method is: setAge(int)
statement is: profile.run(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: profile.run() target is: profile method is: run()
statement is: frameList()Ljava/lang/Iterable; type is: class org.evosuite.testcase.statements.MethodStatement return type java.lang.Iterable<com.mentorgen.tools.profile.runtime.Frame>
statement code is: Iterable<Frame> frameList = Profile.frameList()
test data is: Profile.frameList();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        // Improved test data:
        profile.frameList(new int[]{ 10, 20, 30 }, new String[]{ "Red Apple", "Orange" });
    }
}
statement is: // Improved test data:
profile.frameList(new int[]{ 10, 20, 30 }, new String[]{ "Red Apple", "Orange" }), class spoon.support.reflect.code.CtInvocationImpl
invocation is: // Improved test data:
profile.frameList(new int[]{ 10, 20, 30 }, new String[]{ "Red Apple", "Orange" }) target is: profile method is: frameList(int[],java.lang.String[])
statement is: getThreadTotalTime(J)J type is: class org.evosuite.testcase.statements.MethodStatement return type long
statement code is: long threadTotalTime = Profile.getThreadTotalTime(1059L)
test data is: Profile.getThreadTotalTime(1059L);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Profile.getThreadTotalTime(1059L);
    }
}
statement is: Profile.getThreadTotalTime(1059L), class spoon.support.reflect.code.CtInvocationImpl
invocation is: Profile.getThreadTotalTime(1059L) target is: Profile method is: getThreadTotalTime(long)
Matched Method is: getThreadTotalTime(J)J
TestCase is: long _long = 1059L;
Profile.getThreadTotalTime(_long);

statement is: init()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: Profile.init()
test data is: Profile.init();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        int age = 25;
        String name = "John Doe";
    }
}
statement is: int age = 25, class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: String name = "John Doe", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
* this is vulnerable: int _int = 25
* this is vulnerable: String string = "John Doe"
TestCase is: int _int = 25;
String string = "John Doe";

statement is: mock(java.util.Comparator<com.mentorgen.tools.profile.runtime.Frame>) type is: class org.evosuite.testcase.statements.FunctionalMockStatement return type java.util.Comparator<com.mentorgen.tools.profile.runtime.Frame>
statement code is: Comparator<Frame> comparator = (Comparator<Frame>) mock(Comparator.class, new ViolatedAssumptionAnswer())
statement is: sortFrameList(Ljava/util/Comparator;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: Profile.sortFrameList(arg0)
test data is: Comparator<Frame> comparator = (Comparator<Frame>) mock(Comparator.class, new ViolatedAssumptionAnswer());
Profile.sortFrameList(comparator);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Comparator<Frame> comparator = ((Comparator<Frame>) (mock(Comparator.class, new ViolatedAssumptionAnswer())));
        Profile.sortFrameList(comparator);
        // Improved test data:
        // 1. Use more descriptive values for the primitive types and Strings
        comparator = ((Comparator<Frame>) (mock(Comparator.class, new Answer() {
            public Object answer(InvocationOnMock invocation) throws Throwable {
                // Compare two frames based on their names and IDs
                Frame f1 = ((Frame) (invocation.getArguments()[0]));
                Frame f2 = ((Frame) (invocation.getArguments()[1]));
                if (f1.getName().equals(f2.getName())) {
                    return 0;
                } else if (f1.getName().compareTo(f2.getName()) > 0) {
                    return 1;
                } else {
                    return -1;
                }
            }
        })));
        Profile.sortFrameList(comparator);
        // 2. Use more representative values for the Strings (e.g., using a realistic format and length)
        comparator = ((Comparator<Frame>) (mock(Comparator.class, new Answer() {
            public Object answer(InvocationOnMock invocation) throws Throwable {
                // Compare two frames based on their names and IDs
                Frame f1 = ((Frame) (invocation.getArguments()[0]));
                Frame f2 = ((Frame) (invocation.getArguments()[1]));
                if (f1.getName().equals(f2.getName())) {
                    return 0;
                } else if (f1.getName().compareTo(f2.getName()) > 0) {
                    return 1;
                } else {
                    return -1;
                }
            }
        })));
        Profile.sortFrameList(comparator);
        // 3. Use more diverse values for the primitive types (e.g., using a range of possible values)
        comparator = ((Comparator<Frame>) (mock(Comparator.class, new Answer() {
            public Object answer(InvocationOnMock invocation) throws Throwable {
                // Compare two frames based on their names and IDs
                Frame f1 = ((Frame) (invocation.getArguments()[0]));
                Frame f2 = ((Frame) (invocation.getArguments()[1]));
                if (f1.getName().equals(f2.getName())) {
                    return 0;
                } else if (f1.getName().compareTo(f2.getName()) > 0) {
                    return 1;
                } else {
                    return -1;
                }
            }
        })));
        Profile.sortFrameList(comparator);
    }
}
statement is: Comparator<Frame> comparator = ((Comparator<Frame>) (mock(Comparator.class, new ViolatedAssumptionAnswer()))), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: ((Comparator<Frame>) (mock(Comparator.class, new ViolatedAssumptionAnswer()))) target is:  method is: mock(java.lang.Class,<unknown>)
target name is: Comparator argument is: Comparator.class
Matched Method is: mock(java.util.Comparator<com.mentorgen.tools.profile.runtime.Frame>)
statement is: Profile.sortFrameList(comparator), class spoon.support.reflect.code.CtInvocationImpl
invocation is: Profile.sortFrameList(comparator) target is: Profile method is: sortFrameList(Comparator)
Matched Method is: sortFrameList(Ljava/util/Comparator;)V
statement is: // Improved test data:
// 1. Use more descriptive values for the primitive types and Strings
comparator = ((Comparator<Frame>) (mock(Comparator.class, new Answer() {
    public Object answer(InvocationOnMock invocation) throws Throwable {
        // Compare two frames based on their names and IDs
        Frame f1 = ((Frame) (invocation.getArguments()[0]));
        Frame f2 = ((Frame) (invocation.getArguments()[1]));
        if (f1.getName().equals(f2.getName())) {
            return 0;
        } else if (f1.getName().compareTo(f2.getName()) > 0) {
            return 1;
        } else {
            return -1;
        }
    }
}))), class spoon.support.reflect.code.CtAssignmentImpl
statement is: Profile.sortFrameList(comparator), class spoon.support.reflect.code.CtInvocationImpl
invocation is: Profile.sortFrameList(comparator) target is: Profile method is: sortFrameList(Comparator)
Matched Method is: sortFrameList(Ljava/util/Comparator;)V
statement is: // 2. Use more representative values for the Strings (e.g., using a realistic format and length)
comparator = ((Comparator<Frame>) (mock(Comparator.class, new Answer() {
    public Object answer(InvocationOnMock invocation) throws Throwable {
        // Compare two frames based on their names and IDs
        Frame f1 = ((Frame) (invocation.getArguments()[0]));
        Frame f2 = ((Frame) (invocation.getArguments()[1]));
        if (f1.getName().equals(f2.getName())) {
            return 0;
        } else if (f1.getName().compareTo(f2.getName()) > 0) {
            return 1;
        } else {
            return -1;
        }
    }
}))), class spoon.support.reflect.code.CtAssignmentImpl
statement is: Profile.sortFrameList(comparator), class spoon.support.reflect.code.CtInvocationImpl
invocation is: Profile.sortFrameList(comparator) target is: Profile method is: sortFrameList(Comparator)
Matched Method is: sortFrameList(Ljava/util/Comparator;)V
statement is: // 3. Use more diverse values for the primitive types (e.g., using a range of possible values)
comparator = ((Comparator<Frame>) (mock(Comparator.class, new Answer() {
    public Object answer(InvocationOnMock invocation) throws Throwable {
        // Compare two frames based on their names and IDs
        Frame f1 = ((Frame) (invocation.getArguments()[0]));
        Frame f2 = ((Frame) (invocation.getArguments()[1]));
        if (f1.getName().equals(f2.getName())) {
            return 0;
        } else if (f1.getName().compareTo(f2.getName()) > 0) {
            return 1;
        } else {
            return -1;
        }
    }
}))), class spoon.support.reflect.code.CtAssignmentImpl
statement is: Profile.sortFrameList(comparator), class spoon.support.reflect.code.CtInvocationImpl
invocation is: Profile.sortFrameList(comparator) target is: Profile method is: sortFrameList(Comparator)
Matched Method is: sortFrameList(Ljava/util/Comparator;)V
TestCase is: Comparator<Frame> comparator = (Comparator<Frame>) mock(Comparator.class, new ViolatedAssumptionAnswer());
Profile.sortFrameList(comparator);
Profile.sortFrameList(comparator);
Profile.sortFrameList(comparator);
Profile.sortFrameList(comparator);

statement is: clear()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: Profile.clear()
statement is: start(Ljava/lang/String;Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: Profile.start("", (String) null)
statement is: shutdown()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: Profile.shutdown()
test data is: Profile.clear();
Profile.start("", (String) null);
Profile.shutdown();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Profile.clear();
        Profile.start("Profile Name", "Profile Description");
        Profile.shutdown();
    }
}
statement is: Profile.clear(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: Profile.clear() target is: Profile method is: clear()
Matched Method is: clear()V
statement is: Profile.start("Profile Name", "Profile Description"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: Profile.start("Profile Name", "Profile Description") target is: Profile method is: start(java.lang.String,java.lang.String)
Matched Method is: start(Ljava/lang/String;Ljava/lang/String;)V
statement is: Profile.shutdown(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: Profile.shutdown() target is: Profile method is: shutdown()
Matched Method is: shutdown()V
TestCase is: Profile.clear();
String string = "Profile Name";
String string = "Profile Description";
Profile.start(string, string);
Profile.shutdown();

statement is: initProfiler()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: Profile.initProfiler()
statement is: interactions(J)Ljava/lang/Iterable; type is: class org.evosuite.testcase.statements.MethodStatement return type java.lang.Iterable<com.mentorgen.tools.profile.runtime.Frame>
statement code is: Iterable<Frame> interactions = Profile.interactions(0L)
test data is: Profile.initProfiler();
Profile.interactions(0L);

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Profile.initProfiler();
        Profile.interactions(1000L);// Replace with more descriptive value, e.g., 10_000L }}

    }
}
statement is: Profile.initProfiler(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: Profile.initProfiler() target is: Profile method is: initProfiler()
Matched Method is: initProfiler()V
statement is: Profile.interactions(1000L)// Replace with more descriptive value, e.g., 10_000L }}
, class spoon.support.reflect.code.CtInvocationImpl
invocation is: Profile.interactions(1000L)// Replace with more descriptive value, e.g., 10_000L }}
 target is: Profile method is: interactions(long)
Matched Method is: interactions(J)Ljava/lang/Iterable;
TestCase is: Profile.initProfiler();
long _long = 1000L;
Profile.interactions(_long);

statement is: initProfiler()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: Profile.initProfiler()
statement is: threads()Ljava/lang/Iterable; type is: class org.evosuite.testcase.statements.MethodStatement return type java.lang.Iterable<java.lang.Long>
statement code is: Iterable<Long> threads = Profile.threads()
test data is: Profile.initProfiler();
Profile.threads();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Profile.initProfiler();
        Profile.threads(5);
    }
}
statement is: Profile.initProfiler(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: Profile.initProfiler() target is: Profile method is: initProfiler()
Matched Method is: initProfiler()V
statement is: Profile.threads(5), class spoon.support.reflect.code.CtInvocationImpl
invocation is: Profile.threads(5) target is: Profile method is: threads(int)
TestCase is: Profile.initProfiler();

statement is: shouldAllThrowIOExceptions()Z type is: class org.evosuite.testcase.statements.MethodStatement return type boolean
statement code is: boolean shouldAllThrowIOExceptions = FileSystemHandling.shouldAllThrowIOExceptions()
statement is: initProfiler()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: Profile.initProfiler()
statement is: start(Ljava/lang/String;Ljava/lang/String;)V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: Profile.start("@V)m?x@l*sYP+@n3by", "@")
test data is: FileSystemHandling.shouldAllThrowIOExceptions();
Profile.initProfiler();
Profile.start("@V)m?x@l*sYP+@n3by", "@");

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        FileSystemHandling.shouldAllThrowIOExceptions();
        Profile.initProfiler();
        Profile.start("Testing profile", "test");
        String input = "InvalidInput";
        FileSystemHandling.writeToFile(input);
    }
}
statement is: FileSystemHandling.shouldAllThrowIOExceptions(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: FileSystemHandling.shouldAllThrowIOExceptions() target is: FileSystemHandling method is: shouldAllThrowIOExceptions()
Matched Method is: shouldAllThrowIOExceptions()Z
statement is: Profile.initProfiler(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: Profile.initProfiler() target is: Profile method is: initProfiler()
Matched Method is: initProfiler()V
statement is: Profile.start("Testing profile", "test"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: Profile.start("Testing profile", "test") target is: Profile method is: start(java.lang.String,java.lang.String)
Matched Method is: start(Ljava/lang/String;Ljava/lang/String;)V
statement is: String input = "InvalidInput", class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtLiteralImpl
statement is: FileSystemHandling.writeToFile(input), class spoon.support.reflect.code.CtInvocationImpl
invocation is: FileSystemHandling.writeToFile(input) target is: FileSystemHandling method is: writeToFile(java.lang.String)
* this is vulnerable: String string = "InvalidInput"
TestCase is: FileSystemHandling.shouldAllThrowIOExceptions();
Profile.initProfiler();
String string = "Testing profile";
String string = "test";
Profile.start(string, string);
String string = "InvalidInput";

statement is: initProfiler()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: Profile.initProfiler()
statement is: start()V type is: class org.evosuite.testcase.statements.MethodStatement return type void
statement code is: Profile.start()
test data is: Profile.initProfiler();
Profile.start();

** It was a parseable test case! 
Improved test data is: class DummyClass {
    public static void main() {
        Profile.initProfiler();
        Profile.start();
        // Create a new user object and set its username and email address
        User user = new User("johndoe", "john.doe@example.com");
        // Set the user's password to "password123"
        user.setPassword("password123");
        // Add the user to the database
        Database.addUser(user);
        // Get the user object from the database using their username
        User retrievedUser = Database.getUserByUsername("johndoe");
        // Check that the password was set correctly
        assertEquals("password123", retrievedUser.getPassword());
        // Clean up after the test by removing the user from the database
        Database.removeUser(retrievedUser);
    }
}
statement is: Profile.initProfiler(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: Profile.initProfiler() target is: Profile method is: initProfiler()
Matched Method is: initProfiler()V
statement is: Profile.start(), class spoon.support.reflect.code.CtInvocationImpl
invocation is: Profile.start() target is: Profile method is: start()
Matched Method is: start()V
statement is: // Create a new user object and set its username and email address
User user = new User("johndoe", "john.doe@example.com"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtConstructorCallImpl
statement is: // Set the user's password to "password123"
user.setPassword("password123"), class spoon.support.reflect.code.CtInvocationImpl
invocation is: // Set the user's password to "password123"
user.setPassword("password123") target is: user method is: setPassword(java.lang.String)
statement is: // Add the user to the database
Database.addUser(user), class spoon.support.reflect.code.CtInvocationImpl
invocation is: // Add the user to the database
Database.addUser(user) target is: Database method is: addUser(User)
statement is: // Get the user object from the database using their username
User retrievedUser = Database.getUserByUsername("johndoe"), class spoon.support.reflect.code.CtLocalVariableImpl
class spoon.support.reflect.code.CtInvocationImpl
invocation is: Database.getUserByUsername("johndoe") target is: Database method is: getUserByUsername(java.lang.String)
statement is: // Check that the password was set correctly
assertEquals("password123", retrievedUser.getPassword()), class spoon.support.reflect.code.CtInvocationImpl
invocation is: // Check that the password was set correctly
assertEquals("password123", retrievedUser.getPassword()) target is:  method is: assertEquals(java.lang.String,<unknown>)
statement is: // Clean up after the test by removing the user from the database
Database.removeUser(retrievedUser), class spoon.support.reflect.code.CtInvocationImpl
invocation is: // Clean up after the test by removing the user from the database
Database.removeUser(retrievedUser) target is: Database method is: removeUser(User)
TestCase is: Profile.initProfiler();
Profile.start();

* test suite isTestSuite: 52
Test 0: 
// Undeclared exception!
try { 
  Profile.allocations();
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.mentorgen.tools.profile.runtime.Profile", e);
}

Test 1: 
Profile.initProfiler();
Profile.start("<init>", "<init>");
Profile.alloc("<init>");
Test 2: 
Profile.clear();
Profile.end("USR}w}k)Hfn.FQ", "USR}w}k)Hfn.FQ");
Test 3: 
// Undeclared exception!
try { 
  Profile.setFileName("");
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.mentorgen.tools.profile.runtime.Profile", e);
}

Test 4: 
Profile.initProfiler();
Profile.stop();
Profile.start("}v", "}v");
Test 5: 
Profile.initProfiler();
Profile.start("date", "date");
Profile.start("date", "date");
Profile.end("date", "date");
Profile.start("date", "date");
Test 6: 
Profile.initProfiler();
Profile.start("date", "date");
Profile.end("date", "date");
Test 7: 
Profile.initProfiler();
Profile.start("l_<@", "l_<@");
Profile.beginWait("l_<@", "l_<@");
Test 8: 
Profile.initProfiler();
Profile.start("mY]b CJrq9_,}/7)871", "mY]b CJrq9_,}/7)871");
Profile.endWait("mY]b CJrq9_,}/7)871", "mY]b CJrq9_,}/7)871");
Test 9: 
Profile.initProfiler();
Profile.start("lc_<@", "lc_<@");
Profile.unwind("lc_<@", "lc_<@", "lc_<@");
Test 10: 
Profile.clear();
Profile.unwind(";i3hfE>r),0~g", "", "");
Test 11: 
Profile.initProfiler();
Profile.start("Unwinding ", "Unwinding ");
Profile profile = new Profile();
profile.run();
Profile.unwind("Unwinding ", "Unwinding ", "Unwinding ");
Test 12: 
Profile.initProfiler();
Profile.start("mY]b CJrq9_,}/7)871", "mY]b CJrq9_,}/7)871");
Profile.endWait("mY]b CJrq9_,}/7)871", "bnYe,h");
Test 13: 
Profile.initProfiler();
Profile.start("(jRv5", "(jRv5");
Profile.start("@V)m?x@l*sYP+@n3by", "(jRv5");
Profile.beginWait("UW_6a+(+vmK3xu2&Y}", "(jRv5");
Test 14: 
Profile.initProfiler();
Profile.shutdown();
Profile.alloc("");
Test 15: 
Profile.initProfiler();
Profile.start("lc_<@", "lc_<@");
Profile.alloc("Yro>!|l'");
Test 16: 
Profile.initProfiler();
Profile.start("date", "date");
Profile.alloc("date");
Test 17: 
Profile.initProfiler();
Profile.alloc("@");
Profile.alloc("@");
Test 18: 
Profile profile = new Profile();
// Undeclared exception!
try { 
  profile.run();
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 19: 
Profile.frameList();
Test 20: 
// Undeclared exception!
try { 
  Profile.getThreadTotalTime(1059L);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 21: 
Profile.init();
Test 22: 
Comparator<Frame> comparator = (Comparator<Frame>) mock(Comparator.class, new ViolatedAssumptionAnswer());
// Undeclared exception!
try { 
  Profile.sortFrameList(comparator);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 23: 
Profile.clear();
Profile.start("", (String) null);
Profile.shutdown();
Test 24: 
Profile.initProfiler();
Profile.interactions(0L);
Test 25: 
Profile.initProfiler();
Profile.threads();
Test 26: 
FileSystemHandling.shouldAllThrowIOExceptions();
Profile.initProfiler();
Profile.start("@V)m?x@l*sYP+@n3by", "@");
Test 27: 
Profile.initProfiler();
Profile.start();
Test 28: 
Profile.initProfiler();
Profile.start("Constructor", "Constructor");
Profile.alloc("Constructor");

Test 29: 
Profile.clear();
Profile.end("San Francisco", "San Francisco");

Test 30: 
Profile.setFileName("profile_for_JohnDoe@example.com.txt");

Test 31: 
Profile.initProfiler();
Profile.stop();
Profile.start("profile_test", "profile_test2");

Test 32: 
Profile.initProfiler();
Profile.start("01/01/2023", "date");
Profile.start("02/02/2023", "date");
Profile.end("01/01/2023", "date");
Profile.start("03/03/2023", "date");

Test 33: 
Profile.initProfiler();
Profile.start("date", "date");
Profile.end("date", "date");

Test 34: 
Profile.initProfiler();
Profile.start("l_<@", "l_<@");
Profile.beginWait("l_<@", "l_<@");

Test 35: 
Profile.initProfiler();
Profile.start("My profile name", "My profile name");
Profile.endWait("My profile name", "My profile name");

Test 36: 
Profile.initProfiler();
Profile.start("lc_<@", "lc_<@");

Test 37: 
Profile.clear();
Profile.unwind(";i3hfE>r),0~g", "John Doe", "johndoe@example.com");

Test 38: 
Profile.initProfiler();
Profile.start("Data Preparation", "Data Preparation");
Profile profile = new Profile();
((Profile)"Data Preparation").run();
String string = "Cleanup";
String string = "Termination";
String string = "Unwinding";
Profile.unwind(string, string, string);

Test 39: 
Profile.initProfiler();

Test 40: 
Profile.initProfiler();
Profile.start("(jRv5", "userLogin");
Profile.start("@V)m?x@l*sYP+@n3by", "loginButtonClicked");

Test 41: 
Profile.initProfiler();
Profile.shutdown();
Profile.alloc("Test");

Test 42: 
Profile.initProfiler();
Profile.start("lc_<@", "lc_<@");
Profile.alloc("Hello World!");

Test 43: 
Profile.initProfiler();
Profile.start("2023-02-28", "date");
Profile.alloc("February 28, 2023");

Test 44: 
Profile.getThreadTotalTime(1059L);

Test 45: 

Test 46: 
Comparator<Frame> comparator = (Comparator<Frame>) mock(Comparator.class, new ViolatedAssumptionAnswer());
Profile.sortFrameList(comparator);
Profile.sortFrameList(comparator);
Profile.sortFrameList(comparator);
Profile.sortFrameList(comparator);

Test 47: 
Profile.clear();
Profile.start("Profile Name", "Profile Description");
Profile.shutdown();

Test 48: 
Profile.initProfiler();
Profile.interactions(1000L);

Test 49: 
Profile.initProfiler();

Test 50: 
FileSystemHandling.shouldAllThrowIOExceptions();
Profile.initProfiler();
Profile.start("Testing profile", "test");

Test 51: 
Profile.initProfiler();
Profile.start();


* Generated after the refinement and before minimization 52 tests with total length 137
* test suite isTestSuite: 52
Test 0: 
// Undeclared exception!
try { 
  Profile.allocations();
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.mentorgen.tools.profile.runtime.Profile", e);
}

Test 1: 
Profile.initProfiler();
Profile.start("<init>", "<init>");
Profile.alloc("<init>");
Test 2: 
Profile.clear();
Profile.end("USR}w}k)Hfn.FQ", "USR}w}k)Hfn.FQ");
Test 3: 
// Undeclared exception!
try { 
  Profile.setFileName("");
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.mentorgen.tools.profile.runtime.Profile", e);
}

Test 4: 
Profile.initProfiler();
Profile.stop();
Profile.start("}v", "}v");
Test 5: 
Profile.initProfiler();
Profile.start("date", "date");
Profile.start("date", "date");
Profile.end("date", "date");
Profile.start("date", "date");
Test 6: 
Profile.initProfiler();
Profile.start("date", "date");
Profile.end("date", "date");
Test 7: 
Profile.initProfiler();
Profile.start("l_<@", "l_<@");
Profile.beginWait("l_<@", "l_<@");
Test 8: 
Profile.initProfiler();
Profile.start("mY]b CJrq9_,}/7)871", "mY]b CJrq9_,}/7)871");
Profile.endWait("mY]b CJrq9_,}/7)871", "mY]b CJrq9_,}/7)871");
Test 9: 
Profile.initProfiler();
Profile.start("lc_<@", "lc_<@");
Profile.unwind("lc_<@", "lc_<@", "lc_<@");
Test 10: 
Profile.clear();
Profile.unwind(";i3hfE>r),0~g", "", "");
Test 11: 
Profile.initProfiler();
Profile.start("Unwinding ", "Unwinding ");
Profile profile = new Profile();
profile.run();
Profile.unwind("Unwinding ", "Unwinding ", "Unwinding ");
Test 12: 
Profile.initProfiler();
Profile.start("mY]b CJrq9_,}/7)871", "mY]b CJrq9_,}/7)871");
Profile.endWait("mY]b CJrq9_,}/7)871", "bnYe,h");
Test 13: 
Profile.initProfiler();
Profile.start("(jRv5", "(jRv5");
Profile.start("@V)m?x@l*sYP+@n3by", "(jRv5");
Profile.beginWait("UW_6a+(+vmK3xu2&Y}", "(jRv5");
Test 14: 
Profile.initProfiler();
Profile.shutdown();
Profile.alloc("");
Test 15: 
Profile.initProfiler();
Profile.start("lc_<@", "lc_<@");
Profile.alloc("Yro>!|l'");
Test 16: 
Profile.initProfiler();
Profile.start("date", "date");
Profile.alloc("date");
Test 17: 
Profile.initProfiler();
Profile.alloc("@");
Profile.alloc("@");
Test 18: 
Profile profile = new Profile();
// Undeclared exception!
try { 
  profile.run();
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 19: 
Profile.frameList();
Test 20: 
// Undeclared exception!
try { 
  Profile.getThreadTotalTime(1059L);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 21: 
Profile.init();
Test 22: 
Comparator<Frame> comparator = (Comparator<Frame>) mock(Comparator.class, new ViolatedAssumptionAnswer());
// Undeclared exception!
try { 
  Profile.sortFrameList(comparator);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 23: 
Profile.clear();
Profile.start("", (String) null);
Profile.shutdown();
Test 24: 
Profile.initProfiler();
Profile.interactions(0L);
Test 25: 
Profile.initProfiler();
Profile.threads();
Test 26: 
FileSystemHandling.shouldAllThrowIOExceptions();
Profile.initProfiler();
Profile.start("@V)m?x@l*sYP+@n3by", "@");
Test 27: 
Profile.initProfiler();
Profile.start();
Test 28: 
Profile.initProfiler();
Profile.start("Constructor", "Constructor");
Profile.alloc("Constructor");

Test 29: 
Profile.clear();
Profile.end("San Francisco", "San Francisco");

Test 30: 
Profile.setFileName("profile_for_JohnDoe@example.com.txt");

Test 31: 
Profile.initProfiler();
Profile.stop();
Profile.start("profile_test", "profile_test2");

Test 32: 
Profile.initProfiler();
Profile.start("01/01/2023", "date");
Profile.start("02/02/2023", "date");
Profile.end("01/01/2023", "date");
Profile.start("03/03/2023", "date");

Test 33: 
Profile.initProfiler();
Profile.start("date", "date");
Profile.end("date", "date");

Test 34: 
Profile.initProfiler();
Profile.start("l_<@", "l_<@");
Profile.beginWait("l_<@", "l_<@");

Test 35: 
Profile.initProfiler();
Profile.start("My profile name", "My profile name");
Profile.endWait("My profile name", "My profile name");

Test 36: 
Profile.initProfiler();
Profile.start("lc_<@", "lc_<@");

Test 37: 
Profile.clear();
Profile.unwind(";i3hfE>r),0~g", "John Doe", "johndoe@example.com");

Test 38: 
Profile.initProfiler();
Profile.start("Data Preparation", "Data Preparation");
Profile profile = new Profile();
((Profile)"Data Preparation").run();
String string = "Cleanup";
String string = "Termination";
String string = "Unwinding";
Profile.unwind(string, string, string);

Test 39: 
Profile.initProfiler();

Test 40: 
Profile.initProfiler();
Profile.start("(jRv5", "userLogin");
Profile.start("@V)m?x@l*sYP+@n3by", "loginButtonClicked");

Test 41: 
Profile.initProfiler();
Profile.shutdown();
Profile.alloc("Test");

Test 42: 
Profile.initProfiler();
Profile.start("lc_<@", "lc_<@");
Profile.alloc("Hello World!");

Test 43: 
Profile.initProfiler();
Profile.start("2023-02-28", "date");
Profile.alloc("February 28, 2023");

Test 44: 
Profile.getThreadTotalTime(1059L);

Test 45: 

Test 46: 
Comparator<Frame> comparator = (Comparator<Frame>) mock(Comparator.class, new ViolatedAssumptionAnswer());
Profile.sortFrameList(comparator);
Profile.sortFrameList(comparator);
Profile.sortFrameList(comparator);
Profile.sortFrameList(comparator);

Test 47: 
Profile.clear();
Profile.start("Profile Name", "Profile Description");
Profile.shutdown();

Test 48: 
Profile.initProfiler();
Profile.interactions(1000L);

Test 49: 
Profile.initProfiler();

Test 50: 
FileSystemHandling.shouldAllThrowIOExceptions();
Profile.initProfiler();
Profile.start("Testing profile", "test");

Test 51: 
Profile.initProfiler();
Profile.start();


* Minimizing test suite
* test suite isTestSuite: 27
Test 0: 
// Undeclared exception!
try { 
  Profile.allocations();
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.mentorgen.tools.profile.runtime.Profile", e);
}

Test 1: 
Profile.initProfiler();
Profile.start("lc_<@", "lc_<@");
Profile.unwind("lc_<@", "lc_<@", "lc_<@");
Test 2: 
Profile.initProfiler();
Profile.start();
Test 3: 
// Undeclared exception!
try { 
  Profile.setFileName("profile_for_JohnDoe@example.com.txt");
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.mentorgen.tools.profile.runtime.Profile", e);
}

Test 4: 
Profile.initProfiler();
Profile.stop();
Profile.start("profile_test", "profile_test2");
Test 5: 
Profile.initProfiler();
Profile.start("date", "date");
Profile.start("date", "date");
Profile.end("date", "date");
Profile.start("date", "date");
Test 6: 
Profile.initProfiler();
Profile.start("01/01/2023", "date");
Profile.end("01/01/2023", "date");
Test 7: 
Profile.initProfiler();
Profile.start("l_<@", "l_<@");
Profile.beginWait("l_<@", "l_<@");
Test 8: 
Profile.initProfiler();
Profile.start("My profile name", "My profile name");
Profile.endWait("My profile name", "My profile name");
Test 9: 
Profile.clear();
Profile.unwind(";i3hfE>r),0~g", "John Doe", "johndoe@example.com");
Test 10: 
Profile.initProfiler();
Profile.start("Unwinding ", "Unwinding ");
Profile profile = new Profile();
profile.run();
Profile.unwind("Unwinding ", "Unwinding ", "Unwinding ");
Test 11: 
Profile.initProfiler();
Profile.start("02/02/2023", "date");
Profile.end("01/01/2023", "date");
Test 12: 
Profile.initProfiler();
Profile.start("mY]b CJrq9_,}/7)871", "mY]b CJrq9_,}/7)871");
Profile.endWait("mY]b CJrq9_,}/7)871", "bnYe,h");
Test 13: 
Profile.initProfiler();
Profile.start("(jRv5", "(jRv5");
Profile.start("@V)m?x@l*sYP+@n3by", "(jRv5");
Profile.beginWait("UW_6a+(+vmK3xu2&Y}", "(jRv5");
Test 14: 
Profile.initProfiler();
Profile.shutdown();
Profile.alloc("Test");
Test 15: 
Profile.initProfiler();
Profile.start("2023-02-28", "date");
Profile.alloc("February 28, 2023");
Test 16: 
Profile.initProfiler();
Profile.start("Constructor", "Constructor");
Profile.alloc("Constructor");
Test 17: 
Profile.initProfiler();
Profile.start("<init>", "<init>");
Profile.alloc("<init>");
Test 18: 
Profile.initProfiler();
Profile.alloc("@");
Profile.alloc("@");
Test 19: 
Profile.frameList();
Test 20: 
// Undeclared exception!
try { 
  Profile.getThreadTotalTime(1059L);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 21: 
Profile.init();
Test 22: 
Comparator<Frame> comparator = (Comparator<Frame>) mock(Comparator.class, new ViolatedAssumptionAnswer());
// Undeclared exception!
try { 
  Profile.sortFrameList(comparator);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
}

Test 23: 
Profile.clear();
Profile.start("", (String) null);
Profile.shutdown();
Test 24: 
Profile.initProfiler();
Profile.interactions(0L);
Test 25: 
Profile.initProfiler();
Profile.threads();
Test 26: 
FileSystemHandling.shouldAllThrowIOExceptions();
Profile.initProfiler();
Profile.start("@V)m?x@l*sYP+@n3by", "@");

* Going to analyze the coverage criteria
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 88%
* Total number of goals: 76
* Number of covered goals: 67
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 87%
* Total number of goals: 166
* Number of covered goals: 145
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 27%
* Total number of goals: 11
* Number of covered goals: 3
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 21
* Number of covered goals: 21
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 88%
* Total number of goals: 76
* Number of covered goals: 67
* Generated 27 tests with total length 71
* Resulting test suite's coverage: 83% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 16%
* Compiling and checking tests
Going to execute: removeTestsThatDoNotCompile
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: // Undeclared exception!
try { 
  Profile.allocations();
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.mentorgen.tools.profile.runtime.Profile", e);
}


** It was a parseable test case! 
refined test name is: testThrowNullPointerExceptionOnInvalidAllocations
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Profile.initProfiler();
Profile.start("lc_<@", "lc_<@");
Profile.unwind("lc_<@", "lc_<@", "lc_<@");

** It was a parseable test case! 
refined test name is: testProfileStartAndUnwind
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Profile.initProfiler();
Profile.start();

** It was a parseable test case! 
refined test name is: testProfiling
* Compiling Tests
refined test name is: testProfiler
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: // Undeclared exception!
try { 
  Profile.setFileName("profile_for_JohnDoe@example.com.txt");
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.mentorgen.tools.profile.runtime.Profile", e);
}


** It was a parseable test case! 
refined test name is: testSetFileNameWithNullThrowsNullPointerException
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Profile.initProfiler();
Profile.stop();
Profile.start("profile_test", "profile_test2");

** It was a parseable test case! 
refined test name is: testProfileStartStop
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Profile.initProfiler();
Profile.start("date", "date");
Profile.start("date", "date");
Profile.end("date", "date");
Profile.start("date", "date");

** It was a parseable test case! 
refined test name is: testProfiler
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Profile.initProfiler();
Profile.start("01/01/2023", "date");
Profile.end("01/01/2023", "date");

** It was a parseable test case! 
refined test name is: testInitAndStartAndEndProfile
* Compiling Tests
refined test name is: testInitAndStartAndEndProfile
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Profile.initProfiler();
Profile.start("l_<@", "l_<@");
Profile.beginWait("l_<@", "l_<@");

** It was a parseable test case! 
refined test name is: testProfileStartAndBeginWait
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Profile.initProfiler();
Profile.start("My profile name", "My profile name");
Profile.endWait("My profile name", "My profile name");

** It was a parseable test case! 
refined test name is: testProfilerEndsWithName
* Compiling Tests
refined test name is: testProfilerEndsWithName
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Profile.clear();
Profile.unwind(";i3hfE>r),0~g", "John Doe", "johndoe@example.com");

** It was a parseable test case! 
refined test name is: testClearAndUnwindProfile
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Profile.initProfiler();
Profile.start("Unwinding ", "Unwinding ");
Profile profile = new Profile();
profile.run();
Profile.unwind("Unwinding ", "Unwinding ", "Unwinding ");

** It was a parseable test case! 
refined test name is: testProfileSession
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Profile.initProfiler();
Profile.start("02/02/2023", "date");
Profile.end("01/01/2023", "date");

** It was a parseable test case! 
refined test name is: testMeasureExecutionTime
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Profile.initProfiler();
Profile.start("mY]b CJrq9_,}/7)871", "mY]b CJrq9_,}/7)871");
Profile.endWait("mY]b CJrq9_,}/7)871", "bnYe,h");

** It was a parseable test case! 
refined test name is: testMeasurePerformance
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Profile.initProfiler();
Profile.start("(jRv5", "(jRv5");
Profile.start("@V)m?x@l*sYP+@n3by", "(jRv5");
Profile.beginWait("UW_6a+(+vmK3xu2&Y}", "(jRv5");

** It was a parseable test case! 
refined test name is: testMethodName
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Profile.initProfiler();
Profile.shutdown();
Profile.alloc("Test");

** It was a parseable test case! 
refined test name is: testInitializeAndShutdownProfiler
* Compiling Tests
refined test name is: testShutdown
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Profile.initProfiler();
Profile.start("2023-02-28", "date");
Profile.alloc("February 28, 2023");

** It was a parseable test case! 
refined test name is: testInitializeProfilerWithDateAsLabel
* Compiling Tests
refined test name is: testInitializeProfilerForSpecificDate
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Profile.initProfiler();
Profile.start("Constructor", "Constructor");
Profile.alloc("Constructor");

** It was a parseable test case! 
refined test name is: testConstructorProfiling
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Profile.initProfiler();
Profile.start("<init>", "<init>");
Profile.alloc("<init>");

** It was a parseable test case! 
refined test name is: testInitProfiler
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Profile.initProfiler();
Profile.alloc("@");
Profile.alloc("@");

** It was a parseable test case! 
refined test name is: testAllocateMemoryForProfile
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Iterable<Frame> frameList = Profile.frameList();
assertNull(frameList);


** It was a parseable test case! 
refined test name is: testProfileFrameListReturnsNull
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: // Undeclared exception!
try { 
  Profile.getThreadTotalTime(1059L);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.mentorgen.tools.profile.runtime.Profile", e);
}


** It was a parseable test case! 
refined test name is: testGetThreadTotalTimeThrowsNPEWhenIdIsNull
* Compiling Tests
refined test name is: testGetThreadTotalTimeThrowsNPEWhenIdIsNull
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Profile.init();

** It was a parseable test case! 
refined test name is: testInitProfileWithDefaultValues
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Comparator<Frame> arg0 = (Comparator<Frame>) mock(Comparator.class, new ViolatedAssumptionAnswer());
// Undeclared exception!
try { 
  Profile.sortFrameList(arg0);
  fail("Expecting exception: NullPointerException");

} catch(NullPointerException e) {
   //
   // no message in exception (getMessage() returned null)
   //
   verifyException("com.mentorgen.tools.profile.runtime.Profile", e);
}


** It was a parseable test case! 
refined test name is: testSortFrameListWithNullComparatorThrowsException
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Profile.clear();
Profile.start("", (String) null);
Profile.shutdown();

** It was a parseable test case! 
refined test name is: testProfileStartAndShutdown
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Profile.initProfiler();
Iterable<Frame> interactions = Profile.interactions(0L);
assertNull(interactions);


** It was a parseable test case! 
refined test name is: testProfileInitialization
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: Profile.initProfiler();
Iterable<Long> threads = Profile.threads();
assertNotNull(threads);


** It was a parseable test case! 
refined test name is: testThreadsListIsNotNull
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: true
** Improve Understandability: ** Test Code is: FileSystemHandling.shouldAllThrowIOExceptions();
Profile.initProfiler();
Profile.start("@V)m?x@l*sYP+@n3by", "@");

** It was a parseable test case! 
refined test name is: testShouldAllThrowIOExceptions
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 02:23:07.410 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/tmp/EvoSuite_pathingJar2479846455355489029.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 02:23:07.461 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2479846455355489029.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 02:23:07.702 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/tmp/EvoSuite_pathingJar2479846455355489029.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 02:23:07.708 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2479846455355489029.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 02:23:07.909 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/tmp/EvoSuite_pathingJar2479846455355489029.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 02:23:07.911 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2479846455355489029.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 02:23:08.147 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/tmp/EvoSuite_pathingJar2479846455355489029.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 02:23:08.149 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2479846455355489029.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 02:23:08.251 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/tmp/EvoSuite_pathingJar2479846455355489029.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 02:23:08.253 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2479846455355489029.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 02:23:08.352 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/tmp/EvoSuite_pathingJar2479846455355489029.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 02:23:08.354 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2479846455355489029.jar
[MASTER] 02:23:08.445 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/tmp/EvoSuite_pathingJar2479846455355489029.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 02:23:08.446 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2479846455355489029.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 02:23:08.533 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/tmp/EvoSuite_pathingJar2479846455355489029.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 02:23:08.535 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2479846455355489029.jar
[MASTER] 02:23:08.622 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/tmp/EvoSuite_pathingJar2479846455355489029.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 02:23:08.623 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2479846455355489029.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 02:23:08.705 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/tmp/EvoSuite_pathingJar2479846455355489029.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 02:23:08.707 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2479846455355489029.jar
[MASTER] 02:23:08.792 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/tmp/EvoSuite_pathingJar2479846455355489029.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 02:23:08.794 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2479846455355489029.jar
[MASTER] 02:23:08.884 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/tmp/EvoSuite_pathingJar2479846455355489029.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 02:23:08.888 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2479846455355489029.jar
[MASTER] 02:23:08.985 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/tmp/EvoSuite_pathingJar2479846455355489029.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 02:23:08.988 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2479846455355489029.jar
[MASTER] 02:23:09.091 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/tmp/EvoSuite_pathingJar2479846455355489029.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 02:23:09.093 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2479846455355489029.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 02:23:09.171 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/tmp/EvoSuite_pathingJar2479846455355489029.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 02:23:09.173 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2479846455355489029.jar
[MASTER] 02:23:09.239 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/tmp/EvoSuite_pathingJar2479846455355489029.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 02:23:09.240 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2479846455355489029.jar
[MASTER] 02:23:09.310 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/tmp/EvoSuite_pathingJar2479846455355489029.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 02:23:09.312 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2479846455355489029.jar
[MASTER] 02:23:09.382 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/tmp/EvoSuite_pathingJar2479846455355489029.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 02:23:09.385 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2479846455355489029.jar
[MASTER] 02:23:09.558 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/tmp/EvoSuite_pathingJar2479846455355489029.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 02:23:09.561 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2479846455355489029.jar
[MASTER] 02:23:09.640 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/tmp/EvoSuite_pathingJar2479846455355489029.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 02:23:09.642 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2479846455355489029.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 0 called: 0 to improve: false
[MASTER] 02:23:09.724 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/tmp/EvoSuite_pathingJar2479846455355489029.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 02:23:09.726 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2479846455355489029.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 02:23:09.797 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/tmp/EvoSuite_pathingJar2479846455355489029.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 02:23:09.799 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2479846455355489029.jar
[MASTER] 02:23:09.889 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/tmp/EvoSuite_pathingJar2479846455355489029.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 02:23:09.891 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2479846455355489029.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 02:23:09.964 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/tmp/EvoSuite_pathingJar2479846455355489029.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 02:23:09.965 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2479846455355489029.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 02:23:10.038 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/tmp/EvoSuite_pathingJar2479846455355489029.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 02:23:10.040 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2479846455355489029.jar
[MASTER] 02:23:10.111 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/tmp/EvoSuite_pathingJar2479846455355489029.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 02:23:10.113 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2479846455355489029.jar
[MASTER] 02:23:10.197 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/tmp/EvoSuite_pathingJar2479846455355489029.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
[MASTER] 02:23:10.199 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2479846455355489029.jar
** Write a test suite: 2 called: 0 to improve: false
** Write a test suite: 6 called: 1 to improve: false
** Write a test suite: 8 called: 2 to improve: false
** Write a test suite: 14 called: 3 to improve: false
** Write a test suite: 15 called: 4 to improve: false
** Write a test suite: 20 called: 5 to improve: false
[MASTER] 02:23:10.656 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/tmp/EvoSuite_pathingJar2479846455355489029.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 02:23:10.659 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2479846455355489029.jar
Going to execute: handleTestsThatAreUnstable
* Compiling Tests
** Write a test suite: 6 called: 0 to improve: false
** Write a test suite: 11 called: 1 to improve: false
** Write a test suite: 12 called: 2 to improve: false
** Write a test suite: 18 called: 3 to improve: false
** Write a test suite: 20 called: 4 to improve: false
** Write a test suite: 24 called: 5 to improve: false
[MASTER] 02:23:11.112 [logback-1] WARN  AgentLoader - Failed to find EvoSuite jar in current classloader. URLs of classloader:
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/localedata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunjce_provider.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/../lib/tools.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunpkcs11.jar
file:/tmp/EvoSuite_pathingJar2479846455355489029.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jaccess.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/sunec.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/zipfs.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/jfxrt.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/dnsns.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/cldrdata.jar
file:/home/ubuntu/.sdkman/candidates/java/8.0.333.fx-librca/jre/lib/ext/nashorn.jar
[MASTER] 02:23:11.114 [logback-1] WARN  JUnitAnalyzer - Found unstable test named initializationError -> class java.lang.RuntimeException: Cannot find either the compilation target folder nor the EvoSuite jar in classpath: /tmp/EvoSuite_pathingJar2479846455355489029.jar
* Writing tests to file
* Writing JUnit test case 'Profile_ESTest' to evosuite-tests
** Write a test suite: 6 called: 0 to improve: false
** Write a test suite: 11 called: 1 to improve: false
** Write a test suite: 12 called: 2 to improve: false
** Write a test suite: 18 called: 3 to improve: false
** Write a test suite: 20 called: 4 to improve: false
** Write a test suite: 24 called: 5 to improve: false
* Done!

* Computation finished
