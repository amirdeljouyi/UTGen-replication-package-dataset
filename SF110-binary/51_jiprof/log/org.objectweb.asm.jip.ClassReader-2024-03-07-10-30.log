* EvoSuite 1.2.0
* WARNING - Generating JUnit 5 tests with the option to use a separate classloader will result in not runnable tests. Set either -Dtest_format=JUNIT4 or -Duse_separate_classloader=false
* Going to generate test cases for class: org.objectweb.asm.jip.ClassReader
* Starting Client-0
* Properties loaded from /home/roham/Results-Utestgen/dataset/SF110-ES-res/51_jiprof/evosuite-files/evosuite.properties
* Connecting to master process on port 21959
* Analyzing classpath: 
* Inheritance tree loaded from evosuite-files/inheritance.xml.gz
* Finished analyzing classpath
* Generating tests for class org.objectweb.asm.jip.ClassReader
* Test criteria:
  - Branch Coverage
  - Line Coverage
  - Method-Output Coverage
  - Top-Level Method Coverage
  - Context Branch Coverage
* Total number of test goals for DYNAMOSA: 2586
* Using seed 1709807400698
[Progress:>                             0%] [Cov:>                                  0%]* Starting evolution
* Initial Number of Goals in DynaMOSA = 242 / 2586
[Progress:>                             0%] [Cov:=>                                 3%][Progress:>                             0%] [Cov:=>                                 3%][Progress:=>                            6%] [Cov:=>                                 3%][Progress:=>                            6%] [Cov:==>                                8%][Progress:=>                            6%] [Cov:==>                                8%][Progress:=>                            6%] [Cov:===>                               9%][Progress:==>                           7%] [Cov:========>                          25%][Progress:==>                           7%] [Cov:===========>                       34%][Progress:==>                           8%] [Cov:============>                      37%][Progress:===>                          10%] [Cov:===============>                   45%][Progress:===>                          11%] [Cov:================>                  46%][Progress:====>                         14%] [Cov:================>                  48%][Progress:=====>                        17%] [Cov:=================>                 50%][Progress:======>                       20%] [Cov:=================>                 51%][Progress:=======>                      25%] [Cov:=================>                 51%][Progress:=========>                    30%] [Cov:==================>                54%][Progress:==========>                   36%] [Cov:====================>              58%][Progress:=============>                45%] [Cov:====================>              58%][Progress:==============>               48%] [Cov:====================>              58%][Progress:===============>              51%] [Cov:====================>              58%][Progress:================>             54%] [Cov:====================>              58%][Progress:================>             55%] [Cov:====================>              59%][Progress:=================>            59%] [Cov:====================>              59%][Progress:==================>           61%] [Cov:====================>              59%][Progress:===================>          64%] [Cov:=====================>             60%][Progress:====================>         67%] [Cov:=====================>             60%][Progress:====================>         69%] [Cov:=====================>             61%][Progress:=====================>        70%] [Cov:=====================>             61%][Progress:=======================>      77%] [Cov:=====================>             61%][Progress:========================>     83%] [Cov:=====================>             61%][Progress:========================>     83%] [Cov:=====================>             61%][Progress:=========================>    84%] [Cov:=====================>             61%][Progress:=========================>    85%] [Cov:=====================>             62%][Progress:=========================>    86%] [Cov:=====================>             62%][Progress:==========================>   88%] [Cov:=====================>             62%][Progress:==========================>   89%] [Cov:=====================>             62%][Progress:============================> 96%] [Cov:=====================>             62%][Progress:=============================>98%] [Cov:=====================>             62%][Progress:==============================100%] [Cov:=====================>             62%][Progress:==============================100%] [Cov:=====================>             62%]
* Search finished after 102s and 39 generations, 20436 statements, best individual has fitness: 1155.0
* Minimizing test suite
* Going to analyze the coverage criteria
* Coverage analysis for criterion BRANCH
* Coverage of criterion BRANCH: 51%
* Total number of goals: 817
* Number of covered goals: 415
* Coverage analysis for criterion LINE
* Coverage of criterion LINE: 64%
* Total number of goals: 891
* Number of covered goals: 574
* Coverage analysis for criterion OUTPUT
* Coverage of criterion OUTPUT: 48%
* Total number of goals: 40
* Number of covered goals: 19
* Coverage analysis for criterion METHOD
* Coverage of criterion METHOD: 100%
* Total number of goals: 21
* Number of covered goals: 21
* Coverage analysis for criterion CBRANCH
* Coverage of criterion CBRANCH: 50%
* Total number of goals: 817
* Number of covered goals: 412
* Generated 39 tests with total length 105
* Resulting test suite's coverage: 62% (average coverage for all fitness functions)
* Generating assertions
* Resulting test suite's mutation score: 30%
* Compiling and checking tests
* Permissions denied during test execution: 
  - java.lang.RuntimePermission: 
         writeFileDescriptor: 3
* Writing tests to file
* Writing JUnit test case 'ClassReader_ESTest' to evosuite-tests
* Done!

* Computation finished
